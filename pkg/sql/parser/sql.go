// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) compositeTypeList() []tree.CompositeTypeElem {
	return u.val.([]tree.CompositeTypeElem)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionParams() tree.FuncParams {
	return u.val.(tree.FuncParams)
}
func (u *sqlSymUnion) functionParam() tree.FuncParam {
	return u.val.(tree.FuncParam)
}
func (u *sqlSymUnion) functionParamClass() tree.FuncParamClass {
	return u.val.(tree.FuncParamClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:985
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const AT_AT = lexbase.AT_AT
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const EXTREMES = lexbase.EXTREMES
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INDEX_BEFORE_PAREN = lexbase.INDEX_BEFORE_PAREN
const INDEX_BEFORE_NAME_THEN_PAREN = lexbase.INDEX_BEFORE_NAME_THEN_PAREN
const INDEX_AFTER_ORDER_BY_BEFORE_AT = lexbase.INDEX_AFTER_ORDER_BY_BEFORE_AT
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTHING_AFTER_RETURNING = lexbase.NOTHING_AFTER_RETURNING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLISTEN = lexbase.UNLISTEN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"AT_AT",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"EXTREMES",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INDEX_BEFORE_PAREN",
	"INDEX_BEFORE_NAME_THEN_PAREN",
	"INDEX_AFTER_ORDER_BY_BEFORE_AT",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTHING_AFTER_RETURNING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:16056

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1948,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 65,
	289, 584,
	-2, 0,
	-1, 77,
	8, 1075,
	29, 1075,
	657, 1075,
	658, 1075,
	-2, 0,
	-1, 78,
	8, 1075,
	29, 1075,
	657, 1075,
	658, 1075,
	-2, 0,
	-1, 81,
	171, 1213,
	287, 1213,
	433, 1174,
	508, 1174,
	555, 1174,
	575, 1213,
	577, 1174,
	-2, 0,
	-1, 82,
	1, 1795,
	141, 1795,
	276, 1795,
	364, 1795,
	428, 1795,
	438, 1795,
	638, 1795,
	670, 1795,
	-2, 0,
	-1, 83,
	1, 1795,
	670, 1795,
	-2, 0,
	-1, 89,
	269, 296,
	572, 296,
	-2, 0,
	-1, 104,
	207, 484,
	252, 1669,
	271, 1669,
	289, 484,
	430, 484,
	442, 1405,
	486, 484,
	503, 1405,
	556, 1405,
	585, 484,
	614, 1405,
	-2, 0,
	-1, 112,
	143, 1948,
	264, 1948,
	597, 1948,
	598, 1948,
	-2, 0,
	-1, 130,
	163, 1919,
	185, 1919,
	198, 1919,
	267, 1919,
	303, 1919,
	378, 1919,
	389, 1919,
	591, 1919,
	-2, 1890,
	-1, 179,
	4, 1950,
	21, 1950,
	22, 1950,
	23, 1950,
	24, 1950,
	25, 1950,
	26, 1950,
	27, 1950,
	28, 1950,
	30, 1950,
	31, 1950,
	37, 1950,
	42, 1950,
	44, 1950,
	45, 1950,
	46, 1950,
	48, 1950,
	49, 1950,
	50, 1950,
	51, 1950,
	52, 1950,
	53, 1950,
	54, 1950,
	55, 1950,
	56, 1950,
	58, 1950,
	59, 1950,
	60, 1950,
	61, 1950,
	63, 1950,
	64, 1950,
	65, 1950,
	66, 1950,
	67, 1950,
	68, 1950,
	69, 1950,
	70, 1950,
	74, 1950,
	75, 1950,
	76, 1950,
	77, 1950,
	79, 1950,
	80, 1950,
	81, 1950,
	85, 1950,
	86, 1950,
	87, 1950,
	88, 1950,
	89, 1950,
	90, 1950,
	91, 1950,
	92, 1950,
	95, 1950,
	96, 1950,
	97, 1950,
	98, 1950,
	99, 1950,
	100, 1950,
	102, 1950,
	104, 1950,
	105, 1950,
	106, 1950,
	107, 1950,
	108, 1950,
	109, 1950,
	110, 1950,
	112, 1950,
	113, 1950,
	114, 1950,
	116, 1950,
	117, 1950,
	118, 1950,
	126, 1950,
	127, 1950,
	128, 1950,
	129, 1950,
	130, 1950,
	132, 1950,
	133, 1950,
	134, 1950,
	135, 1950,
	137, 1950,
	138, 1950,
	139, 1950,
	140, 1950,
	142, 1950,
	143, 1950,
	144, 1950,
	145, 1950,
	147, 1950,
	148, 1950,
	149, 1950,
	152, 1950,
	153, 1950,
	154, 1950,
	156, 1950,
	157, 1950,
	158, 1950,
	160, 1950,
	161, 1950,
	162, 1950,
	164, 1950,
	165, 1950,
	166, 1950,
	167, 1950,
	168, 1950,
	169, 1950,
	170, 1950,
	171, 1950,
	172, 1950,
	173, 1950,
	174, 1950,
	175, 1950,
	176, 1950,
	177, 1950,
	178, 1950,
	179, 1950,
	180, 1950,
	181, 1950,
	182, 1950,
	184, 1950,
	190, 1950,
	191, 1950,
	192, 1950,
	193, 1950,
	197, 1950,
	199, 1950,
	200, 1950,
	201, 1950,
	203, 1950,
	204, 1950,
	207, 1950,
	208, 1950,
	209, 1950,
	210, 1950,
	211, 1950,
	212, 1950,
	213, 1950,
	214, 1950,
	215, 1950,
	216, 1950,
	217, 1950,
	218, 1950,
	219, 1950,
	220, 1950,
	222, 1950,
	223, 1950,
	225, 1950,
	226, 1950,
	228, 1950,
	229, 1950,
	230, 1950,
	231, 1950,
	232, 1950,
	233, 1950,
	234, 1950,
	235, 1950,
	236, 1950,
	237, 1950,
	238, 1950,
	240, 1950,
	241, 1950,
	242, 1950,
	244, 1950,
	245, 1950,
	246, 1950,
	247, 1950,
	248, 1950,
	252, 1950,
	253, 1950,
	254, 1950,
	255, 1950,
	257, 1950,
	258, 1950,
	259, 1950,
	261, 1950,
	262, 1950,
	263, 1950,
	264, 1950,
	265, 1950,
	266, 1950,
	268, 1950,
	270, 1950,
	271, 1950,
	272, 1950,
	274, 1950,
	276, 1950,
	277, 1950,
	278, 1950,
	280, 1950,
	284, 1950,
	285, 1950,
	286, 1950,
	287, 1950,
	288, 1950,
	289, 1950,
	290, 1950,
	292, 1950,
	293, 1950,
	294, 1950,
	296, 1950,
	297, 1950,
	298, 1950,
	300, 1950,
	301, 1950,
	304, 1950,
	305, 1950,
	306, 1950,
	307, 1950,
	308, 1950,
	309, 1950,
	310, 1950,
	313, 1950,
	314, 1950,
	315, 1950,
	316, 1950,
	318, 1950,
	319, 1950,
	320, 1950,
	321, 1950,
	322, 1950,
	323, 1950,
	324, 1950,
	325, 1950,
	326, 1950,
	327, 1950,
	328, 1950,
	329, 1950,
	330, 1950,
	331, 1950,
	332, 1950,
	333, 1950,
	334, 1950,
	335, 1950,
	336, 1950,
	337, 1950,
	338, 1950,
	339, 1950,
	340, 1950,
	342, 1950,
	344, 1950,
	345, 1950,
	346, 1950,
	347, 1950,
	348, 1950,
	349, 1950,
	350, 1950,
	351, 1950,
	352, 1950,
	353, 1950,
	354, 1950,
	355, 1950,
	356, 1950,
	357, 1950,
	358, 1950,
	359, 1950,
	360, 1950,
	362, 1950,
	363, 1950,
	365, 1950,
	366, 1950,
	368, 1950,
	369, 1950,
	370, 1950,
	371, 1950,
	373, 1950,
	374, 1950,
	375, 1950,
	376, 1950,
	377, 1950,
	380, 1950,
	382, 1950,
	384, 1950,
	385, 1950,
	386, 1950,
	387, 1950,
	390, 1950,
	391, 1950,
	392, 1950,
	394, 1950,
	396, 1950,
	397, 1950,
	398, 1950,
	399, 1950,
	400, 1950,
	401, 1950,
	402, 1950,
	403, 1950,
	404, 1950,
	405, 1950,
	406, 1950,
	407, 1950,
	408, 1950,
	409, 1950,
	411, 1950,
	412, 1950,
	413, 1950,
	414, 1950,
	415, 1950,
	416, 1950,
	417, 1950,
	418, 1950,
	419, 1950,
	420, 1950,
	421, 1950,
	422, 1950,
	423, 1950,
	424, 1950,
	425, 1950,
	427, 1950,
	428, 1950,
	429, 1950,
	431, 1950,
	432, 1950,
	433, 1950,
	434, 1950,
	435, 1950,
	436, 1950,
	437, 1950,
	438, 1950,
	439, 1950,
	440, 1950,
	441, 1950,
	442, 1950,
	443, 1950,
	444, 1950,
	446, 1950,
	448, 1950,
	449, 1950,
	450, 1950,
	456, 1950,
	457, 1950,
	458, 1950,
	460, 1950,
	461, 1950,
	462, 1950,
	463, 1950,
	464, 1950,
	465, 1950,
	466, 1950,
	467, 1950,
	468, 1950,
	469, 1950,
	470, 1950,
	472, 1950,
	473, 1950,
	474, 1950,
	475, 1950,
	476, 1950,
	478, 1950,
	479, 1950,
	480, 1950,
	481, 1950,
	482, 1950,
	483, 1950,
	484, 1950,
	486, 1950,
	487, 1950,
	488, 1950,
	489, 1950,
	490, 1950,
	491, 1950,
	492, 1950,
	493, 1950,
	494, 1950,
	495, 1950,
	496, 1950,
	497, 1950,
	498, 1950,
	499, 1950,
	500, 1950,
	501, 1950,
	503, 1950,
	504, 1950,
	505, 1950,
	506, 1950,
	507, 1950,
	508, 1950,
	510, 1950,
	511, 1950,
	512, 1950,
	513, 1950,
	514, 1950,
	515, 1950,
	516, 1950,
	518, 1950,
	519, 1950,
	520, 1950,
	521, 1950,
	522, 1950,
	523, 1950,
	524, 1950,
	525, 1950,
	527, 1950,
	529, 1950,
	530, 1950,
	531, 1950,
	532, 1950,
	533, 1950,
	534, 1950,
	535, 1950,
	536, 1950,
	537, 1950,
	538, 1950,
	539, 1950,
	540, 1950,
	541, 1950,
	542, 1950,
	543, 1950,
	544, 1950,
	545, 1950,
	546, 1950,
	547, 1950,
	548, 1950,
	549, 1950,
	551, 1950,
	552, 1950,
	554, 1950,
	555, 1950,
	557, 1950,
	558, 1950,
	559, 1950,
	560, 1950,
	561, 1950,
	562, 1950,
	564, 1950,
	565, 1950,
	567, 1950,
	568, 1950,
	569, 1950,
	570, 1950,
	571, 1950,
	573, 1950,
	575, 1950,
	576, 1950,
	577, 1950,
	578, 1950,
	579, 1950,
	580, 1950,
	581, 1950,
	582, 1950,
	584, 1950,
	585, 1950,
	586, 1950,
	587, 1950,
	588, 1950,
	589, 1950,
	590, 1950,
	593, 1950,
	594, 1950,
	595, 1950,
	596, 1950,
	597, 1950,
	598, 1950,
	599, 1950,
	600, 1950,
	601, 1950,
	603, 1950,
	606, 1950,
	607, 1950,
	608, 1950,
	609, 1950,
	610, 1950,
	611, 1950,
	613, 1950,
	614, 1950,
	615, 1950,
	616, 1950,
	617, 1950,
	618, 1950,
	619, 1950,
	620, 1950,
	621, 1950,
	622, 1950,
	623, 1950,
	624, 1950,
	629, 1950,
	630, 1950,
	631, 1950,
	632, 1950,
	633, 1950,
	634, 1950,
	-2, 0,
	-1, 181,
	1, 1795,
	670, 1795,
	673, 1795,
	-2, 0,
	-1, 182,
	1, 1795,
	572, 1795,
	670, 1795,
	673, 1795,
	-2, 0,
	-1, 220,
	163, 1918,
	185, 1918,
	198, 1918,
	267, 1918,
	303, 1918,
	378, 1918,
	389, 1918,
	591, 1918,
	-2, 1893,
	-1, 281,
	4, 1957,
	5, 1957,
	6, 1957,
	7, 1957,
	8, 1957,
	9, 1957,
	10, 1957,
	21, 1957,
	22, 1957,
	23, 1957,
	24, 1957,
	25, 1957,
	26, 1957,
	27, 1957,
	28, 1957,
	30, 1957,
	31, 1957,
	37, 1957,
	38, 1957,
	42, 1957,
	44, 1957,
	45, 1957,
	46, 1957,
	47, 1957,
	48, 1957,
	49, 1957,
	50, 1957,
	51, 1957,
	52, 1957,
	53, 1957,
	54, 1957,
	55, 1957,
	56, 1957,
	58, 1957,
	59, 1957,
	60, 1957,
	61, 1957,
	63, 1957,
	64, 1957,
	65, 1957,
	66, 1957,
	67, 1957,
	68, 1957,
	69, 1957,
	70, 1957,
	71, 1957,
	72, 1957,
	73, 1957,
	74, 1957,
	75, 1957,
	76, 1957,
	77, 1957,
	79, 1957,
	80, 1957,
	81, 1957,
	83, 1957,
	85, 1957,
	86, 1957,
	87, 1957,
	88, 1957,
	89, 1957,
	90, 1957,
	91, 1957,
	92, 1957,
	95, 1957,
	96, 1957,
	97, 1957,
	98, 1957,
	99, 1957,
	100, 1957,
	102, 1957,
	104, 1957,
	105, 1957,
	106, 1957,
	107, 1957,
	108, 1957,
	109, 1957,
	110, 1957,
	112, 1957,
	113, 1957,
	114, 1957,
	115, 1957,
	116, 1957,
	117, 1957,
	118, 1957,
	119, 1957,
	120, 1957,
	121, 1957,
	122, 1957,
	123, 1957,
	124, 1957,
	125, 1957,
	126, 1957,
	127, 1957,
	128, 1957,
	129, 1957,
	130, 1957,
	131, 1957,
	132, 1957,
	133, 1957,
	134, 1957,
	135, 1957,
	136, 1957,
	137, 1957,
	138, 1957,
	139, 1957,
	140, 1957,
	142, 1957,
	143, 1957,
	144, 1957,
	145, 1957,
	147, 1957,
	148, 1957,
	149, 1957,
	152, 1957,
	153, 1957,
	154, 1957,
	156, 1957,
	157, 1957,
	158, 1957,
	160, 1957,
	161, 1957,
	162, 1957,
	164, 1957,
	165, 1957,
	166, 1957,
	167, 1957,
	168, 1957,
	169, 1957,
	170, 1957,
	171, 1957,
	172, 1957,
	173, 1957,
	174, 1957,
	175, 1957,
	176, 1957,
	177, 1957,
	178, 1957,
	179, 1957,
	180, 1957,
	181, 1957,
	182, 1957,
	183, 1957,
	184, 1957,
	190, 1957,
	191, 1957,
	192, 1957,
	193, 1957,
	197, 1957,
	199, 1957,
	200, 1957,
	201, 1957,
	203, 1957,
	204, 1957,
	206, 1957,
	207, 1957,
	208, 1957,
	209, 1957,
	210, 1957,
	211, 1957,
	212, 1957,
	213, 1957,
	214, 1957,
	215, 1957,
	216, 1957,
	217, 1957,
	218, 1957,
	219, 1957,
	220, 1957,
	222, 1957,
	223, 1957,
	225, 1957,
	226, 1957,
	228, 1957,
	229, 1957,
	230, 1957,
	231, 1957,
	232, 1957,
	233, 1957,
	234, 1957,
	235, 1957,
	236, 1957,
	237, 1957,
	238, 1957,
	239, 1957,
	240, 1957,
	241, 1957,
	242, 1957,
	244, 1957,
	245, 1957,
	246, 1957,
	247, 1957,
	248, 1957,
	252, 1957,
	253, 1957,
	254, 1957,
	255, 1957,
	257, 1957,
	258, 1957,
	259, 1957,
	260, 1957,
	261, 1957,
	262, 1957,
	263, 1957,
	264, 1957,
	265, 1957,
	266, 1957,
	268, 1957,
	270, 1957,
	271, 1957,
	272, 1957,
	273, 1957,
	274, 1957,
	275, 1957,
	276, 1957,
	277, 1957,
	278, 1957,
	279, 1957,
	280, 1957,
	284, 1957,
	285, 1957,
	286, 1957,
	287, 1957,
	288, 1957,
	289, 1957,
	290, 1957,
	292, 1957,
	293, 1957,
	294, 1957,
	296, 1957,
	297, 1957,
	298, 1957,
	299, 1957,
	300, 1957,
	301, 1957,
	302, 1957,
	304, 1957,
	305, 1957,
	306, 1957,
	307, 1957,
	308, 1957,
	309, 1957,
	310, 1957,
	311, 1957,
	312, 1957,
	313, 1957,
	314, 1957,
	315, 1957,
	316, 1957,
	318, 1957,
	319, 1957,
	320, 1957,
	321, 1957,
	322, 1957,
	323, 1957,
	324, 1957,
	325, 1957,
	326, 1957,
	327, 1957,
	328, 1957,
	329, 1957,
	330, 1957,
	331, 1957,
	332, 1957,
	333, 1957,
	334, 1957,
	335, 1957,
	336, 1957,
	337, 1957,
	338, 1957,
	339, 1957,
	340, 1957,
	342, 1957,
	343, 1957,
	344, 1957,
	345, 1957,
	346, 1957,
	347, 1957,
	348, 1957,
	349, 1957,
	350, 1957,
	351, 1957,
	352, 1957,
	353, 1957,
	354, 1957,
	355, 1957,
	356, 1957,
	357, 1957,
	358, 1957,
	359, 1957,
	360, 1957,
	361, 1957,
	362, 1957,
	363, 1957,
	364, 1957,
	365, 1957,
	366, 1957,
	367, 1957,
	368, 1957,
	369, 1957,
	370, 1957,
	371, 1957,
	372, 1957,
	373, 1957,
	374, 1957,
	375, 1957,
	376, 1957,
	377, 1957,
	380, 1957,
	382, 1957,
	385, 1957,
	386, 1957,
	387, 1957,
	390, 1957,
	391, 1957,
	392, 1957,
	393, 1957,
	394, 1957,
	395, 1957,
	396, 1957,
	397, 1957,
	398, 1957,
	399, 1957,
	400, 1957,
	401, 1957,
	402, 1957,
	403, 1957,
	404, 1957,
	405, 1957,
	406, 1957,
	407, 1957,
	408, 1957,
	409, 1957,
	411, 1957,
	412, 1957,
	413, 1957,
	414, 1957,
	415, 1957,
	416, 1957,
	417, 1957,
	418, 1957,
	419, 1957,
	420, 1957,
	421, 1957,
	422, 1957,
	423, 1957,
	424, 1957,
	425, 1957,
	427, 1957,
	428, 1957,
	429, 1957,
	431, 1957,
	432, 1957,
	433, 1957,
	434, 1957,
	435, 1957,
	436, 1957,
	437, 1957,
	438, 1957,
	439, 1957,
	440, 1957,
	441, 1957,
	442, 1957,
	443, 1957,
	444, 1957,
	446, 1957,
	448, 1957,
	449, 1957,
	450, 1957,
	456, 1957,
	457, 1957,
	458, 1957,
	460, 1957,
	461, 1957,
	462, 1957,
	463, 1957,
	464, 1957,
	465, 1957,
	466, 1957,
	467, 1957,
	468, 1957,
	469, 1957,
	470, 1957,
	472, 1957,
	473, 1957,
	474, 1957,
	475, 1957,
	476, 1957,
	477, 1957,
	478, 1957,
	479, 1957,
	480, 1957,
	481, 1957,
	482, 1957,
	483, 1957,
	484, 1957,
	486, 1957,
	487, 1957,
	488, 1957,
	489, 1957,
	490, 1957,
	491, 1957,
	492, 1957,
	493, 1957,
	494, 1957,
	495, 1957,
	496, 1957,
	497, 1957,
	498, 1957,
	499, 1957,
	500, 1957,
	501, 1957,
	503, 1957,
	504, 1957,
	505, 1957,
	506, 1957,
	507, 1957,
	508, 1957,
	509, 1957,
	510, 1957,
	511, 1957,
	512, 1957,
	513, 1957,
	514, 1957,
	515, 1957,
	516, 1957,
	517, 1957,
	518, 1957,
	519, 1957,
	520, 1957,
	521, 1957,
	522, 1957,
	523, 1957,
	524, 1957,
	525, 1957,
	527, 1957,
	529, 1957,
	530, 1957,
	531, 1957,
	532, 1957,
	533, 1957,
	534, 1957,
	535, 1957,
	536, 1957,
	537, 1957,
	538, 1957,
	539, 1957,
	540, 1957,
	541, 1957,
	542, 1957,
	543, 1957,
	544, 1957,
	545, 1957,
	546, 1957,
	547, 1957,
	548, 1957,
	549, 1957,
	551, 1957,
	552, 1957,
	553, 1957,
	554, 1957,
	555, 1957,
	557, 1957,
	558, 1957,
	559, 1957,
	560, 1957,
	561, 1957,
	562, 1957,
	564, 1957,
	565, 1957,
	567, 1957,
	568, 1957,
	569, 1957,
	570, 1957,
	571, 1957,
	573, 1957,
	575, 1957,
	576, 1957,
	577, 1957,
	578, 1957,
	579, 1957,
	580, 1957,
	581, 1957,
	582, 1957,
	583, 1957,
	584, 1957,
	585, 1957,
	586, 1957,
	587, 1957,
	588, 1957,
	589, 1957,
	590, 1957,
	592, 1957,
	593, 1957,
	594, 1957,
	595, 1957,
	596, 1957,
	597, 1957,
	598, 1957,
	599, 1957,
	600, 1957,
	601, 1957,
	602, 1957,
	603, 1957,
	606, 1957,
	607, 1957,
	608, 1957,
	609, 1957,
	610, 1957,
	611, 1957,
	613, 1957,
	614, 1957,
	615, 1957,
	616, 1957,
	617, 1957,
	618, 1957,
	619, 1957,
	620, 1957,
	621, 1957,
	622, 1957,
	623, 1957,
	624, 1957,
	629, 1957,
	630, 1957,
	631, 1957,
	632, 1957,
	633, 1957,
	634, 1957,
	635, 1957,
	650, 1957,
	657, 1957,
	658, 1957,
	659, 1957,
	667, 1957,
	671, 1957,
	-2, 0,
	-1, 867,
	4, 1667,
	21, 1667,
	22, 1667,
	23, 1667,
	24, 1667,
	25, 1667,
	26, 1667,
	27, 1667,
	28, 1667,
	30, 1667,
	31, 1667,
	37, 1667,
	42, 1667,
	44, 1667,
	45, 1667,
	46, 1667,
	48, 1667,
	49, 1667,
	50, 1667,
	51, 1667,
	52, 1667,
	53, 1667,
	54, 1667,
	55, 1667,
	56, 1667,
	58, 1667,
	59, 1667,
	60, 1667,
	61, 1667,
	63, 1667,
	64, 1667,
	65, 1667,
	66, 1667,
	67, 1667,
	68, 1667,
	69, 1667,
	70, 1667,
	74, 1667,
	75, 1667,
	76, 1667,
	77, 1667,
	79, 1667,
	80, 1667,
	81, 1667,
	85, 1667,
	86, 1667,
	87, 1667,
	88, 1667,
	89, 1667,
	90, 1667,
	91, 1667,
	92, 1667,
	95, 1667,
	96, 1667,
	97, 1667,
	98, 1667,
	99, 1667,
	100, 1667,
	102, 1667,
	104, 1667,
	105, 1667,
	106, 1667,
	107, 1667,
	108, 1667,
	109, 1667,
	110, 1667,
	112, 1667,
	113, 1667,
	114, 1667,
	116, 1667,
	117, 1667,
	118, 1667,
	126, 1667,
	127, 1667,
	128, 1667,
	129, 1667,
	130, 1667,
	132, 1667,
	133, 1667,
	134, 1667,
	135, 1667,
	137, 1667,
	138, 1667,
	139, 1667,
	140, 1667,
	142, 1667,
	143, 1667,
	144, 1667,
	145, 1667,
	147, 1667,
	148, 1667,
	149, 1667,
	152, 1667,
	153, 1667,
	154, 1667,
	156, 1667,
	157, 1667,
	158, 1667,
	160, 1667,
	161, 1667,
	162, 1667,
	164, 1667,
	165, 1667,
	166, 1667,
	167, 1667,
	168, 1667,
	169, 1667,
	170, 1667,
	171, 1667,
	172, 1667,
	173, 1667,
	174, 1667,
	175, 1667,
	176, 1667,
	177, 1667,
	178, 1667,
	179, 1667,
	180, 1667,
	181, 1667,
	182, 1667,
	184, 1667,
	190, 1667,
	191, 1667,
	192, 1667,
	193, 1667,
	197, 1667,
	199, 1667,
	200, 1667,
	201, 1667,
	203, 1667,
	204, 1667,
	207, 1667,
	208, 1667,
	209, 1667,
	210, 1667,
	211, 1667,
	212, 1667,
	213, 1667,
	214, 1667,
	215, 1667,
	216, 1667,
	217, 1667,
	218, 1667,
	219, 1667,
	220, 1667,
	222, 1667,
	223, 1667,
	225, 1667,
	226, 1667,
	228, 1667,
	229, 1667,
	230, 1667,
	231, 1667,
	232, 1667,
	233, 1667,
	234, 1667,
	235, 1667,
	236, 1667,
	237, 1667,
	238, 1667,
	240, 1667,
	241, 1667,
	242, 1667,
	244, 1667,
	245, 1667,
	246, 1667,
	247, 1667,
	248, 1667,
	252, 1667,
	253, 1667,
	254, 1667,
	255, 1667,
	257, 1667,
	258, 1667,
	259, 1667,
	261, 1667,
	262, 1667,
	263, 1667,
	264, 1667,
	265, 1667,
	266, 1667,
	268, 1667,
	270, 1667,
	271, 1667,
	272, 1667,
	274, 1667,
	276, 1667,
	277, 1667,
	278, 1667,
	280, 1667,
	284, 1667,
	285, 1667,
	286, 1667,
	287, 1667,
	288, 1667,
	289, 1667,
	290, 1667,
	292, 1667,
	293, 1667,
	294, 1667,
	296, 1667,
	297, 1667,
	298, 1667,
	300, 1667,
	301, 1667,
	304, 1667,
	305, 1667,
	306, 1667,
	307, 1667,
	308, 1667,
	309, 1667,
	310, 1667,
	313, 1667,
	314, 1667,
	315, 1667,
	316, 1667,
	318, 1667,
	319, 1667,
	320, 1667,
	321, 1667,
	322, 1667,
	323, 1667,
	324, 1667,
	325, 1667,
	326, 1667,
	327, 1667,
	328, 1667,
	329, 1667,
	330, 1667,
	331, 1667,
	332, 1667,
	333, 1667,
	334, 1667,
	335, 1667,
	336, 1667,
	337, 1667,
	338, 1667,
	339, 1667,
	340, 1667,
	342, 1667,
	344, 1667,
	345, 1667,
	346, 1667,
	347, 1667,
	348, 1667,
	349, 1667,
	350, 1667,
	351, 1667,
	352, 1667,
	353, 1667,
	354, 1667,
	355, 1667,
	356, 1667,
	357, 1667,
	358, 1667,
	359, 1667,
	360, 1667,
	362, 1667,
	363, 1667,
	365, 1667,
	366, 1667,
	368, 1667,
	369, 1667,
	370, 1667,
	371, 1667,
	373, 1667,
	374, 1667,
	375, 1667,
	376, 1667,
	377, 1667,
	380, 1667,
	382, 1667,
	385, 1667,
	386, 1667,
	387, 1667,
	390, 1667,
	391, 1667,
	392, 1667,
	394, 1667,
	396, 1667,
	397, 1667,
	398, 1667,
	399, 1667,
	400, 1667,
	401, 1667,
	402, 1667,
	403, 1667,
	404, 1667,
	405, 1667,
	406, 1667,
	407, 1667,
	408, 1667,
	409, 1667,
	411, 1667,
	412, 1667,
	413, 1667,
	414, 1667,
	415, 1667,
	416, 1667,
	417, 1667,
	418, 1667,
	419, 1667,
	420, 1667,
	421, 1667,
	422, 1667,
	423, 1667,
	424, 1667,
	425, 1667,
	427, 1667,
	428, 1667,
	429, 1667,
	431, 1667,
	432, 1667,
	433, 1667,
	434, 1667,
	435, 1667,
	436, 1667,
	437, 1667,
	438, 1667,
	439, 1667,
	440, 1667,
	441, 1667,
	442, 1667,
	443, 1667,
	444, 1667,
	446, 1667,
	448, 1667,
	449, 1667,
	450, 1667,
	456, 1667,
	457, 1667,
	458, 1667,
	460, 1667,
	461, 1667,
	462, 1667,
	463, 1667,
	464, 1667,
	465, 1667,
	466, 1667,
	467, 1667,
	468, 1667,
	469, 1667,
	470, 1667,
	472, 1667,
	473, 1667,
	474, 1667,
	475, 1667,
	476, 1667,
	478, 1667,
	479, 1667,
	480, 1667,
	481, 1667,
	482, 1667,
	483, 1667,
	484, 1667,
	486, 1667,
	487, 1667,
	488, 1667,
	489, 1667,
	490, 1667,
	491, 1667,
	492, 1667,
	493, 1667,
	494, 1667,
	495, 1667,
	496, 1667,
	497, 1667,
	498, 1667,
	499, 1667,
	500, 1667,
	501, 1667,
	503, 1667,
	504, 1667,
	505, 1667,
	506, 1667,
	507, 1667,
	508, 1667,
	510, 1667,
	511, 1667,
	512, 1667,
	513, 1667,
	514, 1667,
	515, 1667,
	516, 1667,
	518, 1667,
	519, 1667,
	520, 1667,
	521, 1667,
	522, 1667,
	523, 1667,
	524, 1667,
	525, 1667,
	527, 1667,
	529, 1667,
	530, 1667,
	531, 1667,
	532, 1667,
	533, 1667,
	534, 1667,
	535, 1667,
	536, 1667,
	537, 1667,
	538, 1667,
	539, 1667,
	540, 1667,
	541, 1667,
	542, 1667,
	543, 1667,
	544, 1667,
	545, 1667,
	546, 1667,
	547, 1667,
	548, 1667,
	549, 1667,
	551, 1667,
	552, 1667,
	554, 1667,
	555, 1667,
	557, 1667,
	558, 1667,
	559, 1667,
	560, 1667,
	561, 1667,
	562, 1667,
	564, 1667,
	565, 1667,
	567, 1667,
	568, 1667,
	569, 1667,
	570, 1667,
	571, 1667,
	573, 1667,
	575, 1667,
	576, 1667,
	577, 1667,
	578, 1667,
	579, 1667,
	580, 1667,
	581, 1667,
	582, 1667,
	584, 1667,
	585, 1667,
	586, 1667,
	587, 1667,
	588, 1667,
	589, 1667,
	590, 1667,
	593, 1667,
	594, 1667,
	595, 1667,
	596, 1667,
	597, 1667,
	598, 1667,
	599, 1667,
	600, 1667,
	601, 1667,
	603, 1667,
	606, 1667,
	607, 1667,
	608, 1667,
	609, 1667,
	610, 1667,
	611, 1667,
	613, 1667,
	614, 1667,
	615, 1667,
	616, 1667,
	617, 1667,
	618, 1667,
	619, 1667,
	620, 1667,
	621, 1667,
	622, 1667,
	623, 1667,
	624, 1667,
	629, 1667,
	630, 1667,
	631, 1667,
	632, 1667,
	633, 1667,
	634, 1667,
	-2, 0,
	-1, 887,
	205, 2778,
	572, 2778,
	649, 2778,
	669, 2778,
	-2, 0,
	-1, 888,
	205, 2763,
	572, 2763,
	649, 2763,
	669, 2763,
	-2, 0,
	-1, 890,
	205, 3064,
	572, 3064,
	649, 3064,
	669, 3064,
	-2, 0,
	-1, 893,
	205, 2905,
	572, 2905,
	649, 2905,
	669, 2905,
	-2, 0,
	-1, 894,
	205, 3111,
	572, 3111,
	649, 3111,
	669, 3111,
	-2, 0,
	-1, 902,
	205, 2933,
	572, 2933,
	649, 2933,
	669, 2933,
	-2, 935,
	-1, 918,
	8, 1074,
	29, 1074,
	657, 1074,
	658, 1074,
	-2, 1079,
	-1, 922,
	1, 2837,
	670, 2837,
	673, 2837,
	-2, 1079,
	-1, 923,
	1, 2892,
	670, 2892,
	673, 2892,
	-2, 1079,
	-1, 926,
	1, 2938,
	670, 2938,
	673, 2938,
	-2, 1072,
	-1, 927,
	1, 2996,
	670, 2996,
	673, 2996,
	-2, 1073,
	-1, 928,
	1, 2842,
	670, 2842,
	673, 2842,
	-2, 1076,
	-1, 929,
	1, 2749,
	670, 2749,
	673, 2749,
	-2, 1077,
	-1, 947,
	205, 1119,
	-2, 0,
	-1, 948,
	433, 1175,
	508, 1175,
	555, 1175,
	577, 1175,
	-2, 0,
	-1, 949,
	433, 1174,
	508, 1174,
	555, 1174,
	577, 1174,
	-2, 1092,
	-1, 953,
	1, 1231,
	666, 1231,
	668, 1231,
	670, 1231,
	673, 1231,
	-2, 0,
	-1, 955,
	1, 1147,
	666, 1147,
	668, 1147,
	670, 1147,
	673, 1147,
	-2, 0,
	-1, 956,
	1, 1151,
	666, 1151,
	668, 1151,
	670, 1151,
	673, 1151,
	-2, 0,
	-1, 957,
	1, 1310,
	198, 1310,
	666, 1310,
	668, 1310,
	670, 1310,
	673, 1310,
	-2, 0,
	-1, 967,
	1, 1180,
	666, 1180,
	668, 1180,
	670, 1180,
	673, 1180,
	-2, 0,
	-1, 974,
	1, 1231,
	666, 1231,
	668, 1231,
	670, 1231,
	673, 1231,
	-2, 0,
	-1, 975,
	1, 1224,
	666, 1224,
	668, 1224,
	670, 1224,
	673, 1224,
	-2, 0,
	-1, 976,
	1, 1233,
	666, 1233,
	668, 1233,
	670, 1233,
	673, 1233,
	-2, 0,
	-1, 977,
	1, 1236,
	666, 1236,
	668, 1236,
	670, 1236,
	673, 1236,
	-2, 0,
	-1, 985,
	1, 1273,
	666, 1273,
	668, 1273,
	670, 1273,
	673, 1273,
	-2, 0,
	-1, 986,
	1, 1275,
	666, 1275,
	668, 1275,
	670, 1275,
	673, 1275,
	-2, 0,
	-1, 991,
	1, 1303,
	666, 1303,
	668, 1303,
	670, 1303,
	673, 1303,
	-2, 0,
	-1, 1040,
	669, 2706,
	672, 2706,
	-2, 1321,
	-1, 1041,
	669, 2708,
	672, 2708,
	-2, 1322,
	-1, 1042,
	669, 2707,
	672, 2707,
	-2, 1323,
	-1, 1043,
	672, 2629,
	-2, 1324,
	-1, 1070,
	198, 330,
	-2, 0,
	-1, 1093,
	47, 2678,
	-2, 0,
	-1, 1094,
	614, 1640,
	-2, 1406,
	-1, 1111,
	4, 2105,
	21, 2105,
	22, 2105,
	23, 2105,
	24, 2105,
	25, 2105,
	26, 2105,
	27, 2105,
	28, 2105,
	30, 2105,
	31, 2105,
	37, 2105,
	42, 2105,
	44, 2105,
	45, 2105,
	46, 2105,
	48, 2105,
	49, 2105,
	50, 2105,
	51, 2105,
	52, 2105,
	53, 2105,
	54, 2105,
	55, 2105,
	56, 2105,
	58, 2105,
	59, 2105,
	60, 2105,
	61, 2105,
	63, 2105,
	64, 2105,
	65, 2105,
	66, 2105,
	67, 2105,
	68, 2105,
	69, 2105,
	70, 2105,
	74, 2105,
	75, 2105,
	76, 2105,
	77, 2105,
	79, 2105,
	80, 2105,
	81, 2105,
	85, 2105,
	86, 2105,
	87, 2105,
	88, 2105,
	89, 2105,
	90, 2105,
	91, 2105,
	92, 2105,
	95, 2105,
	96, 2105,
	97, 2105,
	98, 2105,
	99, 2105,
	100, 2105,
	102, 2105,
	104, 2105,
	105, 2105,
	106, 2105,
	107, 2105,
	108, 2105,
	109, 2105,
	110, 2105,
	112, 2105,
	113, 2105,
	114, 2105,
	116, 2105,
	117, 2105,
	118, 2105,
	126, 2105,
	127, 2105,
	128, 2105,
	129, 2105,
	130, 2105,
	132, 2105,
	133, 2105,
	134, 2105,
	135, 2105,
	137, 2105,
	138, 2105,
	139, 2105,
	140, 2105,
	142, 2105,
	143, 2105,
	144, 2105,
	145, 2105,
	147, 2105,
	148, 2105,
	149, 2105,
	152, 2105,
	153, 2105,
	154, 2105,
	156, 2105,
	157, 2105,
	158, 2105,
	160, 2105,
	161, 2105,
	162, 2105,
	164, 2105,
	165, 2105,
	166, 2105,
	167, 2105,
	168, 2105,
	169, 2105,
	170, 2105,
	171, 2105,
	172, 2105,
	173, 2105,
	174, 2105,
	175, 2105,
	176, 2105,
	177, 2105,
	178, 2105,
	179, 2105,
	180, 2105,
	181, 2105,
	182, 2105,
	184, 2105,
	190, 2105,
	191, 2105,
	192, 2105,
	193, 2105,
	197, 2105,
	199, 2105,
	200, 2105,
	201, 2105,
	203, 2105,
	204, 2105,
	207, 2105,
	208, 2105,
	209, 2105,
	210, 2105,
	211, 2105,
	212, 2105,
	213, 2105,
	214, 2105,
	215, 2105,
	216, 2105,
	217, 2105,
	218, 2105,
	219, 2105,
	220, 2105,
	222, 2105,
	223, 2105,
	225, 2105,
	226, 2105,
	228, 2105,
	229, 2105,
	230, 2105,
	231, 2105,
	232, 2105,
	233, 2105,
	234, 2105,
	235, 2105,
	236, 2105,
	237, 2105,
	238, 2105,
	240, 2105,
	241, 2105,
	242, 2105,
	244, 2105,
	245, 2105,
	246, 2105,
	247, 2105,
	248, 2105,
	252, 2105,
	253, 2105,
	254, 2105,
	255, 2105,
	257, 2105,
	258, 2105,
	259, 2105,
	261, 2105,
	262, 2105,
	263, 2105,
	264, 2105,
	265, 2105,
	266, 2105,
	268, 2105,
	270, 2105,
	271, 2105,
	272, 2105,
	274, 2105,
	276, 2105,
	277, 2105,
	278, 2105,
	280, 2105,
	284, 2105,
	285, 2105,
	286, 2105,
	287, 2105,
	288, 2105,
	289, 2105,
	290, 2105,
	292, 2105,
	293, 2105,
	294, 2105,
	296, 2105,
	297, 2105,
	298, 2105,
	300, 2105,
	301, 2105,
	304, 2105,
	305, 2105,
	306, 2105,
	307, 2105,
	308, 2105,
	309, 2105,
	310, 2105,
	313, 2105,
	314, 2105,
	315, 2105,
	316, 2105,
	318, 2105,
	319, 2105,
	320, 2105,
	321, 2105,
	322, 2105,
	323, 2105,
	324, 2105,
	325, 2105,
	326, 2105,
	327, 2105,
	328, 2105,
	329, 2105,
	330, 2105,
	331, 2105,
	332, 2105,
	333, 2105,
	334, 2105,
	335, 2105,
	336, 2105,
	337, 2105,
	338, 2105,
	339, 2105,
	340, 2105,
	342, 2105,
	344, 2105,
	345, 2105,
	346, 2105,
	347, 2105,
	348, 2105,
	349, 2105,
	350, 2105,
	351, 2105,
	352, 2105,
	353, 2105,
	354, 2105,
	355, 2105,
	356, 2105,
	357, 2105,
	358, 2105,
	359, 2105,
	360, 2105,
	362, 2105,
	363, 2105,
	365, 2105,
	366, 2105,
	368, 2105,
	369, 2105,
	370, 2105,
	371, 2105,
	373, 2105,
	374, 2105,
	375, 2105,
	376, 2105,
	377, 2105,
	380, 2105,
	382, 2105,
	385, 2105,
	386, 2105,
	387, 2105,
	390, 2105,
	391, 2105,
	392, 2105,
	394, 2105,
	396, 2105,
	397, 2105,
	398, 2105,
	399, 2105,
	400, 2105,
	401, 2105,
	402, 2105,
	403, 2105,
	404, 2105,
	405, 2105,
	406, 2105,
	407, 2105,
	408, 2105,
	409, 2105,
	411, 2105,
	412, 2105,
	413, 2105,
	414, 2105,
	415, 2105,
	416, 2105,
	417, 2105,
	418, 2105,
	419, 2105,
	420, 2105,
	421, 2105,
	422, 2105,
	423, 2105,
	424, 2105,
	425, 2105,
	427, 2105,
	428, 2105,
	429, 2105,
	431, 2105,
	432, 2105,
	433, 2105,
	434, 2105,
	435, 2105,
	436, 2105,
	437, 2105,
	438, 2105,
	439, 2105,
	440, 2105,
	441, 2105,
	442, 2105,
	443, 2105,
	444, 2105,
	446, 2105,
	448, 2105,
	449, 2105,
	450, 2105,
	456, 2105,
	457, 2105,
	458, 2105,
	460, 2105,
	461, 2105,
	462, 2105,
	463, 2105,
	464, 2105,
	465, 2105,
	466, 2105,
	467, 2105,
	468, 2105,
	469, 2105,
	470, 2105,
	472, 2105,
	473, 2105,
	474, 2105,
	475, 2105,
	476, 2105,
	478, 2105,
	479, 2105,
	480, 2105,
	481, 2105,
	482, 2105,
	483, 2105,
	484, 2105,
	486, 2105,
	487, 2105,
	488, 2105,
	489, 2105,
	490, 2105,
	491, 2105,
	492, 2105,
	493, 2105,
	494, 2105,
	495, 2105,
	496, 2105,
	497, 2105,
	498, 2105,
	499, 2105,
	500, 2105,
	501, 2105,
	503, 2105,
	504, 2105,
	505, 2105,
	506, 2105,
	507, 2105,
	508, 2105,
	510, 2105,
	511, 2105,
	512, 2105,
	513, 2105,
	514, 2105,
	515, 2105,
	516, 2105,
	518, 2105,
	519, 2105,
	520, 2105,
	521, 2105,
	522, 2105,
	523, 2105,
	524, 2105,
	525, 2105,
	527, 2105,
	529, 2105,
	530, 2105,
	531, 2105,
	532, 2105,
	533, 2105,
	534, 2105,
	535, 2105,
	536, 2105,
	537, 2105,
	538, 2105,
	539, 2105,
	540, 2105,
	541, 2105,
	542, 2105,
	543, 2105,
	544, 2105,
	545, 2105,
	546, 2105,
	547, 2105,
	548, 2105,
	549, 2105,
	551, 2105,
	552, 2105,
	554, 2105,
	555, 2105,
	557, 2105,
	558, 2105,
	559, 2105,
	560, 2105,
	561, 2105,
	562, 2105,
	564, 2105,
	565, 2105,
	567, 2105,
	568, 2105,
	569, 2105,
	570, 2105,
	571, 2105,
	573, 2105,
	575, 2105,
	576, 2105,
	577, 2105,
	578, 2105,
	579, 2105,
	580, 2105,
	581, 2105,
	582, 2105,
	584, 2105,
	585, 2105,
	586, 2105,
	587, 2105,
	588, 2105,
	589, 2105,
	590, 2105,
	593, 2105,
	594, 2105,
	595, 2105,
	596, 2105,
	597, 2105,
	598, 2105,
	599, 2105,
	600, 2105,
	601, 2105,
	603, 2105,
	606, 2105,
	607, 2105,
	608, 2105,
	609, 2105,
	610, 2105,
	611, 2105,
	613, 2105,
	614, 2105,
	615, 2105,
	616, 2105,
	617, 2105,
	618, 2105,
	619, 2105,
	620, 2105,
	621, 2105,
	622, 2105,
	623, 2105,
	624, 2105,
	629, 2105,
	630, 2105,
	631, 2105,
	632, 2105,
	633, 2105,
	634, 2105,
	-2, 0,
	-1, 1123,
	289, 584,
	-2, 0,
	-1, 1124,
	171, 1213,
	287, 1213,
	433, 1174,
	508, 1174,
	555, 1174,
	575, 1213,
	577, 1174,
	-2, 0,
	-1, 1237,
	185, 1961,
	198, 1961,
	303, 1961,
	378, 1961,
	-2, 1897,
	-1, 1254,
	185, 1960,
	198, 1960,
	303, 1960,
	378, 1960,
	-2, 1894,
	-1, 1283,
	669, 2705,
	-2, 943,
	-1, 1290,
	667, 2695,
	-2, 3327,
	-1, 1313,
	5, 2697,
	667, 2694,
	-2, 2685,
	-1, 1321,
	5, 2718,
	667, 2715,
	-2, 2706,
	-1, 1322,
	5, 2719,
	667, 2716,
	-2, 2707,
	-1, 1332,
	669, 2703,
	-2, 2684,
	-1, 1333,
	667, 3226,
	-2, 2704,
	-1, 1356,
	5, 2720,
	38, 2720,
	136, 2720,
	649, 2720,
	665, 2720,
	668, 2720,
	669, 2720,
	672, 2720,
	-2, 3225,
	-1, 1357,
	5, 2180,
	-2, 3195,
	-1, 1358,
	5, 2181,
	-2, 3196,
	-1, 1359,
	5, 2182,
	-2, 3211,
	-1, 1360,
	5, 2183,
	-2, 3173,
	-1, 1361,
	5, 2184,
	-2, 3208,
	-1, 1362,
	5, 2192,
	-2, 3186,
	-1, 1363,
	5, 2179,
	-2, 3182,
	-1, 1364,
	5, 2179,
	-2, 3181,
	-1, 1365,
	5, 2179,
	-2, 3201,
	-1, 1366,
	5, 2190,
	-2, 3175,
	-1, 1367,
	5, 2195,
	667, 2207,
	-2, 3174,
	-1, 1368,
	5, 2197,
	-2, 3221,
	-1, 1371,
	5, 2219,
	-2, 3214,
	-1, 1372,
	5, 2211,
	-2, 3215,
	-1, 1373,
	5, 2219,
	-2, 3216,
	-1, 1374,
	5, 2215,
	-2, 3217,
	-1, 1375,
	5, 2163,
	-2, 3187,
	-1, 1376,
	5, 2164,
	-2, 3188,
	-1, 1377,
	5, 2165,
	-2, 3176,
	-1, 1405,
	5, 2202,
	667, 2202,
	-2, 3222,
	-1, 1406,
	5, 2203,
	667, 2203,
	-2, 3212,
	-1, 1407,
	5, 2204,
	615, 2204,
	667, 2204,
	-2, 3177,
	-1, 1408,
	5, 2205,
	615, 2205,
	667, 2205,
	-2, 3178,
	-1, 1446,
	667, 2715,
	-2, 2706,
	-1, 1447,
	667, 2716,
	-2, 2707,
	-1, 1558,
	205, 3111,
	572, 3111,
	649, 3111,
	669, 3111,
	-2, 0,
	-1, 1563,
	1, 919,
	670, 919,
	673, 919,
	-2, 1803,
	-1, 1622,
	205, 1120,
	-2, 3054,
	-1, 1623,
	205, 1121,
	-2, 2835,
	-1, 1624,
	205, 1122,
	-2, 3005,
	-1, 1625,
	205, 1123,
	-2, 3134,
	-1, 1640,
	433, 1175,
	508, 1175,
	555, 1175,
	577, 1175,
	-2, 0,
	-1, 1651,
	1, 1742,
	243, 1742,
	666, 1742,
	668, 1742,
	670, 1742,
	673, 1742,
	-2, 0,
	-1, 1670,
	1, 1170,
	666, 1170,
	668, 1170,
	670, 1170,
	673, 1170,
	-2, 0,
	-1, 1671,
	1, 1214,
	666, 1214,
	668, 1214,
	670, 1214,
	673, 1214,
	-2, 0,
	-1, 1672,
	1, 1226,
	666, 1226,
	668, 1226,
	670, 1226,
	673, 1226,
	-2, 0,
	-1, 1675,
	1, 1179,
	666, 1179,
	668, 1179,
	670, 1179,
	673, 1179,
	-2, 0,
	-1, 1677,
	1, 1185,
	666, 1185,
	668, 1185,
	670, 1185,
	673, 1185,
	-2, 0,
	-1, 1681,
	1, 1181,
	666, 1181,
	668, 1181,
	670, 1181,
	673, 1181,
	-2, 0,
	-1, 1686,
	1, 1195,
	666, 1195,
	668, 1195,
	670, 1195,
	673, 1195,
	-2, 0,
	-1, 1725,
	1, 3043,
	666, 3043,
	668, 3043,
	669, 3043,
	670, 3043,
	673, 3043,
	-2, 0,
	-1, 1730,
	1, 1284,
	666, 1284,
	668, 1284,
	670, 1284,
	673, 1284,
	-2, 0,
	-1, 1747,
	1, 1798,
	670, 1798,
	673, 1798,
	-2, 1803,
	-1, 1847,
	398, 2679,
	460, 2679,
	510, 2679,
	659, 2679,
	-2, 2667,
	-1, 1855,
	205, 171,
	296, 171,
	362, 171,
	624, 171,
	-2, 3106,
	-1, 1856,
	205, 172,
	296, 172,
	362, 172,
	624, 172,
	-2, 2826,
	-1, 1857,
	205, 173,
	296, 173,
	362, 173,
	624, 173,
	-2, 3019,
	-1, 1863,
	671, 2679,
	-2, 2681,
	-1, 1866,
	25, 3043,
	243, 3043,
	-2, 0,
	-1, 1878,
	1, 1637,
	465, 1591,
	510, 1591,
	641, 1591,
	646, 1591,
	666, 1637,
	668, 1637,
	670, 1637,
	673, 1637,
	-2, 1946,
	-1, 1884,
	221, 1742,
	243, 1742,
	476, 1742,
	-2, 0,
	-1, 1953,
	47, 2677,
	-2, 1368,
	-1, 1960,
	1, 1637,
	666, 1637,
	668, 1637,
	670, 1637,
	673, 1637,
	-2, 1946,
	-1, 1963,
	442, 1405,
	614, 1405,
	-2, 483,
	-1, 1969,
	4, 1667,
	21, 1667,
	22, 1667,
	23, 1667,
	24, 1667,
	25, 1667,
	26, 1667,
	27, 1667,
	28, 1667,
	30, 1667,
	31, 1667,
	37, 1667,
	42, 1667,
	44, 1667,
	45, 1667,
	46, 1667,
	48, 1667,
	49, 1667,
	50, 1667,
	51, 1667,
	52, 1667,
	53, 1667,
	54, 1667,
	55, 1667,
	56, 1667,
	58, 1667,
	59, 1667,
	60, 1667,
	61, 1667,
	63, 1667,
	64, 1667,
	65, 1667,
	66, 1667,
	67, 1667,
	68, 1667,
	69, 1667,
	70, 1667,
	74, 1667,
	75, 1667,
	76, 1667,
	77, 1667,
	79, 1667,
	80, 1667,
	81, 1667,
	85, 1667,
	86, 1667,
	87, 1667,
	88, 1667,
	89, 1667,
	90, 1667,
	91, 1667,
	92, 1667,
	95, 1667,
	96, 1667,
	97, 1667,
	98, 1667,
	99, 1667,
	100, 1667,
	102, 1667,
	104, 1667,
	105, 1667,
	106, 1667,
	107, 1667,
	108, 1667,
	109, 1667,
	110, 1667,
	112, 1667,
	113, 1667,
	114, 1667,
	116, 1667,
	117, 1667,
	118, 1667,
	126, 1667,
	127, 1667,
	128, 1667,
	129, 1667,
	130, 1667,
	132, 1667,
	133, 1667,
	134, 1667,
	135, 1667,
	137, 1667,
	138, 1667,
	139, 1667,
	140, 1667,
	142, 1667,
	143, 1667,
	144, 1667,
	145, 1667,
	147, 1667,
	148, 1667,
	149, 1667,
	152, 1667,
	153, 1667,
	154, 1667,
	156, 1667,
	157, 1667,
	158, 1667,
	160, 1667,
	161, 1667,
	162, 1667,
	164, 1667,
	165, 1667,
	166, 1667,
	167, 1667,
	168, 1667,
	169, 1667,
	170, 1667,
	171, 1667,
	172, 1667,
	173, 1667,
	174, 1667,
	175, 1667,
	176, 1667,
	177, 1667,
	178, 1667,
	179, 1667,
	180, 1667,
	181, 1667,
	182, 1667,
	190, 1667,
	191, 1667,
	192, 1667,
	193, 1667,
	197, 1667,
	199, 1667,
	200, 1667,
	201, 1667,
	203, 1667,
	204, 1667,
	207, 1667,
	208, 1667,
	209, 1667,
	210, 1667,
	211, 1667,
	212, 1667,
	213, 1667,
	214, 1667,
	215, 1667,
	216, 1667,
	217, 1667,
	218, 1667,
	219, 1667,
	220, 1667,
	222, 1667,
	223, 1667,
	225, 1667,
	226, 1667,
	228, 1667,
	229, 1667,
	230, 1667,
	231, 1667,
	232, 1667,
	233, 1667,
	234, 1667,
	235, 1667,
	236, 1667,
	237, 1667,
	238, 1667,
	240, 1667,
	241, 1667,
	242, 1667,
	244, 1667,
	245, 1667,
	246, 1667,
	247, 1667,
	248, 1667,
	252, 1667,
	253, 1667,
	254, 1667,
	255, 1667,
	261, 1667,
	262, 1667,
	263, 1667,
	264, 1667,
	265, 1667,
	266, 1667,
	268, 1667,
	270, 1667,
	271, 1667,
	272, 1667,
	274, 1667,
	276, 1667,
	277, 1667,
	278, 1667,
	280, 1667,
	284, 1667,
	285, 1667,
	286, 1667,
	287, 1667,
	288, 1667,
	289, 1667,
	290, 1667,
	292, 1667,
	293, 1667,
	294, 1667,
	296, 1667,
	297, 1667,
	298, 1667,
	300, 1667,
	301, 1667,
	304, 1667,
	305, 1667,
	306, 1667,
	307, 1667,
	308, 1667,
	309, 1667,
	310, 1667,
	313, 1667,
	314, 1667,
	315, 1667,
	316, 1667,
	318, 1667,
	319, 1667,
	320, 1667,
	321, 1667,
	322, 1667,
	323, 1667,
	324, 1667,
	325, 1667,
	326, 1667,
	327, 1667,
	328, 1667,
	329, 1667,
	330, 1667,
	331, 1667,
	332, 1667,
	333, 1667,
	334, 1667,
	335, 1667,
	336, 1667,
	337, 1667,
	338, 1667,
	339, 1667,
	340, 1667,
	342, 1667,
	344, 1667,
	345, 1667,
	346, 1667,
	347, 1667,
	348, 1667,
	349, 1667,
	350, 1667,
	351, 1667,
	352, 1667,
	353, 1667,
	354, 1667,
	355, 1667,
	356, 1667,
	357, 1667,
	358, 1667,
	359, 1667,
	360, 1667,
	362, 1667,
	363, 1667,
	365, 1667,
	368, 1667,
	369, 1667,
	370, 1667,
	371, 1667,
	373, 1667,
	374, 1667,
	375, 1667,
	376, 1667,
	377, 1667,
	380, 1667,
	382, 1667,
	383, 1667,
	385, 1667,
	386, 1667,
	387, 1667,
	390, 1667,
	391, 1667,
	392, 1667,
	394, 1667,
	396, 1667,
	397, 1667,
	398, 1667,
	399, 1667,
	400, 1667,
	401, 1667,
	402, 1667,
	403, 1667,
	404, 1667,
	405, 1667,
	406, 1667,
	407, 1667,
	408, 1667,
	409, 1667,
	411, 1667,
	412, 1667,
	413, 1667,
	414, 1667,
	415, 1667,
	416, 1667,
	417, 1667,
	418, 1667,
	419, 1667,
	420, 1667,
	421, 1667,
	422, 1667,
	423, 1667,
	424, 1667,
	425, 1667,
	427, 1667,
	428, 1667,
	429, 1667,
	431, 1667,
	432, 1667,
	433, 1667,
	434, 1667,
	435, 1667,
	436, 1667,
	437, 1667,
	438, 1667,
	439, 1667,
	440, 1667,
	441, 1667,
	442, 1667,
	443, 1667,
	444, 1667,
	446, 1667,
	448, 1667,
	449, 1667,
	450, 1667,
	456, 1667,
	457, 1667,
	458, 1667,
	460, 1667,
	461, 1667,
	462, 1667,
	463, 1667,
	464, 1667,
	465, 1667,
	466, 1667,
	467, 1667,
	468, 1667,
	469, 1667,
	470, 1667,
	472, 1667,
	473, 1667,
	474, 1667,
	475, 1667,
	476, 1667,
	478, 1667,
	479, 1667,
	480, 1667,
	481, 1667,
	482, 1667,
	483, 1667,
	484, 1667,
	486, 1667,
	487, 1667,
	488, 1667,
	489, 1667,
	490, 1667,
	491, 1667,
	492, 1667,
	493, 1667,
	494, 1667,
	495, 1667,
	496, 1667,
	497, 1667,
	498, 1667,
	499, 1667,
	500, 1667,
	501, 1667,
	503, 1667,
	504, 1667,
	505, 1667,
	506, 1667,
	507, 1667,
	508, 1667,
	510, 1667,
	511, 1667,
	512, 1667,
	513, 1667,
	514, 1667,
	515, 1667,
	516, 1667,
	518, 1667,
	519, 1667,
	520, 1667,
	521, 1667,
	522, 1667,
	523, 1667,
	524, 1667,
	525, 1667,
	527, 1667,
	529, 1667,
	530, 1667,
	531, 1667,
	532, 1667,
	533, 1667,
	534, 1667,
	535, 1667,
	536, 1667,
	537, 1667,
	538, 1667,
	539, 1667,
	540, 1667,
	541, 1667,
	542, 1667,
	543, 1667,
	544, 1667,
	545, 1667,
	546, 1667,
	547, 1667,
	548, 1667,
	549, 1667,
	551, 1667,
	552, 1667,
	554, 1667,
	555, 1667,
	557, 1667,
	558, 1667,
	559, 1667,
	560, 1667,
	561, 1667,
	562, 1667,
	564, 1667,
	565, 1667,
	567, 1667,
	568, 1667,
	569, 1667,
	570, 1667,
	571, 1667,
	573, 1667,
	575, 1667,
	576, 1667,
	577, 1667,
	578, 1667,
	579, 1667,
	580, 1667,
	581, 1667,
	582, 1667,
	584, 1667,
	585, 1667,
	586, 1667,
	587, 1667,
	588, 1667,
	589, 1667,
	590, 1667,
	593, 1667,
	594, 1667,
	595, 1667,
	596, 1667,
	597, 1667,
	598, 1667,
	599, 1667,
	600, 1667,
	601, 1667,
	603, 1667,
	606, 1667,
	607, 1667,
	608, 1667,
	609, 1667,
	610, 1667,
	611, 1667,
	613, 1667,
	614, 1667,
	615, 1667,
	616, 1667,
	617, 1667,
	618, 1667,
	619, 1667,
	620, 1667,
	621, 1667,
	622, 1667,
	623, 1667,
	624, 1667,
	629, 1667,
	630, 1667,
	631, 1667,
	632, 1667,
	633, 1667,
	634, 1667,
	-2, 0,
	-1, 1992,
	1, 736,
	666, 736,
	668, 736,
	670, 736,
	673, 736,
	-2, 1917,
	-1, 1995,
	4, 3220,
	11, 3220,
	12, 3220,
	14, 3220,
	15, 3220,
	16, 3220,
	17, 3220,
	18, 3220,
	19, 3220,
	21, 3220,
	22, 3220,
	23, 3220,
	24, 3220,
	25, 3220,
	26, 3220,
	27, 3220,
	28, 3220,
	30, 3220,
	31, 3220,
	34, 3220,
	35, 3220,
	37, 3220,
	39, 3220,
	41, 3220,
	42, 3220,
	44, 3220,
	45, 3220,
	46, 3220,
	48, 3220,
	49, 3220,
	50, 3220,
	51, 3220,
	52, 3220,
	53, 3220,
	54, 3220,
	55, 3220,
	56, 3220,
	58, 3220,
	59, 3220,
	60, 3220,
	61, 3220,
	63, 3220,
	64, 3220,
	65, 3220,
	66, 3220,
	67, 3220,
	68, 3220,
	69, 3220,
	70, 3220,
	73, 3220,
	74, 3220,
	75, 3220,
	76, 3220,
	77, 3220,
	79, 3220,
	80, 3220,
	81, 3220,
	82, 3220,
	85, 3220,
	86, 3220,
	87, 3220,
	88, 3220,
	89, 3220,
	90, 3220,
	91, 3220,
	92, 3220,
	93, 3220,
	95, 3220,
	96, 3220,
	97, 3220,
	98, 3220,
	99, 3220,
	100, 3220,
	102, 3220,
	103, 3220,
	104, 3220,
	105, 3220,
	106, 3220,
	107, 3220,
	108, 3220,
	109, 3220,
	110, 3220,
	112, 3220,
	113, 3220,
	114, 3220,
	115, 3220,
	116, 3220,
	117, 3220,
	118, 3220,
	126, 3220,
	127, 3220,
	128, 3220,
	129, 3220,
	130, 3220,
	132, 3220,
	133, 3220,
	134, 3220,
	135, 3220,
	137, 3220,
	138, 3220,
	139, 3220,
	140, 3220,
	142, 3220,
	143, 3220,
	144, 3220,
	145, 3220,
	147, 3220,
	148, 3220,
	149, 3220,
	152, 3220,
	153, 3220,
	154, 3220,
	156, 3220,
	157, 3220,
	158, 3220,
	160, 3220,
	161, 3220,
	162, 3220,
	164, 3220,
	165, 3220,
	166, 3220,
	167, 3220,
	168, 3220,
	169, 3220,
	170, 3220,
	171, 3220,
	172, 3220,
	173, 3220,
	174, 3220,
	175, 3220,
	176, 3220,
	177, 3220,
	178, 3220,
	179, 3220,
	180, 3220,
	181, 3220,
	182, 3220,
	186, 3220,
	187, 3220,
	188, 3220,
	189, 3220,
	190, 3220,
	191, 3220,
	192, 3220,
	193, 3220,
	196, 3220,
	197, 3220,
	199, 3220,
	200, 3220,
	201, 3220,
	203, 3220,
	204, 3220,
	206, 3220,
	207, 3220,
	208, 3220,
	209, 3220,
	210, 3220,
	211, 3220,
	212, 3220,
	213, 3220,
	214, 3220,
	215, 3220,
	216, 3220,
	217, 3220,
	218, 3220,
	219, 3220,
	220, 3220,
	222, 3220,
	223, 3220,
	225, 3220,
	226, 3220,
	228, 3220,
	229, 3220,
	230, 3220,
	231, 3220,
	232, 3220,
	233, 3220,
	234, 3220,
	235, 3220,
	236, 3220,
	237, 3220,
	238, 3220,
	239, 3220,
	240, 3220,
	241, 3220,
	242, 3220,
	243, 3220,
	244, 3220,
	245, 3220,
	246, 3220,
	247, 3220,
	248, 3220,
	250, 3220,
	251, 3220,
	252, 3220,
	253, 3220,
	254, 3220,
	255, 3220,
	260, 3220,
	261, 3220,
	262, 3220,
	263, 3220,
	264, 3220,
	265, 3220,
	266, 3220,
	268, 3220,
	270, 3220,
	271, 3220,
	272, 3220,
	273, 3220,
	274, 3220,
	275, 3220,
	276, 3220,
	277, 3220,
	278, 3220,
	279, 3220,
	280, 3220,
	282, 3220,
	283, 3220,
	284, 3220,
	285, 3220,
	286, 3220,
	287, 3220,
	288, 3220,
	289, 3220,
	290, 3220,
	292, 3220,
	293, 3220,
	294, 3220,
	296, 3220,
	297, 3220,
	298, 3220,
	299, 3220,
	300, 3220,
	301, 3220,
	302, 3220,
	304, 3220,
	305, 3220,
	306, 3220,
	307, 3220,
	308, 3220,
	309, 3220,
	310, 3220,
	313, 3220,
	314, 3220,
	315, 3220,
	316, 3220,
	317, 3220,
	318, 3220,
	319, 3220,
	320, 3220,
	321, 3220,
	322, 3220,
	323, 3220,
	324, 3220,
	325, 3220,
	326, 3220,
	327, 3220,
	328, 3220,
	329, 3220,
	330, 3220,
	331, 3220,
	332, 3220,
	333, 3220,
	334, 3220,
	335, 3220,
	336, 3220,
	337, 3220,
	338, 3220,
	339, 3220,
	340, 3220,
	342, 3220,
	343, 3220,
	344, 3220,
	345, 3220,
	346, 3220,
	347, 3220,
	348, 3220,
	349, 3220,
	350, 3220,
	351, 3220,
	352, 3220,
	353, 3220,
	354, 3220,
	355, 3220,
	356, 3220,
	357, 3220,
	358, 3220,
	359, 3220,
	360, 3220,
	362, 3220,
	363, 3220,
	365, 3220,
	367, 3220,
	368, 3220,
	369, 3220,
	370, 3220,
	371, 3220,
	373, 3220,
	374, 3220,
	375, 3220,
	376, 3220,
	377, 3220,
	380, 3220,
	382, 3220,
	385, 3220,
	386, 3220,
	387, 3220,
	388, 3220,
	390, 3220,
	391, 3220,
	392, 3220,
	394, 3220,
	396, 3220,
	397, 3220,
	398, 3220,
	399, 3220,
	400, 3220,
	401, 3220,
	402, 3220,
	403, 3220,
	404, 3220,
	405, 3220,
	406, 3220,
	407, 3220,
	408, 3220,
	409, 3220,
	411, 3220,
	412, 3220,
	413, 3220,
	414, 3220,
	415, 3220,
	416, 3220,
	417, 3220,
	418, 3220,
	419, 3220,
	420, 3220,
	421, 3220,
	422, 3220,
	423, 3220,
	424, 3220,
	425, 3220,
	427, 3220,
	428, 3220,
	429, 3220,
	431, 3220,
	432, 3220,
	433, 3220,
	434, 3220,
	435, 3220,
	436, 3220,
	437, 3220,
	438, 3220,
	439, 3220,
	440, 3220,
	441, 3220,
	442, 3220,
	443, 3220,
	444, 3220,
	446, 3220,
	448, 3220,
	449, 3220,
	450, 3220,
	456, 3220,
	457, 3220,
	458, 3220,
	459, 3220,
	460, 3220,
	461, 3220,
	462, 3220,
	463, 3220,
	464, 3220,
	465, 3220,
	466, 3220,
	467, 3220,
	468, 3220,
	469, 3220,
	470, 3220,
	472, 3220,
	473, 3220,
	474, 3220,
	475, 3220,
	476, 3220,
	477, 3220,
	478, 3220,
	479, 3220,
	480, 3220,
	481, 3220,
	482, 3220,
	483, 3220,
	484, 3220,
	485, 3220,
	486, 3220,
	487, 3220,
	488, 3220,
	489, 3220,
	490, 3220,
	491, 3220,
	492, 3220,
	493, 3220,
	494, 3220,
	495, 3220,
	496, 3220,
	497, 3220,
	498, 3220,
	499, 3220,
	500, 3220,
	501, 3220,
	503, 3220,
	504, 3220,
	505, 3220,
	506, 3220,
	507, 3220,
	508, 3220,
	510, 3220,
	511, 3220,
	512, 3220,
	513, 3220,
	514, 3220,
	515, 3220,
	516, 3220,
	517, 3220,
	518, 3220,
	519, 3220,
	520, 3220,
	521, 3220,
	522, 3220,
	523, 3220,
	524, 3220,
	525, 3220,
	527, 3220,
	529, 3220,
	530, 3220,
	531, 3220,
	532, 3220,
	533, 3220,
	534, 3220,
	535, 3220,
	536, 3220,
	537, 3220,
	538, 3220,
	539, 3220,
	540, 3220,
	541, 3220,
	542, 3220,
	543, 3220,
	544, 3220,
	545, 3220,
	546, 3220,
	547, 3220,
	548, 3220,
	549, 3220,
	551, 3220,
	552, 3220,
	553, 3220,
	554, 3220,
	555, 3220,
	557, 3220,
	558, 3220,
	559, 3220,
	560, 3220,
	561, 3220,
	562, 3220,
	564, 3220,
	565, 3220,
	567, 3220,
	568, 3220,
	569, 3220,
	570, 3220,
	571, 3220,
	573, 3220,
	575, 3220,
	576, 3220,
	577, 3220,
	578, 3220,
	579, 3220,
	580, 3220,
	581, 3220,
	582, 3220,
	584, 3220,
	585, 3220,
	586, 3220,
	587, 3220,
	588, 3220,
	589, 3220,
	590, 3220,
	593, 3220,
	594, 3220,
	595, 3220,
	596, 3220,
	597, 3220,
	598, 3220,
	599, 3220,
	600, 3220,
	601, 3220,
	603, 3220,
	606, 3220,
	607, 3220,
	608, 3220,
	609, 3220,
	610, 3220,
	611, 3220,
	613, 3220,
	614, 3220,
	615, 3220,
	616, 3220,
	617, 3220,
	618, 3220,
	619, 3220,
	620, 3220,
	621, 3220,
	622, 3220,
	623, 3220,
	624, 3220,
	629, 3220,
	630, 3220,
	631, 3220,
	632, 3220,
	633, 3220,
	634, 3220,
	635, 3220,
	637, 3220,
	647, 3220,
	648, 3220,
	649, 3220,
	650, 3220,
	651, 3220,
	652, 3220,
	654, 3220,
	655, 3220,
	656, 3220,
	657, 3220,
	658, 3220,
	659, 3220,
	660, 3220,
	661, 3220,
	662, 3220,
	665, 3220,
	668, 3220,
	669, 3220,
	671, 3220,
	672, 3220,
	-2, 0,
	-1, 2000,
	205, 3064,
	572, 3064,
	649, 3064,
	669, 3064,
	-2, 0,
	-1, 2042,
	185, 1960,
	198, 1960,
	303, 1960,
	378, 1960,
	-2, 1898,
	-1, 2145,
	163, 1919,
	185, 1919,
	198, 1919,
	267, 1919,
	303, 1919,
	378, 1919,
	389, 1919,
	591, 1919,
	-2, 2385,
	-1, 2192,
	667, 2206,
	-2, 2196,
	-1, 2209,
	668, 2561,
	-2, 0,
	-1, 2246,
	163, 1919,
	185, 1919,
	198, 1919,
	267, 1919,
	303, 1919,
	378, 1919,
	389, 1919,
	591, 1919,
	-2, 2060,
	-1, 2285,
	669, 2706,
	672, 2706,
	-2, 1311,
	-1, 2286,
	669, 2708,
	672, 2708,
	-2, 1312,
	-1, 2287,
	669, 2707,
	672, 2707,
	-2, 1313,
	-1, 2288,
	672, 2629,
	-2, 1314,
	-1, 2324,
	667, 2207,
	-2, 2195,
	-1, 2341,
	205, 3061,
	669, 3061,
	672, 3061,
	-2, 0,
	-1, 2393,
	1, 921,
	670, 921,
	673, 921,
	-2, 1803,
	-1, 2458,
	1, 1172,
	666, 1172,
	668, 1172,
	670, 1172,
	673, 1172,
	-2, 0,
	-1, 2459,
	1, 1216,
	666, 1216,
	668, 1216,
	670, 1216,
	673, 1216,
	-2, 0,
	-1, 2460,
	1, 1228,
	666, 1228,
	668, 1228,
	670, 1228,
	673, 1228,
	-2, 0,
	-1, 2461,
	1, 1286,
	666, 1286,
	668, 1286,
	670, 1286,
	673, 1286,
	-2, 0,
	-1, 2505,
	1, 1197,
	666, 1197,
	668, 1197,
	670, 1197,
	673, 1197,
	-2, 0,
	-1, 2532,
	1, 1265,
	666, 1265,
	668, 1265,
	670, 1265,
	673, 1265,
	-2, 0,
	-1, 2713,
	243, 324,
	-2, 2714,
	-1, 2714,
	243, 325,
	-2, 385,
	-1, 2839,
	483, 1987,
	484, 1987,
	-2, 2240,
	-1, 2872,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2260,
	-1, 2873,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2261,
	-1, 2874,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2262,
	-1, 2875,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2263,
	-1, 2876,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2264,
	-1, 2877,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2265,
	-1, 2878,
	103, 0,
	282, 0,
	283, 0,
	651, 0,
	652, 0,
	-2, 2266,
	-1, 2879,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2267,
	-1, 2892,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2280,
	-1, 2893,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2281,
	-1, 2894,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2282,
	-1, 2898,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2289,
	-1, 2904,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2293,
	-1, 2906,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2301,
	-1, 2907,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2302,
	-1, 2908,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2303,
	-1, 2909,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2304,
	-1, 3087,
	5, 2718,
	205, 2572,
	667, 2715,
	-2, 2706,
	-1, 3088,
	205, 2573,
	-2, 3150,
	-1, 3089,
	205, 2574,
	-2, 2931,
	-1, 3090,
	205, 2575,
	-2, 2797,
	-1, 3091,
	205, 2576,
	-2, 2863,
	-1, 3092,
	205, 2577,
	-2, 2916,
	-1, 3093,
	205, 2578,
	-2, 3057,
	-1, 3094,
	205, 2579,
	-2, 2368,
	-1, 3189,
	1, 2061,
	2, 2061,
	115, 2061,
	163, 2061,
	185, 2061,
	198, 2061,
	206, 2061,
	224, 2061,
	227, 2061,
	260, 2061,
	267, 2061,
	279, 2061,
	299, 2061,
	303, 2061,
	343, 2061,
	378, 2061,
	383, 2061,
	389, 2061,
	471, 2061,
	477, 2061,
	591, 2061,
	604, 2061,
	626, 2061,
	627, 2061,
	628, 2061,
	638, 2061,
	666, 2061,
	668, 2061,
	670, 2061,
	672, 2061,
	673, 2061,
	-2, 2060,
	-1, 3205,
	667, 2686,
	-2, 2701,
	-1, 3207,
	1, 402,
	626, 402,
	673, 402,
	-2, 1946,
	-1, 3272,
	38, 2718,
	136, 2718,
	649, 2718,
	665, 2718,
	668, 2718,
	669, 2718,
	672, 2718,
	-2, 2715,
	-1, 3273,
	38, 2719,
	136, 2719,
	649, 2719,
	665, 2719,
	668, 2719,
	669, 2719,
	672, 2719,
	-2, 2716,
	-1, 3379,
	1, 1269,
	666, 1269,
	668, 1269,
	670, 1269,
	673, 1269,
	-2, 0,
	-1, 3584,
	1, 1637,
	465, 1591,
	510, 1591,
	641, 1591,
	646, 1591,
	666, 1637,
	668, 1637,
	670, 1637,
	673, 1637,
	-2, 1946,
	-1, 3698,
	384, 1990,
	-2, 3209,
	-1, 3699,
	384, 1991,
	-2, 3040,
	-1, 3703,
	483, 2640,
	484, 2640,
	-2, 2366,
	-1, 3704,
	483, 2644,
	484, 2644,
	-2, 2367,
	-1, 3705,
	483, 2641,
	484, 2641,
	-2, 2366,
	-1, 3706,
	483, 2645,
	484, 2645,
	-2, 2367,
	-1, 3720,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2291,
	-1, 3721,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2295,
	-1, 3727,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2297,
	-1, 3976,
	1, 916,
	666, 916,
	668, 916,
	670, 916,
	673, 916,
	-2, 1803,
	-1, 4236,
	47, 2677,
	-2, 1369,
	-1, 4241,
	1, 1637,
	666, 1637,
	668, 1637,
	670, 1637,
	673, 1637,
	-2, 1946,
	-1, 4328,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2299,
	-1, 4335,
	273, 0,
	275, 0,
	367, 0,
	-2, 2318,
	-1, 4404,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2347,
	-1, 4405,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2348,
	-1, 4406,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2349,
	-1, 4410,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2353,
	-1, 4411,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2354,
	-1, 4412,
	14, 0,
	15, 0,
	16, 0,
	647, 0,
	648, 0,
	649, 0,
	-2, 2355,
	-1, 4464,
	667, 2687,
	-2, 2702,
	-1, 4732,
	669, 3329,
	-2, 1872,
	-1, 4775,
	273, 0,
	275, 0,
	367, 0,
	-2, 2319,
	-1, 4778,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2322,
	-1, 4779,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2324,
	-1, 4916,
	669, 2703,
	-2, 1677,
	-1, 5091,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2323,
	-1, 5092,
	17, 0,
	18, 0,
	19, 0,
	55, 0,
	239, 0,
	243, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 2325,
	-1, 5103,
	273, 0,
	-2, 2358,
	-1, 5308,
	273, 0,
	-2, 2359,
	-1, 5542,
	55, 0,
	239, 0,
	302, 0,
	517, 0,
	635, 0,
	650, 0,
	-2, 3172,
}

const sqlPrivate = 57344

const sqlLast = 165727

var sqlAct = [...]int16{
	324, 5747, 4224, 5615, 1539, 5767, 5470, 5356, 5471, 3322,
	5364, 3655, 5172, 5590, 3505, 5597, 1121, 6, 5676, 5541,
	3863, 5528, 5409, 1122, 10, 4, 5705, 3413, 5555, 5690,
	1263, 209, 5426, 4223, 5509, 2710, 5485, 5482, 5556, 5461,
	5557, 2568, 4702, 5624, 1595, 5281, 5259, 5501, 4530, 5244,
	1627, 5553, 5229, 4368, 1450, 5312, 5540, 5056, 5051, 5043,
	4912, 2424, 5177, 5008, 4320, 5112, 5084, 4039, 2801, 2849,
	4042, 3624, 4724, 4713, 4696, 4620, 4972, 3936, 5392, 4161,
	4261, 3712, 1527, 4893, 3864, 4913, 3119, 1255, 1894, 2799,
	1042, 4111, 823, 3414, 1536, 3265, 2350, 2921, 3675, 3521,
	2299, 2051, 2301, 4246, 5061, 4694, 4678, 2859, 4660, 2018,
	899, 4191, 4207, 4662, 2448, 4045, 2577, 4255, 2374, 4288,
	4454, 1042, 5108, 4290, 2252, 3644, 1531, 3614, 3639, 2850,
	4026, 2763, 4211, 4185, 4212, 4204, 4214, 4184, 3324, 4028,
	3919, 1429, 2776, 209, 4027, 3912, 3219, 1312, 1520, 4467,
	3670, 1753, 3867, 3844, 3886, 835, 3878, 1126, 3656, 3591,
	3869, 2699, 2221, 937, 3641, 2627, 2678, 2016, 4814, 1844,
	2697, 3534, 2589, 5598, 4066, 3340, 4529, 4205, 3190, 3182,
	2281, 1889, 3903, 2218, 4431, 2195, 3271, 1890, 2153, 2856,
	5313, 3843, 3696, 2123, 1116, 1439, 2934, 1037, 3000, 895,
	3553, 2676, 2672, 129, 3181, 2654, 3669, 2650, 3625, 2658,
	1317, 4031, 1578, 2372, 2560, 2556, 2797, 1747, 3263, 1955,
	1648, 3116, 1534, 2749, 1503, 1322, 3264, 1593, 3162, 2222,
	2991, 2838, 3184, 2918, 2423, 3225, 1506, 1513, 2420, 2821,
	1597, 2819, 1993, 3649, 1958, 1517, 1951, 1629, 872, 2681,
	2241, 2748, 942, 2238, 5748, 3438, 2413, 318, 317, 2698,
	5427, 3220, 1565, 1430, 3439, 3399, 1509, 1480, 5506, 4215,
	2187, 1044, 1468, 1483, 2994, 1433, 3171, 1043, 2137, 3131,
	1284, 2231, 1412, 3083, 1447, 2052, 1266, 3049, 2972, 2820,
	810, 915, 2053, 220, 833, 1984, 2822, 1094, 1918, 880,
	221, 891, 1044, 854, 2469, 1991, 1854, 5616, 1043, 5677,
	1686, 133, 2473, 1670, 1298, 119, 2688, 1590, 828, 52,
	51, 1435, 49, 40, 38, 36, 1410, 2058, 3750, 1746,
	1741, 1679, 3744, 824, 965, 837, 4445, 1032, 2352, 4446,
	3865, 2352, 2352, 5757, 2352, 2352, 5551, 1048, 1051, 2352,
	3136, 5782, 5770, 1095, 3937, 3161, 3989, 2068, 2069, 5550,
	2102, 2103, 2104, 2113, 2114, 2115, 5755, 908, 911, 5754,
	3161, 5714, 5712, 3161, 5140, 5176, 5176, 5137, 1048, 1051,
	2106, 2099, 1952, 1259, 5646, 3134, 4270, 2100, 2718, 5599,
	2071, 3138, 5581, 5600, 1259, 5579, 3161, 5136, 2385, 3161,
	5135, 2119, 5132, 2068, 2069, 5131, 2102, 2103, 2104, 2113,
	2114, 2115, 5576, 3139, 5573, 5130, 5577, 5538, 5574, 2125,
	5037, 2718, 4271, 4850, 3002, 5537, 1260, 2099, 2070, 2718,
	5536, 5526, 3989, 2100, 3680, 5176, 2071, 5524, 5515, 2090,
	3953, 5176, 5176, 3947, 1427, 3759, 5513, 2119, 5480, 2087,
	5176, 3760, 5176, 5444, 5431, 3140, 5408, 3236, 2718, 1416,
	2718, 1417, 5406, 1893, 5404, 2125, 5176, 2385, 5176, 5385,
	1574, 1248, 5333, 4997, 2070, 5332, 3161, 5310, 5295, 3161,
	2718, 3236, 4749, 5261, 3141, 2090, 5253, 4539, 5195, 5194,
	5176, 3142, 2718, 2718, 5183, 2087, 5182, 5175, 2718, 3929,
	5176, 5176, 2382, 1238, 2798, 2382, 2385, 5119, 1413, 1413,
	1237, 2718, 1574, 3133, 5093, 2382, 3814, 3815, 3236, 5071,
	3711, 4967, 4940, 3680, 3143, 3161, 3161, 4874, 3161, 5445,
	5314, 3989, 2093, 2094, 2095, 2096, 5305, 5297, 2449, 4829,
	2068, 2069, 2076, 4830, 4777, 4740, 4435, 4734, 3236, 4283,
	1254, 4283, 4675, 4570, 4538, 4460, 4676, 4571, 4539, 4461,
	3257, 4458, 4438, 4352, 2099, 4459, 3161, 2718, 4348, 1475,
	4282, 3956, 3161, 2071, 4283, 3957, 1465, 3680, 2093, 2094,
	2095, 2096, 3619, 4435, 3132, 2110, 281, 3144, 2076, 2120,
	1913, 3862, 5047, 4997, 2382, 3161, 2098, 2101, 3829, 2382,
	4941, 3860, 2125, 1414, 1676, 3861, 3855, 4749, 3145, 3854,
	3161, 2070, 3805, 3161, 3231, 4717, 3806, 4677, 3146, 2116,
	3803, 2117, 3792, 3790, 3804, 4670, 3793, 3161, 2085, 2086,
	112, 2110, 3761, 3679, 3666, 2120, 3161, 3680, 2786, 3512,
	283, 3665, 2098, 2101, 3147, 2786, 3297, 3235, 2108, 88,
	3161, 3236, 3217, 3209, 3398, 3160, 3161, 2718, 2385, 3161,
	2385, 2399, 2717, 2091, 2785, 2116, 3161, 2117, 2786, 89,
	2582, 3308, 3619, 4157, 2085, 2086, 1466, 3749, 2378, 2351,
	3531, 3226, 2216, 2365, 1466, 1887, 4588, 94, 4323, 3993,
	2239, 2665, 1650, 282, 2108, 4272, 3201, 3200, 2997, 3199,
	3198, 3820, 3197, 1418, 2028, 1415, 1247, 1246, 1245, 2091,
	3814, 3815, 275, 2118, 281, 4273, 1893, 1244, 1243, 1242,
	1241, 276, 1240, 1236, 1235, 2076, 1234, 1233, 1232, 1231,
	104, 1230, 1229, 3369, 2107, 1228, 2353, 2068, 2069, 2353,
	2353, 1227, 2353, 2353, 1226, 2122, 3148, 2353, 1225, 1224,
	1223, 222, 1222, 1221, 5063, 1220, 1219, 3814, 3815, 2118,
	1218, 1217, 1216, 1215, 1214, 1213, 1212, 1199, 283, 1198,
	2071, 1197, 1196, 1123, 1195, 1194, 1193, 1192, 1191, 2098,
	2101, 1190, 1189, 3406, 1188, 3619, 57, 1187, 128, 1186,
	1185, 2122, 1313, 1184, 112, 125, 1183, 2068, 2069, 2998,
	1680, 1182, 1181, 1320, 1180, 2097, 1179, 1178, 2070, 1177,
	1176, 2242, 1175, 2382, 1174, 1173, 1172, 2009, 3149, 3150,
	1171, 282, 3830, 1912, 3029, 1170, 2382, 1169, 1168, 1167,
	2071, 2092, 1166, 1165, 1164, 1163, 1162, 1161, 1160, 3027,
	1159, 2382, 2065, 1148, 2382, 1147, 2091, 3151, 1146, 3814,
	3815, 2097, 3832, 3833, 3834, 1319, 1141, 3156, 1140, 1133,
	1132, 113, 4834, 2111, 2382, 3634, 1131, 2382, 2070, 1115,
	1114, 1113, 4773, 1541, 1322, 1112, 1069, 2092, 3152, 222,
	1068, 1067, 1907, 1066, 1065, 3406, 1064, 3132, 1055, 4270,
	2999, 1054, 2996, 3153, 1053, 3820, 1052, 1014, 906, 2124,
	1680, 1322, 1322, 1322, 2122, 5566, 905, 1466, 4789, 2111,
	2382, 904, 886, 312, 311, 310, 309, 308, 1467, 307,
	306, 305, 2076, 304, 303, 3154, 3652, 302, 2122, 301,
	300, 3829, 1477, 299, 298, 297, 296, 1901, 3013, 295,
	2385, 1322, 3820, 3283, 2382, 2124, 2378, 2351, 1632, 3011,
	294, 2814, 293, 292, 291, 290, 289, 281, 288, 287,
	286, 285, 1582, 1583, 1584, 284, 4493, 4576, 4450, 3155,
	1322, 1124, 4284, 1322, 3998, 3915, 3772, 5317, 3755, 3858,
	3132, 2109, 2076, 3746, 1569, 3600, 5065, 1296, 3371, 3344,
	3831, 3240, 3206, 2082, 2083, 2089, 2112, 2088, 2084, 3188,
	2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078, 2554,
	2426, 283, 2384, 1680, 2092, 5565, 3830, 2265, 1756, 2164,
	1896, 3814, 3815, 1322, 3859, 117, 1632, 2109, 2155, 1322,
	1322, 1742, 1586, 1541, 3820, 1449, 1466, 1878, 2497, 2082,
	2083, 2089, 2112, 2088, 2084, 5562, 2081, 2079, 2080, 2072,
	2073, 2074, 2075, 2077, 2078, 5539, 5523, 5421, 1322, 5413,
	1322, 5302, 1322, 3830, 282, 3001, 5300, 3814, 3815, 3404,
	5107, 1632, 2198, 2198, 5167, 5069, 1445, 5046, 4812, 2197,
	2197, 5049, 2124, 275, 218, 4811, 120, 1442, 4805, 124,
	281, 4804, 276, 1561, 4803, 4796, 1541, 4795, 2122, 1569,
	1960, 4793, 1512, 1516, 281, 4788, 4785, 1864, 4784, 2201,
	2196, 3836, 1563, 4716, 4674, 1906, 4669, 4494, 4463, 1632,
	4425, 281, 222, 2068, 2069, 2122, 4424, 1632, 4423, 1125,
	4690, 1524, 2157, 1680, 4384, 1124, 1322, 4344, 1322, 1441,
	3403, 3636, 1859, 1632, 283, 2122, 4339, 2099, 1600, 1601,
	209, 209, 1322, 2100, 1322, 3830, 2071, 3910, 283, 3825,
	3823, 3824, 3816, 3817, 3818, 3819, 3821, 3822, 3851, 3842,
	1851, 1891, 3813, 2162, 3810, 283, 3809, 3807, 3802, 3801,
	3800, 1965, 1968, 3797, 3831, 2125, 2072, 2073, 2074, 2075,
	2077, 2078, 1555, 2032, 2070, 1695, 1612, 282, 3796, 2995,
	3795, 3791, 3771, 179, 281, 2090, 3820, 3754, 1589, 3747,
	2156, 282, 2154, 1426, 3745, 2087, 275, 3667, 3189, 2984,
	224, 1609, 2065, 2766, 2723, 276, 2155, 1678, 282, 2721,
	275, 3831, 2064, 3245, 2013, 1547, 1592, 2122, 5776, 276,
	1602, 1603, 3403, 5698, 4586, 1262, 5697, 275, 5614, 5612,
	1971, 1451, 3820, 1987, 1876, 222, 276, 4370, 283, 5472,
	219, 4691, 5390, 5376, 5372, 223, 5371, 5370, 5350, 222,
	5064, 1443, 1322, 1322, 1322, 1322, 1322, 1322, 1322, 1322,
	1749, 1888, 1841, 1846, 1641, 5349, 222, 3814, 3815, 5347,
	5316, 5315, 281, 1569, 1849, 5299, 5293, 2924, 2093, 2094,
	2095, 2096, 5279, 1048, 1051, 5276, 1322, 5274, 2076, 5257,
	1874, 282, 1322, 2033, 1996, 1998, 1953, 281, 5255, 5191,
	5162, 5105, 1260, 3831, 5030, 2043, 5026, 3856, 5024, 5022,
	275, 4998, 4879, 4878, 1743, 4810, 4750, 4681, 4574, 276,
	4573, 4554, 4553, 4551, 3403, 3904, 283, 2219, 4441, 1117,
	4428, 4334, 2142, 3825, 3823, 3824, 3816, 3817, 3818, 3819,
	3821, 3822, 2098, 2101, 4285, 4245, 1994, 4137, 4077, 222,
	4044, 283, 3635, 3830, 3990, 3942, 3907, 88, 3776, 1120,
	1119, 3775, 281, 2072, 2073, 2074, 2075, 2077, 2078, 3770,
	1900, 3736, 2068, 2069, 2085, 2086, 3613, 89, 3611, 282,
	3431, 3823, 3824, 3816, 3817, 3818, 3819, 3821, 3822, 2122,
	2930, 2204, 2203, 1990, 2202, 94, 2099, 4691, 275, 2199,
	1322, 1322, 1322, 2193, 282, 2071, 1322, 276, 2144, 2091,
	2188, 2186, 3203, 1447, 3196, 1447, 283, 281, 3159, 3040,
	3009, 2141, 2356, 275, 2264, 2074, 2075, 2077, 2078, 2220,
	1756, 2213, 276, 5319, 2125, 2122, 2212, 3651, 104, 2211,
	2210, 2209, 1322, 2070, 2039, 2287, 1541, 209, 2008, 2208,
	2207, 2206, 3820, 2312, 2287, 2205, 1541, 2066, 2194, 1541,
	1632, 2183, 222, 2182, 2027, 3826, 3827, 3828, 2181, 282,
	3028, 283, 3825, 3823, 3824, 3816, 3817, 3818, 3819, 3821,
	3822, 1123, 2044, 2180, 4276, 3026, 2179, 2178, 275, 1260,
	2177, 2122, 2228, 2176, 57, 2175, 128, 276, 2174, 2173,
	2172, 2171, 112, 125, 2170, 2169, 2168, 2157, 2275, 2143,
	2140, 2135, 1985, 2040, 1554, 1472, 1461, 5318, 281, 5036,
	2268, 3831, 4855, 4781, 282, 2048, 5133, 222, 2280, 1541,
	4492, 4457, 2047, 4444, 3758, 1322, 3194, 1238, 4857, 2200,
	2295, 4491, 2156, 275, 1237, 3940, 2042, 3238, 2138, 4943,
	2343, 2097, 276, 2346, 2260, 2274, 1581, 2076, 1579, 1322,
	2068, 2069, 3506, 2225, 2226, 2061, 2062, 1756, 5050, 113,
	5689, 5380, 283, 5373, 5068, 2249, 5558, 2092, 4983, 4982,
	2363, 2269, 222, 1596, 3012, 4981, 2368, 3814, 3815, 4980,
	2370, 4979, 4942, 2071, 1596, 3010, 4671, 2375, 1596, 2419,
	1632, 2377, 2417, 1632, 1632, 1632, 1632, 4836, 2381, 1596,
	4757, 2098, 2101, 1596, 4756, 2189, 2190, 4755, 1260, 4754,
	4753, 2391, 4752, 2387, 1413, 282, 2290, 4751, 1569, 4540,
	1594, 2070, 2288, 1580, 2337, 2290, 4448, 4447, 2287, 2300,
	1596, 2288, 4287, 2390, 275, 2124, 2272, 3816, 3817, 3818,
	3819, 3821, 3822, 276, 3814, 3815, 2270, 2411, 2410, 4286,
	4166, 1596, 2419, 1322, 2240, 5642, 2250, 3992, 3991, 5640,
	3457, 2640, 1574, 281, 1989, 2198, 5554, 2242, 2091, 2405,
	4321, 4611, 2197, 222, 5301, 3799, 1745, 3798, 3718, 3442,
	2247, 1577, 3824, 3816, 3817, 3818, 3819, 3821, 3822, 4569,
	1575, 1640, 1048, 1051, 1210, 2178, 1322, 4127, 4162, 2444,
	2178, 1048, 1051, 2366, 281, 281, 3551, 4046, 2217, 5166,
	2166, 4226, 4515, 4225, 4516, 281, 5343, 283, 2454, 2700,
	4697, 2447, 4683, 117, 2244, 4697, 2259, 2258, 2571, 2257,
	2255, 2254, 2253, 2088, 2084, 1649, 2081, 2079, 2080, 2072,
	2073, 2074, 2075, 2077, 2078, 1696, 2393, 5342, 2449, 1211,
	2122, 4699, 5260, 5587, 5044, 2296, 4699, 3676, 283, 283,
	4192, 4159, 4987, 2701, 4668, 4617, 2389, 4608, 4579, 283,
	282, 5343, 1650, 3865, 4314, 4695, 3974, 2795, 3865, 2414,
	4158, 2732, 218, 2519, 120, 1574, 4080, 124, 2441, 275,
	1574, 5109, 3865, 4372, 3440, 2992, 5740, 3519, 276, 5563,
	2192, 2997, 2214, 4242, 3764, 2163, 3508, 2759, 2479, 2290,
	2646, 282, 282, 1964, 2582, 2288, 5578, 5575, 1883, 281,
	1550, 2767, 282, 1508, 3528, 1571, 4959, 1125, 222, 3820,
	275, 275, 4955, 1124, 4266, 4545, 2092, 2639, 2662, 276,
	276, 275, 2638, 5365, 5706, 3525, 3523, 3593, 1425, 5052,
	276, 5479, 2431, 4049, 2432, 4927, 1632, 1632, 2522, 4564,
	2649, 3648, 2412, 4924, 2439, 2440, 2021, 1756, 2682, 222,
	222, 4176, 2649, 283, 5643, 2659, 2649, 5564, 5189, 5185,
	222, 2433, 2434, 5644, 1990, 1048, 1051, 5186, 2437, 2438,
	2580, 5164, 1632, 4315, 3978, 5158, 2067, 1265, 5218, 4630,
	1108, 179, 2998, 1934, 2124, 3818, 3819, 3821, 3822, 4929,
	3298, 2416, 1616, 1576, 2663, 1581, 1208, 2406, 224, 1927,
	1005, 5769, 5381, 1632, 1206, 2458, 282, 2511, 3342, 1885,
	5211, 1204, 1013, 5197, 5681, 4164, 5222, 5621, 2635, 1010,
	2644, 2480, 2509, 4990, 4989, 275, 2655, 4628, 1694, 4627,
	3830, 4619, 2415, 4594, 276, 5234, 4593, 4591, 219, 4590,
	4578, 2674, 1665, 223, 1693, 2711, 2715, 4537, 1632, 2505,
	1632, 4141, 1632, 4536, 2829, 4629, 4182, 1572, 1264, 4181,
	2394, 4129, 3402, 4163, 1118, 3402, 3928, 1573, 3769, 3768,
	1632, 1632, 1580, 2999, 3767, 2996, 3766, 2683, 3722, 3400,
	3549, 3548, 3400, 3941, 1632, 2081, 2079, 2080, 2072, 2073,
	2074, 2075, 2077, 2078, 3530, 3518, 3510, 2533, 3499, 3498,
	3486, 1109, 2215, 2588, 3475, 1322, 3473, 1322, 2576, 3468,
	3467, 3447, 2122, 3446, 1322, 1258, 2752, 1322, 2827, 2312,
	2312, 1756, 878, 1322, 1322, 1322, 1322, 1322, 1322, 1322,
	1322, 1322, 1322, 1322, 1322, 1322, 1322, 1322, 1322, 1322,
	1322, 1322, 1322, 1322, 1322, 1322, 1322, 1322, 1322, 1322,
	1322, 1322, 1322, 1322, 1322, 1322, 1322, 1322, 1322, 1322,
	1692, 1322, 2632, 1322, 1322, 1322, 1322, 2790, 2610, 2647,
	1987, 4923, 2778, 2716, 2778, 2779, 4125, 2756, 3407, 4672,
	4046, 2760, 5707, 2773, 2701, 2813, 2449, 3218, 1614, 1322,
	4925, 2703, 2704, 1322, 1322, 1048, 1051, 2705, 3831, 1575,
	4160, 1322, 2648, 878, 2831, 1322, 2818, 1322, 1322, 2631,
	2645, 2628, 2793, 2660, 2648, 1756, 2653, 5187, 2648, 1257,
	2905, 1322, 1322, 1322, 1322, 5159, 2297, 1322, 1322, 1322,
	1322, 1322, 1322, 1322, 1322, 2809, 2690, 2690, 2803, 2707,
	2689, 2689, 2693, 3645, 3239, 1989, 5682, 3980, 3001, 5622,
	2041, 1260, 3045, 1260, 3044, 2581, 1322, 1322, 1322, 1322,
	1322, 1322, 1322, 1322, 1322, 2770, 1322, 1574, 2861, 2781,
	2728, 1322, 1938, 3463, 4866, 1445, 4944, 1445, 1929, 2973,
	2974, 2078, 2736, 1447, 3461, 2828, 1442, 2578, 1442, 1581,
	1756, 2783, 2829, 2973, 2989, 1994, 935, 1994, 2273, 1447,
	2546, 1494, 1598, 1599, 2916, 2857, 2858, 4877, 3822, 5235,
	3305, 2762, 1886, 1598, 1599, 1322, 1756, 2421, 2422, 2751,
	3037, 4079, 3986, 5233, 2775, 1642, 2574, 2552, 1598, 1599,
	2855, 5231, 1598, 1599, 1571, 3251, 2808, 2914, 1441, 3416,
	1441, 1259, 3086, 3086, 3100, 2843, 2973, 2842, 1541, 3120,
	3122, 2854, 1555, 2787, 2992, 2788, 2827, 3130, 5684, 1598,
	1599, 2579, 4126, 2642, 4908, 3233, 1580, 2826, 2466, 3444,
	3816, 3817, 3818, 3819, 3821, 3822, 877, 1930, 1564, 209,
	2421, 2422, 2995, 2817, 5230, 2936, 3383, 2830, 1744, 3176,
	2816, 2815, 2823, 2575, 1260, 2988, 1541, 1106, 1977, 1105,
	1976, 3204, 1238, 4901, 1260, 1238, 1238, 3273, 1260, 2846,
	4885, 2532, 2847, 2848, 5232, 2529, 5221, 5643, 1975, 933,
	1974, 2543, 1576, 2545, 2442, 4548, 1946, 2590, 1455, 4926,
	3527, 3228, 1740, 2684, 1111, 1110, 1541, 1541, 2230, 2035,
	3292, 1650, 3232, 3168, 1201, 1457, 2825, 2920, 1691, 1708,
	2920, 1650, 3497, 822, 2594, 5358, 2260, 877, 3984, 2249,
	3221, 4902, 3208, 3419, 5685, 2932, 3526, 3224, 3430, 3364,
	1443, 3487, 1443, 1452, 2517, 3977, 2530, 1756, 3694, 2463,
	817, 1712, 1674, 4884, 1714, 3253, 1572, 3524, 3522, 3709,
	3256, 2467, 1553, 2457, 2910, 2986, 1573, 1632, 1632, 1413,
	879, 1250, 1260, 996, 3733, 2928, 2531, 2503, 5560, 3386,
	3167, 3286, 2926, 3278, 5243, 2591, 3248, 1575, 2911, 3282,
	4003, 1458, 2685, 2828, 5718, 1541, 2912, 1541, 1252, 2234,
	2917, 3293, 5683, 3193, 3294, 3247, 1638, 3731, 1569, 3175,
	3095, 3180, 3082, 1256, 3186, 3187, 3124, 1322, 3111, 3126,
	4575, 1459, 1322, 3401, 3270, 3157, 3158, 2459, 2068, 2069,
	3290, 4921, 3173, 3174, 2200, 3169, 2036, 1324, 4652, 3488,
	1011, 3295, 3489, 4561, 2247, 3285, 1674, 3227, 1011, 1251,
	2510, 879, 2099, 2237, 3262, 1203, 1011, 1632, 5687, 5360,
	3301, 2071, 2046, 1011, 1615, 2508, 1456, 1048, 1051, 1048,
	1051, 3535, 2232, 3429, 1673, 2826, 2780, 3321, 4002, 3366,
	4235, 4876, 3230, 3303, 3479, 3327, 3328, 3329, 3330, 3345,
	2125, 3346, 2235, 4865, 3491, 5749, 2460, 2582, 997, 2070,
	4653, 3250, 3001, 2694, 2595, 3244, 3338, 3708, 1959, 3276,
	1157, 2312, 2189, 2190, 4361, 5331, 3312, 5330, 2902, 1048,
	1051, 1671, 1571, 3296, 3347, 3289, 1512, 3304, 1516, 3281,
	3385, 934, 4988, 3039, 5693, 3337, 2233, 3255, 3041, 3042,
	3490, 3043, 3259, 3443, 3046, 3258, 3047, 3048, 4592, 3302,
	4651, 3353, 4358, 3355, 3249, 3357, 3280, 3418, 3496, 4897,
	3983, 3287, 4589, 3382, 3728, 4499, 1574, 4898, 1673, 1957,
	1937, 4498, 4559, 2580, 5561, 4097, 3880, 4497, 4903, 2596,
	2597, 3299, 3388, 4486, 3390, 4485, 1756, 2417, 2417, 936,
	1672, 4484, 2686, 932, 4188, 2542, 3729, 2544, 1632, 1493,
	3734, 4180, 4088, 2629, 3588, 3335, 2592, 2913, 2634, 4123,
	1576, 3994, 3529, 2076, 3543, 3391, 3408, 2915, 3393, 3474,
	3466, 4900, 3352, 1541, 3354, 1709, 3356, 3584, 3358, 3359,
	3445, 1056, 1688, 3222, 2496, 2495, 5655, 4098, 2603, 3343,
	4904, 2553, 1322, 4359, 1322, 3313, 3314, 5668, 3241, 3315,
	3316, 2691, 3405, 3370, 5441, 2593, 2687, 5667, 1063, 4919,
	3351, 3311, 1002, 1001, 4089, 2465, 3589, 2098, 2101, 2585,
	2236, 3701, 3702, 3216, 1572, 2582, 1541, 5686, 4922, 5720,
	3623, 3449, 5629, 3384, 1573, 2636, 3223, 4096, 4535, 3001,
	5559, 3464, 4534, 5591, 3544, 4189, 2692, 3450, 3995, 5004,
	2604, 4263, 2900, 3520, 3374, 4186, 2903, 1632, 1453, 3504,
	2352, 998, 2666, 3608, 4087, 3546, 3587, 2673, 4264, 1632,
	3545, 1632, 3317, 3417, 2599, 1963, 1632, 4119, 3659, 2234,
	2696, 2586, 2630, 818, 2091, 5530, 209, 5531, 3632, 4121,
	3671, 1149, 3455, 3456, 3458, 3459, 3460, 3462, 3421, 3424,
	2602, 3411, 1738, 3494, 5456, 1322, 3617, 3434, 3500, 5359,
	4033, 1322, 1322, 3536, 2659, 2899, 5150, 5366, 1150, 1134,
	1454, 3448, 4120, 4118, 4117, 1959, 1322, 1710, 3674, 4114,
	4164, 2584, 3507, 2237, 3550, 3465, 876, 4899, 3673, 3585,
	3586, 2598, 2695, 3979, 3470, 1884, 1139, 3879, 4061, 3483,
	3484, 4844, 3170, 2663, 1706, 1651, 4263, 3730, 3493, 4845,
	1470, 3627, 5691, 3502, 3492, 5018, 2122, 3732, 3001, 3598,
	1322, 1322, 2235, 2643, 3724, 819, 1322, 2919, 3677, 3516,
	3509, 2184, 3402, 5607, 4909, 4910, 3938, 4171, 4920, 1322,
	1322, 2667, 3685, 3686, 5608, 1322, 1322, 999, 3595, 3422,
	3540, 1322, 3597, 1707, 3541, 3542, 996, 2504, 2581, 4060,
	2657, 2462, 4908, 2037, 5439, 5628, 2641, 3207, 1202, 3668,
	2663, 4531, 4843, 1552, 2927, 2456, 1249, 3343, 1000, 2600,
	820, 1252, 821, 2572, 1574, 1711, 1713, 4067, 3678, 5098,
	2656, 5653, 5490, 3683, 4637, 1048, 1051, 1322, 1322, 1322,
	3663, 4901, 2092, 1322, 4635, 4894, 1057, 1058, 4961, 4637,
	5716, 843, 5440, 1322, 2134, 3618, 3774, 1637, 1639, 4635,
	3172, 3725, 2230, 1613, 4892, 996, 3962, 3631, 4560, 2651,
	1322, 2983, 5692, 1158, 4896, 3661, 5087, 1004, 3643, 5721,
	3681, 3185, 1259, 3654, 4069, 1445, 3687, 4374, 3688, 3664,
	1252, 3700, 5700, 5033, 1994, 4763, 1442, 1003, 3662, 4902,
	4187, 1445, 4993, 4854, 2579, 1656, 2691, 4641, 4487, 4122,
	2124, 1476, 1442, 2045, 5694, 1474, 2626, 3691, 3690, 4764,
	2901, 997, 3748, 4317, 3752, 3753, 3695, 2641, 3692, 3756,
	4034, 5410, 3757, 2843, 4639, 2842, 2652, 5496, 3689, 5425,
	2236, 5278, 1516, 3710, 2643, 5002, 4992, 4895, 1441, 4639,
	3717, 2692, 5225, 2234, 4689, 4068, 1151, 1152, 4991, 4722,
	4251, 4107, 2660, 5401, 1441, 1322, 1322, 1322, 1322, 4105,
	3951, 3477, 4638, 3215, 1322, 1322, 1322, 2747, 2637, 1322,
	2227, 1473, 3503, 2640, 1135, 1136, 1464, 4638, 1260, 809,
	997, 2055, 2055, 1322, 1447, 1756, 3723, 5019, 2056, 2516,
	4808, 4532, 1060, 1059, 2050, 4200, 4174, 2237, 2845, 2583,
	2407, 4175, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078,
	1322, 5393, 1322, 3920, 5726, 2670, 2232, 5085, 2633, 5184,
	5627, 1447, 5086, 5126, 3102, 4414, 5394, 4597, 3872, 3873,
	4106, 3478, 5287, 5411, 4040, 5340, 2235, 2404, 2353, 1756,
	2835, 5592, 4357, 4723, 4623, 5606, 4598, 4300, 4546, 4544,
	4252, 4240, 1315, 4036, 1447, 3853, 2642, 1756, 3633, 3626,
	3615, 5395, 4298, 4661, 2774, 2768, 1061, 1062, 2761, 1541,
	1443, 3763, 4291, 2754, 2731, 1002, 1001, 2668, 2727, 3539,
	2233, 1931, 1485, 5270, 4511, 3451, 1443, 2312, 885, 4429,
	5462, 1756, 4318, 3406, 5428, 2055, 3874, 1541, 4725, 2054,
	2054, 2518, 2400, 3482, 3423, 5057, 3612, 1495, 1541, 4765,
	5250, 5248, 3954, 5161, 3273, 2312, 4052, 4897, 4048, 4047,
	3715, 3693, 2443, 2402, 998, 4898, 4443, 2669, 3877, 3876,
	1682, 1681, 2806, 5397, 2796, 2725, 4903, 3163, 1675, 4480,
	4108, 3214, 3914, 3213, 1002, 1001, 3212, 1322, 3480, 2639,
	3211, 4636, 3884, 3210, 2638, 1983, 1981, 4666, 5396, 1322,
	1153, 1154, 4302, 3927, 1969, 1156, 4636, 2561, 3934, 1950,
	2403, 3909, 2562, 5088, 2056, 2056, 5009, 5398, 1257, 4900,
	3166, 3882, 4953, 1970, 4293, 3848, 3849, 3850, 1137, 1138,
	2430, 3945, 4596, 998, 1541, 2836, 5173, 3952, 4904, 5353,
	4292, 3427, 3922, 3923, 3924, 3925, 3955, 4766, 3975, 3959,
	3961, 4552, 3866, 2054, 2236, 2527, 4809, 2134, 3897, 3918,
	3981, 4684, 4685, 3964, 3165, 3906, 2772, 3966, 3967, 3164,
	3883, 4195, 3970, 1756, 3971, 3895, 1756, 3972, 1569, 4415,
	1952, 3898, 3899, 5252, 2582, 4142, 2679, 4541, 3881, 3913,
	5725, 4416, 3968, 5412, 924, 5650, 5148, 2571, 1541, 4301,
	999, 3270, 4035, 5142, 2312, 5141, 3896, 3592, 3341, 47,
	4311, 3987, 3950, 3939, 4109, 3902, 1657, 4023, 4024, 3452,
	3453, 1322, 3481, 3985, 3949, 3948, 3988, 3932, 3996, 3931,
	3901, 1000, 925, 2571, 3930, 3905, 2563, 1541, 5476, 4050,
	3682, 4085, 4054, 5269, 4512, 3596, 3594, 2800, 2700, 1619,
	5468, 5174, 3933, 4007, 2567, 3794, 5354, 5156, 1541, 4602,
	4871, 5169, 4100, 5251, 5168, 4870, 1541, 5459, 4815, 999,
	4104, 4432, 3008, 3960, 1048, 1051, 3888, 1541, 5129, 1658,
	3958, 4110, 4488, 4051, 1735, 4899, 4056, 2538, 3969, 4058,
	1004, 5498, 1979, 2709, 3965, 4015, 1737, 1734, 1732, 5237,
	1000, 1322, 1322, 4173, 1702, 1700, 3976, 5654, 5157, 1756,
	1003, 2662, 4128, 4869, 5652, 5580, 1698, 1669, 1667, 2662,
	3921, 1541, 4012, 5383, 5374, 4152, 5139, 4014, 5104, 1664,
	4607, 4018, 4909, 4910, 4019, 4037, 2564, 2569, 4862, 4807,
	1541, 4144, 4665, 4146, 4169, 884, 4150, 4504, 5469, 4304,
	4156, 2429, 3845, 4082, 5355, 1662, 1660, 1653, 1647, 1004,
	4333, 4064, 1982, 1980, 3999, 4542, 4000, 4312, 4001, 4086,
	4130, 4115, 1155, 3946, 4299, 4294, 4295, 4296, 4297, 1003,
	3808, 1645, 3889, 3735, 3616, 1632, 3517, 1632, 3511, 3441,
	4043, 1756, 3377, 3246, 2805, 2791, 1042, 1632, 1632, 5399,
	2730, 2551, 3273, 4020, 2677, 5400, 2547, 4172, 4138, 2526,
	2446, 2345, 2267, 2263, 2020, 4143, 4303, 1739, 3846, 4017,
	4016, 1541, 4006, 2050, 3368, 4241, 3367, 3319, 4101, 2824,
	2565, 4210, 2726, 1687, 4962, 2474, 3887, 3894, 4124, 1447,
	4070, 2344, 2342, 2167, 2034, 4078, 4167, 4084, 1409, 3007,
	4257, 2507, 5552, 2471, 4234, 4091, 4610, 4609, 4259, 1632,
	3944, 5035, 4966, 4095, 4595, 5458, 4939, 4305, 4099, 3671,
	5055, 1632, 4239, 1632, 3893, 4092, 4103, 4971, 3671, 4093,
	4073, 4094, 1009, 2540, 4957, 2572, 209, 209, 4954, 2708,
	2539, 4890, 4889, 5625, 4190, 1978, 4193, 4488, 4721, 1736,
	1733, 1731, 1322, 4708, 4626, 4600, 4567, 1701, 1699, 1322,
	1322, 4250, 4133, 1322, 1322, 1322, 4140, 1322, 4139, 1697,
	1668, 1666, 4177, 4231, 4153, 4268, 1322, 2312, 4565, 4165,
	4543, 4151, 1663, 4244, 4238, 1322, 4227, 3646, 3638, 3630,
	1322, 3494, 4071, 4170, 3622, 4178, 1756, 2570, 3609, 3270,
	4168, 3606, 3590, 3284, 3279, 1322, 2724, 2722, 1661, 1659,
	1652, 1646, 4253, 1756, 2702, 2664, 1012, 1270, 2601, 2587,
	4308, 2573, 4279, 2312, 2312, 1322, 1322, 1044, 1322, 1322,
	1322, 2386, 2383, 1043, 1644, 4258, 2380, 2379, 3449, 2376,
	2371, 4260, 4072, 4197, 3890, 3891, 3892, 2369, 2364, 1322,
	2358, 2354, 4354, 1322, 4256, 2312, 2312, 1322, 1322, 1322,
	1322, 1322, 1322, 1322, 1322, 1322, 1322, 1322, 1322, 1322,
	1322, 1322, 1322, 1322, 1322, 1322, 1322, 4336, 1322, 4346,
	4347, 4319, 4237, 4232, 4179, 4236, 1322, 1322, 2312, 4387,
	4309, 4388, 5620, 1322, 4183, 1260, 5535, 2506, 4265, 2470,
	4277, 4278, 2279, 1048, 1051, 1422, 1322, 4274, 3476, 3713,
	2059, 5644, 2408, 4427, 1205, 1207, 5352, 1447, 1447, 4154,
	2550, 1322, 3394, 3583, 2673, 2561, 4267, 209, 4316, 3395,
	2562, 3392, 1423, 2396, 2397, 4306, 5517, 5418, 5070, 2566,
	4310, 4978, 4868, 3672, 3982, 2425, 1039, 1936, 3402, 5289,
	3402, 3428, 3379, 5282, 3229, 2536, 1756, 1921, 1479, 4733,
	2582, 2461, 1519, 2300, 2771, 3400, 1445, 3425, 5516, 1541,
	1541, 2548, 1729, 1730, 2501, 2494, 1518, 1442, 4465, 4426,
	4343, 4341, 2468, 4930, 2068, 2069, 4973, 1541, 1541, 4353,
	2068, 2069, 2287, 3547, 1541, 1251, 1643, 5304, 3273, 2312,
	913, 2312, 5171, 1445, 4816, 4369, 4360, 4362, 4363, 2857,
	4377, 1591, 4376, 3432, 1442, 3714, 4794, 2071, 4065, 3433,
	2549, 1322, 3454, 4385, 2063, 1548, 1478, 4386, 1632, 1441,
	2309, 2060, 1632, 1632, 1756, 5638, 1445, 4418, 1588, 5588,
	4520, 2857, 4393, 4390, 4392, 4481, 313, 1442, 4155, 3433,
	4640, 3605, 3525, 1424, 2563, 2070, 1519, 4622, 4705, 2755,
	322, 2070, 1559, 4482, 4483, 2395, 1441, 1143, 1519, 3523,
	3532, 5658, 2567, 3513, 4422, 3435, 4419, 4439, 4440, 930,
	1705, 4495, 4496, 4621, 5467, 1322, 5446, 5416, 4505, 916,
	916, 5414, 3515, 3437, 4507, 2561, 4508, 4436, 4437, 1441,
	2562, 806, 4509, 5688, 5351, 5271, 4510, 3514, 3436, 5298,
	5268, 5149, 4719, 4707, 4688, 4243, 3653, 3621, 1322, 1322,
	4449, 4451, 3607, 3127, 4434, 4452, 2392, 2298, 5170, 3501,
	4174, 4174, 4462, 1882, 1881, 4175, 4175, 4518, 4300, 1875,
	1253, 3935, 2679, 5724, 1893, 3270, 3814, 3815, 2068, 2069,
	4456, 2436, 3307, 4298, 2564, 2569, 5657, 4984, 5034, 4174,
	4786, 1443, 3397, 4291, 4175, 2435, 3306, 4490, 4519, 3003,
	1322, 1322, 4500, 2290, 4603, 4506, 4547, 2675, 1322, 2288,
	1892, 1618, 3372, 1893, 1893, 3038, 3193, 1617, 2436, 2435,
	5595, 4566, 1704, 4568, 4715, 1703, 5272, 5212, 1443, 1632,
	1632, 4975, 4970, 4969, 4580, 4846, 4842, 1632, 4841, 4782,
	4528, 4525, 4489, 4365, 4148, 4145, 3375, 1632, 2161, 2160,
	2555, 5709, 1541, 5669, 2563, 5521, 4649, 5450, 5449, 5448,
	4584, 1443, 4533, 5382, 5324, 4364, 5320, 5246, 4585, 4587,
	4642, 5201, 2567, 5134, 5128, 5127, 4524, 4644, 2565, 1048,
	1051, 2312, 5125, 4302, 5124, 5028, 5003, 4928, 4383, 4856,
	4612, 4840, 4839, 4745, 4618, 4527, 4739, 4624, 4673, 4563,
	4555, 4249, 4057, 4009, 3963, 4293, 1322, 3637, 4605, 4606,
	4572, 3610, 3426, 4625, 3378, 1283, 4577, 2273, 3365, 2312,
	3334, 4292, 3333, 3332, 3331, 3275, 3243, 3242, 1632, 2931,
	2769, 2742, 2741, 2572, 1322, 2740, 2739, 2738, 3449, 4633,
	2737, 4726, 1447, 1322, 4634, 2541, 4643, 2502, 2493, 4654,
	4655, 1632, 2492, 4679, 2564, 2569, 1632, 1632, 1632, 2491,
	4735, 2490, 2489, 2361, 1546, 2360, 2359, 2357, 3659, 2278,
	2277, 1945, 1944, 1943, 1332, 1942, 4664, 1941, 4727, 1940,
	4301, 3671, 1632, 4700, 4650, 4657, 1939, 1935, 4698, 1933,
	4021, 1932, 1870, 1869, 1756, 2570, 1728, 1322, 1322, 4631,
	1727, 1654, 3536, 1322, 1322, 2312, 1608, 1607, 1322, 1322,
	1606, 1322, 1605, 4730, 1604, 4647, 1322, 4729, 1551, 4658,
	1502, 4718, 4289, 1501, 4746, 4701, 1500, 1322, 320, 320,
	320, 1499, 812, 813, 1498, 829, 812, 829, 841, 1497,
	4022, 883, 1496, 1322, 4710, 903, 4712, 1490, 2565, 1489,
	910, 910, 910, 910, 1488, 320, 4687, 1677, 1487, 1486,
	1404, 2398, 4648, 1209, 320, 1200, 4742, 4043, 4704, 5357,
	4907, 4906, 4905, 2537, 4767, 4758, 2750, 4659, 4706, 4760,
	4663, 111, 4709, 1928, 3469, 103, 2671, 4562, 1130, 5589,
	4728, 5701, 5733, 4768, 4737, 320, 4731, 4780, 2559, 4736,
	2733, 2605, 5500, 2572, 4744, 4776, 1447, 5499, 5387, 3260,
	4743, 1445, 2355, 4203, 1447, 4813, 4202, 5594, 1756, 1756,
	2609, 1756, 1442, 5242, 1075, 971, 2312, 5497, 1916, 209,
	4304, 1090, 1447, 5478, 4059, 3552, 1655, 2566, 5265, 2475,
	3908, 3195, 1632, 1632, 5438, 4790, 3773, 5311, 1899, 4761,
	1905, 5097, 1911, 3006, 2165, 4299, 4294, 4295, 4296, 4297,
	2557, 3857, 105, 1306, 1756, 2570, 1354, 5017, 5016, 4891,
	5502, 4549, 4213, 5013, 1441, 1541, 5012, 2302, 2304, 1269,
	1759, 3135, 3137, 3179, 5529, 2409, 5715, 2418, 2191, 3085,
	1331, 2300, 1369, 1326, 1327, 2306, 4759, 4303, 2612, 1330,
	4821, 1328, 1756, 1329, 2185, 1325, 4247, 4714, 4233, 3657,
	2558, 1322, 4275, 1988, 4806, 1986, 973, 4824, 4826, 3191,
	2925, 2990, 1447, 3762, 1447, 2158, 2007, 1285, 2012, 1308,
	4848, 4849, 2987, 1471, 4880, 4881, 1297, 3885, 4262, 3128,
	2622, 4453, 2026, 2834, 2031, 1100, 3811, 2993, 4305, 1541,
	812, 812, 1460, 4938, 4832, 3108, 2309, 2309, 320, 1756,
	3101, 1541, 3097, 4931, 1541, 4947, 4817, 4820, 4950, 4867,
	4823, 3973, 4883, 3647, 4822, 4818, 4819, 4833, 2038, 5111,
	2136, 4851, 4852, 4853, 4917, 3658, 4835, 1322, 1585, 1289,
	1756, 4847, 2923, 2149, 4859, 4860, 4861, 3740, 2844, 4864,
	4269, 3911, 4872, 4873, 4886, 3237, 1443, 2566, 4932, 2618,
	5508, 4373, 4831, 4918, 3373, 2746, 1421, 1420, 4863, 1469,
	1419, 5484, 5481, 2661, 4974, 5020, 4976, 3913, 4208, 4209,
	2401, 3300, 4934, 4935, 2935, 4228, 1632, 1632, 1302, 1445,
	1445, 3273, 1322, 1322, 3348, 2305, 4985, 3349, 4888, 1862,
	1442, 1442, 1447, 4875, 4882, 2524, 4010, 3870, 4686, 1947,
	5178, 1314, 4956, 2121, 3579, 4958, 3578, 5346, 1570, 4960,
	1568, 1567, 2615, 1566, 5010, 4469, 1541, 5678, 3538, 3533,
	5038, 4933, 4977, 2680, 4558, 4557, 4556, 280, 3707, 4968,
	2057, 2049, 1756, 4948, 277, 279, 278, 1632, 4063, 4466,
	3917, 1620, 1441, 1441, 5000, 5586, 4582, 4194, 27, 917,
	5058, 918, 5021, 919, 3310, 2428, 1587, 4914, 4514, 4914,
	5503, 26, 1632, 1632, 1632, 1632, 1632, 1632, 1632, 2620,
	25, 24, 23, 4470, 4951, 5042, 134, 5045, 28, 5032,
	50, 4996, 1322, 1322, 1322, 4999, 5001, 5059, 5039, 4700,
	4986, 31, 30, 5, 4698, 22, 178, 176, 4937, 153,
	1756, 4471, 4995, 174, 4468, 1322, 4994, 173, 1322, 1322,
	144, 4946, 172, 4479, 4949, 171, 5005, 170, 1322, 4477,
	5015, 2312, 5023, 5011, 169, 168, 1322, 1322, 3270, 167,
	5031, 5053, 5029, 5067, 175, 2621, 166, 165, 160, 164,
	163, 5062, 162, 161, 159, 1756, 157, 1632, 158, 152,
	5041, 156, 155, 154, 151, 150, 4478, 149, 148, 147,
	5089, 4474, 146, 145, 5060, 143, 2256, 177, 5081, 142,
	141, 2625, 5075, 1541, 1443, 1443, 5079, 225, 140, 139,
	5073, 5094, 138, 5072, 2309, 137, 4475, 4914, 29, 1322,
	1322, 136, 135, 896, 897, 69, 68, 131, 132, 21,
	48, 16, 73, 74, 20, 1756, 15, 43, 108, 123,
	122, 121, 44, 1322, 118, 42, 19, 18, 17, 116,
	115, 5106, 114, 41, 39, 13, 1322, 11, 45, 2251,
	14, 1283, 1283, 1283, 5100, 1322, 7, 110, 217, 214,
	2312, 213, 216, 212, 2613, 215, 107, 211, 5155, 109,
	1322, 5117, 5118, 1322, 210, 2623, 106, 37, 12, 205,
	5120, 5122, 5121, 4693, 97, 208, 207, 5138, 206, 102,
	204, 5152, 2619, 5153, 1322, 5146, 5147, 1322, 203, 202,
	197, 3472, 98, 95, 1756, 201, 101, 100, 5082, 5181,
	1632, 1322, 200, 1632, 1632, 96, 99, 35, 8, 72,
	1541, 9, 5083, 2616, 5227, 4313, 5145, 2300, 126, 127,
	2614, 46, 5154, 1632, 5200, 93, 92, 91, 2624, 90,
	34, 71, 33, 274, 272, 5160, 273, 2571, 271, 4472,
	270, 193, 250, 1447, 5151, 1447, 249, 4473, 5192, 5193,
	248, 247, 246, 245, 244, 243, 242, 237, 1839, 241,
	5504, 239, 238, 240, 5204, 5236, 5203, 236, 5205, 2312,
	5245, 266, 5198, 265, 5217, 264, 1756, 263, 4210, 1632,
	262, 5249, 5202, 261, 1445, 5263, 260, 259, 253, 5213,
	252, 5215, 5283, 5216, 258, 1442, 257, 5206, 256, 255,
	254, 5214, 4476, 5254, 2617, 5256, 251, 269, 5505, 198,
	199, 86, 5223, 5224, 235, 234, 5267, 233, 231, 227,
	230, 2498, 232, 229, 228, 1322, 2312, 5239, 2309, 5284,
	5207, 5238, 226, 5240, 268, 5258, 5190, 5247, 4700, 1462,
	267, 196, 5228, 4698, 87, 191, 192, 1441, 85, 190,
	829, 1541, 1541, 1541, 189, 188, 1541, 1541, 1541, 5264,
	1541, 1541, 5286, 5262, 829, 187, 186, 185, 184, 84,
	320, 5273, 195, 5288, 5275, 5280, 194, 1492, 32, 2,
	1, 0, 0, 1322, 5341, 1322, 5291, 1322, 320, 5062,
	320, 320, 5290, 1523, 320, 1528, 1535, 1447, 5285, 2778,
	5266, 5296, 0, 0, 5292, 5303, 5294, 1549, 0, 0,
	1322, 0, 1447, 0, 0, 903, 0, 0, 903, 5339,
	5226, 0, 0, 0, 0, 0, 5309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4914, 0,
	4914, 910, 0, 0, 0, 5321, 5322, 5323, 1445, 0,
	5325, 5326, 5327, 0, 5328, 5329, 1445, 5338, 0, 1442,
	5334, 0, 0, 2312, 0, 0, 5337, 1442, 0, 0,
	0, 0, 5369, 5391, 1445, 0, 1447, 0, 1447, 1443,
	5362, 0, 5361, 0, 5403, 1442, 0, 5368, 0, 0,
	0, 2305, 2305, 0, 0, 0, 0, 1447, 5389, 0,
	1447, 0, 0, 0, 1632, 0, 5415, 0, 5377, 320,
	0, 1441, 2300, 0, 1632, 0, 0, 0, 0, 1441,
	0, 5379, 0, 0, 0, 1322, 1322, 0, 0, 0,
	0, 0, 0, 0, 5378, 1322, 5405, 1441, 5407, 0,
	5386, 320, 0, 320, 320, 320, 1523, 0, 320, 320,
	5384, 5402, 0, 0, 5429, 0, 1535, 5422, 5388, 5032,
	5424, 0, 0, 0, 1445, 0, 1445, 0, 5420, 4700,
	320, 0, 1895, 0, 4698, 1442, 0, 1442, 5430, 0,
	5432, 0, 5434, 0, 5435, 0, 0, 5475, 1914, 0,
	0, 5433, 4914, 1322, 1322, 5443, 0, 1322, 1922, 1925,
	5447, 1632, 1541, 0, 1541, 0, 0, 4914, 5436, 0,
	5437, 5442, 0, 0, 0, 0, 1949, 0, 1535, 5451,
	5452, 5453, 0, 320, 320, 5457, 1523, 1441, 0, 1441,
	0, 5511, 5507, 5514, 0, 5512, 0, 0, 5510, 5483,
	5486, 5465, 5466, 1443, 0, 0, 5474, 5473, 0, 0,
	903, 1443, 320, 320, 0, 5488, 0, 0, 0, 0,
	1322, 1322, 1322, 5532, 2014, 0, 0, 0, 0, 1443,
	0, 4914, 5534, 4914, 0, 2022, 5492, 5454, 5455, 5487,
	1130, 0, 0, 5491, 0, 0, 0, 0, 0, 0,
	1839, 0, 4914, 0, 1445, 4914, 5494, 5518, 5495, 5522,
	1322, 0, 5525, 5567, 0, 1442, 0, 0, 5533, 0,
	5493, 5572, 2445, 0, 0, 0, 0, 5546, 5547, 0,
	5549, 5548, 0, 0, 1632, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5604, 5601, 0,
	5602, 0, 5605, 0, 5603, 0, 0, 2571, 5569, 0,
	0, 1754, 5570, 0, 5613, 5611, 0, 1441, 0, 1443,
	0, 1443, 0, 1322, 5617, 0, 0, 0, 5593, 5585,
	0, 1541, 1541, 0, 5596, 0, 5637, 0, 0, 2305,
	5245, 5568, 5626, 0, 0, 0, 5610, 0, 5609, 0,
	0, 0, 5583, 0, 0, 5648, 0, 5618, 0, 5619,
	0, 0, 0, 0, 0, 0, 0, 0, 5645, 5582,
	5632, 5633, 5584, 1322, 0, 5636, 5641, 5639, 0, 1283,
	0, 0, 5660, 0, 5662, 0, 0, 1839, 5666, 5663,
	5647, 5664, 5649, 1447, 5651, 1447, 0, 0, 0, 5672,
	5674, 0, 0, 5483, 5656, 5665, 5486, 0, 5510, 0,
	0, 0, 0, 5671, 0, 5661, 0, 0, 0, 0,
	0, 0, 0, 5670, 0, 5634, 5635, 0, 0, 0,
	0, 5623, 5680, 0, 0, 1541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5703, 0, 0, 1443,
	0, 5704, 0, 5673, 5695, 5675, 5696, 5713, 0, 5711,
	0, 0, 0, 5702, 0, 0, 0, 5708, 0, 1322,
	1322, 0, 0, 5710, 0, 5719, 0, 0, 1322, 1322,
	0, 0, 5717, 0, 0, 0, 5679, 5739, 5722, 5727,
	5731, 3659, 0, 0, 5743, 5736, 812, 0, 6, 0,
	0, 5751, 5746, 5744, 5738, 10, 5742, 5735, 0, 5737,
	5752, 5750, 209, 0, 5745, 5741, 0, 320, 0, 320,
	5753, 0, 5756, 320, 0, 0, 3659, 0, 0, 5699,
	0, 1541, 5761, 5763, 2309, 5764, 1895, 1523, 1535, 320,
	5759, 320, 2276, 5768, 5760, 5758, 5774, 5775, 5773, 320,
	5765, 829, 5762, 5766, 0, 0, 5777, 1322, 320, 0,
	0, 2309, 2309, 0, 5728, 5729, 5771, 5772, 5784, 0,
	0, 5768, 0, 2305, 0, 5778, 5730, 0, 5780, 0,
	2362, 0, 0, 0, 0, 5781, 0, 5783, 4914, 0,
	4914, 0, 0, 320, 0, 1445, 0, 1445, 0, 0,
	0, 0, 320, 0, 0, 0, 1442, 0, 1442, 0,
	0, 0, 0, 0, 2839, 0, 0, 0, 0, 0,
	0, 0, 0, 3814, 3815, 0, 3832, 3833, 3834, 0,
	0, 0, 0, 0, 0, 0, 0, 903, 0, 0,
	0, 0, 0, 5779, 0, 0, 4772, 0, 0, 2947,
	2948, 2949, 2966, 2967, 2968, 0, 0, 0, 1441, 0,
	1441, 0, 0, 0, 0, 2068, 2069, 0, 0, 0,
	2969, 0, 0, 0, 0, 910, 2970, 910, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 910, 910, 2099,
	0, 0, 0, 0, 3360, 3361, 0, 1839, 2071, 0,
	0, 0, 0, 0, 0, 3829, 0, 0, 2125, 0,
	0, 2309, 3814, 3815, 0, 3832, 3833, 3834, 0, 0,
	0, 0, 903, 0, 0, 0, 0, 2125, 2959, 320,
	0, 0, 0, 0, 0, 4338, 2070, 2472, 2955, 0,
	0, 0, 320, 2266, 320, 0, 320, 0, 320, 1445,
	0, 320, 0, 320, 0, 0, 0, 0, 0, 0,
	1442, 0, 0, 1279, 1445, 0, 3103, 0, 1307, 130,
	0, 0, 0, 0, 0, 1442, 0, 0, 0, 2512,
	0, 0, 2513, 0, 2514, 0, 2515, 0, 0, 0,
	1443, 0, 1443, 0, 3829, 0, 0, 0, 0, 0,
	0, 320, 320, 320, 320, 0, 0, 320, 3820, 0,
	0, 0, 1441, 0, 0, 0, 0, 0, 0, 0,
	0, 2960, 2961, 2962, 2963, 0, 0, 1441, 1445, 0,
	1445, 2954, 0, 0, 0, 0, 0, 0, 0, 1442,
	0, 1442, 0, 0, 0, 0, 0, 0, 0, 1445,
	2076, 0, 1445, 3814, 3815, 0, 3832, 3833, 3834, 0,
	1442, 0, 0, 1442, 0, 0, 0, 1283, 0, 0,
	0, 1839, 0, 3737, 3738, 0, 4337, 0, 0, 0,
	2427, 130, 0, 0, 0, 3836, 0, 0, 0, 0,
	0, 1441, 0, 1441, 0, 0, 0, 3820, 0, 0,
	0, 0, 0, 0, 2098, 2101, 0, 0, 0, 2309,
	0, 0, 1441, 0, 0, 1441, 0, 2964, 2965, 0,
	0, 0, 3602, 0, 3604, 0, 0, 0, 0, 3830,
	0, 0, 0, 2068, 2069, 3829, 0, 0, 0, 0,
	0, 0, 0, 0, 1443, 0, 0, 0, 0, 0,
	0, 0, 2957, 0, 0, 0, 0, 2099, 0, 1443,
	0, 0, 0, 2100, 0, 1839, 2071, 0, 320, 0,
	0, 2091, 320, 0, 3836, 0, 3650, 0, 1239, 3650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1261, 0, 0, 0, 2125, 0, 0, 0, 0,
	0, 0, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 2122, 320, 0, 0, 2090, 0, 0, 3830, 0,
	0, 0, 0, 1443, 0, 1443, 0, 0, 0, 0,
	0, 320, 0, 0, 2309, 0, 0, 0, 3820, 0,
	1839, 0, 320, 0, 1443, 0, 0, 1443, 0, 320,
	0, 0, 1431, 2122, 0, 0, 0, 0, 0, 3838,
	3839, 3840, 3841, 0, 0, 320, 1839, 320, 0, 0,
	0, 812, 0, 320, 0, 0, 0, 0, 0, 0,
	2309, 2309, 0, 0, 0, 903, 0, 0, 0, 1130,
	0, 0, 0, 0, 0, 0, 0, 3831, 0, 0,
	2122, 0, 0, 0, 0, 0, 0, 0, 2093, 2094,
	2095, 2096, 2309, 2309, 0, 3836, 0, 0, 2076, 0,
	2958, 1523, 320, 0, 0, 0, 883, 0, 0, 0,
	903, 0, 0, 0, 0, 0, 0, 0, 0, 2092,
	0, 0, 0, 0, 0, 2309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2098, 2101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1445, 3831, 1445, 2124, 0,
	2719, 0, 0, 0, 0, 0, 1442, 0, 1442, 0,
	0, 0, 0, 0, 0, 0, 0, 2124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2305,
	1621, 0, 0, 0, 0, 0, 2937, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2091,
	0, 2122, 0, 0, 0, 0, 2305, 2305, 1441, 0,
	1441, 0, 0, 0, 0, 2309, 2309, 0, 2309, 3826,
	3827, 3828, 0, 0, 0, 0, 3825, 3823, 3824, 3816,
	3817, 3818, 3819, 3821, 3822, 0, 0, 0, 0, 0,
	0, 0, 2944, 2945, 2946, 2971, 2956, 2950, 0, 2952,
	2953, 2951, 2938, 2939, 2940, 2941, 2942, 2943, 1867, 0,
	0, 812, 0, 0, 3129, 0, 0, 0, 0, 0,
	2080, 2072, 2073, 2074, 2075, 2077, 2078, 320, 0, 0,
	0, 2122, 0, 0, 0, 0, 812, 3831, 0, 0,
	0, 0, 0, 320, 0, 812, 0, 0, 0, 0,
	0, 0, 0, 1919, 0, 0, 0, 320, 3826, 3827,
	3828, 0, 0, 0, 0, 3825, 3823, 3824, 3816, 3817,
	3818, 3819, 3821, 3822, 2860, 0, 0, 320, 1535, 0,
	0, 0, 0, 0, 320, 0, 320, 1895, 0, 320,
	1443, 2097, 1443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3697, 0, 0, 0, 2305, 0, 0, 2002,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 0, 0, 0, 0, 2017, 0, 0, 0, 0,
	0, 0, 0, 320, 1535, 0, 320, 829, 0, 829,
	0, 0, 0, 0, 0, 0, 320, 0, 0, 320,
	0, 0, 0, 3274, 0, 0, 0, 0, 0, 320,
	320, 0, 0, 0, 320, 0, 320, 0, 3004, 0,
	0, 1523, 0, 320, 320, 3288, 1839, 1535, 1535, 3291,
	0, 0, 0, 88, 320, 2124, 3103, 3103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3826,
	3827, 3828, 0, 89, 0, 0, 3825, 3823, 3824, 3816,
	3817, 3818, 3819, 3821, 3822, 0, 0, 0, 2309, 0,
	0, 94, 0, 0, 0, 0, 0, 0, 910, 910,
	0, 0, 910, 910, 0, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 3325, 0, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2309, 0, 0, 0,
	320, 1523, 320, 0, 104, 0, 89, 0, 0, 3205,
	0, 0, 3350, 320, 0, 0, 0, 1523, 0, 1523,
	0, 1523, 0, 0, 94, 0, 2081, 2079, 2080, 2072,
	2073, 2074, 2075, 2077, 2078, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2305, 0, 0, 1123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 128, 0, 0, 0, 0, 104, 112, 125,
	0, 0, 0, 0, 0, 0, 0, 320, 320, 320,
	320, 1523, 2309, 0, 1523, 4074, 4075, 320, 4076, 0,
	0, 0, 0, 130, 0, 0, 3415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1283, 0, 320, 0,
	1123, 0, 3103, 3103, 3103, 3103, 0, 0, 0, 0,
	0, 0, 320, 57, 0, 128, 0, 0, 4329, 4330,
	0, 112, 125, 0, 0, 113, 320, 0, 2612, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1611, 0, 0, 0, 0, 3485,
	0, 0, 0, 4134, 4135, 0, 4136, 0, 903, 2305,
	3309, 0, 0, 903, 88, 0, 0, 0, 0, 0,
	2622, 0, 0, 0, 0, 0, 130, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 113, 320,
	0, 0, 2348, 2309, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 2305, 2305, 0, 0, 3325,
	1895, 4394, 4395, 4396, 4397, 4398, 4399, 4400, 4401, 4402,
	4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 4411, 4412,
	4413, 0, 4417, 1611, 0, 0, 0, 2305, 2305, 2618,
	0, 0, 320, 3599, 0, 104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 3234, 130,
	2305, 130, 1895, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 0, 0, 0, 1123, 117,
	0, 0, 0, 0, 0, 3642, 0, 0, 0, 0,
	0, 57, 2615, 128, 0, 3415, 0, 812, 0, 112,
	125, 0, 0, 0, 0, 0, 1130, 3415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1261, 130, 130,
	0, 0, 0, 0, 0, 2450, 2451, 2452, 2453, 320,
	0, 0, 0, 0, 0, 130, 0, 130, 218, 0,
	120, 0, 117, 124, 0, 0, 0, 0, 0, 2620,
	0, 130, 0, 130, 0, 0, 0, 0, 0, 0,
	320, 0, 0, 0, 0, 1839, 113, 0, 320, 0,
	2305, 2305, 0, 2305, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 1125, 0, 0, 0, 1276, 0, 1124,
	0, 0, 0, 0, 0, 0, 0, 0, 2309, 2611,
	0, 218, 0, 120, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 2621, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 2612, 0, 0, 0, 0, 0, 1839, 281, 0,
	0, 0, 0, 0, 0, 0, 1125, 0, 0, 2608,
	0, 2625, 1124, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 1239, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 2622, 224, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 2139, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 1895, 2147,
	0, 275, 0, 2152, 2145, 0, 0, 0, 2151, 0,
	276, 2606, 0, 0, 219, 0, 0, 0, 0, 223,
	179, 0, 0, 0, 2613, 0, 0, 1283, 0, 0,
	117, 0, 0, 0, 0, 2623, 0, 224, 2309, 1283,
	222, 0, 2618, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 2619, 0, 0, 0, 0, 0, 0, 0,
	0, 2607, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 219, 0, 0,
	0, 0, 223, 2616, 0, 0, 0, 0, 0, 218,
	2614, 120, 0, 0, 124, 0, 0, 0, 2624, 0,
	0, 0, 0, 1999, 0, 2615, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 2305, 1919, 0, 281, 0, 0, 0,
	0, 2243, 0, 2246, 1125, 130, 0, 0, 0, 88,
	1124, 0, 0, 0, 0, 0, 0, 0, 320, 0,
	0, 0, 0, 0, 0, 2753, 0, 2309, 0, 89,
	0, 2305, 2620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2617, 0, 0, 94, 0, 0,
	283, 0, 0, 0, 0, 320, 0, 0, 0, 0,
	812, 0, 0, 0, 0, 812, 0, 0, 812, 0,
	0, 812, 812, 0, 2789, 0, 0, 812, 179, 0,
	812, 3103, 3103, 0, 0, 0, 0, 0, 320, 0,
	104, 0, 2802, 2804, 0, 224, 0, 0, 2621, 0,
	320, 0, 0, 282, 0, 0, 2807, 0, 0, 0,
	0, 320, 0, 0, 1895, 0, 0, 2305, 0, 1839,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 1123, 2625, 219, 0, 0, 0, 829,
	223, 0, 0, 0, 0, 0, 2309, 0, 128, 0,
	0, 0, 0, 0, 112, 125, 0, 0, 0, 0,
	0, 1997, 0, 0, 320, 0, 0, 0, 320, 320,
	0, 0, 0, 0, 3103, 3103, 3103, 3103, 3103, 3103,
	3103, 3103, 3103, 3103, 3103, 3103, 3103, 3103, 3103, 3103,
	3103, 3103, 3103, 3103, 0, 3103, 0, 0, 0, 0,
	0, 1839, 3471, 2309, 0, 0, 0, 2613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2623, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 3871, 3997,
	0, 0, 0, 0, 0, 2619, 0, 0, 2305, 0,
	0, 0, 0, 4711, 3472, 0, 0, 0, 0, 0,
	130, 0, 0, 0, 4004, 0, 4005, 0, 0, 1895,
	0, 0, 320, 0, 0, 0, 2616, 0, 1523, 320,
	0, 320, 0, 2614, 0, 0, 0, 1523, 0, 0,
	1523, 2624, 3900, 0, 3415, 3415, 320, 0, 4029, 4032,
	0, 0, 0, 0, 0, 3415, 0, 2276, 0, 0,
	3916, 0, 0, 0, 0, 0, 3415, 2276, 0, 3415,
	2276, 0, 4762, 2276, 0, 0, 4029, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 320,
	4032, 0, 320, 0, 3943, 0, 0, 0, 0, 0,
	2309, 3814, 3815, 0, 3832, 3833, 3834, 0, 0, 0,
	0, 4032, 0, 320, 0, 0, 1839, 2617, 4102, 4032,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4113, 1839, 4113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2068, 2069, 0, 2102,
	2103, 2104, 2113, 2114, 2115, 0, 0, 0, 3415, 0,
	3415, 0, 4149, 3415, 4032, 0, 0, 3415, 0, 2106,
	2099, 0, 0, 3829, 0, 0, 2100, 0, 0, 2071,
	0, 0, 0, 4032, 0, 0, 903, 0, 0, 0,
	2119, 0, 0, 0, 218, 0, 120, 0, 0, 124,
	0, 0, 0, 2305, 0, 0, 0, 0, 2125, 0,
	0, 0, 0, 0, 0, 0, 0, 2070, 1523, 0,
	0, 0, 0, 0, 0, 320, 4011, 0, 2090, 1754,
	0, 281, 0, 0, 0, 0, 0, 0, 2087, 1125,
	320, 0, 0, 0, 4201, 1124, 0, 4206, 3415, 0,
	0, 320, 0, 0, 0, 0, 0, 1535, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 3320,
	4248, 0, 0, 320, 0, 0, 3820, 0, 3642, 0,
	0, 1523, 0, 320, 0, 283, 3415, 0, 812, 0,
	0, 0, 0, 0, 0, 3415, 0, 3814, 3815, 0,
	3832, 3833, 3834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5103, 179, 0, 0, 1261, 0, 1261, 0,
	0, 2093, 2094, 2095, 2096, 0, 0, 0, 0, 0,
	224, 2076, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 2305, 1839, 0, 0, 0, 0, 0,
	320, 0, 0, 3836, 0, 0, 0, 275, 0, 3380,
	0, 0, 0, 0, 0, 4964, 276, 0, 0, 0,
	219, 0, 0, 0, 2110, 223, 0, 1239, 2120, 3829,
	1239, 1239, 0, 0, 0, 2098, 2101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 3830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5163, 2116, 4371,
	2117, 0, 0, 0, 0, 0, 0, 2085, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2108, 5027, 2922,
	0, 0, 0, 0, 3916, 0, 0, 0, 2929, 0,
	0, 0, 2091, 0, 0, 0, 0, 5040, 0, 1261,
	0, 0, 2305, 0, 2147, 0, 0, 0, 0, 2145,
	0, 0, 0, 2145, 0, 0, 0, 0, 0, 2122,
	0, 0, 3820, 0, 5066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4430, 0, 0, 0,
	3537, 0, 2118, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1611, 2107, 0, 0, 0, 0, 0, 1611,
	0, 0, 0, 0, 2122, 0, 812, 0, 0, 4455,
	812, 0, 0, 0, 0, 0, 0, 0, 812, 0,
	0, 1431, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3831, 0, 2246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2305, 0, 0, 0, 0, 320, 0, 0, 0,
	0, 0, 0, 0, 2097, 0, 0, 0, 0, 4350,
	0, 0, 0, 3830, 0, 0, 0, 0, 0, 5308,
	0, 0, 0, 0, 0, 0, 4366, 130, 0, 5143,
	2092, 320, 0, 0, 3325, 3325, 0, 0, 3684, 4032,
	0, 0, 0, 3291, 0, 0, 0, 0, 2305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5345,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2122, 0, 0, 2124, 0,
	0, 0, 0, 0, 5367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3826, 3827, 3828,
	0, 0, 0, 0, 3825, 3823, 3824, 3816, 3817, 3818,
	3819, 3821, 3822, 0, 0, 0, 0, 0, 0, 4599,
	0, 0, 4601, 0, 0, 4604, 0, 0, 0, 4464,
	0, 0, 0, 4113, 0, 0, 0, 0, 0, 0,
	2109, 3831, 0, 0, 0, 2305, 2105, 0, 0, 320,
	0, 0, 2082, 2083, 2089, 2112, 2088, 2084, 0, 2081,
	2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078, 1839, 1839,
	0, 1839, 0, 4799, 0, 0, 0, 4798, 0, 0,
	0, 0, 0, 130, 130, 4032, 0, 320, 0, 0,
	0, 829, 829, 1535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4667, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 320, 0, 4682, 0, 0, 3642, 2276, 0, 0,
	0, 0, 320, 0, 0, 0, 0, 0, 0, 4703,
	0, 0, 0, 320, 0, 0, 0, 320, 0, 320,
	0, 0, 1839, 0, 0, 0, 320, 0, 0, 0,
	0, 1283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3415, 320, 3078, 3079, 3080,
	3081, 3074, 3075, 3076, 3077, 3103, 0, 1130, 3415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3826, 3827, 3828, 0, 0, 0, 1839,
	3825, 3823, 3824, 3816, 3817, 3818, 3819, 3821, 3822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3054, 3055, 3056, 3057, 0, 4791, 0, 0, 0, 0,
	3103, 0, 0, 0, 0, 0, 0, 0, 5417, 0,
	0, 5419, 0, 0, 3066, 3067, 3068, 3069, 3062, 3063,
	3064, 3065, 3070, 3071, 3072, 3073, 0, 0, 0, 0,
	0, 130, 0, 130, 0, 0, 0, 0, 0, 0,
	0, 0, 2105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 0, 1839, 0, 0, 0, 1895, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 320, 0, 130, 0,
	0, 0, 0, 0, 130, 0, 0, 0, 0, 3050,
	3051, 3052, 3053, 3058, 3059, 3060, 3061, 0, 0, 1535,
	1535, 1535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1535, 1535, 1535, 0, 320, 1535, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5519, 0, 5520, 0, 0, 0,
	0, 3415, 3415, 0, 4029, 0, 0, 4113, 3415, 0,
	0, 0, 0, 0, 0, 1839, 4916, 0, 4916, 1895,
	0, 2105, 0, 0, 0, 0, 0, 2105, 0, 0,
	3415, 0, 2276, 0, 0, 0, 4029, 0, 1895, 1895,
	320, 4032, 3103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2922, 0, 4032, 0, 320, 4032, 0, 320,
	4952, 0, 1611, 1611, 0, 4113, 0, 0, 4113, 0,
	0, 0, 4113, 2145, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3415, 0, 3415, 320, 0, 0, 0, 0, 0,
	0, 0, 3103, 0, 0, 0, 3325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1283, 4828, 0, 0, 3103, 0, 0,
	0, 2068, 2069, 0, 0, 0, 0, 2113, 2114, 2115,
	0, 3415, 3415, 0, 0, 0, 4916, 0, 3642, 0,
	5025, 0, 0, 0, 1839, 2099, 4029, 0, 0, 0,
	0, 2100, 0, 0, 2071, 0, 0, 4858, 0, 0,
	0, 0, 0, 320, 0, 2119, 0, 0, 0, 0,
	0, 0, 5048, 0, 0, 0, 0, 320, 0, 0,
	0, 2105, 0, 2125, 0, 0, 0, 0, 0, 0,
	0, 0, 2070, 0, 0, 1754, 0, 0, 0, 2105,
	0, 0, 0, 2090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2105, 1839, 0, 0, 0,
	2105, 0, 0, 0, 0, 0, 2105, 0, 1611, 1611,
	1611, 1611, 0, 0, 0, 0, 0, 0, 0, 4198,
	4199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1431, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2093, 2094, 2095, 2096,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 1431,
	0, 4281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4307, 1437, 0, 0, 0, 0, 0,
	0, 320, 320, 2105, 0, 0, 0, 0, 2105, 0,
	0, 0, 0, 0, 3415, 2276, 0, 2276, 0, 2110,
	4703, 0, 2105, 2120, 0, 0, 0, 2105, 0, 320,
	2098, 2101, 0, 0, 0, 0, 0, 0, 0, 5179,
	0, 5179, 0, 0, 0, 0, 0, 0, 315, 315,
	808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 2086, 0, 0, 903, 2229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4113,
	1895, 0, 2108, 0, 1895, 0, 1523, 0, 0, 0,
	0, 1015, 0, 0, 0, 0, 0, 2091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4032, 0, 320, 0, 1027, 0, 0,
	0, 0, 0, 5095, 2105, 2105, 2105, 2105, 2105, 2105,
	2105, 2105, 0, 0, 0, 0, 0, 0, 0, 1025,
	0, 0, 0, 4703, 2105, 0, 0, 4916, 0, 4916,
	0, 1895, 0, 0, 0, 3415, 0, 2105, 0, 0,
	0, 0, 320, 1028, 0, 0, 0, 0, 5095, 0,
	0, 0, 0, 0, 0, 4248, 0, 5277, 0, 2122,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1895,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3107, 0, 0, 0,
	0, 0, 0, 0, 1283, 0, 0, 0, 1021, 0,
	0, 2105, 0, 0, 0, 1036, 0, 2105, 2860, 0,
	0, 0, 0, 0, 4371, 0, 0, 0, 0, 2097,
	0, 1026, 0, 0, 130, 130, 0, 130, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2092, 0, 0, 0, 0,
	0, 0, 0, 4113, 5336, 0, 0, 0, 0, 0,
	0, 4703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1268, 0, 0, 0, 1020, 2111, 0, 0,
	0, 4916, 2068, 2069, 4521, 4522, 0, 2860, 0, 0,
	0, 0, 0, 878, 0, 0, 4916, 0, 0, 0,
	0, 0, 130, 130, 0, 130, 2099, 0, 0, 0,
	0, 0, 2100, 2124, 0, 2071, 0, 0, 0, 0,
	0, 1023, 0, 320, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 829, 0, 2125, 0, 0, 0, 0, 0,
	0, 0, 0, 2070, 0, 0, 0, 0, 0, 0,
	4916, 0, 4916, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 4916, 0, 320, 4916, 0, 0, 0, 1035, 0,
	0, 0, 0, 0, 2276, 2109, 0, 0, 0, 0,
	0, 0, 0, 0, 1895, 0, 1895, 939, 0, 0,
	2112, 2088, 2084, 0, 2081, 2079, 2080, 2072, 2073, 2074,
	2075, 2077, 2078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4771, 0, 1535, 1535, 1431, 0, 0,
	1261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4632, 5463, 0, 130, 130, 0, 2093, 2094, 2095,
	2096, 0, 0, 0, 0, 0, 0, 2076, 5179, 4645,
	0, 320, 1017, 0, 0, 0, 0, 2105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3415, 0, 0, 0, 0,
	0, 0, 0, 2068, 2069, 1022, 0, 1611, 1611, 0,
	0, 0, 2105, 0, 0, 0, 0, 0, 0, 0,
	0, 2098, 2101, 0, 0, 0, 0, 2099, 0, 0,
	320, 0, 0, 2100, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 877, 0, 0,
	4371, 0, 0, 2085, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 2125, 0, 0, 0, 0,
	0, 0, 1019, 4741, 2070, 0, 0, 1895, 2802, 4747,
	4748, 0, 0, 0, 0, 2090, 0, 0, 2091, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611,
	1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611,
	0, 1611, 0, 0, 0, 1016, 0, 0, 0, 0,
	0, 1029, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 4332, 1024, 0, 4703, 0, 0,
	0, 0, 0, 0, 0, 1431, 1431, 0, 0, 0,
	2122, 879, 0, 0, 0, 0, 0, 0, 2093, 2094,
	2095, 2096, 0, 1018, 0, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3415, 0, 0, 0, 0,
	0, 1033, 1034, 0, 1030, 0, 0, 4916, 0, 4916,
	3814, 3815, 1895, 3832, 3833, 3834, 0, 0, 0, 0,
	2097, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2098, 2101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2092, 0, 0, 0,
	0, 0, 0, 0, 4837, 4838, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 2086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3829, 0, 0, 3325, 0, 0, 0, 2091,
	0, 2105, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 3415, 2124, 0, 0, 0, 0, 2105,
	0, 0, 0, 0, 0, 0, 0, 3325, 0, 0,
	2105, 2105, 2105, 2105, 2105, 2105, 2105, 2105, 2105, 2105,
	2105, 2105, 2105, 2105, 2105, 2105, 2105, 2105, 2105, 2105,
	2105, 2105, 2105, 2105, 2105, 2105, 2105, 2105, 2105, 2105,
	2105, 2105, 2105, 2105, 2105, 2105, 2105, 0, 0, 0,
	0, 0, 2105, 0, 2105, 2105, 2105, 2105, 0, 0,
	0, 2122, 0, 0, 0, 0, 3107, 3107, 0, 0,
	0, 0, 0, 0, 0, 3820, 0, 0, 0, 0,
	0, 2105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1544, 2088, 2084, 0, 2081, 2079, 2080, 2072, 2073,
	2074, 2075, 2077, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1268, 1268,
	1268, 2097, 3837, 0, 0, 0, 0, 0, 2802, 1715,
	0, 0, 0, 2105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 0, 3836, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 2105, 0, 0, 2105, 0, 1861, 2105,
	0, 0, 2105, 0, 2068, 2069, 0, 0, 2105, 2105,
	2105, 2105, 2105, 2105, 2105, 0, 0, 1683, 0, 0,
	1689, 0, 0, 0, 0, 0, 3830, 0, 2099, 0,
	0, 0, 130, 0, 2100, 0, 0, 2071, 0, 0,
	0, 0, 0, 0, 5074, 2124, 5076, 5077, 5078, 0,
	5080, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1431, 0, 0, 0, 0, 0, 2125, 0, 0, 0,
	1853, 0, 0, 0, 0, 2070, 1871, 2105, 0, 0,
	3835, 0, 3107, 3107, 3107, 3107, 2090, 0, 2105, 0,
	2105, 0, 0, 0, 0, 2105, 2087, 0, 0, 0,
	0, 130, 2003, 2004, 0, 1897, 0, 1902, 2122, 1908,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2088, 2084, 0, 2081, 2079, 2080, 2072,
	2073, 2074, 2075, 2077, 2078, 4327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1484, 0, 0, 0, 0, 0, 0, 2093,
	2094, 2095, 2096, 2005, 0, 2010, 0, 0, 0, 2076,
	1507, 0, 1507, 1507, 3831, 0, 939, 0, 0, 2024,
	0, 2029, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 2068, 2069, 1431, 2102, 2103, 2104, 2113, 2114,
	2115, 0, 1431, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2098, 2101, 2106, 2099, 0, 0, 0,
	0, 0, 2100, 0, 0, 2071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2119, 0, 0, 0,
	0, 0, 5219, 0, 0, 2085, 2086, 0, 0, 0,
	0, 0, 0, 0, 2125, 0, 0, 0, 0, 0,
	0, 0, 0, 2070, 0, 5241, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	2091, 0, 0, 0, 2087, 0, 0, 0, 0, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2105, 2105, 0, 0, 0, 0, 1847, 1484, 0, 0,
	1863, 939, 0, 2146, 0, 0, 3826, 3827, 3828, 2159,
	0, 0, 0, 3825, 3823, 3824, 3816, 3817, 3818, 3819,
	3821, 3822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2122, 0, 0, 0, 0, 2093, 2094, 2095,
	2096, 0, 0, 0, 130, 0, 0, 2076, 0, 0,
	0, 0, 0, 2261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 939, 939, 0, 0, 2271,
	0, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2110, 0, 2097, 0, 2120, 0, 0, 0, 0, 0,
	0, 2098, 2101, 0, 0, 0, 0, 2223, 2223, 2223,
	0, 0, 0, 0, 0, 0, 0, 130, 2092, 0,
	0, 0, 0, 0, 2116, 0, 2117, 0, 0, 0,
	0, 0, 1861, 2085, 2086, 0, 130, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2118, 2105,
	0, 2105, 0, 0, 0, 0, 2802, 0, 0, 0,
	0, 1611, 0, 0, 0, 0, 0, 0, 0, 2107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2122, 0, 0, 0, 0, 0, 0, 0, 0, 2464,
	0, 0, 0, 0, 0, 0, 1268, 0, 0, 0,
	0, 0, 0, 0, 2481, 0, 2483, 0, 2485, 0,
	0, 2487, 0, 2488, 2088, 2084, 0, 2081, 2079, 2080,
	2072, 2073, 2074, 2075, 2077, 2078, 0, 0, 130, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2097, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1611, 0, 0, 0,
	0, 2520, 2521, 0, 0, 0, 2092, 0, 2105, 2105,
	0, 3107, 3107, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3835, 3835, 0, 0, 2105,
	2105, 0, 0, 0, 0, 0, 0, 0, 2111, 2105,
	2499, 0, 0, 0, 3570, 0, 0, 0, 0, 0,
	0, 0, 0, 2105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 2124, 0, 0, 0, 0, 3560,
	3558, 0, 0, 2534, 0, 0, 0, 3562, 3564, 3554,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3107, 3107, 3107, 3107, 3107, 3107,
	3107, 3107, 3107, 3107, 3107, 3107, 3107, 3107, 3107, 3107,
	3107, 3107, 3107, 3107, 0, 3107, 3835, 3835, 3835, 3835,
	0, 0, 3580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 2109, 0, 0, 0,
	0, 0, 0, 2105, 0, 0, 0, 2922, 2082, 2083,
	2089, 2112, 2088, 2084, 0, 2081, 2079, 2080, 2072, 2073,
	2074, 2075, 2077, 2078, 0, 0, 0, 0, 0, 3786,
	0, 0, 0, 3787, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1318, 0, 0, 0,
	0, 2744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2765,
	0, 0, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 2777, 0, 2777, 0, 0,
	0, 0, 0, 2784, 0, 0, 0, 0, 0, 0,
	319, 319, 319, 1611, 0, 0, 0, 0, 0, 3556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3572, 0, 0, 0, 0, 0, 0, 319, 130, 0,
	0, 0, 0, 0, 0, 0, 1049, 0, 0, 0,
	0, 0, 2811, 0, 3571, 3561, 3559, 3563, 3565, 3555,
	3557, 3573, 3575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3567, 3569, 3577, 0, 1049, 0, 0,
	2105, 0, 0, 0, 0, 2523, 2525, 0, 0, 2528,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	130, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2833, 0, 2837, 0, 0, 0, 0, 2105,
	2105, 2851, 0, 0, 1268, 0, 0, 0, 0, 0,
	2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871,
	2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881,
	2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891,
	2892, 2893, 2894, 2895, 2896, 2897, 2898, 0, 2904, 0,
	2906, 2907, 2908, 2909, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3574, 0, 2146, 0,
	1444, 0, 2985, 130, 0, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3015, 3018,
	3021, 3024, 0, 0, 3030, 3031, 3032, 3033, 3034, 3035,
	3036, 0, 0, 0, 0, 0, 0, 3202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2735, 3099, 0, 3110, 3112, 3117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3566, 3568, 0, 2523, 3576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2105, 2105, 0, 0, 2105, 3835, 3835, 2105,
	0, 0, 0, 2105, 0, 0, 0, 0, 0, 0,
	2105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 2105, 2105, 2105,
	2105, 0, 0, 0, 2765, 0, 0, 2105, 0, 2105,
	0, 0, 3835, 3835, 3835, 3835, 3835, 3835, 3835, 3835,
	3835, 3835, 3835, 3835, 3835, 3835, 3835, 3835, 3835, 3835,
	3835, 3835, 0, 0, 0, 3835, 0, 0, 2105, 2105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2105, 0, 0, 0, 0, 0, 3318, 0, 0,
	2105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3336, 0, 3339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2068, 2069, 0, 0, 0, 0, 0,
	130, 2105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3376, 0, 0, 0, 0, 0, 2099, 0, 0,
	0, 0, 0, 2100, 0, 0, 2071, 3387, 1861, 3389,
	1861, 0, 0, 0, 0, 0, 0, 3396, 2105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3362, 2125, 0, 0, 0, 3363,
	0, 0, 0, 0, 2070, 0, 0, 0, 0, 2105,
	0, 0, 0, 0, 0, 2090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2105, 2105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4326, 0, 0, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2093, 2094,
	2095, 2096, 0, 0, 0, 939, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1484, 0,
	0, 1484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 3277, 0, 0, 0, 1507, 0, 1507, 0,
	0, 0, 0, 0, 0, 939, 939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 0, 0, 0,
	0, 0, 2098, 2101, 0, 3620, 0, 0, 0, 0,
	0, 0, 0, 0, 2765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2105, 2105, 0,
	0, 0, 2105, 2105, 2085, 2086, 2105, 2105, 0, 0,
	0, 2105, 319, 0, 0, 2105, 0, 0, 0, 3601,
	2105, 3603, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 319, 319, 0, 3107, 319, 0, 0, 2091,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 939, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 2122, 1863, 0, 0, 0, 0, 0, 0, 0,
	3107, 0, 0, 0, 0, 0, 0, 0, 2126, 2127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 2097, 0, 319, 0, 319, 319, 319, 0, 0,
	319, 319, 0, 2105, 0, 0, 0, 3720, 3721, 0,
	0, 0, 0, 3727, 0, 0, 0, 2092, 0, 0,
	0, 0, 1049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3741, 3742, 0, 0, 0, 0, 2985, 0,
	0, 0, 0, 0, 2105, 2105, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 319, 0, 0, 0,
	0, 0, 0, 0, 3751, 2124, 0, 0, 2068, 2069,
	0, 2102, 2103, 2104, 2113, 2114, 2115, 0, 0, 0,
	3765, 0, 0, 0, 319, 319, 0, 0, 0, 0,
	0, 2106, 2099, 0, 0, 0, 0, 3777, 2100, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 2105, 2105,
	2105, 0, 2119, 0, 0, 0, 0, 0, 0, 2105,
	2105, 3835, 3107, 0, 0, 0, 0, 0, 2105, 0,
	2125, 2105, 0, 0, 0, 0, 0, 0, 0, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	2087, 0, 0, 2088, 2084, 0, 2081, 2079, 2080, 2072,
	2073, 2074, 2075, 2077, 2078, 0, 0, 0, 0, 0,
	0, 3835, 3107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2105, 0,
	0, 3117, 3117, 3117, 0, 0, 2105, 3107, 0, 0,
	0, 0, 1507, 0, 2105, 0, 0, 0, 0, 0,
	2223, 0, 0, 0, 0, 0, 2105, 0, 2105, 0,
	3926, 0, 0, 0, 0, 0, 0, 0, 2105, 0,
	0, 0, 0, 2093, 2094, 2095, 2096, 0, 0, 3875,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2110, 0, 1861, 1861,
	2120, 0, 0, 0, 0, 0, 0, 2098, 2101, 0,
	0, 2068, 2069, 0, 2102, 2103, 2104, 2113, 2114, 2115,
	0, 0, 0, 0, 1448, 0, 3835, 0, 0, 0,
	2116, 0, 2117, 0, 2106, 2099, 0, 0, 0, 2085,
	2086, 2100, 0, 0, 2071, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2119, 0, 0, 0, 2108,
	0, 0, 2105, 3835, 0, 0, 2105, 0, 0, 0,
	0, 0, 0, 2125, 2091, 0, 0, 0, 0, 0,
	0, 0, 2070, 0, 1268, 3835, 0, 0, 0, 2245,
	0, 1444, 4008, 2090, 0, 319, 1268, 0, 0, 4013,
	0, 1861, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 319, 2245, 319, 0, 0, 4025, 0, 0, 0,
	0, 1049, 0, 0, 2118, 0, 0, 0, 0, 0,
	1049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 4081, 4083,
	0, 0, 2765, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2093, 2094, 2095, 2096,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 0, 4062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2110,
	0, 0, 2092, 2120, 0, 0, 0, 0, 0, 0,
	2098, 2101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2116, 2111, 2117, 0, 0, 0, 0,
	0, 0, 2085, 2086, 0, 0, 0, 0, 0, 2105,
	0, 0, 0, 0, 0, 0, 0, 0, 4131, 4132,
	0, 319, 2108, 0, 0, 0, 0, 0, 0, 0,
	2124, 0, 0, 0, 1049, 0, 319, 2091, 319, 0,
	319, 0, 0, 319, 0, 319, 0, 0, 0, 0,
	0, 4229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	1863, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2118, 0, 0,
	0, 0, 0, 319, 319, 319, 319, 2105, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 2107, 0,
	0, 0, 2109, 0, 0, 0, 0, 0, 0, 2122,
	0, 0, 0, 0, 2082, 2083, 2089, 2112, 2088, 2084,
	0, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078,
	0, 0, 0, 0, 0, 2981, 0, 0, 0, 2982,
	4322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2105, 2068, 2069, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 2097,
	0, 0, 0, 0, 0, 0, 2099, 0, 0, 0,
	0, 0, 2100, 0, 0, 2071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2851,
	0, 0, 0, 0, 2125, 0, 4324, 4325, 0, 0,
	4328, 1863, 0, 2070, 4331, 0, 0, 2111, 0, 0,
	0, 0, 0, 4335, 2090, 0, 0, 0, 0, 0,
	0, 0, 4342, 0, 2087, 2523, 0, 3875, 0, 0,
	319, 0, 0, 0, 1049, 0, 0, 0, 0, 0,
	0, 0, 4355, 2124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4378, 4379, 0, 4380, 4381, 4382, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 3726, 0, 0, 4389, 0, 0, 0,
	4391, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 2093, 2094, 2095,
	2096, 319, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 4420, 4421, 2109, 0, 319, 0, 319,
	0, 0, 0, 0, 0, 319, 0, 2082, 2083, 2089,
	2112, 2088, 2084, 4433, 2081, 2079, 2080, 2072, 2073, 2074,
	2075, 2077, 2078, 0, 0, 0, 0, 0, 4442, 0,
	0, 0, 4797, 0, 0, 0, 0, 0, 0, 0,
	0, 2098, 2101, 0, 0, 0, 0, 0, 1448, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 4517, 0, 0, 0, 939, 0, 0, 0, 0,
	0, 0, 0, 2085, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1448, 0,
	0, 0, 0, 0, 0, 0, 1448, 0, 4513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2068, 2069, 0, 0, 0, 0, 0,
	0, 1448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2099, 0, 0,
	2122, 0, 4550, 2100, 0, 0, 2071, 0, 0, 0,
	2068, 2069, 0, 2102, 2103, 2104, 2113, 2114, 2115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1448,
	0, 0, 0, 2106, 2099, 2125, 4581, 1448, 0, 0,
	2100, 0, 0, 2071, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 1448, 2119, 2090, 0, 0, 0, 1444,
	2097, 0, 0, 0, 0, 2087, 0, 2765, 0, 0,
	0, 0, 2125, 0, 0, 1444, 0, 0, 0, 0,
	0, 2070, 0, 0, 0, 0, 2092, 4613, 4614, 319,
	0, 0, 2090, 0, 0, 0, 0, 0, 0, 0,
	0, 4680, 2087, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 4692, 0, 0, 0, 1049, 0, 1049, 0,
	0, 319, 0, 0, 3719, 0, 0, 2765, 0, 2765,
	0, 0, 0, 0, 0, 0, 4720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2093, 2094,
	2095, 2096, 0, 0, 2124, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 1049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 0,
	0, 319, 0, 0, 0, 2093, 2094, 2095, 2096, 0,
	0, 319, 319, 2223, 0, 2076, 319, 0, 319, 0,
	0, 0, 0, 0, 0, 319, 319, 0, 0, 0,
	0, 0, 2098, 2101, 0, 0, 319, 0, 0, 0,
	0, 2223, 0, 0, 0, 0, 0, 0, 0, 0,
	4738, 0, 0, 0, 0, 0, 0, 0, 2110, 0,
	0, 0, 2120, 0, 2085, 2086, 0, 0, 0, 2098,
	2101, 0, 2088, 2084, 0, 2081, 2079, 2080, 2072, 2073,
	2074, 2075, 2077, 2078, 0, 0, 0, 0, 0, 319,
	0, 0, 2116, 0, 2117, 0, 0, 0, 0, 2091,
	0, 2085, 2086, 0, 4769, 4770, 0, 0, 0, 0,
	4774, 4775, 319, 0, 319, 4778, 4779, 0, 0, 0,
	0, 2108, 0, 4783, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 4787, 0, 2091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1448, 0, 1448, 0, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	1448, 2122, 0, 0, 0, 0, 2118, 0, 0, 319,
	319, 319, 319, 0, 0, 0, 0, 0, 0, 319,
	0, 939, 0, 2313, 0, 0, 0, 2107, 0, 0,
	1448, 0, 0, 0, 0, 0, 0, 0, 2122, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 2097, 0, 0, 0, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2097, 0,
	4936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2523, 2765, 0, 0, 0,
	0, 0, 0, 0, 2092, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 1448, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2124, 2111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1448, 0, 0, 1448, 1448, 1448, 1448, 0, 0, 0,
	0, 0, 0, 0, 1049, 0, 0, 0, 0, 0,
	0, 0, 2124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4965, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 2765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5054, 0, 0,
	0, 0, 0, 2088, 2084, 0, 2081, 2079, 2080, 2072,
	2073, 2074, 2075, 2077, 2078, 0, 0, 0, 0, 5006,
	5007, 0, 0, 0, 2109, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 2082, 2083, 2089, 2112,
	2088, 2084, 0, 2081, 2079, 2080, 2072, 2073, 2074, 2075,
	2077, 2078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4340, 319, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5090,
	5091, 5092, 0, 0, 0, 0, 0, 0, 939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2851, 0, 0, 5101, 5102, 0, 0, 0,
	0, 5144, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5110, 5113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5165,
	0, 0, 0, 0, 0, 0, 1448, 1448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2523, 1448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1448, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 5180, 0, 2765, 0, 0, 0, 0,
	0, 0, 5188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5196, 0, 0,
	1268, 0, 0, 0, 0, 0, 0, 0, 1448, 0,
	1448, 0, 1448, 0, 0, 0, 0, 0, 0, 0,
	0, 5208, 2777, 0, 5210, 0, 0, 0, 0, 0,
	1448, 1448, 0, 0, 0, 0, 0, 0, 5220, 0,
	0, 0, 0, 0, 1448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1444, 0, 2068, 2069, 0, 2102, 2103, 2104, 2113, 2114,
	2115, 0, 0, 0, 0, 0, 0, 0, 0, 2313,
	2313, 1448, 0, 0, 0, 2106, 2099, 0, 0, 0,
	0, 0, 2100, 0, 0, 2071, 0, 1444, 0, 0,
	0, 0, 0, 0, 0, 0, 2119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2125, 0, 0, 0, 0, 0,
	2245, 0, 0, 2070, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 1049, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	319, 319, 0, 0, 1863, 0, 0, 0, 0, 0,
	5344, 0, 0, 0, 5348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 2094, 2095,
	2096, 0, 0, 1448, 0, 0, 0, 2076, 0, 0,
	1448, 0, 0, 0, 0, 0, 0, 0, 0, 1448,
	0, 0, 0, 5423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2110, 0, 0, 0, 2120, 0, 0, 0, 0, 0,
	0, 2098, 2101, 0, 319, 0, 0, 0, 0, 0,
	0, 319, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2116, 0, 2117, 0, 319, 0,
	0, 0, 0, 2085, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5477, 0, 2108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2851, 0, 0, 0, 0, 2091, 0,
	319, 319, 5113, 0, 319, 0, 0, 0, 0, 0,
	0, 2245, 0, 0, 2068, 2069, 0, 2102, 2103, 2104,
	2113, 2114, 2115, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 862, 0, 0, 0, 2106, 2099, 0,
	5527, 0, 0, 0, 2100, 0, 0, 2071, 2118, 0,
	0, 0, 0, 0, 846, 0, 0, 0, 2119, 847,
	0, 1268, 0, 0, 0, 0, 0, 1448, 0, 2107,
	0, 0, 0, 0, 0, 0, 2125, 0, 0, 0,
	2122, 0, 0, 0, 0, 2070, 0, 1448, 1448, 0,
	0, 0, 0, 0, 0, 0, 2090, 0, 0, 0,
	0, 0, 0, 848, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5545, 5545, 5545,
	0, 0, 0, 0, 0, 0, 0, 850, 0, 0,
	2097, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	868, 0, 1049, 0, 0, 0, 2092, 5571, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 1448, 0, 0,
	0, 0, 0, 851, 0, 939, 0, 0, 0, 2093,
	2094, 2095, 2096, 0, 0, 319, 0, 0, 2111, 2076,
	0, 0, 0, 0, 0, 1444, 0, 0, 852, 844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5545, 2313, 0, 853, 2124, 0, 0, 0, 845, 0,
	0, 0, 2110, 0, 0, 0, 2120, 0, 0, 0,
	0, 0, 0, 2098, 2101, 878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 2116, 0, 2117, 0,
	5659, 0, 0, 867, 0, 2085, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2108, 1448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2109, 0, 1448, 0,
	2091, 0, 0, 0, 0, 0, 0, 0, 2082, 2083,
	2089, 2112, 2088, 2084, 0, 2081, 2079, 2080, 2072, 2073,
	2074, 2075, 2077, 2078, 0, 0, 0, 0, 0, 0,
	864, 0, 0, 3789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2118, 0, 0, 0, 0, 0, 5545, 5723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2122, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1448, 875, 0,
	855, 0, 0, 1444, 1444, 0, 0, 0, 0, 1448,
	0, 1448, 0, 0, 0, 0, 1448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 876, 2097, 856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1049, 877,
	0, 0, 0, 0, 0, 0, 0, 857, 0, 0,
	2111, 0, 873, 874, 0, 871, 0, 0, 0, 0,
	0, 0, 0, 0, 865, 0, 0, 858, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 859, 0, 866, 0, 0,
	0, 0, 0, 870, 0, 0, 860, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 861, 0, 0, 0, 0, 869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 879, 0, 0, 0, 0, 2109, 0,
	0, 0, 0, 0, 0, 863, 0, 0, 0, 0,
	2082, 2083, 2089, 2112, 2088, 2084, 0, 2081, 2079, 2080,
	2072, 2073, 2074, 2075, 2077, 2078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2068, 2069,
	0, 2102, 2103, 2104, 2113, 2114, 2115, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 2099, 0, 0, 0, 0, 0, 2100, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2125, 0, 0, 0, 0, 0, 0, 0, 0, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 0, 319, 1448, 1448, 0, 0, 0, 0,
	2087, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 0, 319,
	0, 319, 0, 0, 0, 0, 0, 0, 319, 0,
	0, 1448, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 1444, 1448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1448, 0, 0, 1448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 2094, 2095, 2096, 0, 0, 0,
	0, 0, 0, 2076, 321, 321, 321, 2313, 0, 0,
	0, 1448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 2313, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 2110, 0, 0, 0,
	2120, 0, 0, 0, 0, 0, 0, 2098, 2101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 2117, 0, 0, 0, 0, 0, 0, 2085,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1444, 0, 2091, 0, 0, 0, 0, 0,
	1444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2245, 0,
	0, 0, 0, 1448, 0, 0, 1448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2313, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 0, 2107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2245, 0,
	2245, 0, 0, 0, 0, 0, 2068, 2069, 0, 2102,
	2103, 2104, 2113, 2114, 2115, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 2097, 0, 0, 2106,
	2099, 0, 0, 0, 0, 0, 2100, 0, 319, 2071,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 1448,
	2119, 0, 2092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2125, 0,
	0, 0, 0, 0, 0, 0, 319, 2070, 0, 0,
	0, 0, 0, 0, 2111, 0, 0, 0, 2090, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2124, 0, 0, 0, 0, 1448, 0, 1448, 2245, 0,
	0, 1448, 0, 0, 0, 0, 0, 1448, 1448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1448,
	0, 2093, 2094, 2095, 2096, 0, 0, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 0, 0, 0, 1448,
	0, 0, 2109, 0, 0, 0, 0, 0, 0, 0,
	0, 1448, 0, 1448, 2082, 2083, 2089, 2112, 2088, 2084,
	0, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078,
	0, 0, 0, 0, 2110, 0, 0, 0, 2120, 3785,
	0, 0, 0, 0, 0, 2098, 2101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2313, 2116, 0,
	2117, 0, 0, 0, 0, 0, 0, 2085, 2086, 0,
	0, 0, 0, 0, 0, 0, 1448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2108, 0, 0,
	0, 0, 0, 1448, 0, 0, 0, 0, 0, 0,
	0, 0, 2091, 2313, 2313, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2313, 2313, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2118, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2313, 0,
	0, 0, 0, 2107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2122, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1448, 1448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 1448, 0, 0, 0,
	0, 0, 0, 0, 2097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2245,
	0, 2245, 0, 0, 0, 0, 0, 0, 0, 0,
	2092, 0, 0, 0, 319, 0, 0, 0, 0, 2313,
	0, 2313, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2111, 0, 0, 0, 0, 0, 1448, 0,
	0, 0, 1448, 1448, 1448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2124, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 321, 321, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 1041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1041,
	0, 0, 0, 2245, 0, 0, 0, 0, 0, 0,
	2109, 0, 0, 0, 0, 0, 0, 0, 2245, 0,
	0, 0, 2082, 2083, 2089, 2112, 2088, 2084, 0, 2081,
	2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078, 1635, 0,
	0, 0, 0, 0, 0, 319, 0, 3784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1448,
	1448, 0, 0, 0, 0, 321, 0, 1448, 0, 0,
	0, 0, 2245, 0, 2245, 0, 0, 1448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2245, 0, 319, 2245, 321, 1635, 321,
	321, 321, 0, 0, 321, 321, 1635, 0, 0, 0,
	0, 2313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 2068,
	2069, 0, 2102, 2103, 2104, 2113, 2114, 2115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2313,
	0, 1635, 2106, 2099, 0, 0, 0, 0, 1448, 2100,
	0, 0, 2071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1448, 2119, 0, 0, 0, 0, 0, 321,
	321, 1448, 0, 319, 0, 0, 1448, 1448, 1448, 0,
	0, 2125, 0, 0, 0, 0, 0, 0, 0, 1635,
	2070, 0, 0, 0, 0, 0, 0, 1635, 321, 321,
	0, 2090, 1448, 0, 0, 0, 0, 0, 0, 0,
	0, 2087, 0, 1635, 1448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2313, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2093, 2094, 2095, 2096, 0, 0,
	0, 0, 0, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 862, 0, 0, 1448, 0, 0, 0,
	0, 0, 0, 0, 1448, 0, 0, 0, 1448, 1448,
	0, 1448, 0, 0, 846, 0, 2313, 2110, 0, 847,
	0, 2120, 1448, 0, 0, 0, 0, 0, 2098, 2101,
	0, 0, 1448, 1448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2116, 0, 2117, 1448, 0, 0, 0, 0, 0,
	2085, 2086, 0, 848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 849, 0, 0, 0, 0, 0,
	2108, 0, 0, 0, 0, 0, 0, 0, 0, 2245,
	0, 2245, 1448, 0, 0, 2091, 0, 850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1448, 0, 1448, 0, 0, 0, 0, 0,
	868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 851, 0, 2118, 0, 0, 0, 1448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2107, 0, 852, 844,
	0, 0, 0, 0, 0, 0, 0, 2122, 0, 321,
	1448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 853, 0, 321, 321, 321, 845, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 878, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 1448, 1448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2097, 0, 0,
	0, 0, 1448, 867, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1448, 0, 0, 0, 0, 1448, 0, 0,
	0, 0, 0, 0, 0, 2111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	864, 0, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	0, 2124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 1635, 1635, 1635, 1635, 0, 0, 0,
	0, 2313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	855, 0, 0, 0, 0, 1448, 0, 1448, 321, 0,
	321, 0, 321, 0, 321, 0, 0, 321, 0, 321,
	0, 0, 0, 2109, 0, 0, 0, 0, 0, 0,
	0, 876, 0, 856, 0, 2082, 2083, 2089, 2112, 2088,
	2084, 0, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077,
	2078, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3783, 0, 0, 0, 0, 1448, 0, 321, 321, 321,
	321, 0, 0, 321, 0, 0, 0, 0, 0, 877,
	0, 0, 0, 0, 0, 0, 1633, 857, 0, 0,
	0, 0, 873, 874, 0, 871, 0, 0, 0, 0,
	2313, 0, 0, 0, 865, 0, 0, 858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1448, 0, 0, 0, 0, 0,
	1448, 0, 0, 1448, 1448, 859, 1757, 866, 0, 0,
	0, 0, 0, 870, 1633, 0, 860, 0, 0, 0,
	0, 0, 0, 1448, 0, 0, 0, 0, 0, 0,
	0, 0, 861, 0, 0, 0, 1634, 869, 0, 0,
	0, 0, 0, 1448, 0, 1448, 0, 0, 0, 0,
	0, 0, 0, 879, 0, 0, 0, 0, 0, 1633,
	0, 0, 0, 0, 0, 863, 0, 0, 0, 2313,
	0, 0, 0, 0, 0, 0, 1448, 0, 0, 1448,
	0, 0, 0, 0, 321, 0, 1635, 1635, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 1758, 1633, 0, 0,
	0, 0, 0, 0, 1634, 1633, 0, 0, 0, 0,
	0, 0, 1635, 0, 0, 0, 2313, 0, 321, 0,
	0, 1633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 1635, 0, 0, 0, 0, 321, 1634,
	0, 183, 0, 0, 0, 321, 0, 0, 0, 0,
	88, 0, 54, 53, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 321, 0, 0, 0, 0, 0, 321,
	89, 0, 0, 0, 82, 0, 0, 1448, 1635, 0,
	1635, 0, 1635, 0, 0, 0, 0, 1634, 94, 0,
	0, 0, 1448, 0, 0, 1634, 0, 0, 0, 75,
	1635, 1635, 0, 0, 0, 0, 56, 0, 181, 0,
	0, 1634, 0, 0, 1635, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 0,
	0, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2313, 0, 0, 0, 0, 0, 0,
	0, 1635, 0, 0, 0, 0, 1448, 0, 1448, 58,
	76, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 0, 0, 65, 0, 0, 1448, 0, 83,
	1448, 0, 0, 0, 1448, 0, 0, 57, 0, 128,
	0, 0, 0, 0, 1448, 112, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2286, 0, 0, 0, 0, 0, 0,
	0, 0, 2286, 321, 0, 0, 1635, 78, 1633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	321, 0, 321, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 321,
	0, 0, 321, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 321, 0, 0, 321, 0, 1635, 0, 0,
	0, 0, 0, 0, 61, 321, 321, 0, 1634, 0,
	321, 0, 321, 0, 0, 1757, 0, 0, 0, 321,
	321, 64, 0, 0, 0, 0, 67, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 66, 218, 0, 120, 1633, 0,
	124, 1633, 1633, 1633, 1633, 0, 62, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 1635, 63, 0,
	0, 0, 0, 1448, 0, 1448, 0, 0, 0, 0,
	0, 0, 281, 321, 0, 0, 2286, 1635, 1635, 0,
	70, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 321, 0,
	0, 0, 0, 180, 0, 1758, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	0, 1634, 1634, 1634, 1634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 80, 0, 0, 1635, 0, 0,
	0, 224, 0, 321, 321, 321, 321, 0, 0, 282,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 321, 0, 0, 276, 0, 0,
	0, 219, 0, 0, 0, 0, 223, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 222, 0, 0,
	3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 1635, 0, 0, 0,
	0, 0, 0, 0, 1633, 1633, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1633, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1758, 1633, 1635, 1633, 0,
	1633, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 1635, 0, 0, 0, 0, 1635, 0, 1633, 1633,
	1634, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1634, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 0, 1634, 0,
	1634, 0, 0, 0, 2068, 2069, 0, 2102, 2103, 2104,
	2113, 2114, 2115, 0, 0, 0, 0, 0, 1634, 1634,
	0, 0, 0, 0, 0, 0, 0, 2106, 2099, 0,
	0, 0, 1634, 0, 2100, 0, 0, 2071, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 2125, 0, 0, 1758,
	0, 0, 0, 0, 0, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	2094, 2095, 2096, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2110, 0, 0, 0, 2120, 0, 1758, 0,
	0, 0, 0, 2098, 2101, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 2116, 0, 2117, 0,
	0, 0, 0, 0, 0, 2085, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1072, 2108, 0, 0, 0, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 0, 0, 0, 0, 1076, 0, 1635, 0, 0,
	1077, 0, 0, 0, 0, 1757, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 1633, 1633, 0, 0, 0,
	0, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	2118, 0, 0, 0, 1078, 0, 1092, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 2107, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 2122, 1079, 321, 321, 0, 0, 1080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1101, 0, 0, 0, 1758, 0, 0, 1081, 0,
	0, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 0, 1099, 1634, 1634, 0, 0, 0,
	0, 0, 2097, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1074,
	1071, 0, 0, 0, 0, 0, 0, 0, 2092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 1635, 1082, 321, 1635, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2111, 1103, 321, 0, 0, 0, 878, 0, 2068, 2069,
	0, 2102, 2103, 2104, 2113, 2114, 2115, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 0, 0, 0, 0,
	0, 2106, 2099, 0, 0, 0, 2124, 0, 2100, 0,
	0, 2071, 0, 0, 321, 321, 0, 0, 321, 0,
	0, 0, 2119, 0, 1757, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1633, 0, 0, 321,
	2125, 0, 0, 0, 0, 0, 0, 0, 0, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 1102, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 1097, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2109, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2082, 2083, 2089, 2112, 2088, 2084, 0, 2081, 2079, 2080,
	2072, 2073, 2074, 2075, 2077, 2078, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 2982, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 0, 0, 0,
	1096, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 1083, 0, 2093, 2094, 2095, 2096, 1633, 0, 1633,
	0, 321, 0, 2076, 1633, 1635, 0, 1635, 0, 0,
	0, 1635, 0, 0, 0, 0, 321, 1635, 1635, 0,
	0, 0, 1635, 0, 1084, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2110, 0, 0, 321,
	2120, 0, 0, 0, 0, 0, 0, 2098, 2101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	877, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	2116, 0, 2117, 1070, 0, 1634, 1093, 0, 0, 2085,
	2086, 1635, 0, 1635, 0, 0, 0, 1634, 1085, 1634,
	0, 0, 0, 0, 1634, 0, 0, 0, 0, 2108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2091, 0, 321, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2068, 2069, 0,
	2102, 2103, 2104, 2113, 2114, 2115, 1086, 0, 0, 0,
	1087, 1106, 0, 1105, 1073, 0, 0, 1088, 0, 0,
	2106, 2099, 0, 0, 0, 0, 1635, 2100, 0, 0,
	2071, 0, 0, 1089, 2118, 0, 0, 0, 1098, 0,
	0, 2119, 0, 1635, 1107, 0, 0, 1104, 0, 0,
	0, 0, 0, 0, 879, 2107, 0, 0, 0, 2125,
	0, 0, 0, 0, 0, 0, 2122, 0, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2090,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2093, 2094, 2095, 2096, 0, 0, 0, 0,
	0, 0, 2076, 0, 2111, 0, 1635, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2124, 0, 321, 0, 0, 2110, 0, 0, 1635, 2120,
	0, 0, 0, 0, 0, 0, 2098, 2101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 1635, 2116,
	0, 2117, 1635, 1635, 1635, 1757, 0, 0, 2085, 2086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2108, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 0, 1757,
	0, 0, 2109, 2091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2082, 2083, 2089, 2112, 2088, 2084,
	0, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078,
	0, 0, 0, 0, 0, 5464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 0, 2118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 2107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2122, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	1635, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	0, 1757, 0, 0, 1757, 2097, 0, 1635, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 2111, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 321, 0, 321, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2124,
	0, 1758, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 1635, 0, 0, 0, 0, 1635, 1635, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2082, 2083, 2089, 2112, 2088, 2084, 0,
	2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078, 0,
	0, 0, 0, 1633, 5460, 1633, 0, 0, 0, 1757,
	0, 0, 0, 0, 1041, 1633, 1633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 1635,
	0, 1635, 0, 0, 0, 0, 0, 1633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	0, 1633, 1635, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 0, 1634, 0, 0, 0, 1758,
	0, 0, 0, 0, 1635, 1634, 1634, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 1634, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 0, 321, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1758, 0, 0, 0, 0, 1635, 1635, 0, 0,
	0, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1757, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 321, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 1635, 1635, 1635, 1635, 1635, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1633, 0, 0, 0,
	1633, 1633, 1757, 0, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2068, 2069, 0, 2102, 2103, 2104, 2113, 2114,
	2115, 0, 0, 0, 0, 1635, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 2106, 2099, 0, 0, 0,
	0, 0, 2100, 0, 0, 2071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 321, 321, 0,
	1634, 1634, 1758, 0, 2125, 0, 0, 0, 0, 0,
	0, 0, 0, 2070, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1633, 1633, 0,
	0, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	1635, 0, 0, 1635, 1635, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 2093, 2094, 2095,
	2096, 0, 0, 1635, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 1633, 1634, 1634, 0,
	2110, 0, 0, 0, 2120, 1634, 1635, 0, 0, 1635,
	0, 2098, 2101, 0, 0, 1634, 0, 0, 0, 1633,
	0, 0, 0, 0, 1633, 1633, 1633, 0, 0, 0,
	0, 0, 0, 0, 2116, 0, 2117, 0, 0, 0,
	0, 0, 0, 2085, 2086, 0, 0, 0, 0, 0,
	1633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 2108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 1634, 1634, 1634, 0, 2118, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2107,
	1634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2122, 0, 1758, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 1757, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1633, 1633, 0, 0, 0, 0, 0, 0, 0, 0,
	2097, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 1757, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 2092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 2111, 0,
	0, 0, 0, 0, 0, 0, 1758, 1758, 0, 1758,
	0, 0, 2068, 2069, 0, 2102, 2103, 2104, 2113, 2114,
	2115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1634, 1634, 0, 0, 2124, 2106, 2099, 321, 0, 0,
	0, 0, 2100, 0, 0, 2071, 0, 1757, 0, 0,
	0, 1635, 1758, 0, 0, 0, 2119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2125, 0, 0, 0, 1757, 0,
	0, 0, 0, 2070, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 2090, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2109, 0, 0, 0,
	0, 0, 0, 0, 1633, 1633, 0, 0, 2082, 2083,
	2089, 2112, 2088, 2084, 0, 2081, 2079, 2080, 2072, 2073,
	2074, 2075, 2077, 2078, 0, 0, 0, 1758, 0, 5363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 1758, 0,
	1757, 0, 0, 0, 0, 1633, 0, 2093, 2094, 2095,
	2096, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1633, 1633, 1633, 1633, 1633, 1633, 1633, 0, 0, 0,
	0, 0, 0, 0, 1634, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2110, 0, 0, 0, 2120, 0, 0, 0, 1757, 0,
	0, 2098, 2101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2116, 0, 2117, 0, 0, 0,
	1758, 0, 0, 2085, 2086, 1634, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 2108, 0, 0, 0, 0, 0, 0,
	1634, 1634, 1634, 1634, 1634, 1634, 1634, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2068, 2069,
	0, 2102, 2103, 2104, 2113, 2114, 2115, 0, 0, 0,
	0, 0, 2682, 0, 0, 0, 0, 0, 1758, 0,
	0, 2106, 2099, 1757, 0, 0, 0, 0, 2100, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 2118, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2107,
	2125, 0, 0, 1758, 0, 1634, 0, 0, 0, 2070,
	2122, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 1633, 0,
	0, 1633, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 0, 0,
	2097, 1633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 2094, 2095, 2096, 0, 0, 0,
	0, 0, 0, 2076, 1757, 0, 0, 1633, 2111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1758, 0, 0, 0, 0, 0, 1634, 0,
	0, 1634, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2124, 0, 2110, 0, 0, 0,
	2120, 1634, 0, 0, 0, 0, 0, 2098, 2101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 2117, 0, 0, 0, 0, 0, 0, 2085,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 1634, 0, 2108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2091, 0, 2109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2082, 2083,
	2089, 2112, 2088, 2084, 0, 2081, 2079, 2080, 2072, 2073,
	2074, 2075, 2077, 2078, 0, 0, 0, 0, 0, 5307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2684, 0, 0,
	0, 0, 0, 0, 2111, 0, 0, 0, 0, 1633,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 1755, 2082, 2083, 2089, 2112, 2088, 2084,
	0, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078,
	331, 332, 334, 333, 335, 336, 337, 338, 1760, 339,
	340, 1761, 1762, 1763, 0, 1764, 752, 1765, 1766, 1767,
	0, 341, 1768, 342, 343, 344, 1387, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 1769, 757, 354, 355, 356, 357, 358, 359, 360,
	1770, 1771, 0, 361, 758, 759, 760, 1772, 362, 363,
	761, 1773, 1636, 1774, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 1775, 373, 374, 375, 372, 376, 377,
	1776, 378, 1634, 379, 380, 381, 382, 383, 384, 385,
	1777, 386, 387, 388, 1388, 389, 390, 391, 1778, 1779,
	1781, 1780, 1782, 1783, 1784, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 1785, 402, 404, 398, 400,
	1786, 403, 401, 405, 406, 1787, 407, 408, 409, 1788,
	1789, 410, 411, 412, 1790, 413, 414, 415, 1791, 416,
	417, 418, 1792, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 765, 766,
	433, 434, 1793, 326, 1794, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 1795, 439, 440,
	441, 1796, 442, 443, 1797, 1389, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	1798, 456, 770, 1799, 771, 457, 1800, 458, 459, 460,
	461, 462, 463, 464, 772, 773, 774, 560, 1391, 465,
	466, 467, 1801, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 1802, 328, 327, 329, 1390,
	775, 477, 561, 478, 776, 777, 1803, 778, 1804, 479,
	480, 482, 1392, 779, 1393, 481, 483, 484, 1394, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	1805, 493, 495, 494, 1806, 497, 780, 496, 1395, 498,
	499, 1396, 1807, 500, 501, 502, 503, 504, 505, 508,
	1808, 1809, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 1397, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	1398, 553, 540, 1810, 541, 330, 1399, 555, 556, 557,
	558, 1811, 781, 559, 782, 562, 563, 1812, 0, 564,
	0, 565, 1813, 1814, 567, 568, 569, 1815, 1816, 570,
	571, 783, 1400, 572, 1401, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 1817,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 1818, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 1819, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	1820, 631, 632, 630, 633, 634, 1402, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 1821, 661, 662, 660, 663, 664, 665, 1822, 666,
	791, 667, 647, 648, 668, 669, 1403, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 1823, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 1824,
	698, 699, 0, 693, 684, 1825, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 1826, 708, 795, 796, 797,
	798, 1827, 720, 1828, 709, 711, 712, 713, 714, 799,
	715, 800, 1829, 716, 717, 718, 719, 710, 721, 722,
	1830, 1831, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 1832, 732, 1833, 0, 733, 734, 735, 801, 802,
	803, 1834, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 1835, 1836, 1837, 1838, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 3177, 0, 0, 0, 0, 0,
	0, 0, 0, 3178, 331, 332, 334, 333, 335, 336,
	337, 338, 1760, 339, 340, 1761, 1762, 1763, 0, 1764,
	752, 1765, 1766, 1767, 0, 341, 1768, 342, 343, 344,
	1387, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 1769, 757, 354, 355, 356,
	357, 358, 359, 360, 1770, 1771, 0, 361, 758, 759,
	760, 1772, 362, 363, 761, 1773, 1636, 1774, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 1775, 373, 374,
	375, 372, 376, 377, 1776, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 1777, 386, 387, 388, 1388, 389,
	390, 391, 1778, 1779, 1781, 1780, 1782, 1783, 1784, 392,
	393, 394, 395, 396, 0, 397, 399, 762, 763, 1785,
	402, 404, 398, 400, 1786, 403, 401, 405, 406, 1787,
	407, 408, 409, 1788, 1789, 410, 411, 412, 1790, 413,
	414, 415, 1791, 416, 417, 418, 1792, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 765, 766, 433, 434, 1793, 326, 1794, 0,
	0, 0, 0, 435, 436, 437, 767, 0, 0, 0,
	438, 1795, 439, 440, 441, 1796, 442, 443, 1797, 1389,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 1798, 456, 770, 1799, 771, 457,
	1800, 458, 459, 460, 461, 462, 463, 464, 772, 773,
	774, 560, 1391, 465, 466, 467, 1801, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 1802,
	328, 327, 329, 1390, 775, 477, 561, 478, 776, 777,
	1803, 778, 1804, 479, 480, 482, 1392, 779, 1393, 481,
	483, 484, 1394, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 1805, 493, 495, 494, 1806, 497,
	780, 496, 1395, 498, 499, 1396, 1807, 500, 501, 502,
	503, 504, 505, 508, 1808, 1809, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 1397, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 1398, 553, 540, 1810, 541, 330,
	1399, 555, 556, 557, 558, 1811, 781, 559, 782, 562,
	563, 1812, 0, 564, 0, 565, 1813, 1814, 567, 568,
	569, 1815, 1816, 570, 571, 783, 1400, 572, 1401, 784,
	573, 574, 566, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 1817, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 787, 593, 788, 594, 595, 1818,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 606, 789, 607, 608, 610, 609, 611, 1819, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 1820, 631, 632, 630, 633, 634,
	1402, 635, 636, 637, 638, 639, 790, 640, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 654,
	655, 656, 657, 659, 658, 1821, 661, 662, 660, 663,
	664, 665, 1822, 666, 791, 667, 647, 648, 668, 669,
	1403, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 1823, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 794, 694,
	695, 696, 697, 1824, 698, 699, 0, 693, 684, 1825,
	700, 701, 702, 703, 704, 705, 0, 706, 707, 1826,
	708, 795, 796, 797, 798, 1827, 720, 1828, 709, 711,
	712, 713, 714, 799, 715, 800, 1829, 716, 717, 718,
	719, 710, 721, 722, 1830, 1831, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 1832, 732, 1833, 0, 733,
	734, 735, 801, 802, 803, 1834, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 1835, 1836,
	1837, 1838, 747, 748, 805, 749, 750, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 4349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4351, 331, 332, 334, 333, 335,
	336, 337, 338, 1760, 339, 340, 1761, 1762, 1763, 0,
	1764, 752, 1765, 1766, 1767, 0, 341, 1768, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 1769, 757, 354, 355,
	356, 357, 358, 359, 360, 1770, 1771, 0, 361, 758,
	759, 760, 1772, 362, 363, 761, 1773, 1636, 1774, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 1775, 373,
	374, 375, 372, 376, 377, 1776, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 1777, 386, 387, 388, 1388,
	389, 390, 391, 1778, 1779, 1781, 1780, 1782, 1783, 1784,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	1785, 402, 404, 398, 400, 1786, 403, 401, 405, 406,
	1787, 407, 408, 409, 1788, 1789, 410, 411, 412, 1790,
	413, 414, 415, 1791, 416, 417, 418, 1792, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 1793, 326, 1794,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 1795, 439, 440, 441, 1796, 442, 443, 1797,
	1389, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 1798, 456, 770, 1799, 771,
	457, 1800, 458, 459, 460, 461, 462, 463, 464, 772,
	773, 774, 560, 1391, 465, 466, 467, 1801, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	1802, 328, 327, 329, 1390, 775, 477, 561, 478, 776,
	777, 1803, 778, 1804, 479, 480, 482, 1392, 779, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 1805, 493, 495, 494, 1806,
	497, 780, 496, 1395, 498, 499, 1396, 1807, 500, 501,
	502, 503, 504, 505, 508, 1808, 1809, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 1810, 541,
	330, 1399, 555, 556, 557, 558, 1811, 781, 559, 782,
	562, 563, 1812, 0, 564, 0, 565, 1813, 1814, 567,
	568, 569, 1815, 1816, 570, 571, 783, 1400, 572, 1401,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 1817, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	1818, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 1819,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 1820, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 1821, 661, 662, 660,
	663, 664, 665, 1822, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 1823, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 1824, 698, 699, 0, 693, 684,
	1825, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	1826, 708, 795, 796, 797, 798, 1827, 720, 1828, 709,
	711, 712, 713, 714, 799, 715, 800, 1829, 716, 717,
	718, 719, 710, 721, 722, 1830, 1831, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 1832, 732, 1833, 0,
	733, 734, 735, 801, 802, 803, 1834, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 1835,
	1836, 1837, 1838, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4827,
	331, 332, 334, 333, 335, 336, 337, 338, 1760, 339,
	340, 1761, 1762, 1763, 0, 1764, 752, 1765, 1766, 1767,
	0, 341, 1768, 342, 343, 344, 1387, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 1769, 757, 354, 355, 356, 357, 358, 359, 360,
	1770, 1771, 0, 361, 758, 759, 760, 1772, 362, 363,
	761, 1773, 1636, 1774, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 1775, 373, 374, 375, 372, 376, 377,
	1776, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	1777, 386, 387, 388, 1388, 389, 390, 391, 1778, 1779,
	1781, 1780, 1782, 1783, 1784, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 1785, 402, 404, 398, 400,
	1786, 403, 401, 405, 406, 1787, 407, 408, 409, 1788,
	1789, 410, 411, 412, 1790, 413, 414, 415, 1791, 416,
	417, 418, 1792, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 765, 766,
	433, 434, 1793, 326, 1794, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 1795, 439, 440,
	441, 1796, 442, 443, 1797, 1389, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	1798, 456, 770, 1799, 771, 457, 1800, 458, 459, 460,
	461, 462, 463, 464, 772, 773, 774, 560, 1391, 465,
	466, 467, 1801, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 1802, 328, 327, 329, 1390,
	775, 477, 561, 478, 776, 777, 1803, 778, 1804, 479,
	480, 482, 1392, 779, 1393, 481, 483, 484, 1394, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	1805, 493, 495, 494, 1806, 497, 780, 496, 1395, 498,
	499, 1396, 1807, 500, 501, 502, 503, 504, 505, 508,
	1808, 1809, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 1397, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	1398, 553, 540, 1810, 541, 330, 1399, 555, 556, 557,
	558, 1811, 781, 559, 782, 562, 563, 1812, 0, 564,
	0, 565, 1813, 1814, 567, 568, 569, 1815, 1816, 570,
	571, 783, 1400, 572, 1401, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 1817,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 1818, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 1819, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	1820, 631, 632, 630, 633, 634, 1402, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 1821, 661, 662, 660, 663, 664, 665, 1822, 666,
	791, 667, 647, 648, 668, 669, 1403, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 1823, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 1824,
	698, 699, 0, 693, 684, 1825, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 1826, 708, 795, 796, 797,
	798, 1827, 720, 1828, 709, 711, 712, 713, 714, 799,
	715, 800, 1829, 716, 717, 718, 719, 710, 721, 722,
	1830, 1831, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 1832, 732, 1833, 0, 733, 734, 735, 801, 802,
	803, 1834, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 1835, 1836, 1837, 1838, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4825, 331, 332, 334, 333, 335,
	336, 337, 338, 1760, 339, 340, 1761, 1762, 1763, 0,
	1764, 752, 1765, 1766, 1767, 0, 341, 1768, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 1769, 757, 354, 355,
	356, 357, 358, 359, 360, 1770, 1771, 0, 361, 758,
	759, 760, 1772, 362, 363, 761, 1773, 1636, 1774, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 1775, 373,
	374, 375, 372, 376, 377, 1776, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 1777, 386, 387, 388, 1388,
	389, 390, 391, 1778, 1779, 1781, 1780, 1782, 1783, 1784,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	1785, 402, 404, 398, 400, 1786, 403, 401, 405, 406,
	1787, 407, 408, 409, 1788, 1789, 410, 411, 412, 1790,
	413, 414, 415, 1791, 416, 417, 418, 1792, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 1793, 326, 1794,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 1795, 439, 440, 441, 1796, 442, 443, 1797,
	1389, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 1798, 456, 770, 1799, 771,
	457, 1800, 458, 459, 460, 461, 462, 463, 464, 772,
	773, 774, 560, 1391, 465, 466, 467, 1801, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	1802, 328, 327, 329, 1390, 775, 477, 561, 478, 776,
	777, 1803, 778, 1804, 479, 480, 482, 1392, 779, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 1805, 493, 495, 494, 1806,
	497, 780, 496, 1395, 498, 499, 1396, 1807, 500, 501,
	502, 503, 504, 505, 508, 1808, 1809, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 1810, 541,
	330, 1399, 555, 556, 557, 558, 1811, 781, 559, 782,
	562, 563, 1812, 0, 564, 0, 565, 1813, 1814, 567,
	568, 569, 1815, 1816, 570, 571, 783, 1400, 572, 1401,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 1817, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	1818, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 1819,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 1820, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 1821, 661, 662, 660,
	663, 664, 665, 1822, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 1823, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 1824, 698, 699, 0, 693, 684,
	1825, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	1826, 708, 795, 796, 797, 798, 1827, 720, 1828, 709,
	711, 712, 713, 714, 799, 715, 800, 1829, 716, 717,
	718, 719, 710, 721, 722, 1830, 1831, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 1832, 732, 1833, 0,
	733, 734, 735, 801, 802, 803, 1834, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 1835,
	1836, 1837, 1838, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5096, 331, 332, 334, 333, 335, 336,
	337, 338, 1760, 339, 340, 1761, 1762, 1763, 0, 1764,
	752, 1765, 1766, 1767, 0, 341, 1768, 342, 343, 344,
	1387, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 1769, 757, 354, 355, 356,
	357, 358, 359, 360, 1770, 1771, 0, 361, 758, 759,
	760, 1772, 362, 363, 761, 1773, 1636, 1774, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 1775, 373, 374,
	375, 372, 376, 377, 1776, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 1777, 386, 387, 388, 1388, 389,
	390, 391, 1778, 1779, 1781, 1780, 1782, 1783, 1784, 392,
	393, 394, 395, 396, 0, 397, 399, 762, 763, 1785,
	402, 404, 398, 400, 1786, 403, 401, 405, 406, 1787,
	407, 408, 409, 1788, 1789, 410, 411, 412, 1790, 413,
	414, 415, 1791, 416, 417, 418, 1792, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 765, 766, 433, 434, 1793, 326, 1794, 0,
	0, 0, 0, 435, 436, 437, 767, 0, 0, 0,
	438, 1795, 439, 440, 441, 1796, 442, 443, 1797, 1389,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 1798, 456, 770, 1799, 771, 457,
	1800, 458, 459, 460, 461, 462, 463, 464, 772, 773,
	774, 560, 1391, 465, 466, 467, 1801, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 1802,
	328, 327, 329, 1390, 775, 477, 561, 478, 776, 777,
	1803, 778, 1804, 479, 480, 482, 1392, 779, 1393, 481,
	483, 484, 1394, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 1805, 493, 495, 494, 1806, 497,
	780, 496, 1395, 498, 499, 1396, 1807, 500, 501, 502,
	503, 504, 505, 508, 1808, 1809, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 1397, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 1398, 553, 540, 1810, 541, 330,
	1399, 555, 556, 557, 558, 1811, 781, 559, 782, 562,
	563, 1812, 0, 564, 0, 565, 1813, 1814, 567, 568,
	569, 1815, 1816, 570, 571, 783, 1400, 572, 1401, 784,
	573, 574, 566, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 1817, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 787, 593, 788, 594, 595, 1818,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 606, 789, 607, 608, 610, 609, 611, 1819, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 1820, 631, 632, 630, 633, 634,
	1402, 635, 636, 637, 638, 639, 790, 640, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 654,
	655, 656, 657, 659, 658, 1821, 661, 662, 660, 663,
	664, 665, 1822, 666, 791, 667, 647, 648, 668, 669,
	1403, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 1823, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 794, 694,
	695, 696, 697, 1824, 698, 699, 0, 693, 684, 1825,
	700, 701, 702, 703, 704, 705, 0, 706, 707, 1826,
	708, 795, 796, 797, 798, 1827, 720, 1828, 709, 711,
	712, 713, 714, 799, 715, 800, 1829, 716, 717, 718,
	719, 710, 721, 722, 1830, 1831, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 1832, 732, 1833, 0, 733,
	734, 735, 801, 802, 803, 1834, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 1835, 1836,
	1837, 1838, 747, 748, 805, 749, 750, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4945, 331, 332, 334, 333, 335, 336, 337,
	338, 1760, 339, 340, 1761, 1762, 1763, 0, 1764, 752,
	1765, 1766, 1767, 0, 341, 1768, 342, 343, 344, 1387,
	345, 346, 347, 348, 349, 350, 351, 753, 754, 0,
	352, 755, 353, 756, 1769, 757, 354, 355, 356, 357,
	358, 359, 360, 1770, 1771, 0, 361, 758, 759, 760,
	1772, 362, 363, 761, 1773, 1636, 1774, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 1775, 373, 374, 375,
	372, 376, 377, 1776, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 1777, 386, 387, 388, 1388, 389, 390,
	391, 1778, 1779, 1781, 1780, 1782, 1783, 1784, 392, 393,
	394, 395, 396, 0, 397, 399, 762, 763, 1785, 402,
	404, 398, 400, 1786, 403, 401, 405, 406, 1787, 407,
	408, 409, 1788, 1789, 410, 411, 412, 1790, 413, 414,
	415, 1791, 416, 417, 418, 1792, 419, 420, 764, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 765, 766, 433, 434, 1793, 326, 1794, 0, 0,
	0, 0, 435, 436, 437, 767, 0, 0, 0, 438,
	1795, 439, 440, 441, 1796, 442, 443, 1797, 1389, 444,
	445, 446, 768, 769, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 1798, 456, 770, 1799, 771, 457, 1800,
	458, 459, 460, 461, 462, 463, 464, 772, 773, 774,
	560, 1391, 465, 466, 467, 1801, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 1802, 328,
	327, 329, 1390, 775, 477, 561, 478, 776, 777, 1803,
	778, 1804, 479, 480, 482, 1392, 779, 1393, 481, 483,
	484, 1394, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 1805, 493, 495, 494, 1806, 497, 780,
	496, 1395, 498, 499, 1396, 1807, 500, 501, 502, 503,
	504, 505, 508, 1808, 1809, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 1397, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 1398, 553, 540, 1810, 541, 330, 1399,
	555, 556, 557, 558, 1811, 781, 559, 782, 562, 563,
	1812, 0, 564, 0, 565, 1813, 1814, 567, 568, 569,
	1815, 1816, 570, 571, 783, 1400, 572, 1401, 784, 573,
	574, 566, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 1817, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 787, 593, 788, 594, 595, 1818, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 789, 607, 608, 610, 609, 611, 1819, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 1820, 631, 632, 630, 633, 634, 1402,
	635, 636, 637, 638, 639, 790, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 1821, 661, 662, 660, 663, 664,
	665, 1822, 666, 791, 667, 647, 648, 668, 669, 1403,
	670, 671, 672, 673, 674, 675, 676, 792, 0, 677,
	1823, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 793, 687, 688, 689, 690, 794, 694, 695,
	696, 697, 1824, 698, 699, 0, 693, 684, 1825, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 1826, 708,
	795, 796, 797, 798, 1827, 720, 1828, 709, 711, 712,
	713, 714, 799, 715, 800, 1829, 716, 717, 718, 719,
	710, 721, 722, 1830, 1831, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 1832, 732, 1833, 0, 733, 734,
	735, 801, 802, 803, 1834, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 1835, 1836, 1837,
	1838, 747, 748, 805, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4523, 331, 332, 334, 333, 335, 336, 337, 338,
	1760, 339, 340, 1761, 1762, 1763, 0, 1764, 752, 1765,
	1766, 1767, 0, 341, 1768, 342, 343, 344, 1387, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 1769, 757, 354, 355, 356, 357, 358,
	359, 360, 1770, 1771, 0, 361, 758, 759, 760, 1772,
	362, 363, 761, 1773, 1636, 1774, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 1775, 373, 374, 375, 372,
	376, 377, 1776, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 1777, 386, 387, 388, 1388, 389, 390, 391,
	1778, 1779, 1781, 1780, 1782, 1783, 1784, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 1785, 402, 404,
	398, 400, 1786, 403, 401, 405, 406, 1787, 407, 408,
	409, 1788, 1789, 410, 411, 412, 1790, 413, 414, 415,
	1791, 416, 417, 418, 1792, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 1793, 326, 1794, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 1795,
	439, 440, 441, 1796, 442, 443, 1797, 1389, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 1798, 456, 770, 1799, 771, 457, 1800, 458,
	459, 460, 461, 462, 463, 464, 772, 773, 774, 560,
	1391, 465, 466, 467, 1801, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 1802, 328, 327,
	329, 1390, 775, 477, 561, 478, 776, 777, 1803, 778,
	1804, 479, 480, 482, 1392, 779, 1393, 481, 483, 484,
	1394, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 1805, 493, 495, 494, 1806, 497, 780, 496,
	1395, 498, 499, 1396, 1807, 500, 501, 502, 503, 504,
	505, 508, 1808, 1809, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 1397, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 1398, 553, 540, 1810, 541, 330, 1399, 555,
	556, 557, 558, 1811, 781, 559, 782, 562, 563, 1812,
	0, 564, 0, 565, 1813, 1814, 567, 568, 569, 1815,
	1816, 570, 571, 783, 1400, 572, 1401, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 1817, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 1818, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 1819, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 1820, 631, 632, 630, 633, 634, 1402, 635,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 1821, 661, 662, 660, 663, 664, 665,
	1822, 666, 791, 667, 647, 648, 668, 669, 1403, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 1823,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 1824, 698, 699, 0, 693, 684, 1825, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 1826, 708, 795,
	796, 797, 798, 1827, 720, 1828, 709, 711, 712, 713,
	714, 799, 715, 800, 1829, 716, 717, 718, 719, 710,
	721, 722, 1830, 1831, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 1832, 732, 1833, 0, 733, 734, 735,
	801, 802, 803, 1834, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 1835, 1836, 1837, 1838,
	747, 748, 805, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4367, 331, 332, 334, 333, 335, 336, 337, 338, 1760,
	339, 340, 1761, 1762, 1763, 0, 1764, 752, 1765, 1766,
	1767, 0, 341, 1768, 342, 343, 344, 1387, 345, 346,
	347, 348, 349, 350, 351, 753, 754, 0, 352, 755,
	353, 756, 1769, 757, 354, 355, 356, 357, 358, 359,
	360, 1770, 1771, 0, 361, 758, 759, 760, 1772, 362,
	363, 761, 1773, 1636, 1774, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 1775, 373, 374, 375, 372, 376,
	377, 1776, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 1777, 386, 387, 388, 1388, 389, 390, 391, 1778,
	1779, 1781, 1780, 1782, 1783, 1784, 392, 393, 394, 395,
	396, 0, 397, 399, 762, 763, 1785, 402, 404, 398,
	400, 1786, 403, 401, 405, 406, 1787, 407, 408, 409,
	1788, 1789, 410, 411, 412, 1790, 413, 414, 415, 1791,
	416, 417, 418, 1792, 419, 420, 764, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 765,
	766, 433, 434, 1793, 326, 1794, 0, 0, 0, 0,
	435, 436, 437, 767, 0, 0, 0, 438, 1795, 439,
	440, 441, 1796, 442, 443, 1797, 1389, 444, 445, 446,
	768, 769, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 1798, 456, 770, 1799, 771, 457, 1800, 458, 459,
	460, 461, 462, 463, 464, 772, 773, 774, 560, 1391,
	465, 466, 467, 1801, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 1802, 328, 327, 329,
	1390, 775, 477, 561, 478, 776, 777, 1803, 778, 1804,
	479, 480, 482, 1392, 779, 1393, 481, 483, 484, 1394,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 1805, 493, 495, 494, 1806, 497, 780, 496, 1395,
	498, 499, 1396, 1807, 500, 501, 502, 503, 504, 505,
	508, 1808, 1809, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 1397, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 1398, 553, 540, 1810, 541, 330, 1399, 555, 556,
	557, 558, 1811, 781, 559, 782, 562, 563, 1812, 0,
	564, 0, 565, 1813, 1814, 567, 568, 569, 1815, 1816,
	570, 571, 783, 1400, 572, 1401, 784, 573, 574, 566,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	1817, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 787, 593, 788, 594, 595, 1818, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 789,
	607, 608, 610, 609, 611, 1819, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 1820, 631, 632, 630, 633, 634, 1402, 635, 636,
	637, 638, 639, 790, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 1821, 661, 662, 660, 663, 664, 665, 1822,
	666, 791, 667, 647, 648, 668, 669, 1403, 670, 671,
	672, 673, 674, 675, 676, 792, 0, 677, 1823, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	793, 687, 688, 689, 690, 794, 694, 695, 696, 697,
	1824, 698, 699, 0, 693, 684, 1825, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 1826, 708, 795, 796,
	797, 798, 1827, 720, 1828, 709, 711, 712, 713, 714,
	799, 715, 800, 1829, 716, 717, 718, 719, 710, 721,
	722, 1830, 1831, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 1832, 732, 1833, 0, 733, 734, 735, 801,
	802, 803, 1834, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 1835, 1836, 1837, 1838, 747,
	748, 805, 749, 750, 751, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4196,
	331, 332, 334, 333, 335, 336, 337, 338, 1760, 339,
	340, 1761, 1762, 1763, 0, 1764, 752, 1765, 1766, 1767,
	0, 341, 1768, 342, 343, 344, 1387, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 1769, 757, 354, 355, 356, 357, 358, 359, 360,
	1770, 1771, 0, 361, 758, 759, 760, 1772, 362, 363,
	761, 1773, 1636, 1774, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 1775, 373, 374, 375, 372, 376, 377,
	1776, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	1777, 386, 387, 388, 1388, 389, 390, 391, 1778, 1779,
	1781, 1780, 1782, 1783, 1784, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 1785, 402, 404, 398, 400,
	1786, 403, 401, 405, 406, 1787, 407, 408, 409, 1788,
	1789, 410, 411, 412, 1790, 413, 414, 415, 1791, 416,
	417, 418, 1792, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 765, 766,
	433, 434, 1793, 326, 1794, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 1795, 439, 440,
	441, 1796, 442, 443, 1797, 1389, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	1798, 456, 770, 1799, 771, 457, 1800, 458, 459, 460,
	461, 462, 463, 464, 772, 773, 774, 560, 1391, 465,
	466, 467, 1801, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 1802, 328, 327, 329, 1390,
	775, 477, 561, 478, 776, 777, 1803, 778, 1804, 479,
	480, 482, 1392, 779, 1393, 481, 483, 484, 1394, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	1805, 493, 495, 494, 1806, 497, 780, 496, 1395, 498,
	499, 1396, 1807, 500, 501, 502, 503, 504, 505, 508,
	1808, 1809, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 1397, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	1398, 553, 540, 1810, 541, 330, 1399, 555, 556, 557,
	558, 1811, 781, 559, 782, 562, 563, 1812, 0, 564,
	0, 565, 1813, 1814, 567, 568, 569, 1815, 1816, 570,
	571, 783, 1400, 572, 1401, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 1817,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 1818, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 1819, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	1820, 631, 632, 630, 633, 634, 1402, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 1821, 661, 662, 660, 663, 664, 665, 1822, 666,
	791, 667, 647, 648, 668, 669, 1403, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 1823, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 1824,
	698, 699, 0, 693, 684, 1825, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 1826, 708, 795, 796, 797,
	798, 1827, 720, 1828, 709, 711, 712, 713, 714, 799,
	715, 800, 1829, 716, 717, 718, 719, 710, 721, 722,
	1830, 1831, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 1832, 732, 1833, 0, 733, 734, 735, 801, 802,
	803, 1834, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 1835, 1836, 1837, 1838, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3005, 331,
	332, 334, 333, 335, 336, 337, 338, 1760, 339, 340,
	1761, 1762, 1763, 0, 1764, 752, 1765, 1766, 1767, 0,
	341, 1768, 342, 343, 344, 1387, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	1769, 757, 354, 355, 356, 357, 358, 359, 360, 1770,
	1771, 0, 361, 758, 759, 760, 1772, 362, 363, 761,
	1773, 1636, 1774, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 1775, 373, 374, 375, 372, 376, 377, 1776,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 1777,
	386, 387, 388, 1388, 389, 390, 391, 1778, 1779, 1781,
	1780, 1782, 1783, 1784, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 1785, 402, 404, 398, 400, 1786,
	403, 401, 405, 406, 1787, 407, 408, 409, 1788, 1789,
	410, 411, 412, 1790, 413, 414, 415, 1791, 416, 417,
	418, 1792, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 1793, 326, 1794, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 1795, 439, 440, 441,
	1796, 442, 443, 1797, 1389, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 1798,
	456, 770, 1799, 771, 457, 1800, 458, 459, 460, 461,
	462, 463, 464, 772, 773, 774, 560, 1391, 465, 466,
	467, 1801, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 1802, 328, 327, 329, 1390, 775,
	477, 561, 478, 776, 777, 1803, 778, 1804, 479, 480,
	482, 1392, 779, 1393, 481, 483, 484, 1394, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 1805,
	493, 495, 494, 1806, 497, 780, 496, 1395, 498, 499,
	1396, 1807, 500, 501, 502, 503, 504, 505, 508, 1808,
	1809, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 1397, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 1398,
	553, 540, 1810, 541, 330, 1399, 555, 556, 557, 558,
	1811, 781, 559, 782, 562, 563, 1812, 0, 564, 0,
	565, 1813, 1814, 567, 568, 569, 1815, 1816, 570, 571,
	783, 1400, 572, 1401, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 1817, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 1818, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 1819, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 1820,
	631, 632, 630, 633, 634, 1402, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	1821, 661, 662, 660, 663, 664, 665, 1822, 666, 791,
	667, 647, 648, 668, 669, 1403, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 1823, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 1824, 698,
	699, 0, 693, 684, 1825, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 1826, 708, 795, 796, 797, 798,
	1827, 720, 1828, 709, 711, 712, 713, 714, 799, 715,
	800, 1829, 716, 717, 718, 719, 710, 721, 722, 1830,
	1831, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	1832, 732, 1833, 0, 733, 734, 735, 801, 802, 803,
	1834, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 1835, 1836, 1837, 1838, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 1752,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2720, 331, 332,
	334, 333, 335, 336, 337, 338, 1760, 339, 340, 1761,
	1762, 1763, 0, 1764, 752, 1765, 1766, 1767, 0, 341,
	1768, 342, 343, 344, 1387, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 1769,
	757, 354, 355, 356, 357, 358, 359, 360, 1770, 1771,
	0, 361, 758, 759, 760, 1772, 362, 363, 761, 1773,
	1636, 1774, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 1775, 373, 374, 375, 372, 376, 377, 1776, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 1777, 386,
	387, 388, 1388, 389, 390, 391, 1778, 1779, 1781, 1780,
	1782, 1783, 1784, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 1785, 402, 404, 398, 400, 1786, 403,
	401, 405, 406, 1787, 407, 408, 409, 1788, 1789, 410,
	411, 412, 1790, 413, 414, 415, 1791, 416, 417, 418,
	1792, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	1793, 326, 1794, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 1795, 439, 440, 441, 1796,
	442, 443, 1797, 1389, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 1798, 456,
	770, 1799, 771, 457, 1800, 458, 459, 460, 461, 462,
	463, 464, 772, 773, 774, 560, 1391, 465, 466, 467,
	1801, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 1802, 328, 327, 329, 1390, 775, 477,
	561, 478, 776, 777, 1803, 778, 1804, 479, 480, 482,
	1392, 779, 1393, 481, 483, 484, 1394, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 1805, 493,
	495, 494, 1806, 497, 780, 496, 1395, 498, 499, 1396,
	1807, 500, 501, 502, 503, 504, 505, 508, 1808, 1809,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	1397, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 1398, 553,
	540, 1810, 541, 330, 1399, 555, 556, 557, 558, 1811,
	781, 559, 782, 562, 563, 1812, 0, 564, 0, 565,
	1813, 1814, 567, 568, 569, 1815, 1816, 570, 571, 783,
	1400, 572, 1401, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 1817, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 1818, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 1819, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 1820, 631,
	632, 630, 633, 634, 1402, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 1821,
	661, 662, 660, 663, 664, 665, 1822, 666, 791, 667,
	647, 648, 668, 669, 1403, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 1823, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 1824, 698, 699,
	0, 693, 684, 1825, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 1826, 708, 795, 796, 797, 798, 1827,
	720, 1828, 709, 711, 712, 713, 714, 799, 715, 800,
	1829, 716, 717, 718, 719, 710, 721, 722, 1830, 1831,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 1832,
	732, 1833, 0, 733, 734, 735, 801, 802, 803, 1834,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 1835, 1836, 1837, 1838, 747, 748, 805, 749,
	750, 751, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 1760, 339, 340,
	1761, 1762, 1763, 0, 1764, 752, 1765, 1766, 1767, 0,
	341, 1768, 342, 343, 344, 1387, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	1769, 757, 354, 355, 356, 357, 358, 359, 360, 1770,
	1771, 0, 361, 758, 759, 760, 1772, 362, 363, 761,
	1773, 1636, 1774, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 1775, 373, 374, 375, 372, 376, 377, 1776,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 1777,
	386, 387, 388, 1388, 389, 390, 391, 1778, 1779, 1781,
	1780, 1782, 1783, 1784, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 1785, 402, 404, 398, 400, 1786,
	403, 401, 405, 406, 1787, 407, 408, 409, 1788, 1789,
	410, 411, 412, 1790, 413, 414, 415, 1791, 416, 417,
	418, 1792, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 1793, 326, 1794, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 1795, 439, 440, 441,
	1796, 442, 443, 1797, 1389, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 1798,
	456, 770, 1799, 771, 457, 1800, 458, 459, 460, 461,
	462, 463, 464, 772, 773, 774, 560, 1391, 465, 466,
	467, 1801, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 1802, 328, 327, 329, 1390, 775,
	477, 561, 478, 776, 777, 1803, 778, 1804, 479, 480,
	482, 1392, 779, 1393, 481, 483, 484, 1394, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 1805,
	493, 495, 494, 1806, 497, 780, 496, 1395, 498, 499,
	1396, 1807, 500, 501, 502, 503, 504, 505, 508, 1808,
	1809, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 1397, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 1398,
	553, 540, 1810, 541, 330, 1399, 555, 556, 557, 558,
	1811, 781, 559, 782, 562, 563, 1812, 0, 564, 0,
	565, 1813, 1814, 567, 568, 569, 1815, 1816, 570, 571,
	783, 1400, 572, 1401, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 1817, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 1818, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 1819, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 1820,
	631, 632, 630, 633, 634, 1402, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	1821, 661, 662, 660, 663, 664, 665, 1822, 666, 791,
	667, 647, 648, 668, 669, 1403, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 1823, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 1824, 698,
	699, 0, 693, 684, 1825, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 1826, 708, 795, 796, 797, 798,
	1827, 720, 1828, 709, 711, 712, 713, 714, 799, 715,
	800, 1829, 716, 717, 718, 719, 710, 721, 722, 1830,
	1831, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	1832, 732, 1833, 0, 733, 734, 735, 801, 802, 803,
	1834, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 1835, 1836, 1837, 1838, 747, 748, 805,
	749, 750, 751, 2980, 0, 1321, 1293, 1294, 1295, 1291,
	1292, 1304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	2977, 339, 340, 0, 0, 0, 0, 0, 1347, 1309,
	0, 0, 0, 341, 0, 342, 343, 344, 1387, 345,
	346, 347, 348, 349, 350, 351, 753, 1360, 0, 352,
	1367, 353, 1366, 0, 1377, 354, 355, 356, 357, 358,
	359, 360, 1311, 1346, 1275, 361, 1407, 1408, 760, 0,
	362, 363, 1353, 0, 1334, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 1388, 389, 390, 391,
	1337, 1335, 1336, 1343, 1339, 1338, 1342, 392, 393, 394,
	395, 396, 1370, 397, 399, 1364, 1363, 1280, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 2978, 0, 410, 1355, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 1286, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	1378, 1379, 433, 434, 1300, 326, 0, 0, 0, 0,
	0, 435, 436, 437, 1362, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 1389, 444, 445,
	446, 1375, 1376, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 1385, 0, 1310, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 1348, 1349, 1352, 560,
	1391, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 1290, 327,
	329, 1390, 775, 477, 561, 478, 1357, 1358, 0, 1316,
	0, 479, 480, 482, 1392, 1350, 1393, 481, 483, 484,
	1394, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 1386, 496,
	1395, 498, 499, 1396, 0, 500, 501, 502, 503, 504,
	505, 508, 1341, 1340, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 1397, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 1398, 553, 540, 1277, 541, 330, 1399, 555,
	556, 557, 558, 1301, 1351, 559, 1365, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 1400, 572, 1401, 1380, 573, 574,
	1287, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 1381, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	1361, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 1402, 635,
	636, 637, 638, 639, 1288, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	1344, 666, 791, 667, 647, 648, 668, 669, 1403, 670,
	671, 672, 673, 674, 675, 676, 1359, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 1406, 687, 688, 689, 690, 1382, 694, 695, 696,
	697, 0, 698, 699, 1274, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 1371,
	1372, 1373, 1374, 0, 720, 0, 709, 711, 712, 713,
	714, 1383, 715, 1384, 1299, 716, 717, 718, 719, 710,
	721, 722, 0, 1281, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 1345, 732, 0, 0, 733, 734, 735,
	801, 1368, 1405, 2976, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 0, 0, 0, 0,
	747, 748, 805, 749, 750, 751, 1278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 0, 0, 0, 0, 0, 0, 1271, 1272,
	2979, 0, 0, 0, 0, 0, 0, 0, 1305, 2975,
	0, 1262, 1303, 1321, 1293, 1294, 1295, 1291, 1292, 1304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 0, 0, 0, 1347, 1309, 0, 0,
	0, 341, 0, 342, 343, 344, 1387, 345, 346, 347,
	348, 349, 350, 351, 753, 1360, 0, 352, 1367, 353,
	1366, 0, 1377, 354, 355, 356, 357, 358, 359, 360,
	1311, 1346, 1275, 361, 1407, 1408, 760, 0, 362, 363,
	1353, 0, 1334, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 1388, 389, 390, 391, 1337, 1335,
	1336, 1343, 1339, 1338, 1342, 392, 393, 394, 395, 396,
	1370, 397, 399, 1364, 1363, 1280, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 1355, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 1286, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 1378, 1379,
	433, 434, 1300, 326, 0, 0, 0, 0, 0, 435,
	436, 437, 1362, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 1389, 444, 445, 446, 1375,
	1376, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 1385, 0, 1310, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 1348, 1349, 1352, 560, 1391, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 1290, 327, 329, 1390,
	775, 477, 561, 478, 1357, 1358, 0, 1316, 0, 479,
	480, 482, 1392, 1350, 1393, 481, 483, 484, 1394, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 1386, 496, 1395, 498,
	499, 1396, 0, 500, 501, 502, 503, 504, 505, 508,
	1341, 1340, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 1397, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	1398, 553, 540, 1277, 541, 330, 1399, 555, 556, 557,
	558, 1301, 1351, 559, 1365, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 569, 0, 0, 570,
	571, 783, 1400, 572, 1401, 1380, 573, 574, 1287, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	1381, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 1361, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 1402, 635, 636, 637,
	638, 639, 1288, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 281, 661, 662, 660, 663, 664, 665, 1344, 666,
	791, 667, 647, 648, 668, 669, 1403, 670, 671, 672,
	673, 674, 675, 676, 1359, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 1406,
	687, 688, 689, 690, 1382, 694, 695, 696, 697, 0,
	698, 699, 1274, 693, 684, 283, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 1371, 1372, 1373,
	1374, 0, 720, 0, 709, 711, 712, 713, 714, 1383,
	715, 1384, 1299, 716, 717, 718, 719, 710, 721, 722,
	0, 1281, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 1345, 732, 0, 0, 733, 734, 735, 1995, 1368,
	1405, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 0, 0, 0, 275, 747, 748,
	805, 749, 750, 751, 1278, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	0, 0, 0, 0, 0, 0, 1271, 1272, 1321, 1293,
	1294, 1295, 1291, 1292, 1304, 0, 2150, 2148, 0, 0,
	1303, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 1347, 1309, 0, 0, 0, 341, 0, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	1360, 0, 352, 1367, 353, 1366, 0, 1377, 354, 355,
	356, 357, 358, 359, 360, 1311, 1346, 1275, 361, 1407,
	1408, 760, 0, 362, 363, 1353, 0, 1334, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 391, 1337, 1335, 1336, 1343, 1339, 1338, 1342,
	392, 393, 394, 395, 396, 1370, 397, 399, 1364, 1363,
	1280, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 1355, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	1286, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 1378, 1379, 433, 434, 1300, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 1362, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	1389, 444, 445, 446, 1375, 1376, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 1385, 0, 1310,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 1348,
	1349, 1352, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 1290, 327, 329, 1390, 775, 477, 561, 478, 1357,
	1358, 0, 1316, 0, 479, 480, 482, 1392, 1350, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 1386, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 1341, 1340, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 1277, 541,
	330, 1399, 555, 556, 557, 558, 1301, 1351, 559, 1365,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	1380, 573, 574, 1287, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 1381, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 1361, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 1288, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 281, 661, 662, 660,
	663, 664, 665, 1344, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 1359,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 1406, 687, 688, 689, 690, 1382,
	694, 695, 696, 697, 0, 698, 699, 1274, 693, 684,
	283, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 1371, 1372, 1373, 1374, 0, 720, 0, 709,
	711, 712, 713, 714, 1383, 715, 1384, 1299, 716, 717,
	718, 719, 710, 721, 722, 0, 1281, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 1345, 732, 0, 0,
	733, 734, 735, 1995, 1368, 1405, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 0,
	0, 0, 275, 747, 748, 805, 749, 750, 751, 1278,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 0,
	0, 1271, 1272, 1321, 1293, 1294, 1295, 1291, 1292, 1304,
	0, 2150, 3739, 0, 0, 1303, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 0, 0, 0, 1347, 1309, 0, 0,
	0, 341, 0, 342, 343, 344, 1387, 345, 346, 347,
	348, 349, 350, 351, 753, 1360, 0, 352, 1367, 353,
	1366, 0, 1377, 354, 355, 356, 357, 358, 359, 360,
	1311, 1346, 1275, 361, 1407, 1408, 760, 0, 362, 363,
	1353, 0, 1334, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 1388, 389, 390, 391, 1337, 1335,
	1336, 1343, 1339, 1338, 1342, 392, 393, 394, 395, 396,
	1370, 397, 399, 1364, 1363, 1280, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 1355, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 1286, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 1378, 1379,
	433, 434, 1300, 326, 0, 0, 0, 0, 0, 435,
	436, 437, 1362, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 1389, 444, 445, 446, 1375,
	1376, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 1385, 0, 1310, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 1348, 1349, 1352, 560, 1391, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 1290, 327, 329, 1390,
	775, 477, 561, 478, 1357, 1358, 0, 1316, 0, 479,
	480, 482, 1392, 1350, 1393, 481, 483, 484, 1394, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 1386, 496, 1395, 498,
	499, 1396, 0, 500, 501, 502, 503, 504, 505, 508,
	1341, 1340, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 1397, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	1398, 553, 540, 1277, 541, 330, 1399, 555, 556, 557,
	558, 1301, 1351, 559, 1365, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 569, 0, 0, 570,
	571, 783, 1400, 572, 1401, 1380, 573, 574, 1287, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	1381, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 1361, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 1402, 635, 636, 637,
	638, 639, 1288, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 281, 661, 662, 660, 663, 664, 665, 1344, 666,
	791, 667, 647, 648, 668, 669, 1403, 670, 671, 672,
	673, 674, 675, 676, 1359, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 1406,
	687, 688, 689, 690, 1382, 694, 695, 696, 697, 0,
	698, 699, 1274, 693, 684, 283, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 1371, 1372, 1373,
	1374, 0, 720, 0, 709, 711, 712, 713, 714, 1383,
	715, 1384, 1299, 716, 717, 718, 719, 710, 721, 722,
	0, 1281, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 1345, 732, 0, 0, 733, 734, 735, 1995, 1368,
	1405, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 0, 0, 0, 275, 747, 748,
	805, 749, 750, 751, 1278, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	0, 0, 0, 0, 0, 0, 1271, 1272, 1321, 1293,
	1294, 1295, 1291, 1292, 1304, 0, 2150, 2148, 0, 0,
	1303, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 1347, 1309, 0, 0, 0, 341, 0, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	1360, 0, 352, 1367, 353, 1366, 3113, 1377, 354, 355,
	356, 357, 358, 359, 360, 1311, 1346, 1275, 361, 1407,
	1408, 760, 0, 362, 363, 1353, 0, 1334, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 391, 1337, 1335, 1336, 1343, 1339, 1338, 1342,
	392, 393, 394, 395, 396, 1370, 397, 399, 1364, 1363,
	1280, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 1355, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	1286, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 1378, 1379, 433, 434, 1300, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 1362, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 3118,
	1389, 444, 445, 446, 1375, 1376, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 1385, 0, 1310,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 1348,
	1349, 1352, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 1290, 327, 329, 1390, 775, 477, 561, 478, 1357,
	1358, 0, 1316, 0, 479, 480, 482, 1392, 1350, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 3114,
	497, 1386, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 1341, 1340, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 1277, 541,
	330, 1399, 555, 556, 557, 558, 1301, 1351, 559, 1365,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	1380, 573, 574, 1287, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 1381, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 1361, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 1288, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 1344, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 1359,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 1406, 687, 688, 689, 690, 1382,
	694, 695, 696, 697, 0, 698, 699, 1274, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 1371, 1372, 1373, 1374, 0, 720, 3115, 709,
	711, 712, 713, 714, 1383, 715, 1384, 1299, 716, 717,
	718, 719, 710, 721, 722, 0, 1281, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 1345, 732, 0, 0,
	733, 734, 735, 801, 1368, 1405, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 0,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 1278,
	0, 0, 0, 0, 3025, 0, 1321, 1293, 1294, 1295,
	1291, 1292, 1304, 0, 1273, 0, 0, 0, 0, 0,
	0, 1271, 1272, 331, 332, 334, 333, 335, 336, 337,
	338, 1305, 339, 340, 0, 1303, 0, 0, 0, 1347,
	1309, 0, 0, 0, 341, 0, 342, 343, 344, 1387,
	345, 346, 347, 348, 349, 350, 351, 753, 1360, 0,
	352, 1367, 353, 1366, 0, 1377, 354, 355, 356, 357,
	358, 359, 360, 1311, 1346, 1275, 361, 1407, 1408, 760,
	0, 362, 363, 1353, 0, 1334, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 1388, 389, 390,
	391, 1337, 1335, 1336, 1343, 1339, 1338, 1342, 392, 393,
	394, 395, 396, 1370, 397, 399, 1364, 1363, 1280, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 1355, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 1286, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 1378, 1379, 433, 434, 1300, 326, 0, 0, 0,
	0, 0, 435, 436, 437, 1362, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 1389, 444,
	445, 446, 1375, 1376, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 1385, 0, 1310, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 1348, 1349, 1352,
	560, 1391, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 1290,
	327, 329, 1390, 775, 477, 561, 478, 1357, 1358, 0,
	1316, 0, 479, 480, 482, 1392, 1350, 1393, 481, 483,
	484, 1394, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 1386,
	496, 1395, 498, 499, 1396, 0, 500, 501, 502, 503,
	504, 505, 508, 1341, 1340, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 1397, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 1398, 553, 540, 1277, 541, 330, 1399,
	555, 556, 557, 558, 1301, 1351, 559, 1365, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 1400, 572, 1401, 1380, 573,
	574, 1287, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 1381, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 1361, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 1402,
	635, 636, 637, 638, 639, 1288, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 1344, 666, 791, 667, 647, 648, 668, 669, 1403,
	670, 671, 672, 673, 674, 675, 676, 1359, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 1406, 687, 688, 689, 690, 1382, 694, 695,
	696, 697, 0, 698, 699, 1274, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	1371, 1372, 1373, 1374, 0, 720, 0, 709, 711, 712,
	713, 714, 1383, 715, 1384, 1299, 716, 717, 718, 719,
	710, 721, 722, 0, 1281, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 1345, 732, 0, 0, 733, 734,
	735, 801, 1368, 1405, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 0, 0, 0,
	0, 747, 748, 805, 749, 750, 751, 1278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 1271,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 1305,
	3023, 0, 3022, 1303, 1321, 1293, 1294, 1295, 1291, 1292,
	1304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 334, 333, 335, 336, 337, 338, 0,
	339, 340, 0, 0, 0, 0, 0, 1347, 1309, 0,
	0, 0, 341, 0, 342, 343, 344, 1387, 345, 346,
	347, 348, 349, 350, 351, 753, 1360, 0, 352, 1367,
	353, 1366, 0, 1377, 354, 355, 356, 357, 358, 359,
	360, 1311, 1346, 1275, 361, 1407, 1408, 760, 0, 362,
	363, 1353, 0, 1334, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 1388, 389, 390, 391, 1337,
	1335, 1336, 1343, 1339, 1338, 1342, 392, 393, 394, 395,
	396, 1370, 397, 399, 1364, 1363, 1280, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 1355, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 1286, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 1378,
	1379, 433, 434, 1300, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 1362, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 1389, 444, 445, 446,
	1375, 1376, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 1385, 0, 1310, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 1348, 1349, 1352, 560, 1391,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 1290, 327, 329,
	1390, 775, 477, 561, 478, 1357, 1358, 0, 1316, 0,
	479, 480, 482, 1392, 1350, 1393, 481, 483, 484, 1394,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 1386, 496, 1395,
	498, 499, 1396, 0, 500, 501, 502, 503, 504, 505,
	508, 1341, 1340, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 1397, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 1398, 553, 540, 1277, 541, 330, 1399, 555, 556,
	557, 558, 1301, 1351, 559, 1365, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 1400, 572, 1401, 1380, 573, 574, 1287,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 1381, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 1361,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 1402, 635, 636,
	637, 638, 639, 1288, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 1344,
	666, 791, 667, 647, 648, 668, 669, 1403, 670, 671,
	672, 673, 674, 675, 676, 1359, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	1406, 687, 688, 689, 690, 1382, 694, 695, 696, 697,
	0, 698, 699, 1274, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 1371, 1372,
	1373, 1374, 0, 720, 0, 709, 711, 712, 713, 714,
	1383, 715, 1384, 1299, 716, 717, 718, 719, 710, 721,
	722, 0, 1281, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 1345, 732, 0, 0, 733, 734, 735, 801,
	1368, 1405, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 0, 0, 0, 0, 747,
	748, 805, 749, 750, 751, 1278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 0, 0, 0, 0, 0, 1271, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 1305, 3020, 0,
	3019, 1303, 1321, 1293, 1294, 1295, 1291, 1292, 1304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 1347, 1309, 0, 0, 0,
	341, 0, 342, 343, 344, 1387, 345, 346, 347, 348,
	349, 350, 351, 753, 1360, 0, 352, 1367, 353, 1366,
	0, 1377, 354, 355, 356, 357, 358, 359, 360, 1311,
	1346, 1275, 361, 1407, 1408, 760, 0, 362, 363, 1353,
	0, 1334, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 1388, 389, 390, 391, 1337, 1335, 1336,
	1343, 1339, 1338, 1342, 392, 393, 394, 395, 396, 1370,
	397, 399, 1364, 1363, 1280, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 1355, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 1286, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 1378, 1379, 433,
	434, 1300, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 1362, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 1389, 444, 445, 446, 1375, 1376,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 1385, 0, 1310, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 1348, 1349, 1352, 560, 1391, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 1290, 327, 329, 1390, 775,
	477, 561, 478, 1357, 1358, 0, 1316, 0, 479, 480,
	482, 1392, 1350, 1393, 481, 483, 484, 1394, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 1386, 496, 1395, 498, 499,
	1396, 0, 500, 501, 502, 503, 504, 505, 508, 1341,
	1340, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 1397, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 1398,
	553, 540, 1277, 541, 330, 1399, 555, 556, 557, 558,
	1301, 1351, 559, 1365, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 1400, 572, 1401, 1380, 573, 574, 1287, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 1381,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 1361, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 1402, 635, 636, 637, 638,
	639, 1288, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 1344, 666, 791,
	667, 647, 648, 668, 669, 1403, 670, 671, 672, 673,
	674, 675, 676, 1359, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 1406, 687,
	688, 689, 690, 1382, 694, 695, 696, 697, 0, 698,
	699, 1274, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 1371, 1372, 1373, 1374,
	0, 720, 0, 709, 711, 712, 713, 714, 1383, 715,
	1384, 1299, 716, 717, 718, 719, 710, 721, 722, 0,
	1281, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	1345, 732, 0, 0, 733, 734, 735, 801, 1368, 1405,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 0, 0, 0, 0, 747, 748, 805,
	749, 750, 751, 1278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1273, 0,
	0, 0, 0, 0, 0, 1271, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 3017, 0, 3016, 1303,
	1321, 1293, 1294, 1295, 1291, 1292, 1304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 0, 339, 340, 0, 0,
	0, 0, 0, 1347, 1309, 0, 0, 0, 341, 0,
	342, 343, 344, 1387, 345, 346, 347, 348, 349, 350,
	351, 753, 1360, 0, 352, 1367, 353, 1366, 0, 1377,
	354, 355, 356, 357, 358, 359, 360, 1311, 1346, 1275,
	361, 1407, 1408, 760, 0, 362, 363, 1353, 0, 1334,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 1388, 389, 390, 391, 1337, 1335, 1336, 1343, 1339,
	1338, 1342, 392, 393, 394, 395, 396, 1370, 397, 399,
	1364, 1363, 1280, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 1355,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 1286, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 1378, 1379, 433, 434, 1300,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 1362,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 1389, 444, 445, 446, 1375, 1376, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 1385,
	0, 1310, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 1348, 1349, 1352, 560, 1391, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 1290, 327, 329, 1390, 775, 477, 561,
	478, 1357, 1358, 0, 1316, 0, 479, 480, 482, 1392,
	1350, 1393, 481, 483, 484, 1394, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 1386, 496, 1395, 498, 499, 1396, 0,
	500, 501, 502, 503, 504, 505, 508, 1341, 1340, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 1397,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 1398, 553, 540,
	1277, 541, 330, 1399, 555, 556, 557, 558, 1301, 1351,
	559, 1365, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 1400,
	572, 1401, 1380, 573, 574, 1287, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 1381, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 1361, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 1402, 635, 636, 637, 638, 639, 1288,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 1344, 666, 791, 667, 647,
	648, 668, 669, 1403, 670, 671, 672, 673, 674, 675,
	676, 1359, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 1406, 687, 688, 689,
	690, 1382, 694, 695, 696, 697, 0, 698, 699, 1274,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 1371, 1372, 1373, 1374, 0, 720,
	0, 709, 711, 712, 713, 714, 1383, 715, 1384, 1299,
	716, 717, 718, 719, 710, 721, 722, 0, 1281, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 1345, 732,
	0, 0, 733, 734, 735, 801, 1368, 1405, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 0, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 1278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 1271, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 1305, 3014, 0, 1685, 1303, 1321, 1293,
	1294, 1295, 1291, 1292, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 1347, 1309, 0, 0, 0, 341, 0, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	1360, 0, 352, 1367, 353, 1366, 0, 1377, 354, 355,
	356, 357, 358, 359, 360, 1311, 1346, 1275, 361, 1407,
	1408, 760, 0, 362, 363, 1353, 0, 1334, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 391, 1337, 1335, 1336, 1343, 1339, 1338, 1342,
	392, 393, 394, 395, 396, 1370, 397, 399, 1364, 1363,
	1280, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 1355, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	1286, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 1378, 1379, 433, 434, 1300, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 1362, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	1389, 444, 445, 446, 1375, 1376, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 1385, 0, 1310,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 1348,
	1349, 1352, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 1290, 327, 329, 1390, 775, 477, 561, 478, 1357,
	1358, 0, 1316, 0, 479, 480, 482, 1392, 1350, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 1386, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 1341, 1340, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 1277, 541,
	330, 1399, 555, 556, 557, 558, 1301, 1351, 559, 1365,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	1380, 573, 574, 1287, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 1381, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 1361, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 1288, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 1344, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 1359,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 1406, 687, 688, 689, 690, 1382,
	694, 695, 696, 697, 0, 698, 699, 1274, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 1371, 1372, 1373, 1374, 0, 720, 0, 709,
	711, 712, 713, 714, 1383, 715, 1384, 1299, 716, 717,
	718, 719, 710, 721, 722, 0, 1281, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 1345, 732, 0, 0,
	733, 734, 735, 801, 1368, 1405, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 1684,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 1278,
	0, 0, 0, 0, 1267, 0, 1321, 1293, 1294, 1295,
	1291, 1292, 1304, 0, 1273, 0, 0, 0, 0, 0,
	0, 1271, 1272, 331, 332, 334, 333, 335, 336, 337,
	338, 1305, 339, 340, 0, 1303, 0, 0, 0, 1347,
	1309, 0, 0, 0, 341, 0, 342, 343, 344, 1387,
	345, 346, 347, 348, 349, 350, 351, 753, 1360, 0,
	352, 1367, 353, 1366, 0, 1377, 354, 355, 356, 357,
	358, 359, 360, 1311, 1346, 1275, 361, 1407, 1408, 760,
	0, 362, 363, 1353, 0, 1334, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 1388, 389, 390,
	391, 1337, 1335, 1336, 1343, 1339, 1338, 1342, 392, 393,
	394, 395, 396, 1370, 397, 399, 1364, 1363, 1280, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 1355, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 1286, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 1378, 1379, 433, 434, 1300, 326, 0, 0, 0,
	0, 0, 435, 436, 437, 1362, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 1389, 444,
	445, 446, 1375, 1376, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 1385, 0, 1310, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 1348, 1349, 1352,
	560, 1391, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 1290,
	327, 329, 1390, 775, 477, 561, 478, 1357, 1358, 0,
	1316, 0, 479, 480, 482, 1392, 1350, 1393, 481, 483,
	484, 1394, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 1386,
	496, 1395, 498, 499, 1396, 0, 500, 501, 502, 503,
	504, 505, 508, 1341, 1340, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 1397, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 1398, 553, 540, 1277, 541, 330, 1399,
	555, 556, 557, 558, 1301, 1351, 559, 1365, 562, 563,
	0, 0, 564, 0, 565, 1282, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 1400, 572, 1401, 1380, 573,
	574, 1287, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 1381, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 1361, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 1402,
	635, 636, 637, 638, 639, 1288, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 1344, 666, 791, 667, 647, 648, 668, 669, 1403,
	670, 671, 672, 673, 674, 675, 676, 1359, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 1406, 687, 688, 689, 690, 1382, 694, 695,
	696, 697, 0, 698, 699, 1274, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	1371, 1372, 1373, 1374, 0, 720, 0, 709, 711, 712,
	713, 714, 1383, 715, 1384, 1299, 716, 717, 718, 719,
	710, 721, 722, 0, 1281, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 1345, 732, 0, 0, 733, 734,
	735, 801, 1368, 1405, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 0, 0, 0,
	0, 747, 748, 805, 749, 750, 751, 1278, 0, 0,
	0, 0, 0, 0, 1321, 1293, 1294, 1295, 1291, 1292,
	1304, 0, 1273, 0, 0, 0, 0, 0, 0, 1271,
	1272, 331, 332, 334, 333, 335, 336, 337, 338, 1305,
	339, 340, 0, 1303, 0, 0, 0, 1347, 1309, 0,
	0, 0, 341, 0, 342, 343, 344, 1387, 345, 346,
	347, 348, 349, 350, 351, 753, 1360, 0, 352, 1367,
	353, 1366, 0, 1377, 354, 355, 356, 357, 358, 359,
	360, 1311, 1346, 1275, 361, 1407, 1408, 760, 0, 362,
	363, 1353, 0, 1334, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 5489, 384,
	385, 0, 386, 387, 388, 1388, 389, 390, 391, 1337,
	1335, 1336, 1343, 1339, 1338, 1342, 392, 393, 394, 395,
	396, 1370, 397, 399, 1364, 1363, 1280, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 1355, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 1286, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 1378,
	1379, 433, 434, 1300, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 1362, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 1389, 444, 445, 446,
	1375, 1376, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 1385, 0, 1310, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 1348, 1349, 1352, 560, 1391,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 1290, 327, 329,
	1390, 775, 477, 561, 478, 1357, 1358, 0, 1316, 0,
	479, 480, 482, 1392, 1350, 1393, 481, 483, 484, 1394,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 1386, 496, 1395,
	498, 499, 1396, 0, 500, 501, 502, 503, 504, 505,
	508, 1341, 1340, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 1397, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 1398, 553, 540, 1277, 541, 330, 1399, 555, 556,
	557, 558, 1301, 1351, 559, 1365, 562, 563, 0, 0,
	564, 0, 565, 1282, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 1400, 572, 1401, 1380, 573, 574, 1287,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 1381, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 1361,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 1402, 635, 636,
	637, 638, 639, 1288, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 1344,
	666, 791, 667, 647, 648, 668, 669, 1403, 670, 671,
	672, 673, 674, 675, 676, 1359, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	1406, 687, 688, 689, 690, 1382, 694, 695, 696, 697,
	0, 698, 699, 1274, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 1371, 1372,
	1373, 1374, 0, 720, 0, 709, 711, 712, 713, 714,
	1383, 715, 1384, 1299, 716, 717, 718, 719, 710, 721,
	722, 0, 1281, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 1345, 732, 0, 0, 733, 734, 735, 801,
	1368, 1405, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 0, 0, 0, 0, 747,
	748, 805, 749, 750, 751, 1278, 0, 0, 0, 0,
	0, 0, 1321, 1293, 1294, 1295, 1291, 1292, 1304, 0,
	1273, 0, 0, 0, 0, 0, 0, 1271, 1272, 331,
	332, 334, 333, 335, 336, 337, 338, 1305, 339, 340,
	0, 1303, 0, 0, 0, 1347, 1309, 0, 0, 0,
	341, 0, 342, 343, 344, 1387, 345, 346, 347, 348,
	349, 350, 351, 753, 1360, 0, 352, 1367, 353, 1366,
	0, 1377, 354, 355, 356, 357, 358, 359, 360, 1311,
	1346, 1275, 361, 1407, 1408, 760, 0, 362, 363, 1353,
	0, 1334, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 1388, 389, 390, 391, 1337, 1335, 1336,
	1343, 1339, 1338, 1342, 392, 393, 394, 395, 396, 1370,
	397, 399, 1364, 1363, 1280, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 1355, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 1286, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 1378, 1379, 433,
	434, 1300, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 1362, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 1389, 444, 445, 446, 1375, 1376,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 1385, 0, 1310, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 1348, 1349, 1352, 560, 1391, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 1290, 327, 2853, 1390, 775,
	477, 561, 478, 1357, 1358, 0, 1316, 0, 479, 480,
	482, 1392, 1350, 1393, 481, 483, 484, 1394, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 1386, 496, 1395, 498, 499,
	1396, 0, 500, 501, 502, 503, 504, 505, 508, 1341,
	1340, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 1397, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 1398,
	553, 540, 1277, 541, 330, 1399, 555, 556, 557, 558,
	1301, 1351, 559, 1365, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 1400, 572, 1401, 1380, 573, 574, 1287, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 1381,
	593, 788, 594, 595, 2852, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 1361, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 1402, 635, 636, 637, 638,
	639, 1288, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 1344, 666, 791,
	667, 647, 648, 668, 669, 1403, 670, 671, 672, 673,
	674, 675, 676, 1359, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 1406, 687,
	688, 689, 690, 1382, 694, 695, 696, 697, 0, 698,
	699, 1274, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 1371, 1372, 1373, 1374,
	0, 720, 0, 709, 711, 712, 713, 714, 1383, 715,
	1384, 1299, 716, 717, 718, 719, 710, 721, 722, 0,
	1281, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	1345, 732, 0, 0, 733, 734, 735, 801, 1368, 1405,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 0, 0, 0, 0, 747, 748, 805,
	749, 750, 751, 1278, 0, 0, 0, 0, 0, 0,
	1321, 1293, 1294, 1295, 1291, 1292, 1304, 0, 1273, 0,
	0, 0, 0, 0, 0, 1271, 1272, 331, 332, 334,
	333, 335, 336, 337, 338, 1305, 339, 340, 0, 1303,
	0, 0, 0, 1347, 1309, 0, 0, 0, 341, 0,
	342, 343, 344, 1387, 345, 346, 347, 348, 349, 350,
	351, 753, 1360, 0, 352, 1367, 353, 1366, 0, 1377,
	354, 355, 356, 357, 358, 359, 360, 1311, 1346, 1275,
	361, 1407, 1408, 760, 0, 362, 363, 1353, 0, 1334,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 5199, 384, 385, 0, 386, 387,
	388, 1388, 389, 390, 391, 1337, 1335, 1336, 1343, 1339,
	1338, 1342, 392, 393, 394, 395, 396, 1370, 397, 399,
	1364, 1363, 1280, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 1355,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 1286, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 1378, 1379, 433, 434, 1300,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 1362,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 1389, 444, 445, 446, 1375, 1376, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 1385,
	0, 1310, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 1348, 1349, 1352, 560, 1391, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 1290, 327, 329, 1390, 775, 477, 561,
	478, 1357, 1358, 0, 1316, 0, 479, 480, 482, 1392,
	1350, 1393, 481, 483, 484, 1394, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 1386, 496, 1395, 498, 499, 1396, 0,
	500, 501, 502, 503, 504, 505, 508, 1341, 1340, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 1397,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 1398, 553, 540,
	1277, 541, 330, 1399, 555, 556, 557, 558, 1301, 1351,
	559, 1365, 562, 563, 0, 0, 564, 0, 565, 1282,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 1400,
	572, 1401, 1380, 573, 574, 1287, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 1381, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 1361, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 1402, 635, 636, 637, 638, 639, 1288,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 1344, 666, 791, 667, 647,
	648, 668, 669, 1403, 670, 671, 672, 673, 674, 675,
	676, 1359, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 1406, 687, 688, 689,
	690, 1382, 694, 695, 696, 697, 0, 698, 699, 1274,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 1371, 1372, 1373, 1374, 0, 720,
	0, 709, 711, 712, 713, 714, 1383, 715, 1384, 1299,
	716, 717, 718, 719, 710, 721, 722, 0, 1281, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 1345, 732,
	0, 0, 733, 734, 735, 801, 1368, 1405, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 0, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 1278, 0, 0, 0, 0, 0, 0, 1321, 1293,
	1294, 1295, 1291, 1292, 1304, 0, 1273, 0, 0, 0,
	0, 0, 0, 1271, 1272, 331, 332, 334, 333, 335,
	336, 337, 338, 1305, 339, 340, 0, 1303, 0, 0,
	0, 1347, 1309, 0, 0, 0, 341, 0, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	1360, 0, 352, 1367, 353, 1366, 0, 1377, 354, 355,
	356, 357, 358, 359, 360, 1311, 1346, 1275, 361, 1407,
	1408, 760, 0, 362, 363, 1353, 0, 1334, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 391, 1337, 1335, 1336, 1343, 1339, 1338, 1342,
	392, 393, 394, 395, 396, 1370, 397, 399, 1364, 1363,
	1280, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 1355, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	1286, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 1378, 1379, 433, 434, 1300, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 1362, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	1389, 444, 445, 446, 1375, 1376, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 1385, 0, 1310,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 1348,
	1349, 1352, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 1290, 327, 329, 1390, 775, 477, 561, 478, 1357,
	1358, 0, 1316, 0, 479, 480, 482, 1392, 1350, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 1386, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 1341, 1340, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 1277, 541,
	330, 1399, 555, 556, 557, 558, 1301, 1351, 559, 1365,
	562, 563, 0, 0, 564, 0, 565, 1282, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	1380, 573, 574, 1287, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 1381, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 1361, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 1288, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 1344, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 1359,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 1406, 687, 688, 689, 690, 1382,
	694, 695, 696, 697, 0, 698, 699, 1274, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 1371, 1372, 1373, 1374, 0, 720, 0, 709,
	711, 712, 713, 714, 1383, 715, 1384, 1299, 716, 717,
	718, 719, 710, 721, 722, 0, 1281, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 1345, 732, 0, 0,
	733, 734, 735, 801, 1368, 1405, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 0,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 1278,
	0, 0, 0, 0, 0, 0, 1321, 1293, 1294, 1295,
	1291, 1292, 1304, 0, 1273, 0, 0, 0, 0, 0,
	0, 1271, 1272, 331, 332, 334, 333, 335, 336, 337,
	338, 1305, 339, 340, 0, 1303, 0, 0, 0, 1347,
	1309, 0, 0, 0, 341, 0, 342, 343, 344, 1387,
	345, 346, 347, 348, 349, 350, 351, 753, 1360, 0,
	352, 1367, 353, 1366, 0, 1377, 354, 355, 356, 357,
	358, 359, 360, 1311, 1346, 1275, 361, 1407, 1408, 760,
	0, 362, 363, 1353, 0, 1334, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 1388, 389, 390,
	391, 1337, 1335, 1336, 1343, 1339, 1338, 1342, 392, 393,
	394, 395, 396, 1370, 397, 399, 1364, 1363, 1280, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 1355, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 1286, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 1378, 1379, 433, 434, 1300, 326, 0, 0, 0,
	0, 0, 435, 436, 437, 1362, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 1389, 444,
	445, 446, 1375, 1376, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 1385, 0, 1310, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 1348, 1349, 1352,
	560, 1391, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 1290,
	327, 329, 1390, 775, 477, 561, 478, 1357, 1358, 0,
	1316, 0, 479, 480, 482, 1392, 1350, 1393, 481, 483,
	484, 1394, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 1386,
	496, 1395, 498, 499, 1396, 0, 500, 501, 502, 503,
	504, 505, 508, 1341, 1340, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 1397, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 1398, 553, 540, 1277, 541, 4732, 1399,
	555, 556, 557, 558, 1301, 1351, 559, 1365, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 1400, 572, 1401, 1380, 573,
	574, 1287, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 1381, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 1361, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 1402,
	635, 636, 637, 638, 639, 1288, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 1344, 666, 791, 667, 647, 648, 668, 669, 1403,
	670, 671, 672, 673, 674, 675, 676, 1359, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 1406, 687, 688, 689, 690, 1382, 694, 695,
	696, 697, 0, 698, 699, 1274, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	1371, 1372, 1373, 1374, 0, 720, 0, 709, 711, 712,
	713, 714, 1383, 715, 1384, 1299, 716, 717, 718, 719,
	710, 721, 722, 0, 1281, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 1345, 732, 0, 0, 733, 734,
	735, 801, 1368, 1405, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 0, 0, 0,
	0, 747, 748, 805, 749, 750, 751, 1278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 1271,
	1272, 2224, 1321, 1293, 1294, 1295, 1291, 1292, 1304, 1305,
	0, 0, 0, 1303, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 1347, 1309, 0, 0, 0,
	341, 0, 342, 343, 344, 1387, 345, 346, 347, 348,
	349, 350, 351, 753, 1360, 0, 352, 1367, 353, 1366,
	0, 1377, 354, 355, 356, 357, 358, 359, 360, 1311,
	1346, 1275, 361, 1407, 1408, 760, 0, 362, 363, 1353,
	0, 1334, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 1388, 389, 390, 391, 1337, 1335, 1336,
	1343, 1339, 1338, 1342, 392, 393, 394, 395, 396, 1370,
	397, 399, 1364, 1363, 1280, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 1355, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 1286, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 1378, 1379, 433,
	434, 1300, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 1362, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 1389, 444, 445, 446, 1375, 1376,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 1385, 0, 1310, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 1348, 1349, 1352, 560, 1391, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 1290, 327, 329, 1390, 775,
	477, 561, 478, 1357, 1358, 0, 1316, 0, 479, 480,
	482, 1392, 1350, 1393, 481, 483, 484, 1394, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 1386, 496, 1395, 498, 499,
	1396, 0, 500, 501, 502, 503, 504, 505, 508, 1341,
	1340, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 1397, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 1398,
	553, 540, 1277, 541, 330, 1399, 555, 556, 557, 558,
	1301, 1351, 559, 1365, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 1400, 572, 1401, 1380, 573, 574, 1287, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 1381,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 1361, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 1402, 635, 636, 637, 638,
	639, 1288, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 1344, 666, 791,
	667, 647, 648, 668, 669, 1403, 670, 671, 672, 673,
	674, 675, 676, 1359, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 1406, 687,
	688, 689, 690, 1382, 694, 695, 696, 697, 0, 698,
	699, 1274, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 1371, 1372, 1373, 1374,
	0, 720, 0, 709, 711, 712, 713, 714, 1383, 715,
	1384, 1299, 716, 717, 718, 719, 710, 721, 722, 0,
	1281, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	1345, 732, 0, 0, 733, 734, 735, 801, 1368, 1405,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 0, 0, 0, 0, 747, 748, 805,
	749, 750, 751, 1278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1273, 0,
	0, 0, 0, 0, 0, 1271, 1272, 2224, 1321, 1293,
	1294, 1295, 1291, 1292, 1304, 1305, 0, 0, 0, 1303,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 1347, 1309, 0, 0, 0, 341, 0, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	1360, 0, 352, 1367, 353, 1366, 0, 1377, 354, 355,
	356, 357, 358, 359, 360, 1311, 1346, 1275, 361, 1407,
	1408, 760, 0, 362, 363, 1353, 0, 1334, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 391, 1337, 1335, 1336, 1343, 1339, 1338, 1342,
	392, 393, 394, 395, 396, 1370, 397, 399, 1364, 1363,
	1280, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 1355, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	1286, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 1378, 1379, 433, 434, 1300, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 1362, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	1389, 444, 445, 446, 1375, 1376, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 1385, 0, 1310,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 1348,
	1349, 1352, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 1290, 327, 329, 1390, 775, 477, 561, 478, 1357,
	1358, 0, 1316, 0, 479, 480, 482, 1392, 1350, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 1386, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 1341, 1340, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 1277, 541,
	330, 1399, 555, 556, 557, 558, 1301, 1351, 559, 1365,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	1380, 573, 574, 1287, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 1381, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 1361, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 1288, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 1344, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 1359,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 1406, 687, 688, 689, 690, 1382,
	694, 695, 696, 697, 0, 698, 699, 1274, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 1371, 1372, 1373, 1374, 0, 720, 0, 709,
	711, 712, 713, 714, 1383, 715, 1384, 1299, 716, 717,
	718, 719, 710, 721, 722, 0, 1281, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 1345, 732, 0, 0,
	733, 734, 735, 801, 1368, 1405, 4345, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 0,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 1278,
	0, 0, 0, 0, 0, 0, 1321, 1293, 1294, 1295,
	1291, 1292, 1304, 0, 1273, 0, 0, 0, 0, 0,
	0, 1271, 1272, 331, 332, 334, 333, 335, 336, 337,
	338, 1305, 339, 340, 0, 1303, 0, 0, 0, 1347,
	1309, 0, 0, 0, 341, 0, 342, 343, 344, 1387,
	345, 346, 347, 348, 349, 350, 351, 753, 1360, 0,
	352, 1367, 353, 1366, 0, 1377, 354, 355, 356, 357,
	358, 359, 360, 1311, 1346, 1275, 361, 1407, 1408, 760,
	0, 362, 363, 1353, 0, 1334, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 1388, 389, 390,
	391, 1337, 1335, 1336, 1343, 1339, 1338, 1342, 392, 393,
	394, 395, 396, 1370, 397, 399, 1364, 1363, 1280, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 1355, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 1286, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 1378, 1379, 433, 434, 1300, 326, 0, 0, 0,
	0, 0, 435, 436, 437, 1362, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 3118, 1389, 444,
	445, 446, 1375, 1376, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 1385, 0, 1310, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 1348, 1349, 1352,
	560, 1391, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 1290,
	327, 329, 1390, 775, 477, 561, 478, 1357, 1358, 0,
	1316, 0, 479, 480, 482, 1392, 1350, 1393, 481, 483,
	484, 1394, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 1386,
	496, 1395, 498, 499, 1396, 0, 500, 501, 502, 503,
	504, 505, 508, 1341, 1340, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 1397, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 1398, 553, 540, 1277, 541, 330, 1399,
	555, 556, 557, 558, 1301, 1351, 559, 1365, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 1400, 572, 1401, 1380, 573,
	574, 1287, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 1381, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 1361, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 1402,
	635, 636, 637, 638, 639, 1288, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 1344, 666, 791, 667, 647, 648, 668, 669, 1403,
	670, 671, 672, 673, 674, 675, 676, 1359, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 1406, 687, 688, 689, 690, 1382, 694, 695,
	696, 697, 0, 698, 699, 1274, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	1371, 1372, 1373, 1374, 0, 720, 0, 709, 711, 712,
	713, 714, 1383, 715, 1384, 1299, 716, 717, 718, 719,
	710, 721, 722, 0, 1281, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 1345, 732, 0, 0, 733, 734,
	735, 801, 1368, 1405, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 0, 0, 0,
	0, 747, 748, 805, 749, 750, 751, 1278, 0, 0,
	0, 0, 0, 0, 1321, 1293, 1294, 1295, 1291, 1292,
	1304, 0, 1273, 0, 0, 0, 0, 0, 0, 1271,
	1272, 331, 332, 334, 333, 335, 336, 337, 338, 1305,
	339, 340, 0, 1303, 0, 0, 0, 1347, 1309, 0,
	0, 0, 341, 0, 342, 343, 344, 1387, 345, 346,
	347, 348, 349, 350, 351, 753, 1360, 0, 352, 1367,
	353, 1366, 0, 1377, 354, 355, 356, 357, 358, 359,
	360, 1311, 1346, 1275, 361, 1407, 1408, 760, 0, 362,
	363, 1353, 0, 1334, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 1388, 389, 390, 391, 1337,
	1335, 1336, 1343, 1339, 1338, 1342, 392, 393, 394, 395,
	396, 1370, 397, 399, 1364, 1363, 1280, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 1355, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 1286, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 1378,
	1379, 433, 434, 1300, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 1362, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 1389, 444, 445, 446,
	1375, 1376, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 1385, 0, 1310, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 1348, 1349, 1352, 560, 1391,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 1290, 327, 329,
	1390, 775, 477, 561, 478, 1357, 1358, 0, 1316, 0,
	479, 480, 482, 1392, 1350, 1393, 481, 483, 484, 1394,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 1386, 496, 1395,
	498, 499, 1396, 0, 500, 501, 502, 503, 504, 505,
	508, 1341, 1340, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 1397, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 1398, 553, 540, 1277, 541, 330, 1399, 555, 556,
	557, 558, 1301, 1351, 559, 1365, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 1400, 572, 1401, 1380, 573, 574, 1287,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 1381, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 1361,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 1402, 635, 636,
	637, 638, 639, 1288, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 1344,
	666, 791, 667, 647, 648, 668, 669, 1403, 670, 671,
	672, 673, 674, 675, 676, 1359, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	1406, 687, 688, 689, 690, 1382, 694, 695, 696, 697,
	0, 698, 699, 1274, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 1371, 1372,
	1373, 1374, 0, 720, 0, 709, 711, 712, 713, 714,
	1383, 715, 1384, 1299, 716, 717, 718, 719, 710, 721,
	722, 0, 1281, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 1345, 732, 0, 0, 733, 734, 735, 801,
	1368, 1405, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 0, 0, 0, 0, 747,
	748, 805, 749, 750, 751, 1278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 0, 0, 0, 0, 0, 1271, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 1305, 2148, 0,
	3123, 1303, 1321, 1293, 1294, 1295, 1291, 1292, 1304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 1347, 1309, 0, 0, 0,
	341, 0, 342, 343, 344, 1387, 345, 346, 347, 348,
	349, 350, 351, 753, 1360, 0, 352, 1367, 353, 1366,
	0, 1377, 354, 355, 356, 357, 358, 359, 360, 1311,
	1346, 1275, 361, 1407, 1408, 760, 0, 362, 363, 1353,
	0, 1334, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 1388, 389, 390, 391, 1337, 1335, 1336,
	1343, 1339, 1338, 1342, 392, 393, 394, 395, 396, 1370,
	397, 399, 1364, 1363, 1280, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 1355, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 1286, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 1378, 1379, 433,
	434, 1300, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 1362, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 1389, 444, 445, 446, 1375, 1376,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 1385, 0, 1310, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 1348, 1349, 1352, 560, 1391, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 1290, 327, 329, 1390, 775,
	477, 561, 478, 1357, 1358, 0, 1316, 0, 479, 480,
	482, 1392, 1350, 1393, 481, 483, 484, 1394, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 1386, 496, 1395, 498, 499,
	1396, 0, 500, 501, 502, 503, 504, 505, 508, 1341,
	1340, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 1397, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 1398,
	553, 540, 1277, 541, 330, 1399, 555, 556, 557, 558,
	1301, 1351, 559, 1365, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 1400, 572, 1401, 1380, 573, 574, 1287, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 1381,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 1361, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 1402, 635, 636, 637, 638,
	639, 1288, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 1344, 666, 791,
	667, 647, 648, 668, 669, 1403, 670, 671, 672, 673,
	674, 675, 676, 1359, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 1406, 687,
	688, 689, 690, 1382, 694, 695, 696, 697, 0, 698,
	699, 1274, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 1371, 1372, 1373, 1374,
	0, 720, 0, 709, 711, 712, 713, 714, 1383, 715,
	1384, 1299, 716, 717, 718, 719, 710, 721, 722, 0,
	1281, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	1345, 732, 0, 0, 733, 734, 735, 801, 1368, 1405,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 0, 0, 0, 0, 747, 748, 805,
	749, 750, 751, 1278, 0, 0, 0, 0, 3121, 0,
	1321, 1293, 1294, 1295, 1291, 1292, 1304, 0, 1273, 0,
	0, 0, 0, 0, 0, 1271, 1272, 331, 332, 334,
	333, 335, 336, 337, 338, 1305, 339, 340, 0, 1303,
	0, 0, 0, 1347, 1309, 0, 0, 0, 341, 0,
	342, 343, 344, 1387, 345, 346, 347, 348, 349, 350,
	351, 753, 1360, 0, 352, 1367, 353, 1366, 0, 1377,
	354, 355, 356, 357, 358, 359, 360, 1311, 1346, 1275,
	361, 1407, 1408, 760, 0, 362, 363, 1353, 0, 1334,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 1388, 389, 390, 391, 1337, 1335, 1336, 1343, 1339,
	1338, 1342, 392, 393, 394, 395, 396, 1370, 397, 399,
	1364, 1363, 1280, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 1355,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 1286, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 1378, 1379, 433, 434, 1300,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 1362,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 1389, 444, 445, 446, 1375, 1376, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 1385,
	0, 1310, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 1348, 1349, 1352, 560, 1391, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 1290, 327, 329, 1390, 775, 477, 561,
	478, 1357, 1358, 0, 1316, 0, 479, 480, 482, 1392,
	1350, 1393, 481, 483, 484, 1394, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 1386, 496, 1395, 498, 499, 1396, 0,
	500, 501, 502, 503, 504, 505, 508, 1341, 1340, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 1397,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 1398, 553, 540,
	1277, 541, 330, 1399, 555, 556, 557, 558, 1301, 1351,
	559, 1365, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 1400,
	572, 1401, 1380, 573, 574, 1287, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 1381, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 1361, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 1402, 635, 636, 637, 638, 639, 1288,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 1344, 666, 791, 667, 647,
	648, 668, 669, 1403, 670, 671, 672, 673, 674, 675,
	676, 1359, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 1406, 687, 688, 689,
	690, 1382, 694, 695, 696, 697, 0, 698, 699, 1274,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 1371, 1372, 1373, 1374, 0, 720,
	0, 709, 711, 712, 713, 714, 1383, 715, 1384, 1299,
	716, 717, 718, 719, 710, 721, 722, 0, 1281, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 1345, 732,
	0, 0, 733, 734, 735, 801, 1368, 1405, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 0, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 1278, 0, 0, 0, 0, 3109, 0, 1321, 1293,
	1294, 1295, 1291, 1292, 1304, 0, 1273, 0, 0, 0,
	0, 0, 0, 1271, 1272, 331, 332, 334, 333, 335,
	336, 337, 338, 1305, 339, 340, 0, 1303, 0, 0,
	0, 1347, 1309, 0, 0, 0, 341, 0, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	1360, 0, 352, 1367, 353, 1366, 0, 1377, 354, 355,
	356, 357, 358, 359, 360, 1311, 1346, 1275, 361, 1407,
	1408, 760, 0, 362, 363, 1353, 0, 1334, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 391, 1337, 1335, 1336, 1343, 1339, 1338, 1342,
	392, 393, 394, 395, 396, 1370, 397, 399, 1364, 1363,
	1280, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 1355, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	1286, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 1378, 1379, 433, 434, 1300, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 1362, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	1389, 444, 445, 446, 1375, 1376, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 1385, 0, 1310,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 1348,
	1349, 1352, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 1290, 327, 329, 1390, 775, 477, 561, 478, 1357,
	1358, 0, 1316, 0, 479, 480, 482, 1392, 1350, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 1386, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 1341, 1340, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 1277, 541,
	330, 1399, 555, 556, 557, 558, 1301, 1351, 559, 1365,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	1380, 573, 574, 1287, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 1381, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 1361, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 1288, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 1344, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 1359,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 1406, 687, 688, 689, 690, 1382,
	694, 695, 696, 697, 0, 698, 699, 1274, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 1371, 1372, 1373, 1374, 0, 720, 0, 709,
	711, 712, 713, 714, 1383, 715, 1384, 1299, 716, 717,
	718, 719, 710, 721, 722, 0, 1281, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 1345, 732, 0, 0,
	733, 734, 735, 801, 1368, 1405, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 0,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 1278,
	0, 0, 0, 0, 3098, 0, 1321, 1293, 1294, 1295,
	1291, 1292, 1304, 0, 1273, 0, 0, 0, 0, 0,
	0, 1271, 1272, 331, 332, 334, 333, 335, 336, 337,
	338, 1305, 339, 340, 0, 1303, 0, 0, 0, 1347,
	1309, 0, 0, 0, 341, 0, 342, 343, 344, 1387,
	345, 346, 347, 348, 349, 350, 351, 753, 1360, 0,
	352, 1367, 353, 1366, 0, 1377, 354, 355, 356, 357,
	358, 359, 360, 1311, 1346, 1275, 361, 1407, 1408, 760,
	0, 362, 363, 1353, 0, 1334, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 1388, 389, 390,
	391, 1337, 1335, 1336, 1343, 1339, 1338, 1342, 392, 393,
	394, 395, 396, 1370, 397, 399, 1364, 1363, 1280, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 1355, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 1286, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 1378, 1379, 433, 434, 1300, 326, 0, 0, 0,
	0, 0, 435, 436, 437, 1362, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 1389, 444,
	445, 446, 1375, 1376, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 1385, 0, 1310, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 1348, 1349, 1352,
	560, 1391, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 1290,
	327, 329, 1390, 775, 477, 561, 478, 1357, 1358, 0,
	1316, 0, 479, 480, 482, 1392, 1350, 1393, 481, 483,
	484, 1394, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 1386,
	496, 1395, 498, 499, 1396, 0, 500, 501, 502, 503,
	504, 505, 508, 1341, 1340, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 1397, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 1398, 553, 540, 1277, 541, 330, 1399,
	555, 556, 557, 558, 1301, 1351, 559, 1365, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 1400, 572, 1401, 1380, 573,
	574, 1287, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 1381, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 1361, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 1402,
	635, 636, 637, 638, 639, 1288, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 1344, 666, 791, 667, 647, 648, 668, 669, 1403,
	670, 671, 672, 673, 674, 675, 676, 1359, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 1406, 687, 688, 689, 690, 1382, 694, 695,
	696, 697, 0, 698, 699, 1274, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	1371, 1372, 1373, 1374, 0, 720, 0, 709, 711, 712,
	713, 714, 1383, 715, 1384, 1299, 716, 717, 718, 719,
	710, 721, 722, 0, 1281, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 1345, 732, 0, 0, 733, 734,
	735, 801, 1368, 1405, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 0, 0, 0,
	0, 747, 748, 805, 749, 750, 751, 1278, 0, 0,
	0, 0, 3096, 0, 3087, 3094, 1294, 1295, 1291, 1292,
	1304, 0, 1273, 0, 0, 0, 0, 0, 0, 1271,
	1272, 331, 332, 334, 333, 335, 336, 337, 338, 1305,
	339, 340, 0, 1303, 0, 0, 0, 1347, 1309, 0,
	0, 0, 341, 0, 342, 343, 344, 1387, 345, 346,
	347, 348, 349, 350, 351, 753, 1360, 0, 352, 1367,
	353, 1366, 0, 1377, 354, 355, 356, 357, 358, 359,
	360, 1311, 1346, 1275, 361, 1407, 1408, 760, 0, 362,
	363, 1353, 0, 1334, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 1388, 389, 390, 391, 1337,
	1335, 1336, 1343, 1339, 1338, 1342, 392, 393, 394, 395,
	396, 1370, 3090, 399, 1364, 1363, 1280, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 1355, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 1286, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 1378,
	1379, 433, 434, 1300, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 1362, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 1389, 444, 445, 446,
	1375, 1376, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 1385, 0, 1310, 457, 0, 458, 459,
	460, 461, 462, 3091, 464, 1348, 1349, 1352, 560, 1391,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 1290, 327, 329,
	1390, 775, 477, 561, 478, 1357, 1358, 0, 1316, 0,
	479, 480, 482, 1392, 1350, 1393, 481, 483, 484, 1394,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 1386, 496, 1395,
	498, 499, 1396, 0, 500, 501, 502, 503, 504, 505,
	508, 1341, 1340, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 3092, 518, 3089, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 1397, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 1398, 553, 540, 1277, 541, 330, 1399, 555, 556,
	557, 558, 1301, 1351, 559, 1365, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 1400, 572, 1401, 1380, 573, 574, 1287,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 1381, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 1361,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 1402, 635, 636,
	637, 638, 639, 1288, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 3093,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 1344,
	666, 791, 667, 647, 648, 668, 669, 1403, 670, 671,
	672, 673, 674, 675, 676, 1359, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	1406, 687, 688, 689, 690, 1382, 694, 695, 696, 697,
	0, 698, 699, 1274, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 1371, 1372,
	1373, 1374, 0, 720, 0, 709, 711, 712, 713, 714,
	1383, 715, 1384, 1299, 716, 717, 718, 719, 710, 721,
	722, 0, 1281, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 1345, 732, 0, 0, 733, 734, 735, 801,
	1368, 1405, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 0, 0, 0, 0, 747,
	748, 805, 749, 3088, 751, 1278, 0, 0, 0, 0,
	3084, 0, 3087, 3094, 1294, 1295, 1291, 1292, 1304, 0,
	1273, 0, 0, 0, 0, 0, 0, 1271, 1272, 331,
	332, 334, 333, 335, 336, 337, 338, 1305, 339, 340,
	0, 1303, 0, 0, 0, 1347, 1309, 0, 0, 0,
	341, 0, 342, 343, 344, 1387, 345, 346, 347, 348,
	349, 350, 351, 753, 1360, 0, 352, 1367, 353, 1366,
	0, 1377, 354, 355, 356, 357, 358, 359, 360, 1311,
	1346, 1275, 361, 1407, 1408, 760, 0, 362, 363, 1353,
	0, 1334, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 1388, 389, 390, 391, 1337, 1335, 1336,
	1343, 1339, 1338, 1342, 392, 393, 394, 395, 396, 1370,
	3090, 399, 1364, 1363, 1280, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 1355, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 1286, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 1378, 1379, 433,
	434, 1300, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 1362, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 1389, 444, 445, 446, 1375, 1376,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 1385, 0, 1310, 457, 0, 458, 459, 460, 461,
	462, 3091, 464, 1348, 1349, 1352, 560, 1391, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 1290, 327, 329, 1390, 775,
	477, 561, 478, 1357, 1358, 0, 1316, 0, 479, 480,
	482, 1392, 1350, 1393, 481, 483, 484, 1394, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 1386, 496, 1395, 498, 499,
	1396, 0, 500, 501, 502, 503, 504, 505, 508, 1341,
	1340, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 3092, 518, 3089, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 1397, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 1398,
	553, 540, 1277, 541, 330, 1399, 555, 556, 557, 558,
	1301, 1351, 559, 1365, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 1400, 572, 1401, 1380, 573, 574, 1287, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 1381,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 1361, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 1402, 635, 636, 637, 638,
	639, 1288, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 3093, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 1344, 666, 791,
	667, 647, 648, 668, 669, 1403, 670, 671, 672, 673,
	674, 675, 676, 1359, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 1406, 687,
	688, 689, 690, 1382, 694, 695, 696, 697, 0, 698,
	699, 1274, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 1371, 1372, 1373, 1374,
	0, 720, 0, 709, 711, 712, 713, 714, 1383, 715,
	1384, 1299, 716, 717, 718, 719, 710, 721, 722, 0,
	1281, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	1345, 732, 0, 0, 733, 734, 735, 801, 1368, 1405,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 0, 0, 0, 0, 747, 748, 805,
	749, 3088, 751, 1278, 0, 0, 0, 0, 0, 0,
	1321, 1293, 1294, 1295, 1291, 1292, 1304, 0, 1273, 0,
	0, 0, 0, 0, 0, 1271, 1272, 331, 332, 334,
	333, 335, 336, 337, 338, 1305, 339, 340, 0, 1303,
	0, 0, 0, 1347, 1309, 0, 0, 0, 341, 0,
	342, 343, 344, 1387, 345, 346, 347, 348, 349, 350,
	351, 753, 1360, 0, 352, 1367, 353, 1366, 0, 1377,
	354, 355, 356, 357, 358, 359, 360, 1311, 1346, 1275,
	361, 1407, 1408, 760, 0, 362, 363, 1353, 0, 1334,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 1388, 389, 390, 391, 1337, 1335, 1336, 1343, 1339,
	1338, 1342, 392, 393, 394, 395, 396, 1370, 397, 399,
	1364, 1363, 1280, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 1355,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 1286, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 1378, 1379, 433, 434, 1300,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 1362,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 1389, 444, 445, 446, 1375, 1376, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 1385,
	0, 1310, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 1348, 1349, 1352, 560, 1391, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 1290, 327, 329, 1390, 775, 477, 561,
	478, 1357, 1358, 0, 1316, 0, 479, 480, 482, 1392,
	1350, 1393, 481, 483, 484, 1394, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 1386, 496, 1395, 498, 499, 1396, 0,
	500, 501, 502, 503, 504, 505, 508, 1341, 1340, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 1397,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 1398, 553, 540,
	1277, 541, 330, 1399, 555, 556, 557, 558, 1301, 1351,
	559, 1365, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 1400,
	572, 1401, 1380, 573, 574, 1287, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 1381, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 1361, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 1402, 635, 636, 637, 638, 639, 1288,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 1344, 666, 791, 667, 647,
	648, 668, 669, 1403, 670, 671, 672, 673, 674, 675,
	676, 1359, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 1406, 687, 688, 689,
	690, 1382, 694, 695, 696, 697, 0, 698, 699, 1274,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 1371, 1372, 1373, 1374, 0, 720,
	0, 709, 711, 712, 713, 714, 1383, 715, 1384, 1299,
	716, 717, 718, 719, 710, 721, 722, 0, 1281, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 1345, 732,
	0, 0, 733, 734, 735, 801, 1368, 1405, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 0, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 1278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 1271, 1272, 0, 0, 0, 0, 0,
	0, 2156, 0, 1305, 0, 0, 0, 1303, 1321, 1293,
	1294, 1295, 1291, 1292, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 2832, 339, 340, 0, 0, 0, 0,
	0, 1347, 1309, 0, 0, 0, 341, 0, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	1360, 0, 352, 1367, 353, 1366, 0, 1377, 354, 355,
	356, 357, 358, 359, 360, 1311, 1346, 1275, 361, 1407,
	1408, 760, 0, 362, 363, 1353, 0, 1334, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 391, 1337, 1335, 1336, 1343, 1339, 1338, 1342,
	392, 393, 394, 395, 396, 1370, 397, 399, 1364, 1363,
	1280, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 1355, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	1286, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 1378, 1379, 433, 434, 1300, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 1362, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	1389, 444, 445, 446, 1375, 1376, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 1385, 0, 1310,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 1348,
	1349, 1352, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 1290, 327, 329, 1390, 775, 477, 561, 478, 1357,
	1358, 0, 1316, 0, 479, 480, 482, 1392, 1350, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 1386, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 1341, 1340, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 1277, 541,
	330, 1399, 555, 556, 557, 558, 1301, 1351, 559, 1365,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	1380, 573, 574, 1287, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 1381, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 1361, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 1288, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 1344, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 1359,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 1406, 687, 688, 689, 690, 1382,
	694, 695, 696, 697, 0, 698, 699, 1274, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 1371, 1372, 1373, 1374, 0, 720, 0, 709,
	711, 712, 713, 714, 1383, 715, 1384, 1299, 716, 717,
	718, 719, 710, 721, 722, 0, 1281, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 1345, 732, 0, 0,
	733, 734, 735, 801, 1368, 1405, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 0,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 1278,
	0, 0, 0, 0, 2535, 0, 1321, 1293, 1294, 1295,
	1291, 1292, 1304, 0, 1273, 0, 0, 0, 0, 0,
	0, 1271, 1272, 331, 332, 334, 333, 335, 336, 337,
	338, 1305, 339, 340, 0, 1303, 0, 0, 0, 1347,
	1309, 0, 0, 0, 341, 0, 342, 343, 344, 1387,
	345, 346, 347, 348, 349, 350, 351, 753, 1360, 0,
	352, 1367, 353, 1366, 0, 1377, 354, 355, 356, 357,
	358, 359, 360, 1311, 1346, 1275, 361, 1407, 1408, 760,
	0, 362, 363, 1353, 0, 1334, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 1388, 389, 390,
	391, 1337, 1335, 1336, 1343, 1339, 1338, 1342, 392, 393,
	394, 395, 396, 1370, 397, 399, 1364, 1363, 1280, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 1355, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 1286, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 1378, 1379, 433, 434, 1300, 326, 0, 0, 0,
	0, 0, 435, 436, 437, 1362, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 1389, 444,
	445, 446, 1375, 1376, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 1385, 0, 1310, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 1348, 1349, 1352,
	560, 1391, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 1290,
	327, 329, 1390, 775, 477, 561, 478, 1357, 1358, 0,
	1316, 0, 479, 480, 482, 1392, 1350, 1393, 481, 483,
	484, 1394, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 1386,
	496, 1395, 498, 499, 1396, 0, 500, 501, 502, 503,
	504, 505, 508, 1341, 1340, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 1397, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 1398, 553, 540, 1277, 541, 330, 1399,
	555, 556, 557, 558, 1301, 1351, 559, 1365, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 1400, 572, 1401, 1380, 573,
	574, 1287, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 1381, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 1361, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 1402,
	635, 636, 637, 638, 639, 1288, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 1344, 666, 791, 667, 647, 648, 668, 669, 1403,
	670, 671, 672, 673, 674, 675, 676, 1359, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 1406, 687, 688, 689, 690, 1382, 694, 695,
	696, 697, 0, 698, 699, 1274, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	1371, 1372, 1373, 1374, 0, 720, 0, 709, 711, 712,
	713, 714, 1383, 715, 1384, 1299, 716, 717, 718, 719,
	710, 721, 722, 0, 1281, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 1345, 732, 0, 0, 733, 734,
	735, 801, 1368, 1405, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 0, 0, 0,
	0, 747, 748, 805, 749, 750, 751, 1278, 0, 0,
	0, 0, 2500, 0, 1321, 1293, 1294, 1295, 1291, 1292,
	1304, 0, 1273, 0, 0, 0, 0, 0, 0, 1271,
	1272, 331, 332, 334, 333, 335, 336, 337, 338, 1305,
	339, 340, 0, 1303, 0, 0, 0, 1347, 1309, 0,
	0, 0, 341, 0, 342, 343, 344, 1387, 345, 346,
	347, 348, 349, 350, 351, 753, 1360, 0, 352, 1367,
	353, 1366, 0, 1377, 354, 355, 356, 357, 358, 359,
	360, 1311, 1346, 1275, 361, 1407, 1408, 760, 0, 362,
	363, 1353, 0, 1334, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 1388, 389, 390, 391, 1337,
	1335, 1336, 1343, 1339, 1338, 1342, 392, 393, 394, 395,
	396, 1370, 397, 399, 1364, 1363, 1280, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 1355, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 1286, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 1378,
	1379, 433, 434, 1300, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 1362, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 1389, 444, 445, 446,
	1375, 1376, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 1385, 0, 1310, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 1348, 1349, 1352, 560, 1391,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 1290, 327, 329,
	1390, 775, 477, 561, 478, 1357, 1358, 0, 1316, 0,
	479, 480, 482, 1392, 1350, 1393, 481, 483, 484, 1394,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 1386, 496, 1395,
	498, 499, 1396, 0, 500, 501, 502, 503, 504, 505,
	508, 1341, 1340, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 1397, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 1398, 553, 540, 1277, 541, 330, 1399, 555, 556,
	557, 558, 1301, 1351, 559, 1365, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 1400, 572, 1401, 1380, 573, 574, 1287,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 1381, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 1361,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 1402, 635, 636,
	637, 638, 639, 1288, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 1344,
	666, 791, 667, 647, 648, 668, 669, 1403, 670, 671,
	672, 673, 674, 675, 676, 1359, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	1406, 687, 688, 689, 690, 1382, 694, 695, 696, 697,
	0, 698, 699, 1274, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 1371, 1372,
	1373, 1374, 0, 720, 0, 709, 711, 712, 713, 714,
	1383, 715, 1384, 1299, 716, 717, 718, 719, 710, 721,
	722, 0, 1281, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 1345, 732, 0, 0, 733, 734, 735, 801,
	1368, 1405, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 0, 0, 0, 0, 747,
	748, 805, 749, 750, 751, 1278, 0, 0, 0, 0,
	2030, 0, 1321, 1293, 1294, 1295, 1291, 1292, 1304, 0,
	1273, 0, 0, 0, 0, 0, 0, 1271, 1272, 331,
	332, 334, 333, 335, 336, 337, 338, 1305, 339, 340,
	0, 1303, 0, 0, 0, 1347, 1309, 0, 0, 0,
	341, 0, 342, 343, 344, 1387, 345, 346, 347, 348,
	349, 350, 351, 753, 1360, 0, 352, 1367, 353, 1366,
	0, 1377, 354, 355, 356, 357, 358, 359, 360, 1311,
	1346, 1275, 361, 1407, 1408, 760, 0, 362, 363, 1353,
	0, 1334, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 1388, 389, 390, 391, 1337, 1335, 1336,
	1343, 1339, 1338, 1342, 392, 393, 394, 395, 396, 1370,
	397, 399, 1364, 1363, 1280, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 1355, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 1286, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 1378, 1379, 433,
	434, 1300, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 1362, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 1389, 444, 445, 446, 1375, 1376,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 1385, 0, 1310, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 1348, 1349, 1352, 560, 1391, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 1290, 327, 329, 1390, 775,
	477, 561, 478, 1357, 1358, 0, 1316, 0, 479, 480,
	482, 1392, 1350, 1393, 481, 483, 484, 1394, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 1386, 496, 1395, 498, 499,
	1396, 0, 500, 501, 502, 503, 504, 505, 508, 1341,
	1340, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 1397, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 1398,
	553, 540, 1277, 541, 330, 1399, 555, 556, 557, 558,
	1301, 1351, 559, 1365, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 1400, 572, 1401, 1380, 573, 574, 1287, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 1381,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 1361, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 1402, 635, 636, 637, 638,
	639, 1288, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 1344, 666, 791,
	667, 647, 648, 668, 669, 1403, 670, 671, 672, 673,
	674, 675, 676, 1359, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 1406, 687,
	688, 689, 690, 1382, 694, 695, 696, 697, 0, 698,
	699, 1274, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 1371, 1372, 1373, 1374,
	0, 720, 0, 709, 711, 712, 713, 714, 1383, 715,
	1384, 1299, 716, 717, 718, 719, 710, 721, 722, 0,
	1281, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	1345, 732, 0, 0, 733, 734, 735, 801, 1368, 1405,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 0, 0, 0, 0, 747, 748, 805,
	749, 750, 751, 1278, 0, 0, 0, 0, 2025, 0,
	1321, 1293, 1294, 1295, 1291, 1292, 1304, 0, 1273, 0,
	0, 0, 0, 0, 0, 1271, 1272, 331, 332, 334,
	333, 335, 336, 337, 338, 1305, 339, 340, 0, 1303,
	0, 0, 0, 1347, 1309, 0, 0, 0, 341, 0,
	342, 343, 344, 1387, 345, 346, 347, 348, 349, 350,
	351, 753, 1360, 0, 352, 1367, 353, 1366, 0, 1377,
	354, 355, 356, 357, 358, 359, 360, 1311, 1346, 1275,
	361, 1407, 1408, 760, 0, 362, 363, 1353, 0, 1334,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 1388, 389, 390, 391, 1337, 1335, 1336, 1343, 1339,
	1338, 1342, 392, 393, 394, 395, 396, 1370, 397, 399,
	1364, 1363, 1280, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 1355,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 1286, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 1378, 1379, 433, 434, 1300,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 1362,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 1389, 444, 445, 446, 1375, 1376, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 1385,
	0, 1310, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 1348, 1349, 1352, 560, 1391, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 1290, 327, 329, 1390, 775, 477, 561,
	478, 1357, 1358, 0, 1316, 0, 479, 480, 482, 1392,
	1350, 1393, 481, 483, 484, 1394, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 1386, 496, 1395, 498, 499, 1396, 0,
	500, 501, 502, 503, 504, 505, 508, 1341, 1340, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 1397,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 1398, 553, 540,
	1277, 541, 330, 1399, 555, 556, 557, 558, 1301, 1351,
	559, 1365, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 1400,
	572, 1401, 1380, 573, 574, 1287, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 1381, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 1361, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 1402, 635, 636, 637, 638, 639, 1288,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 1344, 666, 791, 667, 647,
	648, 668, 669, 1403, 670, 671, 672, 673, 674, 675,
	676, 1359, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 1406, 687, 688, 689,
	690, 1382, 694, 695, 696, 697, 0, 698, 699, 1274,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 1371, 1372, 1373, 1374, 0, 720,
	0, 709, 711, 712, 713, 714, 1383, 715, 1384, 1299,
	716, 717, 718, 719, 710, 721, 722, 0, 1281, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 1345, 732,
	0, 0, 733, 734, 735, 801, 1368, 1405, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 0, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 1278, 0, 0, 0, 0, 2011, 0, 1321, 1293,
	1294, 1295, 1291, 1292, 1304, 0, 1273, 0, 0, 0,
	0, 0, 0, 1271, 1272, 331, 332, 334, 333, 335,
	336, 337, 338, 1305, 339, 340, 0, 1303, 0, 0,
	0, 1347, 1309, 0, 0, 0, 341, 0, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	1360, 0, 352, 1367, 353, 1366, 0, 1377, 354, 355,
	356, 357, 358, 359, 360, 1311, 1346, 1275, 361, 1407,
	1408, 760, 0, 362, 363, 1353, 0, 1334, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 391, 1337, 1335, 1336, 1343, 1339, 1338, 1342,
	392, 393, 394, 395, 396, 1370, 397, 399, 1364, 1363,
	1280, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 1355, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	1286, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 1378, 1379, 433, 434, 1300, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 1362, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	1389, 444, 445, 446, 1375, 1376, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 1385, 0, 1310,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 1348,
	1349, 1352, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 1290, 327, 329, 1390, 775, 477, 561, 478, 1357,
	1358, 0, 1316, 0, 479, 480, 482, 1392, 1350, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 1386, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 1341, 1340, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 1277, 541,
	330, 1399, 555, 556, 557, 558, 1301, 1351, 559, 1365,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	1380, 573, 574, 1287, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 1381, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 1361, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 1288, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 1344, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 1359,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 1406, 687, 688, 689, 690, 1382,
	694, 695, 696, 697, 0, 698, 699, 1274, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 1371, 1372, 1373, 1374, 0, 720, 0, 709,
	711, 712, 713, 714, 1383, 715, 1384, 1299, 716, 717,
	718, 719, 710, 721, 722, 0, 1281, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 1345, 732, 0, 0,
	733, 734, 735, 801, 1368, 1405, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 0,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 1278,
	0, 0, 0, 0, 2006, 0, 1321, 1293, 1294, 1295,
	1291, 1292, 1304, 0, 1273, 0, 0, 0, 0, 0,
	0, 1271, 1272, 331, 332, 334, 333, 335, 336, 337,
	338, 1305, 339, 340, 0, 1303, 0, 0, 0, 1347,
	1309, 0, 0, 0, 341, 0, 342, 343, 344, 1387,
	345, 346, 347, 348, 349, 350, 351, 753, 1360, 0,
	352, 1367, 353, 1366, 0, 1377, 354, 355, 356, 357,
	358, 359, 360, 1311, 1346, 1275, 361, 1407, 1408, 760,
	0, 362, 363, 1353, 0, 1334, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 1388, 389, 390,
	391, 1337, 1335, 1336, 1343, 1339, 1338, 1342, 392, 393,
	394, 395, 396, 1370, 397, 399, 1364, 1363, 1280, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 1355, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 1286, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 1378, 1379, 433, 434, 1300, 326, 0, 0, 0,
	0, 0, 435, 436, 437, 1362, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 1389, 444,
	445, 446, 1375, 1376, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 1385, 0, 1310, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 1348, 1349, 1352,
	560, 1391, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 1290,
	327, 329, 1390, 775, 477, 561, 478, 1357, 1358, 0,
	1316, 0, 479, 480, 482, 1392, 1350, 1393, 481, 483,
	484, 1394, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 1386,
	496, 1395, 498, 499, 1396, 0, 500, 501, 502, 503,
	504, 505, 508, 1341, 1340, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 1397, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 1398, 553, 540, 1277, 541, 330, 1399,
	555, 556, 557, 558, 1301, 1351, 559, 1365, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 1400, 572, 1401, 1380, 573,
	574, 1287, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 1381, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 1361, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 1402,
	635, 636, 637, 638, 639, 1288, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 1344, 666, 791, 667, 647, 648, 668, 669, 1403,
	670, 671, 672, 673, 674, 675, 676, 1359, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 1406, 687, 688, 689, 690, 1382, 694, 695,
	696, 697, 0, 698, 699, 1274, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	1371, 1372, 1373, 1374, 0, 720, 0, 709, 711, 712,
	713, 714, 1383, 715, 1384, 1299, 716, 717, 718, 719,
	710, 721, 722, 0, 1281, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 1345, 732, 0, 0, 733, 734,
	735, 801, 1368, 1405, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 0, 0, 0,
	0, 747, 748, 805, 749, 750, 751, 1278, 0, 0,
	0, 0, 1910, 0, 1321, 1293, 1294, 1295, 1291, 1292,
	1304, 0, 1273, 0, 0, 0, 0, 0, 0, 1271,
	1272, 331, 332, 334, 333, 335, 336, 337, 338, 1305,
	339, 340, 0, 1303, 0, 0, 0, 1347, 1309, 0,
	0, 0, 341, 0, 342, 343, 344, 1387, 345, 346,
	347, 348, 349, 350, 351, 753, 1360, 0, 352, 1367,
	353, 1366, 0, 1377, 354, 355, 356, 357, 358, 359,
	360, 1311, 1346, 1275, 361, 1407, 1408, 760, 0, 362,
	363, 1353, 0, 1334, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 1388, 389, 390, 391, 1337,
	1335, 1336, 1343, 1339, 1338, 1342, 392, 393, 394, 395,
	396, 1370, 397, 399, 1364, 1363, 1280, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 1355, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 1286, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 1378,
	1379, 433, 434, 1300, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 1362, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 1389, 444, 445, 446,
	1375, 1376, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 1385, 0, 1310, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 1909, 1349, 1352, 560, 1391,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 1290, 327, 329,
	1390, 775, 477, 561, 478, 1357, 1358, 0, 1316, 0,
	479, 480, 482, 1392, 1350, 1393, 481, 483, 484, 1394,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 1386, 496, 1395,
	498, 499, 1396, 0, 500, 501, 502, 503, 504, 505,
	508, 1341, 1340, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 1397, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 1398, 553, 540, 1277, 541, 330, 1399, 555, 556,
	557, 558, 1301, 1351, 559, 1365, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 1400, 572, 1401, 1380, 573, 574, 1287,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 1381, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 1361,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 1402, 635, 636,
	637, 638, 639, 1288, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 1344,
	666, 791, 667, 647, 648, 668, 669, 1403, 670, 671,
	672, 673, 674, 675, 676, 1359, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	1406, 687, 688, 689, 690, 1382, 694, 695, 696, 697,
	0, 698, 699, 1274, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 1371, 1372,
	1373, 1374, 0, 720, 0, 709, 711, 712, 713, 714,
	1383, 715, 1384, 1299, 716, 717, 718, 719, 710, 721,
	722, 0, 1281, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 1345, 732, 0, 0, 733, 734, 735, 801,
	1368, 1405, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 0, 0, 0, 0, 747,
	748, 805, 749, 750, 751, 1278, 0, 0, 0, 0,
	1904, 0, 1321, 1293, 1294, 1295, 1291, 1292, 1304, 0,
	1273, 0, 0, 0, 0, 0, 0, 1271, 1272, 331,
	332, 334, 333, 335, 336, 337, 338, 1305, 339, 340,
	0, 1303, 0, 0, 0, 1347, 1309, 0, 0, 0,
	341, 0, 342, 343, 344, 1387, 345, 346, 347, 348,
	349, 350, 351, 753, 1360, 0, 352, 1367, 353, 1366,
	0, 1377, 354, 355, 356, 357, 358, 359, 360, 1311,
	1346, 1275, 361, 1407, 1408, 760, 0, 362, 363, 1353,
	0, 1334, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 1388, 389, 390, 391, 1337, 1335, 1336,
	1343, 1339, 1338, 1342, 392, 393, 394, 395, 396, 1370,
	397, 399, 1364, 1363, 1280, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 1355, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 1286, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 1378, 1379, 433,
	434, 1300, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 1362, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 1389, 444, 445, 446, 1375, 1376,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 1385, 0, 1310, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 1903, 1349, 1352, 560, 1391, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 1290, 327, 329, 1390, 775,
	477, 561, 478, 1357, 1358, 0, 1316, 0, 479, 480,
	482, 1392, 1350, 1393, 481, 483, 484, 1394, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 1386, 496, 1395, 498, 499,
	1396, 0, 500, 501, 502, 503, 504, 505, 508, 1341,
	1340, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 1397, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 1398,
	553, 540, 1277, 541, 330, 1399, 555, 556, 557, 558,
	1301, 1351, 559, 1365, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 1400, 572, 1401, 1380, 573, 574, 1287, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 1381,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 1361, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 1402, 635, 636, 637, 638,
	639, 1288, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 1344, 666, 791,
	667, 647, 648, 668, 669, 1403, 670, 671, 672, 673,
	674, 675, 676, 1359, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 1406, 687,
	688, 689, 690, 1382, 694, 695, 696, 697, 0, 698,
	699, 1274, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 1371, 1372, 1373, 1374,
	0, 720, 0, 709, 711, 712, 713, 714, 1383, 715,
	1384, 1299, 716, 717, 718, 719, 710, 721, 722, 0,
	1281, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	1345, 732, 0, 0, 733, 734, 735, 801, 1368, 1405,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 0, 0, 0, 0, 747, 748, 805,
	749, 750, 751, 1278, 0, 0, 0, 0, 1898, 0,
	1321, 1293, 1294, 1295, 1291, 1292, 1304, 0, 1273, 0,
	0, 0, 0, 0, 0, 1271, 1272, 331, 332, 334,
	333, 335, 336, 337, 338, 1305, 339, 340, 0, 1303,
	0, 0, 0, 1347, 1309, 0, 0, 0, 341, 0,
	342, 343, 344, 1387, 345, 346, 347, 348, 349, 350,
	351, 753, 1360, 0, 352, 1367, 353, 1366, 0, 1377,
	354, 355, 356, 357, 358, 359, 360, 1311, 1346, 1275,
	361, 1407, 1408, 760, 0, 362, 363, 1353, 0, 1334,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 1388, 389, 390, 391, 1337, 1335, 1336, 1343, 1339,
	1338, 1342, 392, 393, 394, 395, 396, 1370, 397, 399,
	1364, 1363, 1280, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 1355,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 1286, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 1378, 1379, 433, 434, 1300,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 1362,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 1389, 444, 445, 446, 1375, 1376, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 1385,
	0, 1310, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 1348, 1349, 1352, 560, 1391, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 1290, 327, 329, 1390, 775, 477, 561,
	478, 1357, 1358, 0, 1316, 0, 479, 480, 482, 1392,
	1350, 1393, 481, 483, 484, 1394, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 1386, 496, 1395, 498, 499, 1396, 0,
	500, 501, 502, 503, 504, 505, 508, 1341, 1340, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 1397,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 1398, 553, 540,
	1277, 541, 330, 1399, 555, 556, 557, 558, 1301, 1351,
	559, 1365, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 1400,
	572, 1401, 1380, 573, 574, 1287, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 1381, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 1361, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 1402, 635, 636, 637, 638, 639, 1288,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 1344, 666, 791, 667, 647,
	648, 668, 669, 1403, 670, 671, 672, 673, 674, 675,
	676, 1359, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 1406, 687, 688, 689,
	690, 1382, 694, 695, 696, 697, 0, 698, 699, 1274,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 1371, 1372, 1373, 1374, 0, 720,
	0, 709, 711, 712, 713, 714, 1383, 715, 1384, 1299,
	716, 717, 718, 719, 710, 721, 722, 0, 1281, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 1345, 732,
	0, 0, 733, 734, 735, 801, 1368, 1405, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 0, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 1278, 0, 0, 0, 0, 1872, 0, 1321, 1293,
	1294, 1295, 1291, 1292, 1304, 0, 1273, 0, 0, 0,
	0, 0, 0, 1271, 1272, 331, 332, 334, 333, 335,
	336, 337, 338, 1305, 339, 340, 0, 1303, 0, 0,
	0, 1347, 1309, 0, 0, 0, 341, 0, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	1360, 0, 352, 1367, 353, 1366, 0, 1377, 354, 355,
	356, 357, 358, 359, 360, 1311, 1346, 1275, 361, 1407,
	1408, 760, 0, 362, 363, 1353, 0, 1334, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 391, 1337, 1335, 1336, 1343, 1339, 1338, 1342,
	392, 393, 394, 395, 396, 1370, 397, 399, 1364, 1363,
	1280, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 1355, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	1286, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 1378, 1379, 433, 434, 1300, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 1362, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	1389, 444, 445, 446, 1375, 1376, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 1385, 0, 1310,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 1348,
	1349, 1352, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 1290, 327, 329, 1390, 775, 477, 561, 478, 1357,
	1358, 0, 1316, 0, 479, 480, 482, 1392, 1350, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 1386, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 1341, 1340, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 1277, 541,
	330, 1399, 555, 556, 557, 558, 1301, 1351, 559, 1365,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	1380, 573, 574, 1287, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 1381, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 1361, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 1288, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 1344, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 1359,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 1406, 687, 688, 689, 690, 1382,
	694, 695, 696, 697, 0, 698, 699, 1274, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 1371, 1372, 1373, 1374, 0, 720, 0, 709,
	711, 712, 713, 714, 1383, 715, 1384, 1299, 716, 717,
	718, 719, 710, 721, 722, 0, 1281, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 1345, 732, 0, 0,
	733, 734, 735, 801, 1368, 1405, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 0,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 1278,
	0, 0, 0, 0, 1852, 0, 1321, 1293, 1294, 1295,
	1291, 1292, 1304, 0, 1273, 0, 0, 0, 0, 0,
	0, 1271, 1272, 331, 332, 334, 333, 335, 336, 337,
	338, 1305, 339, 340, 0, 1303, 0, 0, 0, 1347,
	1309, 0, 0, 0, 341, 0, 342, 343, 344, 1387,
	345, 346, 347, 348, 349, 350, 351, 753, 1360, 0,
	352, 1367, 353, 1366, 0, 1377, 354, 355, 356, 357,
	358, 359, 360, 1311, 1346, 1275, 361, 1407, 1408, 760,
	0, 362, 363, 1353, 0, 1334, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 1388, 389, 390,
	391, 1337, 1335, 1336, 1343, 1339, 1338, 1342, 392, 393,
	394, 395, 396, 1370, 397, 399, 1364, 1363, 1280, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 1355, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 1286, 421,
	422, 423, 425, 427, 424, 1856, 428, 429, 430, 431,
	432, 1378, 1379, 433, 434, 1300, 326, 0, 0, 0,
	0, 0, 435, 436, 437, 1362, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 1389, 444,
	445, 446, 1375, 1376, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 1385, 0, 1310, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 1348, 1349, 1352,
	560, 1391, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 1290,
	327, 329, 1390, 775, 477, 561, 478, 1357, 1358, 0,
	1316, 0, 479, 480, 482, 1392, 1350, 1393, 481, 483,
	484, 1394, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 1386,
	496, 1395, 498, 499, 1396, 0, 500, 501, 502, 503,
	504, 505, 508, 1341, 1340, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 1397, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 1398, 553, 540, 1277, 541, 330, 1399,
	555, 556, 557, 558, 1301, 1351, 559, 1365, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 1400, 572, 1401, 1380, 573,
	574, 1287, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 1381, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 1361, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	1857, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 1402,
	635, 636, 637, 638, 639, 1288, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 1344, 666, 791, 667, 647, 648, 668, 669, 1403,
	670, 671, 672, 673, 674, 675, 676, 1359, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 1406, 687, 688, 689, 690, 1382, 694, 695,
	696, 697, 0, 698, 699, 1274, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 1855, 707, 0, 708,
	1371, 1372, 1373, 1374, 0, 720, 0, 709, 711, 712,
	713, 714, 1383, 715, 1384, 1299, 716, 717, 718, 719,
	710, 721, 722, 0, 1281, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 1345, 732, 0, 0, 733, 734,
	735, 801, 1368, 1405, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 0, 0, 0,
	0, 747, 748, 805, 749, 750, 751, 1278, 0, 0,
	0, 0, 1690, 0, 1321, 1293, 1294, 1295, 1291, 1292,
	1304, 0, 1273, 0, 0, 0, 0, 0, 0, 1271,
	1272, 331, 332, 334, 333, 335, 336, 337, 338, 1305,
	339, 340, 0, 1303, 0, 0, 0, 1347, 1309, 0,
	0, 0, 341, 0, 342, 343, 344, 1387, 345, 346,
	347, 348, 349, 350, 351, 753, 1360, 0, 352, 1367,
	353, 1366, 0, 1377, 354, 355, 356, 357, 358, 359,
	360, 1311, 1346, 1275, 361, 1407, 1408, 760, 0, 362,
	363, 1353, 0, 1334, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 1388, 389, 390, 391, 1337,
	1335, 1336, 1343, 1339, 1338, 1342, 392, 393, 394, 395,
	396, 1370, 397, 399, 1364, 1363, 1280, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 1355, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 1286, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 1378,
	1379, 433, 434, 1300, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 1362, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 1389, 444, 445, 446,
	1375, 1376, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 1385, 0, 1310, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 1348, 1349, 1352, 560, 1391,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 1290, 327, 329,
	1390, 775, 477, 561, 478, 1357, 1358, 0, 1316, 0,
	479, 480, 482, 1392, 1350, 1393, 481, 483, 484, 1394,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 1386, 496, 1395,
	498, 499, 1396, 0, 500, 501, 502, 503, 504, 505,
	508, 1341, 1340, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 1397, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 1398, 553, 540, 1277, 541, 330, 1399, 555, 556,
	557, 558, 1301, 1351, 559, 1365, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 1400, 572, 1401, 1380, 573, 574, 1287,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 1381, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 1361,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 1402, 635, 636,
	637, 638, 639, 1288, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 1344,
	666, 791, 667, 647, 648, 668, 669, 1403, 670, 671,
	672, 673, 674, 675, 676, 1359, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	1406, 687, 688, 689, 690, 1382, 694, 695, 696, 697,
	0, 698, 699, 1274, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 1371, 1372,
	1373, 1374, 0, 720, 0, 709, 711, 712, 713, 714,
	1383, 715, 1384, 1299, 716, 717, 718, 719, 710, 721,
	722, 0, 1281, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 1345, 732, 0, 0, 733, 734, 735, 801,
	1368, 1405, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 0, 0, 0, 0, 747,
	748, 805, 749, 750, 751, 1278, 0, 0, 0, 0,
	1545, 0, 1321, 1293, 1294, 1295, 1291, 1292, 1304, 0,
	1273, 0, 0, 0, 0, 0, 0, 1271, 1272, 331,
	332, 334, 333, 335, 336, 337, 338, 1305, 339, 340,
	0, 1303, 0, 0, 0, 1347, 1309, 0, 0, 0,
	341, 0, 342, 343, 344, 1387, 345, 346, 347, 348,
	349, 350, 351, 753, 1360, 0, 352, 1367, 353, 1366,
	0, 1377, 354, 355, 356, 357, 358, 359, 360, 1311,
	1346, 1275, 361, 1407, 1408, 760, 0, 362, 363, 1353,
	0, 1334, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 1388, 389, 390, 391, 1337, 1335, 1336,
	1343, 1339, 1338, 1342, 392, 393, 394, 395, 396, 1370,
	397, 399, 1364, 1363, 1280, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 1355, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 1286, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 1378, 1379, 433,
	434, 1300, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 1362, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 1389, 444, 445, 446, 1375, 1376,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 1385, 0, 1310, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 1348, 1349, 1352, 560, 1391, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 1290, 327, 329, 1390, 775,
	477, 561, 478, 1357, 1358, 0, 1316, 0, 479, 480,
	482, 1392, 1350, 1393, 481, 483, 484, 1394, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 1386, 496, 1395, 498, 499,
	1396, 0, 500, 501, 502, 503, 504, 505, 508, 1341,
	1340, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 1397, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 1398,
	553, 540, 1277, 541, 330, 1399, 555, 556, 557, 558,
	1301, 1351, 559, 1365, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 1400, 572, 1401, 1380, 573, 574, 1287, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 1381,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 1361, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 1402, 635, 636, 637, 638,
	639, 1288, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 1344, 666, 791,
	667, 647, 648, 668, 669, 1403, 670, 671, 672, 673,
	674, 675, 676, 1359, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 1406, 687,
	688, 689, 690, 1382, 694, 695, 696, 697, 0, 698,
	699, 1274, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 1371, 1372, 1373, 1374,
	0, 720, 0, 709, 711, 712, 713, 714, 1383, 715,
	1384, 1299, 716, 717, 718, 719, 710, 721, 722, 0,
	1281, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	1345, 732, 0, 0, 733, 734, 735, 801, 1368, 1405,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 0, 0, 0, 0, 747, 748, 805,
	749, 750, 751, 1278, 0, 0, 0, 0, 0, 0,
	1321, 1293, 1294, 1295, 1291, 1292, 1304, 0, 1273, 0,
	0, 0, 0, 0, 0, 1271, 1272, 331, 332, 334,
	333, 335, 336, 337, 338, 1305, 339, 340, 0, 1303,
	0, 0, 0, 1347, 1309, 0, 0, 0, 341, 0,
	342, 343, 344, 1387, 345, 346, 347, 348, 349, 350,
	351, 753, 1360, 0, 352, 1367, 353, 1366, 0, 1377,
	354, 355, 356, 357, 358, 359, 360, 1311, 1346, 1275,
	361, 1407, 1408, 760, 0, 362, 363, 1353, 0, 1334,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 1388, 389, 390, 391, 1337, 1335, 1336, 1343, 1339,
	1338, 1342, 392, 393, 394, 395, 396, 1370, 397, 399,
	1364, 1363, 1280, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 1355,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 1286, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 1378, 1379, 433, 434, 1300,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 1362,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 1389, 444, 445, 446, 1375, 1376, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 1385,
	0, 1310, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 1348, 1349, 1352, 560, 1391, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 1290, 327, 329, 1390, 775, 477, 561,
	478, 1357, 1358, 0, 1316, 0, 479, 480, 482, 1392,
	1350, 1393, 481, 483, 484, 1394, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 1386, 496, 1395, 498, 499, 1396, 0,
	500, 501, 502, 503, 504, 505, 508, 1341, 1340, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 1397,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 1398, 553, 540,
	1277, 541, 330, 1399, 555, 556, 557, 558, 1301, 1351,
	559, 1365, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 1400,
	572, 1401, 1380, 573, 574, 1287, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 1381, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 1361, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 1402, 635, 636, 637, 638, 639, 1288,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 1344, 666, 791, 667, 647,
	648, 668, 669, 1403, 670, 671, 672, 673, 674, 675,
	676, 1359, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 1406, 687, 688, 689,
	690, 1382, 694, 695, 696, 697, 0, 698, 699, 1274,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 1371, 1372, 1373, 1374, 0, 720,
	0, 709, 711, 712, 713, 714, 1383, 715, 1384, 1299,
	716, 717, 718, 719, 710, 721, 722, 0, 1281, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 1345, 732,
	0, 0, 733, 734, 735, 801, 1368, 1405, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 0, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 1278, 0, 0, 0, 0, 0, 0, 1321, 1293,
	1294, 1295, 1291, 1292, 1304, 0, 1273, 0, 0, 0,
	0, 0, 0, 1271, 1272, 331, 332, 334, 333, 335,
	336, 337, 338, 1305, 339, 340, 0, 1303, 0, 0,
	0, 1347, 1309, 0, 0, 0, 341, 0, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	1360, 0, 352, 1367, 353, 1366, 0, 1377, 354, 355,
	356, 357, 358, 359, 360, 1311, 1346, 1275, 361, 1407,
	1408, 760, 0, 362, 363, 1353, 0, 1334, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 5544, 1337, 1335, 1336, 1343, 1339, 1338, 1342,
	392, 393, 394, 395, 396, 1370, 397, 399, 1364, 1363,
	1280, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 1355, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	1286, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 1378, 1379, 433, 434, 1300, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 1362, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	1389, 444, 445, 446, 1375, 1376, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 1385, 0, 1310,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 1348,
	1349, 1352, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 1290, 327, 329, 1390, 775, 477, 561, 478, 1357,
	1358, 0, 1316, 0, 479, 480, 482, 1392, 1350, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 1386, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 1341, 1340, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 1277, 541,
	330, 1399, 555, 556, 557, 558, 1301, 1351, 559, 1365,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	1380, 573, 574, 1287, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 1381, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 1361, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 1288, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 1344, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 1359,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 1406, 687, 688, 689, 690, 1382,
	694, 695, 696, 697, 0, 698, 699, 1274, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 1371, 1372, 1373, 1374, 0, 720, 0, 709,
	711, 712, 713, 714, 1383, 715, 1384, 1299, 716, 717,
	718, 719, 710, 5543, 722, 0, 1281, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 1345, 732, 0, 0,
	733, 734, 735, 801, 1368, 1405, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 0,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 1278,
	0, 0, 0, 0, 0, 0, 1321, 1293, 1294, 1295,
	1291, 1292, 1304, 0, 1273, 0, 0, 0, 0, 0,
	0, 1271, 1272, 331, 332, 334, 333, 335, 336, 337,
	338, 1305, 339, 340, 0, 1303, 0, 0, 0, 1347,
	1309, 0, 0, 0, 341, 0, 342, 343, 344, 1387,
	345, 346, 347, 348, 349, 350, 351, 5542, 1360, 0,
	352, 1367, 353, 1366, 0, 1377, 354, 355, 356, 357,
	358, 359, 360, 1311, 1346, 1275, 361, 1407, 1408, 760,
	0, 362, 363, 1353, 0, 1334, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 1388, 389, 390,
	5544, 1337, 1335, 1336, 1343, 1339, 1338, 1342, 392, 393,
	394, 395, 396, 1370, 397, 399, 1364, 1363, 1280, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 1355, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 1286, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 1378, 1379, 433, 434, 1300, 326, 0, 0, 0,
	0, 0, 435, 436, 437, 1362, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 1389, 444,
	445, 446, 1375, 1376, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 1385, 0, 1310, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 1348, 1349, 1352,
	560, 1391, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 1290,
	327, 329, 1390, 775, 477, 561, 478, 1357, 1358, 0,
	1316, 0, 479, 480, 482, 1392, 1350, 1393, 481, 483,
	484, 1394, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 1386,
	496, 1395, 498, 499, 1396, 0, 500, 501, 502, 503,
	504, 505, 508, 1341, 1340, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 1397, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 1398, 553, 540, 1277, 541, 330, 1399,
	555, 556, 557, 558, 1301, 1351, 559, 1365, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 1400, 572, 1401, 1380, 573,
	574, 1287, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 1381, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 1361, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 1402,
	635, 636, 637, 638, 639, 1288, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 1344, 666, 791, 667, 647, 648, 668, 669, 1403,
	670, 671, 672, 673, 674, 675, 676, 1359, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 1406, 687, 688, 689, 690, 1382, 694, 695,
	696, 697, 0, 698, 699, 1274, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	1371, 1372, 1373, 1374, 0, 720, 0, 709, 711, 712,
	713, 714, 1383, 715, 1384, 1299, 716, 717, 718, 719,
	710, 5543, 722, 0, 1281, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 1345, 732, 0, 0, 733, 734,
	735, 801, 1368, 1405, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 0, 0, 0,
	0, 747, 748, 805, 749, 750, 751, 1278, 0, 0,
	0, 0, 0, 0, 1321, 1293, 1294, 1295, 1291, 1292,
	1304, 0, 1273, 0, 0, 0, 0, 0, 0, 1271,
	1272, 331, 332, 334, 333, 335, 336, 337, 338, 1305,
	339, 340, 0, 1303, 0, 0, 0, 1347, 1309, 0,
	0, 0, 341, 0, 342, 343, 344, 1387, 345, 346,
	347, 348, 349, 350, 351, 753, 1360, 0, 352, 1367,
	353, 1366, 0, 1377, 354, 355, 356, 357, 358, 359,
	360, 1311, 1346, 1275, 361, 1407, 1408, 760, 0, 362,
	363, 1353, 0, 1334, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 1388, 389, 5115, 391, 1337,
	1335, 1336, 1343, 1339, 1338, 1342, 392, 393, 394, 395,
	396, 1370, 397, 399, 1364, 1363, 1280, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 1355, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 1286, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 1378,
	1379, 433, 434, 1300, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 1362, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 1389, 444, 445, 446,
	1375, 1376, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 1385, 0, 5116, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 1348, 1349, 1352, 560, 1391,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 1290, 327, 329,
	1390, 775, 477, 561, 478, 1357, 1358, 0, 1316, 0,
	479, 480, 482, 1392, 1350, 1393, 481, 483, 484, 1394,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 1386, 496, 1395,
	498, 499, 1396, 0, 500, 501, 502, 503, 504, 505,
	508, 1341, 1340, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 1397, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 1398, 553, 540, 1277, 541, 330, 1399, 555, 556,
	557, 558, 1301, 1351, 559, 1365, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 1400, 572, 1401, 1380, 573, 574, 1287,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 1381, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 1361,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 1402, 635, 636,
	637, 5114, 639, 1288, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 1344,
	666, 791, 667, 647, 648, 668, 669, 1403, 670, 671,
	672, 673, 674, 675, 676, 1359, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	1406, 687, 688, 689, 690, 1382, 694, 695, 696, 697,
	0, 698, 699, 1274, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 1371, 1372,
	1373, 1374, 0, 720, 0, 709, 711, 712, 713, 714,
	1383, 715, 1384, 1299, 716, 717, 718, 719, 710, 721,
	722, 0, 1281, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 1345, 732, 0, 0, 733, 734, 735, 801,
	1368, 1405, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 0, 0, 0, 0, 747,
	748, 805, 749, 750, 751, 1278, 0, 0, 0, 0,
	0, 0, 1321, 1293, 1294, 1295, 3705, 3706, 1304, 0,
	1273, 0, 0, 0, 0, 0, 0, 1271, 1272, 331,
	332, 334, 333, 335, 336, 337, 338, 1305, 339, 340,
	0, 1303, 0, 0, 0, 1347, 1309, 0, 0, 0,
	341, 0, 342, 343, 344, 1387, 345, 346, 347, 348,
	349, 350, 351, 753, 1360, 0, 352, 1367, 353, 1366,
	0, 1377, 354, 355, 356, 357, 358, 359, 360, 1311,
	1346, 1275, 361, 1407, 1408, 760, 0, 362, 363, 1353,
	0, 1334, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 1388, 389, 390, 391, 1337, 1335, 1336,
	1343, 1339, 1338, 1342, 392, 393, 394, 395, 396, 1370,
	397, 399, 1364, 1363, 1280, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 1355, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 1286, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 1378, 1379, 433,
	434, 1300, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 1362, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 1389, 444, 445, 446, 1375, 1376,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 1385, 0, 1310, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 1348, 1349, 1352, 560, 1391, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 1290, 327, 329, 1390, 775,
	477, 561, 478, 1357, 1358, 0, 1316, 0, 479, 480,
	482, 1392, 1350, 1393, 481, 483, 484, 1394, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 1386, 496, 1395, 498, 499,
	1396, 0, 500, 501, 502, 503, 504, 505, 508, 1341,
	1340, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 1397, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 1398,
	553, 540, 1277, 541, 330, 1399, 555, 556, 557, 558,
	1301, 1351, 559, 1365, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 1400, 572, 1401, 1380, 573, 574, 1287, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 1381,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 1361, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 1402, 635, 636, 637, 638,
	639, 1288, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 1344, 666, 791,
	667, 647, 648, 668, 669, 1403, 670, 671, 672, 673,
	674, 675, 676, 1359, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 1406, 687,
	688, 689, 690, 1382, 694, 695, 696, 697, 0, 698,
	699, 1274, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 1371, 1372, 1373, 1374,
	0, 720, 0, 709, 711, 712, 713, 714, 1383, 715,
	1384, 1299, 716, 717, 718, 719, 710, 721, 722, 0,
	1281, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	1345, 732, 0, 0, 733, 734, 735, 801, 1368, 1405,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 0, 0, 0, 0, 747, 748, 805,
	749, 750, 751, 1278, 0, 0, 0, 0, 0, 0,
	1321, 1293, 1294, 1295, 3703, 3704, 1304, 0, 1273, 0,
	0, 0, 0, 0, 0, 1271, 1272, 331, 332, 334,
	333, 335, 336, 337, 338, 1305, 339, 340, 0, 1303,
	0, 0, 0, 1347, 1309, 0, 0, 0, 341, 0,
	342, 343, 344, 1387, 345, 346, 347, 348, 349, 350,
	351, 753, 1360, 0, 352, 1367, 353, 1366, 0, 1377,
	354, 355, 356, 357, 358, 359, 360, 1311, 1346, 1275,
	361, 1407, 1408, 760, 0, 362, 363, 1353, 0, 1334,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 1388, 389, 390, 391, 1337, 1335, 1336, 1343, 1339,
	1338, 1342, 392, 393, 394, 395, 396, 1370, 397, 399,
	1364, 1363, 1280, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 1355,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 1286, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 1378, 1379, 433, 434, 1300,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 1362,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 1389, 444, 445, 446, 1375, 1376, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 1385,
	0, 1310, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 1348, 1349, 1352, 560, 1391, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 1290, 327, 329, 1390, 775, 477, 561,
	478, 1357, 1358, 0, 1316, 0, 479, 480, 482, 1392,
	1350, 1393, 481, 483, 484, 1394, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 1386, 496, 1395, 498, 499, 1396, 0,
	500, 501, 502, 503, 504, 505, 508, 1341, 1340, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 1397,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 1398, 553, 540,
	1277, 541, 330, 1399, 555, 556, 557, 558, 1301, 1351,
	559, 1365, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 1400,
	572, 1401, 1380, 573, 574, 1287, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 1381, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 1361, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 1402, 635, 636, 637, 638, 639, 1288,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 1344, 666, 791, 667, 647,
	648, 668, 669, 1403, 670, 671, 672, 673, 674, 675,
	676, 1359, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 1406, 687, 688, 689,
	690, 1382, 694, 695, 696, 697, 0, 698, 699, 1274,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 1371, 1372, 1373, 1374, 0, 720,
	0, 709, 711, 712, 713, 714, 1383, 715, 1384, 1299,
	716, 717, 718, 719, 710, 721, 722, 0, 1281, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 1345, 732,
	0, 0, 733, 734, 735, 801, 1368, 1405, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 0, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 1278, 0, 0, 0, 0, 0, 0, 1321, 1293,
	1294, 1295, 1291, 1292, 1304, 0, 1273, 0, 0, 0,
	0, 0, 0, 1271, 1272, 331, 332, 334, 333, 335,
	336, 337, 338, 1305, 339, 340, 0, 1303, 0, 0,
	0, 1347, 1309, 0, 0, 0, 341, 0, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	1360, 0, 352, 1367, 353, 1366, 0, 1377, 354, 355,
	356, 357, 358, 359, 360, 1311, 1346, 1275, 361, 1407,
	1408, 760, 0, 362, 363, 1353, 0, 1334, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 391, 1337, 1335, 1336, 1343, 1339, 1338, 1342,
	392, 393, 394, 395, 396, 1370, 397, 399, 1364, 1363,
	1280, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 1355, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	1286, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 1378, 1379, 433, 434, 1300, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 1362, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	1389, 444, 445, 446, 1375, 1376, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 1385, 0, 1310,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 1348,
	1349, 1352, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 1290, 327, 329, 1390, 775, 477, 561, 478, 1357,
	1358, 0, 1316, 0, 479, 480, 482, 1392, 1350, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 1386, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 1341, 1340, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 1277, 541,
	330, 1399, 555, 556, 557, 558, 1301, 1351, 559, 1365,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	1380, 573, 574, 1287, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 1381, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 1361, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 1288, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 1344, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 1359,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 1406, 687, 688, 689, 690, 1382,
	694, 695, 696, 697, 0, 698, 699, 1274, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 1371, 1372, 1373, 1374, 0, 720, 0, 709,
	711, 712, 713, 714, 1383, 715, 1384, 1299, 716, 717,
	718, 719, 710, 721, 722, 0, 1281, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 1345, 732, 0, 0,
	733, 734, 735, 801, 1368, 1405, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 0,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 1278,
	0, 0, 0, 0, 0, 0, 1321, 1293, 1294, 1295,
	1291, 1292, 1304, 0, 1273, 0, 0, 0, 0, 0,
	0, 2840, 2841, 331, 332, 334, 333, 335, 336, 337,
	338, 1305, 339, 340, 0, 1303, 0, 0, 0, 1347,
	1309, 0, 0, 0, 341, 0, 342, 343, 344, 1387,
	345, 346, 347, 348, 349, 350, 351, 753, 1360, 0,
	352, 1367, 353, 1366, 0, 1377, 354, 355, 356, 357,
	358, 359, 360, 1311, 1346, 0, 361, 1407, 1408, 760,
	0, 362, 363, 1353, 0, 1334, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 1388, 389, 390,
	391, 1337, 1335, 1336, 1343, 1339, 1338, 1342, 392, 393,
	394, 395, 396, 1370, 397, 399, 1364, 1363, 0, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 1355, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 1286, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 1378, 1379, 433, 434, 1300, 326, 0, 0, 0,
	0, 0, 435, 436, 437, 1362, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 1389, 444,
	445, 446, 1375, 1376, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 1385, 0, 1310, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 1348, 1349, 1352,
	560, 1391, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 1290,
	327, 329, 1390, 775, 477, 561, 478, 1357, 1358, 0,
	1316, 0, 479, 480, 482, 1392, 1350, 1393, 481, 483,
	484, 1394, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 1386,
	496, 1395, 498, 499, 1396, 0, 500, 501, 502, 503,
	504, 505, 508, 1341, 1340, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 1397, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 1398, 553, 540, 0, 541, 330, 1399,
	555, 556, 557, 558, 1301, 1351, 559, 1365, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 1400, 572, 1401, 1380, 573,
	574, 1287, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 1381, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 1361, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 1402,
	635, 636, 637, 638, 639, 1288, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 1344, 666, 791, 667, 647, 648, 668, 669, 1403,
	670, 671, 672, 673, 674, 675, 676, 1359, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 1406, 687, 688, 689, 690, 1382, 694, 695,
	696, 697, 0, 698, 699, 0, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	1371, 1372, 1373, 1374, 0, 720, 0, 709, 711, 712,
	713, 714, 1383, 715, 1384, 1299, 716, 717, 718, 719,
	710, 721, 722, 0, 0, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 1345, 732, 0, 0, 733, 734,
	735, 801, 1368, 1405, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 0, 0, 0,
	0, 747, 748, 805, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 1321, 1293, 1294, 1295, 1291, 1292,
	1304, 0, 3106, 0, 0, 0, 0, 0, 0, 3104,
	3105, 331, 332, 334, 333, 335, 336, 337, 338, 1305,
	339, 340, 0, 1303, 0, 0, 0, 1347, 1309, 0,
	0, 0, 341, 0, 342, 343, 344, 1387, 345, 346,
	347, 348, 349, 350, 351, 753, 1360, 0, 352, 1367,
	353, 1366, 0, 1377, 354, 355, 356, 357, 358, 359,
	360, 1311, 1346, 0, 361, 1407, 1408, 760, 0, 362,
	363, 1353, 0, 1334, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 1388, 389, 390, 391, 1337,
	1335, 1336, 1343, 1339, 1338, 1342, 392, 393, 394, 395,
	396, 1370, 397, 399, 1364, 1363, 0, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 1355, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 1286, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 1378,
	1379, 433, 434, 1300, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 1362, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 1389, 444, 445, 446,
	1375, 1376, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 1385, 0, 1310, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 1348, 1349, 1352, 560, 1391,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 1290, 327, 329,
	1390, 775, 477, 561, 478, 1357, 1358, 0, 1316, 0,
	479, 480, 482, 1392, 1350, 1393, 481, 483, 484, 1394,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 1386, 496, 1395,
	498, 499, 1396, 0, 500, 501, 502, 503, 504, 505,
	508, 1341, 1340, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 1397, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 1398, 553, 540, 0, 541, 330, 1399, 555, 556,
	557, 558, 1301, 1351, 559, 1365, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 1400, 572, 1401, 1380, 573, 574, 566,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 1381, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 1361,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 1402, 635, 636,
	637, 638, 639, 3698, 3699, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 1344,
	666, 791, 667, 647, 648, 668, 669, 1403, 670, 671,
	672, 673, 674, 675, 676, 1359, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	1406, 687, 688, 689, 690, 1382, 694, 695, 696, 697,
	0, 698, 699, 0, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 1371, 1372,
	1373, 1374, 0, 720, 0, 709, 711, 712, 713, 714,
	1383, 715, 1384, 1299, 716, 717, 718, 719, 710, 721,
	722, 0, 0, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 1345, 732, 0, 0, 733, 734, 735, 801,
	1368, 1405, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 0, 0, 0, 0, 747,
	748, 805, 749, 750, 751, 0, 0, 0, 0, 0,
	0, 0, 1321, 1293, 1294, 1295, 1291, 1292, 1304, 0,
	0, 0, 0, 0, 0, 0, 0, 2421, 2422, 331,
	332, 334, 333, 335, 336, 337, 338, 1305, 339, 340,
	0, 1303, 0, 0, 0, 1347, 1309, 0, 0, 0,
	341, 0, 342, 343, 344, 1387, 345, 346, 347, 348,
	349, 350, 351, 0, 1360, 0, 352, 1367, 353, 1366,
	0, 1377, 354, 355, 356, 357, 358, 359, 360, 1311,
	1346, 1275, 361, 1407, 1408, 760, 0, 362, 363, 1353,
	0, 1334, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 1388, 389, 390, 5544, 1337, 1335, 1336,
	1343, 1339, 1338, 1342, 392, 393, 394, 395, 396, 1370,
	397, 399, 1364, 1363, 1280, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 1355, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 1286, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 1378, 1379, 433,
	434, 1300, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 1362, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 1389, 444, 445, 446, 1375, 1376,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 1385, 0, 1310, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 1348, 1349, 1352, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 1290, 327, 329, 1390, 775,
	477, 561, 478, 1357, 1358, 0, 1316, 0, 479, 480,
	482, 0, 1350, 0, 481, 483, 484, 1394, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 1386, 496, 1395, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 1341,
	1340, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 1397, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 1398,
	553, 540, 1277, 541, 330, 0, 555, 556, 557, 558,
	1301, 1351, 559, 1365, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 1400, 572, 1401, 1380, 573, 574, 1287, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 1381,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 1361, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 1402, 635, 636, 637, 638,
	639, 1288, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 1344, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 1359, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 1406, 687,
	688, 689, 690, 1382, 694, 695, 696, 697, 0, 698,
	699, 1274, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 1371, 1372, 1373, 1374,
	0, 720, 0, 709, 711, 712, 713, 714, 1383, 715,
	1384, 1299, 716, 717, 718, 719, 710, 5543, 722, 0,
	1281, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	1345, 732, 0, 0, 733, 734, 735, 801, 1368, 1405,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 0, 0, 0, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 3125, 0,
	1321, 1293, 1294, 1295, 1291, 1292, 1304, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 1272, 331, 332, 334,
	333, 335, 336, 337, 338, 1305, 339, 340, 0, 1303,
	0, 0, 0, 1347, 1309, 0, 0, 0, 341, 0,
	342, 343, 344, 1387, 345, 346, 347, 348, 349, 350,
	351, 753, 1360, 0, 352, 1367, 353, 1366, 0, 1377,
	354, 355, 356, 357, 358, 359, 360, 0, 1346, 0,
	361, 1407, 1408, 760, 0, 362, 363, 1353, 0, 1334,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 1388, 389, 390, 391, 1337, 1335, 1336, 1343, 1339,
	1338, 1342, 392, 393, 394, 395, 396, 1370, 397, 399,
	1364, 1363, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 1355,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 764, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 1378, 1379, 433, 434, 1300,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 1362,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 1389, 444, 445, 446, 1375, 1376, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 1385,
	0, 1310, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 1348, 1349, 1352, 560, 1391, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 1290, 327, 329, 1390, 775, 477, 561,
	478, 1357, 1358, 0, 1316, 0, 479, 480, 482, 1392,
	1350, 1393, 481, 483, 484, 1394, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 1386, 496, 1395, 498, 499, 1396, 0,
	500, 501, 502, 503, 504, 505, 508, 1341, 1340, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 1397,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 1398, 553, 540,
	0, 541, 330, 1399, 555, 556, 557, 558, 1301, 1351,
	559, 1365, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 1400,
	572, 1401, 1380, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 1381, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 1361, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 1402, 635, 636, 637, 638, 639, 1288,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 1344, 666, 791, 667, 647,
	648, 668, 669, 1403, 670, 671, 672, 673, 674, 675,
	676, 1359, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 1406, 687, 688, 689,
	690, 1382, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 1371, 1372, 1373, 1374, 0, 720,
	0, 709, 711, 712, 713, 714, 1383, 715, 1384, 1299,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 1345, 732,
	0, 0, 733, 734, 735, 801, 1368, 1405, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 0, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 0, 0, 1873, 0, 1321, 1293, 1294, 1295, 1291,
	1292, 1304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 1305, 0, 0, 0, 1303, 1347, 1309,
	0, 0, 0, 341, 0, 342, 343, 344, 1387, 345,
	346, 347, 348, 349, 350, 351, 753, 1360, 0, 352,
	1367, 353, 1366, 0, 1377, 354, 355, 356, 357, 358,
	359, 360, 0, 1346, 0, 361, 1407, 1408, 760, 0,
	362, 363, 1353, 0, 1334, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 1388, 389, 390, 391,
	1337, 1335, 1336, 1343, 1339, 1338, 1342, 392, 393, 394,
	395, 396, 1370, 397, 399, 1364, 1363, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 1355, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	1378, 1379, 433, 434, 1300, 326, 0, 0, 0, 0,
	0, 435, 436, 437, 1362, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 1389, 444, 445,
	446, 1375, 1376, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 1385, 0, 1310, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 1348, 1349, 1352, 560,
	1391, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 1290, 327,
	329, 1390, 775, 477, 561, 478, 1357, 1358, 0, 1316,
	0, 479, 480, 482, 1392, 1350, 1393, 481, 483, 484,
	1394, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 1386, 496,
	1395, 498, 499, 1396, 0, 500, 501, 502, 503, 504,
	505, 508, 1341, 1340, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 1397, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 1398, 553, 540, 0, 541, 330, 1399, 555,
	556, 557, 558, 1301, 1351, 559, 1365, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 1400, 572, 1401, 1380, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 1381, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	1361, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 1402, 635,
	636, 637, 638, 639, 1288, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	1344, 666, 791, 667, 647, 648, 668, 669, 1403, 670,
	671, 672, 673, 674, 675, 676, 1359, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 1406, 687, 688, 689, 690, 1382, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 1371,
	1372, 1373, 1374, 0, 720, 0, 709, 711, 712, 713,
	714, 1383, 715, 1384, 1299, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 1345, 732, 0, 0, 733, 734, 735,
	801, 1368, 1405, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 0, 0, 0, 0,
	747, 748, 805, 749, 750, 751, 0, 0, 1610, 0,
	1321, 1293, 1294, 1295, 1291, 1292, 1304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 0, 339, 340, 1305, 0,
	0, 0, 1303, 1347, 1309, 0, 0, 0, 341, 0,
	342, 343, 344, 1387, 345, 346, 347, 348, 349, 350,
	351, 753, 1360, 0, 352, 1367, 353, 1366, 0, 1377,
	354, 355, 356, 357, 358, 359, 360, 0, 1346, 0,
	361, 1407, 1408, 760, 0, 362, 363, 1353, 0, 1334,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 1388, 389, 390, 391, 1337, 1335, 1336, 1343, 1339,
	1338, 1342, 392, 393, 394, 395, 396, 1370, 397, 399,
	1364, 1363, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 1355,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 764, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 1378, 1379, 433, 434, 1300,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 1362,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 1389, 444, 445, 446, 1375, 1376, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 1385,
	0, 1310, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 1348, 1349, 1352, 560, 1391, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 1290, 327, 329, 1390, 775, 477, 561,
	478, 1357, 1358, 0, 1316, 0, 479, 480, 482, 1392,
	1350, 1393, 481, 483, 484, 1394, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 1386, 496, 1395, 498, 499, 1396, 0,
	500, 501, 502, 503, 504, 505, 508, 1341, 1340, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 1397,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 1398, 553, 540,
	0, 541, 330, 1399, 555, 556, 557, 558, 1301, 1351,
	559, 1365, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 1400,
	572, 1401, 1380, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 1381, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 1361, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 1402, 635, 636, 637, 638, 639, 1288,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 1344, 666, 791, 667, 647,
	648, 668, 669, 1403, 670, 671, 672, 673, 674, 675,
	676, 1359, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 1406, 687, 688, 689,
	690, 1382, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 1371, 1372, 1373, 1374, 0, 720,
	0, 709, 711, 712, 713, 714, 1383, 715, 1384, 1299,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 1345, 732,
	0, 0, 733, 734, 735, 801, 1368, 1405, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 0, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 1262, 0, 1446, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 1305, 0, 0, 1347, 1303, 0, 0,
	0, 341, 0, 342, 343, 344, 1387, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 0, 757, 354, 355, 356, 357, 358, 359, 360,
	0, 1346, 0, 361, 758, 759, 760, 0, 362, 363,
	1353, 0, 1334, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 1388, 389, 390, 391, 1337, 1335,
	1336, 1343, 1339, 1338, 1342, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 1378, 1379,
	433, 434, 0, 326, 0, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 1389, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 1385, 0, 771, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 1348, 1349, 1352, 560, 1391, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 1290, 327, 329, 1390,
	775, 477, 561, 478, 776, 777, 0, 778, 0, 479,
	480, 482, 1392, 1350, 1393, 481, 483, 484, 1394, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	1432, 493, 495, 494, 0, 497, 1386, 496, 1395, 498,
	499, 1396, 0, 500, 501, 502, 503, 504, 505, 508,
	1341, 1340, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 1397, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	1398, 553, 540, 0, 541, 330, 1399, 555, 556, 557,
	558, 0, 1351, 559, 782, 562, 563, 0, 0, 564,
	0, 565, 0, 1438, 567, 568, 569, 0, 0, 570,
	571, 783, 1400, 572, 1401, 1380, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	1381, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 1402, 635, 636, 637,
	638, 639, 790, 1440, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 281, 661, 662, 660, 663, 664, 665, 1344, 666,
	791, 667, 647, 648, 668, 669, 1403, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 1382, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 283, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 795, 796, 797,
	798, 0, 720, 0, 709, 711, 712, 713, 714, 1383,
	715, 1384, 0, 716, 717, 718, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 1345, 732, 0, 0, 733, 734, 735, 1995, 802,
	803, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 0, 0, 0, 275, 747, 748,
	805, 749, 750, 751, 1446, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 334, 333, 335, 336, 337, 338, 0,
	339, 340, 0, 0, 1436, 0, 2248, 1347, 0, 0,
	0, 0, 341, 0, 342, 343, 344, 1387, 345, 346,
	347, 348, 349, 350, 351, 753, 754, 0, 352, 755,
	353, 756, 0, 757, 354, 355, 356, 357, 358, 359,
	360, 0, 1346, 0, 361, 758, 759, 760, 0, 362,
	363, 1353, 0, 1334, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 1388, 389, 390, 391, 1337,
	1335, 1336, 1343, 1339, 1338, 1342, 392, 393, 394, 395,
	396, 0, 397, 399, 762, 763, 0, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 411, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 764, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 1378,
	1379, 433, 434, 0, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 767, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 1389, 444, 445, 446,
	768, 769, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 1385, 0, 771, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 1348, 1349, 1352, 560, 1391,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 1290, 327, 329,
	1390, 775, 477, 561, 478, 776, 777, 0, 778, 0,
	479, 480, 482, 1392, 1350, 1393, 481, 483, 484, 1394,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 1432, 493, 495, 494, 0, 497, 1386, 496, 1395,
	498, 499, 1396, 0, 500, 501, 502, 503, 504, 505,
	508, 1341, 1340, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 1397, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 1398, 553, 540, 0, 541, 330, 1399, 555, 556,
	557, 558, 0, 1351, 559, 782, 562, 563, 0, 0,
	564, 0, 565, 0, 1438, 567, 568, 569, 0, 0,
	570, 571, 783, 1400, 572, 1401, 1380, 573, 574, 566,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 1381, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 789,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 1402, 635, 636,
	637, 638, 639, 790, 1440, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 281, 661, 662, 660, 663, 664, 665, 1344,
	666, 791, 667, 647, 648, 668, 669, 1403, 670, 671,
	672, 673, 674, 675, 676, 792, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	793, 687, 688, 689, 690, 1382, 694, 695, 696, 697,
	0, 698, 699, 0, 693, 684, 283, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 795, 796,
	797, 798, 0, 720, 0, 709, 711, 712, 713, 714,
	1383, 715, 1384, 0, 716, 717, 718, 719, 710, 721,
	722, 0, 0, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 1345, 732, 0, 0, 733, 734, 735, 1995,
	802, 803, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 0, 0, 0, 275, 747,
	748, 805, 749, 750, 751, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3868,
	0, 1446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1436, 0, 2248, 331, 332,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 0, 0, 1347, 0, 0, 0, 0, 341,
	0, 342, 343, 344, 1387, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 1346,
	0, 361, 758, 759, 760, 0, 362, 363, 1353, 0,
	1334, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 1388, 389, 390, 391, 1337, 1335, 1336, 1343,
	1339, 1338, 1342, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 1378, 1379, 433, 434,
	0, 326, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 1389, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	1385, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 1348, 1349, 1352, 560, 1391, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 1290, 327, 329, 1390, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	1392, 1350, 1393, 481, 483, 484, 1394, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 1432, 493,
	495, 494, 0, 497, 1386, 496, 1395, 498, 499, 1396,
	0, 500, 501, 502, 503, 504, 505, 508, 1341, 1340,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	1397, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 1398, 553,
	540, 0, 541, 330, 1399, 555, 556, 557, 558, 0,
	1351, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 1438, 567, 568, 569, 0, 0, 570, 571, 783,
	1400, 572, 1401, 1380, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 1381, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 1402, 635, 636, 637, 638, 639,
	790, 1440, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 1344, 666, 791, 667,
	647, 648, 668, 669, 1403, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 1382, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 1383, 715, 1384,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 1345,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 0, 1428, 0, 1446, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 1347, 0,
	0, 0, 1436, 341, 1434, 342, 343, 344, 1387, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 1346, 0, 361, 758, 759, 760, 0,
	362, 363, 1353, 0, 1334, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 1388, 389, 390, 391,
	1337, 1335, 1336, 1343, 1339, 1338, 1342, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	1378, 1379, 433, 434, 0, 326, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 1389, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 1385, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 1348, 1349, 1352, 560,
	1391, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 1290, 327,
	329, 1390, 775, 477, 561, 478, 776, 777, 0, 778,
	0, 479, 480, 482, 1392, 1350, 1393, 481, 483, 484,
	1394, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 1432, 493, 495, 494, 0, 497, 1386, 496,
	1395, 498, 499, 1396, 0, 500, 501, 502, 503, 504,
	505, 508, 1341, 1340, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 1397, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 1398, 553, 540, 0, 541, 330, 1399, 555,
	556, 557, 558, 0, 1351, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 1438, 567, 568, 569, 0,
	0, 570, 571, 783, 1400, 572, 1401, 1380, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 1381, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 1402, 635,
	636, 637, 638, 639, 790, 1440, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	1344, 666, 791, 667, 647, 648, 668, 669, 1403, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 1382, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 795,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 1383, 715, 1384, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 1345, 732, 0, 0, 733, 734, 735,
	801, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 0, 0, 0, 1446,
	747, 748, 805, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 1436, 341, 1434, 342,
	343, 344, 1387, 345, 346, 347, 348, 349, 350, 351,
	753, 754, 0, 352, 755, 353, 756, 0, 757, 354,
	355, 356, 357, 358, 359, 360, 0, 1346, 0, 361,
	758, 759, 760, 0, 362, 363, 1353, 0, 1334, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	1388, 389, 390, 391, 1337, 1335, 1336, 1343, 1339, 1338,
	1342, 392, 393, 394, 395, 396, 0, 397, 399, 762,
	763, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 764, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 1378, 1379, 433, 434, 0, 326,
	0, 0, 0, 0, 0, 435, 436, 437, 767, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 1389, 444, 445, 446, 768, 769, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 1385, 0,
	771, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	1348, 1349, 1352, 560, 1391, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 1290, 327, 329, 1390, 775, 477, 561, 478,
	776, 777, 0, 778, 0, 479, 480, 482, 1392, 1350,
	1393, 481, 483, 484, 1394, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 1432, 493, 495, 494,
	0, 497, 1386, 496, 1395, 498, 499, 1396, 0, 500,
	501, 502, 503, 504, 505, 508, 1341, 1340, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 1397, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 1398, 553, 540, 0,
	541, 330, 1399, 555, 556, 557, 558, 0, 1351, 559,
	782, 562, 563, 0, 0, 564, 0, 565, 0, 1438,
	567, 568, 569, 0, 0, 570, 571, 783, 1400, 572,
	1401, 1380, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 785, 587,
	588, 589, 786, 590, 591, 592, 1381, 593, 788, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 789, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 1402, 635, 636, 637, 638, 639, 790, 1440,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 1344, 666, 791, 667, 647, 648,
	668, 669, 1403, 670, 671, 672, 673, 674, 675, 676,
	792, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 793, 687, 688, 689, 690,
	1382, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 795, 796, 797, 798, 0, 720, 0,
	709, 711, 712, 713, 714, 1383, 715, 1384, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 1345, 732, 0,
	0, 733, 734, 735, 801, 802, 803, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 804, 744, 745, 746,
	0, 0, 0, 1446, 747, 748, 805, 749, 750, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	1436, 341, 1434, 342, 343, 344, 1387, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 0, 757, 354, 355, 356, 357, 358, 359, 360,
	0, 1346, 0, 361, 758, 759, 760, 0, 362, 363,
	1353, 0, 1334, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 1388, 389, 390, 391, 1337, 1335,
	1336, 1343, 1339, 1338, 1342, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 1378, 1379,
	433, 434, 0, 326, 0, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 1389, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 1385, 0, 771, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 1348, 1349, 1352, 560, 1391, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 1290, 327, 329, 1390,
	775, 477, 561, 478, 776, 777, 0, 778, 0, 479,
	480, 482, 1392, 1350, 1393, 481, 483, 484, 1394, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 1386, 496, 1395, 498,
	499, 1396, 0, 500, 501, 502, 503, 504, 505, 508,
	1341, 1340, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 1397, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	1398, 553, 540, 0, 541, 330, 1399, 555, 556, 557,
	558, 0, 1351, 559, 782, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 569, 0, 0, 570,
	571, 783, 1400, 572, 1401, 1380, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	1381, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 1402, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 0, 661, 662, 660, 663, 664, 665, 1344, 666,
	791, 667, 647, 648, 668, 669, 1403, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 1382, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 0, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 795, 796, 797,
	798, 0, 720, 0, 709, 711, 712, 713, 714, 1383,
	715, 1384, 0, 716, 717, 718, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 1345, 732, 0, 0, 733, 734, 735, 801, 802,
	803, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 0, 0, 0, 1446, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 334, 333, 335, 336,
	337, 338, 0, 339, 340, 0, 0, 0, 0, 0,
	1347, 0, 0, 0, 0, 341, 4915, 342, 343, 344,
	1387, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 0, 757, 354, 355, 356,
	357, 358, 359, 360, 0, 1346, 0, 361, 758, 759,
	760, 0, 362, 363, 1353, 0, 1334, 0, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 0, 373, 374,
	375, 372, 376, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 387, 388, 1388, 389,
	390, 391, 1337, 1335, 1336, 1343, 1339, 1338, 1342, 392,
	393, 394, 395, 396, 0, 397, 399, 762, 763, 0,
	402, 404, 398, 400, 0, 403, 401, 405, 406, 0,
	407, 408, 409, 0, 0, 410, 411, 412, 0, 413,
	414, 415, 0, 416, 417, 418, 0, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 1378, 1379, 433, 434, 0, 326, 0, 0,
	0, 0, 0, 435, 436, 437, 767, 0, 0, 0,
	438, 0, 439, 440, 441, 0, 442, 443, 0, 1389,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 1385, 0, 771, 457,
	0, 458, 459, 460, 461, 462, 463, 464, 1348, 1349,
	1352, 560, 1391, 465, 466, 467, 0, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 0,
	1290, 327, 329, 1390, 775, 477, 561, 478, 776, 777,
	0, 778, 0, 479, 480, 482, 1392, 1350, 1393, 481,
	483, 484, 1394, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 495, 494, 0, 497,
	1386, 496, 1395, 498, 499, 1396, 0, 500, 501, 502,
	503, 504, 505, 508, 1341, 1340, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 1397, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 1398, 553, 540, 0, 541, 330,
	1399, 555, 556, 557, 558, 0, 1351, 559, 782, 562,
	563, 0, 0, 564, 0, 565, 0, 0, 567, 568,
	569, 0, 0, 570, 571, 783, 1400, 572, 1401, 1380,
	573, 574, 566, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 1381, 593, 788, 594, 595, 0,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 606, 789, 607, 608, 610, 609, 611, 0, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 0, 631, 632, 630, 633, 634,
	1402, 635, 636, 637, 638, 639, 790, 1440, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 654,
	655, 656, 657, 659, 658, 0, 661, 662, 660, 663,
	664, 665, 1344, 666, 791, 667, 647, 648, 668, 669,
	1403, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 0, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 1382, 694,
	695, 696, 697, 0, 698, 699, 0, 693, 684, 0,
	700, 701, 702, 703, 704, 705, 0, 706, 707, 0,
	708, 795, 796, 797, 798, 0, 720, 0, 709, 711,
	712, 713, 714, 1383, 715, 1384, 0, 716, 717, 718,
	719, 710, 721, 722, 0, 0, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 1345, 732, 0, 0, 733,
	734, 735, 801, 802, 803, 0, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 0, 0,
	0, 323, 747, 748, 805, 749, 750, 751, 0, 0,
	0, 2947, 2948, 2949, 2966, 2967, 2968, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 2969, 0, 752, 0, 0, 0, 2970, 341,
	2140, 342, 343, 344, 0, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	2125, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	2959, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	2955, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 0, 0, 2960, 2961, 2962, 2963, 435, 436, 437,
	767, 0, 0, 2954, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 0, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 772, 773, 774, 560, 0, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 0, 0, 0, 0, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	0, 779, 0, 481, 483, 484, 0, 485, 0, 2964,
	2965, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 2957, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	0, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 0, 553,
	540, 0, 541, 0, 0, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	0, 572, 0, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 0, 635, 636, 637, 638, 639,
	790, 640, 2958, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 0, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	2124, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 0, 0, 0, 0, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1262, 0, 1631, 2944, 2945, 2946, 2971, 2956, 2950,
	0, 2952, 2953, 2951, 2938, 2939, 2940, 2941, 2942, 2943,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 341, 0, 342, 343, 344, 1387, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 0, 757, 354, 355, 356, 357, 358, 359, 360,
	0, 0, 0, 361, 758, 759, 760, 0, 362, 363,
	761, 0, 1636, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 1388, 389, 390, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 765, 766,
	433, 434, 0, 326, 0, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 1389, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 770, 0, 771, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 772, 773, 774, 560, 1391, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 0, 0, 0, 1390,
	775, 477, 561, 478, 776, 777, 0, 778, 0, 479,
	480, 482, 1392, 779, 1393, 481, 483, 484, 1394, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 780, 496, 1395, 498,
	499, 1396, 0, 500, 501, 502, 503, 504, 505, 508,
	0, 0, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 1397, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	1398, 553, 540, 0, 541, 0, 1399, 555, 556, 557,
	558, 0, 781, 559, 782, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 569, 0, 0, 570,
	571, 783, 1400, 572, 1401, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 1402, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 281, 661, 662, 660, 663, 664, 665, 0, 666,
	791, 667, 647, 648, 668, 669, 1403, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 283, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 795, 796, 797,
	798, 0, 720, 0, 709, 711, 712, 713, 714, 799,
	715, 800, 0, 716, 717, 718, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 0, 732, 0, 0, 733, 734, 735, 1995, 802,
	803, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 0, 0, 0, 275, 747, 748,
	805, 749, 750, 751, 0, 1992, 276, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 334, 333, 335, 336,
	337, 338, 0, 339, 340, 0, 222, 0, 0, 0,
	752, 0, 0, 0, 0, 341, 0, 342, 343, 344,
	1387, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 0, 757, 354, 355, 356,
	357, 358, 359, 360, 0, 0, 0, 361, 758, 759,
	760, 0, 362, 363, 761, 0, 1636, 0, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 0, 373, 374,
	375, 372, 376, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 387, 388, 1388, 389,
	390, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 395, 396, 0, 397, 399, 762, 763, 0,
	402, 404, 398, 400, 0, 403, 401, 405, 406, 0,
	407, 408, 409, 0, 0, 410, 411, 412, 0, 413,
	414, 415, 0, 416, 417, 418, 0, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 765, 766, 433, 434, 0, 326, 0, 0,
	0, 0, 0, 435, 436, 437, 767, 0, 0, 0,
	438, 0, 439, 440, 441, 0, 442, 443, 0, 1389,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 770, 0, 771, 457,
	0, 458, 459, 460, 461, 462, 463, 464, 772, 773,
	774, 560, 1391, 465, 466, 467, 0, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 0,
	0, 0, 0, 1390, 775, 477, 561, 478, 776, 777,
	0, 778, 0, 479, 480, 482, 1392, 779, 1393, 481,
	483, 484, 1394, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 495, 494, 0, 497,
	780, 496, 1395, 498, 499, 1396, 0, 500, 501, 502,
	503, 504, 505, 508, 0, 0, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 1397, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 1398, 553, 540, 0, 541, 0,
	1399, 555, 556, 557, 558, 0, 781, 559, 782, 562,
	563, 0, 0, 564, 0, 565, 0, 0, 567, 568,
	569, 0, 0, 570, 571, 783, 1400, 572, 1401, 784,
	573, 574, 566, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 787, 593, 788, 594, 595, 0,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 606, 789, 607, 608, 610, 609, 611, 0, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 0, 631, 632, 630, 633, 634,
	1402, 635, 636, 637, 638, 639, 790, 640, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 654,
	655, 656, 657, 659, 658, 281, 661, 662, 660, 663,
	664, 665, 0, 666, 791, 667, 647, 648, 668, 669,
	1403, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 0, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 794, 694,
	695, 696, 697, 0, 698, 699, 0, 693, 684, 283,
	700, 701, 702, 703, 704, 705, 0, 706, 707, 0,
	708, 795, 796, 797, 798, 0, 720, 0, 709, 711,
	712, 713, 714, 799, 715, 800, 0, 716, 717, 718,
	719, 710, 721, 722, 0, 0, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 0, 732, 0, 0, 733,
	734, 735, 1995, 802, 803, 0, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 0, 0,
	0, 275, 747, 748, 805, 749, 750, 751, 1631, 1630,
	276, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	222, 752, 0, 0, 0, 0, 341, 0, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 1636, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	1389, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 772,
	773, 774, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 0, 0, 0, 1390, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 1392, 779, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 0, 541,
	0, 1399, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 0,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 1631,
	1630, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 2019, 752, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 1387, 345, 346, 347, 348, 349, 350, 351,
	753, 754, 0, 352, 755, 353, 756, 0, 757, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	758, 759, 760, 0, 362, 363, 761, 0, 1636, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	1388, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 0, 397, 399, 762,
	763, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 764, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 765, 766, 433, 434, 0, 326,
	0, 0, 0, 0, 0, 435, 436, 437, 767, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 1389, 444, 445, 446, 768, 769, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 770, 0,
	771, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	772, 773, 774, 560, 1391, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 1390, 775, 477, 561, 478,
	776, 777, 0, 778, 0, 479, 480, 482, 1392, 779,
	1393, 481, 483, 484, 1394, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 780, 496, 1395, 498, 499, 1396, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 1397, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 1398, 553, 540, 0,
	541, 0, 1399, 555, 556, 557, 558, 0, 781, 559,
	782, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 783, 1400, 572,
	1401, 784, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 785, 587,
	588, 589, 786, 590, 591, 592, 787, 593, 788, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 789, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 1402, 635, 636, 637, 638, 639, 790, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 0, 666, 791, 667, 647, 648,
	668, 669, 1403, 670, 671, 672, 673, 674, 675, 676,
	792, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 793, 687, 688, 689, 690,
	794, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 795, 796, 797, 798, 0, 720, 0,
	709, 711, 712, 713, 714, 799, 715, 800, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 801, 802, 803, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 804, 744, 745, 746,
	0, 0, 0, 0, 747, 748, 805, 749, 750, 751,
	1631, 2713, 0, 0, 0, 0, 2714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 0, 339, 340, 0, 0,
	0, 0, 4280, 752, 0, 0, 0, 0, 341, 0,
	342, 343, 344, 1387, 345, 346, 347, 348, 349, 350,
	351, 753, 754, 0, 352, 755, 353, 756, 0, 757,
	354, 355, 356, 357, 358, 359, 360, 0, 0, 0,
	361, 758, 759, 760, 0, 362, 363, 761, 0, 1636,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 1388, 389, 390, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 395, 396, 0, 397, 399,
	762, 763, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 411,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 764, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 765, 766, 433, 434, 0,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 767,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 1389, 444, 445, 446, 768, 769, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 770,
	0, 771, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 772, 773, 774, 560, 1391, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 0, 0, 0, 1390, 775, 477, 561,
	478, 776, 777, 0, 778, 0, 479, 480, 482, 1392,
	779, 1393, 481, 483, 484, 1394, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 2712, 495,
	494, 0, 497, 780, 496, 1395, 498, 499, 1396, 0,
	500, 501, 502, 503, 504, 505, 508, 0, 0, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 1397,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 1398, 553, 540,
	0, 541, 0, 1399, 555, 556, 557, 558, 0, 781,
	559, 782, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 1400,
	572, 1401, 784, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 787, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 789, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 1402, 635, 636, 637, 638, 639, 790,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 0, 666, 791, 667, 647,
	648, 668, 669, 1403, 670, 671, 672, 673, 674, 675,
	676, 792, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 793, 687, 688, 689,
	690, 794, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 795, 796, 797, 798, 0, 720,
	0, 709, 711, 712, 713, 714, 799, 715, 800, 0,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 0, 732,
	0, 0, 733, 734, 735, 801, 802, 803, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 0, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 1631, 1630, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 0, 2019, 752, 0, 0, 0, 0, 341,
	0, 342, 343, 344, 1387, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	1636, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 1388, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 326, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 1389, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 772, 773, 774, 560, 1391, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 0, 0, 0, 1390, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	1392, 779, 1393, 481, 483, 484, 1394, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 1395, 498, 499, 1396,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	1397, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 1398, 553,
	540, 0, 541, 0, 1399, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	1400, 572, 1401, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 1402, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 1403, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 0, 1262, 0, 323, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 341, 2001, 342, 343, 344, 0, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 758, 759, 760, 0,
	362, 363, 761, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 0, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 770, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 772, 773, 774, 560,
	0, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 0, 0,
	0, 0, 775, 477, 561, 478, 776, 777, 0, 778,
	0, 479, 480, 482, 0, 779, 0, 481, 483, 484,
	0, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 780, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 0, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 0, 553, 540, 0, 541, 0, 0, 555,
	556, 557, 558, 0, 781, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 0, 572, 0, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 0, 635,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 281, 661, 662, 660, 663, 664, 665,
	0, 666, 791, 667, 647, 648, 668, 669, 0, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 283, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 795,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 799, 715, 800, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	1995, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 0, 0, 0, 275,
	747, 748, 805, 749, 750, 751, 323, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 334, 333, 335, 336, 337,
	338, 0, 339, 340, 0, 0, 0, 0, 222, 752,
	0, 0, 0, 0, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 348, 349, 350, 351, 753, 754, 0,
	352, 755, 353, 756, 0, 757, 354, 355, 356, 357,
	358, 359, 360, 0, 0, 0, 361, 758, 759, 760,
	0, 362, 363, 761, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 395, 396, 0, 397, 399, 762, 763, 0, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 411, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 764, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 765, 766, 433, 434, 0, 326, 0, 0, 0,
	0, 0, 435, 436, 437, 767, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 0, 444,
	445, 446, 768, 769, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 770, 0, 771, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 772, 773, 774,
	560, 0, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 328,
	327, 329, 0, 775, 477, 561, 478, 776, 777, 0,
	778, 0, 479, 480, 482, 0, 779, 0, 481, 483,
	484, 0, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 780,
	496, 0, 498, 499, 0, 0, 500, 501, 502, 503,
	504, 505, 508, 0, 0, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 0, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 0, 553, 540, 0, 541, 330, 0,
	555, 556, 557, 558, 0, 781, 559, 782, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 0, 572, 0, 784, 573,
	574, 566, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 787, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 789, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 0,
	635, 636, 637, 638, 639, 790, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 0, 666, 791, 667, 647, 648, 668, 669, 0,
	670, 671, 672, 673, 674, 675, 676, 792, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 793, 687, 688, 689, 690, 794, 694, 695,
	696, 697, 0, 698, 699, 0, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	795, 796, 797, 798, 0, 720, 0, 709, 711, 712,
	713, 714, 799, 715, 800, 0, 716, 717, 718, 719,
	710, 721, 722, 0, 0, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 0, 732, 0, 0, 733, 734,
	735, 801, 802, 803, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 0, 0, 0,
	323, 747, 748, 805, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 0, 339, 340, 0, 0,
	0, 0, 0, 752, 0, 0, 0, 0, 341, 2262,
	342, 343, 344, 0, 345, 346, 347, 348, 349, 350,
	351, 753, 754, 0, 352, 755, 353, 756, 0, 757,
	354, 355, 356, 357, 358, 359, 360, 0, 0, 0,
	361, 758, 759, 760, 0, 362, 363, 761, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 395, 396, 0, 397, 399,
	762, 763, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 411,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 764, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 765, 766, 433, 434, 0,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 767,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 0, 444, 445, 446, 768, 769, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 770,
	0, 771, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 772, 773, 774, 560, 0, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 328, 327, 329, 0, 775, 477, 561,
	478, 776, 777, 0, 778, 0, 479, 480, 482, 0,
	779, 0, 481, 483, 484, 0, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 780, 496, 0, 498, 499, 0, 0,
	500, 501, 502, 503, 504, 505, 508, 0, 0, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 0,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 0, 553, 540,
	0, 541, 330, 0, 555, 556, 557, 558, 0, 781,
	559, 782, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 0,
	572, 0, 784, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 787, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 789, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 0, 635, 636, 637, 638, 639, 790,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 0, 666, 791, 667, 647,
	648, 668, 669, 0, 670, 671, 672, 673, 674, 675,
	676, 792, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 793, 687, 688, 689,
	690, 794, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 795, 796, 797, 798, 0, 720,
	0, 709, 711, 712, 713, 714, 799, 715, 800, 0,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 0, 732,
	0, 0, 733, 734, 735, 801, 802, 803, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 0, 323, 0, 0, 747, 748, 805, 749, 750,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	341, 1989, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 0, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 772, 773, 774, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 328, 327, 329, 0, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 0, 779, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 330, 0, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 0, 572, 0, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 795, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 0, 323, 3326, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 334, 333, 335, 336, 337, 338, 0,
	339, 340, 0, 0, 0, 0, 0, 752, 0, 0,
	0, 0, 341, 4230, 342, 343, 344, 0, 345, 346,
	347, 348, 349, 350, 351, 753, 754, 0, 352, 755,
	353, 756, 0, 757, 354, 355, 356, 357, 358, 359,
	360, 0, 0, 0, 361, 758, 759, 760, 0, 362,
	363, 761, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 395,
	396, 0, 397, 399, 762, 763, 0, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 411, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 764, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 765,
	766, 433, 434, 0, 0, 0, 0, 0, 0, 0,
	435, 436, 437, 767, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 0, 444, 445, 446,
	768, 769, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 770, 0, 771, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 772, 773, 774, 560, 0,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 0, 0, 0,
	0, 775, 477, 561, 478, 776, 777, 0, 778, 0,
	479, 480, 482, 0, 779, 0, 481, 483, 484, 0,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 780, 496, 0,
	498, 499, 0, 0, 500, 501, 502, 503, 504, 505,
	508, 0, 0, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 0, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 0, 553, 540, 0, 541, 0, 0, 555, 556,
	557, 558, 0, 781, 559, 782, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 0, 572, 0, 784, 573, 574, 566,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 787, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 789,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 0, 635, 636,
	637, 638, 639, 790, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 0,
	666, 791, 667, 647, 648, 668, 669, 0, 670, 671,
	672, 673, 674, 675, 676, 792, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	793, 687, 688, 689, 690, 794, 694, 695, 696, 697,
	0, 698, 699, 0, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 795, 796,
	797, 798, 0, 720, 0, 709, 711, 712, 713, 714,
	799, 715, 800, 0, 716, 717, 718, 719, 710, 721,
	722, 0, 0, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 0, 732, 0, 0, 733, 734, 735, 801,
	802, 803, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 0, 0, 0, 1446, 747,
	748, 805, 749, 750, 751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 341, 5732, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 1346, 0, 361, 758,
	759, 760, 0, 362, 363, 1353, 0, 1334, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 391, 1337, 1335, 1336, 1343, 1339, 1338, 1342,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 1378, 1379, 433, 434, 0, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	1389, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 1385, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 1348,
	1349, 1352, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 1290, 327, 329, 1390, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 1392, 1350, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 1386, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 1341, 1340, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 0, 541,
	330, 1399, 555, 556, 557, 558, 0, 1351, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	1380, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 1381, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 1344, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 1382,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 1383, 715, 1384, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 1345, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 3272,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 1387, 345, 346, 347, 348, 349, 350, 351,
	0, 2317, 0, 352, 2324, 353, 2323, 0, 2332, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	2335, 2336, 0, 0, 362, 363, 0, 0, 1636, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	1388, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 1370, 397, 399, 2321,
	2320, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 1355, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 0, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 0, 0, 433, 434, 0, 326,
	0, 0, 0, 0, 0, 435, 436, 437, 2319, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 1389, 444, 445, 446, 2330, 2331, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 0, 0,
	0, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	0, 0, 0, 560, 1391, 465, 466, 467, 3266, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 1390, 3268, 477, 561, 478,
	2314, 2315, 0, 2310, 0, 479, 480, 482, 1392, 0,
	1393, 481, 483, 484, 1394, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 0, 496, 1395, 498, 499, 1396, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 1397, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 1398, 553, 540, 0,
	541, 0, 1399, 555, 556, 557, 558, 0, 0, 559,
	2322, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 3267, 1400, 572,
	1401, 0, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 2307, 587,
	588, 589, 2308, 590, 591, 592, 0, 593, 0, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 2318, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 1402, 635, 636, 637, 638, 639, 0, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 0, 666, 0, 667, 647, 648,
	668, 669, 1403, 670, 671, 672, 673, 674, 675, 676,
	2316, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 2334, 687, 688, 689, 690,
	0, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 2326, 2327, 2328, 2329, 0, 720, 0,
	709, 711, 712, 713, 714, 0, 715, 0, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 0, 2325, 2333, 3269, 737, 738,
	736, 739, 740, 743, 741, 742, 0, 744, 745, 746,
	0, 0, 0, 0, 747, 748, 0, 749, 750, 751,
	0, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 0, 3261, 752, 0, 2303, 0, 0, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 0, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 772, 773, 774, 560, 0, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 0, 0, 0, 0, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	0, 779, 0, 481, 483, 484, 0, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	0, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 0, 553,
	540, 0, 541, 0, 0, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	0, 572, 0, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 0, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 0, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 0, 0, 0, 3272, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 3660, 342, 343, 344, 1387, 345,
	346, 347, 348, 349, 350, 351, 0, 2317, 0, 352,
	2324, 353, 2323, 0, 2332, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 2335, 2336, 0, 0,
	362, 363, 0, 0, 1636, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 1388, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 1370, 397, 399, 2321, 2320, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 1355, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 0, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	0, 0, 433, 434, 0, 326, 0, 0, 0, 0,
	0, 435, 436, 437, 2319, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 1389, 444, 445,
	446, 2330, 2331, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 0, 0, 0, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 0, 0, 0, 560,
	1391, 465, 466, 467, 3266, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 0, 0,
	0, 1390, 3268, 477, 561, 478, 2314, 2315, 0, 2310,
	0, 479, 480, 482, 1392, 0, 1393, 481, 483, 484,
	1394, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 0, 496,
	1395, 498, 499, 1396, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 1397, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 1398, 553, 540, 0, 541, 0, 1399, 555,
	556, 557, 558, 0, 0, 559, 2322, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 3267, 1400, 572, 1401, 0, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 2307, 587, 588, 589, 2308, 590,
	591, 592, 0, 593, 0, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	2318, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 1402, 635,
	636, 637, 638, 639, 0, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	0, 666, 0, 667, 647, 648, 668, 669, 1403, 670,
	671, 672, 673, 674, 675, 676, 2316, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 2334, 687, 688, 689, 690, 0, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 2326,
	2327, 2328, 2329, 0, 720, 0, 709, 711, 712, 713,
	714, 0, 715, 0, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	0, 2325, 2333, 3269, 737, 738, 736, 739, 740, 743,
	741, 742, 0, 744, 745, 746, 0, 0, 0, 323,
	747, 748, 0, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 2303, 345, 346, 347, 348, 349, 350, 351,
	753, 754, 0, 352, 755, 353, 756, 0, 757, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	758, 759, 760, 0, 362, 363, 761, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 0, 397, 399, 762,
	763, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 764, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 765, 766, 433, 434, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 437, 767, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 0, 444, 445, 446, 768, 769, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 770, 0,
	771, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	772, 773, 774, 560, 0, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 0, 775, 477, 561, 478,
	776, 777, 0, 778, 0, 479, 480, 482, 0, 779,
	0, 481, 483, 484, 0, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 780, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 0, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 0, 553, 540, 0,
	541, 0, 0, 555, 556, 557, 558, 0, 781, 559,
	782, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 783, 0, 572,
	0, 784, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 785, 587,
	588, 589, 786, 590, 591, 592, 787, 593, 788, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 789, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 0, 635, 636, 637, 638, 639, 790, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 0, 666, 791, 667, 647, 648,
	668, 669, 0, 670, 671, 672, 673, 674, 675, 676,
	792, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 793, 687, 688, 689, 690,
	794, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 795, 796, 797, 798, 0, 720, 0,
	709, 711, 712, 713, 714, 799, 715, 800, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 801, 802, 803, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 804, 744, 745, 746,
	0, 0, 0, 323, 747, 748, 805, 749, 750, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 341, 4370, 342, 343, 344, 0, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 0, 757, 354, 355, 356, 357, 358, 359, 360,
	0, 0, 0, 361, 758, 759, 760, 0, 362, 363,
	761, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 765, 766,
	433, 434, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 0, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 770, 0, 771, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 772, 773, 774, 560, 0, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 0, 0, 0, 0,
	775, 477, 561, 478, 776, 777, 0, 778, 0, 479,
	480, 482, 0, 779, 0, 481, 483, 484, 0, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 780, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 503, 504, 505, 508,
	0, 0, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 0, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	0, 553, 540, 0, 541, 0, 0, 555, 556, 557,
	558, 0, 781, 559, 782, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 569, 0, 0, 570,
	571, 783, 0, 572, 0, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 0, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 0, 661, 662, 660, 663, 664, 665, 0, 666,
	791, 667, 647, 648, 668, 669, 0, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 0, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 795, 796, 797,
	798, 0, 720, 0, 709, 711, 712, 713, 714, 799,
	715, 800, 0, 716, 717, 718, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 0, 732, 0, 0, 733, 734, 735, 801, 802,
	803, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 0, 1145, 0, 1040, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 334, 333, 335, 336,
	337, 338, 0, 339, 340, 0, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 341, 2792, 342, 343, 344,
	0, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 0, 757, 354, 355, 356,
	357, 358, 359, 360, 0, 0, 0, 361, 758, 759,
	760, 0, 362, 363, 761, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 0, 373, 374,
	375, 372, 376, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 1047, 396, 0, 397, 399, 762, 763, 0,
	402, 404, 398, 400, 0, 403, 401, 405, 406, 0,
	407, 408, 409, 0, 0, 410, 411, 412, 0, 413,
	414, 415, 0, 416, 417, 418, 0, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 765, 766, 433, 434, 0, 326, 0, 0,
	0, 0, 0, 435, 436, 437, 767, 0, 0, 0,
	438, 0, 439, 440, 441, 0, 442, 443, 1142, 0,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 770, 0, 771, 457,
	0, 458, 459, 460, 461, 462, 463, 464, 772, 773,
	774, 560, 0, 465, 466, 467, 0, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 0,
	328, 327, 329, 0, 775, 477, 561, 478, 776, 777,
	0, 778, 0, 479, 480, 482, 0, 779, 0, 481,
	483, 484, 0, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 495, 494, 0, 497,
	780, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	503, 504, 505, 508, 0, 0, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 0, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 0, 553, 540, 0, 541, 330,
	0, 555, 556, 557, 558, 0, 781, 559, 782, 562,
	563, 0, 0, 564, 0, 565, 0, 0, 567, 568,
	569, 0, 0, 570, 571, 783, 0, 572, 0, 784,
	573, 574, 566, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 787, 593, 788, 594, 595, 0,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 606, 789, 607, 608, 610, 609, 611, 0, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 0, 631, 632, 630, 633, 634,
	0, 635, 636, 637, 638, 639, 790, 640, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 654,
	655, 656, 657, 659, 658, 0, 661, 662, 660, 663,
	664, 665, 0, 666, 791, 667, 647, 648, 668, 669,
	0, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 0, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 794, 694,
	695, 696, 697, 0, 698, 1144, 0, 693, 684, 1045,
	700, 701, 702, 703, 704, 1046, 0, 706, 707, 0,
	708, 795, 796, 797, 798, 0, 720, 0, 709, 711,
	712, 713, 714, 799, 715, 800, 0, 716, 717, 718,
	719, 710, 721, 722, 0, 0, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 0, 732, 0, 0, 733,
	734, 735, 801, 802, 803, 0, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 2285, 0,
	0, 0, 747, 748, 805, 749, 750, 751, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 4503, 339, 340, 0, 0, 0, 0,
	0, 752, 1050, 0, 0, 0, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 2292, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 2293, 765, 766, 433, 434, 0, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	0, 2294, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 772,
	773, 774, 560, 0, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 328, 327, 329, 0, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 0, 779, 0,
	481, 483, 484, 0, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 0, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 0, 553, 540, 0, 541,
	330, 0, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 0, 572, 0,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 0, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 4502, 645,
	654, 655, 656, 657, 659, 658, 0, 2289, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 0, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	2291, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	4501, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 2311,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 0, 1050, 0, 0, 0, 341, 0, 342,
	343, 344, 1387, 345, 346, 347, 348, 349, 350, 351,
	0, 2317, 0, 352, 2324, 353, 2323, 0, 2332, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	2335, 2336, 0, 0, 362, 363, 0, 0, 1636, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	1388, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 1370, 397, 399, 2321,
	2320, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 1355, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 0, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 0, 0, 433, 434, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 437, 2319, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 1389, 444, 445, 446, 2330, 2331, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 0, 0,
	0, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	0, 0, 0, 560, 1391, 465, 466, 467, 3266, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 1390, 3268, 477, 561, 478,
	2314, 2315, 0, 2310, 0, 479, 480, 482, 1392, 0,
	1393, 481, 483, 484, 1394, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 0, 496, 1395, 498, 499, 1396, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 1397, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 1398, 553, 540, 0,
	541, 0, 1399, 555, 556, 557, 558, 0, 0, 559,
	2322, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 3267, 1400, 572,
	1401, 0, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 2307, 587,
	588, 589, 2308, 590, 591, 592, 0, 593, 0, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 2318, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 1402, 635, 636, 637, 638, 639, 0, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 0, 666, 0, 667, 647, 648,
	668, 669, 1403, 670, 671, 672, 673, 674, 675, 676,
	2316, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 2334, 687, 688, 689, 690,
	0, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 2326, 2327, 2328, 2329, 0, 720, 0,
	709, 711, 712, 713, 714, 0, 715, 0, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 0, 2325, 2333, 3269, 737, 738,
	736, 739, 740, 743, 741, 742, 0, 744, 745, 746,
	0, 0, 0, 2285, 747, 748, 0, 749, 750, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 2340, 339,
	340, 0, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 341, 0, 342, 343, 344, 2303, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 0, 757, 354, 355, 356, 357, 358, 359, 360,
	0, 0, 0, 361, 758, 759, 760, 0, 362, 363,
	761, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 2292, 396,
	0, 397, 399, 762, 763, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 2293, 765, 766,
	433, 434, 0, 326, 0, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 0, 2294, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 770, 0, 771, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 772, 773, 774, 560, 0, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 328, 327, 329, 0,
	775, 477, 561, 478, 776, 777, 0, 778, 0, 479,
	480, 482, 0, 779, 0, 481, 483, 484, 0, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 780, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 503, 504, 505, 508,
	0, 0, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 0, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	0, 553, 540, 0, 541, 330, 0, 555, 556, 557,
	558, 0, 781, 559, 782, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 569, 0, 0, 570,
	571, 783, 0, 572, 0, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 0, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 2339, 645, 654, 655, 656, 657, 659,
	658, 0, 2341, 662, 660, 663, 664, 665, 0, 666,
	791, 667, 647, 648, 668, 669, 0, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 2291, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 795, 796, 797,
	798, 0, 720, 0, 709, 711, 712, 713, 714, 799,
	715, 800, 0, 716, 717, 2338, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 0, 732, 0, 0, 733, 734, 735, 801, 802,
	803, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 2285, 0, 0, 0, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 334, 333, 335, 336, 337, 338, 2284,
	339, 340, 0, 0, 0, 0, 0, 752, 1050, 0,
	0, 0, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 348, 349, 350, 351, 753, 754, 0, 352, 755,
	353, 756, 0, 757, 354, 355, 356, 357, 358, 359,
	360, 0, 0, 0, 361, 758, 759, 760, 0, 362,
	363, 761, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 2292,
	396, 0, 397, 399, 762, 763, 0, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 411, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 764, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 2293, 765,
	766, 433, 434, 0, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 767, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 0, 2294, 445, 446,
	768, 769, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 770, 0, 771, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 772, 773, 774, 560, 0,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 328, 327, 329,
	0, 775, 477, 561, 478, 776, 777, 0, 778, 0,
	479, 480, 482, 0, 779, 0, 481, 483, 484, 0,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 780, 496, 0,
	498, 499, 0, 0, 500, 501, 502, 503, 504, 505,
	508, 0, 0, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 0, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 0, 553, 540, 0, 541, 330, 0, 555, 556,
	557, 558, 0, 781, 559, 782, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 0, 572, 0, 784, 573, 574, 566,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 787, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 789,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 0, 635, 636,
	637, 638, 639, 790, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 2283, 645, 654, 655, 656, 657,
	659, 658, 0, 2289, 662, 660, 663, 664, 665, 0,
	666, 791, 667, 647, 648, 668, 669, 0, 670, 671,
	672, 673, 674, 675, 676, 792, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	793, 687, 688, 689, 690, 794, 694, 695, 696, 697,
	0, 698, 699, 0, 693, 684, 2291, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 795, 796,
	797, 798, 0, 720, 0, 709, 711, 712, 713, 714,
	799, 715, 800, 0, 716, 717, 2282, 719, 710, 721,
	722, 0, 0, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 0, 732, 0, 0, 733, 734, 735, 801,
	802, 803, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 1038, 0, 1040, 0, 747,
	748, 805, 749, 750, 751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 334, 333, 335, 336,
	337, 338, 0, 339, 340, 0, 0, 0, 0, 1050,
	752, 0, 0, 0, 0, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 0, 757, 354, 355, 356,
	357, 358, 359, 360, 0, 0, 0, 361, 758, 759,
	760, 0, 362, 363, 761, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 0, 373, 374,
	375, 372, 376, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 1047, 396, 0, 397, 399, 762, 763, 0,
	402, 404, 398, 400, 0, 403, 401, 405, 406, 0,
	407, 408, 409, 0, 0, 410, 411, 412, 0, 413,
	414, 415, 0, 416, 417, 418, 0, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 765, 766, 433, 434, 0, 326, 0, 0,
	0, 0, 0, 435, 436, 437, 767, 0, 0, 0,
	438, 0, 439, 440, 441, 0, 442, 443, 0, 0,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 770, 0, 771, 457,
	0, 458, 459, 460, 461, 462, 463, 464, 772, 773,
	774, 560, 0, 465, 466, 467, 0, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 0,
	328, 327, 329, 0, 775, 477, 561, 478, 776, 777,
	0, 778, 0, 479, 480, 482, 0, 779, 0, 481,
	483, 484, 0, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 495, 494, 0, 497,
	780, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	503, 504, 505, 508, 0, 0, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 0, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 0, 553, 540, 0, 541, 330,
	0, 555, 556, 557, 558, 0, 781, 559, 782, 562,
	563, 0, 0, 564, 0, 565, 0, 0, 567, 568,
	569, 0, 0, 570, 571, 783, 0, 572, 0, 784,
	573, 574, 566, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 787, 593, 788, 594, 595, 0,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 606, 789, 607, 608, 610, 609, 611, 0, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 0, 631, 632, 630, 633, 634,
	0, 635, 636, 637, 638, 639, 790, 640, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 654,
	655, 656, 657, 659, 658, 0, 661, 662, 660, 663,
	664, 665, 0, 666, 791, 667, 647, 648, 668, 669,
	0, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 0, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 794, 694,
	695, 696, 697, 0, 698, 699, 0, 693, 684, 1045,
	700, 701, 702, 703, 704, 1046, 0, 706, 707, 0,
	708, 795, 796, 797, 798, 0, 720, 0, 709, 711,
	712, 713, 714, 799, 715, 800, 0, 716, 717, 718,
	719, 710, 721, 722, 0, 0, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 0, 732, 0, 0, 733,
	734, 735, 801, 802, 803, 0, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 1040, 0,
	0, 0, 747, 748, 805, 749, 750, 751, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 752, 1050, 0, 0, 0, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 1047, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	0, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 772,
	773, 774, 560, 0, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 328, 327, 329, 0, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 0, 779, 0,
	481, 483, 484, 0, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 0, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 0, 553, 540, 0, 541,
	330, 0, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 0, 572, 0,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 0, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 0, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	1045, 700, 701, 702, 703, 704, 1046, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 3252,
	0, 323, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 0, 1050, 752, 0, 0, 0, 0, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 326, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 0, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 772, 773, 774, 560, 0, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 328, 327, 329, 0, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	0, 779, 0, 481, 483, 484, 0, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	0, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 0, 553,
	540, 0, 541, 330, 0, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	0, 572, 0, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 0, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 0, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 2285, 0, 0, 0, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 1050, 0, 0, 0,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 2292, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 2293, 765, 766, 433,
	434, 0, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 2294, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 772, 773, 774, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 328, 327, 329, 0, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 0, 779, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 330, 0, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 0, 572, 0, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 2476, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 2477, 645, 654, 655, 656, 657, 659, 658,
	0, 2289, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 2291, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 795, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 2478, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 323, 0, 0, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 0, 0, 0, 752, 1050, 0, 0,
	0, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 0, 757, 354, 355, 356, 357, 358, 359, 360,
	0, 0, 0, 361, 758, 759, 760, 0, 362, 363,
	761, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 765, 766,
	433, 434, 0, 326, 0, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 0, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 770, 0, 771, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 772, 773, 774, 560, 0, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 328, 327, 329, 0,
	775, 477, 561, 478, 776, 777, 0, 778, 0, 479,
	480, 482, 0, 779, 0, 481, 483, 484, 0, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 780, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 503, 504, 505, 508,
	0, 0, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 0, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	0, 553, 540, 0, 541, 330, 0, 555, 556, 557,
	558, 0, 781, 559, 782, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 569, 0, 0, 570,
	571, 783, 0, 572, 0, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 0, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 0, 661, 662, 660, 663, 664, 665, 0, 666,
	791, 667, 647, 648, 668, 669, 0, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 0, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 795, 796, 797,
	798, 0, 720, 0, 709, 711, 712, 713, 714, 799,
	715, 800, 0, 716, 717, 718, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 0, 732, 0, 0, 733, 734, 735, 801, 802,
	803, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 323, 0, 0, 0, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 334, 333, 335, 336, 337, 338, 0,
	339, 340, 0, 0, 0, 0, 0, 752, 1050, 0,
	0, 0, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 348, 349, 350, 351, 753, 754, 0, 352, 755,
	353, 756, 0, 757, 354, 355, 356, 357, 358, 359,
	360, 0, 0, 0, 361, 758, 759, 760, 0, 362,
	363, 761, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 395,
	396, 0, 397, 399, 762, 763, 0, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 411, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 764, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 765,
	766, 433, 434, 0, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 767, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 0, 444, 445, 446,
	768, 769, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 770, 0, 771, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 772, 773, 774, 560, 0,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 328, 327, 329,
	0, 775, 477, 561, 478, 776, 777, 0, 778, 0,
	479, 480, 482, 0, 779, 0, 481, 483, 484, 0,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 780, 496, 0,
	498, 499, 0, 0, 500, 501, 502, 503, 504, 505,
	508, 0, 0, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 0, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 0, 553, 540, 0, 541, 330, 0, 555, 556,
	557, 558, 0, 781, 559, 782, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 0, 572, 0, 784, 573, 574, 566,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 787, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 789,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 0, 635, 636,
	637, 638, 639, 790, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 0,
	666, 791, 667, 647, 648, 668, 669, 0, 670, 671,
	672, 673, 674, 675, 676, 792, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	793, 687, 688, 689, 690, 794, 694, 695, 696, 697,
	0, 698, 699, 0, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 795, 796,
	797, 798, 0, 720, 0, 709, 711, 712, 713, 714,
	799, 715, 800, 0, 716, 717, 718, 719, 710, 721,
	722, 0, 0, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 0, 732, 0, 0, 733, 734, 735, 801,
	802, 803, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 3272, 0, 0, 0, 747,
	748, 805, 749, 750, 751, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 0, 938,
	0, 0, 0, 341, 0, 342, 343, 344, 1387, 345,
	346, 347, 348, 349, 350, 351, 0, 2317, 0, 352,
	2324, 353, 2323, 0, 2332, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 2335, 2336, 0, 0,
	362, 363, 0, 0, 1636, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 1388, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 1370, 397, 399, 2321, 2320, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 1355, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 0, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	0, 0, 433, 434, 0, 326, 0, 0, 0, 0,
	0, 435, 436, 437, 2319, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 1389, 444, 445,
	446, 2330, 2331, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 0, 0, 0, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 0, 0, 0, 560,
	1391, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 0, 0,
	0, 1390, 0, 477, 561, 478, 2314, 2315, 0, 2310,
	0, 479, 480, 482, 1392, 0, 1393, 481, 483, 484,
	1394, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 0, 496,
	1395, 498, 499, 1396, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 1397, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 1398, 553, 540, 0, 541, 0, 1399, 555,
	556, 557, 558, 0, 0, 559, 2322, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 0, 1400, 572, 1401, 0, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 2307, 587, 588, 589, 2308, 590,
	591, 592, 0, 593, 0, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	2318, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 1402, 635,
	636, 637, 638, 639, 0, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	0, 666, 0, 667, 647, 648, 668, 669, 1403, 670,
	671, 672, 673, 674, 675, 676, 2316, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 2334, 687, 688, 689, 690, 0, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 2326,
	2327, 2328, 2329, 0, 720, 0, 709, 711, 712, 713,
	714, 0, 715, 0, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	0, 2325, 2333, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 0, 744, 745, 746, 0, 0, 0, 0,
	747, 748, 0, 749, 750, 751, 2311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 334, 333, 335, 336, 337,
	338, 0, 339, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 2303, 0, 341, 0, 342, 343, 344, 1387,
	345, 346, 347, 348, 349, 350, 351, 0, 2317, 0,
	352, 2324, 353, 2323, 0, 2332, 354, 355, 356, 357,
	358, 359, 360, 0, 0, 0, 361, 2335, 2336, 0,
	0, 362, 363, 0, 0, 1636, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 1388, 389, 390,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 395, 396, 1370, 397, 399, 2321, 2320, 0, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 1355, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 0, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 0, 0, 433, 434, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 437, 2319, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 1389, 444,
	445, 446, 2330, 2331, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 0, 0, 0, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 0, 0, 0,
	560, 1391, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 0,
	0, 0, 1390, 0, 477, 561, 478, 2314, 2315, 0,
	2310, 0, 479, 480, 482, 1392, 0, 1393, 481, 483,
	484, 1394, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 0,
	496, 1395, 498, 499, 1396, 0, 500, 501, 502, 503,
	504, 505, 508, 0, 0, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 1397, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 1398, 553, 540, 0, 541, 0, 1399,
	555, 556, 557, 558, 0, 0, 559, 2322, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 0, 1400, 572, 1401, 0, 573,
	574, 566, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 2307, 587, 588, 589, 2308,
	590, 591, 592, 0, 593, 0, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 2318, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 1402,
	635, 636, 637, 638, 639, 0, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 0, 666, 0, 667, 647, 648, 668, 669, 1403,
	670, 671, 672, 673, 674, 675, 676, 2316, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 2334, 687, 688, 689, 690, 0, 694, 695,
	696, 697, 0, 698, 699, 0, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	2326, 2327, 2328, 2329, 0, 720, 0, 709, 711, 712,
	713, 714, 0, 715, 0, 0, 716, 717, 718, 719,
	710, 721, 722, 0, 0, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 0, 732, 0, 0, 733, 734,
	735, 0, 2325, 2333, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 0, 744, 745, 746, 0, 0, 0,
	323, 747, 748, 0, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 0, 339, 340, 0, 0,
	0, 0, 0, 752, 0, 0, 0, 0, 341, 0,
	342, 343, 344, 2303, 345, 346, 347, 348, 349, 350,
	351, 753, 754, 0, 352, 755, 353, 756, 0, 757,
	354, 355, 356, 357, 358, 359, 360, 0, 0, 0,
	361, 758, 759, 760, 0, 362, 363, 761, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 395, 396, 0, 397, 399,
	762, 763, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 411,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 764, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 765, 766, 433, 434, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 437, 767,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 0, 444, 445, 446, 768, 769, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 770,
	0, 771, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 772, 773, 774, 560, 0, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 0, 0, 0, 0, 775, 477, 561,
	478, 776, 777, 0, 778, 0, 479, 480, 482, 0,
	779, 0, 481, 483, 484, 0, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 780, 496, 0, 498, 499, 0, 0,
	500, 501, 502, 503, 504, 505, 508, 0, 0, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 0,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 0, 553, 540,
	0, 541, 0, 0, 555, 556, 557, 558, 0, 781,
	559, 782, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 0,
	572, 0, 784, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 787, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 789, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 0, 635, 636, 637, 638, 639, 790,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 0, 666, 791, 667, 647,
	648, 668, 669, 0, 670, 671, 672, 673, 674, 675,
	676, 792, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 793, 687, 688, 689,
	690, 794, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 795, 796, 797, 798, 0, 720,
	0, 709, 711, 712, 713, 714, 799, 715, 800, 0,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 0, 732,
	0, 0, 733, 734, 735, 801, 802, 803, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 0, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	1630, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4526, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 1387, 345, 346, 347, 348, 349, 350, 351,
	753, 754, 0, 352, 755, 353, 756, 0, 757, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	758, 759, 760, 0, 362, 363, 761, 0, 1636, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	1388, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 0, 397, 399, 762,
	763, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 764, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 765, 766, 433, 434, 0, 326,
	0, 0, 0, 0, 0, 435, 436, 437, 767, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 1389, 444, 445, 446, 768, 769, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 770, 0,
	771, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	772, 773, 774, 560, 1391, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 1390, 775, 477, 561, 478,
	776, 777, 0, 778, 0, 479, 480, 482, 1392, 779,
	1393, 481, 483, 484, 1394, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 780, 496, 1395, 498, 499, 1396, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 1397, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 1398, 553, 540, 0,
	541, 0, 1399, 555, 556, 557, 558, 4646, 781, 559,
	782, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 783, 1400, 572,
	1401, 784, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 785, 587,
	588, 589, 786, 590, 591, 592, 787, 593, 788, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 789, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 1402, 635, 636, 637, 638, 639, 790, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 0, 666, 791, 667, 647, 648,
	668, 669, 1403, 670, 671, 672, 673, 674, 675, 676,
	792, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 793, 687, 688, 689, 690,
	794, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 795, 796, 797, 798, 0, 720, 0,
	709, 711, 712, 713, 714, 799, 715, 800, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 801, 802, 803, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 804, 744, 745, 746,
	0, 0, 0, 0, 747, 748, 805, 749, 750, 751,
	3381, 0, 1631, 1630, 0, 0, 0, 0, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	341, 0, 342, 343, 344, 1387, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 1636, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 1388, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 0, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 1389, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 772, 773, 774, 560, 1391, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 0, 0, 0, 1390, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 1392, 779, 1393, 481, 483, 484, 1394, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 1395, 498, 499,
	1396, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 1397, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 1398,
	553, 540, 0, 541, 0, 1399, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 1400, 572, 1401, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 1402, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 1403, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 795, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 0, 0, 0, 0, 747, 748, 805,
	749, 750, 751, 2729, 0, 1631, 1630, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 341, 0, 342, 343, 344, 1387, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 758, 759, 760, 0,
	362, 363, 761, 0, 1636, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 1388, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 0, 326, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 1389, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 770, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 1920, 773, 774, 560,
	1391, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 0, 0,
	0, 1390, 775, 477, 561, 478, 776, 777, 0, 778,
	0, 479, 480, 482, 1392, 779, 1393, 481, 483, 484,
	1394, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 780, 496,
	1395, 498, 499, 1396, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 1397, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 1398, 553, 540, 0, 541, 0, 1399, 555,
	556, 557, 558, 0, 781, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 1400, 572, 1401, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 1402, 635,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	0, 666, 791, 667, 647, 648, 668, 669, 1403, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 795,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 799, 715, 800, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	801, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 0, 0, 0, 0,
	747, 748, 805, 749, 750, 751, 2349, 0, 1631, 1630,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 341, 0, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 1636, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	1389, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 772,
	773, 774, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 0, 0, 0, 1390, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 1392, 779, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 0, 541,
	0, 1399, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 0,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 1917,
	0, 1631, 1630, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 0, 0, 752, 0, 0, 0, 0, 341,
	0, 342, 343, 344, 1387, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	1636, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 1388, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 326, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 1389, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 1920, 773, 774, 560, 1391, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 0, 0, 0, 1390, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	1392, 779, 1393, 481, 483, 484, 1394, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 1395, 498, 499, 1396,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	1397, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 1398, 553,
	540, 0, 541, 0, 1399, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	1400, 572, 1401, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 1402, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 1403, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 0, 0, 0, 0, 747, 748, 805, 749,
	750, 751, 1868, 0, 1631, 1630, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 334, 333, 335, 336, 337, 338, 0,
	339, 340, 0, 0, 0, 0, 0, 752, 0, 0,
	0, 0, 341, 0, 342, 343, 344, 1387, 345, 346,
	347, 348, 349, 350, 351, 753, 754, 0, 352, 755,
	353, 756, 0, 757, 354, 355, 356, 357, 358, 359,
	360, 0, 0, 0, 361, 758, 759, 760, 0, 362,
	363, 761, 0, 1636, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 1388, 389, 390, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 395,
	396, 0, 397, 399, 762, 763, 0, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 411, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 764, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 765,
	766, 433, 434, 0, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 767, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 1389, 444, 445, 446,
	768, 769, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 770, 0, 771, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 772, 773, 774, 560, 1391,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 0, 0, 0,
	1390, 775, 477, 561, 478, 776, 777, 0, 778, 0,
	479, 480, 482, 1392, 779, 1393, 481, 483, 484, 1394,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 780, 496, 1395,
	498, 499, 1396, 0, 500, 501, 502, 503, 504, 505,
	508, 0, 0, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 1397, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 1398, 553, 540, 0, 541, 0, 1399, 555, 556,
	557, 558, 0, 781, 559, 782, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 1400, 572, 1401, 784, 573, 574, 566,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 787, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 789,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 1402, 635, 636,
	637, 638, 639, 790, 640, 0, 641, 642, 650, 651,
	652, 1866, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 0,
	666, 791, 667, 647, 648, 668, 669, 1403, 670, 671,
	672, 673, 674, 675, 676, 792, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	793, 687, 688, 689, 690, 794, 694, 695, 696, 697,
	0, 698, 699, 0, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 795, 796,
	797, 798, 0, 720, 0, 709, 711, 712, 713, 714,
	799, 715, 800, 0, 716, 717, 718, 719, 710, 721,
	722, 0, 0, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 0, 732, 0, 0, 733, 734, 735, 801,
	802, 803, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 0, 0, 0, 0, 747,
	748, 805, 749, 750, 751, 1626, 0, 1631, 1630, 0,
	0, 0, 0, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 334, 333, 335, 336,
	337, 338, 0, 339, 340, 0, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 341, 0, 342, 343, 344,
	1387, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 0, 757, 354, 355, 356,
	357, 358, 359, 360, 0, 0, 0, 361, 758, 759,
	760, 0, 362, 363, 761, 0, 1636, 0, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 0, 373, 374,
	375, 372, 376, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 387, 388, 1388, 389,
	390, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 395, 396, 0, 397, 399, 762, 763, 0,
	402, 404, 398, 400, 0, 403, 401, 405, 406, 0,
	407, 408, 409, 0, 0, 410, 411, 412, 0, 413,
	414, 415, 0, 416, 417, 418, 0, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 765, 766, 433, 434, 0, 326, 0, 0,
	0, 0, 0, 1623, 436, 437, 767, 0, 0, 0,
	438, 0, 439, 440, 441, 0, 442, 443, 0, 1389,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 770, 0, 771, 457,
	0, 458, 459, 460, 461, 462, 463, 464, 772, 773,
	774, 560, 1391, 465, 466, 467, 0, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 0,
	0, 0, 0, 1390, 775, 477, 561, 478, 776, 777,
	0, 778, 0, 479, 480, 482, 1392, 779, 1393, 481,
	483, 484, 1394, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 495, 494, 0, 497,
	780, 496, 1395, 498, 499, 1396, 0, 500, 501, 502,
	503, 504, 505, 508, 0, 0, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 1397, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 1398, 553, 540, 0, 541, 0,
	1399, 555, 556, 557, 558, 0, 781, 559, 782, 562,
	563, 0, 0, 564, 0, 565, 0, 0, 567, 568,
	569, 0, 0, 570, 571, 783, 1400, 572, 1401, 784,
	573, 574, 566, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 787, 593, 788, 594, 595, 0,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	1624, 606, 789, 607, 608, 610, 609, 611, 0, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 0, 631, 632, 630, 633, 634,
	1402, 635, 636, 637, 638, 639, 790, 640, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 1622,
	655, 656, 657, 659, 658, 0, 661, 662, 660, 663,
	664, 665, 0, 666, 791, 667, 647, 648, 668, 669,
	1403, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 0, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 794, 694,
	695, 696, 697, 0, 698, 699, 0, 693, 684, 0,
	700, 701, 702, 703, 704, 705, 0, 706, 707, 0,
	708, 795, 796, 797, 798, 0, 720, 0, 709, 711,
	712, 713, 714, 799, 715, 800, 0, 716, 717, 718,
	719, 710, 721, 722, 0, 0, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 0, 732, 0, 0, 733,
	1625, 735, 801, 802, 803, 0, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 0, 0,
	0, 0, 747, 748, 805, 749, 750, 751, 1631, 1630,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 341, 0, 342, 343,
	344, 1387, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 1636, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 1388,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	1389, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 772,
	773, 774, 560, 1391, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 0, 0, 0, 1390, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 1392, 779, 1393,
	481, 483, 484, 1394, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 1395, 498, 499, 1396, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 1397, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 1398, 553, 540, 0, 541,
	0, 1399, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 1400, 572, 1401,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 1402, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 1403, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 1631,
	1630, 0, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 1387, 345, 346, 347, 348, 349, 350, 351,
	753, 754, 0, 352, 755, 353, 756, 0, 757, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	758, 759, 760, 0, 362, 363, 761, 0, 1636, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	1388, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 0, 397, 399, 762,
	763, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 764, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 765, 766, 433, 434, 0, 326,
	0, 0, 0, 0, 0, 435, 436, 437, 767, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 1389, 444, 445, 446, 768, 769, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 770, 0,
	771, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	772, 773, 774, 560, 1391, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 1390, 775, 477, 561, 478,
	776, 777, 0, 778, 0, 479, 480, 482, 1392, 779,
	1393, 481, 483, 484, 1394, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 780, 496, 1395, 498, 499, 1396, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 1397, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 1398, 553, 540, 0,
	541, 0, 1399, 555, 556, 557, 558, 0, 781, 559,
	782, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 783, 1400, 572,
	1401, 784, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 785, 587,
	588, 589, 786, 590, 591, 592, 787, 593, 788, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 789, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 1402, 635, 636, 637, 638, 639, 790, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 0, 666, 791, 667, 647, 648,
	668, 669, 1403, 670, 671, 672, 673, 674, 675, 676,
	792, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 793, 687, 688, 689, 690,
	794, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 795, 796, 797, 798, 0, 720, 0,
	709, 711, 712, 713, 714, 799, 715, 800, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 801, 802, 803, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 804, 744, 745, 746,
	1631, 0, 0, 0, 747, 748, 805, 749, 750, 751,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 0, 339, 340, 0, 0,
	0, 0, 0, 752, 0, 0, 0, 0, 341, 0,
	342, 343, 344, 1387, 345, 346, 347, 348, 349, 350,
	351, 753, 754, 0, 352, 755, 353, 756, 0, 757,
	354, 355, 356, 357, 358, 359, 360, 0, 0, 0,
	361, 758, 759, 760, 0, 362, 363, 761, 0, 1636,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 1388, 389, 390, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 395, 396, 0, 397, 399,
	762, 763, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 411,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 764, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 765, 766, 433, 434, 0,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 767,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 1389, 444, 445, 446, 768, 769, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 770,
	0, 771, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 772, 773, 774, 560, 1391, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 0, 0, 0, 1390, 775, 477, 561,
	478, 776, 777, 0, 778, 0, 479, 480, 482, 1392,
	779, 1393, 481, 483, 484, 1394, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 780, 496, 1395, 498, 499, 1396, 0,
	500, 501, 502, 503, 504, 505, 508, 0, 0, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 1397,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 1398, 553, 540,
	0, 541, 0, 1399, 555, 556, 557, 558, 0, 781,
	559, 782, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 1400,
	572, 1401, 784, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 787, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 789, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 1402, 635, 636, 637, 638, 639, 790,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 0, 666, 791, 667, 647,
	648, 668, 669, 1403, 670, 671, 672, 673, 674, 675,
	676, 792, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 793, 687, 688, 689,
	690, 794, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 795, 796, 797, 798, 0, 720,
	0, 709, 711, 712, 713, 714, 799, 715, 800, 0,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 0, 732,
	0, 0, 733, 734, 735, 801, 802, 803, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 323, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 0, 0, 752, 0, 0, 0, 0, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 3416, 362, 363, 761, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 4222, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 3420, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 4221, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 3419,
	442, 443, 0, 0, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 772, 773, 774, 560, 0, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 4217, 4218, 0, 0, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 4220, 482,
	0, 779, 0, 481, 483, 484, 0, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 0, 498, 499, 4216,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	0, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 0, 553,
	540, 0, 541, 0, 0, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	0, 572, 0, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 3418, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 0, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 0, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 4219,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 1724, 0, 323, 0, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 334, 333, 335, 336, 337, 338, 1723,
	339, 340, 0, 0, 0, 0, 0, 752, 0, 0,
	0, 0, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 348, 349, 350, 351, 753, 754, 0, 352, 755,
	353, 756, 0, 757, 354, 355, 356, 357, 358, 359,
	360, 0, 0, 0, 361, 758, 759, 760, 0, 362,
	363, 761, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 1719,
	396, 0, 397, 399, 762, 763, 0, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 411, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 764, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 1726, 765,
	766, 433, 434, 0, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 767, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 0, 1722, 445, 446,
	768, 769, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 770, 0, 771, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 772, 773, 774, 560, 0,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 1720, 475, 476, 0, 328, 327, 329,
	0, 775, 477, 561, 478, 776, 777, 0, 778, 0,
	479, 480, 482, 0, 779, 0, 481, 483, 484, 0,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 780, 496, 0,
	498, 499, 0, 0, 500, 501, 502, 503, 504, 505,
	508, 0, 0, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 0, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 0, 553, 540, 0, 541, 330, 0, 555, 556,
	557, 558, 0, 781, 559, 782, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 0, 572, 0, 784, 573, 574, 566,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 787, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 789,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 0, 635, 636,
	637, 638, 639, 790, 640, 0, 641, 642, 650, 651,
	652, 1725, 644, 646, 653, 645, 654, 655, 656, 657,
	1721, 658, 0, 1718, 662, 660, 663, 664, 665, 0,
	666, 791, 667, 647, 648, 668, 669, 0, 670, 671,
	672, 673, 674, 675, 676, 792, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	793, 687, 688, 689, 690, 794, 694, 695, 696, 697,
	0, 698, 699, 0, 693, 684, 1716, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 795, 796,
	797, 798, 0, 720, 0, 709, 711, 712, 713, 714,
	799, 715, 800, 0, 716, 717, 718, 719, 710, 721,
	722, 0, 0, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 0, 732, 0, 0, 733, 734, 735, 801,
	802, 803, 0, 737, 1717, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 1843, 0, 323, 0, 747,
	748, 805, 749, 750, 751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 334, 333, 335, 336,
	337, 338, 0, 339, 340, 0, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 0, 757, 354, 355, 356,
	357, 358, 359, 360, 0, 0, 0, 361, 758, 759,
	760, 0, 362, 363, 761, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 0, 373, 374,
	375, 372, 376, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 395, 396, 0, 397, 399, 762, 763, 0,
	402, 404, 398, 400, 0, 403, 401, 405, 406, 0,
	407, 408, 409, 0, 0, 410, 411, 412, 0, 413,
	414, 415, 0, 416, 417, 418, 0, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 765, 766, 433, 434, 0, 326, 0, 0,
	0, 0, 0, 435, 436, 437, 767, 0, 0, 0,
	438, 0, 439, 440, 441, 0, 442, 443, 0, 0,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 770, 0, 771, 457,
	0, 458, 459, 460, 461, 462, 463, 464, 1845, 773,
	774, 560, 0, 465, 466, 467, 0, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 0,
	328, 327, 329, 0, 775, 477, 561, 478, 776, 777,
	0, 778, 0, 479, 480, 482, 0, 779, 0, 481,
	483, 484, 0, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 495, 494, 0, 497,
	780, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	503, 504, 505, 508, 0, 0, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 0, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 0, 553, 540, 0, 541, 330,
	0, 555, 556, 557, 558, 0, 781, 559, 782, 562,
	563, 0, 0, 564, 0, 565, 0, 1438, 567, 568,
	569, 0, 0, 570, 571, 783, 0, 572, 0, 784,
	573, 574, 566, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 787, 593, 788, 594, 595, 0,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 606, 789, 607, 608, 610, 609, 611, 0, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 0, 631, 632, 630, 633, 634,
	0, 635, 636, 637, 638, 639, 790, 640, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 654,
	655, 656, 657, 659, 658, 0, 661, 662, 660, 663,
	664, 665, 0, 666, 791, 667, 647, 648, 668, 669,
	0, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 0, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 794, 694,
	695, 696, 697, 0, 698, 699, 0, 693, 684, 0,
	700, 701, 702, 703, 704, 705, 0, 706, 707, 0,
	708, 795, 796, 797, 798, 0, 720, 0, 709, 711,
	712, 713, 714, 799, 715, 800, 0, 716, 717, 718,
	719, 710, 721, 722, 0, 0, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 0, 732, 0, 0, 733,
	734, 735, 801, 802, 803, 0, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 1840, 0,
	323, 0, 747, 748, 805, 749, 750, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 0, 339, 340, 0, 0,
	0, 0, 0, 752, 0, 0, 0, 0, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 348, 349, 350,
	351, 753, 754, 0, 352, 755, 353, 756, 0, 757,
	354, 355, 356, 357, 358, 359, 360, 0, 0, 0,
	361, 758, 759, 760, 0, 362, 363, 761, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 395, 396, 0, 397, 399,
	762, 763, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 411,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 764, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 765, 766, 433, 434, 0,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 767,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 0, 444, 445, 446, 768, 769, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 770,
	0, 771, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 1842, 773, 774, 560, 0, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 328, 327, 329, 0, 775, 477, 561,
	478, 776, 777, 0, 778, 0, 479, 480, 482, 0,
	779, 0, 481, 483, 484, 0, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 780, 496, 0, 498, 499, 0, 0,
	500, 501, 502, 503, 504, 505, 508, 0, 0, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 0,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 0, 553, 540,
	0, 541, 330, 0, 555, 556, 557, 558, 0, 781,
	559, 782, 562, 563, 0, 0, 564, 0, 565, 0,
	1438, 567, 568, 569, 0, 0, 570, 571, 783, 0,
	572, 0, 784, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 787, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 789, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 0, 635, 636, 637, 638, 639, 790,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 0, 666, 791, 667, 647,
	648, 668, 669, 0, 670, 671, 672, 673, 674, 675,
	676, 792, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 793, 687, 688, 689,
	690, 794, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 795, 796, 797, 798, 0, 720,
	0, 709, 711, 712, 713, 714, 799, 715, 800, 0,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 0, 732,
	0, 0, 733, 734, 735, 801, 802, 803, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 1748, 0, 323, 0, 747, 748, 805, 749, 750,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 0, 757, 354, 355, 356, 357, 358, 359, 360,
	0, 0, 0, 361, 758, 759, 760, 0, 362, 363,
	761, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 765, 766,
	433, 434, 0, 326, 0, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 0, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 770, 0, 771, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 1750, 773, 774, 560, 0, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 328, 327, 329, 0,
	775, 477, 561, 478, 776, 777, 0, 778, 0, 479,
	480, 482, 0, 779, 0, 481, 483, 484, 0, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 780, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 503, 504, 505, 508,
	0, 0, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 0, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	0, 553, 540, 0, 541, 330, 0, 555, 556, 557,
	558, 0, 781, 559, 782, 562, 563, 0, 0, 564,
	0, 565, 0, 1438, 567, 568, 569, 0, 0, 570,
	571, 783, 0, 572, 0, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 0, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 0, 661, 662, 660, 663, 664, 665, 0, 666,
	791, 667, 647, 648, 668, 669, 0, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 0, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 795, 796, 797,
	798, 0, 720, 0, 709, 711, 712, 713, 714, 799,
	715, 800, 0, 716, 717, 718, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 0, 732, 0, 0, 733, 734, 735, 801, 802,
	803, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 323, 0, 0, 0, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 334, 333, 335, 336, 337, 338, 0,
	339, 340, 0, 0, 0, 0, 0, 752, 0, 0,
	0, 0, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 348, 349, 350, 351, 753, 754, 0, 352, 755,
	353, 756, 0, 757, 354, 355, 356, 357, 358, 359,
	360, 0, 0, 0, 361, 758, 759, 760, 0, 362,
	363, 761, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 395,
	396, 0, 397, 399, 762, 763, 0, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 411, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 764, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 765,
	766, 433, 434, 0, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 767, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 0, 444, 445, 446,
	768, 769, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 770, 0, 771, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 772, 773, 774, 560, 0,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 328, 327, 329,
	0, 775, 477, 561, 478, 776, 777, 0, 778, 0,
	479, 480, 482, 0, 779, 0, 481, 483, 484, 0,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 780, 496, 0,
	498, 499, 0, 0, 500, 501, 502, 503, 504, 505,
	508, 0, 0, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 0, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 0, 553, 540, 0, 541, 330, 0, 555, 556,
	557, 558, 0, 781, 559, 782, 562, 563, 0, 0,
	564, 0, 565, 0, 1438, 567, 568, 569, 0, 0,
	570, 571, 783, 0, 572, 0, 784, 573, 574, 566,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 787, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 789,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 0, 635, 636,
	637, 638, 639, 790, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 0,
	666, 791, 667, 647, 648, 668, 669, 0, 670, 671,
	672, 673, 674, 675, 676, 792, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	793, 687, 688, 689, 690, 794, 694, 695, 696, 697,
	0, 698, 699, 0, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 795, 796,
	797, 798, 0, 720, 0, 709, 711, 712, 713, 714,
	799, 715, 800, 0, 716, 717, 718, 719, 710, 721,
	722, 0, 0, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 0, 732, 0, 0, 733, 734, 735, 801,
	802, 803, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 323, 0, 0, 0, 747,
	748, 805, 749, 750, 751, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 758, 759, 760, 0,
	362, 363, 761, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 0, 326, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 0, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 770, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 772, 773, 774, 560,
	0, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 328, 327,
	329, 0, 775, 477, 561, 478, 776, 777, 0, 778,
	0, 479, 480, 482, 0, 779, 0, 481, 483, 484,
	0, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 780, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 0, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 4090, 553, 540, 0, 541, 330, 0, 555,
	556, 557, 558, 0, 781, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 0, 572, 0, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 0, 635,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	0, 666, 791, 667, 647, 648, 668, 669, 0, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 795,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 799, 715, 800, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	801, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 3629, 0, 323, 0,
	747, 748, 805, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	0, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 3628,
	773, 774, 560, 0, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 328, 327, 329, 0, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 0, 779, 0,
	481, 483, 484, 0, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 0, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 0, 553, 540, 0, 541,
	330, 0, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 0, 572, 0,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 0, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 0, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 323,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 348, 349, 350, 351,
	753, 754, 0, 352, 755, 353, 756, 0, 757, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	758, 759, 760, 3416, 362, 363, 761, 0, 0, 3410,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 3412, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 0, 397, 399, 762,
	763, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 3420,
	420, 764, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 765, 766, 433, 434, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 437, 767, 0,
	0, 0, 438, 0, 439, 440, 441, 3419, 442, 443,
	0, 0, 444, 445, 446, 768, 769, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 770, 0,
	771, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	3409, 773, 774, 560, 0, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 0, 775, 477, 561, 478,
	776, 777, 0, 778, 0, 479, 480, 482, 0, 779,
	0, 481, 483, 484, 0, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 780, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 0, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 0, 553, 540, 0,
	541, 0, 0, 555, 556, 557, 558, 0, 781, 559,
	782, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 783, 0, 572,
	0, 784, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 785, 587,
	588, 589, 786, 590, 591, 592, 787, 593, 788, 594,
	595, 3418, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 789, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 0, 635, 636, 637, 638, 639, 790, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 0, 666, 791, 667, 647, 648,
	668, 669, 0, 670, 671, 672, 673, 674, 675, 676,
	792, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 793, 687, 688, 689, 690,
	794, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 795, 796, 797, 798, 0, 720, 0,
	709, 711, 712, 713, 714, 799, 715, 800, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 3417, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 801, 802, 803, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 804, 744, 745, 746,
	2812, 0, 323, 0, 747, 748, 805, 749, 750, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 0, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 772, 773, 774, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 328, 327, 329, 0, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 0, 779, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 330, 0, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 0, 572, 0, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 795, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 2758, 0, 323, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 758, 759, 760, 0,
	362, 363, 761, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 0, 326, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 0, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 770, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 2757, 773, 774, 560,
	0, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 328, 327,
	329, 0, 775, 477, 561, 478, 776, 777, 0, 778,
	0, 479, 480, 482, 0, 779, 0, 481, 483, 484,
	0, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 780, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 0, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 0, 553, 540, 0, 541, 330, 0, 555,
	556, 557, 558, 0, 781, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 0, 572, 0, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 0, 635,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	0, 666, 791, 667, 647, 648, 668, 669, 0, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 795,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 799, 715, 800, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	801, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 2743, 0, 323, 0,
	747, 748, 805, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	0, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 2745,
	773, 774, 560, 0, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 328, 327, 329, 0, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 0, 779, 0,
	481, 483, 484, 0, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 0, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 0, 553, 540, 0, 541,
	330, 0, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 0, 572, 0,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 0, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 0, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 2734,
	0, 323, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 0, 0, 752, 0, 0, 0, 0, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 326, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 0, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 772, 773, 774, 560, 0, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 328, 327, 329, 0, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	0, 779, 0, 481, 483, 484, 0, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	0, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 0, 553,
	540, 0, 541, 330, 0, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	0, 572, 0, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 0, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 0, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 323, 0, 0, 0, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 0, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 2706, 773, 774, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 328, 327, 329, 0, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 0, 779, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 330, 0, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 1438, 567, 568, 569, 0, 0, 570, 571,
	783, 0, 572, 0, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 795, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 1967, 0, 323, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 758, 759, 760, 0,
	362, 363, 761, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 0, 326, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 0, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 770, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 1966, 773, 774, 560,
	0, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 328, 327,
	329, 0, 775, 477, 561, 478, 776, 777, 0, 778,
	0, 479, 480, 482, 0, 779, 0, 481, 483, 484,
	0, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 780, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 0, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 0, 553, 540, 0, 541, 330, 0, 555,
	556, 557, 558, 0, 781, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 0, 572, 0, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 0, 635,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	0, 666, 791, 667, 647, 648, 668, 669, 0, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 795,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 799, 715, 800, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	801, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 1865, 0, 323, 0,
	747, 748, 805, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	0, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 772,
	773, 774, 560, 0, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 328, 327, 329, 0, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 0, 779, 0,
	481, 483, 484, 0, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 0, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 0, 553, 540, 0, 541,
	330, 0, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 0, 572, 0,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 0, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 0, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 1858,
	0, 323, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 0, 0, 752, 0, 0, 0, 0, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 326, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 0, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 1860, 773, 774, 560, 0, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 328, 327, 329, 0, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	0, 779, 0, 481, 483, 484, 0, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	0, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 0, 553,
	540, 0, 541, 330, 0, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	0, 572, 0, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 0, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 0, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 1848, 0, 323, 0, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 334, 333, 335, 336, 337, 338, 0,
	339, 340, 0, 0, 0, 0, 0, 752, 0, 0,
	0, 0, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 348, 349, 350, 351, 753, 754, 0, 352, 755,
	353, 756, 0, 757, 354, 355, 356, 357, 358, 359,
	360, 0, 0, 0, 361, 758, 759, 760, 0, 362,
	363, 761, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 395,
	396, 0, 397, 399, 762, 763, 0, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 411, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 764, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 765,
	766, 433, 434, 0, 326, 0, 0, 0, 0, 0,
	435, 436, 437, 767, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 0, 444, 445, 446,
	768, 769, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 770, 0, 771, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 772, 773, 774, 560, 0,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 328, 327, 329,
	0, 775, 477, 561, 478, 776, 777, 0, 778, 0,
	479, 480, 482, 0, 779, 0, 481, 483, 484, 0,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 780, 496, 0,
	498, 499, 0, 0, 500, 501, 502, 503, 504, 505,
	508, 0, 0, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 0, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 0, 553, 540, 0, 541, 330, 0, 555, 556,
	557, 558, 0, 781, 559, 782, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 0, 572, 0, 784, 573, 574, 566,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 787, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 789,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 0, 635, 636,
	637, 638, 639, 790, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 0,
	666, 791, 667, 647, 648, 668, 669, 0, 670, 671,
	672, 673, 674, 675, 676, 792, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	793, 687, 688, 689, 690, 794, 694, 695, 696, 697,
	0, 698, 699, 0, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 795, 796,
	797, 798, 0, 720, 0, 709, 711, 712, 713, 714,
	799, 715, 800, 0, 716, 717, 718, 719, 710, 721,
	722, 0, 0, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 0, 732, 0, 0, 733, 734, 735, 801,
	802, 803, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 1526, 0, 323, 0, 747,
	748, 805, 749, 750, 751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 334, 333, 335, 336,
	337, 338, 0, 339, 340, 0, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 0, 757, 354, 355, 356,
	357, 358, 359, 360, 0, 0, 0, 361, 758, 759,
	760, 0, 362, 363, 761, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 0, 373, 374,
	375, 372, 376, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 395, 396, 0, 397, 399, 762, 763, 0,
	402, 404, 398, 400, 0, 403, 401, 405, 406, 0,
	407, 408, 409, 0, 0, 410, 411, 412, 0, 413,
	414, 415, 0, 416, 417, 418, 0, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 765, 766, 433, 434, 0, 326, 0, 0,
	0, 0, 0, 435, 436, 437, 767, 0, 0, 0,
	438, 0, 439, 440, 441, 0, 442, 443, 0, 0,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 770, 0, 771, 457,
	0, 458, 459, 460, 461, 462, 463, 464, 1525, 773,
	774, 560, 0, 465, 466, 467, 0, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 0,
	328, 327, 329, 0, 775, 477, 561, 478, 776, 777,
	0, 778, 0, 479, 480, 482, 0, 779, 0, 481,
	483, 484, 0, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 495, 494, 0, 497,
	780, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	503, 504, 505, 508, 0, 0, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 0, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 0, 553, 540, 0, 541, 330,
	0, 555, 556, 557, 558, 0, 781, 559, 782, 562,
	563, 0, 0, 564, 0, 565, 0, 0, 567, 568,
	569, 0, 0, 570, 571, 783, 0, 572, 0, 784,
	573, 574, 566, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 787, 593, 788, 594, 595, 0,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 606, 789, 607, 608, 610, 609, 611, 0, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 0, 631, 632, 630, 633, 634,
	0, 635, 636, 637, 638, 639, 790, 640, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 654,
	655, 656, 657, 659, 658, 0, 661, 662, 660, 663,
	664, 665, 0, 666, 791, 667, 647, 648, 668, 669,
	0, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 0, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 794, 694,
	695, 696, 697, 0, 698, 699, 0, 693, 684, 0,
	700, 701, 702, 703, 704, 705, 0, 706, 707, 0,
	708, 795, 796, 797, 798, 0, 720, 0, 709, 711,
	712, 713, 714, 799, 715, 800, 0, 716, 717, 718,
	719, 710, 721, 722, 0, 0, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 0, 732, 0, 0, 733,
	734, 735, 801, 802, 803, 0, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 1515, 0,
	323, 0, 747, 748, 805, 749, 750, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 0, 339, 340, 0, 0,
	0, 0, 0, 752, 0, 0, 0, 0, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 348, 349, 350,
	351, 753, 754, 0, 352, 755, 353, 756, 0, 757,
	354, 355, 356, 357, 358, 359, 360, 0, 0, 0,
	361, 758, 759, 760, 0, 362, 363, 761, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 395, 396, 0, 397, 399,
	762, 763, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 411,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 764, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 765, 766, 433, 434, 0,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 767,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 0, 444, 445, 446, 768, 769, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 770,
	0, 771, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 1514, 773, 774, 560, 0, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 328, 327, 329, 0, 775, 477, 561,
	478, 776, 777, 0, 778, 0, 479, 480, 482, 0,
	779, 0, 481, 483, 484, 0, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 780, 496, 0, 498, 499, 0, 0,
	500, 501, 502, 503, 504, 505, 508, 0, 0, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 0,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 0, 553, 540,
	0, 541, 330, 0, 555, 556, 557, 558, 0, 781,
	559, 782, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 0,
	572, 0, 784, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 787, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 789, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 0, 635, 636, 637, 638, 639, 790,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 0, 666, 791, 667, 647,
	648, 668, 669, 0, 670, 671, 672, 673, 674, 675,
	676, 792, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 793, 687, 688, 689,
	690, 794, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 795, 796, 797, 798, 0, 720,
	0, 709, 711, 712, 713, 714, 799, 715, 800, 0,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 0, 732,
	0, 0, 733, 734, 735, 801, 802, 803, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 1511, 0, 323, 0, 747, 748, 805, 749, 750,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 0, 757, 354, 355, 356, 357, 358, 359, 360,
	0, 0, 0, 361, 758, 759, 760, 0, 362, 363,
	761, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 765, 766,
	433, 434, 0, 326, 0, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 0, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 770, 0, 771, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 1510, 773, 774, 560, 0, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 328, 327, 329, 0,
	775, 477, 561, 478, 776, 777, 0, 778, 0, 479,
	480, 482, 0, 779, 0, 481, 483, 484, 0, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 780, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 503, 504, 505, 508,
	0, 0, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 0, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	0, 553, 540, 0, 541, 330, 0, 555, 556, 557,
	558, 0, 781, 559, 782, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 569, 0, 0, 570,
	571, 783, 0, 572, 0, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 0, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 0, 661, 662, 660, 663, 664, 665, 0, 666,
	791, 667, 647, 648, 668, 669, 0, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 0, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 795, 796, 797,
	798, 0, 720, 0, 709, 711, 712, 713, 714, 799,
	715, 800, 0, 716, 717, 718, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 0, 732, 0, 0, 733, 734, 735, 801, 802,
	803, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 1505, 0, 323, 0, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 334, 333, 335, 336, 337,
	338, 0, 339, 340, 0, 0, 0, 0, 0, 752,
	0, 0, 0, 0, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 348, 349, 350, 351, 753, 754, 0,
	352, 755, 353, 756, 0, 757, 354, 355, 356, 357,
	358, 359, 360, 0, 0, 0, 361, 758, 759, 760,
	0, 362, 363, 761, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 395, 396, 0, 397, 399, 762, 763, 0, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 411, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 764, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 765, 766, 433, 434, 0, 326, 0, 0, 0,
	0, 0, 435, 436, 437, 767, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 0, 444,
	445, 446, 768, 769, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 770, 0, 771, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 1504, 773, 774,
	560, 0, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 328,
	327, 329, 0, 775, 477, 561, 478, 776, 777, 0,
	778, 0, 479, 480, 482, 0, 779, 0, 481, 483,
	484, 0, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 780,
	496, 0, 498, 499, 0, 0, 500, 501, 502, 503,
	504, 505, 508, 0, 0, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 0, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 0, 553, 540, 0, 541, 330, 0,
	555, 556, 557, 558, 0, 781, 559, 782, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 0, 572, 0, 784, 573,
	574, 566, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 787, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 789, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 0,
	635, 636, 637, 638, 639, 790, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 0, 666, 791, 667, 647, 648, 668, 669, 0,
	670, 671, 672, 673, 674, 675, 676, 792, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 793, 687, 688, 689, 690, 794, 694, 695,
	696, 697, 0, 698, 699, 0, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	795, 796, 797, 798, 0, 720, 0, 709, 711, 712,
	713, 714, 799, 715, 800, 0, 716, 717, 718, 719,
	710, 721, 722, 0, 0, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 0, 732, 0, 0, 733, 734,
	735, 801, 802, 803, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 1482, 0, 323,
	0, 747, 748, 805, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 348, 349, 350, 351,
	753, 754, 0, 352, 755, 353, 756, 0, 757, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	758, 759, 760, 0, 362, 363, 761, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 0, 397, 399, 762,
	763, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 764, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 765, 766, 433, 434, 0, 326,
	0, 0, 0, 0, 0, 435, 436, 437, 767, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 0, 444, 445, 446, 768, 769, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 770, 0,
	771, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	1481, 773, 774, 560, 0, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 328, 327, 329, 0, 775, 477, 561, 478,
	776, 777, 0, 778, 0, 479, 480, 482, 0, 779,
	0, 481, 483, 484, 0, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 780, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 0, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 0, 553, 540, 0,
	541, 330, 0, 555, 556, 557, 558, 0, 781, 559,
	782, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 783, 0, 572,
	0, 784, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 785, 587,
	588, 589, 786, 590, 591, 592, 787, 593, 788, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 789, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 0, 635, 636, 637, 638, 639, 790, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 0, 666, 791, 667, 647, 648,
	668, 669, 0, 670, 671, 672, 673, 674, 675, 676,
	792, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 793, 687, 688, 689, 690,
	794, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 795, 796, 797, 798, 0, 720, 0,
	709, 711, 712, 713, 714, 799, 715, 800, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 801, 802, 803, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 804, 744, 745, 746,
	807, 0, 323, 0, 747, 748, 805, 749, 750, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 0, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 772, 773, 774, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 328, 327, 329, 0, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 0, 779, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 330, 0, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 0, 572, 0, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 795, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 314, 0, 323, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 758, 759, 760, 0,
	362, 363, 761, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 0, 326, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 0, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 770, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 772, 773, 774, 560,
	0, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 328, 327,
	329, 0, 775, 477, 561, 478, 776, 777, 0, 778,
	0, 479, 480, 482, 0, 779, 0, 481, 483, 484,
	0, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 780, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 0, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 0, 553, 540, 0, 541, 330, 0, 555,
	556, 557, 558, 0, 781, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 0, 572, 0, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 0, 635,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	0, 666, 791, 667, 647, 648, 668, 669, 0, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 795,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 799, 715, 800, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	801, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 323, 0, 0, 0,
	747, 748, 805, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 334, 333, 335, 336, 337,
	338, 0, 339, 340, 0, 0, 0, 0, 0, 752,
	0, 0, 0, 0, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 348, 349, 350, 351, 753, 754, 0,
	352, 755, 353, 756, 0, 757, 354, 355, 356, 357,
	358, 359, 360, 0, 0, 0, 361, 758, 759, 760,
	0, 362, 363, 761, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 395, 396, 0, 397, 399, 762, 763, 0, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 411, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 764, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 765, 766, 433, 434, 0, 326, 0, 0, 0,
	0, 0, 435, 436, 437, 767, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 0, 444,
	445, 446, 768, 769, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 770, 0, 771, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 772, 773, 774,
	560, 0, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 328,
	327, 329, 0, 775, 477, 561, 478, 776, 777, 0,
	778, 0, 479, 480, 482, 0, 779, 0, 481, 483,
	484, 0, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 780,
	496, 0, 498, 499, 0, 0, 500, 501, 502, 503,
	504, 505, 508, 0, 0, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 0, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 0, 553, 540, 0, 541, 330, 0,
	555, 556, 557, 558, 0, 781, 559, 782, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 0, 572, 0, 784, 573,
	574, 566, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 787, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 789, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 0,
	635, 636, 637, 638, 639, 790, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 0, 666, 791, 667, 647, 648, 668, 669, 0,
	670, 671, 672, 673, 674, 675, 676, 792, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 793, 687, 688, 689, 690, 794, 694, 695,
	696, 697, 0, 698, 699, 0, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	795, 796, 797, 798, 0, 720, 0, 709, 711, 712,
	713, 714, 799, 715, 800, 0, 716, 717, 718, 719,
	710, 721, 722, 0, 0, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 0, 732, 0, 0, 733, 734,
	735, 801, 802, 803, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 323, 0, 0,
	0, 747, 748, 805, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 334, 333, 335, 336,
	337, 338, 0, 339, 340, 0, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 0, 757, 354, 355, 356,
	357, 358, 359, 360, 0, 0, 0, 361, 758, 759,
	760, 0, 362, 363, 761, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 0, 373, 374,
	375, 372, 376, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 395, 396, 0, 397, 399, 762, 763, 0,
	402, 404, 398, 400, 0, 403, 401, 405, 406, 0,
	407, 408, 409, 0, 0, 410, 411, 412, 0, 413,
	414, 415, 0, 416, 417, 418, 0, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 765, 766, 433, 434, 0, 326, 0, 0,
	0, 0, 0, 435, 436, 437, 767, 0, 0, 0,
	438, 0, 439, 440, 441, 0, 442, 443, 0, 0,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 770, 0, 771, 457,
	0, 458, 459, 460, 461, 462, 463, 464, 2764, 773,
	774, 560, 0, 465, 466, 467, 0, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 0,
	328, 327, 329, 0, 775, 477, 561, 478, 776, 777,
	0, 778, 0, 479, 480, 482, 0, 779, 0, 481,
	483, 484, 0, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 495, 494, 0, 497,
	780, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	503, 504, 505, 508, 0, 0, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 0, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 0, 553, 540, 0, 541, 330,
	0, 555, 556, 557, 558, 0, 781, 559, 782, 562,
	563, 0, 0, 564, 0, 565, 0, 0, 567, 568,
	569, 0, 0, 570, 571, 783, 0, 572, 0, 784,
	573, 574, 566, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 787, 593, 788, 594, 595, 0,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 606, 789, 607, 608, 610, 609, 611, 0, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 0, 631, 632, 630, 633, 634,
	0, 635, 636, 637, 638, 639, 790, 640, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 654,
	655, 656, 657, 659, 658, 0, 661, 662, 660, 663,
	664, 665, 0, 666, 791, 667, 647, 648, 668, 669,
	0, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 0, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 794, 694,
	695, 696, 697, 0, 698, 699, 0, 693, 684, 0,
	700, 701, 702, 703, 704, 705, 0, 706, 707, 0,
	708, 795, 796, 797, 798, 0, 720, 0, 709, 711,
	712, 713, 714, 799, 715, 800, 0, 716, 717, 718,
	719, 710, 721, 722, 0, 0, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 0, 732, 0, 0, 733,
	734, 735, 801, 802, 803, 0, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 323, 0,
	0, 0, 747, 748, 805, 749, 750, 751, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 2486, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 326, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	0, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 772,
	773, 774, 560, 0, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 328, 327, 329, 0, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 0, 779, 0,
	481, 483, 484, 0, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 0, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 0, 553, 540, 0, 541,
	330, 0, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 0, 572, 0,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 0, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 0, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 323,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 348, 349, 350, 351,
	753, 754, 0, 352, 755, 353, 756, 0, 757, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	758, 759, 760, 0, 362, 363, 761, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 2484, 396, 0, 397, 399, 762,
	763, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 764, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 765, 766, 433, 434, 0, 326,
	0, 0, 0, 0, 0, 435, 436, 437, 767, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 0, 444, 445, 446, 768, 769, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 770, 0,
	771, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	772, 773, 774, 560, 0, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 328, 327, 329, 0, 775, 477, 561, 478,
	776, 777, 0, 778, 0, 479, 480, 482, 0, 779,
	0, 481, 483, 484, 0, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 780, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 0, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 0, 553, 540, 0,
	541, 330, 0, 555, 556, 557, 558, 0, 781, 559,
	782, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 783, 0, 572,
	0, 784, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 785, 587,
	588, 589, 786, 590, 591, 592, 787, 593, 788, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 789, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 0, 635, 636, 637, 638, 639, 790, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 0, 666, 791, 667, 647, 648,
	668, 669, 0, 670, 671, 672, 673, 674, 675, 676,
	792, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 793, 687, 688, 689, 690,
	794, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 795, 796, 797, 798, 0, 720, 0,
	709, 711, 712, 713, 714, 799, 715, 800, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 801, 802, 803, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 804, 744, 745, 746,
	323, 0, 0, 0, 747, 748, 805, 749, 750, 751,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 0, 339, 340, 0, 0,
	0, 0, 0, 752, 0, 0, 0, 0, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 348, 349, 350,
	351, 753, 754, 0, 352, 755, 353, 756, 0, 757,
	354, 355, 356, 357, 358, 359, 360, 0, 0, 0,
	361, 758, 759, 760, 0, 362, 363, 761, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 2482, 396, 0, 397, 399,
	762, 763, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 411,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 764, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 765, 766, 433, 434, 0,
	326, 0, 0, 0, 0, 0, 435, 436, 437, 767,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 0, 444, 445, 446, 768, 769, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 770,
	0, 771, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 772, 773, 774, 560, 0, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 328, 327, 329, 0, 775, 477, 561,
	478, 776, 777, 0, 778, 0, 479, 480, 482, 0,
	779, 0, 481, 483, 484, 0, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 780, 496, 0, 498, 499, 0, 0,
	500, 501, 502, 503, 504, 505, 508, 0, 0, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 0,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 0, 553, 540,
	0, 541, 330, 0, 555, 556, 557, 558, 0, 781,
	559, 782, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 0,
	572, 0, 784, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 787, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 789, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 0, 635, 636, 637, 638, 639, 790,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 0, 666, 791, 667, 647,
	648, 668, 669, 0, 670, 671, 672, 673, 674, 675,
	676, 792, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 793, 687, 688, 689,
	690, 794, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 795, 796, 797, 798, 0, 720,
	0, 709, 711, 712, 713, 714, 799, 715, 800, 0,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 0, 732,
	0, 0, 733, 734, 735, 801, 802, 803, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 323, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 0, 0, 752, 0, 0, 0, 0, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 326, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 0, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 2373, 773, 774, 560, 0, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 328, 327, 329, 0, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	0, 779, 0, 481, 483, 484, 0, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	0, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 0, 553,
	540, 0, 541, 330, 0, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	0, 572, 0, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 0, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 0, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 323, 0, 0, 0, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 0, 326, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 2367, 773, 774, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 328, 327, 329, 0, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 0, 779, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 330, 0, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 0, 572, 0, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 795, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 840, 0, 323, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 838, 337, 338,
	827, 339, 340, 0, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 758, 759, 760, 0,
	362, 363, 761, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 830, 386, 387, 388, 0, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 0, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 836, 456, 770, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 772, 773, 774, 560,
	0, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 0, 0,
	0, 0, 775, 477, 561, 478, 776, 777, 0, 778,
	0, 479, 480, 482, 0, 779, 0, 481, 483, 484,
	0, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 780, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 0, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 0, 553, 540, 0, 541, 0, 0, 555,
	556, 557, 558, 0, 781, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 0, 572, 0, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 0, 635,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 832, 661, 662, 660, 663, 664, 665,
	0, 666, 791, 667, 647, 648, 668, 669, 0, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 0, 698, 839, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 795,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 799, 715, 800, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	801, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 826, 0, 323, 0,
	747, 748, 805, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 827, 339, 340, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 830, 386, 387, 388, 0,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 0, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	0, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 831, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 772,
	773, 774, 560, 0, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 0, 0, 0, 0, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 0, 779, 0,
	481, 483, 484, 0, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 0, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 0, 553, 540, 0, 541,
	0, 0, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 0, 572, 0,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 0, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 832, 661, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 0, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 825, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 323,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 827, 339, 340, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 348, 349, 350, 351,
	753, 754, 0, 352, 755, 353, 756, 0, 757, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	758, 759, 760, 0, 362, 363, 761, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 830, 386, 387, 388,
	0, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 0, 397, 399, 762,
	763, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 764, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 765, 766, 433, 434, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 437, 767, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 0, 444, 445, 446, 768, 769, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 831, 456, 770, 0,
	771, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	772, 773, 774, 560, 0, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 0, 775, 477, 561, 478,
	776, 777, 0, 778, 0, 479, 480, 482, 0, 779,
	0, 481, 483, 484, 0, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 780, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 0, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 0, 553, 540, 0,
	541, 0, 0, 555, 556, 557, 558, 0, 781, 559,
	782, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 783, 0, 572,
	0, 784, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 785, 587,
	588, 589, 786, 590, 591, 592, 787, 593, 788, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 789, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 0, 635, 636, 637, 638, 639, 790, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 832, 661, 662,
	660, 663, 664, 665, 0, 666, 791, 667, 647, 648,
	668, 669, 0, 670, 671, 672, 673, 674, 675, 676,
	792, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 793, 687, 688, 689, 690,
	794, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 795, 796, 797, 798, 0, 720, 0,
	709, 711, 712, 713, 714, 799, 715, 800, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 801, 802, 803, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 804, 744, 745, 746,
	323, 0, 0, 0, 747, 748, 805, 749, 750, 751,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 827, 339, 340, 0, 0,
	0, 0, 0, 752, 0, 0, 0, 0, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 348, 349, 350,
	351, 753, 754, 0, 352, 755, 353, 756, 0, 757,
	354, 355, 356, 357, 358, 359, 360, 0, 0, 0,
	361, 758, 759, 760, 0, 362, 363, 761, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 830, 386, 387,
	388, 0, 389, 390, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 395, 396, 0, 397, 399,
	762, 763, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 411,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 764, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 765, 766, 433, 434, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 437, 767,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 0, 444, 445, 446, 768, 769, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 4656, 456, 770,
	0, 771, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 772, 773, 774, 560, 0, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 0, 0, 0, 0, 775, 477, 561,
	478, 776, 777, 0, 778, 0, 479, 480, 482, 0,
	779, 0, 481, 483, 484, 0, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 780, 496, 0, 498, 499, 0, 0,
	500, 501, 502, 503, 504, 505, 508, 0, 0, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 0,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 0, 553, 540,
	0, 541, 0, 0, 555, 556, 557, 558, 0, 781,
	559, 782, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 0,
	572, 0, 784, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 787, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 789, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 0, 635, 636, 637, 638, 639, 790,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 832, 661,
	662, 660, 663, 664, 665, 0, 666, 791, 667, 647,
	648, 668, 669, 0, 670, 671, 672, 673, 674, 675,
	676, 792, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 793, 687, 688, 689,
	690, 794, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 795, 796, 797, 798, 0, 720,
	0, 709, 711, 712, 713, 714, 799, 715, 800, 0,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 0, 732,
	0, 0, 733, 734, 735, 801, 802, 803, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 323, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 827, 339, 340, 0,
	0, 0, 0, 0, 752, 0, 0, 0, 0, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 830, 386,
	387, 388, 0, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 0, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 831, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 772, 773, 774, 560, 0, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 0, 0, 0, 0, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	0, 779, 0, 481, 483, 484, 0, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	0, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 0, 553,
	540, 0, 541, 0, 0, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	0, 572, 0, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 0, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 832,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 0, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 3254,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 323, 0, 0, 0, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 830,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 831,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 772, 773, 774, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 0, 0, 0, 0, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 0, 779, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 0, 0, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 0, 572, 0, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	832, 661, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 795, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 1129, 0, 323, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 758, 759, 760, 0,
	362, 363, 761, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 0, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 770, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 772, 773, 774, 560,
	0, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 0, 0,
	0, 0, 775, 477, 561, 478, 776, 777, 0, 778,
	1128, 479, 480, 482, 0, 779, 0, 481, 483, 484,
	0, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 780, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 0, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 0, 553, 540, 0, 541, 0, 0, 555,
	556, 557, 558, 0, 781, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 0, 572, 0, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 0, 635,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	0, 666, 791, 667, 647, 648, 668, 669, 0, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 1127, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 795,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 799, 715, 800, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	801, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 931, 0, 323, 0,
	747, 748, 805, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 920, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 348, 929, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 0, 0,
	0, 0, 0, 0, 435, 436, 922, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 928, 443, 924,
	0, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 772,
	773, 774, 560, 0, 465, 466, 467, 925, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 0, 0, 0, 0, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 0, 779, 0,
	481, 483, 484, 0, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 923, 0, 493, 495, 494, 0,
	497, 780, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 0, 535, 536,
	537, 926, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 0, 553, 540, 0, 541,
	0, 0, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 0, 572, 0,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 927, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 921, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 0, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 0, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 914,
	0, 323, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 920,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 0, 0, 752, 0, 0, 0, 0, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 348, 929,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 922,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	928, 443, 924, 0, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 772, 773, 774, 560, 0, 465, 466, 467,
	925, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 0, 0, 0, 0, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	0, 779, 0, 481, 483, 484, 0, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 923, 0, 493,
	495, 494, 0, 497, 780, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	0, 535, 536, 537, 926, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 0, 553,
	540, 0, 541, 0, 0, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	0, 572, 0, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 927, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 921, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 0, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 0, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 323, 0, 0, 0, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 0, 4221, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 772, 773, 774, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 0, 0, 0, 0, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 0, 779, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 0, 0, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 0, 572, 0, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 5014, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 795, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 1556, 0, 323, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 341, 0, 342, 343, 344, 1559, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 758, 759, 1557, 0,
	362, 363, 761, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 0, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 770, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 772, 773, 774, 560,
	0, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 0, 0,
	0, 0, 775, 477, 561, 478, 776, 777, 0, 778,
	0, 479, 480, 482, 0, 779, 0, 481, 483, 484,
	0, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 780, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 902, 0, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 0, 553, 540, 0, 541, 0, 0, 555,
	556, 557, 558, 0, 781, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 0, 572, 0, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 0, 901,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 900, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 1560, 665,
	0, 666, 791, 667, 647, 648, 668, 669, 0, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 898,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 799, 715, 800, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	801, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 1556, 0, 323, 0,
	747, 748, 805, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 341, 0, 342, 343,
	344, 1559, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 1557, 0, 362, 363, 761, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 0, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	0, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 772,
	773, 774, 560, 0, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 0, 0, 0, 0, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 0, 779, 0,
	481, 483, 484, 0, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 902, 0, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 0, 553, 540, 0, 541,
	0, 0, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 0, 572, 0,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 0, 901, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 900, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 1560, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 0, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 898, 796, 797, 798, 0, 720, 0, 709,
	1558, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 909,
	0, 323, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 907, 339, 340, 0,
	0, 0, 0, 0, 752, 0, 0, 0, 0, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 0, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 772, 773, 774, 560, 0, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 0, 0, 0, 0, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	0, 779, 0, 481, 483, 484, 0, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	0, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 0, 553,
	540, 0, 541, 0, 0, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	0, 572, 0, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 0, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 0, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 816, 0, 323, 0, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 334, 333, 335, 336, 337, 338, 815,
	339, 340, 0, 0, 0, 0, 0, 752, 0, 0,
	0, 0, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 348, 349, 350, 351, 753, 754, 0, 352, 755,
	353, 756, 0, 757, 354, 355, 356, 357, 358, 359,
	360, 0, 0, 0, 361, 758, 759, 760, 0, 362,
	363, 761, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 395,
	396, 0, 397, 399, 762, 763, 0, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 411, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 764, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 765,
	766, 433, 434, 0, 0, 0, 0, 0, 0, 0,
	435, 436, 437, 767, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 0, 444, 445, 446,
	768, 769, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 770, 0, 771, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 772, 773, 774, 560, 0,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 0, 0, 0,
	0, 775, 477, 561, 478, 776, 777, 0, 778, 0,
	479, 480, 482, 0, 779, 0, 481, 483, 484, 0,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 780, 496, 0,
	498, 499, 0, 0, 500, 501, 502, 503, 504, 505,
	508, 0, 0, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 0, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 0, 553, 540, 0, 541, 0, 0, 555, 556,
	557, 558, 0, 781, 559, 782, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 0, 572, 0, 784, 573, 574, 566,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 787, 593, 788, 814, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 789,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 0, 635, 636,
	637, 638, 639, 790, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 0,
	666, 791, 667, 647, 648, 668, 669, 0, 670, 671,
	672, 673, 674, 675, 676, 792, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	793, 687, 688, 689, 690, 794, 694, 695, 696, 697,
	0, 698, 699, 0, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 795, 796,
	797, 798, 0, 720, 0, 709, 711, 712, 713, 714,
	799, 715, 800, 0, 716, 717, 718, 719, 710, 721,
	722, 0, 0, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 0, 732, 0, 0, 733, 734, 735, 801,
	802, 803, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 323, 3326, 0, 0, 747,
	748, 805, 749, 750, 751, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 758, 759, 760, 0,
	362, 363, 761, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 0, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 770, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 772, 773, 774, 560,
	0, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 0, 0,
	0, 0, 775, 477, 561, 478, 776, 777, 0, 778,
	0, 479, 480, 482, 0, 779, 0, 481, 483, 484,
	0, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 780, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 0, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 0, 553, 540, 0, 541, 0, 0, 555,
	556, 557, 558, 0, 781, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 0, 572, 0, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 0, 635,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	0, 666, 791, 667, 647, 648, 668, 669, 0, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 795,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 799, 715, 800, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	801, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 323, 0, 0, 0,
	747, 748, 805, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 334, 333, 335, 336, 337,
	338, 0, 339, 340, 0, 0, 0, 0, 0, 752,
	0, 0, 0, 0, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 348, 349, 350, 351, 753, 754, 0,
	352, 755, 353, 756, 0, 757, 354, 355, 356, 357,
	358, 359, 360, 0, 0, 0, 361, 758, 759, 760,
	0, 362, 363, 761, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 395, 396, 0, 397, 399, 762, 763, 0, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 411, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 764, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 765, 766, 433, 434, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 437, 767, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 0, 444,
	445, 446, 768, 769, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 770, 0, 771, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 772, 773, 774,
	560, 0, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 0,
	0, 0, 0, 775, 477, 561, 478, 776, 777, 0,
	778, 0, 479, 480, 482, 0, 779, 0, 481, 483,
	484, 0, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 780,
	496, 0, 498, 499, 0, 0, 500, 501, 502, 503,
	504, 505, 508, 0, 0, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 0, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 0, 553, 540, 0, 541, 0, 0,
	555, 556, 557, 558, 0, 781, 559, 782, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 0, 572, 0, 784, 573,
	574, 566, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 787, 593, 788, 594, 595, 5335, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 789, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 0,
	635, 636, 637, 638, 639, 790, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 0, 666, 791, 667, 647, 648, 668, 669, 0,
	670, 671, 672, 673, 674, 675, 676, 792, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 793, 687, 688, 689, 690, 794, 694, 695,
	696, 697, 0, 698, 699, 0, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	795, 796, 797, 798, 0, 720, 0, 709, 711, 712,
	713, 714, 799, 715, 800, 0, 716, 717, 718, 719,
	710, 721, 722, 0, 0, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 0, 732, 0, 0, 733, 734,
	735, 801, 802, 803, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 323, 4030, 0,
	0, 747, 748, 805, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 334, 333, 335, 336,
	337, 338, 0, 339, 340, 0, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 0, 757, 354, 355, 356,
	357, 358, 359, 360, 0, 0, 0, 361, 758, 759,
	760, 0, 362, 363, 761, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 0, 373, 374,
	375, 372, 376, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 395, 396, 0, 397, 399, 762, 763, 0,
	402, 404, 398, 400, 0, 403, 401, 405, 406, 0,
	407, 408, 409, 0, 0, 410, 411, 412, 0, 413,
	414, 415, 0, 416, 417, 418, 0, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 765, 766, 433, 434, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 437, 767, 0, 0, 0,
	438, 0, 439, 440, 441, 0, 442, 443, 0, 0,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 770, 0, 771, 457,
	0, 458, 459, 460, 461, 462, 463, 464, 772, 773,
	774, 560, 0, 465, 466, 467, 0, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 0,
	0, 0, 0, 0, 775, 477, 561, 478, 776, 777,
	0, 778, 0, 479, 480, 482, 0, 779, 0, 481,
	483, 484, 0, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 495, 494, 0, 497,
	780, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	503, 504, 505, 508, 0, 0, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 0, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 0, 553, 540, 0, 541, 0,
	0, 555, 556, 557, 558, 0, 781, 559, 782, 562,
	563, 0, 0, 564, 0, 565, 0, 0, 567, 568,
	569, 0, 0, 570, 571, 783, 0, 572, 0, 784,
	573, 574, 566, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 787, 593, 788, 594, 595, 0,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 606, 789, 607, 608, 610, 609, 611, 0, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 0, 631, 632, 630, 633, 634,
	0, 635, 636, 637, 638, 639, 790, 640, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 654,
	655, 656, 657, 659, 658, 0, 661, 662, 660, 663,
	664, 665, 0, 666, 791, 667, 647, 648, 668, 669,
	0, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 0, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 794, 694,
	695, 696, 697, 0, 698, 699, 0, 693, 684, 0,
	700, 701, 702, 703, 704, 705, 0, 706, 707, 0,
	708, 795, 796, 797, 798, 0, 720, 0, 709, 711,
	712, 713, 714, 799, 715, 800, 0, 716, 717, 718,
	719, 710, 721, 722, 0, 0, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 0, 732, 0, 0, 733,
	734, 735, 801, 802, 803, 0, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 323, 0,
	0, 0, 747, 748, 805, 749, 750, 751, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 0, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	0, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 772,
	773, 774, 560, 0, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 0, 0, 0, 0, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 0, 779, 0,
	481, 483, 484, 0, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 0, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 0, 553, 540, 0, 541,
	0, 0, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 0, 572, 0,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	4887, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 0, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 0, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 323,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 348, 349, 350, 351,
	753, 754, 0, 352, 755, 353, 756, 0, 757, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	758, 759, 760, 0, 362, 363, 761, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 0, 397, 399, 762,
	763, 4583, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 764, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 765, 766, 433, 434, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 437, 767, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 0, 444, 445, 446, 768, 769, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 770, 0,
	771, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	772, 773, 774, 560, 0, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 0, 775, 477, 561, 478,
	776, 777, 0, 778, 0, 479, 480, 482, 0, 779,
	0, 481, 483, 484, 0, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 780, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 0, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 0, 553, 540, 0,
	541, 0, 0, 555, 556, 557, 558, 0, 781, 559,
	782, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 783, 0, 572,
	0, 784, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 785, 587,
	588, 589, 786, 590, 591, 592, 787, 593, 788, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 789, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 0, 635, 636, 637, 638, 639, 790, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 0, 666, 791, 667, 647, 648,
	668, 669, 0, 670, 671, 672, 673, 674, 675, 676,
	792, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 793, 687, 688, 689, 690,
	794, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 795, 796, 797, 798, 0, 720, 0,
	709, 711, 712, 713, 714, 799, 715, 800, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 801, 802, 803, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 804, 744, 745, 746,
	323, 0, 0, 0, 747, 748, 805, 749, 750, 751,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 0, 339, 340, 0, 0,
	0, 0, 0, 752, 0, 3192, 0, 0, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 348, 349, 350,
	351, 753, 754, 0, 352, 755, 353, 756, 0, 757,
	354, 355, 356, 357, 358, 359, 360, 0, 0, 0,
	361, 758, 759, 760, 0, 362, 363, 761, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 395, 396, 0, 397, 399,
	762, 763, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 411,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 764, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 765, 766, 433, 434, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 437, 767,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 0, 444, 445, 446, 768, 769, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 770,
	0, 771, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 772, 773, 774, 560, 0, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 0, 0, 0, 0, 775, 477, 561,
	478, 776, 777, 0, 778, 0, 479, 480, 482, 0,
	779, 0, 481, 483, 484, 0, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 780, 496, 0, 498, 499, 0, 0,
	500, 501, 502, 503, 504, 505, 508, 0, 0, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 0,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 0, 553, 540,
	0, 541, 0, 0, 555, 556, 557, 558, 0, 781,
	559, 782, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 0,
	572, 0, 784, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 787, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 789, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 0, 635, 636, 637, 638, 639, 790,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 0, 666, 791, 667, 647,
	648, 668, 669, 0, 670, 671, 672, 673, 674, 675,
	676, 792, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 793, 687, 688, 689,
	690, 794, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 795, 796, 797, 798, 0, 720,
	0, 709, 711, 712, 713, 714, 799, 715, 800, 0,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 0, 732,
	0, 0, 733, 734, 735, 801, 802, 803, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 323, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 0, 0, 752, 0, 3183, 0, 0, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 0, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 772, 773, 774, 560, 0, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 0, 0, 0, 0, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	0, 779, 0, 481, 483, 484, 0, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	0, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 0, 553,
	540, 0, 541, 0, 0, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	0, 572, 0, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 0, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 0, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 323, 0, 0, 0, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 772, 773, 774, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 0, 0, 0, 0, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 0, 779, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 0, 0, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 0, 572, 0, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 2643, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 901, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 900, 645, 654, 655, 656, 657, 3495, 658,
	0, 661, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 898, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 323, 3326, 0, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 0, 757, 354, 355, 356, 357, 358, 359, 360,
	0, 0, 0, 361, 758, 759, 760, 0, 362, 363,
	761, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 765, 766,
	433, 434, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 0, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 770, 0, 771, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 772, 773, 774, 560, 0, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 0, 0, 0, 0,
	775, 477, 561, 478, 776, 777, 0, 778, 0, 479,
	480, 482, 0, 779, 0, 481, 483, 484, 0, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 780, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 503, 504, 505, 508,
	0, 0, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 0, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	0, 553, 540, 0, 541, 0, 0, 555, 556, 557,
	558, 0, 781, 559, 782, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 3323, 0, 0, 570,
	571, 783, 0, 572, 0, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 0, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 0, 661, 662, 660, 663, 664, 665, 0, 666,
	791, 667, 647, 648, 668, 669, 0, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 0, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 795, 796, 797,
	798, 0, 720, 0, 709, 711, 712, 713, 714, 799,
	715, 800, 0, 716, 717, 718, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 0, 732, 0, 0, 733, 734, 735, 801, 802,
	803, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 2810, 0, 323, 0, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 334, 333, 335, 336, 337,
	338, 0, 339, 340, 0, 0, 0, 0, 0, 752,
	0, 0, 0, 0, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 348, 349, 350, 351, 753, 754, 0,
	352, 755, 353, 756, 0, 757, 354, 355, 356, 357,
	358, 359, 360, 0, 0, 0, 361, 758, 759, 760,
	0, 362, 363, 761, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 395, 396, 0, 397, 399, 762, 763, 0, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 411, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 764, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 765, 766, 433, 434, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 437, 767, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 0, 444,
	445, 446, 768, 769, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 770, 0, 771, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 772, 773, 774,
	560, 0, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 0,
	0, 0, 0, 775, 477, 561, 478, 776, 777, 0,
	778, 0, 479, 480, 482, 0, 779, 0, 481, 483,
	484, 0, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 780,
	496, 0, 498, 499, 0, 0, 500, 501, 502, 503,
	504, 505, 508, 0, 0, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 0, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 0, 553, 540, 0, 541, 0, 0,
	555, 556, 557, 558, 0, 781, 559, 782, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 0, 572, 0, 784, 573,
	574, 566, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 787, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 789, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 0,
	635, 636, 637, 638, 639, 790, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 0, 666, 791, 667, 647, 648, 668, 669, 0,
	670, 671, 672, 673, 674, 675, 676, 792, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 793, 687, 688, 689, 690, 794, 694, 695,
	696, 697, 0, 698, 699, 0, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	795, 796, 797, 798, 0, 720, 0, 709, 711, 712,
	713, 714, 799, 715, 800, 0, 716, 717, 718, 719,
	710, 721, 722, 0, 0, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 0, 732, 0, 0, 733, 734,
	735, 801, 802, 803, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 323, 0, 0,
	0, 747, 748, 805, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 334, 333, 335, 336,
	337, 338, 2455, 339, 340, 0, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 0, 757, 354, 355, 356,
	357, 358, 359, 360, 0, 0, 0, 361, 758, 759,
	760, 0, 362, 363, 761, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 0, 373, 374,
	375, 372, 376, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 395, 396, 0, 397, 399, 762, 763, 0,
	402, 404, 398, 400, 0, 403, 401, 405, 406, 0,
	407, 408, 409, 0, 0, 410, 411, 412, 0, 413,
	414, 415, 0, 416, 417, 418, 0, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 765, 766, 433, 434, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 437, 767, 0, 0, 0,
	438, 0, 439, 440, 441, 0, 442, 443, 0, 0,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 770, 0, 771, 457,
	0, 458, 459, 460, 461, 462, 463, 464, 772, 773,
	774, 560, 0, 465, 466, 467, 0, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 0,
	0, 0, 0, 0, 775, 477, 561, 478, 776, 777,
	0, 778, 0, 479, 480, 482, 0, 779, 0, 481,
	483, 484, 0, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 495, 494, 0, 497,
	780, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	503, 504, 505, 508, 0, 0, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 0, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 0, 553, 540, 0, 541, 0,
	0, 555, 556, 557, 558, 0, 781, 559, 782, 562,
	563, 0, 0, 564, 0, 565, 0, 0, 567, 568,
	569, 0, 0, 570, 571, 783, 0, 572, 0, 784,
	573, 574, 566, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 787, 593, 788, 594, 595, 0,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 606, 789, 607, 608, 610, 609, 611, 0, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 0, 631, 632, 630, 633, 634,
	0, 635, 636, 637, 638, 639, 790, 640, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 654,
	655, 656, 657, 659, 658, 0, 661, 662, 660, 663,
	664, 665, 0, 666, 791, 667, 647, 648, 668, 669,
	0, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 0, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 794, 694,
	695, 696, 697, 0, 698, 699, 0, 693, 684, 0,
	700, 701, 702, 703, 704, 705, 0, 706, 707, 0,
	708, 795, 796, 797, 798, 0, 720, 0, 709, 711,
	712, 713, 714, 799, 715, 800, 0, 716, 717, 718,
	719, 710, 721, 722, 0, 0, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 0, 732, 0, 0, 733,
	734, 735, 801, 802, 803, 0, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 2023, 0,
	323, 0, 747, 748, 805, 749, 750, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 0, 339, 340, 0, 0,
	0, 0, 0, 752, 0, 0, 0, 0, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 348, 349, 350,
	351, 753, 754, 0, 352, 755, 353, 756, 0, 757,
	354, 355, 356, 357, 358, 359, 360, 0, 0, 0,
	361, 758, 759, 760, 0, 362, 363, 761, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 395, 396, 0, 397, 399,
	762, 763, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 411,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 764, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 765, 766, 433, 434, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 437, 767,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 0, 444, 445, 446, 768, 769, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 770,
	0, 771, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 772, 773, 774, 560, 0, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 0, 0, 0, 0, 775, 477, 561,
	478, 776, 777, 0, 778, 0, 479, 480, 482, 0,
	779, 0, 481, 483, 484, 0, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 780, 496, 0, 498, 499, 0, 0,
	500, 501, 502, 503, 504, 505, 508, 0, 0, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 0,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 0, 553, 540,
	0, 541, 0, 0, 555, 556, 557, 558, 0, 781,
	559, 782, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 0,
	572, 0, 784, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 787, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 789, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 0, 635, 636, 637, 638, 639, 790,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 0, 666, 791, 667, 647,
	648, 668, 669, 0, 670, 671, 672, 673, 674, 675,
	676, 792, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 793, 687, 688, 689,
	690, 794, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 795, 796, 797, 798, 0, 720,
	0, 709, 711, 712, 713, 714, 799, 715, 800, 0,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 0, 732,
	0, 0, 733, 734, 735, 801, 802, 803, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 2015, 0, 323, 0, 747, 748, 805, 749, 750,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 0, 757, 354, 355, 356, 357, 358, 359, 360,
	0, 0, 0, 361, 758, 759, 760, 0, 362, 363,
	761, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 765, 766,
	433, 434, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 0, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 770, 0, 771, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 772, 773, 774, 560, 0, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 0, 0, 0, 0,
	775, 477, 561, 478, 776, 777, 0, 778, 0, 479,
	480, 482, 0, 779, 0, 481, 483, 484, 0, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 780, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 503, 504, 505, 508,
	0, 0, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 0, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	0, 553, 540, 0, 541, 0, 0, 555, 556, 557,
	558, 0, 781, 559, 782, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 569, 0, 0, 570,
	571, 783, 0, 572, 0, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 0, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 0, 661, 662, 660, 663, 664, 665, 0, 666,
	791, 667, 647, 648, 668, 669, 0, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 0, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 795, 796, 797,
	798, 0, 720, 0, 709, 711, 712, 713, 714, 799,
	715, 800, 0, 716, 717, 718, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 0, 732, 0, 0, 733, 734, 735, 801, 802,
	803, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 892, 0, 323, 0, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 334, 333, 335, 336, 337,
	338, 0, 339, 340, 0, 0, 0, 0, 0, 752,
	0, 0, 0, 0, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 348, 349, 350, 351, 753, 754, 0,
	352, 755, 353, 756, 0, 757, 354, 355, 356, 357,
	358, 359, 360, 0, 0, 0, 361, 758, 759, 760,
	0, 362, 888, 761, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 395, 396, 0, 397, 399, 762, 763, 0, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 411, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 764, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 765, 766, 433, 434, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 437, 767, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 0, 444,
	445, 446, 768, 769, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 770, 0, 771, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 772, 773, 774,
	560, 0, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 0,
	0, 0, 0, 775, 477, 561, 478, 776, 777, 0,
	778, 0, 479, 480, 482, 0, 779, 0, 481, 483,
	484, 0, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 780,
	496, 0, 498, 499, 0, 0, 500, 501, 502, 503,
	504, 893, 508, 0, 0, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 902, 0, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 0, 553, 540, 0, 541, 0, 0,
	555, 556, 557, 558, 0, 781, 559, 782, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 0, 572, 0, 784, 573,
	574, 566, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 787, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 789, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 0,
	901, 636, 637, 638, 639, 790, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 900, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 2000,
	665, 0, 666, 791, 667, 647, 648, 668, 669, 0,
	670, 671, 672, 673, 674, 675, 676, 792, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 793, 687, 688, 689, 690, 794, 694, 695,
	696, 697, 0, 698, 699, 0, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	898, 796, 797, 798, 0, 720, 0, 709, 711, 712,
	713, 714, 799, 715, 800, 0, 716, 717, 718, 719,
	710, 721, 722, 0, 0, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 0, 732, 0, 0, 733, 734,
	735, 801, 802, 803, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 1973, 0, 323,
	0, 747, 748, 805, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 348, 349, 350, 351,
	753, 754, 0, 352, 755, 353, 756, 0, 757, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	758, 759, 760, 0, 362, 363, 761, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 0, 397, 399, 762,
	763, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 764, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 765, 766, 433, 434, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 437, 767, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 0, 444, 445, 446, 768, 769, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 770, 0,
	771, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	1972, 773, 774, 560, 0, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 0, 775, 477, 561, 478,
	776, 777, 0, 778, 0, 479, 480, 482, 0, 779,
	0, 481, 483, 484, 0, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 780, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 0, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 0, 553, 540, 0,
	541, 0, 0, 555, 556, 557, 558, 0, 781, 559,
	782, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 783, 0, 572,
	0, 784, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 785, 587,
	588, 589, 786, 590, 591, 592, 787, 593, 788, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 789, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 0, 635, 636, 637, 638, 639, 790, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 0, 666, 791, 667, 647, 648,
	668, 669, 0, 670, 671, 672, 673, 674, 675, 676,
	792, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 793, 687, 688, 689, 690,
	794, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 795, 796, 797, 798, 0, 720, 0,
	709, 711, 712, 713, 714, 799, 715, 800, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 801, 802, 803, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 804, 744, 745, 746,
	1956, 0, 323, 0, 747, 748, 805, 749, 750, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 1954, 773, 774, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 0, 0, 0, 0, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 0, 779, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 0, 0, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 0, 572, 0, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 795, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 1948, 0, 323, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 758, 759, 760, 0,
	362, 363, 761, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 0, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 770, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 772, 773, 774, 560,
	0, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 0, 0,
	0, 0, 775, 477, 561, 478, 776, 777, 0, 778,
	0, 479, 480, 482, 0, 779, 0, 481, 483, 484,
	0, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 780, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 0, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 0, 553, 540, 0, 541, 0, 0, 555,
	556, 557, 558, 0, 781, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 0, 572, 0, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 0, 635,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	0, 666, 791, 667, 647, 648, 668, 669, 0, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 795,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 799, 715, 800, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	801, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 1926, 0, 323, 0,
	747, 748, 805, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 0, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	0, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 1924,
	773, 774, 560, 0, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 0, 0, 0, 0, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 0, 779, 0,
	481, 483, 484, 0, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 0, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 0, 553, 540, 0, 541,
	0, 0, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 0, 572, 0,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 0, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 0, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 1923,
	0, 323, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 0, 0, 752, 0, 0, 0, 0, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 0, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 772, 773, 774, 560, 0, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 0, 0, 0, 0, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	0, 779, 0, 481, 483, 484, 0, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	0, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 0, 553,
	540, 0, 541, 0, 0, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	0, 572, 0, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 0, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 0, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 1915, 0, 323, 0, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 334, 333, 335, 336, 337, 338, 0,
	339, 340, 0, 0, 0, 0, 0, 752, 0, 0,
	0, 0, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 348, 349, 350, 351, 753, 754, 0, 352, 755,
	353, 756, 0, 757, 354, 355, 356, 357, 358, 359,
	360, 0, 0, 0, 361, 758, 759, 760, 0, 362,
	363, 761, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 395,
	396, 0, 397, 399, 762, 763, 0, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 411, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 764, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 765,
	766, 433, 434, 0, 0, 0, 0, 0, 0, 0,
	435, 436, 437, 767, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 0, 444, 445, 446,
	768, 769, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 770, 0, 771, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 772, 773, 774, 560, 0,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 0, 0, 0,
	0, 775, 477, 561, 478, 776, 777, 0, 778, 0,
	479, 480, 482, 0, 779, 0, 481, 483, 484, 0,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 780, 496, 0,
	498, 499, 0, 0, 500, 501, 502, 503, 504, 505,
	508, 0, 0, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 0, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 0, 553, 540, 0, 541, 0, 0, 555, 556,
	557, 558, 0, 781, 559, 782, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 0, 572, 0, 784, 573, 574, 566,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 787, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 789,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 0, 635, 636,
	637, 638, 639, 790, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 0,
	666, 791, 667, 647, 648, 668, 669, 0, 670, 671,
	672, 673, 674, 675, 676, 792, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	793, 687, 688, 689, 690, 794, 694, 695, 696, 697,
	0, 698, 699, 0, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 795, 796,
	797, 798, 0, 720, 0, 709, 711, 712, 713, 714,
	799, 715, 800, 0, 716, 717, 718, 719, 710, 721,
	722, 0, 0, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 0, 732, 0, 0, 733, 734, 735, 801,
	802, 803, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 1877, 0, 323, 0, 747,
	748, 805, 749, 750, 751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 334, 333, 335, 336,
	337, 338, 0, 339, 340, 0, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 0, 757, 354, 355, 356,
	357, 358, 359, 360, 0, 0, 0, 361, 758, 759,
	760, 0, 362, 363, 761, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 0, 373, 374,
	375, 372, 376, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 395, 396, 0, 397, 399, 762, 763, 0,
	402, 404, 398, 400, 0, 403, 401, 405, 406, 0,
	407, 408, 409, 0, 0, 410, 411, 412, 0, 413,
	414, 415, 0, 416, 417, 418, 0, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 765, 766, 433, 434, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 437, 767, 0, 0, 0,
	438, 0, 439, 440, 441, 0, 442, 443, 0, 0,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 770, 0, 771, 457,
	0, 458, 459, 460, 461, 462, 463, 464, 772, 773,
	774, 560, 0, 465, 466, 467, 0, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 0,
	0, 0, 0, 0, 775, 477, 561, 478, 776, 777,
	0, 778, 0, 479, 480, 482, 0, 779, 0, 481,
	483, 484, 0, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 495, 494, 0, 497,
	780, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	503, 504, 505, 508, 0, 0, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 0, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 0, 553, 540, 0, 541, 0,
	0, 555, 556, 557, 558, 0, 781, 559, 782, 562,
	563, 0, 0, 564, 0, 565, 0, 0, 567, 568,
	569, 0, 0, 570, 571, 783, 0, 572, 0, 784,
	573, 574, 566, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 787, 593, 788, 594, 595, 0,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 606, 789, 607, 608, 610, 609, 611, 0, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 0, 631, 632, 630, 633, 634,
	0, 635, 636, 637, 638, 639, 790, 640, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 654,
	655, 656, 657, 659, 658, 0, 661, 662, 660, 663,
	664, 665, 0, 666, 791, 667, 647, 648, 668, 669,
	0, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 0, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 794, 694,
	695, 696, 697, 0, 698, 699, 0, 693, 684, 0,
	700, 701, 702, 703, 704, 705, 0, 706, 707, 0,
	708, 795, 796, 797, 798, 0, 720, 0, 709, 711,
	712, 713, 714, 799, 715, 800, 0, 716, 717, 718,
	719, 710, 721, 722, 0, 0, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 0, 732, 0, 0, 733,
	734, 735, 801, 802, 803, 0, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 1850, 0,
	323, 0, 747, 748, 805, 749, 750, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 0, 339, 340, 0, 0,
	0, 0, 0, 752, 0, 0, 0, 0, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 348, 349, 350,
	351, 753, 754, 0, 352, 755, 353, 756, 0, 757,
	354, 355, 356, 357, 358, 359, 360, 0, 0, 0,
	361, 758, 759, 760, 0, 362, 363, 761, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 395, 396, 0, 397, 399,
	762, 763, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 411,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 764, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 765, 766, 433, 434, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 437, 767,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 0, 444, 445, 446, 768, 769, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 770,
	0, 771, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 772, 773, 774, 560, 0, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 0, 0, 0, 0, 775, 477, 561,
	478, 776, 777, 0, 778, 0, 479, 480, 482, 0,
	779, 0, 481, 483, 484, 0, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 780, 496, 0, 498, 499, 0, 0,
	500, 501, 502, 503, 504, 505, 508, 0, 0, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 0,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 0, 553, 540,
	0, 541, 0, 0, 555, 556, 557, 558, 0, 781,
	559, 782, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 0,
	572, 0, 784, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 787, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 789, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 0, 635, 636, 637, 638, 639, 790,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 0, 666, 791, 667, 647,
	648, 668, 669, 0, 670, 671, 672, 673, 674, 675,
	676, 792, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 793, 687, 688, 689,
	690, 794, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 795, 796, 797, 798, 0, 720,
	0, 709, 711, 712, 713, 714, 799, 715, 800, 0,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 0, 732,
	0, 0, 733, 734, 735, 801, 802, 803, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 1562, 0, 323, 0, 747, 748, 805, 749, 750,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 0, 757, 354, 355, 356, 357, 358, 359, 360,
	0, 0, 0, 361, 758, 759, 760, 0, 362, 363,
	761, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 765, 766,
	433, 434, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 0, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 770, 0, 771, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 772, 773, 774, 560, 0, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 0, 0, 0, 0,
	775, 477, 561, 478, 776, 777, 0, 778, 0, 479,
	480, 482, 0, 779, 0, 481, 483, 484, 0, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 780, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 503, 504, 505, 508,
	0, 0, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 0, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	0, 553, 540, 0, 541, 0, 0, 555, 556, 557,
	558, 0, 781, 559, 782, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 569, 0, 0, 570,
	571, 783, 0, 572, 0, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 0, 901, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 900, 645, 654, 655, 656, 657, 659,
	658, 0, 661, 662, 660, 663, 664, 665, 0, 666,
	791, 667, 647, 648, 668, 669, 0, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 0, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 898, 796, 797,
	798, 0, 720, 0, 709, 711, 712, 713, 714, 799,
	715, 800, 0, 716, 717, 718, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 0, 732, 0, 0, 733, 734, 735, 801, 802,
	803, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 1533, 0, 323, 0, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 334, 333, 335, 336, 337,
	338, 0, 339, 340, 0, 0, 0, 0, 0, 752,
	0, 0, 0, 0, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 348, 349, 350, 351, 753, 754, 0,
	352, 755, 353, 756, 0, 757, 354, 355, 356, 357,
	358, 359, 360, 0, 0, 0, 361, 758, 759, 760,
	0, 362, 363, 761, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 395, 396, 0, 397, 399, 762, 763, 0, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 411, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 764, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 765, 766, 433, 434, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 437, 767, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 0, 444,
	445, 446, 768, 769, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 770, 0, 771, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 1532, 773, 774,
	560, 0, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 0,
	0, 0, 0, 775, 477, 561, 478, 776, 777, 0,
	778, 0, 479, 480, 482, 0, 779, 0, 481, 483,
	484, 0, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 780,
	496, 0, 498, 499, 0, 0, 500, 501, 502, 503,
	504, 505, 508, 0, 0, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 0, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 0, 553, 540, 0, 541, 0, 0,
	555, 556, 557, 558, 0, 781, 559, 782, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 0, 572, 0, 784, 573,
	574, 566, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 787, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 789, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 0,
	635, 636, 637, 638, 639, 790, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 0, 666, 791, 667, 647, 648, 668, 669, 0,
	670, 671, 672, 673, 674, 675, 676, 792, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 793, 687, 688, 689, 690, 794, 694, 695,
	696, 697, 0, 698, 699, 0, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	795, 796, 797, 798, 0, 720, 0, 709, 711, 712,
	713, 714, 799, 715, 800, 0, 716, 717, 718, 719,
	710, 721, 722, 0, 0, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 0, 732, 0, 0, 733, 734,
	735, 801, 802, 803, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 1530, 0, 323,
	0, 747, 748, 805, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 348, 349, 350, 351,
	753, 754, 0, 352, 755, 353, 756, 0, 757, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	758, 759, 760, 0, 362, 363, 761, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 0, 397, 399, 762,
	763, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 764, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 765, 766, 433, 434, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 437, 767, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 0, 444, 445, 446, 768, 769, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 770, 0,
	771, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	1529, 773, 774, 560, 0, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 0, 775, 477, 561, 478,
	776, 777, 0, 778, 0, 479, 480, 482, 0, 779,
	0, 481, 483, 484, 0, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 780, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 0, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 0, 553, 540, 0,
	541, 0, 0, 555, 556, 557, 558, 0, 781, 559,
	782, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 783, 0, 572,
	0, 784, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 785, 587,
	588, 589, 786, 590, 591, 592, 787, 593, 788, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 789, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 0, 635, 636, 637, 638, 639, 790, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 0, 666, 791, 667, 647, 648,
	668, 669, 0, 670, 671, 672, 673, 674, 675, 676,
	792, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 793, 687, 688, 689, 690,
	794, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 795, 796, 797, 798, 0, 720, 0,
	709, 711, 712, 713, 714, 799, 715, 800, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 801, 802, 803, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 804, 744, 745, 746,
	1522, 0, 323, 0, 747, 748, 805, 749, 750, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 1521, 773, 774, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 0, 0, 0, 0, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 0, 779, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 0, 0, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 0, 572, 0, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 795, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 323, 0, 0, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 1463, 339,
	340, 0, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 0, 757, 354, 355, 356, 357, 358, 359, 360,
	0, 0, 0, 361, 758, 759, 760, 0, 362, 363,
	761, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 765, 766,
	433, 434, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 0, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 770, 0, 771, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 772, 773, 774, 560, 0, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 0, 0, 0, 0,
	775, 477, 561, 478, 776, 777, 0, 778, 0, 479,
	480, 482, 0, 779, 0, 481, 483, 484, 0, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 780, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 503, 504, 505, 508,
	0, 0, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 0, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	0, 553, 540, 0, 541, 0, 0, 555, 556, 557,
	558, 0, 781, 559, 782, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 569, 0, 0, 570,
	571, 783, 0, 572, 0, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 0, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 0, 661, 662, 660, 663, 664, 665, 0, 666,
	791, 667, 647, 648, 668, 669, 0, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 0, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 795, 796, 797,
	798, 0, 720, 0, 709, 711, 712, 713, 714, 799,
	715, 800, 0, 716, 717, 718, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 0, 732, 0, 0, 733, 734, 735, 801, 802,
	803, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 912, 0, 323, 0, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 334, 333, 335, 336, 337,
	338, 0, 339, 340, 0, 0, 0, 0, 0, 752,
	0, 0, 0, 0, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 348, 349, 350, 351, 753, 754, 0,
	352, 755, 353, 756, 0, 757, 354, 355, 356, 357,
	358, 359, 360, 0, 0, 0, 361, 758, 759, 760,
	0, 362, 363, 761, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 395, 396, 0, 397, 399, 762, 763, 0, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 411, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 764, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 765, 766, 433, 434, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 437, 767, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 0, 444,
	445, 446, 768, 769, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 770, 0, 771, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 772, 773, 774,
	560, 0, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 0,
	0, 0, 0, 775, 477, 561, 478, 776, 777, 0,
	778, 0, 479, 480, 482, 0, 779, 0, 481, 483,
	484, 0, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 780,
	496, 0, 498, 499, 0, 0, 500, 501, 502, 503,
	504, 505, 508, 0, 0, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 0, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 0, 553, 540, 0, 541, 0, 0,
	555, 556, 557, 558, 0, 781, 559, 782, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 0, 572, 0, 784, 573,
	574, 566, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 787, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 789, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 0,
	635, 636, 637, 638, 639, 790, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 0, 666, 791, 667, 647, 648, 668, 669, 0,
	670, 671, 672, 673, 674, 675, 676, 792, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 793, 687, 688, 689, 690, 794, 694, 695,
	696, 697, 0, 698, 699, 0, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	795, 796, 797, 798, 0, 720, 0, 709, 711, 712,
	713, 714, 799, 715, 800, 0, 716, 717, 718, 719,
	710, 721, 722, 0, 0, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 0, 732, 0, 0, 733, 734,
	735, 801, 802, 803, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 892, 0, 323,
	0, 747, 748, 805, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 348, 349, 350, 351,
	753, 754, 0, 352, 755, 353, 756, 0, 757, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	758, 759, 760, 0, 362, 888, 761, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 887, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 0, 397, 399, 762,
	763, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 764, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 765, 766, 433, 434, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 437, 767, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 0, 444, 445, 446, 768, 769, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 770, 0,
	771, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	772, 773, 774, 560, 0, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 0, 775, 477, 561, 478,
	776, 777, 0, 778, 0, 479, 480, 482, 0, 779,
	0, 481, 483, 484, 0, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 780, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 503, 504, 893, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 902, 0, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 0, 553, 540, 0,
	541, 0, 0, 555, 556, 557, 558, 0, 781, 559,
	782, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 783, 0, 572,
	0, 784, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 785, 587,
	588, 589, 786, 590, 591, 592, 787, 593, 788, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 789, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 0, 901, 636, 637, 638, 639, 889, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 900,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 890, 665, 0, 666, 791, 667, 647, 648,
	668, 669, 0, 670, 671, 672, 673, 674, 675, 676,
	792, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 793, 687, 688, 689, 690,
	794, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 898, 796, 797, 798, 0, 720, 0,
	709, 894, 712, 713, 714, 799, 715, 800, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 801, 802, 803, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 804, 744, 745, 746,
	881, 0, 323, 0, 747, 748, 805, 749, 750, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 772, 773, 774, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 0, 0, 0, 0, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 0, 779, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 0, 0, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 0, 572, 0, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 882, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 795, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 842, 0, 323, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 758, 759, 760, 0,
	362, 363, 761, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 0, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 770, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 772, 773, 774, 560,
	0, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 0, 0,
	0, 0, 775, 477, 561, 478, 776, 777, 0, 778,
	0, 479, 480, 482, 0, 779, 0, 481, 483, 484,
	0, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 780, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 0, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 0, 553, 540, 0, 541, 0, 0, 555,
	556, 557, 558, 0, 781, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 0, 572, 0, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 0, 635,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	0, 666, 791, 667, 647, 648, 668, 669, 0, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 795,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 799, 715, 800, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	801, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 834, 0, 323, 0,
	747, 748, 805, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 0, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	0, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 772,
	773, 774, 560, 0, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 0, 0, 0, 0, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 0, 779, 0,
	481, 483, 484, 0, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 0, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 0, 553, 540, 0, 541,
	0, 0, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 0, 572, 0,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 0, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 0, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 811,
	0, 323, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 0, 0, 752, 0, 0, 0, 0, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 0, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 772, 773, 774, 560, 0, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 0, 0, 0, 0, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	0, 779, 0, 481, 483, 484, 0, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	0, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 0, 553,
	540, 0, 541, 0, 0, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	0, 572, 0, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 0, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 0, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 323, 0, 0, 0, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 772, 773, 774, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 0, 0, 0, 0, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 0, 779, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 0, 0, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 0, 572, 0, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 795, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 323, 0, 0, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 0, 757, 354, 355, 356, 357, 358, 359, 360,
	0, 0, 0, 361, 758, 759, 760, 0, 362, 363,
	761, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 765, 766,
	433, 434, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 0, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 770, 0, 771, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 4254, 773, 774, 560, 0, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 0, 0, 0, 0,
	775, 477, 561, 478, 776, 777, 0, 778, 0, 479,
	480, 482, 0, 779, 0, 481, 483, 484, 0, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 780, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 503, 504, 505, 508,
	0, 0, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 0, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	0, 553, 540, 0, 541, 0, 0, 555, 556, 557,
	558, 0, 781, 559, 782, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 569, 0, 0, 570,
	571, 783, 0, 572, 0, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 0, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 0, 661, 662, 660, 663, 664, 665, 0, 666,
	791, 667, 647, 648, 668, 669, 0, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 0, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 795, 796, 797,
	798, 0, 720, 0, 709, 711, 712, 713, 714, 799,
	715, 800, 0, 716, 717, 718, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 0, 732, 0, 0, 733, 734, 735, 801, 802,
	803, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 323, 0, 0, 0, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 334, 333, 335, 336, 337, 338, 0,
	339, 340, 0, 0, 0, 0, 0, 752, 0, 0,
	0, 0, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 348, 349, 350, 351, 753, 754, 0, 352, 755,
	353, 756, 0, 757, 354, 355, 356, 357, 358, 359,
	360, 0, 0, 0, 361, 758, 759, 760, 0, 362,
	363, 761, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 395,
	396, 0, 397, 399, 762, 763, 0, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 411, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 764, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 765,
	766, 433, 434, 0, 0, 0, 0, 0, 0, 0,
	435, 436, 437, 767, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 0, 444, 445, 446,
	768, 769, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 770, 0, 771, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 772, 773, 774, 560, 0,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 0, 0, 0,
	0, 775, 477, 561, 478, 776, 777, 0, 778, 0,
	479, 480, 482, 0, 779, 0, 481, 483, 484, 0,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 780, 496, 0,
	498, 499, 0, 0, 500, 501, 502, 503, 504, 505,
	508, 0, 0, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 0, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 0, 553, 540, 0, 541, 0, 0, 555, 556,
	557, 558, 0, 781, 559, 782, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 0, 572, 0, 784, 573, 574, 566,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 787, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 789,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 0, 901, 636,
	637, 638, 639, 790, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 900, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 0,
	666, 791, 667, 647, 648, 668, 669, 0, 670, 671,
	672, 673, 674, 675, 676, 792, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	793, 687, 688, 689, 690, 794, 694, 695, 696, 697,
	0, 698, 699, 0, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 898, 796,
	797, 798, 0, 720, 0, 709, 711, 712, 713, 714,
	799, 715, 800, 0, 716, 717, 718, 719, 710, 721,
	722, 0, 0, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 0, 732, 0, 0, 733, 734, 735, 801,
	802, 803, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 323, 0, 0, 0, 747,
	748, 805, 749, 750, 751, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 758, 759, 760, 0,
	362, 363, 761, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 0, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 770, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 4147, 773, 774, 560,
	0, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 0, 0,
	0, 0, 775, 477, 561, 478, 776, 777, 0, 778,
	0, 479, 480, 482, 0, 779, 0, 481, 483, 484,
	0, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 780, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 0, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 0, 553, 540, 0, 541, 0, 0, 555,
	556, 557, 558, 0, 781, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 0, 572, 0, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 0, 635,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	0, 666, 791, 667, 647, 648, 668, 669, 0, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 795,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 799, 715, 800, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	801, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 323, 0, 0, 0,
	747, 748, 805, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 334, 333, 335, 336, 337,
	338, 0, 339, 340, 0, 0, 0, 0, 0, 752,
	0, 0, 0, 0, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 348, 349, 350, 351, 753, 754, 0,
	352, 755, 353, 756, 0, 757, 354, 355, 356, 357,
	358, 359, 360, 0, 0, 0, 361, 758, 759, 760,
	0, 362, 363, 761, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 395, 396, 0, 397, 399, 762, 763, 0, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 411, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 764, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 765, 766, 433, 434, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 437, 767, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 0, 444,
	445, 446, 768, 769, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 770, 0, 771, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 4116, 773, 774,
	560, 0, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 0,
	0, 0, 0, 775, 477, 561, 478, 776, 777, 0,
	778, 0, 479, 480, 482, 0, 779, 0, 481, 483,
	484, 0, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 780,
	496, 0, 498, 499, 0, 0, 500, 501, 502, 503,
	504, 505, 508, 0, 0, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 0, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 0, 553, 540, 0, 541, 0, 0,
	555, 556, 557, 558, 0, 781, 559, 782, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 0, 572, 0, 784, 573,
	574, 566, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 787, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 789, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 0,
	635, 636, 637, 638, 639, 790, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 0, 666, 791, 667, 647, 648, 668, 669, 0,
	670, 671, 672, 673, 674, 675, 676, 792, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 793, 687, 688, 689, 690, 794, 694, 695,
	696, 697, 0, 698, 699, 0, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	795, 796, 797, 798, 0, 720, 0, 709, 711, 712,
	713, 714, 799, 715, 800, 0, 716, 717, 718, 719,
	710, 721, 722, 0, 0, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 0, 732, 0, 0, 733, 734,
	735, 801, 802, 803, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 323, 0, 0,
	0, 747, 748, 805, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 334, 333, 335, 336,
	337, 338, 0, 339, 340, 0, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 0, 757, 354, 355, 356,
	357, 358, 359, 360, 0, 0, 0, 361, 758, 759,
	760, 0, 362, 363, 761, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 0, 373, 374,
	375, 372, 376, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 395, 396, 0, 397, 399, 762, 763, 0,
	402, 404, 398, 400, 0, 403, 401, 405, 406, 0,
	407, 408, 409, 0, 0, 410, 411, 412, 0, 413,
	414, 415, 0, 416, 417, 418, 0, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 765, 766, 433, 434, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 437, 767, 0, 0, 0,
	438, 0, 439, 440, 441, 0, 442, 443, 0, 0,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 770, 0, 771, 457,
	0, 458, 459, 460, 461, 462, 463, 464, 4112, 773,
	774, 560, 0, 465, 466, 467, 0, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 0,
	0, 0, 0, 0, 775, 477, 561, 478, 776, 777,
	0, 778, 0, 479, 480, 482, 0, 779, 0, 481,
	483, 484, 0, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 495, 494, 0, 497,
	780, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	503, 504, 505, 508, 0, 0, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 0, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 0, 553, 540, 0, 541, 0,
	0, 555, 556, 557, 558, 0, 781, 559, 782, 562,
	563, 0, 0, 564, 0, 565, 0, 0, 567, 568,
	569, 0, 0, 570, 571, 783, 0, 572, 0, 784,
	573, 574, 566, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 787, 593, 788, 594, 595, 0,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 604,
	605, 606, 789, 607, 608, 610, 609, 611, 0, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 0, 631, 632, 630, 633, 634,
	0, 635, 636, 637, 638, 639, 790, 640, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 654,
	655, 656, 657, 659, 658, 0, 661, 662, 660, 663,
	664, 665, 0, 666, 791, 667, 647, 648, 668, 669,
	0, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 0, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 794, 694,
	695, 696, 697, 0, 698, 699, 0, 693, 684, 0,
	700, 701, 702, 703, 704, 705, 0, 706, 707, 0,
	708, 795, 796, 797, 798, 0, 720, 0, 709, 711,
	712, 713, 714, 799, 715, 800, 0, 716, 717, 718,
	719, 710, 721, 722, 0, 0, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 0, 732, 0, 0, 733,
	734, 735, 801, 802, 803, 0, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 323, 0,
	0, 0, 747, 748, 805, 749, 750, 751, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 334, 333, 335,
	336, 337, 338, 0, 339, 340, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 341, 0, 342, 343,
	344, 0, 345, 346, 347, 348, 349, 350, 351, 753,
	754, 0, 352, 755, 353, 756, 0, 757, 354, 355,
	356, 357, 358, 359, 360, 0, 0, 0, 361, 758,
	759, 760, 0, 362, 363, 761, 0, 0, 0, 364,
	365, 366, 367, 368, 369, 370, 371, 0, 0, 373,
	374, 375, 372, 376, 377, 0, 378, 0, 379, 380,
	381, 382, 383, 384, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 0, 397, 399, 762, 763,
	0, 402, 404, 398, 400, 0, 403, 401, 405, 406,
	0, 407, 408, 409, 0, 0, 410, 411, 412, 0,
	413, 414, 415, 0, 416, 417, 418, 0, 419, 420,
	764, 421, 422, 423, 425, 427, 424, 426, 428, 429,
	430, 431, 432, 765, 766, 433, 434, 0, 0, 0,
	0, 0, 0, 0, 435, 436, 437, 767, 0, 0,
	0, 438, 0, 439, 440, 441, 0, 442, 443, 0,
	0, 444, 445, 446, 768, 769, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 770, 0, 771,
	457, 0, 458, 459, 460, 461, 462, 463, 464, 4055,
	773, 774, 560, 0, 465, 466, 467, 0, 468, 469,
	470, 471, 472, 0, 0, 0, 473, 474, 475, 476,
	0, 0, 0, 0, 0, 775, 477, 561, 478, 776,
	777, 0, 778, 0, 479, 480, 482, 0, 779, 0,
	481, 483, 484, 0, 485, 0, 0, 0, 486, 487,
	488, 489, 490, 491, 492, 0, 493, 495, 494, 0,
	497, 780, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 503, 504, 505, 508, 0, 0, 506, 507, 509,
	510, 0, 511, 512, 514, 517, 513, 515, 516, 518,
	531, 532, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 534, 0, 533, 0, 535, 536,
	537, 538, 539, 547, 549, 550, 545, 546, 548, 551,
	552, 554, 542, 543, 544, 0, 553, 540, 0, 541,
	0, 0, 555, 556, 557, 558, 0, 781, 559, 782,
	562, 563, 0, 0, 564, 0, 565, 0, 0, 567,
	568, 569, 0, 0, 570, 571, 783, 0, 572, 0,
	784, 573, 574, 566, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 585, 586, 785, 587, 588,
	589, 786, 590, 591, 592, 787, 593, 788, 594, 595,
	0, 596, 597, 598, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 789, 607, 608, 610, 609, 611, 0,
	612, 0, 613, 614, 615, 0, 0, 0, 0, 0,
	616, 617, 619, 0, 620, 621, 622, 623, 618, 624,
	625, 626, 627, 628, 629, 0, 631, 632, 630, 633,
	634, 0, 635, 636, 637, 638, 639, 790, 640, 0,
	641, 642, 650, 651, 652, 643, 644, 646, 653, 645,
	654, 655, 656, 657, 659, 658, 0, 661, 662, 660,
	663, 664, 665, 0, 666, 791, 667, 647, 648, 668,
	669, 0, 670, 671, 672, 673, 674, 675, 676, 792,
	0, 677, 0, 678, 679, 680, 681, 682, 683, 685,
	649, 686, 691, 692, 793, 687, 688, 689, 690, 794,
	694, 695, 696, 697, 0, 698, 699, 0, 693, 684,
	0, 700, 701, 702, 703, 704, 705, 0, 706, 707,
	0, 708, 795, 796, 797, 798, 0, 720, 0, 709,
	711, 712, 713, 714, 799, 715, 800, 0, 716, 717,
	718, 719, 710, 721, 722, 0, 0, 723, 724, 725,
	727, 729, 730, 726, 728, 731, 0, 732, 0, 0,
	733, 734, 735, 801, 802, 803, 0, 737, 738, 736,
	739, 740, 743, 741, 742, 804, 744, 745, 746, 323,
	0, 0, 0, 747, 748, 805, 749, 750, 751, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 348, 349, 350, 351,
	753, 754, 0, 352, 755, 353, 756, 0, 757, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	758, 759, 760, 0, 362, 363, 761, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 0, 397, 399, 762,
	763, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 764, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 765, 766, 433, 434, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 437, 767, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 0, 444, 445, 446, 768, 769, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 770, 0,
	771, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	4053, 773, 774, 560, 0, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 0, 775, 477, 561, 478,
	776, 777, 0, 778, 0, 479, 480, 482, 0, 779,
	0, 481, 483, 484, 0, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 780, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 0, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 0, 553, 540, 0,
	541, 0, 0, 555, 556, 557, 558, 0, 781, 559,
	782, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 783, 0, 572,
	0, 784, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 785, 587,
	588, 589, 786, 590, 591, 592, 787, 593, 788, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 789, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 0, 635, 636, 637, 638, 639, 790, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 0, 666, 791, 667, 647, 648,
	668, 669, 0, 670, 671, 672, 673, 674, 675, 676,
	792, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 793, 687, 688, 689, 690,
	794, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 795, 796, 797, 798, 0, 720, 0,
	709, 711, 712, 713, 714, 799, 715, 800, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 801, 802, 803, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 804, 744, 745, 746,
	323, 0, 0, 0, 747, 748, 805, 749, 750, 751,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 0, 339, 340, 0, 0,
	0, 0, 0, 752, 0, 0, 0, 0, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 348, 349, 350,
	351, 753, 754, 0, 352, 755, 353, 756, 0, 757,
	354, 355, 356, 357, 358, 359, 360, 0, 0, 0,
	361, 758, 759, 760, 0, 362, 363, 761, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 395, 396, 0, 397, 399,
	762, 763, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 411,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 764, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 765, 766, 433, 434, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 437, 767,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 0, 444, 445, 446, 768, 769, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 770,
	0, 771, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 4041, 773, 774, 560, 0, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 0, 0, 0, 0, 775, 477, 561,
	478, 776, 777, 0, 778, 0, 479, 480, 482, 0,
	779, 0, 481, 483, 484, 0, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 780, 496, 0, 498, 499, 0, 0,
	500, 501, 502, 503, 504, 505, 508, 0, 0, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 0,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 0, 553, 540,
	0, 541, 0, 0, 555, 556, 557, 558, 0, 781,
	559, 782, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 783, 0,
	572, 0, 784, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 785,
	587, 588, 589, 786, 590, 591, 592, 787, 593, 788,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 789, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 0, 635, 636, 637, 638, 639, 790,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 0, 666, 791, 667, 647,
	648, 668, 669, 0, 670, 671, 672, 673, 674, 675,
	676, 792, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 793, 687, 688, 689,
	690, 794, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 795, 796, 797, 798, 0, 720,
	0, 709, 711, 712, 713, 714, 799, 715, 800, 0,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 0, 732,
	0, 0, 733, 734, 735, 801, 802, 803, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 804, 744, 745,
	746, 323, 0, 0, 0, 747, 748, 805, 749, 750,
	751, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	334, 333, 335, 336, 337, 338, 0, 339, 340, 0,
	0, 0, 0, 0, 752, 0, 0, 0, 0, 341,
	0, 342, 343, 344, 0, 345, 346, 347, 348, 349,
	350, 351, 753, 754, 0, 352, 755, 353, 756, 0,
	757, 354, 355, 356, 357, 358, 359, 360, 0, 0,
	0, 361, 758, 759, 760, 0, 362, 363, 761, 0,
	0, 0, 364, 365, 366, 367, 368, 369, 370, 371,
	0, 0, 373, 374, 375, 372, 376, 377, 0, 378,
	0, 379, 380, 381, 382, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 0, 397,
	399, 762, 763, 0, 402, 404, 398, 400, 0, 403,
	401, 405, 406, 0, 407, 408, 409, 0, 0, 410,
	411, 412, 0, 413, 414, 415, 0, 416, 417, 418,
	0, 419, 420, 764, 421, 422, 423, 425, 427, 424,
	426, 428, 429, 430, 431, 432, 765, 766, 433, 434,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 437,
	767, 0, 0, 0, 438, 0, 439, 440, 441, 0,
	442, 443, 0, 0, 444, 445, 446, 768, 769, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	770, 0, 771, 457, 0, 458, 459, 460, 461, 462,
	463, 464, 4038, 773, 774, 560, 0, 465, 466, 467,
	0, 468, 469, 470, 471, 472, 0, 0, 0, 473,
	474, 475, 476, 0, 0, 0, 0, 0, 775, 477,
	561, 478, 776, 777, 0, 778, 0, 479, 480, 482,
	0, 779, 0, 481, 483, 484, 0, 485, 0, 0,
	0, 486, 487, 488, 489, 490, 491, 492, 0, 493,
	495, 494, 0, 497, 780, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 503, 504, 505, 508, 0, 0,
	506, 507, 509, 510, 0, 511, 512, 514, 517, 513,
	515, 516, 518, 531, 532, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 534, 0, 533,
	0, 535, 536, 537, 538, 539, 547, 549, 550, 545,
	546, 548, 551, 552, 554, 542, 543, 544, 0, 553,
	540, 0, 541, 0, 0, 555, 556, 557, 558, 0,
	781, 559, 782, 562, 563, 0, 0, 564, 0, 565,
	0, 0, 567, 568, 569, 0, 0, 570, 571, 783,
	0, 572, 0, 784, 573, 574, 566, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 585, 586,
	785, 587, 588, 589, 786, 590, 591, 592, 787, 593,
	788, 594, 595, 0, 596, 597, 598, 0, 599, 600,
	601, 602, 603, 604, 605, 606, 789, 607, 608, 610,
	609, 611, 0, 612, 0, 613, 614, 615, 0, 0,
	0, 0, 0, 616, 617, 619, 0, 620, 621, 622,
	623, 618, 624, 625, 626, 627, 628, 629, 0, 631,
	632, 630, 633, 634, 0, 635, 636, 637, 638, 639,
	790, 640, 0, 641, 642, 650, 651, 652, 643, 644,
	646, 653, 645, 654, 655, 656, 657, 659, 658, 0,
	661, 662, 660, 663, 664, 665, 0, 666, 791, 667,
	647, 648, 668, 669, 0, 670, 671, 672, 673, 674,
	675, 676, 792, 0, 677, 0, 678, 679, 680, 681,
	682, 683, 685, 649, 686, 691, 692, 793, 687, 688,
	689, 690, 794, 694, 695, 696, 697, 0, 698, 699,
	0, 693, 684, 0, 700, 701, 702, 703, 704, 705,
	0, 706, 707, 0, 708, 795, 796, 797, 798, 0,
	720, 0, 709, 711, 712, 713, 714, 799, 715, 800,
	0, 716, 717, 718, 719, 710, 721, 722, 0, 0,
	723, 724, 725, 727, 729, 730, 726, 728, 731, 0,
	732, 0, 0, 733, 734, 735, 801, 802, 803, 0,
	737, 738, 736, 739, 740, 743, 741, 742, 804, 744,
	745, 746, 323, 0, 0, 0, 747, 748, 805, 749,
	750, 751, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 0,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 753, 754, 0, 352, 755, 353, 756,
	0, 757, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 758, 759, 760, 0, 362, 363, 761,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 0,
	397, 399, 762, 763, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 764, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 765, 766, 433,
	434, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	437, 767, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 444, 445, 446, 768, 769,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 770, 0, 771, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 3640, 773, 774, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 0, 0, 0, 0, 775,
	477, 561, 478, 776, 777, 0, 778, 0, 479, 480,
	482, 0, 779, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 780, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 0, 0, 555, 556, 557, 558,
	0, 781, 559, 782, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	783, 0, 572, 0, 784, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 785, 587, 588, 589, 786, 590, 591, 592, 787,
	593, 788, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 789, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 635, 636, 637, 638,
	639, 790, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 0, 666, 791,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 792, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 793, 687,
	688, 689, 690, 794, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 795, 796, 797, 798,
	0, 720, 0, 709, 711, 712, 713, 714, 799, 715,
	800, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 801, 802, 803,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 804,
	744, 745, 746, 323, 0, 0, 0, 747, 748, 805,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	348, 349, 350, 351, 753, 754, 0, 352, 755, 353,
	756, 0, 757, 354, 355, 356, 357, 358, 359, 360,
	0, 0, 0, 361, 758, 759, 760, 0, 362, 363,
	761, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 395, 396,
	0, 397, 399, 762, 763, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 764, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 765, 766,
	433, 434, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 437, 767, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 0, 444, 445, 446, 768,
	769, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 770, 0, 771, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 772, 773, 774, 560, 0, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 0, 0, 0, 0,
	775, 477, 561, 478, 776, 777, 0, 778, 0, 479,
	480, 482, 0, 779, 0, 481, 483, 484, 0, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 780, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 503, 504, 505, 508,
	0, 0, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 0, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	0, 553, 540, 0, 541, 0, 0, 555, 556, 557,
	558, 0, 781, 559, 782, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 569, 0, 0, 570,
	571, 783, 0, 572, 0, 784, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 785, 587, 588, 589, 786, 590, 591, 592,
	787, 593, 788, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 789, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 0, 635, 636, 637,
	638, 639, 790, 640, 0, 641, 642, 882, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 0, 661, 662, 660, 663, 664, 665, 0, 666,
	791, 667, 647, 648, 668, 669, 0, 670, 671, 672,
	673, 674, 675, 676, 792, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 793,
	687, 688, 689, 690, 794, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 0, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 795, 796, 797,
	798, 0, 720, 0, 709, 711, 712, 713, 714, 799,
	715, 800, 0, 716, 717, 718, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 0, 732, 0, 0, 733, 734, 735, 801, 802,
	803, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	804, 744, 745, 746, 323, 0, 0, 0, 747, 748,
	805, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 331, 332, 334, 333, 335, 336, 337, 338, 0,
	339, 340, 0, 0, 0, 0, 0, 752, 0, 2782,
	0, 0, 341, 0, 342, 343, 344, 0, 345, 346,
	347, 348, 349, 350, 351, 753, 754, 0, 352, 755,
	353, 756, 0, 757, 354, 355, 356, 357, 358, 359,
	360, 0, 0, 0, 361, 758, 759, 760, 0, 362,
	363, 761, 0, 0, 0, 364, 365, 366, 367, 368,
	369, 370, 371, 0, 0, 373, 374, 375, 372, 376,
	377, 0, 378, 0, 379, 380, 381, 382, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 395,
	396, 0, 397, 399, 762, 763, 0, 402, 404, 398,
	400, 0, 403, 401, 405, 406, 0, 407, 408, 409,
	0, 0, 410, 411, 412, 0, 413, 414, 415, 0,
	416, 417, 418, 0, 419, 420, 764, 421, 422, 423,
	425, 427, 424, 426, 428, 429, 430, 431, 432, 765,
	766, 433, 434, 0, 0, 0, 0, 0, 0, 0,
	435, 436, 437, 767, 0, 0, 0, 438, 0, 439,
	440, 441, 0, 442, 443, 0, 0, 444, 445, 446,
	768, 769, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 770, 0, 771, 457, 0, 458, 459,
	460, 461, 462, 463, 464, 772, 773, 774, 560, 0,
	465, 466, 467, 0, 468, 469, 470, 471, 472, 0,
	0, 0, 473, 474, 475, 476, 0, 0, 0, 0,
	0, 775, 477, 561, 478, 776, 777, 0, 778, 0,
	479, 480, 482, 0, 779, 0, 481, 483, 484, 0,
	485, 0, 0, 0, 486, 487, 488, 489, 490, 491,
	492, 0, 493, 495, 494, 0, 497, 780, 496, 0,
	498, 499, 0, 0, 500, 501, 502, 503, 504, 505,
	508, 0, 0, 506, 507, 509, 510, 0, 511, 512,
	514, 517, 513, 515, 516, 518, 531, 532, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	534, 0, 533, 0, 535, 536, 537, 538, 539, 547,
	549, 550, 545, 546, 548, 551, 552, 554, 542, 543,
	544, 0, 553, 540, 0, 541, 0, 0, 555, 556,
	557, 558, 0, 781, 559, 782, 562, 563, 0, 0,
	564, 0, 565, 0, 0, 567, 568, 569, 0, 0,
	570, 571, 783, 0, 572, 0, 784, 573, 574, 566,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 585, 586, 785, 587, 588, 589, 786, 590, 591,
	592, 787, 593, 788, 594, 595, 0, 596, 597, 598,
	0, 599, 600, 601, 602, 603, 604, 605, 606, 789,
	607, 608, 610, 609, 611, 0, 612, 0, 613, 614,
	615, 0, 0, 0, 0, 0, 616, 617, 619, 0,
	620, 621, 622, 623, 618, 624, 625, 626, 627, 628,
	629, 0, 631, 632, 630, 633, 634, 0, 635, 636,
	637, 638, 639, 790, 640, 0, 641, 642, 650, 651,
	652, 643, 644, 646, 653, 645, 654, 655, 656, 657,
	659, 658, 0, 661, 662, 660, 663, 664, 665, 0,
	0, 791, 667, 647, 648, 668, 669, 0, 670, 671,
	672, 673, 674, 675, 676, 792, 0, 677, 0, 678,
	679, 680, 681, 682, 683, 685, 649, 686, 691, 692,
	793, 687, 688, 689, 690, 794, 694, 695, 696, 697,
	0, 698, 699, 0, 693, 684, 0, 700, 701, 702,
	703, 704, 705, 0, 706, 707, 0, 708, 795, 796,
	797, 798, 0, 720, 0, 709, 711, 712, 713, 714,
	799, 715, 800, 0, 716, 717, 718, 719, 710, 721,
	722, 0, 0, 723, 724, 725, 727, 729, 730, 726,
	728, 731, 0, 732, 0, 0, 733, 734, 735, 801,
	802, 803, 0, 737, 738, 736, 739, 740, 743, 741,
	742, 804, 744, 745, 746, 323, 0, 0, 0, 747,
	748, 805, 749, 750, 751, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 334, 333, 335, 336, 337, 338,
	0, 339, 340, 0, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 341, 0, 342, 343, 344, 0, 345,
	346, 347, 348, 349, 350, 351, 753, 754, 0, 352,
	755, 353, 756, 0, 757, 354, 355, 356, 357, 358,
	359, 360, 0, 0, 0, 361, 758, 759, 760, 0,
	362, 363, 761, 0, 0, 0, 364, 365, 366, 367,
	368, 369, 370, 371, 0, 0, 373, 374, 375, 372,
	376, 377, 0, 378, 0, 379, 380, 381, 382, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 0, 397, 399, 762, 763, 0, 402, 404,
	398, 400, 0, 403, 401, 405, 406, 0, 407, 408,
	409, 0, 0, 410, 411, 412, 0, 413, 414, 415,
	0, 416, 417, 418, 0, 419, 420, 764, 421, 422,
	423, 425, 427, 424, 426, 428, 429, 430, 431, 432,
	765, 766, 433, 434, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 437, 767, 0, 0, 0, 438, 0,
	439, 440, 441, 0, 442, 443, 0, 0, 444, 445,
	446, 768, 769, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 770, 0, 771, 457, 0, 458,
	459, 460, 461, 462, 463, 464, 1491, 773, 774, 560,
	0, 465, 466, 467, 0, 468, 469, 470, 471, 472,
	0, 0, 0, 473, 474, 475, 476, 0, 0, 0,
	0, 0, 775, 477, 561, 478, 776, 777, 0, 778,
	0, 479, 480, 482, 0, 779, 0, 481, 483, 484,
	0, 485, 0, 0, 0, 486, 487, 488, 489, 490,
	491, 492, 0, 493, 495, 494, 0, 497, 780, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 503, 504,
	505, 508, 0, 0, 506, 507, 509, 510, 0, 511,
	512, 514, 517, 513, 515, 516, 518, 531, 532, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 534, 0, 533, 0, 535, 536, 537, 538, 539,
	547, 549, 550, 545, 546, 548, 551, 552, 554, 542,
	543, 544, 0, 553, 540, 0, 541, 0, 0, 555,
	556, 557, 558, 0, 781, 559, 782, 562, 563, 0,
	0, 564, 0, 565, 0, 0, 567, 568, 569, 0,
	0, 570, 571, 783, 0, 572, 0, 784, 573, 574,
	566, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 585, 586, 785, 587, 588, 589, 786, 590,
	591, 592, 787, 593, 788, 594, 595, 0, 596, 597,
	598, 0, 599, 600, 601, 602, 603, 604, 605, 606,
	789, 607, 608, 610, 609, 611, 0, 612, 0, 613,
	614, 615, 0, 0, 0, 0, 0, 616, 617, 619,
	0, 620, 621, 622, 623, 618, 624, 625, 626, 627,
	628, 629, 0, 631, 632, 630, 633, 634, 0, 635,
	636, 637, 638, 639, 790, 640, 0, 641, 642, 650,
	651, 652, 643, 644, 646, 653, 645, 654, 655, 656,
	657, 659, 658, 0, 661, 662, 660, 663, 664, 665,
	0, 666, 791, 667, 647, 648, 668, 669, 0, 670,
	671, 672, 673, 674, 675, 676, 792, 0, 677, 0,
	678, 679, 680, 681, 682, 683, 685, 649, 686, 691,
	692, 793, 687, 688, 689, 690, 794, 694, 695, 696,
	697, 0, 698, 699, 0, 693, 684, 0, 700, 701,
	702, 703, 704, 705, 0, 706, 707, 0, 708, 795,
	796, 797, 798, 0, 720, 0, 709, 711, 712, 713,
	714, 799, 715, 800, 0, 716, 717, 718, 719, 710,
	721, 722, 0, 0, 723, 724, 725, 727, 729, 730,
	726, 728, 731, 0, 732, 0, 0, 733, 734, 735,
	801, 802, 803, 0, 737, 738, 736, 739, 740, 743,
	741, 742, 804, 744, 745, 746, 323, 0, 0, 0,
	747, 748, 805, 749, 750, 751, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 334, 333, 335, 336, 337,
	338, 0, 339, 340, 0, 0, 0, 0, 0, 752,
	0, 0, 0, 0, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 348, 349, 350, 351, 753, 754, 0,
	352, 755, 353, 756, 0, 757, 354, 355, 356, 357,
	358, 359, 360, 0, 0, 0, 361, 758, 759, 760,
	0, 362, 363, 761, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 395, 396, 0, 397, 399, 762, 763, 0, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 411, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 764, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 765, 766, 433, 434, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 437, 767, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 0, 444,
	445, 446, 768, 769, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 770, 0, 771, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 772, 773, 774,
	560, 0, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 0,
	0, 0, 0, 775, 477, 561, 478, 776, 777, 0,
	778, 0, 479, 480, 482, 0, 779, 0, 481, 483,
	484, 0, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 780,
	496, 0, 498, 499, 0, 0, 500, 501, 502, 503,
	504, 505, 508, 0, 0, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 0, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 0, 553, 540, 0, 541, 0, 0,
	555, 556, 557, 558, 0, 781, 559, 782, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 783, 0, 572, 0, 784, 573,
	574, 566, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 785, 587, 588, 589, 786,
	590, 591, 592, 787, 593, 788, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 789, 607, 608, 1411, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 0,
	635, 636, 637, 638, 639, 790, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 0, 666, 791, 667, 647, 648, 668, 669, 0,
	670, 671, 672, 673, 674, 675, 676, 792, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 793, 687, 688, 689, 690, 794, 694, 695,
	696, 697, 0, 698, 699, 0, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	795, 796, 797, 798, 0, 720, 0, 709, 711, 712,
	713, 714, 799, 715, 800, 0, 716, 717, 718, 719,
	710, 721, 722, 0, 0, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 0, 732, 0, 0, 733, 734,
	735, 801, 802, 803, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 804, 744, 745, 746, 323, 0, 0,
	0, 747, 748, 805, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 331, 332, 334, 333, 335, 336,
	337, 338, 0, 339, 340, 0, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 341, 0, 342, 343, 344,
	0, 345, 346, 347, 348, 349, 350, 351, 753, 754,
	0, 352, 755, 353, 756, 0, 757, 354, 355, 356,
	357, 358, 359, 360, 0, 0, 0, 361, 758, 759,
	760, 0, 362, 363, 761, 0, 0, 0, 364, 365,
	366, 367, 368, 369, 370, 371, 0, 0, 373, 374,
	375, 372, 376, 377, 0, 378, 0, 379, 380, 381,
	382, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 395, 396, 0, 397, 399, 762, 763, 0,
	402, 404, 398, 400, 0, 403, 401, 405, 406, 0,
	407, 408, 409, 0, 0, 410, 411, 412, 0, 413,
	414, 415, 0, 416, 417, 418, 0, 419, 420, 764,
	421, 422, 423, 425, 427, 424, 426, 428, 429, 430,
	431, 432, 765, 766, 433, 434, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 437, 767, 0, 0, 0,
	438, 0, 439, 440, 441, 0, 442, 443, 0, 0,
	444, 445, 446, 768, 769, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 770, 0, 771, 0,
	0, 458, 459, 460, 461, 462, 463, 464, 772, 773,
	774, 560, 0, 465, 466, 467, 0, 468, 469, 470,
	471, 472, 0, 0, 0, 473, 474, 475, 476, 0,
	0, 0, 0, 0, 775, 477, 561, 478, 776, 777,
	0, 778, 0, 479, 480, 482, 0, 779, 0, 481,
	483, 484, 0, 485, 0, 0, 0, 486, 487, 488,
	489, 490, 491, 492, 0, 493, 495, 494, 0, 497,
	780, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	503, 504, 505, 508, 0, 0, 506, 507, 509, 510,
	0, 511, 512, 514, 517, 513, 515, 516, 518, 531,
	532, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 534, 0, 533, 0, 535, 536, 537,
	538, 539, 547, 549, 550, 545, 546, 548, 551, 552,
	554, 542, 543, 544, 0, 553, 540, 0, 541, 0,
	0, 555, 556, 557, 558, 0, 781, 559, 782, 562,
	563, 0, 0, 564, 0, 565, 0, 0, 567, 568,
	569, 0, 0, 570, 571, 783, 0, 572, 0, 784,
	573, 574, 566, 575, 576, 577, 0, 579, 580, 581,
	582, 583, 584, 0, 585, 586, 785, 587, 588, 589,
	786, 590, 591, 592, 787, 593, 788, 594, 595, 0,
	596, 597, 598, 0, 599, 600, 601, 602, 603, 0,
	605, 606, 789, 607, 608, 610, 609, 611, 0, 612,
	0, 613, 614, 615, 0, 0, 0, 0, 0, 616,
	617, 619, 0, 620, 621, 622, 623, 618, 624, 625,
	626, 627, 628, 629, 0, 631, 632, 630, 633, 634,
	0, 635, 636, 637, 638, 639, 790, 0, 0, 641,
	642, 650, 651, 652, 643, 644, 646, 653, 645, 654,
	655, 656, 657, 659, 658, 0, 661, 662, 660, 663,
	664, 665, 0, 666, 791, 667, 647, 648, 668, 669,
	0, 670, 671, 672, 673, 674, 675, 676, 792, 0,
	677, 0, 678, 679, 680, 681, 682, 683, 685, 649,
	686, 691, 692, 793, 687, 688, 689, 690, 794, 694,
	695, 696, 697, 0, 698, 699, 0, 693, 684, 0,
	700, 701, 702, 703, 704, 705, 0, 706, 707, 0,
	708, 795, 796, 797, 798, 0, 720, 0, 709, 711,
	712, 713, 714, 799, 715, 800, 0, 716, 717, 718,
	719, 710, 721, 722, 0, 0, 723, 724, 725, 727,
	729, 730, 726, 728, 731, 0, 732, 0, 0, 733,
	734, 735, 801, 802, 803, 0, 737, 738, 736, 739,
	740, 743, 741, 742, 804, 744, 745, 746, 1962, 0,
	1540, 0, 747, 748, 805, 749, 750, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 334,
	333, 335, 336, 337, 338, 0, 339, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	342, 343, 344, 0, 345, 346, 347, 348, 349, 350,
	351, 0, 0, 0, 352, 0, 353, 0, 0, 0,
	354, 355, 356, 357, 358, 359, 360, 0, 0, 0,
	361, 0, 0, 0, 0, 362, 363, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 369, 370, 371, 0,
	0, 373, 374, 375, 372, 376, 377, 0, 378, 0,
	379, 380, 381, 382, 383, 384, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 0, 0, 0, 0,
	0, 1542, 392, 393, 394, 395, 396, 0, 397, 399,
	0, 0, 0, 402, 404, 398, 400, 0, 403, 401,
	405, 406, 0, 407, 408, 409, 0, 0, 410, 411,
	412, 0, 413, 414, 415, 0, 416, 417, 418, 0,
	419, 420, 0, 421, 422, 423, 425, 427, 424, 426,
	428, 429, 430, 431, 432, 0, 0, 433, 434, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 437, 0,
	0, 0, 0, 438, 0, 439, 440, 441, 0, 442,
	443, 0, 0, 444, 445, 446, 0, 0, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 0,
	0, 0, 457, 0, 458, 459, 460, 461, 462, 463,
	464, 1961, 0, 0, 560, 0, 465, 466, 467, 0,
	468, 469, 470, 471, 472, 0, 0, 0, 473, 474,
	475, 476, 0, 0, 0, 0, 0, 0, 477, 561,
	478, 0, 0, 0, 0, 0, 479, 480, 482, 0,
	0, 0, 481, 483, 484, 0, 485, 0, 0, 0,
	486, 487, 488, 489, 490, 491, 492, 0, 493, 495,
	494, 0, 497, 0, 496, 0, 498, 499, 0, 0,
	500, 501, 502, 503, 504, 505, 508, 0, 0, 506,
	507, 509, 510, 0, 511, 512, 514, 517, 513, 515,
	516, 518, 531, 532, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 534, 0, 533, 0,
	535, 536, 537, 538, 539, 547, 549, 550, 545, 546,
	548, 551, 552, 554, 542, 543, 544, 0, 553, 540,
	0, 541, 0, 0, 555, 556, 557, 558, 0, 0,
	559, 0, 562, 563, 0, 0, 564, 0, 565, 0,
	0, 567, 568, 569, 0, 0, 570, 571, 0, 0,
	572, 0, 0, 573, 574, 566, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 585, 586, 0,
	587, 588, 589, 0, 590, 591, 592, 0, 593, 0,
	594, 595, 0, 596, 597, 598, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 0, 607, 608, 610, 609,
	611, 0, 612, 0, 613, 614, 615, 0, 0, 0,
	0, 0, 616, 617, 619, 0, 620, 621, 622, 623,
	618, 624, 625, 626, 627, 628, 629, 0, 631, 632,
	630, 633, 634, 0, 635, 636, 637, 638, 639, 0,
	640, 0, 641, 642, 650, 651, 652, 643, 644, 646,
	653, 645, 654, 655, 656, 657, 659, 658, 0, 661,
	662, 660, 663, 664, 665, 1543, 666, 0, 667, 647,
	648, 668, 669, 0, 670, 671, 672, 673, 674, 675,
	676, 0, 0, 677, 0, 678, 679, 680, 681, 682,
	683, 685, 649, 686, 691, 692, 0, 687, 688, 689,
	690, 0, 694, 695, 696, 697, 0, 698, 699, 0,
	693, 684, 0, 700, 701, 702, 703, 704, 705, 0,
	706, 707, 0, 708, 0, 0, 0, 0, 0, 720,
	0, 709, 711, 712, 713, 714, 0, 715, 0, 0,
	716, 717, 718, 719, 710, 721, 722, 0, 0, 723,
	724, 725, 727, 729, 730, 726, 728, 731, 0, 732,
	0, 0, 733, 734, 735, 0, 0, 0, 0, 737,
	738, 736, 739, 740, 743, 741, 742, 0, 744, 745,
	746, 1880, 0, 1540, 0, 747, 748, 0, 749, 750,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 334, 333, 335, 336, 337, 338, 0, 339,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 342, 343, 344, 0, 345, 346, 347,
	348, 349, 350, 351, 0, 0, 0, 352, 0, 353,
	0, 0, 0, 354, 355, 356, 357, 358, 359, 360,
	0, 0, 0, 361, 0, 0, 0, 0, 362, 363,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 369,
	370, 371, 0, 0, 373, 374, 375, 372, 376, 377,
	0, 378, 0, 379, 380, 381, 382, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 0,
	0, 0, 0, 0, 1542, 392, 393, 394, 395, 396,
	0, 397, 399, 0, 0, 0, 402, 404, 398, 400,
	0, 403, 401, 405, 406, 0, 407, 408, 409, 0,
	0, 410, 411, 412, 0, 413, 414, 415, 0, 416,
	417, 418, 0, 419, 420, 0, 421, 422, 423, 425,
	427, 424, 426, 428, 429, 430, 431, 432, 0, 0,
	433, 434, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 437, 0, 0, 0, 0, 438, 0, 439, 440,
	441, 0, 442, 443, 0, 0, 444, 445, 446, 0,
	0, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 0, 0, 0, 457, 0, 458, 459, 460,
	461, 462, 463, 464, 1879, 0, 0, 560, 0, 465,
	466, 467, 0, 468, 469, 470, 471, 472, 0, 0,
	0, 473, 474, 475, 476, 0, 0, 0, 0, 0,
	0, 477, 561, 478, 0, 0, 0, 0, 0, 479,
	480, 482, 0, 0, 0, 481, 483, 484, 0, 485,
	0, 0, 0, 486, 487, 488, 489, 490, 491, 492,
	0, 493, 495, 494, 0, 497, 0, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 503, 504, 505, 508,
	0, 0, 506, 507, 509, 510, 0, 511, 512, 514,
	517, 513, 515, 516, 518, 531, 532, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 534,
	0, 533, 0, 535, 536, 537, 538, 539, 547, 549,
	550, 545, 546, 548, 551, 552, 554, 542, 543, 544,
	0, 553, 540, 0, 541, 0, 0, 555, 556, 557,
	558, 0, 0, 559, 0, 562, 563, 0, 0, 564,
	0, 565, 0, 0, 567, 568, 569, 0, 0, 570,
	571, 0, 0, 572, 0, 0, 573, 574, 566, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	585, 586, 0, 587, 588, 589, 0, 590, 591, 592,
	0, 593, 0, 594, 595, 0, 596, 597, 598, 0,
	599, 600, 601, 602, 603, 604, 605, 606, 0, 607,
	608, 610, 609, 611, 0, 612, 0, 613, 614, 615,
	0, 0, 0, 0, 0, 616, 617, 619, 0, 620,
	621, 622, 623, 618, 624, 625, 626, 627, 628, 629,
	0, 631, 632, 630, 633, 634, 0, 635, 636, 637,
	638, 639, 0, 640, 0, 641, 642, 650, 651, 652,
	643, 644, 646, 653, 645, 654, 655, 656, 657, 659,
	658, 0, 661, 662, 660, 663, 664, 665, 1543, 666,
	0, 667, 647, 648, 668, 669, 0, 670, 671, 672,
	673, 674, 675, 676, 0, 0, 677, 0, 678, 679,
	680, 681, 682, 683, 685, 649, 686, 691, 692, 0,
	687, 688, 689, 690, 0, 694, 695, 696, 697, 0,
	698, 699, 0, 693, 684, 0, 700, 701, 702, 703,
	704, 705, 0, 706, 707, 0, 708, 0, 0, 0,
	0, 0, 720, 0, 709, 711, 712, 713, 714, 0,
	715, 0, 0, 716, 717, 718, 719, 710, 721, 722,
	0, 0, 723, 724, 725, 727, 729, 730, 726, 728,
	731, 0, 732, 0, 0, 733, 734, 735, 0, 0,
	0, 0, 737, 738, 736, 739, 740, 743, 741, 742,
	0, 744, 745, 746, 1538, 0, 1540, 0, 747, 748,
	0, 749, 750, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 332, 334, 333, 335, 336, 337,
	338, 0, 339, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 342, 343, 344, 0,
	345, 346, 347, 348, 349, 350, 351, 0, 0, 0,
	352, 0, 353, 0, 0, 0, 354, 355, 356, 357,
	358, 359, 360, 0, 0, 0, 361, 0, 0, 0,
	0, 362, 363, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 369, 370, 371, 0, 0, 373, 374, 375,
	372, 376, 377, 0, 378, 0, 379, 380, 381, 382,
	383, 384, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 0, 0, 0, 0, 0, 1542, 392, 393,
	394, 395, 396, 0, 397, 399, 0, 0, 0, 402,
	404, 398, 400, 0, 403, 401, 405, 406, 0, 407,
	408, 409, 0, 0, 410, 411, 412, 0, 413, 414,
	415, 0, 416, 417, 418, 0, 419, 420, 0, 421,
	422, 423, 425, 427, 424, 426, 428, 429, 430, 431,
	432, 0, 0, 433, 434, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 437, 0, 0, 0, 0, 438,
	0, 439, 440, 441, 0, 442, 443, 0, 0, 444,
	445, 446, 0, 0, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 0, 0, 0, 457, 0,
	458, 459, 460, 461, 462, 463, 464, 1537, 0, 0,
	560, 0, 465, 466, 467, 0, 468, 469, 470, 471,
	472, 0, 0, 0, 473, 474, 475, 476, 0, 0,
	0, 0, 0, 0, 477, 561, 478, 0, 0, 0,
	0, 0, 479, 480, 482, 0, 0, 0, 481, 483,
	484, 0, 485, 0, 0, 0, 486, 487, 488, 489,
	490, 491, 492, 0, 493, 495, 494, 0, 497, 0,
	496, 0, 498, 499, 0, 0, 500, 501, 502, 503,
	504, 505, 508, 0, 0, 506, 507, 509, 510, 0,
	511, 512, 514, 517, 513, 515, 516, 518, 531, 532,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 534, 0, 533, 0, 535, 536, 537, 538,
	539, 547, 549, 550, 545, 546, 548, 551, 552, 554,
	542, 543, 544, 0, 553, 540, 0, 541, 0, 0,
	555, 556, 557, 558, 0, 0, 559, 0, 562, 563,
	0, 0, 564, 0, 565, 0, 0, 567, 568, 569,
	0, 0, 570, 571, 0, 0, 572, 0, 0, 573,
	574, 566, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 585, 586, 0, 587, 588, 589, 0,
	590, 591, 592, 0, 593, 0, 594, 595, 0, 596,
	597, 598, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 0, 607, 608, 610, 609, 611, 0, 612, 0,
	613, 614, 615, 0, 0, 0, 0, 0, 616, 617,
	619, 0, 620, 621, 622, 623, 618, 624, 625, 626,
	627, 628, 629, 0, 631, 632, 630, 633, 634, 0,
	635, 636, 637, 638, 639, 0, 640, 0, 641, 642,
	650, 651, 652, 643, 644, 646, 653, 645, 654, 655,
	656, 657, 659, 658, 0, 661, 662, 660, 663, 664,
	665, 1543, 666, 0, 667, 647, 648, 668, 669, 0,
	670, 671, 672, 673, 674, 675, 676, 0, 0, 677,
	0, 678, 679, 680, 681, 682, 683, 685, 649, 686,
	691, 692, 0, 687, 688, 689, 690, 0, 694, 695,
	696, 697, 0, 698, 699, 0, 693, 684, 0, 700,
	701, 702, 703, 704, 705, 0, 706, 707, 0, 708,
	0, 0, 0, 0, 0, 720, 0, 709, 711, 712,
	713, 714, 0, 715, 0, 0, 716, 717, 718, 719,
	710, 721, 722, 0, 0, 723, 724, 725, 727, 729,
	730, 726, 728, 731, 0, 732, 0, 0, 733, 734,
	735, 0, 0, 0, 0, 737, 738, 736, 739, 740,
	743, 741, 742, 0, 744, 745, 746, 2388, 0, 1540,
	0, 747, 748, 0, 749, 750, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 0, 353, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	0, 0, 0, 0, 362, 363, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	1542, 392, 393, 394, 395, 396, 0, 397, 399, 0,
	0, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 0, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 0, 0, 433, 434, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 437, 0, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 0, 444, 445, 446, 0, 0, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 0, 0,
	0, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	0, 0, 0, 560, 0, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 0, 0, 477, 561, 478,
	0, 0, 0, 0, 0, 479, 480, 482, 0, 0,
	0, 481, 483, 484, 0, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 0, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 0, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 0, 553, 540, 0,
	541, 0, 0, 555, 556, 557, 558, 0, 0, 559,
	0, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 0, 0, 572,
	0, 0, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 0, 593, 0, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 0, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 0, 635, 636, 637, 638, 639, 0, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 1543, 666, 0, 667, 647, 648,
	668, 669, 0, 670, 671, 672, 673, 674, 675, 676,
	0, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 0, 687, 688, 689, 690,
	0, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 0, 0, 0, 0, 0, 720, 0,
	709, 711, 712, 713, 714, 0, 715, 0, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 0, 0, 0, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 0, 744, 745, 746,
	2347, 0, 1540, 0, 747, 748, 0, 749, 750, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	332, 334, 333, 335, 336, 337, 338, 0, 339, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 342, 343, 344, 0, 345, 346, 347, 348,
	349, 350, 351, 0, 0, 0, 352, 0, 353, 0,
	0, 0, 354, 355, 356, 357, 358, 359, 360, 0,
	0, 0, 361, 0, 0, 0, 0, 362, 363, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 373, 374, 375, 372, 376, 377, 0,
	378, 0, 379, 380, 381, 382, 383, 384, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 0, 0,
	0, 0, 0, 1542, 392, 393, 394, 395, 396, 0,
	397, 399, 0, 0, 0, 402, 404, 398, 400, 0,
	403, 401, 405, 406, 0, 407, 408, 409, 0, 0,
	410, 411, 412, 0, 413, 414, 415, 0, 416, 417,
	418, 0, 419, 420, 0, 421, 422, 423, 425, 427,
	424, 426, 428, 429, 430, 431, 432, 0, 0, 433,
	434, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	437, 0, 0, 0, 0, 438, 0, 439, 440, 441,
	0, 442, 443, 0, 0, 444, 445, 446, 0, 0,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 0, 0, 0, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 0, 0, 0, 560, 0, 465, 466,
	467, 0, 468, 469, 470, 471, 472, 0, 0, 0,
	473, 474, 475, 476, 0, 0, 0, 0, 0, 0,
	477, 561, 478, 0, 0, 0, 0, 0, 479, 480,
	482, 0, 0, 0, 481, 483, 484, 0, 485, 0,
	0, 0, 486, 487, 488, 489, 490, 491, 492, 0,
	493, 495, 494, 0, 497, 0, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 503, 504, 505, 508, 0,
	0, 506, 507, 509, 510, 0, 511, 512, 514, 517,
	513, 515, 516, 518, 531, 532, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 534, 0,
	533, 0, 535, 536, 537, 538, 539, 547, 549, 550,
	545, 546, 548, 551, 552, 554, 542, 543, 544, 0,
	553, 540, 0, 541, 0, 0, 555, 556, 557, 558,
	0, 0, 559, 0, 562, 563, 0, 0, 564, 0,
	565, 0, 0, 567, 568, 569, 0, 0, 570, 571,
	0, 0, 572, 0, 0, 573, 574, 566, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 585,
	586, 0, 587, 588, 589, 0, 590, 591, 592, 0,
	593, 0, 594, 595, 0, 596, 597, 598, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 0, 607, 608,
	610, 609, 611, 0, 612, 0, 613, 614, 615, 0,
	0, 0, 0, 0, 616, 617, 619, 0, 620, 621,
	622, 623, 618, 624, 625, 626, 627, 628, 629, 0,
	631, 632, 630, 633, 634, 0, 635, 636, 637, 638,
	639, 0, 640, 0, 641, 642, 650, 651, 652, 643,
	644, 646, 653, 645, 654, 655, 656, 657, 659, 658,
	0, 661, 662, 660, 663, 664, 665, 1543, 666, 0,
	667, 647, 648, 668, 669, 0, 670, 671, 672, 673,
	674, 675, 676, 0, 0, 677, 0, 678, 679, 680,
	681, 682, 683, 685, 649, 686, 691, 692, 0, 687,
	688, 689, 690, 0, 694, 695, 696, 697, 0, 698,
	699, 0, 693, 684, 0, 700, 701, 702, 703, 704,
	705, 0, 706, 707, 0, 708, 0, 0, 0, 0,
	0, 720, 0, 709, 711, 712, 713, 714, 0, 715,
	0, 0, 716, 717, 718, 719, 710, 721, 722, 0,
	0, 723, 724, 725, 727, 729, 730, 726, 728, 731,
	0, 732, 0, 0, 733, 734, 735, 0, 0, 0,
	0, 737, 738, 736, 739, 740, 743, 741, 742, 1540,
	744, 745, 746, 0, 0, 0, 0, 747, 748, 0,
	749, 750, 751, 0, 0, 0, 331, 332, 334, 333,
	335, 336, 337, 338, 0, 339, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 342,
	343, 344, 0, 345, 346, 347, 348, 349, 350, 351,
	0, 0, 0, 352, 0, 353, 0, 0, 0, 354,
	355, 356, 357, 358, 359, 360, 0, 0, 0, 361,
	0, 0, 0, 0, 362, 363, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 369, 370, 371, 0, 0,
	373, 374, 375, 372, 376, 377, 0, 378, 0, 379,
	380, 381, 382, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 0, 0, 0, 0, 0,
	1542, 392, 393, 394, 395, 396, 0, 397, 399, 0,
	0, 0, 402, 404, 398, 400, 0, 403, 401, 405,
	406, 0, 407, 408, 409, 0, 0, 410, 411, 412,
	0, 413, 414, 415, 0, 416, 417, 418, 0, 419,
	420, 0, 421, 422, 423, 425, 427, 424, 426, 428,
	429, 430, 431, 432, 0, 0, 433, 434, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 437, 0, 0,
	0, 0, 438, 0, 439, 440, 441, 0, 442, 443,
	0, 0, 444, 445, 446, 0, 0, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 0, 0,
	0, 457, 0, 458, 459, 460, 461, 462, 463, 464,
	0, 0, 0, 560, 0, 465, 466, 467, 0, 468,
	469, 470, 471, 472, 0, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 0, 0, 0, 477, 561, 478,
	0, 0, 0, 0, 0, 479, 480, 482, 0, 0,
	0, 481, 483, 484, 0, 485, 0, 0, 0, 486,
	487, 488, 489, 490, 491, 492, 0, 493, 495, 494,
	0, 497, 0, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 503, 504, 505, 508, 0, 0, 506, 507,
	509, 510, 0, 511, 512, 514, 517, 513, 515, 516,
	518, 531, 532, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 534, 0, 533, 0, 535,
	536, 537, 538, 539, 547, 549, 550, 545, 546, 548,
	551, 552, 554, 542, 543, 544, 0, 553, 540, 0,
	541, 0, 0, 555, 556, 557, 558, 0, 0, 559,
	0, 562, 563, 0, 0, 564, 0, 565, 0, 0,
	567, 568, 569, 0, 0, 570, 571, 0, 0, 572,
	0, 0, 573, 574, 566, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 585, 586, 0, 587,
	588, 589, 0, 590, 591, 592, 0, 593, 0, 594,
	595, 0, 596, 597, 598, 0, 599, 600, 601, 602,
	603, 604, 605, 606, 0, 607, 608, 610, 609, 611,
	0, 612, 0, 613, 614, 615, 0, 0, 0, 0,
	0, 616, 617, 619, 0, 620, 621, 622, 623, 618,
	624, 625, 626, 627, 628, 629, 0, 631, 632, 630,
	633, 634, 0, 635, 636, 637, 638, 639, 0, 640,
	0, 641, 642, 650, 651, 652, 643, 644, 646, 653,
	645, 654, 655, 656, 657, 659, 658, 0, 661, 662,
	660, 663, 664, 665, 1543, 666, 0, 667, 647, 648,
	668, 669, 0, 670, 671, 672, 673, 674, 675, 676,
	0, 0, 677, 0, 678, 679, 680, 681, 682, 683,
	685, 649, 686, 691, 692, 0, 687, 688, 689, 690,
	0, 694, 695, 696, 697, 0, 698, 699, 0, 693,
	684, 0, 700, 701, 702, 703, 704, 705, 0, 706,
	707, 0, 708, 0, 0, 0, 0, 0, 720, 0,
	709, 711, 712, 713, 714, 0, 715, 0, 0, 716,
	717, 718, 719, 710, 721, 722, 0, 0, 723, 724,
	725, 727, 729, 730, 726, 728, 731, 0, 732, 0,
	0, 733, 734, 735, 0, 0, 0, 0, 737, 738,
	736, 739, 740, 743, 741, 742, 0, 744, 745, 746,
	0, 0, 0, 0, 747, 748, 0, 749, 750, 751,
	2068, 2069, 0, 2102, 2103, 2104, 2113, 2114, 2115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2106, 2099, 0, 0, 0, 0, 0,
	2100, 0, 0, 2071, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2119, 2068, 2069, 0, 2102, 2103,
	2104, 2113, 2114, 2115, 0, 0, 0, 0, 0, 0,
	0, 0, 2125, 0, 0, 0, 0, 0, 2106, 2099,
	0, 2070, 0, 0, 0, 2100, 0, 0, 2071, 0,
	0, 0, 2090, 0, 0, 0, 0, 0, 0, 2119,
	2068, 2069, 2087, 2102, 2103, 2104, 2113, 2114, 2115, 0,
	0, 0, 0, 0, 0, 0, 0, 2125, 0, 0,
	0, 0, 0, 2106, 2099, 0, 2070, 0, 0, 0,
	2100, 0, 0, 2071, 0, 0, 0, 2090, 0, 0,
	0, 0, 0, 0, 2119, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2125, 0, 0, 0, 0, 0, 0, 0,
	0, 2070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 0, 0, 2093, 2094, 2095, 2096, 0,
	0, 0, 2087, 0, 0, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2093, 2094, 2095, 2096, 0, 0, 0, 0, 2110, 0,
	2076, 0, 2120, 0, 0, 0, 0, 0, 0, 2098,
	2101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2116, 0, 2117, 2093, 2094, 2095, 2096, 0,
	0, 2085, 2086, 2110, 0, 2076, 0, 2120, 0, 0,
	0, 0, 0, 0, 2098, 2101, 0, 0, 0, 0,
	0, 2108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2091, 2116, 0, 2117,
	0, 0, 0, 0, 0, 0, 2085, 2086, 2110, 0,
	2068, 2069, 2120, 2102, 2103, 2104, 2113, 2114, 2115, 2098,
	2101, 0, 0, 0, 0, 0, 2108, 0, 0, 0,
	0, 0, 0, 2106, 2099, 0, 0, 0, 0, 0,
	2100, 2091, 2116, 2071, 2117, 0, 2118, 0, 0, 0,
	0, 2085, 2086, 0, 2119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2107, 0, 0,
	0, 2108, 2125, 0, 0, 0, 0, 0, 2122, 0,
	0, 2070, 0, 0, 0, 0, 2091, 0, 0, 0,
	0, 2118, 2090, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2122, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2118, 0, 2097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2107, 0, 0,
	0, 0, 0, 0, 2092, 0, 0, 0, 2122, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2097, 0, 2093, 2094, 2095, 2096, 0,
	0, 0, 0, 0, 0, 2076, 2111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2097, 0,
	0, 0, 2124, 0, 0, 0, 0, 0, 2110, 0,
	0, 2111, 2120, 0, 0, 0, 0, 0, 0, 2098,
	2101, 0, 0, 0, 2092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2116, 0, 2117, 0, 0, 2124, 0, 0,
	0, 2085, 2086, 0, 0, 0, 2111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2109, 0, 2091, 0, 0, 0,
	0, 0, 2124, 0, 0, 0, 2082, 2083, 2089, 2112,
	2088, 2084, 0, 2081, 2079, 2080, 2072, 2073, 2074, 2075,
	2077, 2078, 0, 0, 0, 0, 0, 5306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2109,
	0, 0, 0, 0, 0, 0, 2118, 0, 0, 0,
	0, 2082, 2083, 2089, 2112, 2088, 2084, 0, 2081, 2079,
	2080, 2072, 2073, 2074, 2075, 2077, 2078, 2107, 0, 0,
	0, 0, 5099, 0, 0, 0, 0, 0, 2122, 0,
	0, 0, 0, 0, 2109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2082, 2083, 2089, 2112,
	2088, 2084, 0, 2081, 2079, 2080, 2072, 2073, 2074, 2075,
	2077, 2078, 0, 0, 0, 0, 0, 4911, 2068, 2069,
	0, 2102, 2103, 2104, 2113, 2114, 2115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2097, 0,
	0, 2106, 2099, 0, 0, 0, 0, 0, 2100, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2119, 0, 2092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2125, 0, 0, 0, 0, 0, 0, 0, 0, 2070,
	0, 0, 0, 0, 0, 0, 2111, 0, 2068, 2069,
	2090, 2102, 2103, 2104, 2113, 2114, 2115, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 2099, 0, 0, 0, 0, 0, 2100, 0,
	0, 2071, 2124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2125, 0, 0, 0, 0, 0, 0, 0, 0, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 2093, 2094, 2095, 2096, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2082, 2083, 2089, 2112,
	2088, 2084, 0, 2081, 2079, 2080, 2072, 2073, 2074, 2075,
	2077, 2078, 0, 0, 0, 0, 2110, 4802, 0, 0,
	2120, 0, 0, 0, 0, 0, 0, 2098, 2101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 2094, 2095, 2096, 0, 0, 0,
	2116, 0, 2117, 2076, 0, 0, 0, 0, 0, 2085,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2091, 0, 2110, 0, 0, 0,
	2120, 0, 0, 0, 0, 0, 0, 2098, 2101, 0,
	0, 0, 0, 2068, 2069, 0, 2102, 2103, 2104, 2113,
	2114, 2115, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 2117, 0, 0, 0, 2106, 2099, 0, 2085,
	2086, 0, 0, 2100, 2118, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2119, 0, 2108,
	0, 0, 0, 0, 0, 2107, 0, 0, 0, 0,
	0, 0, 0, 0, 2091, 2125, 2122, 0, 0, 0,
	0, 0, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 0, 0, 0,
	0, 0, 0, 0, 0, 2107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 2092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2093, 2094,
	2095, 2096, 0, 0, 2111, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2110, 2092, 0, 0, 2120, 0, 0, 0, 0,
	0, 0, 2098, 2101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2111, 2116, 0, 2117, 0, 0,
	0, 0, 0, 0, 2085, 2086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2108, 0, 0, 0, 0, 0,
	2124, 0, 2109, 0, 0, 0, 0, 0, 0, 2091,
	0, 0, 0, 0, 2082, 2083, 2089, 2112, 2088, 2084,
	0, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078,
	0, 0, 0, 0, 0, 4801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2107, 0, 2109, 0, 0, 0, 0, 0, 0, 0,
	0, 2122, 0, 0, 2082, 2083, 2089, 2112, 2088, 2084,
	0, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078,
	0, 0, 0, 0, 0, 4800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2068,
	2069, 0, 2102, 2103, 2104, 2113, 2114, 2115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2097, 2106, 2099, 0, 0, 0, 0, 0, 2100,
	0, 0, 2071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2119, 0, 0, 0, 2092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2125, 0, 0, 0, 0, 0, 0, 0, 0,
	2070, 0, 0, 0, 0, 0, 0, 0, 0, 2111,
	0, 2090, 0, 0, 0, 0, 0, 0, 0, 2068,
	2069, 2087, 2102, 2103, 2104, 2113, 2114, 2115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2106, 2099, 0, 2124, 0, 0, 0, 2100,
	0, 0, 2071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2125, 0, 0, 0, 0, 0, 0, 0, 0,
	2070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2090, 0, 0, 2093, 2094, 2095, 2096, 0, 0,
	0, 2087, 0, 0, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2082,
	2083, 2089, 2112, 2088, 2084, 0, 2081, 2079, 2080, 2072,
	2073, 2074, 2075, 2077, 2078, 0, 0, 2110, 0, 0,
	4375, 2120, 0, 0, 0, 0, 0, 0, 2098, 2101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2116, 0, 2117, 2093, 2094, 2095, 2096, 0, 0,
	2085, 2086, 0, 0, 2076, 0, 2068, 2069, 0, 2102,
	2103, 2104, 2113, 2114, 2115, 0, 0, 0, 0, 0,
	2108, 0, 0, 0, 0, 0, 0, 0, 0, 2106,
	2099, 0, 0, 0, 0, 2091, 2100, 0, 0, 2071,
	0, 0, 0, 0, 0, 0, 0, 2110, 0, 0,
	2119, 2120, 0, 0, 0, 0, 0, 0, 2098, 2101,
	0, 0, 0, 0, 0, 0, 0, 0, 2125, 0,
	0, 0, 0, 0, 0, 0, 0, 2070, 0, 0,
	0, 2116, 0, 2117, 0, 2118, 0, 0, 2090, 0,
	2085, 2086, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 2107, 0, 0, 0,
	2108, 0, 0, 0, 0, 0, 0, 2122, 0, 0,
	0, 0, 0, 0, 0, 2091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2118, 0, 2097, 0, 0,
	0, 2093, 2094, 2095, 2096, 0, 0, 0, 0, 0,
	0, 2076, 0, 0, 0, 0, 2107, 0, 0, 0,
	0, 0, 0, 2092, 0, 0, 0, 2122, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2110, 2111, 0, 0, 2120, 0,
	0, 0, 0, 0, 0, 2098, 2101, 0, 0, 0,
	0, 2068, 2069, 0, 2102, 2103, 2104, 2113, 2114, 2115,
	0, 0, 0, 0, 0, 0, 0, 2097, 2116, 0,
	2117, 2124, 0, 0, 2106, 2099, 0, 2085, 2086, 0,
	0, 2100, 0, 0, 2071, 0, 0, 0, 0, 0,
	0, 0, 0, 2092, 0, 2119, 0, 2108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2091, 2125, 0, 0, 0, 0, 0, 0,
	0, 0, 2070, 0, 0, 2111, 0, 0, 0, 0,
	0, 0, 0, 2090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2109, 0, 0, 0, 0, 0, 0,
	0, 2124, 2118, 0, 0, 2082, 2083, 2089, 2112, 2088,
	2084, 0, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077,
	2078, 0, 0, 2107, 0, 0, 3781, 0, 0, 0,
	0, 0, 0, 0, 2122, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2093, 2094, 2095, 2096,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 0, 0, 2109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2097, 2082, 2083, 2089, 2112, 2088,
	2084, 0, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077,
	2078, 0, 0, 0, 0, 0, 3780, 0, 0, 2110,
	2092, 0, 0, 2120, 0, 0, 0, 0, 0, 0,
	2098, 2101, 0, 0, 2068, 2069, 0, 2102, 2103, 2104,
	2113, 2114, 2115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2111, 2116, 0, 2117, 0, 2106, 2099, 0,
	0, 0, 2085, 2086, 2100, 0, 0, 2071, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2119, 0,
	0, 0, 2108, 0, 0, 0, 0, 0, 2124, 0,
	0, 0, 0, 0, 0, 0, 2125, 2091, 0, 0,
	0, 0, 0, 0, 0, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2107, 0,
	2109, 0, 0, 0, 0, 0, 0, 0, 0, 2122,
	0, 0, 2082, 2083, 2089, 2112, 2088, 2084, 0, 2081,
	2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078, 0, 0,
	0, 0, 0, 3779, 0, 0, 0, 0, 0, 2093,
	2094, 2095, 2096, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2110, 0, 0, 2092, 2120, 0, 0, 0,
	0, 0, 0, 2098, 2101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2116, 2111, 2117, 0,
	0, 0, 0, 0, 0, 2085, 2086, 0, 0, 0,
	0, 2068, 2069, 0, 2102, 2103, 2104, 2113, 2114, 2115,
	0, 0, 0, 0, 0, 2108, 0, 0, 0, 0,
	0, 0, 0, 2124, 2106, 2099, 0, 0, 0, 0,
	2091, 2100, 0, 0, 2071, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2125, 0, 0, 0, 0, 0, 0,
	0, 0, 2070, 0, 0, 0, 0, 0, 0, 0,
	2118, 0, 0, 2090, 0, 0, 0, 2582, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 2107, 0, 0, 0, 2109, 0, 0, 0, 0,
	0, 0, 2122, 0, 0, 0, 0, 2082, 2083, 2089,
	2112, 2088, 2084, 0, 2081, 2079, 2080, 2072, 2073, 2074,
	2075, 2077, 2078, 0, 0, 0, 0, 0, 3778, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2580, 0, 0, 0, 0, 0, 0,
	0, 0, 2097, 0, 0, 0, 2093, 2094, 2095, 2096,
	0, 0, 0, 0, 0, 0, 2076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2110,
	2111, 0, 0, 2120, 0, 0, 0, 0, 0, 0,
	2098, 2101, 0, 0, 2068, 2069, 0, 2102, 2103, 2104,
	2113, 2114, 2115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2116, 0, 2117, 2124, 2106, 2099, 0,
	0, 0, 2085, 2086, 2100, 0, 0, 2071, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2119, 0,
	0, 0, 2108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2125, 2091, 0, 0,
	0, 0, 0, 0, 0, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2109, 0,
	0, 0, 0, 0, 0, 0, 0, 2118, 0, 0,
	2082, 2083, 2089, 2112, 2088, 2084, 0, 2081, 2079, 2080,
	2072, 2073, 2074, 2075, 2077, 2078, 0, 0, 2107, 3743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2122,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	2094, 2095, 2096, 0, 0, 0, 0, 0, 0, 2076,
	5631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2581, 2097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2110, 0, 0, 2092, 2120, 0, 0, 0,
	0, 0, 0, 2098, 2101, 0, 0, 2068, 2069, 0,
	2102, 2103, 2104, 2113, 2114, 2115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2116, 2111, 2117, 0,
	2106, 2099, 0, 0, 0, 2085, 2086, 2100, 0, 0,
	2071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2119, 0, 0, 0, 2108, 0, 0, 0, 0,
	0, 0, 0, 2124, 0, 0, 0, 0, 0, 2125,
	2091, 0, 0, 0, 2579, 0, 0, 0, 2070, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 2090,
	0, 0, 0, 0, 0, 88, 0, 54, 53, 2087,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	2118, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 2107, 0, 0, 75, 2109, 0, 0, 0, 0,
	0, 56, 2122, 181, 0, 0, 0, 2082, 2083, 2089,
	2112, 2088, 2084, 0, 2081, 2079, 2080, 2072, 2073, 2074,
	2075, 2077, 2078, 55, 0, 5630, 104, 0, 0, 0,
	0, 0, 2093, 2094, 2095, 2096, 0, 0, 0, 0,
	0, 0, 2076, 0, 3846, 0, 0, 0, 0, 0,
	0, 3845, 0, 0, 58, 76, 0, 0, 0, 0,
	0, 0, 2097, 0, 59, 0, 0, 0, 0, 65,
	0, 0, 0, 0, 5734, 0, 0, 0, 0, 0,
	0, 0, 57, 0, 128, 2110, 0, 0, 2092, 2120,
	112, 125, 0, 0, 0, 0, 2098, 2101, 0, 0,
	77, 0, 2068, 2069, 0, 2102, 2103, 2104, 2113, 2114,
	2115, 0, 0, 0, 0, 0, 0, 0, 0, 2116,
	2111, 2117, 0, 0, 0, 2106, 2099, 0, 2085, 2086,
	0, 3713, 2100, 0, 0, 2071, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2119, 0, 2108, 0,
	0, 0, 0, 0, 0, 0, 2124, 113, 0, 0,
	0, 0, 0, 2091, 2125, 0, 0, 0, 0, 0,
	0, 0, 0, 2070, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2107, 0, 0, 3714, 2109, 0,
	0, 0, 78, 0, 0, 2122, 0, 0, 0, 0,
	2082, 2083, 2089, 2112, 2088, 2084, 0, 2081, 2079, 2080,
	2072, 2073, 2074, 2075, 2077, 2078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 2094, 2095,
	2096, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	2110, 2092, 0, 0, 2120, 0, 0, 0, 0, 61,
	0, 2098, 2101, 0, 0, 2068, 2069, 0, 2102, 2103,
	2104, 2113, 2114, 2115, 0, 0, 64, 0, 0, 0,
	0, 67, 0, 2111, 2116, 0, 2117, 0, 2106, 2099,
	0, 79, 0, 2085, 2086, 2100, 0, 0, 2071, 66,
	218, 0, 120, 0, 0, 124, 0, 5592, 0, 2119,
	0, 62, 0, 2108, 0, 182, 0, 0, 0, 2124,
	0, 0, 0, 63, 0, 0, 0, 2125, 2091, 0,
	0, 0, 0, 0, 0, 0, 2070, 281, 0, 0,
	0, 0, 0, 0, 0, 70, 0, 2090, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2118, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 2107,
	0, 2109, 0, 0, 0, 0, 0, 0, 0, 0,
	2122, 0, 0, 2082, 2083, 2089, 2112, 2088, 2084, 179,
	2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078, 80,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	2093, 2094, 2095, 2096, 282, 0, 0, 0, 0, 0,
	2076, 0, 5209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	2097, 0, 276, 0, 0, 0, 219, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2110, 0, 0, 2092, 2120, 0, 0,
	0, 0, 222, 0, 2098, 2101, 0, 0, 2068, 2069,
	0, 2102, 2103, 2104, 2113, 2114, 2115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2116, 2111, 2117,
	0, 2106, 2099, 0, 0, 0, 2085, 2086, 2100, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2119, 0, 0, 0, 2108, 0, 0, 0,
	0, 0, 0, 0, 2124, 0, 0, 0, 0, 0,
	2125, 2091, 0, 0, 0, 0, 0, 0, 0, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2118, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2107, 0, 0, 0, 2109, 0, 0, 0,
	0, 0, 0, 2122, 0, 0, 0, 0, 2082, 2083,
	2089, 2112, 2088, 2084, 0, 2081, 2079, 2080, 2072, 2073,
	2074, 2075, 2077, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 2094, 2095, 2096, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 2068, 2069, 0, 2102, 2103, 2104, 2113, 2114,
	2115, 0, 0, 2097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2106, 2099, 0, 0, 0,
	0, 0, 2100, 0, 0, 2071, 2110, 0, 0, 2092,
	2120, 0, 0, 0, 0, 0, 2119, 2098, 2101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2125, 0, 0, 0, 0, 0,
	2116, 2111, 2117, 2070, 0, 0, 0, 0, 0, 2085,
	2086, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 2108,
	0, 0, 0, 0, 0, 0, 0, 2124, 0, 0,
	0, 0, 0, 0, 2091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 2094, 2095,
	2096, 0, 0, 0, 0, 2107, 1259, 2076, 0, 2109,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 2082, 2083, 2089, 2112, 2088, 2084, 0, 2081, 2079,
	2080, 2072, 2073, 2074, 2075, 2077, 2078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2110, 0, 0, 0, 2120, 0, 0, 0, 0, 0,
	0, 2098, 2101, 0, 0, 2068, 2069, 0, 2102, 2103,
	2104, 2113, 2114, 2115, 0, 0, 2097, 0, 0, 0,
	0, 0, 0, 0, 2116, 0, 2117, 0, 2106, 2099,
	0, 0, 0, 2085, 2086, 2100, 0, 0, 2071, 0,
	0, 0, 2092, 0, 0, 0, 0, 0, 0, 2119,
	0, 0, 0, 2108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2125, 2091, 0,
	0, 0, 0, 0, 2111, 0, 2070, 0, 2068, 2069,
	0, 2102, 2103, 2104, 2113, 2114, 2115, 2090, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 2106, 2099, 0, 0, 0, 0, 0, 2100, 0,
	2124, 2071, 0, 0, 0, 0, 0, 0, 2118, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2107,
	2125, 0, 0, 0, 0, 0, 0, 0, 0, 2070,
	2122, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2093, 2094, 2095, 2096, 0, 0, 0, 0, 0, 0,
	2076, 0, 2109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2082, 2083, 2089, 2112, 2088, 2084,
	2097, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2110, 0, 0, 2092, 2120, 0, 0,
	0, 0, 0, 0, 2098, 2101, 0, 0, 0, 0,
	0, 0, 0, 2093, 2094, 2095, 2096, 0, 0, 0,
	0, 0, 0, 2076, 0, 4615, 0, 2116, 2111, 2117,
	0, 0, 0, 0, 0, 0, 2085, 2086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2108, 0, 0, 0,
	0, 0, 0, 0, 2124, 0, 2110, 0, 0, 0,
	2120, 2091, 0, 0, 0, 0, 0, 2098, 2101, 0,
	0, 0, 0, 4963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 2117, 0, 0, 0, 0, 0, 0, 2085,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2118, 0, 0, 0, 0, 0, 0, 0, 2108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2107, 0, 2091, 0, 2109, 0, 0, 0,
	0, 0, 0, 2122, 0, 0, 0, 0, 2082, 2083,
	2089, 2112, 2088, 2084, 0, 2081, 2079, 2080, 2072, 2073,
	2074, 2075, 2077, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2118, 0, 0, 0, 0, 2068,
	2069, 0, 2102, 2103, 2104, 2113, 2114, 2115, 0, 0,
	0, 0, 0, 2097, 0, 2107, 0, 0, 0, 0,
	0, 0, 2106, 2099, 0, 0, 2122, 0, 0, 2100,
	0, 0, 2071, 0, 0, 0, 0, 0, 0, 2092,
	0, 0, 0, 2119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2125, 0, 0, 0, 0, 0, 0, 0, 0,
	2070, 2111, 2068, 2069, 0, 2102, 2103, 2104, 2113, 2114,
	2115, 2090, 0, 0, 0, 0, 2097, 0, 0, 0,
	0, 2087, 0, 0, 0, 2106, 2099, 0, 0, 0,
	0, 0, 2100, 0, 0, 2071, 0, 2124, 0, 0,
	0, 0, 2092, 0, 0, 0, 2119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4616, 0, 0, 0,
	0, 0, 0, 0, 2125, 0, 0, 0, 0, 0,
	0, 0, 0, 2070, 2111, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2093, 2094, 2095, 2096, 0, 0,
	2124, 0, 0, 0, 2076, 0, 0, 0, 0, 2109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2082, 2083, 2089, 2112, 2088, 2084, 0, 2081, 2079,
	2080, 2072, 2073, 2074, 2075, 2077, 2078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2110, 0, 0,
	0, 2120, 0, 0, 0, 0, 0, 0, 2098, 2101,
	0, 0, 0, 0, 0, 0, 0, 2093, 2094, 2095,
	2096, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 2116, 2109, 2117, 0, 0, 3852, 0, 0, 0,
	2085, 2086, 0, 0, 2082, 2083, 2089, 2112, 2088, 2084,
	0, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078,
	2108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2110, 0, 0, 0, 2120, 2091, 0, 0, 0, 0,
	0, 2098, 2101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2116, 0, 2117, 0, 0, 0,
	0, 0, 0, 2085, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2118, 0, 0, 0, 0,
	0, 0, 0, 2108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2107, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 2122, 0, 0,
	0, 0, 2068, 2069, 0, 2102, 2103, 2104, 2113, 2114,
	2115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2106, 2099, 0, 0, 0,
	3847, 0, 2100, 0, 0, 2071, 0, 0, 2118, 0,
	0, 0, 0, 0, 0, 0, 2119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2097, 0, 2107,
	0, 0, 0, 0, 2125, 0, 0, 0, 0, 0,
	2122, 0, 0, 2070, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2092, 2090, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2068, 2069, 2111, 2102, 2103, 2104, 2113,
	2114, 2115, 0, 0, 0, 0, 0, 0, 0, 0,
	2097, 0, 0, 0, 0, 0, 2106, 2099, 0, 0,
	0, 0, 0, 2100, 0, 0, 2071, 0, 0, 0,
	0, 2124, 0, 0, 0, 0, 2092, 2119, 0, 0,
	0, 0, 0, 0, 4356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2125, 0, 2093, 2094, 2095,
	2096, 0, 0, 0, 2070, 0, 0, 2076, 2111, 0,
	0, 0, 0, 0, 0, 2090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2124, 0, 0, 0, 0, 0,
	2110, 0, 0, 2109, 2120, 0, 0, 0, 0, 0,
	0, 2098, 2101, 0, 0, 2082, 2083, 2089, 2112, 2088,
	2084, 0, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077,
	2078, 0, 0, 0, 2116, 0, 2117, 0, 0, 0,
	0, 0, 0, 2085, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2093, 2094,
	2095, 2096, 0, 2108, 0, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 0, 2109, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2082, 2083,
	2089, 2112, 2088, 2084, 0, 2081, 2079, 2080, 2072, 2073,
	2074, 2075, 2077, 2078, 0, 0, 0, 0, 0, 0,
	0, 2110, 0, 0, 0, 2120, 0, 0, 0, 0,
	0, 0, 2098, 2101, 0, 0, 0, 0, 2118, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2116, 0, 2117, 0, 2107,
	0, 0, 0, 0, 2085, 2086, 0, 0, 0, 0,
	2122, 0, 2068, 2069, 0, 2102, 2103, 2104, 2113, 2114,
	2115, 0, 0, 0, 2108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2106, 2099, 0, 0, 2091,
	3782, 0, 2100, 0, 0, 2071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2119, 0, 2068, 2069,
	0, 2102, 2103, 2104, 2113, 2114, 2115, 0, 0, 0,
	2097, 0, 0, 0, 2125, 0, 0, 0, 0, 0,
	0, 2106, 2099, 2070, 0, 0, 0, 0, 2100, 2118,
	0, 2071, 0, 0, 2090, 0, 2092, 0, 0, 0,
	0, 0, 2119, 0, 2087, 0, 0, 0, 0, 0,
	2107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2125, 2122, 0, 0, 0, 0, 0, 0, 2111, 2070,
	0, 0, 3812, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2097, 0, 0, 0, 0, 0, 2093, 2094, 2095,
	2096, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 2094, 2095, 2096, 0, 0, 2111,
	2110, 0, 0, 2076, 2120, 0, 2109, 0, 0, 0,
	0, 2098, 2101, 0, 0, 0, 0, 0, 2082, 2083,
	2089, 2112, 2088, 2084, 0, 2081, 2079, 2080, 2072, 2073,
	2074, 2075, 2077, 2078, 2116, 2124, 2117, 0, 0, 0,
	0, 0, 0, 2085, 2086, 0, 2110, 0, 0, 0,
	2120, 0, 0, 0, 0, 0, 0, 2098, 2101, 0,
	0, 0, 0, 2108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2091, 0,
	2116, 0, 2117, 0, 0, 0, 0, 0, 0, 2085,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2108,
	0, 0, 0, 0, 0, 0, 0, 2109, 0, 0,
	0, 0, 0, 0, 2091, 0, 0, 0, 2118, 2082,
	2083, 2089, 2112, 2088, 2084, 0, 2081, 2079, 2080, 2072,
	2073, 2074, 2075, 2077, 2078, 0, 0, 0, 0, 2107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2122, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 2068, 2069,
	0, 2102, 2103, 2104, 2113, 2114, 2115, 0, 0, 0,
	2097, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 2099, 0, 0, 0, 0, 0, 2100, 0,
	0, 2071, 0, 0, 0, 0, 2092, 0, 0, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 0, 0, 0,
	2125, 0, 0, 0, 0, 0, 0, 0, 2111, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 2092, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2111, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 2094, 2095, 2096, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 2109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2082, 2083,
	2089, 2112, 2088, 2084, 0, 2081, 2079, 2080, 2072, 2073,
	2074, 2075, 2077, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2794, 2110, 0, 0, 0,
	2120, 0, 2109, 0, 0, 0, 0, 2098, 2101, 0,
	0, 0, 0, 0, 2082, 2083, 2089, 2112, 2088, 2084,
	0, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078,
	2116, 0, 2117, 0, 0, 0, 0, 0, 0, 2085,
	2086, 0, 0, 2068, 2069, 0, 2102, 2103, 2104, 2113,
	2114, 2115, 0, 0, 0, 0, 0, 0, 0, 2108,
	0, 0, 0, 0, 0, 0, 2106, 2099, 0, 0,
	0, 0, 0, 2100, 2091, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2119, 2068, 2069,
	0, 2102, 2103, 2104, 2113, 2114, 2115, 0, 0, 0,
	0, 0, 0, 0, 0, 2125, 0, 0, 0, 0,
	0, 0, 2099, 0, 2070, 0, 0, 0, 2100, 0,
	0, 2071, 0, 0, 2118, 2090, 0, 0, 0, 0,
	0, 0, 2119, 0, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2107, 0, 0, 0, 0,
	2125, 0, 0, 0, 0, 0, 2122, 0, 0, 2070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 0, 2093, 2094,
	2095, 2096, 0, 0, 0, 0, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 2094, 2095, 2096, 0, 0, 0,
	0, 2110, 0, 2076, 2111, 2120, 0, 0, 0, 0,
	0, 0, 2098, 2101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2116, 0, 2117, 0, 0,
	2124, 0, 0, 0, 2085, 2086, 2110, 0, 0, 0,
	2120, 0, 0, 0, 0, 0, 0, 2098, 2101, 0,
	0, 0, 0, 0, 2108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2085,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2109, 0, 2091, 0, 0, 0, 0, 2118,
	0, 0, 0, 0, 2082, 2083, 2089, 2112, 2088, 2084,
	0, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2122, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2097, 0, 941, 0, 996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 0, 0, 966,
	0, 947, 946, 0, 0, 0, 0, 0, 0, 2111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2092, 0, 0, 968, 0, 0, 0, 0,
	0, 948, 0, 0, 0, 0, 951, 0, 0, 962,
	0, 1008, 0, 979, 0, 2124, 0, 0, 0, 0,
	0, 0, 963, 964, 2111, 0, 0, 0, 0, 0,
	0, 0, 984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	997, 953, 0, 0, 0, 0, 0, 954, 0, 0,
	2124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 955, 0, 0, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 0, 0, 0, 2109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2082,
	2083, 2089, 2112, 2088, 2084, 0, 2081, 2079, 2080, 2072,
	2073, 2074, 2075, 2077, 2078, 0, 0, 995, 0, 975,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2109, 957, 941, 0, 996, 0, 0, 0,
	0, 0, 945, 0, 2082, 2083, 2089, 2112, 2088, 2084,
	0, 2081, 2079, 2080, 2072, 2073, 2074, 2075, 2077, 2078,
	0, 949, 0, 959, 960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	966, 0, 947, 946, 0, 0, 0, 0, 969, 967,
	0, 0, 0, 0, 0, 0, 961, 0, 0, 0,
	0, 980, 0, 0, 1002, 1001, 968, 0, 0, 0,
	0, 0, 948, 0, 0, 0, 0, 951, 0, 0,
	1005, 993, 1008, 0, 979, 0, 0, 0, 0, 0,
	0, 0, 0, 963, 964, 0, 0, 0, 0, 0,
	0, 0, 0, 984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 998, 0, 0, 0, 0, 0, 0,
	0, 997, 953, 0, 0, 0, 0, 0, 954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 955, 0, 0, 0, 0, 0, 0,
	0, 0, 994, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 952, 0, 0, 1007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 995, 0,
	975, 0, 950, 0, 0, 0, 0, 988, 989, 0,
	0, 0, 0, 0, 957, 0, 0, 0, 0, 0,
	0, 991, 0, 945, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 959, 960, 0, 0, 0, 999,
	986, 0, 0, 0, 0, 0, 0, 0, 1006, 981,
	0, 0, 972, 970, 0, 0, 0, 976, 0, 969,
	967, 0, 0, 0, 0, 977, 0, 961, 943, 0,
	1000, 0, 980, 0, 0, 1002, 1001, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1005, 993, 0, 0, 0, 944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 992, 0, 0,
	990, 0, 978, 958, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 940, 998, 0, 0, 0, 0, 1004,
	0, 0, 0, 0, 0, 0, 0, 982, 0, 983,
	0, 0, 0, 0, 0, 0, 0, 0, 956, 1003,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 952, 0, 0, 1007,
	0, 0, 0, 0, 0, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 950, 0, 0, 0, 0, 988, 989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	999, 986, 0, 0, 0, 0, 0, 0, 0, 1006,
	981, 0, 0, 972, 970, 0, 0, 0, 976, 0,
	0, 0, 0, 0, 0, 0, 977, 0, 0, 943,
	0, 1000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 992, 0,
	0, 990, 0, 978, 958, 0, 0, 0, 0, 974,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 0,
	1004, 0, 0, 0, 0, 0, 0, 0, 982, 0,
	983, 0, 0, 0, 0, 0, 0, 0, 0, 956,
	1003, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 987,
}

var sqlPact = [...]int32{
	17320, -1000, -1000, -1000, -1000, -1000, -1000, 295, -1000, -1000,
	291, 290, 289, 288, 286, 285, 284, 283, 282, 280,
	269, -1000, -1000, 266, 265, 264, 263, -1000, -1000, 260,
	259, 257, -1000, 254, -1000, -1000, 253, -1000, 251, 250,
	249, -1000, -1000, 247, -1000, 246, -1000, -1000, -1000, -1000,
	245, 244, 243, 110401, 109778, 111022, 2746, 143997, 123460, 2401,
	115994, 143374, 115371, 142751, 2594, 14591, 142128, 3236, 242, -1000,
	141505, 241, 236, 228, -1000, 122837, 140882, 120347, 119724, 2117,
	86650, 164871, 1967, 1960, -1000, 227, -1000, -1000, 9269, 83543,
	226, 224, 221, 218, 2709, 216, -1000, 214, 213, -1000,
	211, 210, 206, -1000, 18562, 1787, -1000, 205, 201, 200,
	199, -1000, 1347, 119101, 196, 190, 189, 2847, 188, 186,
	80433, 178, 175, 173, 2819, 3313, -1000, -1000, 2516, -1000,
	-1000, 170, 168, 167, 166, 165, 164, 163, 162, 159,
	158, 157, 155, 150, 146, -1000, 145, 144, 142, 140,
	139, 137, -1000, 136, 134, 132, -1000, 131, -1000, 126,
	123, 120, 119, 117, 114, 112, 111, 108, 107, 106,
	105, 104, 102, 101, 99, -1000, -1000, 97, -1000, 2392,
	1959, 1952, 1944, 1148, 96, 95, 94, 93, 92, 91,
	90, 86, 85, 83, 82, 80, 79, 78, 74, 71,
	65, 62, 61, 59, 58, 57, 56, 54, 53, 212,
	52, 50, 49, 48, 47, 38, 37, 36, 2449, 4071,
	-1000, 1902, 1243, 1420, 36582, 3460, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 153312, 144618, 35, -211, 33,
	-1000, 3863, 1211, 66641, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 366,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 584, 2294,
	869, -1000, -1000, -1000, 140259, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2743, 4, 116615, -1000, 2461, -1000, -1000,
	-1000, -1000, -1000, 868, -1000, 2738, 2669, 364, 2665, 116615,
	-1000, -1000, -1000, 3921, 3819, 109155, 2909, 4387, 4386, 4382,
	4377, 4375, 152691, 2123, 2968, 4370, 4367, 4362, 4359, 4354,
	4351, 4348, -1000, 108532, 1239, 107909, 107286, 3934, 139638, 106663,
	139015, 138392, 155802, 55818, 1233, 3920, -1000, -1000, -1000, -1000,
	-1000, -1000, 144618, -1000, 1236, -1000, -1000, 4346, 2440, 867,
	122214, -1000, -1000, 137769, 2326, -1000, -1000, -1000, 1077, 1373,
	39134, 39134, 39134, 363, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3940, -1000, -1000, -1000, -1000, 144618, 3199, 3199, 1621,
	1652, 1652, 3199, 3199, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4342, 4340, 4338, 4335, 4334, -1000, -1000, -1000,
	64106, -1000, -1000, 3001, 1940, 4139, 3216, 92963, 2484, 1641,
	3876, 3589, 3566, 1763, 2456, 3565, 4329, 3043, 3267, 3564,
	3563, 3537, 1422, 3526, 3525, 2093, 3010, 602, 3003, 35944,
	3445, 2220, 55180, 1823, 1773, 3524, 3513, 3512, 4150, 3996,
	2450, 2397, 2429, 2432, 96080, 4328, 4324, 3837, 3506, 3505,
	3274, 3504, 2382, -1000, 3422, 1826, 362, -1000, -1000, -1000,
	-1000, -1000, -1000, 362, 1704, -1000, -1000, -1000, -1000, 1579,
	-1000, -1000, -1000, -1000, -1000, -1000, 97949, 28737, 97326, 96703,
	106040, 137146, 54542, 105417, 104794, 92330, 4321, 4320, 53904, 63471,
	4070, 136523, 155179, 4065, 4064, 1234, 2446, 1690, -1000, -1000,
	-1000, -1000, -1000, -1000, 13, 86029, 4136, 144618, -1000, 351,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 53266, 935, 52628,
	880, 51990, 588, 135900, -1000, -1000, -1000, -1000, -1000, -1000,
	91697, 3818, -1000, 135277, 134654, 1742, 2908, 4319, 4317, 1352,
	4315, 3801, 2094, 4314, 4307, 4305, 4303, 4301, 4300, 4299,
	1820, 134031, 3121, 133408, 2146, 154556, 2343, 1229, 104171, 111022,
	3062, 132785, 1809, 1789, -1000, -1000, -1000, -1000, 3500, 3304,
	3303, 1530, -1000, -1000, -1000, -1000, -1000, -1000, 70413, 6914,
	6726, -1000, -1000, 16631, 165092, 132162, 72937, 111022, 111022, -1000,
	-1000, -1000, -1000, -1000, -1000, 51352, 815, 50714, 1232, 131539,
	-1000, -1000, 71044, 3419, 1293, -1000, -1000, -1000, -1000, -1000,
	130916, 50076, 702, 49438, 1191, 144618, -1000, 3456, 2387, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	98570, -1000, -1000, 1579, -1000, -1000, -1000, 1628, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1902, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2932,
	-1000, 2540, -1000, -1000, -1000, 2946, 3841, 3841, 3841, 3919,
	564, 554, -1000, 212, 1004, 1338, -1000, -1000, 164137, -1000,
	-1000, 56456, 56456, 56456, 56456, 56456, 56456, 56456, 56456, 2599,
	-1000, 864, -1000, -1000, 903, -1000, 863, 774, 685, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 862, -1000, -1000, -1000,
	-1000, -1000, -1000, 4096, -1000, 31979, -1000, -1000, -1000, 545,
	860, 56456, -1000, -1000, 4174, 4173, 1168, -1000, 350, 1111,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3455, 859, 858, -1000, 857, 854,
	853, 852, 851, -1000, 848, -1000, 846, 843, 840, 839,
	836, 821, 816, 814, -1000, 2488, -1000, -1000, -1000, -1000,
	-1000, -1000, 764, 763, 763, 763, -1000, 1215, 756, 811,
	-1000, 443, 752, 442, 747, 745, 744, -1000, 808, 804,
	803, 802, 794, 793, 792, 789, 784, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1217, -1000, -1000, -1000, -1000, 1490,
	10, 144618, -1000, 680, 10, -1000, -1000, 782, -1000, 40428,
	40428, 40428, -1000, -1000, 2737, 56456, -1000, 2887, -1000, 19,
	19, 1060, 68513, -1000, 65370, 1060, 455, 915, 74192, -1000,
	3418, -1000, -1000, 777, 348, -1000, -1000, -1000, -1000, 29368,
	3417, 144618, 144618, 144618, 111022, 111022, 111022, 144618, 4298, 4297,
	3713, 56456, -1000, -1000, 82920, 157665, 118478, 1604, 12, -1000,
	-1000, 4048, 87902, 82299, 3454, 157665, 3453, 3416, 157048, 91064,
	275, 3645, -1000, -1000, 775, 4295, -1000, -1000, -1000, -1000,
	-1000, 3644, 4294, 4293, 4291, 144618, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2720, 3642, -1000, 11, -1000, 114748, 2720,
	3641, -1000, 11, 2720, 3634, -1000, 11, 114127, -1000, -1000,
	2720, 3633, -1000, -1000, 274, 3631, -1000, -1000, -1000, 3630,
	-1000, 272, 3626, -1000, -1000, 343, -166, 3625, -1000, -1000,
	-1000, -1000, -1000, -1000, 164137, -1000, -1000, -1000, 156425, -1000,
	3828, -1000, 144618, -1000, 56456, -1000, -1000, 4047, 2008, 3889,
	3975, -1000, -1000, -11, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2951, 2957, 1315, 2774, -1000, 3731, 1673, 39134, 3787,
	-1000, -1000, -1000, -1000, -1000, 341, 29368, 3298, -1000, -1000,
	144618, -1000, 144618, 3199, 3199, -1000, -1000, -1000, 4141, 4140,
	3199, 3199, 144618, 144618, -1000, -1000, -1000, -1000, -1000, 1190,
	-1000, -1000, -1000, -1000, 1818, 2992, -1000, -1000, -1000, 71044,
	3415, 1508, 93594, 93594, 93594, 93594, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 130293, -1000, -1000,
	2441, 1999, 3825, 2427, 111022, -1000, 2189, -1000, -1000, -1000,
	3856, 3661, 144618, -1000, -1000, 3447, -1000, 85408, 3447, 113506,
	-1000, 112885, -1000, 112264, -1000, -1000, 111022, -1000, 111022, -1000,
	4290, 4289, 4287, -1000, -1000, 4280, -1000, 4276, 3844, -1000,
	2223, 1036, 48800, 164137, 3843, -1000, 4275, 2407, 3445, 164137,
	-1000, 3659, 1970, 1955, 144618, -1000, -1000, 144618, -1000, 144618,
	-1000, 144618, -1000, -1000, -1000, 2761, 1889, -1000, -1000, 2950,
	-1000, -1000, -1000, 1185, -1000, -1000, 111022, 111022, 111022, 111022,
	3414, 3112, 111022, 1869, -1000, 48162, 3816, -1000, -1000, 3495,
	4273, 2119, -1000, 2121, -1000, 3411, 3851, -1000, 3406, 1721,
	2232, 340, 4176, 340, -1000, -1000, -1000, -11, -1000, 4030,
	3615, 1747, -1000, 2773, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2351, 3613, -1000, 2338, 3612, 2320, -1000, -1000, 6841,
	-1000, 2658, -1000, 160830, 1544, -1000, -1000, -1000, -1000, 2480,
	3609, 20, -1000, -1000, 2767, -1000, 4135, 3371, -1000, -1000,
	-1000, 21027, -1000, -1000, 2266, 2581, 2412, -1000, 1506, 3608,
	-1000, 3215, 3215, 103548, 3501, 72306, 71044, 86029, -10, -1000,
	-1000, -1000, -1000, -1000, -192, -1000, 28098, 164137, -1000, -1000,
	-1000, -1000, 164137, 1063, -1000, -1000, 3601, -1000, 164137, 1058,
	-1000, -1000, 3600, -1000, 3007, -1000, 3444, -1000, -1000, -1000,
	2864, 90431, 3405, -1000, 2860, 1183, -1000, 102927, 2436, 4268,
	-1000, 4265, -1000, -1000, 4264, -1000, 4263, 4260, 4259, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 102304, 2734, -1000, -1000,
	1713, 1150, 93594, -1000, 2859, 3972, -1000, 101681, 1223, -1000,
	1165, 2854, -1000, 1788, 111643, 1184, 2851, -1000, 4258, 3922,
	3124, 1165, 2850, -1000, -1000, -1000, -1000, -1000, 1029, -1000,
	74816, -1000, 74816, -1000, 2046, -1000, 152070, 19, 111022, 4096,
	-1000, -4, -1000, -1000, -1000, 1211, -1000, 69779, -1000, 69779,
	121591, 93594, 1150, 3400, 79809, 163747, -1000, 1179, -1000, -1000,
	164137, -1000, -1000, -1000, 3006, -1000, -168, 3214, -1000, 93594,
	71044, 3399, 3004, -1000, 164137, -1000, -1000, -1000, -1000, 164137,
	-1000, -1000, -1000, 93594, 1713, -1000, 129672, 101058, 279, -1000,
	-1000, 151449, -1000, 2946, -1000, 144618, -1000, 2947, 3435, 3441,
	1958, 2760, 3060, -1000, 47524, 2998, 60284, 2772, 212, -1000,
	-1000, 212, 212, 37858, -1000, -1000, 39134, 1004, 87902, 87902,
	29368, 1650, 56456, 56456, 56456, 56456, 56456, 56456, 56456, 56456,
	56456, 56456, 56456, 56456, 56456, 56456, 56456, 56456, 56456, 56456,
	56456, 56456, 56456, 56456, 56456, 56456, 56456, 56456, 56456, 56456,
	56456, 56456, 56456, 56456, 56456, 56456, 56456, 56456, 56456, 2543,
	56456, 1598, 56456, 56456, 56456, 56456, 2104, -1000, -1000, 2357,
	630, 2426, 774, -1000, -1000, -1000, 4097, 4097, 4097, 726,
	726, 726, 392, 392, 743, 4257, 903, -1000, 56456, -1000,
	84, 69137, 56456, 30001, -1000, 554, 12217, 2972, -1000, 551,
	30669, -1000, -1000, -1000, 31979, 685, 46856, 56456, 1200, 164137,
	-1000, -1000, 1699, 4121, 27459, 3468, 3258, 773, 947, 936,
	35276, 34608, 33940, 33272, 837, 822, 56456, 56456, 56456, 56456,
	56456, 56456, 56456, 56456, -1000, -1000, 4137, -1000, 4121, -1000,
	-1000, 772, -1000, 4121, 4121, -1000, 4121, 1636, 1634, 4121,
	-1000, 4121, 4121, 8366, 8366, 46218, 45580, 44942, 60922, 44304,
	56456, 32634, 43666, 43028, -1000, 62836, 144618, 10, 4044, 144618,
	56456, 308, -1000, 346, -1000, 308, 308, 771, -13, 164137,
	3059, 3059, 67265, 2603, 2607, 2607, 2607, -1000, 1060, 21669,
	1060, 127807, 2631, 1060, 1060, 330, 174, 550, 64739, 2887,
	127186, 890, 767, 32, 30, 29, -1000, -1000, 27, 26,
	-1000, -1000, 111022, 765, 30001, 29368, 323, 2410, -15, 3030,
	3027, 3023, 3020, -1000, 3018, 2730, -1000, -1000, -1000, 2269,
	-16, 1565, 111022, 144618, 2209, -1000, -1000, -1000, -1000, 86029,
	9, 86029, 144618, 3815, 111022, -14, -1000, 157665, 6663, -21,
	-1000, 1529, 322, 4121, -1000, -1000, -1000, 4255, 4254, -1000,
	566, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 764,
	763, 763, 763, -1000, 1215, 756, 443, 752, 442, 747,
	745, 744, -1000, -1000, -1000, -1000, -1000, 3398, 111022, 144618,
	2077, 84787, 117857, -166, 118478, 157665, -12, -1000, -1000, -1000,
	-1000, 111022, -1000, -1000, 111022, -1000, 77305, -1000, 144618, -1000,
	-1000, -1000, 4253, -1000, 111022, 111022, 2720, 3598, -1000, 111022,
	-1000, 111022, 271, 3597, -1000, -1000, 144618, -1000, 111022, 111022,
	144618, -1000, 144618, 144618, 144618, 157665, 157665, 268, -1000, 111022,
	1004, -22, 1364, -11, -1000, -1000, -1000, -1000, 1579, -1000,
	2102, -1000, -1000, -1000, -1000, -1000, -1000, 1708, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1168, -1000, -1000, -1000,
	-1000, 4117, 4103, -1, -1000, -1000, 29368, -1000, 2248, -1000,
	-1000, -1000, -1000, 144618, 144618, -1000, -1000, 144618, 144618, -1000,
	-1000, 2339, 111022, 3439, -1000, -1000, 93594, 71044, -1000, 129049,
	1150, 1150, 1150, 1150, -1000, -1000, -1000, -1000, 4252, 4251,
	4250, 4248, -1000, -1000, 1174, 111022, 144618, 111022, -1000, 3175,
	1929, -1000, 320, -1000, 157665, -1000, 157665, 144618, 111022, -1000,
	-1000, 1174, 144618, 1174, 144618, 1174, 144618, 1174, 1174, -1000,
	-1000, -1000, -1000, -1000, 84, 84, 56456, -1000, -1000, 164137,
	-1000, 56456, -1000, -1000, 1884, 4246, 2052, -1000, 3438, -1000,
	3436, -1000, 64, 319, -1000, -1000, 4134, 2313, -1000, 4171,
	-1000, -1000, -1000, -1000, -1000, -1000, 111022, 3397, -1000, -1000,
	-1000, -1000, 4242, 3812, 164137, -1000, 89798, 2207, -1000, -1000,
	-1000, -1000, 111022, 111022, 111022, 111022, 144618, 3762, -1000, 144618,
	3752, 3760, 111022, -1000, 4118, -1000, -18, 1931, 575, 1556,
	-1000, 100435, 2828, 3826, 4240, 3097, 3810, 2043, -1000, 1883,
	733, -1000, 3944, 98570, 3991, 4024, 1528, -1000, 3394, -1000,
	-1000, -1000, 1075, 2067, 2216, 1491, 1489, 98570, 2338, -1000,
	87902, -1000, 3108, 3917, 1652, 1625, 1652, 1652, 1606, 1595,
	-1000, 98570, 2206, 1488, 1487, 7154, 1484, 2205, 1482, 3723,
	-1000, -1000, 2728, 2809, -1000, -1000, -1000, -1000, 2063, 3160,
	-1000, 2955, 1610, 1610, 144618, -1000, 1478, -1000, -1000, 1973,
	2074, -1000, -1000, 128428, 2092, -1000, 1477, 1476, 145860, 4060,
	2932, 2653, 933, 2414, -1000, 1540, 1474, 3393, -1000, -1000,
	-33, 3989, 4023, 1528, -1000, -1000, 3391, 1473, -1000, 1205,
	-1000, -1000, -1000, 3914, 111022, 29368, 1830, 1829, 1808, 2198,
	1472, 8, -1000, 3984, 2041, -1000, 4077, 93594, -1000, 2883,
	1873, -1000, 1713, 1713, 124081, 144618, 2337, 2332, -1000, -1000,
	-1000, 3875, 3873, -1000, -1000, 1459, 1458, -1000, 1226, 10865,
	3754, -1000, 157665, 1226, 1226, 2286, 3596, 3174, 1848, -1000,
	3213, 1054, 3212, -1000, -1000, 1054, -10, 86029, 144618, 316,
	-1000, 56456, 84, 56456, 84, -1000, 3961, 3595, 4043, -1000,
	2330, 3592, 4239, 731, -1000, -1000, 2967, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 729, 2846, 3389, 144618, 113, -1000,
	111022, -1000, 4038, -1000, 3588, 157665, 2338, 2845, -1000, 99814,
	-1000, 3583, 2413, 584, 2844, -1000, 705, 4235, 3582, -1000,
	150828, -1000, 3828, 1633, 3581, 1287, 790, 4037, -1000, 790,
	77937, -1000, 144618, -1000, 19, 619, 94836, -27, -34, 549,
	-1000, 144618, 144618, 3775, 2428, 2418, -1000, 1159, 71044, -1000,
	71044, -35, -1000, -168, 3207, 71044, -1000, 1150, -90, 1054,
	-1000, 1054, -1000, -1000, 98570, -1000, 2947, 3435, -1000, -1000,
	-1000, -1000, -1000, -1000, 1720, 2684, -1000, 2987, -1000, 1913,
	-1000, -1000, -1000, 164137, 61560, -1000, -1000, 164137, 2268, -1000,
	59646, 59008, -1000, -1000, 2068, 111022, 3061, -1000, 3061, -152,
	-1000, 161561, 2986, 111022, -1, 39134, -1000, -1000, -1000, -1000,
	-1000, 1074, 786, 786, 1569, 1569, 1569, 1569, 3933, 5874,
	529, 2497, 8960, 8960, 6142, 6142, 6142, 6142, 6142, 8960,
	1381, 726, 726, 1381, 1381, 1381, 1381, 1381, 726, 726,
	1381, 726, 8960, 8960, 8960, 726, 392, 164412, 13252, 56456,
	56456, 1456, 2354, 630, 12891, 56456, 1112, 1112, 1112, 1112,
	-1000, 2304, -1000, -1000, -1000, -1000, 3388, 724, 60922, 60922,
	-1000, -1000, -1000, -1000, 31324, 56456, -1000, -1000, -1000, -1000,
	42360, -1000, -1000, 160553, -344, 546, -1000, 314, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 541, -144, 5, -1000, 56456, 56456, 56456, 539,
	-1000, 309, 56456, 144618, -1000, 18263, 888, -221, -1000, -36,
	1679, -1000, 56456, -1000, -1000, 1454, -1000, 1452, 1447, 1446,
	-1000, 722, 534, -1000, 307, -1000, 2602, 714, 711, 56456,
	-1000, -1000, -1000, -1000, -1000, 160310, -1000, -1000, 160065, -1000,
	-1000, 159878, -1000, -1000, 159788, -1000, -1000, -1000, -1000, -1000,
	163701, 16418, 15665, 15237, 10411, 14563, 14241, -45, 533, -46,
	4121, 532, 530, 515, 1073, 1071, 512, 511, 510, -48,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -56, 509, -1000, 3385, -144, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 508, -1000, 506, -1000, 163422,
	-144, 504, 9909, -1000, 60922, 60922, 60922, 60922, 501, -1000,
	161316, -1000, 163311, 41722, 41722, 41722, 500, 162991, 56456, -144,
	-59, -1000, -62, -1000, -1000, -1000, -1000, 660, -67, -1000,
	-77, 1196, 40428, 66017, 29368, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1196, 1196, 56456,
	-1000, 56456, 3000, -1000, -1000, -1000, -1000, 2999, 2273, 3059,
	67265, -1000, -1000, -1000, -1000, 127807, -1000, 4096, 3446, -1000,
	127807, -1000, -1000, 144618, 680, -1000, 127807, 127807, 29368, 1060,
	-1000, -1000, 144618, 678, 1060, 127807, 708, -1000, -1000, -1000,
	-1000, -1000, 489, 76684, 5, 306, 29368, 1165, -1000, -1000,
	3158, 3158, 3158, 3158, 3158, 111022, -1000, -1000, 157665, 1444,
	6, -73, 3201, 3196, 3194, -10, 86029, -10, -192, 144618,
	7, 4075, -274, -1000, 2505, -1000, 87902, -1000, 900, 1367,
	29368, -1000, -1000, -1000, -1000, 4121, 157665, 3378, 238, 3192,
	3191, 3179, -1000, 2727, 116615, 235, -166, 157665, -1000, 275,
	-97, -1000, -1000, 87271, 81675, -1000, 2614, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4232, -1000, 2720, -1000, -1000, 111022,
	2720, 2720, -1000, 111022, 111022, 2720, -1000, 274, -1000, -1000,
	272, -1000, -1000, -166, -1000, 1178, 39134, -1000, 1579, -1000,
	-1000, 1835, -1000, 2435, -1000, 1629, -1000, -1000, 39134, -1000,
	3778, -1000, 2147, -1000, -1000, -1000, -1000, 1872, 1150, 1716,
	3178, 1150, -240, 707, -1000, 1039, 1038, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18,
	-1000, 2197, 2299, 157665, 144618, -166, -166, -78, -1000, -1000,
	305, 6, -1000, 1174, -1000, 1174, -1000, 1174, -1000, -1000,
	-1000, -1000, 164137, 164137, -1000, -1000, -1000, 2051, 1963, 144618,
	-1000, 144618, 3434, -1000, 144618, -1000, -1000, 111022, -1000, 4231,
	-1000, -1000, 29368, 144618, 111022, 29368, 111022, 3432, 3431, -1000,
	-1000, -1000, 144618, -1000, -1000, 144618, -1000, -1000, 3860, 144618,
	144618, 111022, -1000, 125323, 144618, -1000, 2621, 157665, -1000, 2839,
	150207, 2820, 149586, 87902, -1000, -1000, 703, 1107, 2985, 2984,
	1279, 144618, 144618, 2982, 148965, 148344, -1000, 4230, 144618, 2501,
	56456, 125323, 3913, 2659, 3292, 84, 84, -1000, 84, -1000,
	-1000, 701, 1667, 111022, 111022, 144618, 157665, 111022, 2284, -1000,
	-1000, -1000, -1000, -1000, 99191, -1000, -1000, 1652, -1000, -1000,
	-1000, 1652, -1000, 1652, 2338, 2257, 144618, 157665, 111022, -1000,
	-1000, -1000, -1000, 144618, 144618, 157665, 2726, 2808, 2718, 3152,
	-1000, -1000, -1000, -1000, -1000, -1000, 157665, 147723, 2411, 147102,
	2406, 2405, -1000, -1000, -1000, 2359, 2404, 2600, 2195, 144618,
	-1000, -1000, -1000, -1000, -1000, 1678, -1000, 933, 1439, 3375,
	56456, 56456, 2547, 84, 84, -1000, 84, 700, 29368, -1000,
	1541, -1000, 3390, 144618, 4170, 146481, 4169, 144618, 144618, 144618,
	157665, 3854, 144618, 1, -1000, 1522, -1000, 4077, -1000, 1031,
	-1000, -90, 0, -240, -192, -1000, -1000, 2440, 144618, 157665,
	-1000, 145860, 10865, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2512, 3141, 1301, 144618, 1506, -1000, -1000, 2187, 1437, 1434,
	98570, 2564, 2180, 2296, 71044, 1162, 71044, 3134, -1000, -1000,
	26820, 164137, -1000, 164137, -1000, 84164, 93594, 93594, 2769, 144618,
	-1000, 78561, 144618, 95457, 1113, 3580, 75438, -192, 1150, 1713,
	3480, 2058, 144618, -1000, -1000, 2338, 3578, 584, 2837, -1000,
	157665, 1219, 4036, 3577, 698, 144618, 4229, -1000, 111022, 2717,
	2836, -1000, -1000, 145239, 3658, 933, 144618, 1196, 67265, 2415,
	-1000, 73561, 1255, 144618, 2310, 217, -1000, -1000, -1000, 46,
	144618, -1000, 845, -1000, -1000, 619, 619, 1150, 71675, -98,
	-1000, 303, 697, 1030, 1013, -1000, 3965, -1000, -168, -1000,
	93594, 1159, 71044, -168, 3177, 3372, -1000, -1000, 1176, -1000,
	-1000, -1000, -1000, 1326, -1000, 2268, 2679, -1000, 685, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2929, -1000,
	-1000, 37858, 1064, -1000, -1000, 111022, 17, -1, 56456, 56456,
	11672, 10193, 56456, 60922, 60922, -1000, 56456, 9692, -1000, -1000,
	-1000, -1000, -1000, 3365, 684, 56456, 87902, 6062, 5921, -1000,
	478, 13289, 1381, -1000, 56456, -1000, 5855, -1000, 469, 41084,
	-1000, 162047, -6, -100, -1000, 22323, -144, -105, -1000, -1000,
	897, -1000, 3653, -1000, 56456, 162918, 2866, 2399, 2270, 2083,
	4121, 4168, 26181, -1000, 79185, 1197, 2638, 159362, -1000, -1000,
	-1000, -1000, 87902, 87902, 56456, 56456, -1000, 56456, 56456, 56456,
	-1000, -1000, -1000, 4121, 466, -1000, -1000, 1065, -1000, -1000,
	-1000, 1065, -1000, -1000, 1652, -1000, 1652, -1000, 56456, -1000,
	-1000, 3357, 56456, -1000, 87902, 87902, 60922, 60922, 60922, 60922,
	60922, 60922, 60922, 60922, 60922, 60922, 60922, 60922, 60922, 60922,
	60922, 60922, 60922, 60922, 60922, 60922, 3025, 60922, 4095, 4095,
	4095, 1010, -1000, 3430, 3357, 56456, 56456, 87902, 460, 458,
	452, -1000, 56456, -144, -1000, -1000, 7399, 683, -1000, 2920,
	-1000, 144618, -1000, 3257, -1000, 56456, -1000, -126, -1000, 2887,
	-1000, -1000, 3257, 3257, -106, 164137, 67265, 67265, -1000, 681,
	56456, 2997, -1000, -1000, 887, -336, -1000, 1008, -1000, -1000,
	-1000, -1000, -1000, -1000, 1007, -1000, 680, -1000, -1000, -1000,
	299, 127807, 678, -1000, 144618, 127807, 885, -1000, -107, -1000,
	-1000, -113, -1000, 127186, 450, 29368, -1000, 1196, 4647, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3016, -274, 157665, 157665,
	2177, 2171, 2169, -10, -192, 2662, -1000, 3271, 4167, -1000,
	4119, 896, 884, 297, 449, -166, 157665, 157665, 2163, 2157,
	2151, 81054, 3352, 157665, -1000, -1000, -1000, 78561, 87902, -1000,
	87902, -1000, -1000, -1000, -1000, 2720, -1000, -1000, -1000, 271,
	-1000, -1000, -1000, -1000, 3106, -1000, -11, -1000, -1000, -1000,
	56456, -1000, 1114, -1000, -1000, -1000, 111022, 71044, -1000, 124081,
	124081, 93594, 93594, 25542, 144618, 3175, -166, -1000, 88526, -1000,
	-1000, -1000, -1000, -1000, 1174, -1000, 4165, -192, -1000, -1000,
	-1000, -1000, -1000, 2548, 2765, 2548, 2289, 2285, -1000, -1000,
	-1000, 3824, 677, 1431, 1425, -1000, -114, -1000, 1000, -1000,
	-1000, -1000, -1000, -1000, 3332, -1000, 3574, -1000, 2835, -1000,
	1259, 2834, 2211, -1000, 56456, 676, 3109, 675, 674, 4228,
	2498, 4227, 1285, 3572, 2720, 3550, 2720, -1000, -1000, -1000,
	1087, -1000, 164137, -115, -1000, 2659, -1000, 673, 671, -1000,
	-18, 1928, 473, 1418, 1170, -1000, -1000, 56456, 56456, 126565,
	-1000, 573, 3823, 15, -1000, -1000, -1000, 2148, 1417, 1415,
	-1000, -1000, -1000, -1000, -1000, 2338, 2134, 1414, 1411, -1000,
	-1000, -1000, -1000, -1000, -1000, 3497, 3080, 2805, -1000, -1000,
	-1000, -1000, 2832, -1000, 144618, -1000, 3549, 144618, 3234, 933,
	144618, 3823, 3297, 1169, -1000, 3485, 3484, 1067, 144618, 56456,
	56456, 162557, 162484, -1000, 1167, -1000, -1000, 56456, -1000, -33,
	-1000, 1409, 3990, 2830, 111022, -1000, 2720, 3548, 1407, -1000,
	1405, -1000, -1000, -1000, 3983, 3966, 1419, 2041, 93594, 71044,
	2841, -1000, 3960, 2661, 4114, 4077, 71044, -1000, -1000, -1000,
	-1000, 4114, -1000, -1000, -1000, -1000, 89165, -1000, -1000, 1226,
	144618, 157665, 111022, 2120, -1000, -1000, 116615, 117236, 144618, 3174,
	1054, -1000, 2826, 1054, 1162, 3347, -1000, 3038, -1000, -1000,
	144618, 1166, 448, -47, -1000, 1480, 4226, 446, -116, -55,
	87902, -1000, -1000, -1000, -1000, 2820, 111022, 670, 144618, 1500,
	3114, 144618, 144618, 4035, -1000, 2714, 750, 111022, 1177, -1000,
	4096, -1000, -1000, -1000, 144618, 40428, -1000, 3971, 111022, 4034,
	3547, 1165, 111022, 84, 111022, 4149, 445, -57, 87902, -1000,
	4033, 111022, 3542, 2716, 2829, 2954, 933, 94215, 1165, 2633,
	-89, -1000, 2310, 39772, 3821, -121, -1000, -1000, -1000, 1196,
	77937, 67265, 56456, 4224, -123, -1000, -1000, -1000, -1000, -1000,
	93594, 1150, 144618, 144618, 4221, 93594, 93594, 93594, -65, 669,
	-1000, 998, 993, 991, -1000, -1000, -1000, -1000, -1000, -1000,
	990, 988, 985, 981, -1000, -1000, 1159, -1000, -1000, -168,
	1159, 71044, 84, -1000, 2648, -1000, 2675, -1000, -1000, -1000,
	-1000, 3067, 3829, 29368, 3939, 1112, 56456, 56456, 9471, 5832,
	838, 1112, 56456, 56456, 87902, 164457, -124, 56456, 56456, -1000,
	56456, 877, 164137, -1000, 4164, 56456, 440, 438, -1000, -1000,
	-1000, 4112, -1000, -1000, -1000, 164137, 56456, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 437, -1000, 239, -1000, -1000, -1000,
	153933, -1000, 56456, 433, 3911, -1000, 429, 427, 12460, 7805,
	159117, 159037, 158609, 426, -1000, -1000, -1000, 423, 420, 164137,
	3430, 164137, -1000, -1000, 1276, 1276, 1596, 1596, 1596, 1596,
	4095, 1056, 1663, 746, 505, 505, 505, 699, 1010, 1010,
	505, 505, 505, 1010, 3344, 2990, 668, 7750, -1000, -1000,
	164137, 164137, 417, -1000, -1000, -1000, -144, 410, 7399, -1000,
	-1000, 3251, 3899, 164137, -1000, 67265, 3251, 3251, -1000, -1000,
	2273, 144618, 164137, 67265, -1000, 3446, -1000, 23619, 22974, -1000,
	29368, -1000, -1000, -129, -1000, 87902, -1000, -1000, -1000, 4096,
	-1000, 76684, -1000, -1000, 193, -1000, 4647, -1000, 978, -1000,
	-1000, 93594, 93594, 4220, 4219, -1000, 4163, 4161, 2517, 4160,
	3158, -1000, -274, -205, 144618, 144618, 144618, -1000, 2657, -1000,
	876, 4217, 893, 29368, -1000, -166, -166, 144618, 144618, 144618,
	3343, 111022, 144618, 2016, 157665, -166, -1000, -1000, -1000, -1000,
	-1000, -1000, 3774, 164137, 3325, 3243, 3238, 1150, 1150, -1000,
	-141, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 29368, 2005, -1000, 666, 665, 144618, 144618, -1000, 125323,
	39134, 1877, 125944, 144618, 3536, -1000, 3535, -1000, 1279, 2903,
	158379, 67889, -1000, 67889, 144618, -1000, -1000, -1000, -1000, 2375,
	1757, 4215, 1353, -1000, 3858, 144618, -1000, 144618, -1000, -1000,
	-1000, 125323, -1000, 144618, 144618, 111022, 144618, -1000, 157665, 3502,
	-146, 164137, -72, -1000, 963, -1000, 1567, -1000, 24903, 144618,
	157665, 111022, 144618, 157665, 111022, 144618, -1000, 3070, 3532, 1253,
	144618, -1000, 3528, 144618, 1247, -1000, -1000, 144618, 2587, -1000,
	-1000, 3462, -1000, 164137, 162241, 84, 56456, 3498, -147, 29368,
	-1000, 4158, 4157, 3521, 3864, -1000, 144618, 4156, 144618, 111022,
	3773, -1000, -1000, -1000, -1000, 962, 960, 956, 950, 949,
	4086, 124081, -1000, 1164, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2118, 1402, 1401, 2715, 2703, 2656, -78, 2564, 1162,
	-79, 664, -1000, 1162, -1000, 93594, 71044, 2702, 4214, 2306,
	78561, 56456, 56456, -1000, 3072, -1000, 120968, 95457, 2711, -1000,
	-1000, 67889, 662, 144618, 661, 144618, 659, -1000, 84, -1000,
	4213, 125323, 657, -1000, 1182, 2646, -1000, 4109, -1000, 3490,
	-1000, 873, -1000, -1000, 215, 157665, 2338, 84, 111022, -1000,
	584, 1156, 584, 409, -80, -1000, -1000, 144618, -1000, 921,
	1275, 29368, 111022, 3514, 2962, 933, 94215, -1000, 1633, 3060,
	-1000, -88, -1000, 603, 84, 2633, -1000, -89, 164137, -1000,
	945, 407, -1000, 3770, -1000, -1000, -149, -1000, -1000, 3064,
	3064, 93594, 71044, 93594, 93594, 93594, 71044, 93594, -1000, 1159,
	-1000, -168, -1000, 2915, -1000, -1000, -1000, -1000, 3829, 1112,
	1112, 56456, 56456, 56456, 1112, 164457, -154, -1000, 1112, 1112,
	-144, -1000, -1000, 162047, -1000, -1000, -1000, 164137, -1000, 24264,
	2566, -1000, 158334, -1000, 37858, -1000, -1000, 56456, 56456, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 60922, 3333, 654,
	87902, -1000, -1000, 402, 1194, 56456, 58370, 2887, 1194, 1194,
	-1000, -161, -1000, -1000, -1000, 4096, -1000, 4096, 193, -1000,
	144618, -1000, -1000, -1000, 29368, -1000, 93594, -1000, -1000, -1000,
	-1000, -1000, 4212, 4210, 2801, 4203, 4202, -1000, -1000, -1000,
	3486, -157, -167, -170, -1000, 881, -1000, 4201, -1000, 195,
	192, 172, 157665, 3331, 169, 3172, 3170, -166, -1000, 84,
	-1000, -1000, -1000, -1000, -1000, -1000, 111022, 111022, 56456, 56456,
	-1000, -1000, -1000, -1000, 3163, 4032, -1000, 2398, -1000, 144618,
	144618, -1000, 144618, -1000, 29368, 144618, 3283, 1553, -1000, 1107,
	2979, 653, 60922, 1324, 111022, 1072, 3240, 3237, -1000, 4057,
	3897, 3205, -171, -1000, 144618, 56456, 144618, -172, -174, 2797,
	-1000, -1000, 1312, 1545, 56456, 1311, -1000, -1000, -1000, 87902,
	652, 2720, 2720, -1000, -179, -180, -1000, -1000, -1000, 56456,
	1391, 144618, 38496, -1000, 4199, 3823, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 144618, 144618, -1000, -1000, -1000, 144618,
	3823, 144618, -1000, 56456, -1000, 161804, 56456, 1388, -1000, -1000,
	-1000, 4152, 2720, 29368, 2720, -1000, 2720, 3864, 1342, 93594,
	56456, 1783, 71044, 71044, -1000, -1000, -1000, 2710, 144618, 157665,
	111022, 1777, 1777, 3311, -1000, -1000, -1000, 2841, 2841, -1000,
	-95, 1162, 93594, -1000, 1953, -1000, 164137, 164137, 2560, 4195,
	-1000, -1000, -1000, -1000, 2977, -1000, -1000, -1000, 144618, 2976,
	3228, -182, 67889, 651, 67889, 642, 144618, 1154, -1000, -185,
	95457, 1113, -1000, 1182, -1000, -1000, -1000, 74816, -1000, -1000,
	-1000, 584, 4031, -1000, 3105, 4026, -1000, 4151, 87902, 640,
	144618, 638, 144618, 2698, 635, 29368, 3814, 933, 94215, -1000,
	3658, 2310, -1000, 2817, 144618, 3808, -1000, 3060, 630, 1150,
	629, 1150, -1000, -190, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1159, -135, -1000, 4040, 628, 1037, -1000, -1000,
	1112, 1112, 1112, -1000, 393, -1000, -1000, 2633, 3892, -1000,
	-136, 158289, 20711, 7956, 60922, 87902, -191, -1000, -1000, 144618,
	164137, -142, -1000, 164137, 624, 623, 465, -1000, -1000, -1000,
	871, 787, -1000, -1000, -1000, -1000, 4194, -1000, -1000, -1000,
	157665, 157665, 157665, 4192, -1000, 157665, 157665, 157665, -166, 157665,
	157665, 2103, 2101, -1000, -1000, -1000, -193, -196, 124702, 144618,
	-1000, -1000, 2211, 2275, -1000, -1000, 144618, 2821, -1000, -1000,
	-1000, 1173, 56456, 7750, 60922, 622, 56456, -1000, 618, 601,
	4025, 3740, -1000, 3093, 3324, 2295, 67889, -1000, 3829, -1000,
	20191, -1000, 1269, 2402, -1000, -1000, -1000, -1000, 164137, 60922,
	3864, 67889, -1000, -1000, 600, 599, 164137, 597, 944, 3329,
	-1000, -1000, -1000, -1000, -192, -192, -1000, -1000, 164137, 84,
	164137, 596, 3990, -1000, -1000, -1000, -1000, 2720, 111022, -1000,
	164137, -1000, -1000, -1000, -1000, 942, -1000, -1000, -1000, 1380,
	-1000, -1000, -1000, -1000, -1000, 4191, 3328, 116615, -1000, -199,
	2417, -1000, 87902, -1000, 1113, -1000, -1000, 2711, 595, -1000,
	1118, 3074, 3074, 1269, -204, 67889, -206, 67889, -212, 2688,
	3055, -1000, 391, 4012, 1182, 1196, -1000, 4008, 84, 3769,
	-1000, 84, -1000, -1000, 4149, 389, 67889, -1000, 111022, 67889,
	2696, 2477, 2941, 94215, -1000, 2954, -1000, -1000, -214, 144618,
	2310, -1000, -1000, 93594, -1000, -1000, -1000, 2915, -1000, 144618,
	-1000, 144618, -1000, 2508, 56456, 37858, -1000, -1000, 7956, -215,
	-1000, -143, -1000, 4007, 58370, 4187, 4186, 4185, -1000, -1000,
	-1000, -274, -274, -274, -1000, -166, -166, -166, -166, -166,
	144618, 144618, -1000, -1000, -1000, 2386, -1000, 2820, -1000, -1000,
	3509, -1000, 3249, 594, 19096, 7750, 2922, 144618, 18777, 2338,
	2338, -1000, 4005, 3318, -1000, -1000, 2547, 592, -1000, -1000,
	-1000, -1000, 1064, 144618, 1118, 3220, 111022, 7750, 1277, -220,
	2548, 2548, 56456, 37220, 2571, -1000, 56456, -1000, -1000, 3864,
	71044, 157665, -1000, 157665, 2694, -1000, 3295, 4461, -1000, 2688,
	144618, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2295, 1269, -222, 2547, -230, -1000, -1000,
	3840, -1000, 3768, 3072, 84, -1000, 84, -1000, 4183, 1156,
	388, -1000, -231, 1275, -237, 111022, 2367, -1000, 933, -1000,
	2962, 1196, 3705, -1000, -238, -1000, -243, -251, 387, 57732,
	57732, 57732, -144, -152, -1000, 144618, 590, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 154, 141, -1000, -1000, 3478, 1059,
	-1000, 952, 2252, 377, 1286, 347, 237, -1000, -1000, -1000,
	3205, -1000, 144618, -1000, -1000, -1000, 1059, 584, -1000, 56456,
	1269, -254, -1000, 1238, -256, -1000, 1237, -273, -1000, 3320,
	-1000, -276, 2720, -1000, -274, 268, 1777, 1155, 3949, 2719,
	4461, -1000, 4145, 94215, -1000, -1000, -1000, 2933, -279, -1000,
	-1000, 2547, 2295, 1269, 1118, 2547, 2770, -1000, 2560, 1154,
	-1000, -1000, -1000, -1000, 1269, 582, 2295, 581, 1765, 933,
	-1000, -1000, 1652, 3814, 3701, 1602, 1150, -1000, -1000, -1000,
	3539, -1000, 62198, 2748, 2279, 161073, 3539, 3539, -1000, -1000,
	157665, 157665, 144618, 1118, 3935, -1000, 1045, 1041, 1770, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1196, -284, -1000,
	2922, 164137, 1118, -1000, 2548, 3162, -1000, 2548, 3319, -1000,
	2570, -1000, -1000, -1000, -1000, 3312, -1000, 2225, 4085, -1000,
	-1000, 3986, 56456, -1000, -1000, -1000, -1000, -1000, -1000, 1118,
	144618, 1118, 2547, 2295, 1196, 1118, 2253, 2243, 4181, 1113,
	2688, 2295, 67889, 2547, 67889, 2537, -1000, 144618, -1000, 2477,
	1599, -1000, 1972, -1000, -1000, 2190, 4029, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -166, -166, -1000, -1000, 941, -1000,
	3728, -1000, 1307, 2544, 2544, -1000, -1000, 952, -1000, -1000,
	579, -1000, 576, -1000, 157665, 2645, -1000, -1000, -1000, 164137,
	-1000, -1000, 1196, 1118, 2547, 1510, 1196, -1000, 4179, -1000,
	2688, -1000, 2547, -296, 1118, -297, 2592, -1000, -1000, -192,
	2367, -1000, 1964, 77937, 2276, -1000, -1000, 2628, 57094, 56456,
	-1000, 4079, -1000, -1000, 3028, -1000, 3205, 56456, 56456, 268,
	76060, 161385, 1510, 1196, 1118, -1000, 1204, -1000, 1510, -1000,
	2933, 1118, 1269, 1196, 2295, 2075, 933, 1765, 77937, -286,
	-1000, -1000, -1000, 164137, -1000, -1000, -1000, -1000, -299, -302,
	-1000, -240, 124081, -330, -1000, -1000, -1000, -1000, 1510, 1196,
	-1000, -1000, -1000, 1196, 2295, 1510, 2547, -1000, -1000, 2359,
	157665, 2537, -286, -1000, 2547, 1379, -316, -1000, -1000, 1510,
	1510, 2547, -1000, 1118, -1000, 2075, -1000, -1000, -1000, 571,
	-1000, -1000, -1000, 1118, 1196, -1000, 56456, 1196, 1510, -317,
	1510, -1000, 2547, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 5160, 5159, 25, 5158, 5156, 5152, 5149, 5148, 5147,
	5146, 5145, 5135, 5134, 5129, 5128, 165, 5126, 5125, 5124,
	5121, 5120, 5114, 5112, 5104, 5103, 5102, 5100, 5099, 5098,
	5097, 5095, 5094, 5091, 5090, 5089, 5087, 5086, 5080, 5079,
	5078, 5076, 5074, 5070, 5068, 5067, 5066, 5063, 5060, 5057,
	5055, 5053, 5051, 5047, 5043, 5042, 5041, 5039, 5037, 5036,
	5035, 5034, 5033, 5032, 5031, 5030, 5026, 5022, 5021, 5020,
	5018, 5016, 5014, 5013, 5012, 5011, 5010, 5009, 5007, 5006,
	5005, 5001, 4999, 4998, 4995, 4992, 66, 4991, 4989, 4988,
	4987, 4986, 4985, 4982, 4977, 4976, 4975, 4973, 4972, 4970,
	4969, 4968, 4960, 4959, 4958, 4956, 4955, 4954, 4953, 105,
	74, 4949, 325, 4948, 4947, 4946, 4944, 4939, 4937, 4936,
	4935, 4933, 4932, 4931, 4929, 4928, 4927, 4926, 324, 4920,
	16, 194, 4919, 4918, 23, 4917, 4915, 323, 4914, 4913,
	4912, 4910, 4909, 331, 4908, 4907, 4906, 4905, 4904, 315,
	4902, 4901, 4900, 4899, 4898, 4897, 109, 167, 4896, 4894,
	3419, 4893, 4892, 4891, 4890, 4889, 4888, 4887, 311, 316,
	4886, 4885, 4884, 301, 199, 4883, 322, 4882, 4881, 4878,
	4875, 4872, 4869, 4868, 4867, 4860, 4859, 4857, 4855, 4853,
	4852, 4849, 4848, 4847, 4845, 4844, 4843, 4842, 4841, 4839,
	4838, 4836, 4834, 4833, 4832, 4830, 4829, 4828, 4827, 4826,
	4824, 4819, 4815, 4814, 4807, 4805, 4802, 4800, 4797, 4793,
	4789, 4787, 4786, 313, 252, 140, 4785, 4783, 4782, 4781,
	4770, 4768, 320, 319, 4766, 4762, 4761, 4760, 4751, 3960,
	4748, 4746, 4745, 4744, 4743, 4741, 4739, 4738, 4737, 138,
	9, 114, 4736, 4735, 111, 113, 108, 98, 123, 119,
	4731, 4730, 149, 4729, 157, 139, 4728, 144, 130, 33,
	2, 203, 300, 5988, 293, 4726, 4725, 4724, 296, 239,
	4721, 292, 4720, 4718, 4717, 4716, 4715, 4714, 81, 64,
	249, 4713, 171, 4709, 4708, 166, 201, 214, 215, 209,
	207, 96, 67, 125, 117, 72, 57, 21, 91, 260,
	32, 254, 1, 18, 309, 4707, 307, 3, 173, 15,
	45, 4703, 4701, 4700, 4698, 4304, 164, 4697, 318, 299,
	200, 4696, 4694, 4693, 987, 4691, 4690, 76, 291, 148,
	99, 128, 27, 150, 4689, 190, 259, 42, 4688, 232,
	70, 4687, 4686, 151, 107, 11116, 9174, 4685, 4679, 169,
	82, 131, 9526, 258, 257, 261, 211, 175, 222, 219,
	4677, 126, 4674, 181, 187, 210, 792, 4668, 142, 4665,
	4006, 118, 213, 193, 7177, 4664, 4661, 4660, 112, 4659,
	127, 4658, 4655, 78, 22, 5, 8, 174, 49, 41,
	6, 4653, 48, 176, 63, 37, 4652, 36, 4651, 4650,
	4649, 4647, 59, 4646, 54, 206, 4645, 4644, 328, 4641,
	87, 69, 60, 4640, 88, 272, 4635, 279, 152, 4631,
	4630, 235, 236, 237, 224, 266, 4628, 86, 288, 4627,
	4623, 4622, 4619, 4618, 330, 162, 11, 158, 4615, 4610,
	184, 4609, 65, 289, 241, 4608, 80, 4603, 4601, 208,
	71, 172, 327, 220, 276, 156, 281, 228, 283, 4592,
	4590, 4585, 221, 4582, 4577, 274, 198, 4576, 4575, 245,
	334, 115, 58, 26, 205, 101, 285, 104, 231, 192,
	4573, 243, 182, 4571, 183, 4569, 120, 4568, 329, 217,
	262, 51, 10, 7, 134, 132, 84, 20, 278, 196,
	253, 154, 4567, 9247, 3174, 3777, 280, 4566, 191, 153,
	97, 168, 188, 314, 100, 4563, 4562, 5983, 4559, 4557,
	4555, 4553, 230, 4551, 4550, 256, 179, 204, 4549, 178,
	250, 4546, 129, 85, 62, 34, 160, 141, 321, 145,
	275, 263, 295, 4545, 4543, 4542, 229, 4539, 89, 216,
	246, 4538, 242, 305, 73, 4537, 4536, 103, 186, 102,
	189, 3202, 75, 185, 4535, 270, 4534, 4533, 4531, 4529,
	4525, 4524, 4523, 4522, 287, 4520, 4519, 4518, 44, 240,
	4517, 238, 424, 227, 124, 61, 234, 110, 4513, 147,
	2517, 247, 50, 4, 4516, 94, 4515, 5492, 68, 4514,
	0, 16268, 12200, 15380, 4512, 4511, 16168, 4510, 4020, 4509,
	4508, 4507, 269, 93, 4506, 4503, 4502, 136, 4501, 106,
	4499, 4498, 83, 4497, 39, 28, 29, 40, 38, 855,
	803, 4496, 4493, 195, 161, 30, 4492, 326, 282, 4491,
	4484, 4483, 4481, 122, 4477, 55, 4476, 53, 4475, 4474,
	56, 19, 43, 4471, 4470, 251, 223, 3906, 197, 180,
	4469, 146, 4468, 4466, 312, 92, 170, 4465, 4464, 306,
	255, 264, 116, 4463, 297, 4461, 248, 4458, 79, 35,
	4457, 4455, 310, 137, 133, 77, 304, 159, 52, 4454,
	4453, 4450, 226, 4447, 4446, 4443, 4442, 4439, 135, 177,
	4438, 95, 4437, 4432, 4431, 47, 268, 218, 4430, 13,
	4422, 4421, 4419, 273, 267, 298, 212, 265, 4417, 4416,
	202, 4415, 4414, 4413, 303, 4411, 4406, 3971, 317, 4403,
	46, 4402, 4401, 4400, 12, 4399, 4395, 244, 3692, 4393,
	4391, 14, 4390, 233,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 4, 4,
	4, 4, 4, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 14, 14, 10, 10, 10, 10, 11, 11,
	11, 11, 11, 65, 65, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 20, 20, 20, 20, 20, 20, 20, 44, 46,
	45, 39, 39, 40, 40, 41, 42, 42, 47, 49,
	48, 50, 51, 51, 52, 52, 52, 13, 13, 13,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 23,
	23, 53, 53, 24, 24, 55, 55, 25, 25, 56,
	56, 679, 679, 679, 680, 680, 681, 681, 681, 28,
	58, 60, 60, 484, 484, 21, 22, 22, 22, 22,
	682, 682, 682, 682, 43, 29, 59, 36, 36, 36,
	36, 36, 252, 252, 252, 252, 27, 27, 54, 54,
	298, 298, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 678, 678, 300, 300, 299, 285, 285, 286,
	286, 287, 287, 683, 683, 301, 301, 301, 302, 302,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	572, 572, 572, 603, 603, 603, 603, 605, 605, 729,
	729, 730, 730, 730, 730, 730, 159, 159, 458, 458,
	458, 74, 74, 74, 74, 74, 668, 668, 254, 254,
	254, 256, 256, 255, 255, 255, 255, 255, 255, 255,
	255, 98, 98, 99, 99, 293, 293, 292, 292, 292,
	292, 292, 292, 292, 689, 689, 688, 725, 725, 687,
	687, 690, 690, 690, 253, 253, 253, 95, 95, 117,
	117, 155, 155, 155, 155, 155, 155, 155, 156, 156,
	157, 157, 257, 257, 257, 259, 259, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 264, 19, 19, 138, 138, 138, 138, 138,
	138, 138, 133, 133, 607, 607, 608, 608, 248, 248,
	249, 249, 249, 249, 250, 250, 251, 251, 251, 89,
	89, 261, 261, 263, 263, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 77, 77,
	77, 77, 77, 78, 78, 78, 78, 78, 78, 79,
	79, 79, 79, 79, 79, 80, 80, 87, 87, 87,
	87, 87, 87, 87, 87, 225, 225, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 103, 103, 103, 94, 94, 94, 94,
	94, 106, 106, 699, 699, 700, 700, 718, 704, 704,
	705, 705, 708, 708, 708, 709, 709, 709, 709, 709,
	717, 717, 717, 717, 717, 711, 710, 712, 712, 713,
	713, 715, 715, 715, 715, 715, 716, 716, 716, 716,
	716, 716, 716, 716, 716, 716, 716, 716, 716, 716,
	716, 716, 716, 703, 719, 720, 720, 721, 721, 722,
	722, 722, 125, 125, 125, 724, 724, 723, 723, 706,
	706, 707, 707, 69, 714, 714, 732, 732, 70, 71,
	72, 73, 701, 701, 731, 731, 731, 731, 731, 731,
	731, 731, 731, 731, 731, 731, 731, 731, 731, 731,
	731, 733, 733, 734, 734, 735, 735, 735, 735, 735,
	735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
	735, 735, 735, 92, 92, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 92,
	92, 92, 107, 107, 416, 416, 379, 379, 108, 108,
	108, 109, 109, 110, 110, 110, 110, 91, 91, 91,
	665, 665, 666, 672, 736, 736, 561, 561, 560, 560,
	112, 112, 457, 457, 113, 113, 113, 113, 113, 113,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 123, 123, 123,
	123, 123, 124, 124, 124, 121, 121, 121, 118, 118,
	118, 116, 116, 116, 122, 122, 122, 126, 126, 126,
	671, 365, 365, 120, 120, 120, 119, 119, 119, 432,
	432, 433, 435, 434, 127, 127, 127, 127, 380, 128,
	128, 128, 128, 128, 128, 128, 128, 131, 131, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 563, 563, 5, 5, 291, 291, 290, 290,
	290, 290, 6, 6, 6, 296, 296, 295, 294, 212,
	212, 212, 129, 129, 129, 525, 525, 134, 134, 134,
	473, 473, 135, 135, 135, 135, 135, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 675, 675, 425, 425, 328,
	328, 328, 328, 147, 147, 147, 147, 148, 148, 148,
	148, 149, 149, 234, 234, 165, 165, 165, 165, 164,
	164, 164, 164, 164, 164, 164, 164, 81, 81, 81,
	82, 82, 83, 83, 84, 84, 85, 85, 86, 86,
	86, 86, 86, 168, 168, 33, 33, 33, 33, 33,
	35, 35, 34, 34, 34, 169, 169, 726, 726, 171,
	167, 167, 167, 167, 167, 167, 167, 166, 166, 170,
	170, 170, 170, 172, 174, 174, 174, 174, 174, 173,
	173, 173, 173, 173, 175, 175, 597, 597, 443, 443,
	595, 595, 619, 619, 596, 596, 386, 386, 386, 386,
	386, 387, 387, 387, 606, 606, 606, 606, 606, 606,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 235, 235, 235, 236, 236, 241, 241, 242,
	242, 242, 243, 243, 243, 240, 240, 240, 237, 237,
	238, 238, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 246, 246, 244, 244, 245, 245, 738, 738,
	737, 737, 247, 247, 247, 247, 247, 205, 205, 205,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 444, 444, 208, 208, 208, 192, 192,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 260,
	260, 260, 260, 260, 184, 184, 184, 184, 184, 184,
	184, 184, 185, 185, 185, 178, 178, 194, 194, 194,
	194, 194, 186, 186, 187, 187, 187, 188, 188, 188,
	188, 217, 217, 191, 191, 191, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 179, 180, 180, 180, 180,
	196, 196, 196, 196, 480, 480, 480, 223, 223, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 220, 220, 220, 220, 220,
	220, 691, 691, 692, 692, 692, 213, 213, 213, 213,
	213, 213, 541, 541, 206, 206, 206, 206, 211, 211,
	211, 211, 190, 190, 190, 190, 215, 215, 215, 215,
	463, 463, 203, 203, 203, 204, 204, 204, 209, 209,
	222, 210, 417, 417, 207, 207, 214, 214, 214, 214,
	216, 216, 216, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 182, 182, 182, 182, 183,
	183, 183, 183, 218, 218, 202, 202, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 739, 739,
	198, 198, 198, 197, 197, 197, 197, 200, 200, 201,
	201, 201, 201, 201, 201, 201, 199, 189, 221, 673,
	673, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 667, 667, 667, 667, 667, 667, 667, 667, 667,
	670, 670, 670, 670, 670, 674, 674, 139, 139, 139,
	139, 139, 139, 139, 150, 150, 150, 150, 150, 150,
	150, 153, 153, 140, 140, 140, 140, 140, 140, 140,
	143, 143, 141, 141, 141, 141, 142, 142, 100, 100,
	100, 100, 100, 18, 18, 18, 101, 101, 319, 319,
	269, 269, 269, 404, 404, 270, 270, 394, 394, 394,
	394, 265, 265, 266, 266, 267, 268, 268, 102, 102,
	740, 740, 740, 684, 684, 684, 685, 685, 685, 685,
	685, 685, 388, 388, 389, 389, 505, 505, 505, 505,
	505, 392, 392, 392, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 402, 403, 403, 395, 395, 401, 400,
	400, 399, 399, 398, 398, 396, 397, 397, 397, 406,
	406, 405, 408, 408, 407, 504, 628, 628, 630, 630,
	630, 630, 630, 630, 630, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 481, 481, 741, 741, 742, 743, 626, 626,
	626, 626, 626, 627, 622, 622, 623, 623, 623, 623,
	623, 390, 390, 391, 391, 391, 391, 624, 625, 423,
	423, 545, 629, 629, 631, 631, 633, 744, 744, 744,
	744, 744, 744, 745, 745, 745, 503, 503, 502, 502,
	501, 501, 414, 414, 634, 634, 634, 634, 635, 635,
	635, 635, 635, 638, 637, 636, 636, 636, 636, 636,
	105, 105, 105, 460, 460, 459, 459, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 230, 230, 331, 331, 331,
	97, 97, 97, 15, 15, 15, 15, 15, 15, 15,
	346, 346, 16, 16, 16, 16, 686, 686, 686, 104,
	104, 104, 104, 104, 104, 412, 412, 412, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 677, 677, 676, 676, 332, 332,
	747, 747, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 564, 564, 565, 565, 567, 567, 566, 566, 96,
	96, 96, 96, 96, 482, 482, 479, 479, 478, 478,
	422, 422, 543, 543, 543, 544, 336, 336, 337, 337,
	288, 288, 288, 483, 483, 483, 38, 37, 26, 26,
	30, 30, 31, 31, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 32, 32, 62, 62, 62, 62, 63,
	63, 63, 63, 66, 66, 67, 67, 61, 61, 61,
	61, 64, 64, 57, 57, 68, 68, 68, 68, 68,
	693, 695, 695, 694, 694, 698, 698, 698, 698, 698,
	698, 696, 696, 367, 367, 697, 697, 727, 727, 728,
	728, 146, 146, 151, 151, 151, 151, 151, 152, 152,
	152, 152, 154, 154, 154, 154, 163, 163, 226, 226,
	226, 226, 226, 226, 226, 75, 75, 88, 88, 161,
	749, 749, 749, 162, 162, 162, 227, 227, 227, 227,
	228, 228, 229, 229, 748, 748, 329, 329, 498, 498,
	499, 499, 750, 750, 500, 500, 500, 500, 500, 322,
	321, 323, 323, 324, 324, 93, 93, 93, 310, 310,
	309, 312, 312, 311, 313, 313, 314, 314, 307, 307,
	609, 609, 316, 316, 316, 317, 317, 303, 303, 304,
	304, 305, 305, 306, 306, 320, 320, 604, 604, 751,
	751, 137, 137, 137, 233, 233, 378, 378, 378, 491,
	491, 491, 415, 415, 343, 343, 497, 497, 497, 497,
	497, 456, 456, 456, 232, 232, 430, 430, 446, 446,
	447, 447, 557, 557, 448, 144, 144, 145, 145, 160,
	160, 273, 273, 271, 271, 271, 271, 271, 271, 271,
	271, 278, 278, 279, 279, 280, 280, 281, 282, 282,
	282, 282, 436, 436, 283, 283, 283, 272, 272, 272,
	274, 274, 274, 274, 274, 274, 274, 277, 277, 277,
	277, 284, 284, 284, 276, 276, 645, 645, 645, 647,
	647, 649, 649, 648, 648, 644, 644, 646, 646, 746,
	746, 462, 462, 462, 411, 413, 409, 409, 410, 410,
	420, 420, 418, 419, 419, 421, 421, 542, 542, 542,
	289, 289, 289, 453, 453, 453, 453, 454, 454, 487,
	487, 485, 485, 485, 485, 486, 486, 488, 488, 488,
	489, 489, 490, 490, 450, 450, 451, 451, 452, 452,
	452, 452, 521, 521, 275, 275, 275, 427, 427, 427,
	428, 428, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 512, 512, 510, 510, 510, 510, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 547, 548,
	548, 429, 429, 549, 494, 494, 495, 495, 492, 492,
	493, 493, 496, 496, 663, 663, 663, 664, 664, 540,
	540, 550, 550, 550, 550, 550, 550, 536, 536, 537,
	537, 538, 538, 539, 539, 558, 559, 559, 466, 466,
	466, 466, 464, 464, 467, 467, 467, 467, 467, 465,
	465, 551, 551, 551, 551, 455, 455, 231, 231, 552,
	552, 552, 552, 553, 554, 554, 555, 555, 506, 507,
	507, 568, 568, 568, 568, 570, 426, 426, 426, 426,
	426, 621, 620, 620, 569, 569, 569, 569, 569, 569,
	569, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 585, 585, 585, 585, 585, 585, 585,
	571, 571, 571, 571, 571, 571, 571, 575, 575, 575,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 576, 576, 581, 581, 582, 582, 582, 577, 578,
	583, 583, 583, 583, 752, 752, 587, 587, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 573, 573, 573,
	580, 580, 580, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 474, 474, 476, 476,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 515, 515, 515, 515, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 639, 639, 639, 639, 639, 639, 639, 639, 517,
	517, 642, 642, 643, 643, 640, 640, 640, 640, 640,
	640, 640, 640, 640, 640, 640, 640, 640, 640, 640,
	640, 640, 640, 640, 640, 640, 640, 640, 641, 641,
	641, 641, 641, 641, 641, 641, 641, 641, 641, 641,
	641, 641, 641, 641, 641, 641, 641, 641, 641, 641,
	641, 641, 641, 641, 641, 641, 641, 641, 641, 641,
	641, 641, 641, 641, 641, 641, 650, 650, 651, 651,
	653, 653, 654, 654, 655, 656, 656, 656, 657, 658,
	658, 652, 652, 659, 659, 659, 659, 660, 660, 661,
	661, 661, 661, 661, 662, 662, 662, 662, 662, 527,
	527, 528, 528, 534, 534, 534, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 385, 385, 384, 333, 333, 333, 333, 333,
	333, 441, 441, 439, 439, 439, 442, 442, 440, 440,
	438, 438, 437, 437, 524, 524, 522, 522, 526, 526,
	468, 468, 586, 586, 586, 586, 586, 586, 586, 586,
	469, 469, 469, 477, 470, 470, 471, 471, 471, 471,
	471, 518, 519, 472, 472, 472, 520, 520, 529, 533,
	533, 532, 531, 531, 530, 530, 508, 508, 509, 509,
	449, 449, 753, 753, 445, 445, 556, 556, 556, 556,
	615, 615, 382, 382, 431, 431, 381, 381, 373, 373,
	374, 374, 374, 374, 424, 424, 535, 535, 588, 588,
	589, 589, 590, 590, 591, 591, 592, 593, 594, 523,
	523, 354, 353, 340, 341, 352, 351, 350, 339, 342,
	347, 348, 349, 344, 345, 361, 360, 359, 308, 315,
	366, 368, 368, 371, 371, 372, 370, 369, 369, 356,
	357, 358, 562, 338, 375, 375, 376, 376, 376, 377,
	377, 377, 377, 334, 334, 334, 335, 335, 362, 362,
	363, 364, 364, 355, 355, 355, 325, 325, 325, 326,
	326, 327, 327, 602, 602, 599, 599, 599, 600, 600,
	600, 702, 601, 601, 601, 601, 598, 598, 598, 598,
	598, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 614, 614, 614, 614, 614, 614, 614, 614,
	614, 614, 614, 614, 614, 614, 614, 614, 614, 614,
	614, 616, 616, 616, 616, 616, 616, 616, 616, 616,
	616, 616, 616, 616, 616, 616, 616, 616, 616, 616,
	616, 616, 616, 616, 616, 616, 616, 616, 616, 616,
	616, 616, 616, 616, 616, 616, 616, 616, 616, 616,
	616, 616, 616, 616, 616, 616, 616, 616, 616, 616,
	616, 616, 616, 616, 616, 611, 611, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 613, 617, 617, 617, 617,
	617, 617, 617, 617, 617, 617, 617, 617, 617, 617,
	617, 617, 617, 617, 617, 617, 617, 617, 617, 617,
	617, 617, 617, 617, 617, 617, 617, 617, 617, 617,
	617, 617, 617, 617, 617, 617, 617, 617, 617, 617,
	617, 617, 617, 617, 617, 617, 617, 617, 617, 617,
	617, 617, 617, 617, 617, 617, 617, 617, 617, 617,
	617, 617, 617, 617, 617, 617, 617, 617, 617, 617,
	617, 617, 617, 617, 617, 617, 618, 618, 618, 618,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 6, 4,
	4, 6, 9, 6, 8, 4, 4, 5, 9, 7,
	9, 5, 6, 8, 7, 7, 9, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	6, 4, 6, 6, 9, 6, 9, 6, 5, 6,
	5, 1, 1, 1, 1, 1, 1, 0, 1, 6,
	6, 4, 6, 2, 1, 4, 8, 7, 10, 9,
	4, 4, 4, 3, 4, 4, 4, 7, 7, 9,
	8, 9, 5, 3, 5, 7, 4, 12, 4, 12,
	1, 3, 5, 5, 2, 5, 3, 6, 4, 4,
	4, 6, 5, 6, 5, 6, 4, 8, 3, 8,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	4, 4, 2, 1, 1, 3, 1, 3, 2, 4,
	3, 2, 3, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 6, 8, 6, 6, 6, 9, 4, 3,
	2, 2, 0, 1, 1, 1, 1, 1, 3, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 3, 1, 3, 3, 3,
	3, 12, 3, 5, 4, 1, 3, 3, 3, 3,
	2, 4, 4, 4, 1, 1, 2, 1, 4, 1,
	0, 3, 3, 0, 4, 6, 0, 6, 4, 4,
	4, 5, 7, 6, 8, 7, 9, 2, 1, 3,
	1, 3, 2, 5, 0, 1, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	1, 1, 1, 3, 3, 6, 4, 9, 7, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	2, 2, 1, 2, 3, 3, 4, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 4, 3, 6, 6, 6,
	6, 6, 8, 4, 4, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 3, 9, 3, 6, 3, 8, 5,
	3, 12, 4, 2, 0, 1, 0, 1, 1, 0,
	1, 3, 1, 3, 3, 3, 3, 2, 2, 1,
	1, 1, 1, 2, 1, 1, 1, 1, 0, 1,
	2, 2, 2, 1, 1, 1, 4, 5, 1, 1,
	1, 1, 3, 3, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 1, 2, 1, 1, 3, 0, 1,
	4, 0, 4, 6, 3, 1, 3, 2, 1, 3,
	2, 1, 3, 5, 1, 2, 1, 0, 6, 6,
	6, 8, 1, 0, 4, 3, 3, 4, 3, 4,
	4, 4, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 1, 0, 1, 0, 4, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 1, 3,
	0, 1, 2, 2, 1, 2, 1, 6, 10, 5,
	1, 3, 3, 1, 1, 0, 2, 0, 2, 0,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 3, 5, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 1, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 4, 3, 1, 2, 3, 2,
	2, 2, 4, 6, 3, 1, 2, 2, 7, 3,
	6, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 7, 4, 7,
	8, 8, 9, 11, 11, 11, 6, 2, 6, 9,
	4, 7, 7, 10, 7, 10, 10, 10, 13, 10,
	13, 5, 8, 5, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	5, 4, 6, 4, 3, 0, 1, 3, 2, 4,
	2, 4, 1, 6, 3, 1, 2, 1, 2, 3,
	5, 5, 4, 4, 4, 1, 1, 1, 1, 5,
	4, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 1, 1,
	2, 1, 2, 2, 2, 9, 2, 1, 0, 1,
	1, 0, 1, 2, 0, 2, 2, 0, 2, 2,
	2, 2, 1, 2, 3, 3, 4, 4, 4, 4,
	3, 3, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 3, 6, 8, 3, 3, 3,
	4, 8, 6, 4, 5, 5, 5, 5, 3, 0,
	1, 1, 1, 1, 4, 4, 3, 4, 4, 3,
	4, 4, 1, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 5, 7, 4, 2, 6, 4,
	3, 2, 3, 4, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 3, 5, 3, 5, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 3, 4, 3, 4, 3, 5, 3, 4, 4,
	3, 4, 5, 3, 4, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 3, 5, 4, 6, 4,
	6, 4, 1, 0, 3, 4, 4, 5, 7, 5,
	3, 3, 6, 4, 2, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	7, 5, 2, 0, 3, 3, 4, 3, 3, 3,
	5, 3, 3, 3, 4, 4, 4, 4, 5, 6,
	4, 4, 4, 4, 3, 4, 5, 4, 4, 5,
	6, 5, 5, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 4, 3, 4, 4, 5, 1, 1,
	10, 10, 3, 5, 5, 5, 3, 5, 6, 4,
	4, 5, 5, 2, 6, 3, 2, 5, 4, 2,
	0, 1, 1, 1, 1, 2, 3, 2, 2, 3,
	2, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 7, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 3, 3, 6,
	5, 8, 3, 6, 6, 3, 12, 15, 1, 0,
	1, 2, 3, 0, 2, 0, 4, 0, 4, 5,
	4, 1, 1, 1, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 2,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 3,
	6, 4, 2, 3, 5, 5, 5, 2, 5, 5,
	2, 2, 2, 0, 1, 1, 3, 4, 10, 11,
	12, 9, 10, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 6, 1,
	3, 1, 2, 0, 1, 2, 3, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 3, 0,
	4, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 2, 3, 1, 4, 2, 3, 2, 2,
	4, 7, 3, 4, 6, 5, 7, 5, 5, 3,
	3, 0, 2, 2, 2, 2, 1, 1, 1, 8,
	10, 11, 8, 11, 5, 4, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 7, 10, 6, 5, 3,
	4, 1, 0, 1, 3, 1, 0, 2, 4, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 2, 1, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 4, 5,
	2, 4, 6, 6, 8, 6, 7, 8, 9, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 6, 8, 8, 4,
	7, 3, 0, 7, 10, 1, 1, 1, 1, 1,
	2, 3, 0, 3, 0, 3, 0, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 2, 1, 2,
	3, 2, 2, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 15, 17, 3, 1, 0,
	4, 1, 0, 4, 1, 0, 2, 2, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 7,
	10, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 3, 0, 1, 3, 0, 3,
	1, 3, 1, 2, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 2, 2, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 670, -3, -227, -130, -127, -89, -87,
	-134, -135, -113, -136, -129, -158, -163, -144, -145, -146,
	-159, -165, -226, -235, -236, -237, -238, -247, -231, -179,
	-228, -229, -4, -74, -76, -90, -112, -114, -128, -138,
	-137, -139, -147, -155, -150, -133, -81, -160, -164, -176,
	-230, -232, -233, 33, 32, 108, 86, 167, 139, 149,
	221, 424, 476, 488, 441, 154, 464, 446, -170, -171,
	510, -75, -88, -162, -161, 79, 140, 185, 327, 456,
	594, 516, 54, 159, -7, -15, -33, -19, 30, 50,
	-77, -78, -79, -80, 68, -97, -92, -107, -98, -91,
	-94, -95, -103, -731, 111, -646, -115, -119, -154, -117,
	-126, -735, 175, 242, -140, -141, -142, 406, -148, -149,
	467, -151, -152, -153, 470, 176, -83, -82, 169, -271,
	-273, -167, -166, -168, -234, -177, -178, -180, -181, -182,
	-183, -185, -186, -188, -217, -189, -190, -191, -192, -193,
	-194, -195, -199, -220, -196, -197, -198, -201, -200, -202,
	-207, -203, -204, -205, -206, -208, -209, -211, -212, -213,
	-214, -215, -216, -218, -219, -210, -221, -187, -222, 584,
	533, 88, 480, 21, -8, -9, -10, -11, -12, -13,
	-14, -18, -17, -68, -5, -6, -20, -99, -35, -34,
	-93, -96, -100, -101, -102, -111, -104, -105, -106, -645,
	-116, -118, -121, -123, -124, -120, -122, -125, 465, 641,
	-274, -272, 667, 646, 601, -184, -23, -28, -24, -25,
	-27, -29, -26, -30, -31, -32, -53, -58, -55, -56,
	-54, -57, -59, -60, -61, -62, -63, -64, -65, -66,
	-67, -37, -43, -44, -38, -39, -40, -41, -42, -45,
	-46, -47, -48, -49, -50, -51, -52, -21, -22, -36,
	-69, -70, -72, -71, -73, 628, 637, -277, -275, -276,
	-284, 502, 609, 556, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, -380, 2, -356, -362, -363, -364, -355,
	-325, -613, -618, 4, -610, -616, 184, 258, 257, 259,
	366, 21, 22, 24, 23, 25, 26, 27, 28, 30,
	31, 42, 44, 45, 46, 48, 49, 50, 51, 52,
	53, 54, 58, 60, 64, 65, 66, 67, 68, 69,
	70, 74, 79, 80, 85, 86, 87, 88, 89, 90,
	91, 92, 98, 95, 96, 97, 99, 100, 102, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 116,
	117, 118, 126, 127, 128, 129, 130, 132, 139, 133,
	140, 143, 137, 142, 138, 144, 145, 147, 148, 149,
	152, 153, 154, 156, 157, 158, 160, 161, 162, 164,
	165, 167, 168, 169, 172, 170, 173, 171, 174, 175,
	176, 177, 178, 181, 182, 190, 191, 192, 197, 199,
	200, 201, 203, 204, 207, 208, 209, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 222, 226, 228, 229,
	230, 231, 232, 233, 234, 240, 241, 242, 244, 245,
	246, 247, 248, 252, 253, 254, 255, 262, 264, 270,
	271, 276, 272, 277, 278, 280, 284, 285, 286, 287,
	288, 289, 290, 292, 294, 293, 298, 296, 300, 301,
	304, 305, 306, 307, 308, 309, 313, 314, 310, 315,
	316, 318, 319, 322, 320, 323, 324, 321, 325, 328,
	329, 330, 331, 332, 333, 334, 335, 336, 337, 338,
	339, 326, 327, 342, 340, 344, 345, 346, 347, 348,
	363, 365, 358, 359, 360, 352, 353, 349, 354, 350,
	351, 355, 356, 362, 357, 368, 369, 370, 371, 374,
	238, 263, 376, 377, 380, 382, 399, 385, 386, 387,
	390, 391, 394, 397, 398, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 411, 412, 414, 415, 416,
	418, 419, 420, 422, 424, 425, 427, 428, 429, 431,
	432, 433, 434, 435, 436, 437, 438, 440, 441, 443,
	442, 444, 446, 448, 449, 450, 456, 457, 464, 458,
	460, 461, 462, 463, 465, 466, 467, 468, 469, 470,
	474, 472, 473, 475, 476, 478, 479, 480, 481, 482,
	484, 486, 487, 491, 492, 495, 493, 513, 514, 536,
	488, 489, 490, 494, 496, 497, 498, 499, 501, 500,
	505, 503, 504, 506, 507, 508, 510, 512, 515, 516,
	518, 519, 520, 521, 522, 523, 524, 527, 529, 530,
	531, 532, 533, 534, 555, 535, 537, 541, 542, 543,
	544, 538, 539, 554, 546, 547, 548, 549, 551, 552,
	557, 558, 559, 560, 561, 562, 564, 565, 567, 575,
	588, 576, 577, 578, 579, 581, 584, 585, 586, 587,
	573, 589, 590, 593, 594, 595, 599, 596, 600, 597,
	598, 601, 603, 606, 607, 608, 615, 613, 614, 616,
	617, 619, 620, 618, 622, 623, 624, 629, 630, 632,
	633, 634, 37, 55, 56, 59, 61, 63, 75, 76,
	77, 81, 134, 135, 166, 179, 180, 193, 210, 211,
	223, 225, 235, 236, 237, 261, 265, 266, 268, 274,
	297, 373, 375, 392, 396, 413, 417, 421, 423, 439,
	483, 511, 525, 540, 545, 568, 569, 570, 571, 580,
	582, 609, 610, 611, 621, 631, -380, 2, -356, 383,
	-349, 2, -325, -325, 424, 29, 2, 29, 412, 504,
	559, 561, 2, -675, -425, 552, 2, 29, -328, -325,
	111, 221, 502, -349, 2, -675, 221, -425, 26, 552,
	2, -325, 2, 397, 178, 207, 23, 28, 72, 83,
	106, 152, 177, 202, -734, 399, 432, 486, 506, 554,
	565, 581, 2, 614, 319, 503, 556, 252, 129, 586,
	562, 494, -686, 491, 492, 397, 430, 478, 224, 602,
	-329, 2, 488, -325, 319, 2, 670, 102, 80, 483,
	507, -173, 2, 309, 576, -174, -175, -172, 568, -597,
	494, 478, 342, -325, 670, 670, 670, 29, -338, 2,
	-325, -338, 2, -239, 2, -338, -737, -246, -245, -244,
	22, 457, 192, 290, 205, 243, 347, 427, 203, 52,
	-239, 2, 556, 252, 494, 129, 552, -360, 659, -362,
	562, 2, -224, 507, 535, 231, 51, 50, 80, 29,
	431, 85, 404, 130, 136, 161, 587, 222, 552, 252,
	253, 285, 88, 101, 102, -480, 48, 278, 74, 277,
	492, -691, 491, -541, 557, 208, 496, 504, 551, 92,
	290, 488, 576, 578, 111, 603, 479, 634, 436, 437,
	549, 450, 546, 310, 170, 206, 4, 129, 342, 478,
	509, 294, 293, 588, 568, 309, 487, 407, 90, -748,
	2, 576, -748, 2, 670, 2, 556, 403, 614, 503,
	207, 129, 436, 252, 586, 50, 152, 28, 74, 562,
	645, 494, -686, 642, 643, 319, 136, -668, 2, -667,
	4, -616, -610, -374, -373, 556, 562, 129, -364, -355,
	659, -363, 670, 670, 670, 670, 2, 277, 278, 434,
	433, 507, 508, 29, 670, 670, 670, 670, 670, 670,
	491, 178, 2, 562, 177, -699, 23, 28, 72, 101,
	106, 136, 202, 399, 432, 506, 554, 558, 565, 581,
	-685, 535, 74, 494, -684, -686, 388, 319, 586, 152,
	-478, 129, 309, 219, 595, 561, 559, 592, 143, 264,
	598, 597, 670, 670, 670, 670, -131, 2, 667, 33,
	32, -130, -134, 154, 516, 510, -264, 556, 269, 2,
	-325, 670, 670, 670, 2, 277, 278, 491, 492, 29,
	670, 670, 205, -667, 552, 2, 670, 670, 670, 2,
	29, 277, 278, 491, 492, 269, 2, 74, 497, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	-746, 2, 556, 576, 2, -748, 2, -748, 2, -749,
	576, 631, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, -272, -274, -273,
	670, 670, 670, 670, 670, 670, 670, 670, -224, 507,
	2, 80, 29, 29, -418, -420, 591, 267, 163, 389,
	-271, -273, 2, -645, 588, 507, -595, 2, -513, -619,
	-515, 657, 658, 650, 553, 73, -384, 364, 635, -527,
	136, 592, 383, -618, -516, -529, 166, 399, 483, -442,
	257, 8, 9, 5, 6, 7, -334, -517, -523, 583,
	183, 372, -377, 671, 10, 667, -642, -273, -528, 38,
	225, 71, -599, -376, -335, -571, 268, -375, -355, -639,
	-640, 4, -610, -611, -600, -574, -582, -581, -578, -577,
	-579, -585, -325, -613, 83, 120, 121, 119, 124, 123,
	312, 311, 125, 122, 509, 602, 72, 37, 235, 236,
	274, 373, 237, 81, -641, 153, -612, 265, 266, 525,
	56, 439, 193, 135, 134, 375, 61, 59, 610, -583,
	131, 568, 569, 570, 571, 210, 211, 63, 179, 180,
	396, 421, 545, 580, 582, 223, 297, 47, 115, 206,
	260, 239, 273, 275, 279, 299, 302, 343, 361, 367,
	393, 395, 477, 517, -752, 611, 540, 75, 76, 198,
	-647, 442, -648, -349, -647, 670, 670, 672, 670, -409,
	-411, -413, 2, 29, 150, 667, 2, -546, 2, -547,
	-551, -273, 291, -550, 667, -548, 665, -356, 384, -643,
	484, -639, -640, -334, -355, -376, 4, -610, -612, 669,
	-414, 667, 129, 494, 556, 84, 252, 101, 177, 207,
	-473, 667, -325, 29, 383, 572, 672, -675, -425, -410,
	429, -525, 667, 383, 386, 205, 386, -675, 65, 99,
	-724, 235, 2, -723, -362, 323, 2, 2, 2, 2,
	2, 235, -325, 556, 128, 289, 2, 2, 2, 2,
	2, 2, 2, -434, 235, 2, -432, -362, 614, -435,
	235, 2, -432, -433, 235, 2, -432, -479, 2, 94,
	-339, 235, 2, -325, -365, 235, 2, -360, -325, 235,
	2, -371, 235, 2, -368, -325, -605, 235, 2, -603,
	4, -610, 125, 509, -513, 2, -160, 2, 65, -325,
	614, 2, 513, 2, 667, -173, 2, 77, 576, 47,
	507, -174, 2, -499, 2, -500, -321, -322, -323, -558,
	-324, 276, 428, 438, 638, 141, 364, 634, -726, 205,
	649, 572, -595, -595, -595, -443, 669, -241, 58, -338,
	-738, -737, -738, -593, 29, -588, 8, -589, 657, 658,
	-593, -593, -738, -738, 2, 2, 2, 2, 2, -516,
	2, -527, -224, 2, 198, 604, 2, 8, 2, 243,
	-260, -607, 496, 190, 437, 607, 2, -602, 10, -601,
	5, 4, -610, -616, -611, -613, 83, 513, 2, 514,
	80, -480, 634, 80, 205, 2, 205, 2, -463, 2,
	628, 429, 205, 2, 2, -673, 2, 383, 222, 205,
	2, 205, 2, 205, 2, 570, 205, 2, 205, 2,
	-223, 508, 577, 555, 433, 278, 2, -160, 625, -143,
	198, 278, 277, -513, 625, 2, -692, 198, 492, -513,
	2, 575, 287, 171, 205, -463, 2, 205, 2, 205,
	2, 205, 2, 5, 2, 44, 434, 536, 2, 276,
	428, 536, 2, 534, 2, -356, 556, 614, 503, 129,
	253, 500, 207, 29, 2, 491, 178, 2, 2, 95,
	96, 205, 2, 205, 2, 220, 205, 2, 450, 205,
	556, -444, 669, -444, 634, 2, -498, -499, 2, -551,
	235, -356, 2, -353, -598, 4, -610, -616, -611, -617,
	29, 32, 33, 34, 36, 38, 39, 40, 43, 62,
	71, 72, 78, 82, 84, 94, 101, 111, 119, 120,
	122, 121, 123, 124, 125, 136, 141, 146, 150, 151,
	155, 159, 163, 183, 185, 198, 202, 205, 221, 224,
	227, 243, 256, 267, 269, 291, 295, 303, 311, 312,
	364, 372, 378, 383, 384, 388, 389, 410, 426, 445,
	471, 502, 509, 528, 550, 556, 566, 572, 574, 583,
	591, 592, 602, 604, 612, 625, 626, 627, 628, -618,
	2, -551, 235, 2, -359, 235, -551, -362, 2, -723,
	2, -339, 2, -513, -679, 564, 173, 458, 2, -381,
	235, -356, -358, -362, -360, 2, 491, -607, 2, 2,
	2, -513, 2, 2, -516, 29, -368, 2, -603, 235,
	2, 29, 29, 614, 429, 269, 572, 672, -431, -373,
	-374, -594, 4, 8, -424, -325, 669, -513, 2, -160,
	-143, 2, -513, 235, 2, -160, 235, 2, -513, 235,
	2, -160, 235, 2, -325, 2, -687, 2, -725, -607,
	235, 99, -325, 2, 235, -325, 2, 207, -733, 486,
	585, 323, 2, 2, 581, 2, 106, 556, 128, 2,
	2, 2, 2, 2, 2, 2, 556, -344, 2, -325,
	198, -560, 269, -368, 235, -369, 2, 503, -747, 442,
	-603, 235, 2, 462, 614, -360, 235, 2, -360, 252,
	271, -339, 235, 2, 561, 559, 561, 559, 205, 2,
	269, 2, 269, 2, -552, 2, -553, -547, -554, 665,
	384, -563, 2, -562, -601, 609, -131, 667, -131, 667,
	507, 667, -607, -356, -356, -513, 2, -160, -143, 2,
	-513, 2, -160, 2, -325, 2, -157, -607, -156, 667,
	205, 603, -325, 2, -513, 2, -160, -143, 2, -513,
	2, -160, 2, -264, 198, 2, 129, 556, -455, -551,
	-498, 572, -418, -420, -224, 513, 2, -278, -453, -280,
	198, -485, -486, -281, 303, 185, 378, -282, -462, 29,
	150, -462, -462, 65, 668, 668, -726, 588, 11, 12,
	82, 44, 657, 658, 659, 660, 196, 661, 662, 655,
	656, 654, 647, 648, 652, 282, 283, 103, 651, 649,
	93, 317, 485, 186, 187, 188, 189, 459, 250, 35,
	41, 251, 14, 15, 16, -384, 34, 388, 302, 635,
	239, 517, 650, 17, 18, 19, 273, 275, 367, 55,
	243, -333, 399, -383, 553, 73, -513, -513, -513, -513,
	-513, -513, -513, -513, 395, 667, -449, -508, 665, -273,
	667, 667, 667, 667, -594, -273, -513, -527, 668, -440,
	667, -273, -527, -522, 667, 483, 665, 667, -530, -513,
	5, 5, 5, 667, 669, -650, 629, 198, 667, 667,
	667, 667, 667, 667, 667, 667, 667, 667, 667, 667,
	667, 667, 667, 667, 423, -576, 667, -575, 667, -575,
	-575, -587, 615, 667, 667, -573, 667, 637, 630, 667,
	-573, 667, 667, 667, 667, 667, 667, 667, 667, 667,
	667, 667, 667, 667, 615, 562, 672, -647, -494, 667,
	667, -445, -556, -513, 659, -445, -445, 383, -437, -513,
	115, -466, 279, 343, 206, 299, 477, 260, -510, 671,
	-510, -540, 637, -273, -548, -355, -273, -550, 667, -546,
	-540, -132, -594, -112, -128, -137, -160, -176, -232, -233,
	659, -356, 667, 205, 667, 669, -598, 205, -424, -339,
	-368, -356, -375, -376, -381, -350, -325, 2, 2, 149,
	-437, -669, 586, 494, 29, 4, -616, -610, -374, 503,
	-373, 556, 129, 178, 207, -605, -328, 572, 39, -524,
	-568, -569, -621, 671, -620, -571, -580, 413, 417, -600,
	268, 4, -610, -612, 265, 266, 525, 56, 439, 193,
	135, 134, 375, 61, 59, 610, 568, 569, 570, 571,
	210, 211, 63, 611, 540, 75, 76, -669, 586, 494,
	29, 503, 198, -605, 198, 205, -605, 2, -607, 2,
	-301, 672, 70, 468, 166, -706, 667, 2, 166, 2,
	2, 2, -325, -301, 166, 672, -434, 235, -301, 166,
	-301, 166, -382, 235, -381, -301, 166, -301, 672, 166,
	166, -301, 672, 166, 669, 672, 166, -605, 2, -479,
	-597, -437, 39, -499, 2, 136, 4, 5, -750, 672,
	301, -387, 316, 363, 230, 384, 632, 376, 141, -606,
	5, 4, -523, -535, 136, 309, 268, -588, -590, 9,
	-591, 657, 658, -596, -595, 118, 669, -598, -242, 263,
	42, -338, -338, -738, -738, 8, 8, -738, -738, -338,
	-338, 628, 556, 280, -156, -607, 205, 243, -251, 628,
	-607, -607, -607, -607, -597, 29, 514, 2, -223, 508,
	577, 96, 514, 2, -356, 556, 129, 252, 86, -696,
	198, 2, -325, -674, 198, -670, 478, 494, 586, -669,
	-674, -356, 129, -356, 129, -356, 129, -356, -356, 2,
	2, 2, 2, 2, 91, 492, 491, 2, -160, -513,
	2, 91, 2, 50, 530, -692, 198, 2, 575, 2,
	575, 2, -325, -325, -325, -325, 378, 535, 301, 628,
	-356, -356, -359, -362, -357, -362, 205, 253, -362, 496,
	557, 587, 492, 178, -513, 2, 99, -739, 2, 205,
	198, 2, 556, 252, 556, 252, 129, 205, 80, 129,
	29, 205, 556, 489, 669, 4, -298, 460, 510, 398,
	-297, 25, 30, 154, 254, 348, 607, 172, -399, 255,
	465, -396, 403, 166, 529, 596, -679, -682, 490, 564,
	173, 458, 97, 376, 510, 398, 460, 166, -459, -461,
	39, 127, 348, 397, 66, 246, 321, 322, 533, 466,
	621, 166, 510, 398, 460, -714, 460, 510, 398, -701,
	-716, 348, 67, 473, 539, 241, 532, 623, 178, 501,
	298, 364, 109, 484, 547, 400, 398, -16, -314, 25,
	154, -316, -309, 510, 30, -682, 107, 460, 646, 641,
	465, 409, 548, 426, -682, -679, 296, -681, 624, 362,
	-300, 529, 596, -679, -484, -682, 490, 460, -299, 364,
	622, -401, -396, 403, 166, 671, 25, 154, 460, 510,
	398, -729, -730, 30, -594, 2, -296, 243, -295, 25,
	-291, -290, 25, 154, 510, 599, 406, 470, -169, -149,
	-168, 465, 510, -169, 2, 460, 398, -676, -346, -644,
	243, 628, 166, -346, -346, -551, 235, -696, 198, 2,
	-689, -156, 292, 5, 10, -156, -431, 672, 672, -598,
	659, 166, 166, 166, 166, 278, 198, 364, -725, 2,
	205, 364, 628, -718, 2, -362, -734, 2, 2, 2,
	2, 2, 2, 2, -356, 235, -416, 383, -665, -666,
	-736, 556, -251, -607, 364, 47, -359, 235, 2, 614,
	-676, 364, -684, -361, 235, -356, 39, 667, 364, 2,
	-479, 2, 252, -644, 364, -552, -378, -356, -547, -378,
	510, -349, 39, -510, -356, 668, 672, -563, -563, -607,
	-251, 205, 667, -264, 628, 628, 278, -559, 672, -558,
	243, -608, -607, -157, -607, 205, 278, -607, -665, -339,
	2, -356, 2, -301, 672, -329, -278, -453, -597, -454,
	-453, -279, -278, -281, 198, 438, 597, 348, 515, 284,
	-486, -485, 29, -513, -490, 192, 347, -513, -488, -515,
	657, 658, -589, -591, -436, 376, -272, -272, -272, -421,
	-542, -513, 426, 259, -596, -726, -570, -568, -568, -354,
	-598, 568, -513, -513, -513, -513, -513, -513, -513, -513,
	-513, -513, -513, -513, -513, -513, -513, -513, -513, -513,
	-513, -513, -513, -513, -513, -513, -513, -513, -513, -513,
	-513, -513, -513, -513, -513, -513, -513, -513, -513, 302,
	239, 517, 55, 243, -513, 572, -513, -513, -513, -513,
	340, 364, 372, 583, 183, 593, 150, 376, -753, 550,
	43, -520, -273, -441, 667, -534, 36, 528, 29, -527,
	667, 2, -508, -513, -509, -385, -383, -325, 657, 658,
	659, 660, 661, 662, 647, 648, 649, 14, 15, 16,
	652, 656, 654, 655, 196, 103, 651, 317, 485, 93,
	186, 187, 188, 189, 282, 283, 17, 18, 19, 35,
	41, 650, -438, -437, -437, 668, 612, 29, 150, 659,
	2, 668, 672, 39, 668, -513, -438, -526, -522, -437,
	-533, -532, 625, -474, -475, 633, 326, 132, 233, 324,
	-476, 499, -592, 8, -598, 659, -651, 191, 224, 667,
	668, 2, 668, 2, 668, -513, 2, 668, -513, 2,
	668, -513, 2, 668, -513, 2, 668, 2, 668, 2,
	-513, -513, -513, -513, -513, -513, -513, -437, 8, -592,
	667, -592, -592, -592, 568, 568, -592, -592, -592, -584,
	413, 414, 415, 416, 304, 305, 306, 307, 417, 418,
	419, 420, 332, 333, 334, 335, 328, 329, 330, 331,
	336, 337, 338, 339, 215, 216, 217, 218, 211, 212,
	213, 214, -584, -468, 2, -586, -437, 4, 633, 326,
	132, 233, 324, 499, 5, -468, 2, -469, 2, -513,
	-437, -470, -514, -515, 657, 658, 650, -384, -471, 2,
	-513, -438, -513, 62, 295, 574, -472, -513, 205, -437,
	-437, 2, -437, 2, -516, 2, -648, 39, -495, -325,
	-437, -427, 672, 205, 39, -615, 4, -614, 45, 67,
	109, 138, 145, 178, 241, 262, 272, 298, 400, 472,
	473, 501, 532, 547, 579, 623, 511, -427, -427, 667,
	668, 672, -467, 228, 320, 315, 271, -467, -546, -466,
	279, -464, 393, -464, -464, -540, -340, 665, 674, -598,
	-540, -537, -536, 39, -349, 390, -540, -540, 669, 668,
	-539, -538, 39, -349, 666, -663, 667, 670, 670, 670,
	670, 670, -356, 667, -437, -598, 669, 537, 2, 668,
	273, 273, 273, 273, 273, 383, 484, 668, 572, -671,
	-365, -371, 504, 557, 208, -431, 672, -431, -424, 99,
	-724, 628, -605, -130, 385, 668, 672, -426, 38, 665,
	669, -592, 2, 2, -475, 667, 205, -671, -371, 557,
	504, 208, 2, -675, 552, -425, -605, 572, -723, -724,
	-707, 668, -709, -717, -702, -711, 243, 392, 261, 612,
	-599, -568, 4, -610, -325, 2, -434, -362, -301, 166,
	-435, -433, -301, 672, 166, -339, -360, -365, -325, -368,
	-371, -325, -603, -605, -301, -361, -726, 668, 576, -500,
	-386, 438, 527, 461, 505, 552, 9, 9, 672, -598,
	-243, 493, 348, -338, -338, -338, -338, 463, -356, 198,
	-607, -156, -250, 387, -249, -325, 5, -251, -251, -251,
	-251, 2, 2, 2, 2, -463, -356, -339, -381, -356,
	-367, 243, 29, -686, 669, -605, -605, -371, -372, -370,
	-325, -365, -463, -339, -463, -339, -463, -339, -463, -463,
	-160, -160, -513, -513, 535, 2, 507, 198, 198, 669,
	-463, 669, 8, -417, 471, 5, -356, 205, 2, 100,
	-607, 2, 436, 129, 556, 403, 252, -356, -381, -356,
	-381, -339, 129, -339, 130, 129, -356, 4, 672, -727,
	101, 572, 84, 667, 494, -318, 310, 572, -504, 235,
	84, -622, 101, -342, -623, -325, 78, 592, 426, 202,
	164, -727, 101, 426, -727, 101, 2, 254, 101, 510,
	535, 667, 29, 65, -551, 44, 44, 29, -680, -681,
	296, 205, 634, 556, 252, 494, 572, 572, -551, -461,
	-568, 127, 321, 322, 65, -593, -593, 65, -593, -593,
	-593, 628, -593, 628, -359, -551, 494, 572, 572, -732,
	-716, 468, 510, 572, 494, 572, 145, 383, 372, 501,
	138, 272, 298, -535, -535, -325, 572, 448, 546, 448,
	546, 500, -309, -311, -174, 500, 546, 310, 572, 572,
	-174, 29, -224, 469, 136, -751, 649, 448, 296, -681,
	572, 205, 672, 44, 44, 29, -680, 205, 572, 622,
	-381, -340, 608, 46, 608, 46, 608, 572, 46, 494,
	572, 672, 46, -293, -292, 510, -295, -607, -294, 346,
	-290, -665, -665, -250, -424, 463, 463, 80, 572, 572,
	-16, 510, -677, -330, 114, 354, 314, 355, 105, 351,
	104, 350, 112, 352, 113, 353, 616, 368, 617, 369,
	69, 349, 325, 356, 531, 357, 620, 370, -331, -332,
	157, 405, 606, 129, -603, -16, -16, 510, 398, 460,
	166, -697, 243, 29, 243, -559, 243, -559, -373, -325,
	669, -513, -160, -513, -160, 50, 166, 39, 463, 166,
	2, 667, 289, 667, -390, 364, 205, -424, -560, 672,
	-356, 39, 166, -603, -460, -459, 364, -361, 235, 2,
	166, -747, -414, 364, 160, 667, 436, 2, 166, -341,
	235, -326, -325, -479, -303, 560, 166, -457, 604, -491,
	-160, 667, 136, 39, -491, -446, -447, -557, -448, -342,
	667, -349, -510, -131, -562, 668, 668, 668, -264, -415,
	-343, -342, 128, 440, 440, -257, 628, -156, -157, 668,
	672, -559, 243, -157, -607, -251, -251, -559, -559, -551,
	-454, -279, 384, 284, 515, -488, -489, -515, 483, 484,
	-489, 483, 484, 8, 9, 8, 9, -283, 519, 371,
	-433, 672, -288, 40, 146, 284, -356, -596, 634, 162,
	-513, -513, 572, -753, 550, -520, 162, -513, 340, 372,
	583, 183, 593, 150, 376, 205, 667, -514, -514, 668,
	-439, -513, -513, 666, 676, 668, 669, 668, -420, 672,
	-418, -513, -437, -437, 668, 669, -437, -424, 666, 666,
	672, 668, -531, -532, 155, -513, 572, 572, 572, 572,
	667, 668, 669, -656, 394, 667, 667, -513, 668, 668,
	668, 668, 39, 672, 672, 672, 668, 672, 672, 672,
	668, 668, 668, 672, -592, 668, 668, 668, 634, 634,
	668, 668, 668, 668, 672, 668, 672, 668, 205, 668,
	668, -477, 410, 668, 11, 12, 657, 658, 659, 660,
	196, 661, 662, 655, 656, 654, 647, 648, 649, 93,
	317, 485, 14, 15, 16, -384, 273, 243, -514, -514,
	-514, -514, 668, -518, -519, 205, 198, 39, -472, -472,
	-472, 668, 205, -437, 668, 668, 667, -649, 319, 364,
	668, 672, 668, -507, -506, 626, -556, -428, 2, -546,
	-351, -598, -507, -507, -437, -513, 279, 279, -465, 604,
	383, -467, -546, -537, -594, -512, -511, 200, 40, 146,
	358, 359, 360, 238, 201, -537, -349, -494, -537, -537,
	-598, -540, -349, -492, 667, -540, -536, 668, -664, -594,
	668, -429, -549, -643, -420, 669, -598, -261, -644, -225,
	5, 372, -225, -225, -225, -225, -356, -605, 572, 572,
	243, 243, 243, -431, -424, 26, -695, 628, 411, -568,
	665, 666, 8, -598, -592, -605, 205, 205, 243, 243,
	243, 383, -675, 205, -603, -301, 668, 672, -702, -711,
	-717, -711, 392, 2, -301, -434, -301, -301, -381, -382,
	-301, -301, -301, -458, 628, -595, -499, 590, 89, 438,
	568, -595, 126, 493, 536, -251, 556, 243, -251, 672,
	667, 649, 649, 671, 494, 479, -605, -325, 669, -463,
	-463, -463, 507, 507, -325, -325, 198, -424, -356, 2,
	-352, -598, -339, -356, -353, -381, 198, 198, -339, -339,
	-297, 460, 510, -342, -342, -356, -268, -267, -265, -325,
	5, -366, -325, 219, 449, -603, 364, -504, 235, -302,
	364, 235, -350, -568, 667, -481, 630, 284, 284, 604,
	-342, -350, 284, 235, -342, 235, -350, 2, -350, -678,
	438, 377, -513, -266, -265, 65, -397, 308, 436, 365,
	-298, 460, 510, 398, -160, -160, -160, 667, -726, 604,
	149, -356, -381, -356, -366, -603, -361, 510, 398, 460,
	361, -375, -593, -593, -593, -459, 510, 398, 460, -366,
	-603, -359, -325, -366, -603, 383, 372, 383, 138, 272,
	-603, -308, 235, -325, 448, -308, 235, 448, 448, 448,
	448, 219, 449, 494, -339, 448, 634, 49, -751, 572,
	205, -513, -513, -299, -160, -160, -160, 667, -340, -300,
	-484, 460, 5, 235, -342, 5, -342, 235, 5, -325,
	-342, -366, -603, -730, 25, 154, -342, 672, 288, 269,
	628, -688, 206, 491, 443, -296, 649, -251, -366, -603,
	-330, 405, -689, 372, 5, 10, 600, -339, -676, -346,
	494, 572, 572, -551, -693, -694, 221, 476, 494, 479,
	-156, -254, 628, -156, -248, 247, 659, -668, -607, -607,
	376, -325, -704, -705, -708, -709, -325, -388, -391, -389,
	-342, -505, -504, -626, -627, -622, 302, 257, 258, 592,
	271, 184, 101, -269, -270, 630, 628, 166, -379, -356,
	665, -251, -666, -561, 184, 502, -368, -369, 166, -414,
	364, -603, 614, 39, 166, 667, -567, -566, -325, 2,
	-360, 383, 364, -341, 235, -304, 156, -751, -339, -507,
	-428, -456, -497, 471, 383, -415, 609, -349, -456, -430,
	672, 205, 649, 669, -415, -555, 659, -131, -131, -251,
	667, -607, 668, 672, 669, 667, 649, 649, -259, 387,
	-258, 158, 286, 270, 521, 522, 523, 524, 148, 520,
	133, 345, 248, 562, 495, 613, -559, -607, -257, -157,
	-559, 243, 205, -84, 628, 597, -489, 384, 313, -542,
	-289, 636, -356, 671, -513, -513, 162, 162, -513, -514,
	-514, -513, 162, 205, 667, -513, -524, 34, 34, 668,
	672, -509, -513, -383, 668, 612, -420, -420, 668, 659,
	-598, 671, 668, -522, 159, -513, 566, 326, 233, 324,
	-476, 324, -476, -476, -592, 5, -598, 659, -657, -345,
	667, -325, 626, -419, 389, 668, -570, -568, -513, -513,
	-513, -513, -513, -592, 668, -573, -573, -588, -588, -513,
	-518, -513, -570, -568, -514, -514, -514, -514, -514, -514,
	-514, -514, -514, -514, -514, -514, -514, -514, -514, -514,
	-514, -514, -514, -514, 150, 364, 376, -514, -519, -518,
	-513, -513, -568, 668, 668, 668, -437, -130, 667, 319,
	-325, -450, 224, -513, -559, 672, -450, -450, 668, -546,
	-546, 667, -513, 279, 666, 672, 675, 649, 649, -494,
	669, -536, -492, -493, -496, -325, -537, 666, 668, 672,
	668, 672, -539, 668, -598, -507, -263, -262, 147, 58,
	116, 144, 372, 380, 204, 229, 435, 162, 199, 156,
	273, -695, -605, -605, 494, 494, 494, 386, 221, 5,
	8, 665, 666, 669, 668, -605, -605, 494, 494, 494,
	-669, 586, 494, 29, 205, -605, -709, -711, -711, -301,
	-301, 128, 348, -513, -240, 628, 630, -356, -156, -249,
	-250, -607, -607, 659, -366, -367, 659, -463, 5, -403,
	-402, 403, 376, -403, 483, 483, 572, 572, 668, 672,
	649, 65, 243, 166, 364, 606, 364, -623, 164, -628,
	-513, 667, 252, 667, 667, 2, -285, -286, -287, 154,
	510, 25, -728, 2, 604, 166, -301, 166, -301, 632,
	668, 672, -397, 667, 667, 572, 494, -318, 572, 628,
	-437, -513, -252, 136, -597, -682, 671, -682, 671, 494,
	572, 572, 494, 572, 572, 177, 262, 372, 364, -325,
	166, -325, 235, -751, -325, -682, -682, 243, 628, 182,
	182, 634, -308, -513, -513, 198, 572, 628, -437, 572,
	-572, 53, 27, 364, -360, -301, 166, 572, 572, 586,
	510, -292, -607, -156, -255, 158, 475, 148, 286, 248,
	50, 386, -689, -156, -689, -607, 372, -16, -366, -603,
	-361, 510, 398, 460, -675, -675, 221, -371, -697, -559,
	-256, 387, -255, -559, -254, 205, 269, -325, 628, 668,
	672, 136, 649, 2, 668, 668, 672, 672, -629, -302,
	-356, 667, -325, 252, 257, 258, -348, -326, 39, 380,
	380, 667, -356, -108, -109, 628, -110, 573, -558, 604,
	-506, -594, -347, -325, -445, 47, -359, 39, 166, -676,
	-361, -160, -361, -564, -565, 5, 668, 672, -569, 39,
	-356, 166, 383, 364, -305, 294, -751, -602, -644, -420,
	-456, -445, 366, 98, 668, -507, -447, -428, -513, 2,
	668, -607, -251, -264, -343, 2, -608, -607, -607, 672,
	667, 649, 649, 649, 649, 649, 649, 649, -257, -559,
	-257, -157, -160, 387, 384, 192, 290, -288, -340, -513,
	-513, 162, 34, 34, -513, -513, -524, 668, -513, -513,
	-437, 666, 5, -513, 668, 668, 8, -513, 668, 669,
	-658, -325, -513, 668, 65, 668, 668, 672, 672, 668,
	668, 668, 668, 668, 668, 668, -519, 205, 150, 376,
	667, 668, 668, -130, -521, 227, 65, -546, -521, -521,
	-465, -424, -546, -511, -340, 665, -340, 665, -598, 668,
	672, -568, -594, -549, 669, -262, 649, -607, -607, 2,
	2, 5, 5, 435, 364, 372, 5, -225, -695, -695,
	628, -371, -371, -371, 386, 666, 2, 665, -598, -371,
	-371, -371, 205, -671, -371, 557, 208, -605, 128, 198,
	232, 232, -251, -251, 668, -353, 556, 252, 667, 667,
	-342, -342, -267, -595, 556, 483, -308, 426, -504, 166,
	166, -630, 101, -632, 82, 184, 111, 364, 372, 592,
	426, 78, 136, 383, 445, -741, -742, -743, 39, 639,
	640, 668, -422, -543, -643, 667, -325, -422, -424, 364,
	543, 136, 383, 364, 136, 383, 622, 128, 2, 586,
	85, -342, -350, -265, -424, -424, -356, -366, -603, 174,
	668, 672, 649, 2, 659, 659, -366, -603, -361, -366,
	-603, -359, -325, 262, 166, 609, -308, 166, -308, 609,
	-308, 401, 182, 572, -160, -513, 174, 668, -340, 5,
	5, 166, -337, 82, -342, 5, -342, -360, 128, 649,
	649, 649, 649, 649, 31, -689, -249, 628, 494, 572,
	572, 383, 383, 386, -693, -694, -254, 672, 667, -254,
	-608, -156, 383, 2, 473, -708, -513, -513, -404, 254,
	-342, -627, -624, -625, 426, -505, -631, -633, 184, 426,
	-392, -422, 667, -341, 667, -325, 667, -160, 2, -268,
	667, -390, -110, 387, 9, 181, 666, 205, -603, -460,
	-160, -361, -414, -412, 628, -414, 668, 672, -325, 160,
	667, -482, 604, -340, -356, 166, -306, 293, -751, -602,
	-303, -487, -485, 151, 667, 383, -160, -420, 649, 668,
	128, 668, -258, -259, -607, -156, -607, -607, -607, -156,
	-607, -257, -559, -85, -86, 252, 257, 101, 408, -288,
	-513, -513, -513, 668, -420, -598, 659, -652, 403, 668,
	-542, -513, -513, -514, 205, 667, -524, 668, -653, 627,
	-513, -451, -452, -513, 481, 117, 225, -653, -653, 668,
	-594, -594, -496, -607, 2, 2, 372, 2, 2, 2,
	572, 572, 572, 665, 2, 205, 205, 205, -605, 205,
	205, 243, 243, -160, -356, -381, -437, -437, 243, 39,
	448, -504, -350, -350, -354, -347, 184, 235, 372, 622,
	-481, 284, 667, -514, 597, -356, 667, 2, 234, 234,
	31, 65, -744, 141, 256, 668, 672, -544, -336, -325,
	-513, -544, 668, 668, 372, 597, 372, 622, -513, 597,
	-568, 667, -301, -301, 668, 668, -513, 572, -597, 108,
	-595, 2, -682, -308, -424, -424, -682, -339, -513, 198,
	-513, 572, 5, -301, -354, -301, -301, -337, 586, -607,
	-513, 583, 183, -156, -156, 382, -366, -603, -361, -698,
	557, 504, 587, 496, 208, 482, -698, 198, -255, -256,
	-254, -607, -700, 511, -398, -399, 2, -629, 284, -347,
	284, 245, 165, 668, -422, 667, -422, 667, -424, -740,
	628, 668, -388, -269, -109, -672, -378, -414, 39, 348,
	128, 39, 5, -569, 667, -567, 667, -325, 383, 667,
	-340, -320, 99, -751, -602, -304, -456, 365, -424, 101,
	-487, -520, -251, 667, -251, 668, -257, 672, 29, 667,
	29, 667, 668, -420, 65, 672, 668, 668, -514, -524,
	668, -654, -655, -345, 672, 667, 667, 512, 666, 666,
	2, -605, -605, -605, 2, -605, -605, -605, -605, -605,
	494, 494, 668, 668, -308, 426, -325, -623, -632, -347,
	364, -270, 604, 628, -513, -514, -327, 667, -513, 667,
	667, 39, 136, 256, 142, 240, -503, -745, 110, 544,
	244, -543, -288, 668, -502, 604, 445, -514, -337, -422,
	667, 667, 667, 649, 205, -160, 667, -572, -301, -360,
	649, 572, 2, 205, -675, 668, -688, -710, -711, -269,
	667, -270, -393, 87, 102, 137, 234, 209, 253, 535,
	541, 29, -393, -502, 668, -422, 668, -422, 668, -394,
	383, 128, 348, 668, 39, -507, 39, -160, 128, -160,
	-564, 668, -422, -356, -422, 383, -310, -309, 303, -602,
	-305, 668, -350, -456, -608, -86, -424, -424, -659, 436,
	484, 226, -437, -421, 668, 672, 39, -452, 2, 2,
	2, -695, -695, -695, -371, -371, 448, -302, 166, 228,
	668, -634, 318, -325, 668, -460, -460, 39, 142, 240,
	-400, -396, 667, -289, -544, -270, 228, -356, -683, 604,
	668, -406, -405, -402, -408, -407, -402, -437, -595, 108,
	401, -437, -337, -156, -605, -605, 383, -690, 206, -712,
	-713, -715, 39, 289, 579, 627, -716, -394, -423, -545,
	-342, -503, -502, 668, -400, 668, 88, 128, -404, -160,
	-160, 2, -412, 668, 668, -482, 668, -356, -307, -609,
	448, 450, -751, -306, -507, 151, 668, 668, 668, 668,
	-660, -661, 55, 589, 118, -513, -660, -660, -655, -657,
	205, 205, 184, -501, 637, -635, -638, -637, 644, 518,
	206, 402, 668, 543, 621, 668, 668, -744, -424, -501,
	-414, -513, -502, 668, 672, 609, 668, 672, 609, 668,
	205, 668, -301, -695, -301, -698, -253, 628, 50, -722,
	-719, 54, 472, -715, -703, 5, -602, -319, -318, 668,
	672, -400, -503, -502, -270, -400, 425, 143, 154, -398,
	-740, -502, 667, -503, 667, -317, -316, -751, -588, -320,
	151, 365, 597, -251, -662, 164, -661, 422, 197, 483,
	422, 197, -662, -662, -605, -605, -347, -270, 60, -637,
	644, -638, 644, 597, 143, -507, 668, -634, -270, -405,
	243, -407, 205, 401, 205, 491, -689, 31, 45, -513,
	-270, -545, -270, -400, -503, -507, -270, 484, 484, 2,
	-269, -394, -503, -422, -400, -422, -313, -314, -315, -424,
	-310, 365, 597, 510, 118, 224, 567, 348, 34, 649,
	-636, 348, 468, 70, 510, -636, -635, 667, 667, -605,
	387, -721, -507, -270, -400, -483, 364, 622, -507, 2,
	-394, -400, 668, -270, 668, -604, 398, -307, 510, -446,
	483, 391, -661, -513, 24, 372, 136, -744, -437, -437,
	-301, -250, 667, -720, 159, -3, -719, -483, -507, -270,
	622, -483, -319, -270, -502, -507, -503, -312, -311, 500,
	-751, -317, -446, -507, 668, 668, -250, 673, -483, -507,
	-507, -503, -483, -400, -603, -313, -507, -395, -396, 572,
	668, -483, -483, -400, -270, -312, 667, -270, -507, -437,
	-507, -483, 668, -483, -395,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 44, 45,
	1786, 1788, 739, 740, 742, 743, 744, 746, 747, 749,
	751, 753, 754, 755, 757, 758, 760, 761, 762, 763,
	764, 766, 768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 865, 867,
	0, 1768, 1770, 1772, 1774, 0, 0, -2, -2, 0,
	0, -2, -2, -2, 47, 48, 50, 51, 0, -2,
	419, 421, 423, 425, 0, 457, 459, 460, 462, 464,
	465, 467, 469, 471, -2, 0, 660, 661, 663, 665,
	667, 669, -2, 0, 1337, 1339, 1341, 0, 853, 855,
	0, 1344, 1346, 1348, 0, 0, 877, 878, 0, 1889,
	-2, 869, 871, 873, 875, 960, 962, 964, 966, 968,
	970, 972, 974, 976, 978, 980, 981, 983, 985, 987,
	989, 991, 993, 994, 996, 998, 1000, 1001, 1003, 1004,
	1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024,
	1026, 1028, 1030, 1032, 1034, 1037, 1038, 1039, 1041, -2,
	0, -2, -2, 1782, 53, 55, 57, 59, 61, 63,
	65, 67, 69, 71, 73, 75, 77, 79, 895, 897,
	603, 605, 607, 609, 611, 614, 616, 618, 620, 1947,
	671, 673, 675, 677, 679, 681, 683, 685, 0, 0,
	-2, 1961, 0, 0, 0, 1132, 81, 82, 83, 84,
	85, 86, 87, 88, 89, 90, 150, 151, 152, 153,
	154, 155, 156, 157, 94, 95, 96, 98, 99, 100,
	101, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 147, 148, 92,
	121, 122, 123, 124, 125, 0, 0, 1920, 1922, 1924,
	1926, -2, 0, 0, 8, 12, 14, 16, 18, 20,
	22, 24, 26, 28, 30, 32, 36, 38, 40, 42,
	46, 1787, 1789, 741, 745, 748, 750, 752, 756, 759,
	765, 767, 769, 724, 725, 728, 2679, 2698, 2699, 2700,
	2703, 2704, 2705, 2706, 2707, 2708, 3245, 3326, 3327, 3328,
	3329, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739,
	2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749,
	2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759,
	2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769,
	2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779,
	2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789,
	2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799,
	2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809,
	2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819,
	2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829,
	2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839,
	2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849,
	2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859,
	2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869,
	2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879,
	2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889,
	2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899,
	2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909,
	2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919,
	2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929,
	2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939,
	2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949,
	2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959,
	2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969,
	2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979,
	2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989,
	2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999,
	3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009,
	3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019,
	3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029,
	3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039,
	3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049,
	3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059,
	3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069,
	3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079,
	3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089,
	3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099,
	3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109,
	3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119,
	3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129,
	3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139,
	3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149,
	3150, 3151, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178,
	3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188,
	3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198,
	3199, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208,
	3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218,
	3219, 3220, 3221, 3222, 3223, 3224, 726, 727, 1533, 0,
	811, 809, 2662, 812, 2994, 814, 816, 654, 655, 656,
	657, 658, 659, 0, 846, 3099, 827, 1959, 847, 849,
	850, 851, 852, 806, 804, 0, 851, 846, 2736, 3099,
	844, 1766, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 670, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 1596, 1597, 1598,
	1751, 1752, 3050, 1797, 0, 287, 866, -2, -2, 3209,
	-2, 914, 915, -2, -2, 929, 933, 924, 3214, 0,
	3053, 3035, -2, 936, 1769, 1771, 1773, 1042, 1043, 1044,
	2683, 1048, 1046, 1058, 1059, 1062, 0, 1079, -2, 0,
	2732, 3017, -2, -2, 1080, 1081, -2, -2, -2, -2,
	1060, 1061, 0, 0, 0, 0, 0, 2097, 2098, 2666,
	0, 1036, 1087, 0, 0, 0, 0, -2, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	1203, 0, 0, 0, -2, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, -2, 0, 1306, 0, 0, 1090, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 0, 1176, 1201, 1202, 1212, 1799,
	1791, 1794, 1792, 1793, 49, 52, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 297,
	-2, -2, -2, -2, 0, 0, 3105, 2795, 2630, 2700,
	2633, 2628, 420, 422, 424, 426, 427, 0, 0, 0,
	0, 0, 0, 0, 458, 461, 463, 466, 468, 470,
	-2, 0, 472, 0, 0, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 649, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 1403, 1404, 1668, 0, 0,
	0, -2, 662, 664, 666, 668, 729, 730, 0, 1948,
	1948, 737, 738, -2, -2, 0, 0, 0, 0, 381,
	372, 1338, 1340, 1342, 1343, 0, 0, 0, 0, 0,
	854, 856, 0, 0, 3099, 347, 1345, 1347, 1349, 1350,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 870,
	872, 874, 876, 961, 963, 965, 967, 969, 971, 973,
	975, 977, 979, 982, 984, 986, 988, 990, 992, 995,
	997, 999, 1002, 1005, 1007, 1009, 1011, 1013, 1015, 1017,
	1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1040,
	0, 1576, 1949, 1799, 1776, 1777, 1778, 1783, 1785, 1779,
	1780, 1781, 54, 56, 58, 60, 62, 64, 66, 68,
	70, 72, 74, 76, 78, 80, 896, 898, 604, 606,
	608, 610, 612, 615, 617, 619, 621, -2, 1918, 1919,
	672, 674, 676, 678, 680, 682, 684, 686, 857, 0,
	860, 0, 1092, 859, -2, 0, 1953, 1953, 1953, 0,
	0, 1919, 1917, 0, 0, 0, 863, 864, 940, 941,
	2240, 0, 0, 0, 0, 0, 0, 0, 0, 2501,
	2329, 0, 942, -2, 2362, 2364, 3183, 2966, 3209, 2500,
	-2, 2366, 2367, 2368, 2369, 2370, 0, 2372, 2373, 2374,
	2375, 2376, 2377, 0, 2379, 0, 2384, 2385, 2386, 0,
	3190, 2605, 2693, -2, 0, 0, 3197, 2689, 0, 2467,
	2402, -2, -2, 2717, 2696, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, -2, -2, 3228, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 0, 3171, 3191, 3192,
	3198, 3200, 3193, 3180, 2427, 2811, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 2199,
	2208, -2, -2, -2, -2, -2, -2, -2, 3184, 3185,
	3203, 3206, 3213, 3218, 3219, 3189, 3199, 3227, 3229, 3230,
	3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240,
	3241, 3242, 3243, 3244, 2200, -2, -2, -2, -2, 0,
	1936, 3010, 1939, 2045, 1937, 1921, 1923, 0, 1925, 0,
	0, 0, 1930, 1956, 1954, 0, 2005, 1934, 1935, 2028,
	2028, 2060, 0, 2033, 0, 2060, 1948, 2091, 0, 2039,
	3040, 2403, 2404, 0, 2700, 2694, -2, -2, 3225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	807, 0, 813, 815, 0, 0, 0, 0, 846, 845,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 3191, 544, 545, 548, 0, 586, 587, 588, 589,
	590, 3191, 0, 0, 0, 0, 596, 597, 598, 599,
	600, 601, 602, 257, 3191, 691, 723, 719, 0, 257,
	3191, 694, 722, 257, 3191, 697, 721, 0, 700, 1666,
	257, 3191, 703, 2658, 257, 3191, 706, 711, 707, 3191,
	709, 257, 3191, 715, 2673, 2671, 716, 0, 718, 277,
	273, 274, 275, 276, 1762, 1763, 1764, 1765, 0, 1796,
	1667, 868, 0, 894, 0, 912, 913, 3179, -2, 0,
	3064, 917, 918, -2, 920, 1800, 1804, 1805, 1806, 1807,
	1808, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	907, 908, 927, 928, 934, 937, 0, 1051, 1047, 1063,
	0, 1078, 0, 1079, 1079, 2647, 2638, 2639, 0, 0,
	1079, 1079, 0, 0, 1082, 1083, 1084, 1085, 1086, 799,
	801, 2501, 1088, 1089, 0, 0, 1107, 1108, 1109, 0,
	0, 398, -2, -2, -2, -2, 1118, 384, 385, 2713,
	2714, 2722, 2723, 2724, 2725, 3226, 3228, 0, 1126, 1129,
	-2, 0, 0, 0, 0, 1136, 0, 1141, 1142, 1143,
	0, -2, 0, 1150, 1152, 1336, 1155, 0, 1336, 0,
	1157, 0, 1161, 0, 1164, 1165, 0, 1167, 0, 1169,
	-2, -2, -2, 1177, 1178, -2, 1183, -2, 0, 1187,
	0, -2, 0, 1190, 0, 1193, -2, 0, 1203, 1199,
	1200, 0, 0, 0, 0, 1220, 1221, 0, 1225, 0,
	1234, 0, 1237, 1238, 1239, 0, 0, 1244, 1245, 0,
	1247, 1248, 1249, 1251, 1252, 1253, 0, 3138, 3061, 2795,
	2874, 3059, 2844, 0, 1264, -2, 2832, 1274, 1276, 0,
	-2, 0, 1292, 0, 1296, 0, 0, 1305, 0, 0,
	0, 1091, 0, 1100, 1101, 1102, 1790, -2, 91, 0,
	3191, 2091, 93, 0, 2652, 2726, 2727, 2728, 2729, 2730,
	3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255,
	3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265,
	3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275,
	3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285,
	3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295,
	3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305,
	3306, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315,
	3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323, 3324, 3325,
	97, 0, 3191, 102, 0, 3191, 0, -2, 126, 563,
	127, 0, 149, 0, 177, -2, -2, -2, 158, 0,
	3191, 0, 2627, -2, 0, 269, -2, 0, 794, 373,
	374, 0, 785, 899, 0, 0, 0, 1375, -2, 0,
	1589, 1591, 1591, 0, -2, 0, 0, 0, 1326, 2624,
	2629, 1327, 1328, 2648, 1329, 2634, 0, 428, 429, 430,
	431, 432, 433, 3191, 435, 436, 0, 438, 439, 3191,
	441, 442, 0, 444, 0, 446, 0, 312, 329, 327,
	3191, 0, 473, 475, 3191, 477, 480, 0, 584, 0,
	581, 0, 565, 566, 0, 568, 0, 0, 0, 573,
	574, 576, 577, 578, 579, 580, 0, 625, 623, 2663,
	645, 398, 0, -2, 3191, 0, 1372, 0, 0, 1641,
	-2, 0, 1582, -2, 0, 1649, 3191, 1644, 0, -2,
	0, 1946, 3191, 1817, 1407, 1408, 1409, 1410, 2105, 651,
	0, 1853, 0, 1855, 0, 1875, 2099, 2028, 0, 0,
	2104, 0, -2, 782, 2682, -2, 732, 0, 733, 0,
	-2, 0, 398, 0, 0, 1353, 1355, 1356, 1358, 1359,
	1362, 1363, 1364, 1365, 0, 1367, 2077, 348, 350, 0,
	0, 0, 0, 1352, 1753, 1754, 1755, 1756, 1757, 1758,
	1759, 1760, 1761, 0, 645, 879, 0, 0, 257, 2095,
	1775, 0, -2, 0, 858, 0, 862, 1978, 1904, 1901,
	0, 1975, 1976, 1905, 0, 0, 0, 1912, 0, 1951,
	1952, 0, 0, 0, 1891, 1892, 0, 0, 0, 0,
	0, 0, 2506, 2507, 2508, 2509, 2522, 2510, 2511, 2521,
	2519, 2520, 2512, 2513, 2518, 2532, 2533, 2523, 2524, 2514,
	2527, 2525, 2526, 2528, 2529, 2530, 2531, 0, 0, 2537,
	2538, 0, 2515, 2516, 2517, 2546, 0, 0, 2547, 0,
	2549, 0, 2539, 2534, 2535, 2536, 0, 2308, 2310, 2613,
	0, 0, 0, 2545, 2540, 2541, 2245, 2246, 2247, 2248,
	2249, 2283, 2287, 2288, 0, 0, 2363, 2610, 2609, 2365,
	0, 0, 2561, 0, 2378, -2, 0, 2501, 2556, 0,
	0, 2387, 2388, 2389, 0, 0, 2561, 0, 0, 2604,
	2399, 2400, 2237, 0, 0, 2469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2186, 2185, 0, 2187, 0, 2188,
	2189, 0, -2, 0, 0, 2209, 0, 0, 0, 0,
	2213, 0, 0, 0, 0, 0, 0, 0, 2585, -2,
	0, 0, 0, 0, 2201, 0, 0, 1938, 0, 0,
	0, 2009, 2614, 2618, 2619, 2009, 2009, 0, 0, 2562,
	2088, 2088, 0, 0, 2083, 2083, 2083, 2081, 2060, 0,
	2060, 2070, 0, 2060, 2060, 0, -2, 2033, 0, 0,
	2074, 0, 2054, 770, 772, 774, 776, 777, 778, 780,
	2092, 2093, 0, 0, 0, 0, 2701, 0, 0, 0,
	0, 0, 0, 2685, 0, 0, 2657, 453, 454, 0,
	0, 0, 3118, 3053, 0, -2, -2, -2, -2, 3061,
	0, 0, 2795, 2832, 2844, 818, 848, 0, 1948, 0,
	2564, 2120, 2124, 0, 2126, 2127, 2128, 0, 0, 2121,
	2220, 2718, 2719, 2720, 2180, 2181, 2182, 2183, 2184, 2192,
	2179, 2179, 2179, 2190, -2, 2197, 2219, 2211, 2219, 2215,
	2163, 2164, 2165, 2202, 2203, 2204, 2205, 0, 3118, 3053,
	0, -2, 0, 830, 0, 0, 0, 1886, 339, 340,
	542, 0, 255, 256, 0, 547, 0, 585, 0, 592,
	593, 594, 0, 687, 0, 0, 257, 3191, 692, 0,
	695, 0, 257, 3191, 2622, 701, 0, 704, 0, 0,
	0, 713, 0, 0, 0, 0, 0, 257, 1888, 0,
	0, 0, 0, -2, 922, 930, 931, 932, 0, 1802,
	0, 1809, 951, 952, 953, 1811, 1812, 0, 1814, 925,
	954, 955, 956, 957, 958, 959, 0, 2636, 2637, 2642,
	2643, 0, 0, 923, 944, 926, 0, 938, 1054, 1049,
	1050, 1064, 1065, 0, 0, 2640, 2641, 0, 0, 1070,
	1071, 0, 0, 0, 1110, 348, 0, 0, 1113, 0,
	398, 398, 398, 398, 1124, 1125, 1127, 1128, -2, -2,
	-2, -2, 1130, 1131, 1231, 0, 0, 0, 1230, 1744,
	0, 1146, 1149, 1153, 0, 1309, 3035, 3053, 3118, 1334,
	1154, 1231, 2795, 1231, 2795, 1231, 2795, 1231, 1231, 1171,
	1215, 1227, 1182, 1189, 0, 0, 0, 1184, 1188, 1191,
	1194, 0, 1196, 1204, 0, -2, 0, 1207, 0, 1209,
	0, 1211, 1231, 1223, 1232, 1235, 0, 1243, 1246, 0,
	1254, 1255, 1256, 2667, 1257, 2680, 0, 0, 1260, 1261,
	1262, 1263, -2, 0, 1267, 1268, 0, 0, 1283, 1288,
	1289, 1285, 0, 0, 0, 0, 0, 0, 1299, 1300,
	0, 0, 0, 1308, 0, 1103, 159, 1748, 0, 0,
	210, 0, 1748, 1748, 0, 0, 0, 0, 238, 0,
	0, 1441, 0, 0, 0, 0, 177, 195, 206, 171,
	172, 173, 0, 0, 0, 0, 0, 0, 103, 1555,
	0, 1558, 0, 0, 0, 0, 0, 0, 0, 1571,
	1574, 0, 0, 0, 0, 557, 0, 531, 0, 0,
	554, 562, 0, 0, 518, 519, 520, 521, 0, 0,
	526, 0, 0, 0, 0, 532, 0, 129, 130, 0,
	0, 135, 136, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 1850, 0, 185, 177, 0, 0, 176, 178,
	161, 0, 0, 177, 181, 196, 208, 0, 244, 0,
	184, 246, 1438, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 279, 0, 0, 314, 792, 0, 795, 0,
	784, 786, 645, 645, 0, 0, 0, 0, 902, 905,
	906, 0, 0, 903, 904, 0, 0, 1583, 0, 0,
	0, 1945, 0, 0, 0, 0, 3191, 1746, 0, 1729,
	0, 2077, 2893, -2, -2, 2077, 1325, 0, 0, 2701,
	2632, 0, 0, 0, 0, 445, 0, 0, 0, 338,
	0, 0, 0, 0, 482, 487, 0, 575, 564, 567,
	569, 570, 571, 613, 1502, 3191, 0, 0, 649, 640,
	0, 644, 0, 648, 0, 0, 1554, 3191, 1552, 0,
	1580, 0, 1640, 1533, 3191, 2665, 0, 0, 0, 1650,
	2710, 1663, 1667, 1838, 0, 653, 0, 1856, 1858, 0,
	0, 2100, 0, 2102, 2028, 1948, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 1366, 354, 0, 2076,
	0, 0, 386, 2077, 348, 0, 1351, 398, 398, 2077,
	881, 2077, 883, 1575, 0, 1784, 1978, 1904, 861, 1895,
	1977, 1896, 1903, 1906, 0, 0, 1908, 0, 1910, 0,
	1973, 1974, 1981, 1982, 0, 1992, 1993, 1985, 0, -2,
	0, 0, 1988, 1989, 1914, 0, 1931, 1932, 1933, 1962,
	1965, 1682, 0, 3328, 910, 0, 2241, 2115, 2242, 2243,
	2651, 0, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, -2, -2, -2, -2, -2, -2, -2, -2,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, -2, -2, -2, 2284, 2285, 2286, -2, 2548,
	2550, 0, 2613, 0, -2, 0, -2, -2, -2, -2,
	2305, 0, 2307, 2312, 2314, 2316, 0, 0, 0, 0,
	2612, 2326, 2596, 2597, 0, 0, 2503, 2504, 2505, 2311,
	0, 2330, 2611, 2608, 0, 0, 2542, 0, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 0, 2560, 1961, 2391, 0, 0, 0, 0,
	2398, 2383, 2558, 0, 2557, 0, 0, 0, 2568, 0,
	2603, 2599, 0, 2649, 2236, 2223, 2224, 2225, 2226, 2227,
	2228, 2238, 0, 2646, 2686, 2692, 2477, 0, 0, 0,
	2428, 2429, 2430, 2431, 2432, 0, 2434, 2435, 0, 2437,
	2438, 0, 2440, 2441, 0, 2443, 2444, 2445, 2446, 2447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 0, 0, 2449, 0, 2571, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 2451, 0, 2453, 2562,
	2582, 0, 0, 2331, 0, 0, 0, 0, 0, 2456,
	2562, 2590, 0, 0, 0, 0, 0, 2562, 0, 2595,
	0, 2463, 0, 2465, 1133, 1134, 1940, 0, 0, 2046,
	0, 2110, 0, 0, 0, 2617, 2620, 2621, 3152, 3153,
	3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163,
	3164, 3165, 3166, 3167, 3168, 3169, 3170, 2110, 2110, 0,
	2004, 0, 0, 2084, 2085, 2086, 2087, 0, 0, 2088,
	0, 2078, 2082, 2079, 2080, 2070, 2025, 0, 0, 2653,
	2070, 2031, 2069, 0, 2045, 2059, 2070, 2070, 0, -2,
	2035, 2073, 0, 2048, 2060, 0, 0, 771, 773, 775,
	779, 781, 0, 0, 1961, -2, 0, -2, 400, 1532,
	0, 0, 0, 0, 0, 0, 808, 810, 0, 0,
	710, 0, 0, 0, 0, 1315, 0, 1317, 1318, 0,
	1320, 0, 1732, 802, 0, 805, 0, 2111, 2114, 0,
	0, 2125, 2129, 2130, 2221, 0, 0, 0, 0, 0,
	0, 0, 843, 0, 3099, 0, 841, 0, 546, 257,
	0, 550, 551, 0, 0, 499, 500, 501, 502, 504,
	2721, 505, -2, -2, 0, 595, 257, 720, 689, 0,
	257, 257, 698, 0, 0, 257, 712, 257, 708, 2674,
	257, 2672, 278, 717, 1887, 290, 0, 909, 0, 1801,
	1810, 0, 948, 0, 950, 0, 2644, 2645, 0, 939,
	0, 1052, 0, 1066, 1067, 1068, 1069, 0, 398, 0,
	0, 398, 396, 2969, 394, 391, 393, 1114, 1115, 1116,
	1117, 1173, 1217, 1229, 1287, 1135, 1137, 1138, 1139, 0,
	1144, 0, 0, 0, 0, 1335, 1330, 1331, 1332, 2675,
	2671, 1333, 1156, 1231, 1159, 1231, 1162, 1231, 1166, 1168,
	1186, 1360, 1361, 1192, 1205, 1198, 1206, 0, 0, 0,
	1219, 0, 0, 1241, 0, 1250, 1258, 0, 1266, -2,
	1271, 1272, 0, 0, 0, 0, 0, 0, 0, 1293,
	1294, 1295, 1297, 1302, 1301, 0, 1307, 1104, 0, 0,
	0, 0, 1747, 0, 0, 1692, 0, 0, 214, 3191,
	0, 259, 0, 0, 1495, 2659, 0, 1483, 0, 0,
	2819, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 174,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 1556,
	1557, 1559, 1566, 1568, 0, 1562, 1563, 0, 1565, 1567,
	1569, 0, 1572, 0, 0, 0, 0, 0, 0, 553,
	555, 556, 531, 0, 0, 0, 0, 0, 0, 0,
	524, 525, 527, 528, 529, 530, 0, 0, 0, 0,
	0, 0, 137, 141, 1592, 3059, 0, 0, 0, 0,
	1593, 1594, 1595, 1826, 1827, 0, 1849, 1850, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 183,
	0, 2626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 315, 0, 796, 0, 797, 0,
	787, 398, 789, 790, 791, 900, 901, 0, 0, 0,
	1585, 0, 1636, 1634, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	0, 0, 0, 0, -2, 1587, 1588, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 389, 2625, 2635,
	0, 434, 437, 440, 443, 296, 0, 0, 0, 0,
	479, 489, 0, 1413, 1385, 0, 0, 624, 398, 645,
	647, 0, 2678, 1370, 1550, 1553, 0, 1533, 3191, 1604,
	0, 0, 0, 0, 0, 1656, 0, 1648, 0, 0,
	3191, 2654, 2709, 2710, 1840, 1850, 0, 2110, 0, 1873,
	1859, 0, 0, 0, 1873, 1877, 1878, 1880, 1881, 0,
	0, 2101, 2107, 731, 783, 1948, 1948, 398, 0, 0,
	1862, 1864, 0, 0, 0, 341, 0, 351, 2077, 349,
	0, 354, 0, 2077, 348, 0, 639, 880, 885, 2096,
	1899, 1900, 1902, 0, 1911, 0, 0, 1987, -2, -2,
	1986, 1990, 1991, -2, -2, -2, -2, 1907, 0, 1916,
	1913, 0, 1972, 1680, 1681, 0, 0, 911, 0, 0,
	-2, -2, 0, 0, 0, 2327, 0, -2, 2306, 2309,
	2313, 2315, 2317, 0, 0, 0, 0, 0, 0, 2551,
	0, 2553, 2328, 2606, 2609, 2544, 0, 2499, 0, 0,
	1960, 1961, 1961, 0, 2397, 0, 2559, 0, 2566, 2567,
	0, 2390, 0, 2600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2401, 0, 0, 0, 0, 2433, 2436,
	2439, 2442, 0, 0, 0, 0, 2422, 0, 0, 0,
	2426, 2191, 2177, 0, 0, 2194, 2198, 2219, 2217, 2218,
	2212, 2219, 2216, 2167, 0, 2166, 0, 2448, 0, 2450,
	2452, 0, 0, 2454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2334, 2335,
	2336, 2356, 2455, 2588, 2589, 0, 0, 0, 0, 0,
	0, 2461, 0, 2594, 2462, 2464, 1948, 0, 1941, 0,
	2044, 0, 2006, 1995, 2109, 0, 2615, 2077, 2008, 2010,
	2616, 2656, 1995, 1995, 0, 2563, 0, 0, 2064, 0,
	0, 0, 2066, 2029, 0, 0, 2023, 0, 2014, 2015,
	2016, 2017, 2018, 2019, 2020, 2030, 2045, 2068, 2032, 2036,
	2686, 0, 2048, 2072, 0, 2070, 0, 2055, 0, 2057,
	2094, 0, 2041, 2074, 0, 0, 2702, 2110, 0, 447,
	455, 456, 448, 449, 450, 451, 0, 1732, 0, 0,
	0, 0, 0, 1316, 1319, 0, 826, 0, 0, 2565,
	0, 2116, 0, 2122, 0, 828, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 543, 549, 0, 0, 498,
	0, 497, 503, 591, 688, 257, 693, 696, 2623, 257,
	702, 705, 714, 286, 0, 893, -2, 946, 947, 949,
	0, 945, 1057, 1053, 800, 1105, 0, 0, 1112, 0,
	0, 0, 0, 0, 0, 1744, 1741, 1148, 0, 1158,
	1160, 1163, 1208, 1210, 1231, 1222, 0, 1242, 1259, 1270,
	1277, 2655, 1278, 1435, 0, 1435, 0, 0, 1298, 1304,
	211, 1748, 0, 0, 0, 1688, 0, 1396, 0, 1391,
	1392, 1690, 2670, 1694, 1700, 1703, 0, 216, 3191, 228,
	0, 3191, 0, 1457, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 3191, 257, 3191, 257, 232, 234, 237,
	0, 243, 239, 0, 1393, 0, 1445, 0, 0, 1448,
	160, 1748, 0, 0, 163, 167, 179, 0, 0, 0,
	193, 0, 0, 0, 1705, 1709, 1717, 0, 0, 0,
	1560, 1561, 1564, 1570, 1573, 104, 0, 0, 0, 1713,
	1715, 1721, 558, 559, 560, 0, 0, 0, 522, 523,
	128, 131, 3191, 2668, 0, 133, 3191, 0, 142, 1850,
	0, 0, 0, 0, 1687, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 165, 169, 180, 0, 1723, 162,
	182, 0, 272, 0, 0, 262, 257, 3191, 0, 264,
	0, 265, 266, 280, 0, 0, 0, 0, 0, 0,
	0, 320, 0, 0, 0, 793, 0, 788, 1373, 1374,
	1635, 0, 1578, 1579, 324, 325, 0, 1590, 1584, 0,
	0, 0, 0, 0, 1725, 1726, 0, 0, 0, 1746,
	2077, 292, 0, 2077, 300, 0, 2631, 0, 328, 337,
	0, 476, 0, 488, 490, 492, 0, 0, 0, 1412,
	1513, 1414, 1416, 1417, 1418, 259, 0, 0, 0, 1483,
	2880, 2710, 0, 0, 1380, 0, 0, 0, 630, 626,
	0, 637, 641, 642, 0, 0, -2, 0, 0, 0,
	0, -2, 0, 0, 0, 1652, 0, 1655, 0, 1647,
	0, 0, 0, 0, 3191, 1842, 1850, 0, 1946, 1961,
	652, 1851, 1873, 0, 0, 0, 1861, 1857, 1854, 2110,
	0, 0, 0, 0, 0, 2103, 2106, 734, 735, 375,
	0, 398, 0, 0, 0, 0, 0, 0, 352, 0,
	355, 0, 0, 0, 360, 361, 362, 363, 364, 365,
	0, 0, 0, 0, 370, 371, 354, 387, 343, 2077,
	354, 0, 0, 882, 0, 1909, 0, 1984, 1915, 1966,
	1967, 0, 1682, 0, 2244, 2290, 0, 0, -2, 0,
	0, 2294, 0, 0, 0, -2, 0, 0, 0, 2552,
	2554, 0, 2608, 2543, 2392, 0, 0, 0, 2396, 2380,
	2381, 0, 2502, 2569, 2598, 2602, 0, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 0, 2650, 2687, 2691, 2475, 2476,
	2480, 2664, 0, 0, 0, 2405, 0, 0, 0, 0,
	0, 0, 0, 0, 2193, 2210, 2214, 0, 0, 2570,
	2581, 2583, 2332, 2333, 2337, 2338, 2339, 2340, 2341, 2342,
	2343, 2344, 2345, 2346, -2, -2, -2, 2350, 2351, 2352,
	-2, -2, -2, 2357, 0, 0, 0, 2584, 2586, 2587,
	2591, 2592, 0, 2458, 2459, 2460, 2593, 0, 1948, 1942,
	2047, 2003, 0, 2108, 2007, 0, 2003, 2003, 1955, 2062,
	0, 0, 2090, 0, 2026, 0, 2027, 0, 0, 2067,
	0, 2034, 2071, 0, 2050, 2052, 2037, 2038, 2056, 0,
	2040, 0, 2043, 2392, -2, 399, 401, 403, 0, 406,
	407, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 817, 1732, 1732, 0, 0, 0, 819, 0, 803,
	0, 0, 2118, 0, 2222, 832, 834, 0, 0, 0,
	0, 3118, 3053, 0, 0, 831, 552, 495, 496, 690,
	699, 288, 0, 2075, 0, 0, 0, 398, 398, 395,
	0, 390, 392, 1140, 1743, 1145, 2676, 1218, 1240, 1279,
	1434, 0, 0, 1281, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 258, 0, 1494, 0, 1455,
	0, 0, 1482, 0, 0, 1500, 218, 219, 220, 0,
	0, 0, 0, 230, 0, 0, 226, 0, 236, 242,
	241, 0, 1442, 0, 0, 0, 0, 1693, 0, 0,
	0, 190, 191, 192, 0, 197, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	0, 139, 0, 0, 0, 144, 145, 0, 0, 1832,
	1833, 0, 1820, 187, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 1679, 282, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 304, 306, 0, 0,
	0, 0, 326, 0, 1577, 1638, 1639, 1586, 1706, 1710,
	1718, 0, 0, 0, 0, 0, 851, 1745, 0, 300,
	298, 0, 301, 300, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 1383, 1501, 0, 0, 1503, 1419,
	1423, 0, 0, 2710, 0, 0, 0, 2661, 0, 1381,
	0, 0, 1502, 622, 628, 0, 631, 0, 634, 0,
	636, 0, 646, 2660, 0, 0, 1554, 0, 0, 1581,
	1533, 1607, 1533, 0, 1651, 1653, 1645, 0, 1657, 0,
	1665, 0, 0, 0, 1844, 1850, 0, 1837, 1838, 1980,
	1852, 1871, -2, 0, 0, 1961, 1879, 1876, 1882, 1883,
	0, 0, 378, 0, 1863, 1865, 0, 1354, 1357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 354,
	345, 2077, 382, 0, 1983, 1970, 1971, 1968, 1682, 2292,
	2296, 0, 0, 0, 2298, -2, 0, 2320, -2, -2,
	2555, 2607, 2371, 1961, 2393, 2395, 2382, 2601, 2239, 0,
	2482, 2479, 0, 2466, 0, 2417, 2418, 0, 0, 2421,
	2423, 2424, 2425, 2178, 2169, 2168, 2580, 0, 0, 0,
	0, 2457, 1943, 0, 2471, 0, 0, 2011, 2471, 2471,
	2063, 0, 2065, 2024, 2012, 0, 2021, 0, 2687, 2049,
	0, 2053, 2058, 2042, 0, 404, 0, 408, 409, 410,
	411, 413, 0, 0, 0, 0, 0, 452, 820, 821,
	0, 0, 0, 0, 1731, 2112, 2117, 0, 2123, 0,
	0, 0, 0, 0, 0, 0, 0, 842, 289, 0,
	1055, 1056, 1106, 1111, 397, 1433, 0, 0, 0, 0,
	212, 213, 1397, 1395, 1697, 1701, 1698, 0, 215, 0,
	0, 1456, 0, 1459, 0, 0, 0, 0, 1466, 1483,
	0, 0, 0, 0, 0, 0, 1485, 0, 1484, 0,
	0, 1517, 0, 1670, 1677, 0, -2, 0, 0, 0,
	222, 248, 0, 0, 0, 0, 251, 1749, 224, 0,
	0, 257, 257, 1394, 0, 0, 1689, 1691, 1704, 0,
	0, 0, 0, 200, 0, 0, 1707, 1711, 1719, 1714,
	1716, 1722, 561, 517, 0, 0, 134, 143, 1823, 0,
	0, 0, 1834, 0, 186, 0, 0, 0, 1724, 270,
	271, 0, 257, 0, 257, 263, 257, 1679, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 1727, 1728, 291, 0, 0, 293,
	388, 300, 0, 478, 486, 491, 493, 494, 1444, 0,
	1513, 1505, 1506, 1507, 0, 1415, 1512, 1514, 0, 0,
	1420, 0, 0, 0, 0, 0, 0, 1400, 1382, 0,
	1413, 1385, 632, 0, 633, 635, 627, 0, 1371, 1551,
	1599, 1533, 0, 1602, 0, 0, 1642, 0, 0, 0,
	1656, 0, 0, 0, 0, 0, 1846, 1850, 0, 1839,
	1840, 1873, 1979, 0, 0, 0, 1860, 1980, 0, 398,
	0, 398, 356, 0, 357, 358, 359, 366, 367, 368,
	369, 344, 354, 884, 886, 0, 0, 0, 892, 1969,
	2300, -2, -2, 2321, 0, 2688, 2690, 1961, 0, 2468,
	1963, 0, 0, -2, 0, 0, 0, 1944, 1927, 0,
	2002, 1994, 1996, 1998, 3038, 2790, 3190, 1928, 1929, 2089,
	0, 0, 2051, 405, 414, 415, 0, 417, 418, 822,
	0, 0, 0, 0, 2119, 0, 0, 0, 829, 0,
	0, 0, 0, 1045, 1280, 1282, 0, 0, 0, 0,
	1699, 217, 0, 0, 1460, 1461, 1463, 0, 1465, 1467,
	1468, 1385, 0, 1472, 0, 2712, 0, 1477, 1480, 1481,
	0, 0, 1496, 1518, 0, 1527, 0, 1672, 1682, 1676,
	0, 1674, 1529, 0, 221, 250, 223, 252, 247, 0,
	1679, 0, 225, 235, 0, 0, 164, 0, 0, 2783,
	203, 201, 199, 132, 138, 140, 146, 1686, 189, 0,
	166, 0, 272, 281, 1678, 283, 267, 257, 0, 303,
	305, 307, 308, 309, 310, 0, 1708, 1712, 1720, 0,
	1735, 1736, 1737, 1738, 1739, 0, 0, 0, 302, 0,
	0, 474, 0, 485, 1385, 1443, 1384, 1504, 0, 1515,
	1385, 0, 0, 1529, 0, 0, 0, 0, 0, 1387,
	0, 1386, 0, 0, 629, 2110, 643, 0, 0, 0,
	1606, 0, 1654, 1658, 1652, 0, 0, 1664, 0, 0,
	0, 1819, 0, 0, 1841, 1842, 650, 1866, 0, 0,
	1873, 1884, 377, 0, 380, 353, 346, 0, 888, 0,
	890, 0, 2394, 2486, 0, 0, 2419, 2420, -2, 0,
	2360, 2470, 2472, 0, 0, 0, 0, 0, 2013, 2022,
	416, 1732, 1732, 1732, 2113, 836, 837, 839, 833, 835,
	0, 0, 1290, 1291, 1695, 0, 1702, 259, 1458, 1462,
	0, 1469, 0, 0, 0, 1473, 1537, 0, 0, 1554,
	1554, 1486, 0, 0, 1521, 1522, 1440, 0, 1523, 1524,
	1525, 1671, 1972, 1677, 1385, 0, 0, 249, 254, 0,
	0, 0, 0, 0, 0, 188, 0, 261, 284, 1679,
	0, 0, 1740, 0, 0, 299, 333, 508, 506, 1387,
	0, 1516, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1422, 1527, 1529, 0, 1440, 0, 1493, 1398,
	0, 1401, 0, 1383, 0, 638, 0, 1600, 0, 1607,
	0, 1646, 0, 1665, 0, 0, 1829, 1818, 1850, 1843,
	1844, 2110, 0, 1874, 0, 887, 0, 0, 0, 0,
	0, 0, 2481, 1964, 2361, 0, 0, 1997, 1999, 2000,
	2001, 823, 824, 825, 0, 0, 1696, 229, 0, 1531,
	1471, 1542, 0, 0, 0, 0, 0, 1487, 1519, 1520,
	1517, 1439, 0, 1675, 1673, 1498, 1531, 1533, 227, 0,
	1529, 0, 1449, 0, 0, 1452, 0, 0, 204, 2783,
	202, 0, 257, 798, 1732, 257, 0, 336, 0, 541,
	507, 509, 0, 0, 513, 514, 515, 1379, 0, 1509,
	1511, 1440, 1527, 1529, 1385, 1440, 0, 1402, 1444, 1400,
	1601, 1605, 1603, 1643, 1529, 0, 1527, 0, 1836, 1850,
	1830, 1831, 0, 1846, 0, 0, 398, 889, 891, 2478,
	2498, 2487, -2, 3121, 2791, 0, 2498, 2498, 2473, 2474,
	0, 0, 0, 1385, 0, 1474, 1538, 1539, 0, 1534,
	1535, 1536, 2711, 1475, 1476, 1478, 1479, 2110, 0, 1528,
	1537, 253, 1385, 1446, 0, 0, 1447, 0, 0, 207,
	0, 209, 285, 1730, 1733, 0, 311, 0, 0, 481,
	539, 0, 0, 510, 511, 533, 512, 1376, 1378, 1385,
	0, 1385, 1440, 1527, 2110, 1385, 0, 0, 0, 1385,
	1387, 1527, 0, 1440, 0, 1825, 1835, 0, 1845, 1819,
	0, 1869, 0, 379, 2483, 0, 0, 2489, 2490, 2491,
	2492, 2493, 2484, 2485, 838, 840, 1464, 1470, 0, 1540,
	0, 1541, 0, 0, 0, 1497, 1526, 1542, 233, 1450,
	0, 1453, 0, 205, 0, 0, 331, 332, 538, 534,
	1508, 1510, 2110, 1385, 1440, 1685, 2110, 1388, 0, 1390,
	1387, 1399, 1440, 0, 1385, 0, 1848, 1824, 1828, 2669,
	1829, 1867, 0, 0, 0, 2495, 2496, 0, 0, 0,
	1543, 0, 1546, 1547, 0, 1544, 1517, 0, 0, 257,
	0, 1948, 1685, 2110, 1385, 1491, 0, 1684, 1685, 1389,
	1379, 1385, 1529, 2110, 1527, 1822, 1850, 1836, 0, 2110,
	2494, 2497, 2488, 1530, 1545, 1548, 1549, 1499, 0, 0,
	1734, 334, 0, 0, 540, 535, 536, 1488, 1685, 2110,
	1683, 1492, 1377, 2110, 1527, 1685, 1440, 1815, 1821, 0,
	0, 1825, 2110, 1870, 1437, 0, 0, 537, 1489, 1685,
	1685, 1440, 1661, 1385, 1847, 1822, 1868, 1451, 1436, 0,
	335, 1490, 1659, 1385, 2110, 1816, 0, 2110, 1685, 0,
	1685, 1662, 1437, 1660, 1454,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 655, 3, 661, 656, 3,
	667, 668, 659, 657, 672, 658, 669, 660, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 676, 673,
	647, 649, 648, 652, 671, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 665, 3, 666, 662, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 674, 654, 675, 650,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 641, 57984, 642,
	57985, 643, 57986, 644, 57987, 645, 57988, 646, 57989, 651,
	57990, 653, 57991, 663, 57992, 664, 57993, 670, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1673
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1682
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1691
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1695
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1696
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1697
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1698
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1699
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1700
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1701
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1705
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1706
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1707
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "SHOW COMMIT TIMESTAMP")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1723
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1724
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1725
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1726
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1727
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1728
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1729
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1730
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1731
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1732
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1733
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1734
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1735
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1736
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1797
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1823
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1837
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1857
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1928
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1932
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1943
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1955
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1989
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2034
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2053
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2079
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2092
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2105
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2141
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2175
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2183
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2199
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2208
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2229
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2237
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2273
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2278
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2284
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2296
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = true
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = false
		}
	case 185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2337
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2399
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2416
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2425
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2435
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2443
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2454
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2464
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 198:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2474
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 199:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2483
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2494
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2500
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 205:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2526
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2531
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2598
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2622
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2666
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2676
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2679
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2707
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = nil
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = nil
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = true
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = false
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = nil
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2932
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2936
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2991
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2995
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3023
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 291:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3078
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3128
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3155
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3168
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3172
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3192
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3285
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3310
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3375
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = nil
		}
	case 337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3453
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3459
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3538
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3548
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3570
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3580
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3606
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3610
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3686
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3690
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3717
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3726
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3732
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3737
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3742
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3763
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3766
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3774
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3796
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = nil
		}
	case 399:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3850
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3864
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3880
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3884
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3916
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3924
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3932
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3936
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3940
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3953
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3954
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3955
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3956
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3974
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4002
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4010
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4019
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4048
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4052
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4082
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4095
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4103
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4104
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4108
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4113
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "CREATE TENANT")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4133
		{
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "CREATE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = &tree.CreateTenant{Name: tree.Name(sqlDollar[3].str)}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4145
		{
			sqlVAL.union.val = &tree.CreateTenantFromReplication{
				Name:                        tree.Name(sqlDollar[3].str),
				ReplicationSourceTenantName: tree.Name(sqlDollar[7].str),
				ReplicationSourceAddress:    sqlDollar[9].union.expr(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "CREATE TENANT")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4166
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4169
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4172
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4190
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Params:      sqlDollar[6].union.functionParams(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = true
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4209
		{
			sqlVAL.union.val = false
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = true
		}
	case 486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4213
		{
			sqlVAL.union.val = false
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = sqlDollar[1].union.functionParams()
		}
	case 489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = tree.FuncParams{}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = tree.FuncParams{sqlDollar[1].union.functionParam()}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionParams(), sqlDollar[3].union.functionParam())
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4232
		{
			arg := sqlDollar[1].union.functionParam()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4238
		{
			arg := sqlDollar[1].union.functionParam()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = tree.FuncParam{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionParamClass(),
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = tree.FuncParam{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionParamClass(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = tree.FuncParam{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionParamIn,
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4270
		{
			sqlVAL.union.val = tree.FuncParam{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionParamClass(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = tree.FuncParam{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionParamIn,
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4285
		{
			sqlVAL.union.val = tree.FunctionParamIn
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4286
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4287
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4288
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4289
		{
			return unimplementedWithIssueDetail(sqllex, 88947, "variadic user-defined functions")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4314
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4321
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4322
		{
			return unimplemented(sqllex, "create window function")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4354
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4358
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4382
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4393
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4394
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4413
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Params:   sqlDollar[2].union.functionParams(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = sqlDollar[2].union.functionParams()
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = tree.FuncParams{}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = tree.FuncParams{sqlDollar[1].union.functionParam()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionParams(), sqlDollar[3].union.functionParam())
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4528
		{
		}
	case 557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4529
		{
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4570
		{
			sqlVAL.union.val = true
		}
	case 563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = false
		}
	case 564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4579
		{
			return unimplemented(sqllex, "create access method")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			return unimplemented(sqllex, "create cast")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4584
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4585
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4586
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4587
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4588
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{
			return unimplemented(sqllex, "create publication")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4590
		{
			return unimplemented(sqllex, "create rule")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4591
		{
			return unimplemented(sqllex, "create server")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4595
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4598
		{
		}
	case 582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4599
		{
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4602
		{
		}
	case 584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4603
		{
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4606
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4613
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4614
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4615
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4616
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4617
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{
			return unimplemented(sqllex, "drop server")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4623
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4626
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4627
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4628
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4654
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4672
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4699
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4710
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				UsingExtremes: true,
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Where: tree.NewWhere(tree.AstWhere, sqlDollar[1].union.expr()),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4758
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4776
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4807
		{
		}
	case 645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4809
		{
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.str = ""
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4827
		{

			sqlVAL.union.val = nil
		}
	case 650:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Using:     sqlDollar[5].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4853
		{
			return helpWith(sqllex, "DELETE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "DROP TENANT")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4900
		{
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "DROP")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4944
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4959
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4974
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4999
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5029
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = &tree.DropTenant{
				Name:     tree.Name(sqlDollar[3].str),
				IfExists: false,
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = &tree.DropTenant{
				Name:     tree.Name(sqlDollar[5].str),
				IfExists: true,
			}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "DROP TENANT")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5074
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5102
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5117
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5121
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5126
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5153
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5160
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5164
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5194
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5196
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5204
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5212
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5220
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5228
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			return helpWith(sqllex, "DELETE")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5252
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5253
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5254
		{
			return helpWith(sqllex, "INSERT")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5257
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5259
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "DELETE")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5275
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "INSERT")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5282
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5283
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5307
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5336
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = &tree.ShowTenant{
				Name:            sqlDollar[3].union.expr(),
				WithReplication: false,
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = &tree.ShowTenant{
				Name:            sqlDollar[3].union.expr(),
				WithReplication: true,
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5422
		{
			return helpWith(sqllex, "SHOW TENANT")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5438
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5446
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5464
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5471
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5479
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 811:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5512
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5563
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5613
		{
			return helpWith(sqllex, "GRANT")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5764
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5767
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5777
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5805
		{
			return helpWith(sqllex, "RESET")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5806
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5825
		{
			return helpWith(sqllex, "RESET")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5836
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5850
		{
			return helpWith(sqllex, "USE")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5854
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5855
		{
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5856
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5860
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5861
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5862
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5863
		{
			return helpWith(sqllex, "USE")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5879
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5897
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5923
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5951
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5959
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5977
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5983
		{
			return helpWith(sqllex, "ALTER TENANT REPLICATION")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5984
		{
			return helpWith(sqllex, "ALTER TENANT CLUSTER SETTING")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5985
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5994
		{

			sqlVAL.union.val = &tree.AlterTenantReplication{
				TenantName: sqlDollar[3].union.expr(),
				Command:    tree.PauseJob,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6002
		{

			sqlVAL.union.val = &tree.AlterTenantReplication{
				TenantName: sqlDollar[3].union.expr(),
				Command:    tree.ResumeJob,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6018
		{

			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6027
		{

			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6035
		{
			return helpWith(sqllex, "ALTER TENANT CLUSTER SETTING")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6065
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6071
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6085
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6102
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6107
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6127
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6132
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6148
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6152
		{
			return unimplemented(sqllex, "set from current")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6156
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6161
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6170
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6175
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6179
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6191
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6196
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = tree.Low
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = tree.Normal
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = tree.High
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6313
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6330
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6331
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6332
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6333
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6335
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6336
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6337
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6338
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6339
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6341
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6342
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6343
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6345
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6346
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6349
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6350
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6352
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6355
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6356
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6357
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6358
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6359
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6360
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6361
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6362
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6363
		{
			return helpWith(sqllex, "SHOW TENANT")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6364
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6365
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6366
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6367
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6368
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6369
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6370
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6373
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6393
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6413
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = true
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = false
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = true
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = false
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = false
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6478
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6491
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6530
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = int64(1)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = int64(1)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = int64(1)
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6586
		{
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6589
		{
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6590
		{
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6594
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6599
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6604
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6609
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6614
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.str = "client_encoding"
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6646
		{
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6648
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.str = "timezone"
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6654
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6689
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6697
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6710
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6718
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6790
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6829
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6834
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6843
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6849
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6863
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6874
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6897
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6908
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6926
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6956
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6966
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6979
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7005
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7018
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7027
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = &tree.ShowCommitTimestamp{}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7054
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7059
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7070
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7075
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = true
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = true
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = false
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7111
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7112
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7113
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7130
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7156
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7157
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7173
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7181
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7189
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7225
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7230
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7232
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7236
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = true
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = false
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7251
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7256
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7287
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = &tree.ShowFunctions{}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7315
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7325
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7330
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = true
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = false
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7362
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7369
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7373
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7377
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7387
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7398
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7412
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7420
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7425
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7430
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7434
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7448
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7465
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7470
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7475
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7480
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7485
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeIndexes, Name: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7490
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSecondaryIndexes, Name: sqlDollar[6].union.unresolvedObjectName()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7495
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7515
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7528
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7533
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7545
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7550
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7561
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7572
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7590
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7598
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7619
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7624
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7629
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7633
		{
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7642
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7656
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7665
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7677
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7743
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7753
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7766
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7901
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7948
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7993
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8004
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8012
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8063
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8064
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8065
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8066
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8072
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8073
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8074
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8075
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8086
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8114
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8127
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8159
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8167
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8178
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8214
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8242
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8278
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8293
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8321
		{

			sqlVAL.union.val = nil
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8327
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.str = ""
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8337
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = nil
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8360
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8364
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8400
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8413
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8427
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8428
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8429
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8484
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8510
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8521
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8524
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8527
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8528
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.str = ""
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8666
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8753
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8773
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8818
		{

			sqlVAL.union.val = true
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = false
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8828
		{
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8832
		{
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8835
		{
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[3].union.idxElems(),
				Sharded:          sqlDollar[5].union.shardedIndexDef(),
				Storing:          sqlDollar[6].union.nameList(),
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[4].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[6].union.partitionByIndex(),
				StorageParams:    sqlDollar[7].union.storageParams(),
				Predicate:        sqlDollar[8].union.expr(),
				NotVisible:       sqlDollar[9].union.bool(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8960
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8971
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8988
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8998
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9013
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9081
		{
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9082
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9083
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9084
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9085
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9086
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9168
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9253
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9262
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9270
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9281
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9299
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9309
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9313
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9315
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9318
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9321
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9323
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9326
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9328
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9342
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9346
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9373
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9407
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.str = ""
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9427
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = true
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9450
		{

			sqlVAL.union.val = true
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = false
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9467
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9481
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9493
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9505
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9516
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9527
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = false
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = true
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = true
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = nil
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9674
		{
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9675
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9700
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:          sqlDollar[3].union.unresolvedObjectName(),
				Variety:           tree.Composite,
				CompositeTypeList: sqlDollar[6].union.compositeTypeList(),
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:          sqlDollar[6].union.unresolvedObjectName(),
				Variety:           tree.Composite,
				IfNotExists:       true,
				CompositeTypeList: sqlDollar[9].union.compositeTypeList(),
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9720
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9722
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9724
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9726
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = sqlDollar[1].union.compositeTypeList()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = []tree.CompositeTypeElem{}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = []tree.CompositeTypeElem{
				tree.CompositeTypeElem{
					Label: tree.Name(sqlDollar[1].str),
					Type:  sqlDollar[2].union.typeReference(),
				},
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = append(sqlDollar[1].union.compositeTypeList(),
				tree.CompositeTypeElem{
					Label: tree.Name(sqlDollar[3].str),
					Type:  sqlDollar[4].union.typeReference(),
				},
			)
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9791
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9809
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9828
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9845
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9862
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9866
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = false
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = true
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = false
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = true
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = false
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9920
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9926
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9932
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9940
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.str = ""
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.str = ""
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = true
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = false
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = false
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10007
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10013
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10238
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10244
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10256
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10262
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10276
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10282
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10341
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = true
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = false
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10405
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.str = ""
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10440
		{
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10441
		{
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10444
		{
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10445
		{
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10456
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10474
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10483
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10504
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10512
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10533
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10541
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10552
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10556
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10557
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10558
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10577
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10590
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10599
		{
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10600
		{
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10601
		{
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10618
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10624
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10625
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10632
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10639
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10643
		{
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10644
		{
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10672
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10687
		{
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10691
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10783
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.str = ""
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.str = ""
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10818
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10823
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10840
		{

		}
	case 1832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10855
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.str = ""
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.str = ""
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.str = ""
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.str = ""
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10910
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10935
		{
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10936
		{
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10965
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10987
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10996
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11045
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11090
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11128
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11160
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11181
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11196
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11340
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11375
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11376
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11377
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11438
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11482
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11498
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = true
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = false
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11551
		{
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11552
		{
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11556
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = nil
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11565
		{
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11566
		{
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = true
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = false
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = false
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = true
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11595
		{
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11596
		{
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11599
		{
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11600
		{
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11641
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11653
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11658
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11684
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11717
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11772
		{
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11776
		{
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11777
		{
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11812
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11813
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11843
		{
			return helpWith(sqllex, "VALUES")
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11845
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11860
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = tree.From{}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11882
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11887
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11892
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11903
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11913
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11924
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11929
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11941
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11960
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12002
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12012
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12047
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12058
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12082
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12088
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = nil
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = true
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = false
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12248
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12265
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.str = tree.AstFull
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12292
		{
			sqlVAL.str = tree.AstRight
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12296
		{
			sqlVAL.str = tree.AstInner
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12302
		{
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12303
		{
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.str = tree.AstHash
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.str = ""
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12372
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12377
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12407
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12413
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12419
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12429
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = true
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = false
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = true
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = false
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12478
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12491
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12499
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12500
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12510
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12518
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12520
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12528
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12529
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12541
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12548
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12557
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12597
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12607
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12608
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12613
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12617
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12619
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12621
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12623
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12625
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12627
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12629
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12630
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12631
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12633
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12635
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12636
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12637
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12641
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12642
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = types.Geography
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12647
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12657
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12665
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12693
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12701
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = nil
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12724
		{
			sqlVAL.union.val = types.Int2
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12728
		{
			sqlVAL.union.val = types.Int
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12732
		{
			sqlVAL.union.val = types.Float4
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12736
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = types.Float
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12744
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12752
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12760
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12768
		{
			sqlVAL.union.val = types.Bool
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12774
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = types.Float
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12793
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12799
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12807
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12811
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12821
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12833
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12839
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12843
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12847
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12851
		{
			sqlVAL.union.val = types.String
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.union.val = true
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12861
		{
			sqlVAL.union.val = false
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.union.val = types.Date
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12870
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12878
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12890
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12892
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12901
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12909
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12922
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12926
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12936
		{
			sqlVAL.union.val = true
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = false
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12938
		{
			sqlVAL.union.val = false
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12942
		{
			sqlVAL.union.val = types.Interval
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12946
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12950
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12961
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12977
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12985
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13001
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13016
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13034
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13040
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13049
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13055
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13065
		{
			sqlVAL.union.val = nil
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13079
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13116
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13120
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13124
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13128
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13139
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13144
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13148
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13152
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13156
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13160
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13164
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13168
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13176
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13180
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13184
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13188
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13192
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13200
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13204
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13208
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13216
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13220
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13232
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13236
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13240
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13244
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13248
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13252
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13256
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13260
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13264
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13272
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.TSMatches), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13276
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13280
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13284
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13288
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13292
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13300
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13310
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13314
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13318
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13322
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13326
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13330
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13334
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13338
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13342
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13346
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13350
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13354
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13358
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13362
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13366
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13370
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13374
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13378
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13382
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13386
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13390
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13398
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13406
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13410
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13414
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13418
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13422
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13435
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13439
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13443
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13447
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13451
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13455
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13459
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13463
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13467
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13471
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13475
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13479
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13483
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13487
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13491
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13495
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13499
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13516
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13521
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13533
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13537
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13541
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13545
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13549
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13553
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13557
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13561
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13565
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13569
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13573
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13577
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13581
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13585
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13589
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13593
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13597
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13601
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13605
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13609
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13613
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13617
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13621
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13625
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13629
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13637
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13647
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13651
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13655
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13659
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13673
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13681
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13717
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13721
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13725
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13729
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13733
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13738
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13740
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13744
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13748
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13752
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13756
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13760
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13764
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13773
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13780
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13784
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13788
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13798
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13803
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13807
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13811
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13815
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13819
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13822
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13826
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13830
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13833
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13834
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13836
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13846
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13849
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13858
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							un, err := name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
							typ = &un
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13911
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13924
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13936
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13945
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13946
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13955
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13959
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13969
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13973
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13977
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13981
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13991
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13999
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14003
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14007
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:14011
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:14015
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14019
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14023
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14027
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14031
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14035
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14039
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14046
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14049
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14054
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14056
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14060
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14063
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14065
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14069
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14072
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14074
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14081
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14083
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14087
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14090
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14092
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14095
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14097
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14100
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14105
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14107
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14110
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14112
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14115
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14117
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14121
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14124
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14125
		{
			return unimplemented(sqllex, "treat")
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14127
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14146
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14148
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14151
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14157
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14161
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14167
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14171
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14178
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14182
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14188
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14192
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14198
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14206
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14210
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14214
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14221
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14241
		{
			sqlVAL.str = ""
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14247
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14251
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14257
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14265
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14273
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14281
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14287
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14300
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14328
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14332
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14336
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14340
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14347
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14356
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14360
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14364
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14368
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14373
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14386
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14390
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14397
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14409
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14413
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14417
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14433
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14434
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14435
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14436
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14437
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14438
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14439
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14440
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14441
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14442
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14443
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14444
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14446
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14447
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14448
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14449
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14450
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14451
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14452
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14453
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14454
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14455
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14456
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14457
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14458
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14459
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14460
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14461
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14462
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14463
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14464
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14465
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14466
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.TSMatches)
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14467
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14468
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14469
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14474
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14490
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14497
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14498
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14499
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14500
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14523
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14527
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14533
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14537
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14541
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14552
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14556
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14562
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14566
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14573
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14579
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14583
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14589
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14599
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14603
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14609
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14613
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14619
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14623
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14646
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14650
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14654
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14660
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14667
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14671
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14688
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14692
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14696
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14700
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14704
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14710
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14716
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14722
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14726
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14730
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14736
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14748
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14755
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14759
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14765
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14771
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14775
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14782
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14788
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14792
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14799
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14805
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14809
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14814
		{
		}
	case 2613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14815
		{
		}
	case 2614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14819
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14829
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14838
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14842
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14846
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14858
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14868
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14891
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14899
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14922
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14931
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14935
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14939
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14943
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14949
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14953
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14968
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14972
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14984
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14988
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14997
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15008
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15017
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15025
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15042
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15127
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15135
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15139
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15145
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15149
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15155
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15161
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15168
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15195
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15202
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15206
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2688:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15210
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2690:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15224
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15228
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15232
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15245
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15250
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15258
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15276
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15289
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15296
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2710:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15321
		{
			sqlVAL.str = ""
		}
	case 2711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15327
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15331
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
