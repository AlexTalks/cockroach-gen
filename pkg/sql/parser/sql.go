// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:713
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12583

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1439,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	254, 369,
	-2, 0,
	-1, 73,
	236, 221,
	498, 221,
	-2, 0,
	-1, 84,
	224, 1196,
	238, 1196,
	254, 365,
	380, 365,
	390, 975,
	425, 365,
	437, 975,
	482, 975,
	509, 365,
	535, 975,
	-2, 0,
	-1, 90,
	130, 1439,
	231, 1439,
	520, 1439,
	521, 1439,
	-2, 0,
	-1, 106,
	147, 1410,
	166, 1410,
	179, 1410,
	234, 1410,
	267, 1410,
	332, 1410,
	342, 1410,
	515, 1410,
	-2, 1381,
	-1, 145,
	155, 840,
	253, 840,
	383, 807,
	442, 807,
	481, 807,
	501, 840,
	503, 807,
	-2, 0,
	-1, 147,
	4, 1441,
	21, 1441,
	22, 1441,
	23, 1441,
	24, 1441,
	25, 1441,
	26, 1441,
	27, 1441,
	28, 1441,
	30, 1441,
	31, 1441,
	37, 1441,
	42, 1441,
	43, 1441,
	45, 1441,
	46, 1441,
	47, 1441,
	48, 1441,
	49, 1441,
	50, 1441,
	51, 1441,
	53, 1441,
	54, 1441,
	55, 1441,
	56, 1441,
	58, 1441,
	59, 1441,
	60, 1441,
	61, 1441,
	62, 1441,
	63, 1441,
	64, 1441,
	68, 1441,
	69, 1441,
	70, 1441,
	71, 1441,
	73, 1441,
	74, 1441,
	75, 1441,
	79, 1441,
	80, 1441,
	81, 1441,
	82, 1441,
	83, 1441,
	84, 1441,
	85, 1441,
	88, 1441,
	89, 1441,
	90, 1441,
	91, 1441,
	92, 1441,
	94, 1441,
	96, 1441,
	97, 1441,
	98, 1441,
	99, 1441,
	100, 1441,
	101, 1441,
	103, 1441,
	104, 1441,
	105, 1441,
	107, 1441,
	108, 1441,
	116, 1441,
	117, 1441,
	118, 1441,
	119, 1441,
	121, 1441,
	122, 1441,
	123, 1441,
	125, 1441,
	126, 1441,
	127, 1441,
	129, 1441,
	130, 1441,
	132, 1441,
	133, 1441,
	134, 1441,
	137, 1441,
	138, 1441,
	139, 1441,
	141, 1441,
	142, 1441,
	144, 1441,
	145, 1441,
	146, 1441,
	148, 1441,
	149, 1441,
	150, 1441,
	151, 1441,
	152, 1441,
	153, 1441,
	154, 1441,
	155, 1441,
	156, 1441,
	157, 1441,
	158, 1441,
	159, 1441,
	160, 1441,
	161, 1441,
	162, 1441,
	163, 1441,
	165, 1441,
	171, 1441,
	172, 1441,
	173, 1441,
	174, 1441,
	178, 1441,
	180, 1441,
	184, 1441,
	185, 1441,
	186, 1441,
	187, 1441,
	188, 1441,
	189, 1441,
	190, 1441,
	191, 1441,
	192, 1441,
	193, 1441,
	194, 1441,
	195, 1441,
	196, 1441,
	198, 1441,
	199, 1441,
	201, 1441,
	202, 1441,
	204, 1441,
	205, 1441,
	206, 1441,
	207, 1441,
	208, 1441,
	209, 1441,
	210, 1441,
	211, 1441,
	212, 1441,
	214, 1441,
	215, 1441,
	217, 1441,
	218, 1441,
	219, 1441,
	220, 1441,
	224, 1441,
	225, 1441,
	226, 1441,
	227, 1441,
	228, 1441,
	231, 1441,
	232, 1441,
	233, 1441,
	235, 1441,
	237, 1441,
	238, 1441,
	240, 1441,
	242, 1441,
	243, 1441,
	244, 1441,
	246, 1441,
	250, 1441,
	251, 1441,
	252, 1441,
	253, 1441,
	254, 1441,
	255, 1441,
	257, 1441,
	258, 1441,
	259, 1441,
	261, 1441,
	262, 1441,
	264, 1441,
	265, 1441,
	268, 1441,
	272, 1441,
	273, 1441,
	274, 1441,
	277, 1441,
	278, 1441,
	279, 1441,
	280, 1441,
	282, 1441,
	283, 1441,
	284, 1441,
	285, 1441,
	286, 1441,
	287, 1441,
	288, 1441,
	289, 1441,
	290, 1441,
	291, 1441,
	292, 1441,
	293, 1441,
	294, 1441,
	295, 1441,
	296, 1441,
	297, 1441,
	298, 1441,
	299, 1441,
	300, 1441,
	301, 1441,
	302, 1441,
	303, 1441,
	305, 1441,
	307, 1441,
	308, 1441,
	309, 1441,
	310, 1441,
	311, 1441,
	312, 1441,
	313, 1441,
	314, 1441,
	315, 1441,
	316, 1441,
	317, 1441,
	318, 1441,
	320, 1441,
	322, 1441,
	324, 1441,
	325, 1441,
	327, 1441,
	328, 1441,
	329, 1441,
	330, 1441,
	331, 1441,
	334, 1441,
	337, 1441,
	338, 1441,
	339, 1441,
	340, 1441,
	343, 1441,
	344, 1441,
	345, 1441,
	347, 1441,
	349, 1441,
	350, 1441,
	351, 1441,
	352, 1441,
	353, 1441,
	354, 1441,
	355, 1441,
	356, 1441,
	357, 1441,
	358, 1441,
	359, 1441,
	360, 1441,
	362, 1441,
	363, 1441,
	364, 1441,
	365, 1441,
	366, 1441,
	367, 1441,
	368, 1441,
	369, 1441,
	370, 1441,
	371, 1441,
	372, 1441,
	373, 1441,
	374, 1441,
	375, 1441,
	376, 1441,
	378, 1441,
	379, 1441,
	381, 1441,
	382, 1441,
	383, 1441,
	384, 1441,
	385, 1441,
	386, 1441,
	387, 1441,
	388, 1441,
	389, 1441,
	390, 1441,
	391, 1441,
	392, 1441,
	394, 1441,
	396, 1441,
	397, 1441,
	398, 1441,
	403, 1441,
	405, 1441,
	406, 1441,
	407, 1441,
	408, 1441,
	409, 1441,
	410, 1441,
	411, 1441,
	412, 1441,
	414, 1441,
	415, 1441,
	416, 1441,
	418, 1441,
	419, 1441,
	420, 1441,
	421, 1441,
	422, 1441,
	423, 1441,
	425, 1441,
	426, 1441,
	427, 1441,
	428, 1441,
	429, 1441,
	430, 1441,
	431, 1441,
	432, 1441,
	433, 1441,
	434, 1441,
	435, 1441,
	437, 1441,
	438, 1441,
	439, 1441,
	440, 1441,
	441, 1441,
	442, 1441,
	444, 1441,
	445, 1441,
	446, 1441,
	447, 1441,
	448, 1441,
	449, 1441,
	451, 1441,
	452, 1441,
	453, 1441,
	454, 1441,
	455, 1441,
	456, 1441,
	457, 1441,
	459, 1441,
	461, 1441,
	462, 1441,
	463, 1441,
	464, 1441,
	465, 1441,
	466, 1441,
	467, 1441,
	468, 1441,
	469, 1441,
	470, 1441,
	471, 1441,
	472, 1441,
	473, 1441,
	474, 1441,
	475, 1441,
	477, 1441,
	478, 1441,
	480, 1441,
	481, 1441,
	483, 1441,
	484, 1441,
	485, 1441,
	486, 1441,
	487, 1441,
	488, 1441,
	489, 1441,
	490, 1441,
	491, 1441,
	493, 1441,
	494, 1441,
	495, 1441,
	496, 1441,
	497, 1441,
	499, 1441,
	501, 1441,
	502, 1441,
	503, 1441,
	504, 1441,
	505, 1441,
	506, 1441,
	508, 1441,
	509, 1441,
	510, 1441,
	511, 1441,
	513, 1441,
	514, 1441,
	517, 1441,
	518, 1441,
	519, 1441,
	520, 1441,
	521, 1441,
	522, 1441,
	523, 1441,
	525, 1441,
	528, 1441,
	529, 1441,
	530, 1441,
	531, 1441,
	532, 1441,
	533, 1441,
	535, 1441,
	536, 1441,
	537, 1441,
	538, 1441,
	543, 1441,
	544, 1441,
	545, 1441,
	546, 1441,
	547, 1441,
	548, 1441,
	-2, 0,
	-1, 148,
	1, 1297,
	128, 1297,
	242, 1297,
	321, 1297,
	378, 1297,
	387, 1297,
	552, 1297,
	576, 1297,
	-2, 0,
	-1, 150,
	1, 1297,
	576, 1297,
	-2, 0,
	-1, 151,
	1, 1297,
	576, 1297,
	-2, 0,
	-1, 152,
	1, 1297,
	498, 1297,
	576, 1297,
	-2, 0,
	-1, 181,
	147, 1409,
	166, 1409,
	179, 1409,
	234, 1409,
	267, 1409,
	332, 1409,
	342, 1409,
	515, 1409,
	-2, 1384,
	-1, 224,
	4, 1448,
	5, 1448,
	6, 1448,
	7, 1448,
	8, 1448,
	9, 1448,
	10, 1448,
	21, 1448,
	22, 1448,
	23, 1448,
	24, 1448,
	25, 1448,
	26, 1448,
	27, 1448,
	28, 1448,
	30, 1448,
	31, 1448,
	37, 1448,
	38, 1448,
	42, 1448,
	43, 1448,
	44, 1448,
	45, 1448,
	46, 1448,
	47, 1448,
	48, 1448,
	49, 1448,
	50, 1448,
	51, 1448,
	53, 1448,
	54, 1448,
	55, 1448,
	56, 1448,
	58, 1448,
	59, 1448,
	60, 1448,
	61, 1448,
	62, 1448,
	63, 1448,
	64, 1448,
	65, 1448,
	66, 1448,
	67, 1448,
	68, 1448,
	69, 1448,
	70, 1448,
	71, 1448,
	73, 1448,
	74, 1448,
	75, 1448,
	77, 1448,
	79, 1448,
	80, 1448,
	81, 1448,
	82, 1448,
	83, 1448,
	84, 1448,
	85, 1448,
	88, 1448,
	89, 1448,
	90, 1448,
	91, 1448,
	92, 1448,
	94, 1448,
	96, 1448,
	97, 1448,
	98, 1448,
	99, 1448,
	100, 1448,
	101, 1448,
	103, 1448,
	104, 1448,
	105, 1448,
	106, 1448,
	107, 1448,
	108, 1448,
	109, 1448,
	110, 1448,
	111, 1448,
	112, 1448,
	113, 1448,
	114, 1448,
	115, 1448,
	116, 1448,
	117, 1448,
	118, 1448,
	119, 1448,
	120, 1448,
	121, 1448,
	122, 1448,
	123, 1448,
	124, 1448,
	125, 1448,
	126, 1448,
	127, 1448,
	129, 1448,
	130, 1448,
	132, 1448,
	133, 1448,
	134, 1448,
	137, 1448,
	138, 1448,
	139, 1448,
	141, 1448,
	142, 1448,
	144, 1448,
	145, 1448,
	146, 1448,
	148, 1448,
	149, 1448,
	150, 1448,
	151, 1448,
	152, 1448,
	153, 1448,
	154, 1448,
	155, 1448,
	156, 1448,
	157, 1448,
	158, 1448,
	159, 1448,
	160, 1448,
	161, 1448,
	162, 1448,
	163, 1448,
	164, 1448,
	165, 1448,
	171, 1448,
	172, 1448,
	173, 1448,
	174, 1448,
	178, 1448,
	180, 1448,
	183, 1448,
	184, 1448,
	185, 1448,
	186, 1448,
	187, 1448,
	188, 1448,
	189, 1448,
	190, 1448,
	191, 1448,
	192, 1448,
	193, 1448,
	194, 1448,
	195, 1448,
	196, 1448,
	198, 1448,
	199, 1448,
	201, 1448,
	202, 1448,
	204, 1448,
	205, 1448,
	206, 1448,
	207, 1448,
	208, 1448,
	209, 1448,
	210, 1448,
	211, 1448,
	212, 1448,
	213, 1448,
	214, 1448,
	215, 1448,
	217, 1448,
	218, 1448,
	219, 1448,
	220, 1448,
	224, 1448,
	225, 1448,
	226, 1448,
	227, 1448,
	228, 1448,
	230, 1448,
	231, 1448,
	232, 1448,
	233, 1448,
	235, 1448,
	237, 1448,
	238, 1448,
	239, 1448,
	240, 1448,
	241, 1448,
	242, 1448,
	243, 1448,
	244, 1448,
	245, 1448,
	246, 1448,
	250, 1448,
	251, 1448,
	252, 1448,
	253, 1448,
	254, 1448,
	255, 1448,
	257, 1448,
	258, 1448,
	259, 1448,
	261, 1448,
	262, 1448,
	263, 1448,
	264, 1448,
	265, 1448,
	266, 1448,
	268, 1448,
	272, 1448,
	273, 1448,
	274, 1448,
	275, 1448,
	276, 1448,
	277, 1448,
	278, 1448,
	279, 1448,
	280, 1448,
	282, 1448,
	283, 1448,
	284, 1448,
	285, 1448,
	286, 1448,
	287, 1448,
	288, 1448,
	289, 1448,
	290, 1448,
	291, 1448,
	292, 1448,
	293, 1448,
	294, 1448,
	295, 1448,
	296, 1448,
	297, 1448,
	298, 1448,
	299, 1448,
	300, 1448,
	301, 1448,
	302, 1448,
	303, 1448,
	305, 1448,
	306, 1448,
	307, 1448,
	308, 1448,
	309, 1448,
	310, 1448,
	311, 1448,
	312, 1448,
	313, 1448,
	314, 1448,
	315, 1448,
	316, 1448,
	317, 1448,
	318, 1448,
	319, 1448,
	320, 1448,
	321, 1448,
	322, 1448,
	323, 1448,
	324, 1448,
	325, 1448,
	326, 1448,
	327, 1448,
	328, 1448,
	329, 1448,
	330, 1448,
	331, 1448,
	334, 1448,
	338, 1448,
	339, 1448,
	340, 1448,
	343, 1448,
	344, 1448,
	345, 1448,
	346, 1448,
	347, 1448,
	348, 1448,
	349, 1448,
	350, 1448,
	351, 1448,
	352, 1448,
	353, 1448,
	354, 1448,
	355, 1448,
	356, 1448,
	357, 1448,
	358, 1448,
	359, 1448,
	360, 1448,
	362, 1448,
	363, 1448,
	364, 1448,
	365, 1448,
	366, 1448,
	367, 1448,
	368, 1448,
	369, 1448,
	370, 1448,
	371, 1448,
	372, 1448,
	373, 1448,
	374, 1448,
	375, 1448,
	376, 1448,
	378, 1448,
	379, 1448,
	381, 1448,
	382, 1448,
	383, 1448,
	384, 1448,
	385, 1448,
	386, 1448,
	387, 1448,
	388, 1448,
	389, 1448,
	390, 1448,
	391, 1448,
	392, 1448,
	394, 1448,
	396, 1448,
	397, 1448,
	398, 1448,
	403, 1448,
	405, 1448,
	406, 1448,
	407, 1448,
	408, 1448,
	409, 1448,
	410, 1448,
	411, 1448,
	412, 1448,
	414, 1448,
	415, 1448,
	416, 1448,
	417, 1448,
	418, 1448,
	419, 1448,
	420, 1448,
	421, 1448,
	422, 1448,
	423, 1448,
	425, 1448,
	426, 1448,
	427, 1448,
	428, 1448,
	429, 1448,
	430, 1448,
	431, 1448,
	432, 1448,
	433, 1448,
	434, 1448,
	435, 1448,
	437, 1448,
	438, 1448,
	439, 1448,
	440, 1448,
	441, 1448,
	442, 1448,
	443, 1448,
	444, 1448,
	445, 1448,
	446, 1448,
	447, 1448,
	448, 1448,
	449, 1448,
	450, 1448,
	451, 1448,
	452, 1448,
	453, 1448,
	454, 1448,
	455, 1448,
	456, 1448,
	457, 1448,
	459, 1448,
	461, 1448,
	462, 1448,
	463, 1448,
	464, 1448,
	465, 1448,
	466, 1448,
	467, 1448,
	468, 1448,
	469, 1448,
	470, 1448,
	471, 1448,
	472, 1448,
	473, 1448,
	474, 1448,
	475, 1448,
	477, 1448,
	478, 1448,
	479, 1448,
	480, 1448,
	481, 1448,
	483, 1448,
	484, 1448,
	485, 1448,
	486, 1448,
	487, 1448,
	488, 1448,
	489, 1448,
	490, 1448,
	491, 1448,
	493, 1448,
	494, 1448,
	495, 1448,
	496, 1448,
	497, 1448,
	499, 1448,
	501, 1448,
	502, 1448,
	503, 1448,
	504, 1448,
	505, 1448,
	506, 1448,
	507, 1448,
	508, 1448,
	509, 1448,
	510, 1448,
	511, 1448,
	513, 1448,
	514, 1448,
	516, 1448,
	517, 1448,
	518, 1448,
	519, 1448,
	520, 1448,
	521, 1448,
	522, 1448,
	523, 1448,
	524, 1448,
	525, 1448,
	528, 1448,
	529, 1448,
	530, 1448,
	531, 1448,
	532, 1448,
	533, 1448,
	535, 1448,
	536, 1448,
	537, 1448,
	538, 1448,
	543, 1448,
	544, 1448,
	545, 1448,
	546, 1448,
	547, 1448,
	548, 1448,
	549, 1448,
	557, 1448,
	564, 1448,
	565, 1448,
	566, 1448,
	573, 1448,
	577, 1448,
	-2, 0,
	-1, 712,
	4, 1194,
	21, 1194,
	22, 1194,
	23, 1194,
	24, 1194,
	25, 1194,
	26, 1194,
	27, 1194,
	28, 1194,
	30, 1194,
	31, 1194,
	37, 1194,
	42, 1194,
	43, 1194,
	45, 1194,
	46, 1194,
	47, 1194,
	48, 1194,
	49, 1194,
	50, 1194,
	51, 1194,
	53, 1194,
	54, 1194,
	55, 1194,
	56, 1194,
	58, 1194,
	59, 1194,
	60, 1194,
	61, 1194,
	62, 1194,
	63, 1194,
	64, 1194,
	68, 1194,
	69, 1194,
	70, 1194,
	71, 1194,
	73, 1194,
	74, 1194,
	75, 1194,
	79, 1194,
	80, 1194,
	81, 1194,
	82, 1194,
	83, 1194,
	84, 1194,
	85, 1194,
	88, 1194,
	89, 1194,
	90, 1194,
	91, 1194,
	92, 1194,
	94, 1194,
	96, 1194,
	97, 1194,
	98, 1194,
	99, 1194,
	100, 1194,
	101, 1194,
	103, 1194,
	104, 1194,
	105, 1194,
	107, 1194,
	108, 1194,
	116, 1194,
	117, 1194,
	118, 1194,
	119, 1194,
	121, 1194,
	122, 1194,
	123, 1194,
	125, 1194,
	126, 1194,
	127, 1194,
	129, 1194,
	130, 1194,
	132, 1194,
	133, 1194,
	134, 1194,
	137, 1194,
	138, 1194,
	139, 1194,
	141, 1194,
	142, 1194,
	144, 1194,
	145, 1194,
	146, 1194,
	148, 1194,
	149, 1194,
	150, 1194,
	151, 1194,
	152, 1194,
	153, 1194,
	154, 1194,
	155, 1194,
	156, 1194,
	157, 1194,
	158, 1194,
	159, 1194,
	160, 1194,
	161, 1194,
	162, 1194,
	163, 1194,
	165, 1194,
	171, 1194,
	172, 1194,
	173, 1194,
	174, 1194,
	178, 1194,
	180, 1194,
	184, 1194,
	185, 1194,
	186, 1194,
	187, 1194,
	188, 1194,
	189, 1194,
	190, 1194,
	191, 1194,
	192, 1194,
	193, 1194,
	194, 1194,
	195, 1194,
	196, 1194,
	198, 1194,
	199, 1194,
	201, 1194,
	202, 1194,
	204, 1194,
	205, 1194,
	206, 1194,
	207, 1194,
	208, 1194,
	209, 1194,
	210, 1194,
	211, 1194,
	212, 1194,
	214, 1194,
	215, 1194,
	217, 1194,
	218, 1194,
	219, 1194,
	220, 1194,
	224, 1194,
	225, 1194,
	226, 1194,
	227, 1194,
	228, 1194,
	231, 1194,
	232, 1194,
	233, 1194,
	235, 1194,
	237, 1194,
	238, 1194,
	240, 1194,
	242, 1194,
	243, 1194,
	244, 1194,
	246, 1194,
	250, 1194,
	251, 1194,
	252, 1194,
	253, 1194,
	254, 1194,
	255, 1194,
	257, 1194,
	258, 1194,
	259, 1194,
	261, 1194,
	262, 1194,
	264, 1194,
	265, 1194,
	268, 1194,
	272, 1194,
	273, 1194,
	274, 1194,
	277, 1194,
	278, 1194,
	279, 1194,
	280, 1194,
	282, 1194,
	283, 1194,
	284, 1194,
	285, 1194,
	286, 1194,
	287, 1194,
	288, 1194,
	289, 1194,
	290, 1194,
	291, 1194,
	292, 1194,
	293, 1194,
	294, 1194,
	295, 1194,
	296, 1194,
	297, 1194,
	298, 1194,
	299, 1194,
	300, 1194,
	301, 1194,
	302, 1194,
	303, 1194,
	305, 1194,
	307, 1194,
	308, 1194,
	309, 1194,
	310, 1194,
	311, 1194,
	312, 1194,
	313, 1194,
	314, 1194,
	315, 1194,
	316, 1194,
	317, 1194,
	318, 1194,
	320, 1194,
	322, 1194,
	324, 1194,
	325, 1194,
	327, 1194,
	328, 1194,
	329, 1194,
	330, 1194,
	331, 1194,
	334, 1194,
	338, 1194,
	339, 1194,
	340, 1194,
	343, 1194,
	344, 1194,
	345, 1194,
	347, 1194,
	349, 1194,
	350, 1194,
	351, 1194,
	352, 1194,
	353, 1194,
	354, 1194,
	355, 1194,
	356, 1194,
	357, 1194,
	358, 1194,
	359, 1194,
	360, 1194,
	362, 1194,
	363, 1194,
	364, 1194,
	365, 1194,
	366, 1194,
	367, 1194,
	368, 1194,
	369, 1194,
	370, 1194,
	371, 1194,
	372, 1194,
	373, 1194,
	374, 1194,
	375, 1194,
	376, 1194,
	378, 1194,
	379, 1194,
	381, 1194,
	382, 1194,
	383, 1194,
	384, 1194,
	385, 1194,
	386, 1194,
	387, 1194,
	388, 1194,
	389, 1194,
	390, 1194,
	391, 1194,
	392, 1194,
	394, 1194,
	396, 1194,
	397, 1194,
	398, 1194,
	403, 1194,
	405, 1194,
	406, 1194,
	407, 1194,
	408, 1194,
	409, 1194,
	410, 1194,
	411, 1194,
	412, 1194,
	414, 1194,
	415, 1194,
	416, 1194,
	418, 1194,
	419, 1194,
	420, 1194,
	421, 1194,
	422, 1194,
	423, 1194,
	425, 1194,
	426, 1194,
	427, 1194,
	428, 1194,
	429, 1194,
	430, 1194,
	431, 1194,
	432, 1194,
	433, 1194,
	434, 1194,
	435, 1194,
	437, 1194,
	438, 1194,
	439, 1194,
	440, 1194,
	441, 1194,
	442, 1194,
	444, 1194,
	445, 1194,
	446, 1194,
	447, 1194,
	448, 1194,
	449, 1194,
	451, 1194,
	452, 1194,
	453, 1194,
	454, 1194,
	455, 1194,
	456, 1194,
	457, 1194,
	459, 1194,
	461, 1194,
	462, 1194,
	463, 1194,
	464, 1194,
	465, 1194,
	466, 1194,
	467, 1194,
	468, 1194,
	469, 1194,
	470, 1194,
	471, 1194,
	472, 1194,
	473, 1194,
	474, 1194,
	475, 1194,
	477, 1194,
	478, 1194,
	480, 1194,
	481, 1194,
	483, 1194,
	484, 1194,
	485, 1194,
	486, 1194,
	487, 1194,
	488, 1194,
	489, 1194,
	490, 1194,
	491, 1194,
	493, 1194,
	494, 1194,
	495, 1194,
	496, 1194,
	497, 1194,
	499, 1194,
	501, 1194,
	502, 1194,
	503, 1194,
	504, 1194,
	505, 1194,
	506, 1194,
	508, 1194,
	509, 1194,
	510, 1194,
	511, 1194,
	513, 1194,
	514, 1194,
	517, 1194,
	518, 1194,
	519, 1194,
	520, 1194,
	521, 1194,
	522, 1194,
	523, 1194,
	525, 1194,
	528, 1194,
	529, 1194,
	530, 1194,
	531, 1194,
	532, 1194,
	533, 1194,
	535, 1194,
	536, 1194,
	537, 1194,
	538, 1194,
	543, 1194,
	544, 1194,
	545, 1194,
	546, 1194,
	547, 1194,
	548, 1194,
	-2, 0,
	-1, 731,
	182, 2205,
	498, 2205,
	556, 2205,
	575, 2205,
	-2, 0,
	-1, 732,
	182, 2306,
	498, 2306,
	556, 2306,
	575, 2306,
	-2, 0,
	-1, 733,
	182, 2192,
	498, 2192,
	556, 2192,
	575, 2192,
	-2, 0,
	-1, 735,
	182, 2435,
	498, 2435,
	556, 2435,
	575, 2435,
	-2, 0,
	-1, 737,
	182, 2474,
	498, 2474,
	556, 2474,
	575, 2474,
	-2, 0,
	-1, 744,
	182, 2333,
	498, 2333,
	556, 2333,
	575, 2333,
	-2, 643,
	-1, 773,
	575, 2141,
	578, 2141,
	-2, 906,
	-1, 774,
	575, 2143,
	578, 2143,
	-2, 907,
	-1, 775,
	575, 2142,
	578, 2142,
	-2, 908,
	-1, 776,
	578, 2068,
	-2, 909,
	-1, 799,
	179, 235,
	-2, 0,
	-1, 822,
	44, 2115,
	-2, 0,
	-1, 823,
	535, 1172,
	-2, 976,
	-1, 839,
	4, 1577,
	21, 1577,
	22, 1577,
	23, 1577,
	24, 1577,
	25, 1577,
	26, 1577,
	27, 1577,
	28, 1577,
	30, 1577,
	31, 1577,
	37, 1577,
	42, 1577,
	43, 1577,
	45, 1577,
	46, 1577,
	47, 1577,
	48, 1577,
	49, 1577,
	50, 1577,
	51, 1577,
	53, 1577,
	54, 1577,
	55, 1577,
	56, 1577,
	58, 1577,
	59, 1577,
	60, 1577,
	61, 1577,
	62, 1577,
	63, 1577,
	64, 1577,
	68, 1577,
	69, 1577,
	70, 1577,
	71, 1577,
	73, 1577,
	74, 1577,
	75, 1577,
	79, 1577,
	80, 1577,
	81, 1577,
	82, 1577,
	83, 1577,
	84, 1577,
	85, 1577,
	88, 1577,
	89, 1577,
	90, 1577,
	91, 1577,
	92, 1577,
	94, 1577,
	96, 1577,
	97, 1577,
	98, 1577,
	99, 1577,
	100, 1577,
	101, 1577,
	103, 1577,
	104, 1577,
	105, 1577,
	107, 1577,
	108, 1577,
	116, 1577,
	117, 1577,
	118, 1577,
	119, 1577,
	121, 1577,
	122, 1577,
	123, 1577,
	125, 1577,
	126, 1577,
	127, 1577,
	129, 1577,
	130, 1577,
	132, 1577,
	133, 1577,
	134, 1577,
	137, 1577,
	138, 1577,
	139, 1577,
	141, 1577,
	142, 1577,
	144, 1577,
	145, 1577,
	146, 1577,
	148, 1577,
	149, 1577,
	150, 1577,
	151, 1577,
	152, 1577,
	153, 1577,
	154, 1577,
	155, 1577,
	156, 1577,
	157, 1577,
	158, 1577,
	159, 1577,
	160, 1577,
	161, 1577,
	162, 1577,
	163, 1577,
	165, 1577,
	171, 1577,
	172, 1577,
	173, 1577,
	174, 1577,
	178, 1577,
	180, 1577,
	184, 1577,
	185, 1577,
	186, 1577,
	187, 1577,
	188, 1577,
	189, 1577,
	190, 1577,
	191, 1577,
	192, 1577,
	193, 1577,
	194, 1577,
	195, 1577,
	196, 1577,
	198, 1577,
	199, 1577,
	201, 1577,
	202, 1577,
	204, 1577,
	205, 1577,
	206, 1577,
	207, 1577,
	208, 1577,
	209, 1577,
	210, 1577,
	211, 1577,
	212, 1577,
	214, 1577,
	215, 1577,
	217, 1577,
	218, 1577,
	219, 1577,
	220, 1577,
	224, 1577,
	225, 1577,
	226, 1577,
	227, 1577,
	228, 1577,
	231, 1577,
	232, 1577,
	233, 1577,
	235, 1577,
	237, 1577,
	238, 1577,
	240, 1577,
	242, 1577,
	243, 1577,
	244, 1577,
	246, 1577,
	250, 1577,
	251, 1577,
	252, 1577,
	253, 1577,
	254, 1577,
	255, 1577,
	257, 1577,
	258, 1577,
	259, 1577,
	261, 1577,
	262, 1577,
	264, 1577,
	265, 1577,
	268, 1577,
	272, 1577,
	273, 1577,
	274, 1577,
	277, 1577,
	278, 1577,
	279, 1577,
	280, 1577,
	282, 1577,
	283, 1577,
	284, 1577,
	285, 1577,
	286, 1577,
	287, 1577,
	288, 1577,
	289, 1577,
	290, 1577,
	291, 1577,
	292, 1577,
	293, 1577,
	294, 1577,
	295, 1577,
	296, 1577,
	297, 1577,
	298, 1577,
	299, 1577,
	300, 1577,
	301, 1577,
	302, 1577,
	303, 1577,
	305, 1577,
	307, 1577,
	308, 1577,
	309, 1577,
	310, 1577,
	311, 1577,
	312, 1577,
	313, 1577,
	314, 1577,
	315, 1577,
	316, 1577,
	317, 1577,
	318, 1577,
	320, 1577,
	322, 1577,
	324, 1577,
	325, 1577,
	327, 1577,
	328, 1577,
	329, 1577,
	330, 1577,
	331, 1577,
	334, 1577,
	338, 1577,
	339, 1577,
	340, 1577,
	343, 1577,
	344, 1577,
	345, 1577,
	347, 1577,
	349, 1577,
	350, 1577,
	351, 1577,
	352, 1577,
	353, 1577,
	354, 1577,
	355, 1577,
	356, 1577,
	357, 1577,
	358, 1577,
	359, 1577,
	360, 1577,
	362, 1577,
	363, 1577,
	364, 1577,
	365, 1577,
	366, 1577,
	367, 1577,
	368, 1577,
	369, 1577,
	370, 1577,
	371, 1577,
	372, 1577,
	373, 1577,
	374, 1577,
	375, 1577,
	376, 1577,
	378, 1577,
	379, 1577,
	381, 1577,
	382, 1577,
	383, 1577,
	384, 1577,
	385, 1577,
	386, 1577,
	387, 1577,
	388, 1577,
	389, 1577,
	390, 1577,
	391, 1577,
	392, 1577,
	394, 1577,
	396, 1577,
	397, 1577,
	398, 1577,
	403, 1577,
	405, 1577,
	406, 1577,
	407, 1577,
	408, 1577,
	409, 1577,
	410, 1577,
	411, 1577,
	412, 1577,
	414, 1577,
	415, 1577,
	416, 1577,
	418, 1577,
	419, 1577,
	420, 1577,
	421, 1577,
	422, 1577,
	423, 1577,
	425, 1577,
	426, 1577,
	427, 1577,
	428, 1577,
	429, 1577,
	430, 1577,
	431, 1577,
	432, 1577,
	433, 1577,
	434, 1577,
	435, 1577,
	437, 1577,
	438, 1577,
	439, 1577,
	440, 1577,
	441, 1577,
	442, 1577,
	444, 1577,
	445, 1577,
	446, 1577,
	447, 1577,
	448, 1577,
	449, 1577,
	451, 1577,
	452, 1577,
	453, 1577,
	454, 1577,
	455, 1577,
	456, 1577,
	457, 1577,
	459, 1577,
	461, 1577,
	462, 1577,
	463, 1577,
	464, 1577,
	465, 1577,
	466, 1577,
	467, 1577,
	468, 1577,
	469, 1577,
	470, 1577,
	471, 1577,
	472, 1577,
	473, 1577,
	474, 1577,
	475, 1577,
	477, 1577,
	478, 1577,
	480, 1577,
	481, 1577,
	483, 1577,
	484, 1577,
	485, 1577,
	486, 1577,
	487, 1577,
	488, 1577,
	489, 1577,
	490, 1577,
	491, 1577,
	493, 1577,
	494, 1577,
	495, 1577,
	496, 1577,
	497, 1577,
	499, 1577,
	501, 1577,
	502, 1577,
	503, 1577,
	504, 1577,
	505, 1577,
	506, 1577,
	508, 1577,
	509, 1577,
	510, 1577,
	511, 1577,
	513, 1577,
	514, 1577,
	517, 1577,
	518, 1577,
	519, 1577,
	520, 1577,
	521, 1577,
	522, 1577,
	523, 1577,
	525, 1577,
	528, 1577,
	529, 1577,
	530, 1577,
	531, 1577,
	532, 1577,
	533, 1577,
	535, 1577,
	536, 1577,
	537, 1577,
	538, 1577,
	543, 1577,
	544, 1577,
	545, 1577,
	546, 1577,
	547, 1577,
	548, 1577,
	-2, 0,
	-1, 847,
	254, 369,
	-2, 0,
	-1, 917,
	383, 808,
	442, 808,
	481, 808,
	503, 808,
	-2, 0,
	-1, 918,
	383, 807,
	442, 807,
	481, 807,
	503, 807,
	-2, 747,
	-1, 922,
	1, 854,
	572, 854,
	574, 854,
	576, 854,
	-2, 0,
	-1, 923,
	1, 782,
	572, 782,
	574, 782,
	576, 782,
	-2, 0,
	-1, 924,
	1, 786,
	572, 786,
	574, 786,
	576, 786,
	-2, 0,
	-1, 925,
	1, 905,
	179, 905,
	572, 905,
	574, 905,
	576, 905,
	-2, 0,
	-1, 933,
	1, 813,
	572, 813,
	574, 813,
	576, 813,
	-2, 0,
	-1, 939,
	1, 854,
	572, 854,
	574, 854,
	576, 854,
	-2, 0,
	-1, 940,
	1, 856,
	572, 856,
	574, 856,
	576, 856,
	-2, 0,
	-1, 941,
	1, 859,
	572, 859,
	574, 859,
	576, 859,
	-2, 0,
	-1, 947,
	1, 876,
	572, 876,
	574, 876,
	576, 876,
	-2, 0,
	-1, 948,
	1, 878,
	572, 878,
	574, 878,
	576, 878,
	-2, 0,
	-1, 999,
	166, 1452,
	179, 1452,
	267, 1452,
	332, 1452,
	-2, 1388,
	-1, 1014,
	166, 1451,
	179, 1451,
	267, 1451,
	332, 1451,
	-2, 1385,
	-1, 1040,
	575, 2140,
	-2, 651,
	-1, 1068,
	5, 2132,
	573, 2130,
	-2, 2121,
	-1, 1076,
	5, 2153,
	573, 2150,
	-2, 2141,
	-1, 1077,
	5, 2154,
	573, 2151,
	-2, 2142,
	-1, 1085,
	575, 2138,
	-2, 2120,
	-1, 1086,
	573, 2556,
	-2, 2139,
	-1, 1109,
	573, 2555,
	-2, 2155,
	-1, 1110,
	5, 1652,
	-2, 2526,
	-1, 1111,
	5, 1653,
	-2, 2527,
	-1, 1112,
	5, 1654,
	-2, 2541,
	-1, 1113,
	5, 1655,
	-2, 2505,
	-1, 1114,
	5, 1656,
	-2, 2539,
	-1, 1115,
	5, 1664,
	-2, 2518,
	-1, 1116,
	5, 1651,
	-2, 2514,
	-1, 1117,
	5, 1651,
	-2, 2513,
	-1, 1118,
	5, 1651,
	-2, 2532,
	-1, 1119,
	5, 1662,
	-2, 2507,
	-1, 1120,
	5, 1667,
	-2, 2506,
	-1, 1121,
	5, 1669,
	-2, 2551,
	-1, 1124,
	5, 1691,
	-2, 2544,
	-1, 1125,
	5, 1683,
	-2, 2545,
	-1, 1126,
	5, 1691,
	-2, 2546,
	-1, 1127,
	5, 1687,
	-2, 2547,
	-1, 1128,
	5, 1637,
	-2, 2519,
	-1, 1129,
	5, 1638,
	-2, 2520,
	-1, 1130,
	5, 1639,
	-2, 2508,
	-1, 1158,
	5, 1674,
	-2, 2552,
	-1, 1159,
	5, 1675,
	-2, 2542,
	-1, 1160,
	5, 1676,
	536, 1676,
	-2, 2509,
	-1, 1161,
	5, 1677,
	536, 1677,
	-2, 2510,
	-1, 1198,
	573, 2150,
	-2, 2141,
	-1, 1199,
	573, 2151,
	-2, 2142,
	-1, 1298,
	182, 2474,
	498, 2474,
	556, 2474,
	575, 2474,
	-2, 0,
	-1, 1301,
	1, 629,
	576, 629,
	-2, 1305,
	-1, 1428,
	405, 2116,
	444, 2116,
	566, 2116,
	-2, 2106,
	-1, 1439,
	577, 2116,
	-2, 2117,
	-1, 1444,
	1, 1169,
	572, 1169,
	574, 1169,
	576, 1169,
	-2, 1437,
	-1, 1492,
	390, 975,
	535, 975,
	-2, 364,
	-1, 1508,
	44, 2114,
	-2, 941,
	-1, 1515,
	1, 1169,
	572, 1169,
	574, 1169,
	576, 1169,
	-2, 1437,
	-1, 1523,
	4, 1194,
	21, 1194,
	22, 1194,
	23, 1194,
	24, 1194,
	25, 1194,
	26, 1194,
	27, 1194,
	28, 1194,
	30, 1194,
	31, 1194,
	37, 1194,
	42, 1194,
	43, 1194,
	45, 1194,
	46, 1194,
	47, 1194,
	48, 1194,
	49, 1194,
	50, 1194,
	51, 1194,
	53, 1194,
	54, 1194,
	55, 1194,
	56, 1194,
	58, 1194,
	59, 1194,
	60, 1194,
	61, 1194,
	62, 1194,
	63, 1194,
	64, 1194,
	68, 1194,
	69, 1194,
	70, 1194,
	71, 1194,
	73, 1194,
	74, 1194,
	75, 1194,
	79, 1194,
	80, 1194,
	81, 1194,
	82, 1194,
	83, 1194,
	84, 1194,
	85, 1194,
	88, 1194,
	89, 1194,
	90, 1194,
	91, 1194,
	92, 1194,
	94, 1194,
	96, 1194,
	97, 1194,
	98, 1194,
	99, 1194,
	100, 1194,
	101, 1194,
	103, 1194,
	104, 1194,
	105, 1194,
	107, 1194,
	108, 1194,
	116, 1194,
	117, 1194,
	118, 1194,
	119, 1194,
	121, 1194,
	122, 1194,
	123, 1194,
	125, 1194,
	126, 1194,
	127, 1194,
	129, 1194,
	130, 1194,
	132, 1194,
	133, 1194,
	134, 1194,
	137, 1194,
	138, 1194,
	139, 1194,
	141, 1194,
	142, 1194,
	144, 1194,
	145, 1194,
	146, 1194,
	148, 1194,
	149, 1194,
	150, 1194,
	151, 1194,
	152, 1194,
	153, 1194,
	154, 1194,
	155, 1194,
	156, 1194,
	157, 1194,
	158, 1194,
	159, 1194,
	160, 1194,
	161, 1194,
	162, 1194,
	163, 1194,
	171, 1194,
	172, 1194,
	173, 1194,
	174, 1194,
	178, 1194,
	180, 1194,
	184, 1194,
	185, 1194,
	186, 1194,
	187, 1194,
	188, 1194,
	189, 1194,
	190, 1194,
	191, 1194,
	192, 1194,
	193, 1194,
	194, 1194,
	195, 1194,
	196, 1194,
	198, 1194,
	199, 1194,
	201, 1194,
	202, 1194,
	204, 1194,
	205, 1194,
	206, 1194,
	207, 1194,
	208, 1194,
	209, 1194,
	210, 1194,
	211, 1194,
	212, 1194,
	214, 1194,
	215, 1194,
	217, 1194,
	218, 1194,
	219, 1194,
	220, 1194,
	225, 1194,
	226, 1194,
	227, 1194,
	228, 1194,
	231, 1194,
	232, 1194,
	233, 1194,
	235, 1194,
	237, 1194,
	238, 1194,
	240, 1194,
	242, 1194,
	243, 1194,
	244, 1194,
	246, 1194,
	250, 1194,
	251, 1194,
	252, 1194,
	253, 1194,
	254, 1194,
	255, 1194,
	257, 1194,
	258, 1194,
	259, 1194,
	261, 1194,
	262, 1194,
	264, 1194,
	265, 1194,
	268, 1194,
	272, 1194,
	273, 1194,
	274, 1194,
	277, 1194,
	278, 1194,
	279, 1194,
	280, 1194,
	282, 1194,
	283, 1194,
	284, 1194,
	285, 1194,
	286, 1194,
	287, 1194,
	288, 1194,
	289, 1194,
	290, 1194,
	291, 1194,
	292, 1194,
	293, 1194,
	294, 1194,
	295, 1194,
	296, 1194,
	297, 1194,
	298, 1194,
	299, 1194,
	300, 1194,
	301, 1194,
	302, 1194,
	303, 1194,
	305, 1194,
	307, 1194,
	308, 1194,
	309, 1194,
	310, 1194,
	311, 1194,
	312, 1194,
	313, 1194,
	314, 1194,
	315, 1194,
	316, 1194,
	317, 1194,
	318, 1194,
	320, 1194,
	324, 1194,
	325, 1194,
	327, 1194,
	328, 1194,
	329, 1194,
	330, 1194,
	331, 1194,
	334, 1194,
	336, 1194,
	338, 1194,
	339, 1194,
	340, 1194,
	343, 1194,
	344, 1194,
	345, 1194,
	347, 1194,
	349, 1194,
	350, 1194,
	351, 1194,
	352, 1194,
	353, 1194,
	354, 1194,
	355, 1194,
	356, 1194,
	357, 1194,
	358, 1194,
	359, 1194,
	360, 1194,
	362, 1194,
	363, 1194,
	364, 1194,
	365, 1194,
	366, 1194,
	367, 1194,
	368, 1194,
	369, 1194,
	370, 1194,
	371, 1194,
	372, 1194,
	373, 1194,
	374, 1194,
	375, 1194,
	376, 1194,
	378, 1194,
	379, 1194,
	381, 1194,
	382, 1194,
	383, 1194,
	384, 1194,
	385, 1194,
	386, 1194,
	387, 1194,
	388, 1194,
	389, 1194,
	390, 1194,
	391, 1194,
	392, 1194,
	394, 1194,
	396, 1194,
	397, 1194,
	398, 1194,
	403, 1194,
	405, 1194,
	406, 1194,
	407, 1194,
	408, 1194,
	409, 1194,
	410, 1194,
	411, 1194,
	412, 1194,
	414, 1194,
	415, 1194,
	416, 1194,
	418, 1194,
	419, 1194,
	420, 1194,
	421, 1194,
	422, 1194,
	423, 1194,
	425, 1194,
	426, 1194,
	427, 1194,
	428, 1194,
	429, 1194,
	430, 1194,
	431, 1194,
	432, 1194,
	433, 1194,
	434, 1194,
	435, 1194,
	437, 1194,
	438, 1194,
	439, 1194,
	440, 1194,
	441, 1194,
	442, 1194,
	444, 1194,
	445, 1194,
	446, 1194,
	447, 1194,
	448, 1194,
	449, 1194,
	451, 1194,
	452, 1194,
	453, 1194,
	454, 1194,
	455, 1194,
	456, 1194,
	457, 1194,
	459, 1194,
	461, 1194,
	462, 1194,
	463, 1194,
	464, 1194,
	465, 1194,
	466, 1194,
	467, 1194,
	468, 1194,
	469, 1194,
	470, 1194,
	471, 1194,
	472, 1194,
	473, 1194,
	474, 1194,
	475, 1194,
	477, 1194,
	478, 1194,
	480, 1194,
	481, 1194,
	483, 1194,
	484, 1194,
	485, 1194,
	486, 1194,
	487, 1194,
	488, 1194,
	489, 1194,
	490, 1194,
	491, 1194,
	493, 1194,
	494, 1194,
	495, 1194,
	496, 1194,
	497, 1194,
	499, 1194,
	501, 1194,
	502, 1194,
	503, 1194,
	504, 1194,
	505, 1194,
	506, 1194,
	508, 1194,
	509, 1194,
	510, 1194,
	511, 1194,
	513, 1194,
	514, 1194,
	517, 1194,
	518, 1194,
	519, 1194,
	520, 1194,
	521, 1194,
	522, 1194,
	523, 1194,
	525, 1194,
	528, 1194,
	529, 1194,
	530, 1194,
	531, 1194,
	532, 1194,
	533, 1194,
	535, 1194,
	536, 1194,
	537, 1194,
	538, 1194,
	543, 1194,
	544, 1194,
	545, 1194,
	546, 1194,
	547, 1194,
	548, 1194,
	-2, 0,
	-1, 1546,
	1, 502,
	572, 502,
	574, 502,
	576, 502,
	-2, 1408,
	-1, 1549,
	4, 2550,
	11, 2550,
	12, 2550,
	14, 2550,
	15, 2550,
	16, 2550,
	17, 2550,
	18, 2550,
	19, 2550,
	21, 2550,
	22, 2550,
	23, 2550,
	24, 2550,
	25, 2550,
	26, 2550,
	27, 2550,
	28, 2550,
	30, 2550,
	31, 2550,
	34, 2550,
	35, 2550,
	37, 2550,
	39, 2550,
	42, 2550,
	43, 2550,
	45, 2550,
	46, 2550,
	47, 2550,
	48, 2550,
	49, 2550,
	50, 2550,
	51, 2550,
	53, 2550,
	54, 2550,
	55, 2550,
	56, 2550,
	58, 2550,
	59, 2550,
	60, 2550,
	61, 2550,
	62, 2550,
	63, 2550,
	64, 2550,
	68, 2550,
	69, 2550,
	70, 2550,
	71, 2550,
	73, 2550,
	74, 2550,
	75, 2550,
	76, 2550,
	79, 2550,
	80, 2550,
	81, 2550,
	82, 2550,
	83, 2550,
	84, 2550,
	85, 2550,
	86, 2550,
	88, 2550,
	89, 2550,
	90, 2550,
	91, 2550,
	92, 2550,
	94, 2550,
	95, 2550,
	96, 2550,
	97, 2550,
	98, 2550,
	99, 2550,
	100, 2550,
	101, 2550,
	103, 2550,
	104, 2550,
	105, 2550,
	106, 2550,
	107, 2550,
	108, 2550,
	116, 2550,
	117, 2550,
	118, 2550,
	119, 2550,
	121, 2550,
	122, 2550,
	123, 2550,
	125, 2550,
	126, 2550,
	127, 2550,
	129, 2550,
	130, 2550,
	132, 2550,
	133, 2550,
	134, 2550,
	137, 2550,
	138, 2550,
	139, 2550,
	141, 2550,
	142, 2550,
	144, 2550,
	145, 2550,
	146, 2550,
	148, 2550,
	149, 2550,
	150, 2550,
	151, 2550,
	152, 2550,
	153, 2550,
	154, 2550,
	155, 2550,
	156, 2550,
	157, 2550,
	158, 2550,
	159, 2550,
	160, 2550,
	161, 2550,
	162, 2550,
	163, 2550,
	167, 2550,
	168, 2550,
	169, 2550,
	170, 2550,
	171, 2550,
	172, 2550,
	173, 2550,
	174, 2550,
	177, 2550,
	178, 2550,
	180, 2550,
	183, 2550,
	184, 2550,
	185, 2550,
	186, 2550,
	187, 2550,
	188, 2550,
	189, 2550,
	190, 2550,
	191, 2550,
	192, 2550,
	193, 2550,
	194, 2550,
	195, 2550,
	196, 2550,
	198, 2550,
	199, 2550,
	201, 2550,
	202, 2550,
	204, 2550,
	205, 2550,
	206, 2550,
	207, 2550,
	208, 2550,
	209, 2550,
	210, 2550,
	211, 2550,
	212, 2550,
	213, 2550,
	214, 2550,
	215, 2550,
	216, 2550,
	217, 2550,
	218, 2550,
	219, 2550,
	220, 2550,
	222, 2550,
	223, 2550,
	225, 2550,
	226, 2550,
	227, 2550,
	228, 2550,
	230, 2550,
	231, 2550,
	232, 2550,
	233, 2550,
	235, 2550,
	237, 2550,
	238, 2550,
	239, 2550,
	240, 2550,
	241, 2550,
	242, 2550,
	243, 2550,
	244, 2550,
	245, 2550,
	246, 2550,
	248, 2550,
	249, 2550,
	250, 2550,
	251, 2550,
	252, 2550,
	253, 2550,
	254, 2550,
	255, 2550,
	257, 2550,
	258, 2550,
	259, 2550,
	261, 2550,
	262, 2550,
	263, 2550,
	264, 2550,
	265, 2550,
	266, 2550,
	268, 2550,
	272, 2550,
	273, 2550,
	274, 2550,
	277, 2550,
	278, 2550,
	279, 2550,
	280, 2550,
	281, 2550,
	282, 2550,
	283, 2550,
	284, 2550,
	285, 2550,
	286, 2550,
	287, 2550,
	288, 2550,
	289, 2550,
	290, 2550,
	291, 2550,
	292, 2550,
	293, 2550,
	294, 2550,
	295, 2550,
	296, 2550,
	297, 2550,
	298, 2550,
	299, 2550,
	300, 2550,
	301, 2550,
	302, 2550,
	303, 2550,
	305, 2550,
	306, 2550,
	307, 2550,
	308, 2550,
	309, 2550,
	310, 2550,
	311, 2550,
	312, 2550,
	313, 2550,
	314, 2550,
	315, 2550,
	316, 2550,
	317, 2550,
	318, 2550,
	320, 2550,
	323, 2550,
	324, 2550,
	325, 2550,
	327, 2550,
	328, 2550,
	329, 2550,
	330, 2550,
	331, 2550,
	334, 2550,
	338, 2550,
	339, 2550,
	340, 2550,
	341, 2550,
	343, 2550,
	344, 2550,
	345, 2550,
	347, 2550,
	349, 2550,
	350, 2550,
	351, 2550,
	352, 2550,
	353, 2550,
	354, 2550,
	355, 2550,
	356, 2550,
	357, 2550,
	358, 2550,
	359, 2550,
	360, 2550,
	362, 2550,
	363, 2550,
	364, 2550,
	365, 2550,
	366, 2550,
	367, 2550,
	368, 2550,
	369, 2550,
	370, 2550,
	371, 2550,
	372, 2550,
	373, 2550,
	374, 2550,
	375, 2550,
	376, 2550,
	378, 2550,
	379, 2550,
	381, 2550,
	382, 2550,
	383, 2550,
	384, 2550,
	385, 2550,
	386, 2550,
	387, 2550,
	388, 2550,
	389, 2550,
	390, 2550,
	391, 2550,
	392, 2550,
	394, 2550,
	396, 2550,
	397, 2550,
	398, 2550,
	403, 2550,
	404, 2550,
	405, 2550,
	406, 2550,
	407, 2550,
	408, 2550,
	409, 2550,
	410, 2550,
	411, 2550,
	412, 2550,
	414, 2550,
	415, 2550,
	416, 2550,
	417, 2550,
	418, 2550,
	419, 2550,
	420, 2550,
	421, 2550,
	422, 2550,
	423, 2550,
	424, 2550,
	425, 2550,
	426, 2550,
	427, 2550,
	428, 2550,
	429, 2550,
	430, 2550,
	431, 2550,
	432, 2550,
	433, 2550,
	434, 2550,
	435, 2550,
	437, 2550,
	438, 2550,
	439, 2550,
	440, 2550,
	441, 2550,
	442, 2550,
	444, 2550,
	445, 2550,
	446, 2550,
	447, 2550,
	448, 2550,
	449, 2550,
	450, 2550,
	451, 2550,
	452, 2550,
	453, 2550,
	454, 2550,
	455, 2550,
	456, 2550,
	457, 2550,
	459, 2550,
	461, 2550,
	462, 2550,
	463, 2550,
	464, 2550,
	465, 2550,
	466, 2550,
	467, 2550,
	468, 2550,
	469, 2550,
	470, 2550,
	471, 2550,
	472, 2550,
	473, 2550,
	474, 2550,
	475, 2550,
	477, 2550,
	478, 2550,
	480, 2550,
	481, 2550,
	483, 2550,
	484, 2550,
	485, 2550,
	486, 2550,
	487, 2550,
	488, 2550,
	489, 2550,
	490, 2550,
	491, 2550,
	493, 2550,
	494, 2550,
	495, 2550,
	496, 2550,
	497, 2550,
	499, 2550,
	501, 2550,
	502, 2550,
	503, 2550,
	504, 2550,
	505, 2550,
	506, 2550,
	508, 2550,
	509, 2550,
	510, 2550,
	511, 2550,
	513, 2550,
	514, 2550,
	517, 2550,
	518, 2550,
	519, 2550,
	520, 2550,
	521, 2550,
	522, 2550,
	523, 2550,
	525, 2550,
	528, 2550,
	529, 2550,
	530, 2550,
	531, 2550,
	532, 2550,
	533, 2550,
	535, 2550,
	536, 2550,
	537, 2550,
	538, 2550,
	543, 2550,
	544, 2550,
	545, 2550,
	546, 2550,
	547, 2550,
	548, 2550,
	549, 2550,
	551, 2550,
	554, 2550,
	555, 2550,
	556, 2550,
	557, 2550,
	558, 2550,
	559, 2550,
	561, 2550,
	562, 2550,
	563, 2550,
	564, 2550,
	565, 2550,
	566, 2550,
	567, 2550,
	568, 2550,
	569, 2550,
	571, 2550,
	574, 2550,
	575, 2550,
	577, 2550,
	578, 2550,
	-2, 0,
	-1, 1554,
	182, 2435,
	498, 2435,
	556, 2435,
	575, 2435,
	-2, 0,
	-1, 1603,
	383, 808,
	442, 808,
	481, 808,
	503, 808,
	-2, 0,
	-1, 1630,
	1, 803,
	572, 803,
	574, 803,
	576, 803,
	-2, 0,
	-1, 1631,
	1, 841,
	572, 841,
	574, 841,
	576, 841,
	-2, 0,
	-1, 1632,
	1, 849,
	572, 849,
	574, 849,
	576, 849,
	-2, 0,
	-1, 1635,
	1, 812,
	572, 812,
	574, 812,
	576, 812,
	-2, 0,
	-1, 1637,
	1, 816,
	572, 816,
	574, 816,
	576, 816,
	-2, 0,
	-1, 1643,
	1, 823,
	572, 823,
	574, 823,
	576, 823,
	-2, 0,
	-1, 1671,
	1, 2496,
	572, 2496,
	574, 2496,
	575, 2496,
	576, 2496,
	-2, 874,
	-1, 1672,
	1, 2432,
	572, 2432,
	574, 2432,
	575, 2432,
	576, 2432,
	-2, 875,
	-1, 1690,
	1, 1300,
	576, 1300,
	-2, 1305,
	-1, 1693,
	166, 1451,
	179, 1451,
	267, 1451,
	332, 1451,
	-2, 1389,
	-1, 1787,
	147, 1410,
	166, 1410,
	179, 1410,
	234, 1410,
	267, 1410,
	332, 1410,
	342, 1410,
	515, 1410,
	-2, 1852,
	-1, 1847,
	574, 2002,
	-2, 0,
	-1, 1882,
	147, 1410,
	166, 1410,
	179, 1410,
	234, 1410,
	267, 1410,
	332, 1410,
	342, 1410,
	515, 1410,
	-2, 1538,
	-1, 1931,
	573, 1679,
	-2, 1667,
	-1, 2009,
	1, 631,
	576, 631,
	-2, 1305,
	-1, 2129,
	216, 236,
	-2, 2149,
	-1, 2130,
	216, 237,
	-2, 280,
	-1, 2232,
	1, 805,
	572, 805,
	574, 805,
	576, 805,
	-2, 0,
	-1, 2233,
	1, 843,
	572, 843,
	574, 843,
	576, 843,
	-2, 0,
	-1, 2234,
	1, 851,
	572, 851,
	574, 851,
	576, 851,
	-2, 0,
	-1, 2268,
	1, 825,
	572, 825,
	574, 825,
	576, 825,
	-2, 0,
	-1, 2318,
	422, 1478,
	423, 1478,
	-2, 1712,
	-1, 2349,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1732,
	-1, 2350,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1733,
	-1, 2351,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1734,
	-1, 2352,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1735,
	-1, 2353,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1736,
	-1, 2354,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1737,
	-1, 2355,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1738,
	-1, 2356,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1739,
	-1, 2368,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1751,
	-1, 2369,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1752,
	-1, 2370,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1753,
	-1, 2373,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1758,
	-1, 2379,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1762,
	-1, 2381,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1770,
	-1, 2382,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1771,
	-1, 2383,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1772,
	-1, 2384,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1773,
	-1, 2520,
	5, 2153,
	182, 2013,
	573, 2150,
	-2, 2141,
	-1, 2521,
	182, 2014,
	-2, 2501,
	-1, 2522,
	182, 2015,
	-2, 2332,
	-1, 2523,
	182, 2016,
	-2, 2221,
	-1, 2524,
	182, 2017,
	-2, 2273,
	-1, 2525,
	182, 2018,
	-2, 2317,
	-1, 2526,
	182, 2019,
	-2, 2430,
	-1, 2527,
	182, 2020,
	-2, 1835,
	-1, 2597,
	1, 1539,
	2, 1539,
	106, 1539,
	147, 1539,
	166, 1539,
	179, 1539,
	183, 1539,
	200, 1539,
	203, 1539,
	230, 1539,
	234, 1539,
	245, 1539,
	263, 1539,
	267, 1539,
	306, 1539,
	332, 1539,
	336, 1539,
	342, 1539,
	413, 1539,
	417, 1539,
	515, 1539,
	526, 1539,
	540, 1539,
	541, 1539,
	542, 1539,
	552, 1539,
	572, 1539,
	574, 1539,
	576, 1539,
	578, 1539,
	-2, 1538,
	-1, 2610,
	573, 2122,
	-2, 2136,
	-1, 2612,
	53, 1437,
	132, 1437,
	-2, 296,
	-1, 2637,
	573, 1678,
	-2, 1668,
	-1, 2809,
	1, 1169,
	572, 1169,
	574, 1169,
	576, 1169,
	-2, 1437,
	-1, 2974,
	337, 1481,
	-2, 2540,
	-1, 2975,
	337, 1482,
	-2, 2416,
	-1, 2979,
	422, 2079,
	423, 2079,
	-2, 1833,
	-1, 2980,
	422, 2083,
	423, 2083,
	-2, 1834,
	-1, 2981,
	422, 2080,
	423, 2080,
	-2, 1833,
	-1, 2982,
	422, 2084,
	423, 2084,
	-2, 1834,
	-1, 2995,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1760,
	-1, 2996,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1764,
	-1, 3002,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1766,
	-1, 3242,
	1, 628,
	572, 628,
	574, 628,
	576, 628,
	-2, 1305,
	-1, 3384,
	44, 2114,
	-2, 942,
	-1, 3389,
	1, 1169,
	572, 1169,
	574, 1169,
	576, 1169,
	-2, 1437,
	-1, 3493,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1768,
	-1, 3500,
	239, 0,
	241, 0,
	323, 0,
	-2, 1787,
	-1, 3567,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1816,
	-1, 3568,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1817,
	-1, 3569,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1818,
	-1, 3573,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1822,
	-1, 3574,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1823,
	-1, 3575,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1824,
	-1, 3621,
	573, 2123,
	-2, 2137,
	-1, 3775,
	575, 2657,
	-2, 1363,
	-1, 3832,
	239, 0,
	241, 0,
	323, 0,
	-2, 1788,
	-1, 3835,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1791,
	-1, 3836,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1793,
	-1, 3931,
	575, 2138,
	-2, 1204,
	-1, 4061,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1792,
	-1, 4062,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1794,
	-1, 4073,
	239, 0,
	-2, 1825,
	-1, 4239,
	239, 0,
	-2, 1826,
	-1, 4424,
	50, 0,
	213, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 2504,
}

const sqlPrivate = 57344

const sqlLast = 119155

var sqlAct = [...]int{
	260, 4519, 4164, 4279, 2885, 2872, 3153, 4301, 4118, 3373,
	4476, 4297, 4405, 4423, 4434, 4545, 4393, 2126, 4319, 4374,
	3374, 4435, 4357, 4436, 2760, 4488, 4377, 4171, 2200, 1456,
	4271, 3532, 3815, 4105, 4192, 4018, 4243, 4013, 1202, 3966,
	3984, 4123, 4422, 2552, 3485, 4082, 2328, 4050, 1024, 1274,
	3267, 3767, 3759, 2209, 3927, 3998, 1263, 2742, 4180, 2988,
	3708, 3912, 1270, 3928, 1191, 3319, 1015, 3369, 1991, 4206,
	2701, 3406, 1918, 3400, 775, 1702, 2329, 2396, 3742, 4023,
	3253, 2336, 3726, 1256, 3359, 3270, 1334, 1079, 4078, 3728,
	3445, 2907, 2772, 2064, 742, 2894, 3447, 2861, 775, 2842,
	1425, 1888, 2832, 3624, 2896, 1966, 1068, 3196, 3176, 2904,
	2887, 3871, 3168, 3814, 3136, 2856, 2858, 2893, 2873, 1276,
	2121, 3157, 1122, 2590, 252, 2120, 849, 2074, 1611, 3135,
	1023, 172, 4520, 2703, 1857, 3159, 2440, 1833, 4244, 2333,
	1570, 3592, 2438, 4, 2409, 2589, 3264, 1795, 1432, 1510,
	1268, 2592, 2173, 2115, 254, 253, 2903, 770, 2972, 2843,
	2786, 1182, 2106, 1317, 1072, 2045, 2207, 1690, 2741, 1989,
	2099, 2048, 2570, 1858, 3203, 2393, 2429, 2317, 2035, 2298,
	2300, 3371, 1242, 2161, 1265, 1077, 4298, 2866, 2622, 2549,
	1547, 1568, 1513, 776, 2686, 673, 777, 2432, 1877, 1303,
	2621, 659, 1185, 2897, 1867, 681, 2560, 1828, 2579, 1164,
	2410, 2516, 2482, 105, 1780, 1703, 2299, 724, 1704, 2301,
	181, 172, 1630, 736, 1874, 1643, 2160, 1199, 781, 784,
	1451, 2063, 2186, 772, 842, 182, 1545, 1538, 1967, 1070,
	1187, 4477, 2322, 4320, 1253, 1053, 676, 1964, 44, 43,
	684, 1919, 781, 784, 41, 32, 30, 1162, 28, 1181,
	3023, 1462, 1709, 699, 911, 1689, 823, 931, 3606, 3019,
	3607, 1980, 1455, 1636, 1980, 4616, 4606, 3155, 4592, 2569,
	3425, 4591, 2569, 1980, 1980, 2569, 4581, 1980, 4563, 1019,
	2135, 4561, 4122, 1980, 4507, 4122, 4465, 4458, 2135, 4456,
	4466, 2569, 4453, 2569, 4450, 4420, 4454, 4419, 4451, 2135,
	4418, 2135, 4413, 4412, 2001, 3415, 2001, 2001, 4403, 4401,
	4372, 3425, 4122, 4122, 4122, 843, 4344, 1019, 4337, 3416,
	2628, 864, 2569, 1197, 4336, 4331, 4330, 1577, 2569, 4122,
	4122, 4324, 4293, 4241, 4223, 2135, 3976, 2628, 3802, 3211,
	4220, 3226, 3032, 72, 2135, 846, 845, 4217, 3033, 4173,
	4138, 4122, 1179, 4174, 2135, 1168, 3225, 1169, 4137, 73,
	1165, 1165, 2135, 4129, 4128, 4121, 4089, 2135, 4122, 4122,
	2135, 1312, 4063, 2647, 4042, 77, 2628, 1563, 2001, 2135,
	4031, 3961, 3949, 1000, 3425, 2569, 2569, 1020, 3834, 3783,
	3777, 3740, 2628, 3442, 3442, 3741, 3616, 2208, 999, 3614,
	3617, 3599, 1312, 3615, 3516, 2569, 3512, 3441, 2135, 3432,
	2569, 3442, 90, 3433, 3152, 84, 3147, 3146, 2569, 1998,
	2569, 2569, 3099, 3073, 2624, 3065, 3100, 3074, 3596, 3066,
	1717, 1718, 3063, 1014, 3034, 1009, 2569, 2911, 2569, 2883,
	1464, 2001, 2882, 2196, 2670, 2562, 2196, 2627, 2569, 2435,
	1213, 2628, 847, 2646, 1748, 2619, 2987, 1220, 2613, 2569,
	2135, 1720, 2135, 2569, 2568, 2195, 104, 1166, 2569, 2196,
	1476, 90, 101, 4345, 4245, 4236, 4224, 1717, 1718, 2001,
	224, 3596, 2561, 4011, 3976, 3950, 3802, 3433, 2763, 2068,
	2685, 2014, 1979, 1995, 1998, 1719, 2838, 2134, 2780, 2683,
	1853, 1748, 1450, 3696, 1464, 3488, 3464, 1875, 1720, 2109,
	3417, 39, 1613, 4441, 2606, 2569, 1717, 1718, 2605, 1750,
	1751, 1752, 1760, 1761, 1762, 2604, 226, 2603, 91, 3418,
	1214, 2602, 224, 1170, 1167, 2436, 1463, 1008, 1007, 1753,
	1748, 1006, 1719, 1005, 1004, 2949, 3887, 1720, 1003, 1002,
	998, 3846, 1739, 3022, 1464, 1766, 997, 996, 1717, 1718,
	995, 994, 993, 992, 991, 990, 989, 988, 987, 986,
	985, 984, 983, 982, 909, 225, 908, 907, 226, 906,
	905, 1719, 1717, 1718, 904, 903, 218, 2869, 902, 1720,
	901, 1739, 900, 899, 898, 219, 1725, 897, 1717, 1718,
	1736, 896, 895, 894, 893, 892, 1748, 891, 1981, 890,
	889, 1981, 888, 1720, 887, 886, 2437, 183, 2434, 885,
	1981, 1981, 1748, 1719, 1981, 884, 883, 225, 882, 1720,
	1981, 881, 880, 1742, 1743, 1744, 1745, 879, 878, 877,
	867, 1747, 1749, 1725, 1470, 866, 862, 1719, 861, 855,
	854, 841, 840, 798, 797, 796, 795, 1739, 787, 786,
	785, 757, 748, 1719, 1978, 747, 1736, 746, 730, 183,
	248, 94, 1742, 1743, 1744, 1745, 247, 1475, 246, 245,
	244, 243, 1725, 242, 241, 240, 239, 238, 1747, 1749,
	224, 237, 236, 235, 234, 233, 232, 224, 231, 230,
	1740, 229, 228, 145, 227, 4025, 3634, 1279, 1077, 1075,
	3610, 3443, 2851, 1464, 3199, 3415, 1455, 3828, 1757, 3045,
	1074, 1767, 180, 97, 1725, 100, 3028, 1747, 1749, 2932,
	2819, 1077, 2632, 2611, 2203, 1077, 226, 1214, 1742, 1743,
	1744, 1745, 1878, 226, 1763, 2596, 1764, 1740, 1725, 224,
	2043, 1337, 1998, 1734, 1735, 1337, 2465, 848, 2451, 1279,
	3150, 224, 145, 2439, 1725, 1716, 2449, 2000, 1901, 1806,
	1836, 1755, 4116, 1458, 1323, 2657, 1201, 1835, 1979, 1316,
	1077, 1307, 1077, 1321, 1077, 225, 1740, 1998, 1995, 4421,
	1279, 2646, 225, 1747, 1749, 226, 218, 2293, 3151, 1839,
	1638, 1836, 4400, 218, 1581, 219, 4308, 226, 1835, 1747,
	1749, 224, 219, 1440, 2202, 1279, 4233, 4077, 4248, 1734,
	1735, 147, 1797, 4227, 1435, 4032, 4010, 183, 1765, 1264,
	1834, 1178, 3894, 4225, 183, 1279, 184, 1430, 3869, 3868,
	1279, 2561, 3862, 1741, 225, 3861, 1754, 3860, 1077, 3745,
	1077, 1469, 1740, 1214, 1279, 218, 225, 226, 3853, 1567,
	1077, 3852, 1077, 3850, 219, 3845, 3842, 218, 1740, 3841,
	1746, 1454, 3739, 1519, 1522, 2433, 219, 1428, 3638, 3637,
	1439, 1264, 3636, 1247, 1250, 3620, 844, 1797, 3587, 1287,
	1741, 3586, 3585, 1260, 3508, 1301, 3504, 3194, 183, 224,
	2768, 2641, 1804, 1525, 224, 4027, 225, 1279, 1442, 1746,
	3143, 1330, 3134, 1422, 1427, 1022, 3107, 218, 3104, 3103,
	3101, 3108, 3109, 781, 784, 1077, 219, 3072, 1077, 1741,
	3071, 3070, 3067, 3064, 3044, 3027, 1194, 1717, 1718, 3020,
	2884, 1264, 1264, 3108, 3109, 226, 1799, 1193, 183, 1296,
	226, 2727, 2597, 2853, 1548, 1758, 2422, 1716, 2142, 1715,
	2140, 1748, 1453, 1508, 4610, 1452, 172, 172, 1720, 2176,
	224, 1798, 1539, 1796, 4555, 1746, 3694, 4554, 4521, 1550,
	1552, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 3746,
	1582, 4475, 4093, 4473, 225, 1741, 3123, 1203, 3534, 225,
	4364, 4300, 1719, 3108, 3109, 218, 4289, 4286, 4285, 4284,
	218, 1741, 1307, 4265, 219, 1307, 226, 4247, 4246, 219,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 2868, 4221, 2405, 2630,
	4205, 183, 1051, 4204, 2399, 4190, 4187, 4186, 1020, 4134,
	3148, 1077, 4112, 4075, 1756, 4058, 1694, 1077, 1652, 1731,
	1732, 1738, 1759, 1737, 1733, 225, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 224, 218, 4057, 224, 3856,
	4039, 4038, 4001, 3855, 3977, 219, 3886, 3114, 3746, 1541,
	3867, 3803, 3797, 3794, 3683, 3682, 3108, 3109, 3669, 3126,
	3127, 3128, 3668, 1725, 3666, 3602, 3590, 183, 3499, 3114,
	1562, 1721, 1722, 1723, 1724, 1726, 1727, 1688, 1784, 3830,
	3217, 226, 1576, 3444, 226, 3426, 224, 3392, 3331, 1737,
	1733, 3298, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726,
	1727, 2852, 4026, 3269, 3421, 3219, 3049, 3048, 1747, 1749,
	1786, 1721, 1722, 1723, 1724, 1726, 1727, 3043, 3011, 2831,
	1544, 1842, 1077, 1077, 1077, 1841, 1840, 1587, 1077, 3114,
	225, 3123, 226, 225, 1837, 1199, 1604, 1199, 1829, 1827,
	2639, 218, 2638, 2608, 218, 1639, 2601, 2567, 2447, 1900,
	219, 3124, 1337, 219, 1855, 1856, 1851, 1850, 1849, 1848,
	1077, 1847, 1846, 775, 1845, 2204, 1844, 1740, 1843, 1936,
	775, 1864, 183, 1279, 1824, 183, 1823, 1822, 1821, 1820,
	1819, 225, 1699, 1904, 1818, 1698, 1817, 1691, 1816, 1815,
	1286, 1814, 218, 1915, 1000, 1813, 1812, 1811, 224, 1810,
	1962, 219, 1799, 1911, 1785, 1783, 1778, 1295, 1218, 999,
	1693, 1209, 4249, 4004, 1838, 3890, 3838, 3633, 3613, 3605,
	3031, 2599, 3114, 183, 1020, 1695, 1909, 3892, 3632, 1195,
	1712, 1713, 1798, 3124, 3215, 1781, 1896, 1320, 1905, 1279,
	3952, 1197, 3191, 1197, 226, 4552, 1077, 1717, 1718, 4544,
	1279, 3108, 3109, 224, 2034, 1318, 1930, 1861, 1862, 3108,
	3109, 2761, 1461, 1908, 1468, 1165, 1474, 1544, 1077, 172,
	1312, 2034, 1885, 4287, 1337, 1830, 1831, 4176, 1720, 4175,
	4181, 4030, 1439, 224, 3129, 3979, 1878, 3978, 2464, 2007,
	2450, 1933, 1970, 225, 3125, 1319, 3951, 3889, 2448, 226,
	3806, 3805, 1307, 4115, 218, 3804, 3608, 1313, 3428, 224,
	1741, 3427, 1719, 219, 2034, 1836, 2041, 781, 784, 3486,
	3324, 1907, 1835, 2032, 781, 784, 3124, 4228, 1439, 226,
	1561, 1686, 1566, 1312, 3069, 183, 1886, 4226, 2006, 1883,
	3068, 1819, 1575, 1819, 1580, 2993, 3749, 2729, 225, 1315,
	1020, 1603, 2020, 3681, 1543, 226, 1312, 1876, 1970, 218,
	3271, 1653, 1177, 980, 1808, 3376, 2746, 3375, 219, 1970,
	4417, 1854, 2201, 4172, 4461, 1880, 3125, 1612, 225, 1983,
	4446, 4433, 3360, 2908, 3301, 1613, 2122, 1895, 1894, 218,
	183, 3705, 3701, 1893, 1891, 1890, 1912, 1889, 219, 1279,
	1279, 3437, 3687, 1959, 225, 1637, 981, 2224, 1924, 1337,
	3461, 1916, 4079, 2068, 3240, 218, 2009, 3155, 3536, 2430,
	183, 1309, 3367, 2435, 219, 3114, 4455, 2637, 4452, 1852,
	1805, 3119, 3117, 3118, 3110, 3111, 3112, 3113, 3115, 3116,
	4442, 3037, 1832, 2170, 1518, 1447, 183, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 3110, 3111, 3112, 3113,
	3115, 3116, 1290, 2177, 1246, 3411, 3661, 2056, 4280, 3125,
	2774, 1591, 3325, 4014, 2093, 2777, 2098, 4371, 3718, 2103,
	4262, 3274, 3676, 2891, 2865, 2005, 2003, 3353, 2012, 3108,
	3109, 4504, 3126, 3127, 3128, 1717, 1718, 4505, 3480, 4155,
	1314, 1543, 1279, 3940, 1279, 1486, 1279, 4443, 2037, 2436,
	978, 2027, 2010, 3119, 3117, 3118, 3110, 3111, 3112, 3113,
	3115, 3116, 1279, 1279, 4535, 2671, 1720, 2705, 1650, 4605,
	3244, 1494, 2631, 1279, 4148, 2073, 976, 4140, 2689, 2127,
	2132, 1651, 4100, 3246, 3717, 1279, 836, 1279, 1279, 1279,
	961, 3974, 3714, 2687, 974, 781, 784, 1310, 972, 2124,
	1719, 2021, 3713, 2166, 3123, 969, 1311, 1018, 2274, 2272,
	775, 1320, 2107, 3707, 2223, 3700, 3698, 3648, 3647, 3356,
	3210, 1448, 3042, 2689, 2211, 3041, 3040, 2169, 3108, 3109,
	2437, 2171, 2434, 3039, 1453, 2997, 2183, 1452, 2687, 3120,
	3121, 3122, 2784, 3664, 2478, 2783, 3119, 3117, 3118, 3110,
	3111, 3112, 3113, 3115, 3116, 1495, 2779, 2102, 2770, 2216,
	2759, 1548, 2091, 1548, 2092, 2758, 1649, 2755, 2754, 1319,
	2733, 2133, 2720, 2620, 2380, 2206, 2708, 1692, 1313, 2477,
	2338, 1531, 2191, 1530, 3216, 2228, 2862, 837, 1589, 1529,
	3462, 1528, 2291, 4056, 1017, 3114, 1077, 2731, 1077, 2678,
	1892, 1725, 2026, 2025, 2308, 1077, 2034, 2036, 1936, 1936,
	1337, 2220, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 2153, 1077, 2152,
	1077, 1077, 1077, 1077, 2212, 1020, 2193, 1020, 2180, 2189,
	2185, 3271, 4536, 2306, 781, 784, 1634, 3899, 1296, 2310,
	966, 1312, 1077, 2201, 1503, 1077, 1077, 2439, 2197, 1584,
	2198, 2297, 1541, 1077, 2188, 1490, 2188, 1077, 1320, 1077,
	1077, 2065, 1309, 1302, 3114, 1930, 1930, 1337, 1232, 3124,
	2215, 2096, 1019, 1077, 1077, 1077, 1077, 3936, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 3300, 2232, 2411, 2412,
	2395, 2612, 2029, 2151, 2061, 2233, 2286, 3898, 2750, 2395,
	1933, 1933, 2411, 2427, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 2250, 3953, 1727, 1319, 1077, 2283, 3116,
	2743, 2744, 2066, 2067, 3112, 3113, 3115, 3116, 2473, 1199,
	2719, 2268, 1662, 2403, 1633, 1605, 1337, 2743, 2744, 2278,
	2401, 1314, 2707, 4439, 2970, 1199, 2321, 2519, 2519, 2533,
	2430, 2411, 2062, 1449, 2553, 2555, 2234, 1634, 2985, 2433,
	2559, 1077, 1337, 2237, 1194, 1585, 1194, 4273, 3124, 4565,
	2294, 2296, 2307, 2308, 2295, 1193, 1601, 1193, 2309, 2302,
	2743, 2744, 1985, 755, 1648, 1987, 4539, 1685, 2718, 1313,
	1000, 1992, 2190, 1000, 1000, 1994, 3672, 4504, 1310, 1896,
	1997, 3470, 2285, 2031, 2609, 2325, 2426, 1311, 2326, 2327,
	3724, 1613, 3125, 2231, 3469, 1697, 1631, 1924, 1924, 3108,
	3109, 4055, 3126, 3127, 3128, 2730, 2475, 1613, 2584, 2334,
	2335, 2476, 2306, 2946, 2479, 1197, 2480, 2481, 3108, 3109,
	2776, 2030, 3829, 1666, 2305, 1016, 839, 838, 3315, 3723,
	3525, 1197, 3308, 1294, 2407, 1633, 2811, 1020, 2439, 2240,
	2087, 2952, 1279, 1279, 2576, 1165, 1020, 2773, 3684, 2424,
	1020, 3243, 2775, 3973, 3934, 1514, 2049, 1632, 4540, 3699,
	1885, 2706, 2050, 4275, 3697, 2984, 1645, 3314, 3355, 753,
	1206, 3307, 2598, 2071, 3123, 2810, 3108, 3109, 1264, 2086,
	2575, 3322, 3522, 1309, 1337, 1590, 4548, 875, 172, 2778,
	2304, 3125, 2660, 2688, 4440, 2515, 2528, 2753, 2544, 2633,
	970, 2625, 1512, 2557, 2732, 2666, 868, 1307, 2565, 2566,
	1204, 4516, 2070, 2583, 2577, 2588, 1936, 2659, 2594, 2595,
	2581, 2582, 3120, 3121, 3122, 1264, 970, 1883, 1838, 3119,
	3117, 3118, 3110, 3111, 3112, 3113, 3115, 3116, 1020, 2623,
	1723, 1724, 1726, 1727, 970, 2241, 4524, 2955, 971, 4523,
	1337, 2307, 1312, 2139, 2138, 970, 2282, 2273, 2271, 2618,
	1264, 1264, 1314, 3523, 1279, 3114, 4568, 4542, 4493, 4341,
	3408, 2051, 2640, 3903, 834, 3820, 833, 2439, 2977, 2978,
	1077, 1077, 3924, 1077, 3114, 2697, 2644, 3819, 2055, 2662,
	1492, 4438, 3658, 1830, 1831, 3255, 3657, 2068, 2668, 2645,
	1489, 2643, 2119, 1930, 3935, 2651, 1279, 3258, 4353, 2654,
	2669, 2655, 4595, 1231, 2059, 3920, 1207, 2771, 1980, 1310,
	2691, 956, 2692, 2305, 2663, 2661, 2751, 3129, 1311, 2835,
	3118, 3110, 3111, 3112, 3113, 3115, 3116, 1279, 1933, 4351,
	2284, 2735, 3114, 1588, 4097, 956, 1013, 2674, 3904, 1279,
	1428, 1279, 2849, 2672, 2535, 671, 2118, 2694, 2052, 2057,
	2762, 3409, 2722, 1663, 3334, 1279, 2676, 3921, 2757, 3124,
	1013, 4281, 1866, 1439, 2734, 2756, 754, 1195, 2954, 1195,
	4295, 3673, 666, 2914, 2915, 2710, 2713, 2752, 3124, 2745,
	2747, 2748, 2749, 2700, 2921, 2922, 2923, 1514, 3245, 2677,
	967, 2876, 4407, 1660, 4408, 2999, 1077, 720, 2951, 1586,
	2439, 2841, 2038, 2039, 2394, 2933, 2905, 2934, 4274, 2675,
	1825, 2377, 1216, 756, 3731, 1970, 3286, 752, 2689, 781,
	784, 4546, 2097, 3729, 2814, 957, 2049, 2692, 3408, 2816,
	856, 2053, 2050, 2711, 2402, 2693, 3124, 869, 870, 1870,
	2930, 4541, 4339, 4468, 1077, 1924, 1548, 2059, 3213, 957,
	1077, 1077, 4469, 2845, 2929, 3993, 172, 2736, 1453, 2890,
	2696, 2817, 2694, 258, 4052, 1661, 2938, 4515, 2940, 2880,
	2942, 3816, 3285, 2058, 2878, 2829, 2839, 2059, 2236, 2909,
	4340, 4492, 2957, 1312, 2959, 3924, 1873, 3256, 4068, 1664,
	1600, 1602, 2292, 2239, 4391, 2953, 1439, 2927, 4382, 3455,
	2960, 1868, 3125, 2962, 1264, 1077, 1077, 2871, 3448, 2912,
	2937, 1077, 2939, 2916, 2941, 2917, 2892, 2881, 3920, 1871,
	2695, 3125, 3913, 4547, 1077, 1077, 3959, 3293, 2230, 1696,
	1077, 1077, 2910, 3732, 2950, 1870, 1077, 3289, 1439, 3911,
	1439, 2051, 876, 689, 2421, 1077, 1077, 1077, 3915, 2879,
	2693, 1077, 2059, 1777, 3916, 3047, 4549, 2860, 2055, 3917,
	2580, 1077, 1869, 2935, 1205, 4569, 3294, 1293, 2936, 2391,
	3921, 2593, 1019, 3538, 2375, 2696, 1665, 2378, 1077, 3125,
	4556, 3030, 1873, 4003, 3685, 2965, 3000, 3291, 3810, 3025,
	3026, 3629, 3170, 1221, 3029, 4051, 3821, 2578, 2389, 3482,
	2968, 1618, 2105, 3450, 4302, 2966, 2976, 2967, 4437, 3021,
	3919, 3914, 958, 4503, 4501, 1871, 4318, 1707, 3449, 4254,
	4189, 2971, 2321, 871, 872, 2104, 3922, 2374, 2052, 2057,
	4101, 4099, 3120, 3121, 3122, 2695, 958, 2986, 4096, 3119,
	3117, 3118, 3110, 3111, 3112, 3113, 3115, 3116, 1040, 4596,
	3290, 2054, 3765, 3396, 2159, 1981, 1863, 1219, 2100, 3117,
	3118, 3110, 3111, 3112, 3113, 3115, 3116, 3994, 1077, 1077,
	1077, 857, 858, 1872, 1212, 658, 4491, 1077, 1077, 1077,
	3744, 3865, 1077, 2998, 3817, 2324, 2066, 2067, 2069, 4467,
	2022, 4574, 1077, 1199, 1337, 2692, 3730, 4261, 1077, 4131,
	1077, 4130, 3162, 3163, 3576, 3204, 667, 4109, 1706, 1199,
	4198, 2053, 2019, 3766, 2075, 2726, 2101, 2712, 1194, 3110,
	3111, 3112, 3113, 3115, 3116, 3145, 3711, 1337, 3660, 1193,
	2694, 4053, 3265, 3939, 1194, 3036, 2079, 2385, 3397, 1199,
	3938, 3164, 1337, 1020, 1011, 1193, 956, 3388, 3261, 3918,
	959, 2850, 2844, 2058, 2767, 2386, 2833, 2059, 2184, 1936,
	2387, 3184, 2178, 1337, 2392, 2172, 2164, 3916, 2145, 1872,
	2110, 1013, 3917, 3521, 959, 4303, 2117, 1279, 1279, 1483,
	3209, 668, 3169, 1706, 3644, 1223, 3925, 2017, 2652, 3591,
	2820, 2076, 2314, 2823, 2656, 2825, 1701, 3008, 4358, 1197,
	1077, 960, 3223, 3197, 3483, 4321, 3198, 3249, 2667, 1705,
	4098, 2376, 729, 3905, 1077, 1197, 1012, 3174, 2693, 3451,
	3452, 3453, 3454, 3919, 3260, 960, 3006, 2018, 669, 3259,
	670, 1706, 1936, 3193, 2737, 2279, 2015, 3768, 2867, 3922,
	4019, 2867, 3822, 2696, 3172, 1197, 1930, 2830, 3241, 1234,
	1077, 1279, 2690, 1777, 3190, 1307, 3234, 859, 860, 3173,
	957, 4170, 3247, 3202, 3182, 3156, 3140, 3141, 3142, 2221,
	3185, 3186, 4168, 3183, 1707, 4111, 3866, 3277, 3273, 3272,
	3171, 1933, 3227, 3228, 1705, 2116, 1279, 3250, 3251, 2991,
	3577, 2969, 3276, 4573, 2080, 3281, 1970, 1970, 3283, 3578,
	3731, 1337, 3604, 2695, 3167, 3220, 3221, 1635, 3222, 3729,
	1279, 3275, 1439, 1439, 3279, 1279, 2943, 3326, 3166, 1930,
	3206, 3207, 3208, 2617, 3823, 3262, 3188, 2315, 3189, 2616,
	3303, 2054, 1705, 2615, 2614, 1619, 1537, 3937, 1279, 1535,
	3736, 2388, 2837, 3305, 1279, 1523, 1279, 874, 1017, 1707,
	1337, 2390, 4268, 3321, 1933, 4165, 3288, 775, 3235, 1524,
	2081, 2082, 3918, 3985, 3316, 3003, 3231, 4304, 1279, 3242,
	1970, 2716, 3667, 3323, 788, 3337, 3645, 1908, 3340, 1279,
	3438, 2182, 3345, 3347, 2077, 3317, 1439, 3248, 3004, 3341,
	1036, 3318, 3009, 3332, 3348, 3381, 1199, 4119, 1924, 3925,
	3363, 3404, 2056, 2738, 2739, 1970, 4512, 1085, 4299, 2169,
	3214, 4095, 2571, 2913, 3387, 3342, 3306, 3402, 3292, 3732,
	3349, 1279, 1279, 3299, 4361, 2078, 3205, 4036, 2815, 1970,
	2813, 2210, 3372, 1594, 1970, 3310, 4368, 4269, 1866, 2056,
	4355, 3313, 3395, 3424, 1279, 3311, 2574, 958, 3872, 3312,
	4107, 1195, 3593, 256, 256, 256, 3327, 661, 662, 2446,
	677, 661, 677, 687, 3343, 3354, 727, 1195, 3335, 2905,
	745, 1924, 3333, 3413, 4386, 751, 3350, 3403, 2905, 3463,
	2107, 256, 1337, 3266, 3358, 1337, 3361, 2573, 2107, 1681,
	3138, 1683, 2572, 728, 4108, 4514, 4035, 2113, 4120, 853,
	1680, 2735, 1197, 1678, 3357, 256, 3398, 3727, 4457, 4362,
	1264, 781, 784, 1657, 3365, 1870, 1655, 3405, 1077, 3478,
	3385, 3384, 4270, 1629, 1077, 1077, 1627, 3178, 1077, 1077,
	1077, 4288, 1077, 4074, 3457, 3864, 3735, 1625, 2083, 1623,
	3137, 1077, 1936, 172, 172, 3436, 3498, 3459, 1621, 3440,
	1077, 2111, 3412, 1077, 3476, 3410, 3422, 3423, 3224, 1337,
	1615, 1610, 1873, 1608, 3419, 1533, 3473, 4215, 1077, 3005,
	1536, 3475, 3102, 1534, 3434, 3479, 1337, 1868, 3010, 3007,
	2834, 873, 3730, 1010, 2769, 959, 1936, 1936, 1077, 1077,
	2112, 1077, 1077, 1077, 3484, 1871, 2728, 3466, 2642, 3467,
	2287, 3468, 1903, 1899, 1040, 1684, 1572, 3456, 1040, 3477,
	1439, 2270, 1020, 2084, 3501, 789, 790, 1701, 3179, 4207,
	2948, 3510, 3511, 2947, 1420, 2919, 661, 661, 1420, 1930,
	3472, 2303, 4208, 1077, 256, 3458, 960, 1077, 1869, 1936,
	1936, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	3481, 1077, 3550, 4209, 1933, 2281, 2445, 3177, 1077, 1077,
	1936, 1682, 3336, 1930, 1930, 1077, 1644, 3960, 2089, 2049,
	1679, 2245, 2144, 1677, 1963, 2050, 1077, 1809, 3551, 1583,
	4432, 1507, 3703, 1656, 3506, 3702, 1654, 1199, 1199, 3181,
	3948, 1077, 4354, 1628, 4017, 3965, 1626, 3909, 1933, 1933,
	3528, 3517, 3764, 3524, 3526, 3527, 3533, 1624, 3588, 1622,
	3755, 3716, 968, 4211, 3679, 3540, 1930, 1930, 1620, 3677,
	1337, 3659, 3391, 3547, 3386, 3548, 3377, 2863, 3622, 3549,
	1614, 1609, 2855, 1607, 2068, 1532, 4210, 2848, 2840, 1872,
	2827, 2812, 3609, 2094, 2658, 792, 791, 1930, 2653, 4489,
	2143, 1933, 1933, 4212, 2141, 3553, 2123, 2108, 2085, 2072,
	3627, 3628, 2060, 2002, 1999, 3295, 3296, 1077, 3555, 3297,
	3580, 1924, 1996, 1993, 3639, 3640, 3641, 1988, 2269, 1986,
	1982, 1973, 1933, 2090, 2051, 4012, 3581, 1174, 3401, 3518,
	1077, 3344, 4481, 1197, 1197, 3180, 1910, 2117, 1710, 172,
	2989, 2055, 1194, 793, 794, 3626, 3328, 3329, 4505, 2023,
	3330, 2963, 3589, 1193, 1175, 1924, 1924, 2961, 1194, 1077,
	1077, 2290, 3600, 3601, 3597, 3598, 4396, 2334, 3541, 1193,
	4041, 4034, 3611, 4033, 3972, 3895, 2906, 2042, 1488, 4200,
	2717, 4193, 2689, 3653, 3595, 3776, 3230, 2068, 1194, 3232,
	3233, 2235, 1077, 1255, 3236, 3612, 3237, 2687, 3238, 1193,
	2689, 2265, 3688, 973, 975, 977, 2288, 2242, 1924, 1924,
	3455, 2052, 2057, 2181, 1279, 2714, 3635, 1675, 1676, 3448,
	2334, 3556, 2264, 1254, 3625, 4395, 716, 3941, 1717, 1718,
	3967, 2990, 1606, 1936, 4235, 3706, 3873, 1717, 1718, 1924,
	3851, 3649, 2740, 2721, 1711, 1714, 2116, 1288, 1222, 4508,
	2289, 3584, 3704, 4499, 3712, 3692, 3693, 3695, 672, 1720,
	1176, 3663, 3710, 1279, 4462, 2826, 2267, 3752, 249, 1077,
	4543, 2165, 1299, 2774, 2782, 2781, 2764, 1199, 1077, 2723,
	4346, 3778, 2766, 3709, 2725, 4312, 3769, 3686, 1279, 1279,
	1279, 3785, 3750, 1719, 2053, 2765, 3721, 2724, 1255, 768,
	4309, 2735, 1719, 4267, 4184, 1279, 4163, 3734, 1255, 3762,
	2587, 824, 3770, 683, 3450, 655, 3754, 3743, 3619, 3789,
	1930, 3390, 1264, 2870, 2558, 1337, 2008, 1917, 4388, 3449,
	4117, 3772, 4213, 4389, 3907, 2088, 2058, 4214, 3906, 3773,
	2059, 3656, 3751, 3257, 3212, 4572, 2876, 3753, 1455, 1337,
	3108, 3109, 1077, 1077, 4518, 1933, 1717, 1718, 1077, 1077,
	1936, 2097, 4311, 1077, 1077, 3843, 1077, 3801, 1593, 3722,
	1077, 2169, 4388, 2905, 1592, 3756, 2441, 4389, 2681, 2682,
	3737, 1077, 3631, 1197, 3771, 3725, 2679, 2680, 3733, 2095,
	2046, 2681, 2679, 2474, 3779, 1420, 3784, 1077, 3780, 1659,
	3761, 1210, 1658, 3774, 3758, 4185, 4149, 3824, 3807, 3837,
	3968, 3792, 3799, 3795, 3964, 3796, 3963, 3446, 3790, 3791,
	3839, 3630, 3529, 3338, 1803, 1802, 4558, 1028, 3798, 2047,
	4525, 4350, 3833, 4349, 1230, 4348, 4250, 4166, 4144, 4094,
	4091, 3825, 3996, 3891, 3800, 1194, 256, 1930, 256, 256,
	3818, 1259, 256, 1269, 3782, 3738, 1193, 1199, 2096, 3675,
	3813, 3670, 3394, 3393, 1289, 1199, 3282, 3229, 3098, 1337,
	3097, 1337, 1924, 745, 3096, 1195, 3095, 3094, 1199, 3093,
	3092, 3091, 1933, 3090, 3266, 3808, 3089, 3088, 3087, 3086,
	3085, 1195, 3878, 3084, 3083, 1337, 3082, 256, 3081, 256,
	256, 1259, 3080, 256, 256, 1269, 3079, 3078, 3077, 3076,
	3075, 1040, 2945, 2926, 2054, 2925, 256, 1420, 1457, 2924,
	2854, 1195, 2828, 2715, 2649, 2635, 2634, 1199, 3863, 1199,
	3451, 3452, 3453, 3454, 2406, 2266, 2263, 2262, 2261, 1481,
	2260, 2259, 3197, 2179, 2154, 2150, 2149, 2148, 2147, 2146,
	1976, 1975, 1974, 1972, 1674, 1673, 1616, 1337, 1506, 3933,
	1269, 3881, 1502, 1197, 256, 256, 1501, 1259, 1337, 3875,
	3876, 1197, 3944, 3945, 3877, 3880, 3901, 3884, 3896, 3897,
	1500, 172, 1499, 3932, 1197, 3885, 745, 3888, 256, 256,
	3943, 3929, 3874, 3929, 3870, 1498, 1279, 1279, 1497, 1924,
	3879, 1496, 1491, 1487, 1485, 1484, 1328, 1327, 3942, 1326,
	1325, 853, 1324, 1279, 1292, 3908, 1291, 1241, 1240, 1239,
	1238, 1237, 1236, 1235, 1233, 1337, 3947, 1228, 1227, 1226,
	1279, 1225, 1224, 1197, 3971, 1197, 3983, 1157, 3955, 2013,
	3957, 979, 965, 4272, 3923, 3969, 1668, 3970, 89, 1493,
	811, 83, 1420, 4020, 2114, 1199, 3674, 4009, 3981, 936,
	3962, 3958, 4385, 1477, 4294, 1279, 1279, 1279, 819, 4370,
	3975, 3284, 3986, 2785, 2244, 1617, 2246, 1337, 3980, 4021,
	3192, 2600, 4338, 3847, 256, 2169, 3046, 4040, 4242, 1077,
	1077, 1077, 4067, 2444, 1807, 3149, 85, 1061, 1107, 3992,
	3991, 3910, 1264, 256, 3662, 4029, 3987, 1337, 4024, 4037,
	4002, 3956, 1077, 4006, 2895, 1077, 1077, 4015, 4005, 3929,
	3989, 3988, 1921, 1923, 1027, 1077, 1340, 4406, 1936, 4022,
	2024, 1067, 1970, 1077, 1077, 2040, 2033, 3982, 2636, 2518,
	1084, 1081, 1925, 1927, 1083, 4059, 1194, 1194, 1337, 1082,
	1279, 1926, 1826, 1080, 4044, 1920, 3760, 1193, 1193, 4043,
	4048, 1197, 2836, 4054, 2874, 3420, 3642, 4064, 4008, 1542,
	3643, 1540, 3757, 938, 1337, 2028, 2400, 2428, 1195, 3035,
	1800, 1789, 1077, 1042, 1063, 1794, 2425, 1217, 4070, 1052,
	1041, 1077, 3175, 3154, 3407, 3618, 2313, 828, 3105, 1077,
	4076, 1936, 2431, 1208, 2541, 2534, 4046, 2530, 3239, 1077,
	2864, 1687, 1077, 4081, 3678, 1930, 3680, 1779, 2875, 1322,
	1045, 1077, 4103, 2398, 4087, 4088, 1791, 3015, 1337, 2323,
	3414, 3195, 2629, 4127, 4392, 3537, 2158, 1173, 1172, 1279,
	1279, 3809, 1215, 1171, 4090, 4376, 4373, 3793, 3370, 2016,
	1933, 2673, 1769, 3378, 1057, 4104, 1438, 3160, 3439, 1504,
	4143, 750, 4124, 1069, 4110, 4102, 1768, 2806, 2805, 4264,
	1308, 4154, 4178, 1306, 1305, 1304, 4532, 4594, 1337, 3671,
	3715, 1279, 223, 2983, 1708, 1700, 220, 4169, 1930, 222,
	221, 3997, 3623, 3201, 4460, 3690, 3362, 23, 22, 1199,
	1199, 661, 21, 4146, 4194, 4141, 109, 4183, 4145, 4151,
	2131, 42, 20, 1420, 4156, 125, 4199, 4182, 1077, 1077,
	4159, 4203, 256, 1933, 256, 4167, 4158, 4162, 256, 4177,
	4195, 4222, 3372, 144, 143, 1077, 1936, 117, 142, 141,
	140, 1457, 1259, 256, 139, 256, 146, 138, 137, 132,
	256, 1457, 677, 4218, 4219, 4197, 4196, 256, 1457, 136,
	135, 4231, 4232, 3929, 3929, 4024, 4216, 1924, 4202, 4201,
	4191, 134, 1977, 1077, 133, 131, 1077, 129, 130, 124,
	4161, 128, 127, 1199, 256, 4230, 126, 4157, 123, 122,
	121, 256, 120, 119, 4234, 1199, 1194, 118, 116, 115,
	1420, 4260, 114, 113, 112, 1197, 1197, 1193, 4240, 111,
	110, 741, 738, 61, 60, 108, 107, 19, 40, 14,
	65, 4251, 66, 1930, 18, 4259, 4256, 13, 35, 88,
	99, 745, 98, 4282, 36, 96, 1077, 1077, 95, 34,
	1924, 1439, 17, 16, 4277, 15, 4276, 3929, 1199, 4283,
	93, 1199, 4133, 92, 33, 1279, 31, 11, 1933, 3929,
	9, 8, 37, 1887, 12, 1279, 1279, 5, 177, 1420,
	4290, 1335, 4292, 176, 179, 1433, 175, 178, 87, 1195,
	1195, 4329, 1279, 174, 4306, 4307, 173, 86, 29, 1197,
	4305, 10, 169, 4182, 4179, 1420, 1077, 1077, 4310, 4314,
	3748, 1197, 4315, 80, 4322, 4317, 1077, 171, 4323, 170,
	168, 4325, 3929, 167, 166, 3929, 4334, 81, 4335, 78,
	165, 82, 164, 79, 163, 3995, 27, 4327, 4328, 6,
	64, 7, 4333, 4326, 4363, 4049, 4007, 3460, 102, 4342,
	1264, 103, 4367, 4343, 4332, 38, 76, 1077, 1077, 75,
	1077, 4347, 74, 26, 1197, 63, 25, 1197, 207, 4028,
	206, 205, 204, 203, 202, 197, 196, 4390, 201, 199,
	198, 200, 195, 4387, 210, 1924, 1194, 4375, 4378, 209,
	4366, 215, 4365, 214, 1194, 256, 213, 1193, 256, 212,
	4379, 4411, 4384, 4383, 4415, 1193, 4380, 1194, 211, 208,
	1077, 1077, 1077, 217, 194, 193, 4409, 191, 1193, 4397,
	187, 186, 4416, 190, 4402, 192, 189, 188, 185, 4410,
	4414, 216, 161, 162, 71, 160, 159, 158, 157, 156,
	155, 4394, 1077, 154, 70, 4444, 4449, 1420, 4431, 24,
	2, 256, 4430, 4428, 4429, 256, 1194, 1, 1194, 0,
	256, 0, 0, 0, 4445, 0, 256, 1193, 4463, 1193,
	4470, 0, 0, 0, 0, 4472, 0, 0, 4447, 0,
	0, 0, 256, 0, 256, 0, 0, 4484, 661, 0,
	256, 0, 0, 4486, 0, 1077, 4471, 0, 0, 0,
	0, 4478, 745, 0, 4474, 0, 853, 0, 4490, 0,
	0, 4482, 4483, 1420, 0, 4480, 4485, 4487, 0, 0,
	0, 0, 4510, 4506, 4496, 4497, 0, 0, 4502, 4500,
	0, 256, 0, 1259, 256, 0, 4498, 4479, 0, 1195,
	4509, 4511, 0, 0, 1199, 0, 1199, 4530, 745, 4527,
	4517, 4513, 4526, 4522, 4375, 256, 0, 4378, 4538, 0,
	0, 0, 2243, 0, 0, 0, 4537, 256, 256, 4534,
	256, 0, 256, 4528, 256, 0, 256, 0, 4533, 0,
	0, 0, 0, 4551, 1194, 0, 0, 0, 0, 0,
	0, 4550, 0, 0, 4553, 1193, 0, 0, 4529, 2275,
	4531, 4560, 2276, 0, 2277, 0, 4559, 4394, 3929, 0,
	3929, 0, 4562, 0, 1077, 1077, 256, 4564, 0, 0,
	4567, 4557, 0, 1077, 0, 1077, 1077, 4570, 4566, 0,
	0, 4579, 4576, 0, 0, 4584, 0, 4582, 0, 0,
	727, 4588, 4583, 4589, 745, 4587, 0, 0, 0, 0,
	1197, 0, 1197, 4585, 4597, 4593, 0, 0, 4590, 4601,
	0, 0, 4600, 0, 4586, 4602, 0, 4603, 4577, 4578,
	0, 0, 4608, 4604, 4598, 4607, 0, 0, 3012, 3013,
	0, 1077, 0, 4609, 0, 4599, 0, 4135, 4136, 4615,
	4611, 4617, 0, 0, 0, 0, 0, 0, 4618, 0,
	4612, 0, 4614, 0, 0, 1865, 2876, 0, 2404, 0,
	0, 4150, 0, 0, 4152, 4153, 0, 0, 0, 1195,
	0, 0, 1902, 1789, 4613, 0, 0, 1195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 0, 3108, 3109, 0, 3126, 3127, 3128,
	0, 0, 0, 0, 0, 4296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3503, 0, 0,
	0, 0, 0, 0, 0, 0, 4313, 2540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1195,
	0, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 3123,
	0, 0, 3131, 3132, 3133, 661, 0, 0, 1194, 1194,
	0, 0, 256, 0, 661, 1717, 1718, 1273, 0, 1193,
	1193, 0, 0, 0, 2044, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	0, 256, 1269, 0, 0, 0, 1720, 0, 0, 0,
	0, 0, 0, 2801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1444,
	1026, 0, 0, 0, 0, 0, 0, 0, 0, 4291,
	1719, 4398, 0, 0, 4399, 0, 2793, 2791, 256, 1269,
	3114, 677, 1194, 2795, 2797, 2787, 0, 1195, 0, 0,
	1479, 2648, 0, 1193, 1194, 0, 0, 256, 0, 0,
	256, 0, 0, 0, 256, 1193, 256, 0, 0, 0,
	0, 1259, 0, 256, 256, 1515, 1269, 1269, 2664, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1420, 0, 0,
	1556, 0, 3129, 0, 0, 0, 0, 1194, 0, 2136,
	1194, 0, 0, 0, 1569, 0, 0, 0, 1193, 0,
	0, 1193, 0, 0, 0, 0, 0, 2704, 0, 0,
	1420, 1725, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 3124, 1420, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 1420, 1595, 0, 0,
	0, 0, 0, 0, 0, 0, 1747, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1717, 1718, 0, 1040, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 2818, 0, 0, 0, 1040, 2789, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 2803,
	0, 1720, 0, 0, 0, 1740, 0, 1457, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	2802, 2794, 2792, 2796, 2798, 2788, 2790, 2804, 2859, 4459,
	0, 0, 0, 0, 2800, 1719, 0, 0, 2704, 0,
	661, 0, 0, 0, 0, 1739, 0, 0, 0, 2888,
	853, 0, 2704, 2704, 1736, 0, 0, 3125, 0, 0,
	0, 1195, 1195, 0, 0, 0, 0, 2807, 256, 0,
	0, 0, 0, 0, 1420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 1259, 256,
	0, 0, 0, 1457, 0, 1457, 1269, 256, 0, 0,
	1259, 0, 1259, 0, 1259, 3497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1420, 0, 0, 1742, 1743, 1744, 1745,
	256, 256, 256, 256, 1259, 0, 1725, 1259, 0, 256,
	2337, 256, 0, 0, 2540, 1195, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	0, 0, 0, 1194, 0, 1194, 0, 0, 0, 0,
	0, 0, 256, 0, 1193, 0, 1193, 0, 0, 0,
	256, 1747, 1749, 3494, 3495, 0, 0, 3120, 3121, 3122,
	0, 0, 0, 0, 3119, 3117, 3118, 3110, 3111, 3112,
	3113, 3115, 3116, 0, 0, 0, 0, 1734, 1735, 0,
	1195, 0, 0, 1195, 0, 0, 0, 0, 0, 0,
	1109, 0, 0, 0, 2540, 2540, 0, 2442, 0, 758,
	0, 0, 0, 0, 0, 0, 0, 0, 2808, 0,
	1740, 0, 0, 0, 0, 2318, 0, 2799, 0, 0,
	0, 0, 0, 0, 0, 1420, 0, 0, 1420, 0,
	0, 0, 0, 3108, 3109, 0, 3126, 3127, 3128, 1457,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3502, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 3557, 3558, 3559, 3560, 3561,
	3562, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3571,
	3572, 3573, 3574, 3575, 0, 3579, 0, 0, 0, 0,
	0, 0, 2610, 1284, 0, 0, 3108, 3109, 0, 3126,
	3127, 3128, 1420, 0, 0, 0, 0, 0, 3123, 0,
	0, 0, 0, 0, 0, 763, 1026, 0, 0, 1420,
	1026, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 2540, 2540,
	2540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1741, 2536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1459, 0, 1465, 0, 1471,
	0, 3123, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 3108,
	3109, 0, 3126, 3127, 3128, 0, 256, 722, 0, 3114,
	0, 661, 0, 0, 0, 0, 661, 0, 0, 661,
	0, 0, 661, 661, 0, 0, 0, 1200, 661, 0,
	0, 765, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 1559, 2684, 1564, 0, 0, 1457, 0,
	0, 0, 0, 0, 0, 1573, 0, 1578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1457, 3129, 3114, 0, 3123, 0, 1195, 0, 1195, 0,
	0, 256, 0, 1420, 0, 256, 256, 0, 0, 0,
	769, 0, 0, 0, 0, 0, 0, 1737, 1733, 0,
	1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0,
	0, 3130, 0, 3124, 2704, 2704, 256, 0, 3254, 0,
	1640, 0, 0, 1646, 0, 0, 0, 2704, 0, 0,
	3268, 0, 0, 0, 3129, 0, 0, 0, 2704, 3268,
	0, 2704, 3268, 0, 0, 3268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2199, 0, 256, 256,
	3254, 256, 760, 0, 0, 3114, 0, 0, 0, 0,
	0, 0, 1273, 2213, 0, 0, 3124, 0, 0, 0,
	0, 3254, 256, 2214, 3320, 3320, 0, 1259, 0, 0,
	0, 0, 764, 0, 0, 2222, 0, 2225, 2226, 2227,
	0, 0, 2704, 0, 3339, 2704, 3254, 0, 0, 2704,
	2704, 3254, 0, 0, 0, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 0, 0, 0, 721, 0, 3129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 767, 0,
	256, 0, 0, 0, 762, 0, 1788, 0, 0, 0,
	0, 0, 1801, 0, 256, 3366, 3125, 0, 3368, 2704,
	0, 0, 256, 0, 0, 0, 256, 0, 1269, 3124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 2859, 759,
	0, 1259, 0, 256, 0, 0, 2704, 0, 661, 0,
	0, 0, 0, 0, 0, 2704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 766, 0, 3125,
	0, 0, 0, 0, 0, 0, 256, 2859, 0, 0,
	2859, 723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 761, 0, 0, 0, 0, 0, 1420, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1859, 1859,
	3465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1420, 0, 0, 0, 0, 3471, 0, 0,
	1259, 256, 0, 256, 0, 0, 3120, 3121, 3122, 1259,
	0, 0, 0, 3119, 3117, 3118, 3110, 3111, 3112, 3113,
	3115, 3116, 0, 0, 0, 0, 0, 0, 0, 2540,
	2540, 0, 3125, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3120,
	3121, 3122, 0, 0, 0, 0, 3119, 3117, 3118, 3110,
	3111, 3112, 3113, 3115, 3116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1420, 0, 1420, 0, 0, 0, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	0, 2536, 2536, 0, 0, 0, 0, 1200, 1420, 0,
	0, 2540, 2540, 2540, 2540, 2540, 2540, 2540, 2540, 2540,
	2540, 2540, 2540, 2540, 2540, 2540, 2540, 2540, 2540, 2540,
	0, 2540, 3120, 3121, 3122, 0, 0, 0, 0, 3119,
	3117, 3118, 3110, 3111, 3112, 3113, 3115, 3116, 0, 0,
	0, 1200, 0, 0, 3161, 1200, 0, 0, 0, 1200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1420, 0, 0, 256, 256, 0, 3187, 0, 0,
	1200, 0, 2665, 1273, 1717, 1718, 0, 0, 0, 0,
	0, 0, 3200, 0, 0, 0, 661, 661, 0, 0,
	0, 0, 0, 0, 0, 1200, 0, 0, 1748, 4073,
	0, 0, 0, 3218, 0, 1720, 0, 0, 1457, 1457,
	0, 0, 0, 0, 0, 1200, 0, 0, 1420, 0,
	1200, 0, 1457, 1457, 1457, 2536, 2536, 2536, 0, 0,
	0, 0, 0, 0, 1200, 0, 0, 0, 0, 1719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 3320, 4113, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1200, 0, 0,
	0, 0, 0, 0, 2809, 0, 0, 0, 745, 0,
	1420, 0, 0, 0, 0, 0, 0, 0, 0, 3492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3320, 0, 0, 0, 0, 0,
	1742, 1743, 1744, 1745, 0, 256, 0, 0, 0, 0,
	1725, 1420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3254, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 1420, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 1747, 1749, 0, 0, 256,
	3200, 0, 0, 0, 256, 2920, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1040, 0, 0, 0, 4239,
	0, 1734, 1735, 2704, 256, 0, 0, 0, 0, 0,
	0, 1420, 0, 2888, 2888, 0, 0, 0, 0, 853,
	853, 2704, 0, 0, 0, 2859, 2859, 0, 0, 853,
	2704, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 2312, 0, 2316, 0, 0, 0, 0, 0, 0,
	2330, 1420, 0, 0, 0, 0, 0, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 0, 2379, 0, 2381, 2382, 2383, 2384, 0,
	0, 0, 1433, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 3848, 0, 0, 0, 0, 2408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 2423, 0, 0, 1200, 0, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 2453, 2456,
	2459, 2462, 1200, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	0, 0, 0, 0, 0, 0, 0, 1741, 0, 1937,
	0, 0, 0, 1200, 256, 0, 0, 0, 0, 3514,
	1457, 2532, 256, 2543, 2545, 2550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 3530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1040,
	1040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2704, 2704, 0, 3320, 0,
	0, 0, 0, 0, 0, 0, 0, 2704, 0, 1200,
	0, 0, 0, 0, 3931, 0, 3931, 1457, 0, 0,
	1200, 0, 0, 0, 0, 2704, 0, 3268, 0, 0,
	1457, 1457, 256, 3254, 0, 0, 2536, 2536, 0, 0,
	0, 0, 0, 0, 1200, 3254, 256, 3254, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2704, 0, 2704, 256, 0, 0, 0, 0,
	0, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 0, 0, 0, 0, 0, 0, 2704,
	0, 1040, 0, 0, 3999, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	3621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3931, 0, 0, 1457, 0, 0, 2536, 2536,
	2536, 2536, 2536, 2536, 2536, 2536, 2536, 2536, 2536, 2536,
	2536, 2536, 2536, 2536, 2536, 2536, 2536, 0, 2536, 1200,
	1200, 0, 0, 0, 0, 0, 0, 0, 0, 1200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2540, 0, 0, 1717, 1718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1748, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2821, 2822, 0, 2824, 0,
	0, 0, 2540, 0, 0, 0, 0, 2704, 0, 3268,
	0, 0, 4106, 1719, 0, 0, 0, 0, 0, 0,
	256, 0, 1200, 1739, 1200, 0, 1200, 4125, 0, 4125,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1200, 1200, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 1200, 0, 1717, 1718, 1259, 1750, 1751,
	1752, 1760, 1761, 1762, 0, 1200, 0, 1200, 1200, 1200,
	0, 3254, 256, 0, 0, 0, 0, 0, 3351, 1748,
	0, 0, 0, 3491, 0, 0, 1720, 0, 0, 0,
	0, 4106, 0, 0, 1766, 0, 0, 0, 0, 2704,
	0, 0, 0, 0, 1742, 1743, 1744, 1745, 3382, 0,
	0, 0, 4188, 0, 1725, 0, 0, 0, 0, 3389,
	1719, 2944, 0, 0, 1457, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 3931, 3931, 0, 1736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 256, 2540, 0, 0, 0, 1747,
	1749, 3430, 3431, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 1771, 3535, 0, 0,
	0, 0, 0, 0, 0, 1734, 1735, 0, 1937, 1937,
	1200, 0, 0, 3320, 4253, 0, 0, 4255, 3320, 4258,
	0, 0, 0, 0, 0, 4106, 0, 0, 0, 0,
	0, 1742, 1743, 1744, 1745, 0, 0, 0, 1740, 0,
	3931, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	2995, 2996, 3931, 0, 0, 0, 3002, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 3016, 3017, 1757, 0, 0,
	1767, 2423, 0, 0, 0, 0, 1747, 1749, 0, 0,
	3024, 0, 3999, 0, 0, 0, 0, 1200, 0, 0,
	0, 3883, 0, 0, 0, 3931, 3038, 256, 3931, 0,
	0, 0, 1734, 1735, 0, 0, 0, 0, 3268, 0,
	0, 0, 0, 3050, 0, 3893, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1457, 1740, 1457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1200,
	0, 1746, 0, 0, 0, 0, 1200, 0, 0, 0,
	0, 0, 4352, 0, 0, 1200, 0, 0, 0, 0,
	0, 1741, 0, 4359, 0, 0, 0, 0, 0, 0,
	0, 0, 1200, 0, 0, 0, 4125, 0, 0, 256,
	0, 0, 0, 0, 0, 1189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2704, 0,
	0, 0, 2550, 2550, 2550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 1859, 0, 0,
	0, 0, 0, 0, 0, 3165, 0, 0, 0, 0,
	0, 251, 251, 657, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3535, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1457, 0, 0, 0, 0, 0, 1741, 0,
	0, 0, 1200, 1200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1335, 0, 256,
	0, 0, 0, 0, 1758, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	0, 0, 0, 0, 1200, 0, 0, 4065, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 0,
	4106, 0, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4065, 0,
	0, 0, 0, 0, 2704, 0, 0, 0, 0, 0,
	0, 3931, 0, 3931, 0, 3287, 1457, 0, 0, 0,
	1200, 0, 0, 0, 2337, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 1200, 0, 0, 0, 1731, 1732,
	1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 0, 0, 0, 0, 1457,
	0, 0, 0, 0, 3719, 0, 0, 1717, 1718, 0,
	0, 0, 0, 1760, 1761, 1762, 1200, 0, 2337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1717,
	1718, 1748, 2536, 0, 2888, 0, 0, 0, 1720, 0,
	0, 0, 0, 2704, 0, 0, 1766, 1200, 0, 0,
	0, 0, 0, 1748, 0, 0, 0, 0, 2888, 1200,
	1720, 1200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1719, 0, 0, 1200, 0, 0, 3786, 3787,
	3788, 1073, 1739, 0, 0, 0, 0, 0, 0, 2536,
	0, 1736, 0, 0, 1719, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 255, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 782, 0, 0, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 0, 0, 782,
	0, 0, 0, 0, 0, 1742, 1743, 1744, 1745, 0,
	0, 0, 0, 0, 0, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 1767, 0, 0, 0, 0, 0, 1747, 1749,
	0, 0, 0, 2330, 0, 0, 0, 0, 0, 3489,
	3490, 0, 0, 3493, 0, 0, 0, 3496, 0, 0,
	1747, 1749, 2536, 0, 1734, 1735, 3500, 0, 0, 0,
	0, 0, 0, 0, 0, 3507, 0, 0, 3165, 0,
	0, 0, 1755, 0, 0, 0, 1734, 1735, 0, 0,
	0, 0, 0, 3519, 0, 0, 0, 1740, 0, 1717,
	1718, 0, 1750, 1751, 1752, 1760, 1761, 1762, 0, 0,
	0, 0, 0, 3542, 3543, 0, 3544, 3545, 3546, 1740,
	0, 0, 1753, 1748, 0, 0, 0, 0, 1196, 0,
	1720, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3552, 0,
	0, 0, 3554, 0, 1719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3582, 3583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 0, 0,
	0, 3594, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 3603, 0, 0, 0,
	0, 0, 0, 1200, 1200, 0, 0, 0, 0, 0,
	1741, 0, 1746, 0, 0, 0, 0, 0, 0, 1200,
	0, 0, 0, 0, 0, 1742, 1743, 1744, 1745, 0,
	0, 0, 1741, 0, 0, 1725, 1758, 1200, 0, 0,
	0, 0, 0, 0, 0, 4045, 0, 4047, 0, 1200,
	0, 0, 1200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1245, 0, 1245, 1245, 0, 1937,
	0, 1757, 3646, 1200, 1767, 0, 0, 0, 0, 0,
	1747, 1749, 0, 0, 0, 0, 0, 1200, 1200, 0,
	0, 0, 0, 0, 0, 3665, 0, 1763, 0, 1764,
	0, 0, 0, 0, 0, 0, 1734, 1735, 0, 0,
	0, 0, 0, 0, 0, 1332, 0, 0, 0, 0,
	0, 1437, 0, 0, 1755, 3689, 0, 0, 0, 0,
	4092, 0, 0, 0, 0, 1756, 0, 0, 0, 1740,
	0, 0, 1937, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0,
	0, 1200, 0, 0, 0, 0, 1737, 1733, 0, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1200, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 1557, 1558, 0, 0,
	0, 1200, 0, 0, 0, 0, 0, 0, 0, 4160,
	1200, 0, 0, 0, 0, 1200, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 3781, 0, 0, 0, 0, 1200, 0,
	0, 0, 0, 0, 1200, 0, 1200, 0, 0, 0,
	1200, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1200, 0,
	0, 0, 1741, 1717, 1718, 0, 0, 0, 0, 1200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 0, 0, 0, 1200, 1748, 1758, 0,
	0, 0, 0, 0, 1720, 0, 0, 3826, 3827, 0,
	0, 0, 0, 3831, 3832, 0, 0, 0, 3835, 3836,
	0, 1200, 1200, 0, 0, 3840, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3844, 0, 1719, 0,
	0, 0, 0, 0, 1200, 0, 0, 0, 1739, 0,
	0, 0, 3849, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 255, 255, 0, 0, 255, 0, 0, 0,
	0, 0, 1200, 0, 0, 1200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 3001, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0,
	0, 255, 3059, 255, 255, 0, 3060, 255, 255, 1742,
	1743, 1744, 1745, 0, 0, 1273, 1273, 0, 0, 1725,
	782, 0, 1937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 1200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1200, 0, 0, 0,
	0, 0, 0, 0, 1747, 1749, 1937, 1937, 255, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1734, 1735, 255, 255, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 1717, 1718, 0, 1750, 1751,
	1752, 1760, 1761, 1762, 0, 0, 1897, 0, 0, 1937,
	1937, 690, 0, 1740, 0, 0, 0, 691, 1753, 1748,
	0, 1906, 0, 1437, 0, 0, 1720, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 0, 0, 0,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 692, 0, 0, 0, 0,
	1719, 0, 1245, 0, 0, 0, 693, 1200, 1200, 1437,
	1739, 0, 0, 0, 0, 0, 0, 0, 255, 1736,
	0, 0, 0, 0, 0, 0, 0, 694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	1200, 0, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 0, 0, 0, 4060, 4061, 4062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 695, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 2330, 0, 0,
	4071, 4072, 0, 0, 0, 0, 0, 1086, 0, 696,
	0, 1742, 1743, 1744, 1745, 0, 1741, 0, 4080, 4083,
	0, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	697, 0, 0, 698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 0, 0, 257, 257, 257, 0, 1757, 0, 0,
	1767, 0, 0, 0, 0, 0, 1747, 1749, 0, 0,
	0, 0, 0, 712, 0, 0, 4126, 0, 0, 0,
	0, 257, 0, 1763, 4132, 1764, 0, 0, 0, 0,
	0, 0, 1734, 1735, 4139, 0, 0, 1026, 0, 0,
	0, 0, 0, 0, 0, 257, 4147, 0, 0, 0,
	1755, 0, 0, 0, 1200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 709, 1937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724,
	1726, 1727, 0, 1200, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 1200, 1196, 2156,
	0, 0, 255, 2163, 0, 1754, 0, 0, 1200, 1200,
	1200, 0, 0, 0, 2175, 0, 0, 255, 1881, 255,
	0, 700, 0, 0, 782, 1200, 0, 0, 0, 0,
	2187, 782, 2187, 0, 0, 0, 0, 0, 2194, 0,
	0, 0, 0, 0, 0, 1200, 0, 0, 0, 720,
	0, 701, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 1746, 1200,
	0, 0, 0, 0, 0, 0, 0, 0, 4263, 2163,
	1937, 4266, 2218, 0, 0, 0, 0, 721, 1741, 0,
	0, 0, 0, 0, 702, 0, 0, 0, 717, 718,
	715, 0, 0, 2238, 0, 0, 710, 0, 0, 703,
	0, 0, 0, 0, 1758, 0, 2251, 0, 2253, 0,
	2255, 0, 2257, 0, 2258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1026, 1026, 0, 0, 0, 0, 0, 0, 704,
	0, 711, 0, 0, 0, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 2280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 706, 0, 0, 1200, 0, 714,
	0, 0, 0, 0, 0, 1200, 0, 0, 0, 1200,
	0, 1200, 0, 723, 0, 0, 0, 0, 1200, 0,
	0, 0, 2330, 0, 708, 0, 0, 0, 0, 0,
	0, 4083, 0, 1756, 0, 1200, 0, 0, 1731, 1732,
	1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 0, 0, 0, 2419, 0,
	0, 0, 2420, 0, 0, 0, 0, 1200, 0, 1200,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 255,
	0, 0, 782, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4427, 4427, 4427, 0, 0,
	0, 0, 0, 0, 0, 255, 1200, 1200, 0, 255,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	255, 0, 0, 1200, 0, 0, 0, 4448, 0, 0,
	0, 0, 0, 0, 0, 1200, 255, 0, 255, 0,
	1200, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1200, 1200, 1200, 0, 0,
	4427, 0, 0, 0, 2607, 255, 0, 1200, 255, 0,
	0, 0, 0, 0, 0, 0, 1717, 1718, 0, 1750,
	1751, 1752, 1760, 1761, 1762, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 1200, 0, 1753,
	1748, 782, 255, 0, 255, 0, 255, 1720, 255, 0,
	255, 0, 0, 0, 0, 1766, 0, 0, 1937, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1200, 0,
	1200, 1719, 0, 0, 0, 2650, 0, 0, 1245, 0,
	255, 1739, 1245, 0, 1245, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 1200, 0, 0, 0, 0, 0,
	0, 2175, 0, 0, 0, 0, 0, 0, 0, 4427,
	4571, 0, 0, 0, 0, 0, 0, 0, 4575, 0,
	0, 1937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 257, 257,
	0, 0, 257, 0, 1282, 0, 0, 0, 1200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1200,
	1200, 0, 1742, 1743, 1744, 1745, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 1282, 257,
	257, 0, 1282, 257, 257, 0, 1282, 0, 1200, 0,
	0, 1200, 0, 0, 1437, 0, 257, 0, 1757, 0,
	0, 1767, 0, 0, 0, 0, 0, 1747, 1749, 1200,
	1200, 0, 0, 0, 0, 0, 0, 1282, 0, 0,
	0, 0, 0, 0, 1763, 0, 1764, 0, 0, 0,
	0, 0, 0, 1734, 1735, 0, 0, 0, 0, 0,
	0, 0, 1282, 0, 257, 257, 1937, 0, 2163, 0,
	0, 1755, 0, 0, 0, 0, 2175, 0, 0, 0,
	0, 0, 1282, 0, 0, 0, 1740, 1282, 257, 257,
	1196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1282, 0, 0, 0, 0, 1196, 0, 0, 0,
	0, 0, 0, 1200, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 1200, 2918, 0, 1765, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 72, 0, 0, 0, 2928, 1754, 2931, 0, 1062,
	106, 0, 0, 0, 1282, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 1200, 0,
	0, 1200, 255, 0, 257, 1200, 0, 0, 2956, 1437,
	2958, 1437, 0, 0, 0, 1200, 1200, 2964, 0, 0,
	0, 255, 0, 257, 255, 0, 0, 0, 255, 1746,
	255, 0, 1200, 84, 0, 0, 0, 255, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 1741,
	1245, 0, 0, 0, 0, 0, 0, 0, 2992, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	847, 0, 0, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 90,
	101, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 255, 0, 0, 72, 0, 46, 45, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 148, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 1001, 0, 0, 0, 91, 0, 67, 0,
	255, 0, 0, 1021, 0, 48, 0, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1756, 47, 782, 84, 0, 1731,
	1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 0, 1183, 0, 0, 0,
	0, 50, 68, 3854, 255, 0, 0, 0, 0, 51,
	0, 0, 255, 0, 57, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 49, 0, 104, 0,
	0, 0, 0, 90, 101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1282,
	0, 0, 255, 257, 257, 257, 0, 0, 0, 2626,
	257, 0, 52, 0, 0, 0, 0, 257, 0, 0,
	1282, 255, 0, 255, 1200, 0, 1200, 0, 0, 94,
	91, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 255, 255, 255, 0, 0,
	0, 0, 0, 255, 0, 255, 0, 0, 0, 0,
	180, 97, 0, 100, 0, 0, 1282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 224, 0, 0,
	0, 0, 0, 0, 255, 848, 0, 0, 0, 1245,
	145, 1282, 0, 1437, 1437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1717, 1718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 3252, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 147,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 0, 0, 0, 184, 0, 3302, 3304, 0, 2175,
	0, 1719, 225, 0, 56, 0, 0, 0, 0, 59,
	0, 1739, 0, 218, 0, 0, 0, 0, 69, 0,
	1736, 0, 219, 58, 180, 97, 0, 100, 0, 0,
	0, 54, 0, 0, 0, 152, 0, 0, 0, 0,
	0, 0, 55, 0, 183, 257, 1282, 1282, 257, 0,
	0, 224, 0, 0, 0, 0, 1282, 0, 0, 62,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 2994, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 1743, 1744, 1745, 0, 226, 0, 0,
	3379, 257, 1725, 0, 3383, 257, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 147, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 257, 0, 0, 0, 184, 0,
	257, 0, 0, 0, 1196, 0, 225, 1747, 1749, 1282,
	0, 1282, 0, 1282, 0, 0, 0, 218, 0, 0,
	1196, 0, 0, 0, 3435, 0, 219, 0, 0, 1282,
	1282, 0, 0, 1734, 1735, 0, 0, 0, 0, 0,
	1282, 257, 0, 0, 257, 0, 0, 0, 183, 0,
	1881, 3, 1282, 0, 1282, 1282, 1282, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 1740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 257, 3474,
	257, 1437, 257, 0, 257, 0, 257, 0, 106, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 255,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3487, 0, 261,
	72, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 72,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 106, 0, 106, 73, 0, 0, 0, 0,
	0, 0, 255, 255, 0, 255, 0, 1282, 0, 0,
	0, 77, 1881, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 84, 774, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 1021, 106, 106, 774, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 106, 847,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 106, 104, 0, 0, 0, 0, 90, 101,
	0, 0, 0, 0, 255, 0, 0, 0, 847, 0,
	0, 0, 0, 0, 1282, 0, 0, 0, 782, 0,
	0, 0, 104, 0, 0, 0, 255, 90, 101, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 106, 0, 91, 0, 1196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1282, 91, 0, 0, 0, 0, 0,
	255, 0, 0, 1737, 1733, 0, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 0, 257, 0, 0, 1282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1001, 0, 255, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 255, 1793, 0, 0, 257, 0, 0,
	257, 0, 0, 0, 257, 0, 257, 0, 94, 0,
	0, 0, 0, 257, 257, 0, 0, 0, 0, 1282,
	1282, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 2175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2175, 0, 0, 0, 0, 0, 180,
	97, 1282, 100, 3747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2175, 257, 0,
	0, 0, 3763, 0, 0, 0, 224, 0, 180, 97,
	257, 100, 0, 0, 848, 0, 0, 0, 0, 145,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 224, 1882, 0, 106, 0,
	0, 0, 0, 848, 0, 0, 257, 1282, 145, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 1282, 0, 0, 0, 0, 0, 0, 3811, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 147, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 1196, 1196,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	257, 225, 0, 1282, 0, 0, 0, 147, 257, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 184, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 1282, 0, 0, 0, 0, 0,
	0, 218, 0, 183, 0, 0, 1282, 0, 1282, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 1282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1553, 0, 0, 0, 0, 257, 0, 257,
	0, 0, 0, 0, 0, 1717, 1718, 257, 1750, 1751,
	1752, 1760, 1761, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 1748,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 0,
	257, 257, 257, 257, 1766, 0, 0, 0, 0, 257,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	1739, 0, 257, 0, 0, 0, 0, 0, 0, 1736,
	257, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	3946, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	1078, 0, 0, 0, 2175, 0, 0, 0, 255, 0,
	0, 0, 0, 255, 0, 0, 1280, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1196, 0,
	0, 1742, 1743, 1744, 1745, 0, 0, 0, 0, 0,
	0, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 2175, 0, 0, 1338, 0, 0, 0, 1280, 0,
	0, 4016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 1757, 0, 0,
	1767, 0, 0, 0, 0, 0, 1747, 1749, 0, 1280,
	0, 1021, 0, 1021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 1764, 0, 0, 0, 0,
	0, 0, 1734, 1735, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 0, 1280, 0, 0, 0, 0, 1280,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 1280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 1282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 1280, 0, 1196, 0,
	0, 72, 0, 0, 0, 0, 1196, 0, 4114, 0,
	0, 0, 0, 0, 1282, 0, 0, 73, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1282,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 1001,
	0, 0, 1001, 1001, 0, 0, 0, 0, 0, 0,
	1282, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	2175, 0, 0, 0, 1282, 1282, 0, 0, 1881, 0,
	1881, 257, 0, 84, 0, 257, 257, 0, 1741, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2397, 0, 0,
	255, 0, 255, 0, 1758, 0, 257, 0, 0, 0,
	847, 0, 0, 1021, 0, 0, 0, 0, 0, 255,
	0, 0, 1787, 0, 104, 0, 1787, 0, 0, 90,
	101, 0, 0, 0, 0, 0, 0, 0, 1282, 0,
	0, 4229, 1437, 0, 0, 0, 0, 0, 257, 257,
	0, 257, 0, 0, 0, 0, 0, 255, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 257, 1282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 91, 0, 1282, 0,
	0, 0, 0, 0, 0, 0, 1881, 1282, 1183, 0,
	0, 0, 1282, 1756, 0, 0, 0, 0, 1731, 1732,
	1738, 1759, 1737, 1733, 1882, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 1282, 0, 0, 0, 0,
	257, 1282, 3505, 1282, 0, 0, 0, 1282, 0, 0,
	0, 0, 0, 910, 257, 956, 0, 106, 0, 0,
	0, 0, 257, 0, 0, 1282, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1282, 0, 0, 0,
	918, 0, 0, 257, 0, 4316, 0, 0, 0, 0,
	0, 1338, 0, 0, 0, 0, 932, 916, 915, 0,
	0, 0, 774, 0, 0, 0, 0, 0, 0, 774,
	0, 0, 1280, 0, 0, 0, 0, 0, 1282, 1282,
	0, 0, 0, 0, 0, 917, 257, 0, 0, 0,
	920, 0, 0, 0, 255, 964, 0, 0, 0, 94,
	0, 1282, 0, 0, 929, 930, 0, 0, 0, 0,
	0, 0, 0, 946, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 957,
	922, 0, 0, 0, 0, 0, 0, 4369, 1280, 1282,
	0, 257, 1282, 257, 0, 0, 255, 0, 0, 1280,
	180, 97, 0, 100, 0, 0, 923, 0, 0, 0,
	0, 0, 0, 106, 0, 955, 0, 0, 0, 0,
	0, 0, 0, 1338, 4404, 0, 0, 224, 0, 257,
	0, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 0, 0, 925,
	1881, 1881, 0, 0, 0, 0, 1282, 914, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 255, 255, 0,
	0, 0, 0, 1282, 0, 926, 927, 0, 106, 0,
	0, 106, 0, 106, 0, 0, 0, 4464, 0, 147,
	0, 0, 0, 0, 934, 933, 0, 0, 0, 0,
	0, 0, 928, 0, 184, 0, 943, 1281, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 961, 954, 106, 0, 0, 106,
	0, 0, 219, 0, 1881, 106, 0, 0, 1280, 1280,
	0, 0, 0, 0, 0, 0, 1881, 0, 1338, 0,
	707, 1339, 0, 0, 1551, 1339, 958, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	690, 0, 0, 0, 0, 0, 691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 255, 1881, 0, 106, 0, 0, 921, 0, 0,
	963, 0, 0, 0, 692, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 693, 0, 1282, 0, 0,
	0, 0, 919, 0, 0, 1281, 950, 951, 0, 0,
	1281, 1280, 0, 1280, 0, 1280, 694, 0, 0, 953,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	0, 1280, 1280, 0, 0, 0, 713, 0, 0, 0,
	948, 0, 1280, 0, 0, 0, 0, 962, 944, 0,
	937, 935, 0, 940, 1280, 695, 1280, 1280, 1280, 941,
	0, 0, 912, 255, 959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 696, 774,
	0, 0, 0, 0, 0, 913, 0, 0, 2397, 0,
	0, 0, 0, 0, 0, 0, 952, 0, 942, 697,
	255, 0, 698, 0, 939, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 0, 960, 0, 0, 722, 0,
	0, 0, 0, 945, 0, 0, 0, 0, 0, 0,
	0, 0, 924, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 712, 0, 0, 0, 947, 0, 0, 0,
	0, 1282, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 949,
	0, 0, 0, 255, 0, 257, 0, 0, 0, 1338,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	1282, 709, 0, 0, 0, 0, 0, 0, 2511, 2512,
	2513, 2514, 2507, 2508, 2509, 2510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1282, 1282, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 1881, 0, 0,
	257, 0, 1282, 0, 0, 0, 1338, 0, 719, 0,
	700, 0, 1183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1282, 0, 1183, 2487,
	2488, 2489, 2490, 0, 0, 0, 0, 0, 720, 0,
	701, 0, 0, 0, 0, 0, 0, 0, 800, 0,
	0, 0, 2499, 2500, 2501, 2502, 2495, 2496, 2497, 2498,
	2503, 2504, 2505, 2506, 0, 0, 0, 0, 802, 0,
	0, 0, 0, 0, 803, 1338, 721, 0, 0, 0,
	0, 0, 0, 702, 0, 0, 0, 717, 718, 715,
	0, 0, 0, 0, 0, 710, 0, 0, 703, 0,
	0, 1338, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 804, 0, 821, 0, 0, 0, 0, 0,
	0, 0, 0, 1281, 0, 2483, 2484, 2485, 2486, 2491,
	2492, 2493, 2494, 0, 0, 0, 0, 0, 704, 805,
	711, 0, 0, 0, 806, 0, 1282, 0, 1282, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 706, 829, 0, 0, 0, 714, 0,
	807, 0, 1282, 106, 106, 0, 0, 106, 0, 0,
	0, 0, 723, 827, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 708, 0, 0, 0, 0, 0, 0,
	1281, 1280, 1280, 0, 0, 0, 801, 0, 0, 0,
	0, 0, 0, 0, 106, 106, 0, 0, 106, 0,
	0, 0, 257, 0, 1339, 0, 0, 808, 0, 0,
	809, 0, 0, 0, 1282, 0, 257, 0, 257, 0,
	0, 831, 0, 1338, 0, 1282, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1282, 1282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1282, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 1282, 257, 0, 0, 0, 1282, 0, 1338,
	0, 0, 0, 0, 0, 1183, 0, 0, 1021, 830,
	0, 0, 0, 1280, 0, 0, 0, 0, 0, 825,
	0, 0, 106, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 1282, 1282, 1282, 0, 0, 0, 0, 1281,
	1281, 0, 0, 0, 1282, 0, 0, 0, 0, 1339,
	0, 0, 0, 0, 0, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1282, 0, 0, 810, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 0, 812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1280, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 1282, 0, 1282, 813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1282, 1281, 0, 1281, 0, 1281, 0, 0, 0,
	257, 0, 0, 0, 721, 0, 0, 0, 0, 0,
	0, 0, 1281, 1281, 0, 799, 0, 822, 0, 0,
	0, 0, 0, 1281, 0, 0, 814, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 1281, 1281, 1281,
	0, 0, 0, 0, 0, 1282, 0, 0, 0, 0,
	820, 0, 257, 0, 0, 0, 1282, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 815, 0, 0, 0,
	816, 834, 0, 833, 0, 0, 0, 817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 818, 0, 0, 0, 1282, 826, 0, 1282, 0,
	0, 0, 835, 0, 832, 0, 0, 0, 0, 0,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 257, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1183, 1183, 0, 0,
	1339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1717, 1718, 1339, 1750, 1751,
	1752, 1760, 1761, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 1753, 1748,
	0, 0, 1282, 0, 0, 0, 1720, 0, 0, 0,
	0, 0, 1282, 1282, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1282,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 0, 1339, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 1280, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 1742, 1743, 1744, 1745, 0, 1183, 0, 0, 0,
	0, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 1281, 0, 0, 0, 1757, 0, 106,
	1767, 0, 0, 0, 0, 0, 1747, 1749, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 1763, 0, 1764, 0, 0, 0, 0,
	0, 0, 1734, 1735, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1280, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 1740, 0, 0, 0, 1280,
	0, 0, 0, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 0,
	1339, 0, 0, 1280, 0, 1280, 0, 1765, 0, 1338,
	0, 0, 0, 0, 1281, 0, 774, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 1280, 0, 0,
	106, 0, 0, 0, 0, 0, 1183, 0, 1280, 0,
	0, 0, 0, 0, 1183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 1280, 0, 0, 0, 0, 0, 1281, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 1281, 0, 1280, 0, 0, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 1338, 0, 0, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 1338, 0, 0, 1731, 1732,
	1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 3062, 1717, 1718, 0, 1750, 1751, 1752, 1760,
	1761, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 1748, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	1743, 1744, 1745, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 1767, 0,
	2397, 0, 0, 0, 1747, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1339, 0, 0,
	0, 1763, 0, 1764, 0, 0, 0, 0, 0, 0,
	1734, 1735, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1740, 0, 0, 0, 1281, 1281, 0,
	0, 0, 0, 1280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1280, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 1281, 0, 0, 0, 0, 0, 1280, 1280, 1280,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 1338, 0, 1746, 0, 0, 0,
	0, 1339, 0, 0, 0, 0, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 1281, 1741, 0, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 1758, 0, 1281, 0, 1281, 0, 0, 0,
	1339, 1717, 1718, 0, 1750, 1751, 1752, 1760, 1761, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 0, 1753, 1748, 0, 0, 0, 1281,
	0, 0, 1720, 0, 0, 0, 0, 0, 0, 106,
	1766, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1719, 0, 0, 0,
	0, 1281, 1281, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 1338, 0,
	1338, 1756, 0, 0, 1281, 0, 1731, 1732, 1738, 1759,
	1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724,
	1726, 1727, 0, 0, 1338, 0, 0, 0, 0, 0,
	3061, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1339, 0, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 1743, 1744,
	1745, 0, 0, 0, 0, 0, 0, 1725, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 1717, 1718, 0, 1750, 1751, 1752,
	1760, 1761, 1762, 1757, 0, 0, 1767, 0, 0, 1339,
	0, 0, 1747, 1749, 0, 1280, 1280, 1753, 1748, 0,
	0, 0, 0, 0, 0, 1720, 1339, 0, 0, 1763,
	0, 1764, 1280, 1766, 0, 0, 0, 0, 1734, 1735,
	0, 0, 0, 0, 1338, 0, 0, 0, 0, 1280,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 1719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1739,
	0, 1740, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 1280, 1280, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 1743, 1744, 1745, 0, 0, 0, 0, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 1338, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 1746, 0, 1757, 0, 0, 1767,
	0, 0, 0, 0, 0, 1747, 1749, 0, 0, 0,
	0, 0, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 0, 1763, 0, 1764, 0, 0, 0, 0, 0,
	0, 1734, 1735, 0, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 0, 0, 0, 1338, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 1280, 1280,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1338, 0, 0,
	1280, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733,
	0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 3058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1281, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1741, 1281, 1281,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1339,
	0, 0, 0, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 1280, 0, 0, 0, 0,
	0, 1717, 1718, 0, 1750, 1751, 1752, 1760, 1761, 1762,
	0, 1280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 1748, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 0, 0, 0,
	1766, 0, 1756, 0, 0, 0, 0, 1731, 1732, 1738,
	1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 0, 0, 0, 1719, 0, 0, 0,
	0, 3057, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 1717, 1718,
	0, 1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 1339,
	0, 1339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 1748, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 1339, 0, 1766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 0, 0, 0, 1742, 1743, 1744,
	1745, 0, 0, 1739, 0, 0, 0, 1725, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 1757, 0, 0, 1767, 0, 0, 0,
	0, 0, 1747, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 1281, 0, 1763,
	0, 1764, 0, 0, 0, 0, 0, 0, 1734, 1735,
	0, 0, 0, 1281, 1742, 1743, 1744, 1745, 0, 0,
	0, 0, 0, 0, 1725, 1339, 1755, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 1767, 0, 1281, 1281, 1281, 0, 1747,
	1749, 0, 0, 0, 0, 0, 0, 1339, 0, 0,
	0, 0, 0, 1765, 0, 0, 1763, 0, 1764, 0,
	0, 0, 0, 0, 0, 1734, 1735, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 1339, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1339, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1741, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 1339, 0,
	0, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733,
	0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 3056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 2420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1336, 0, 0, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 1281, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 1341, 273, 274, 1342,
	1343, 1344, 1281, 1345, 603, 1346, 1347, 1348, 1349, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 1350, 608, 284, 285, 286, 287,
	288, 289, 1351, 1352, 0, 290, 609, 610, 611, 1353,
	291, 292, 612, 1354, 1283, 1355, 293, 294, 295, 296,
	297, 298, 299, 0, 1356, 301, 302, 303, 300, 304,
	1357, 305, 0, 306, 307, 308, 309, 310, 311, 1358,
	312, 313, 314, 1141, 315, 316, 1359, 1360, 1362, 1361,
	1363, 1364, 1365, 317, 318, 319, 320, 0, 321, 613,
	614, 1366, 325, 322, 323, 1367, 326, 324, 1368, 327,
	328, 329, 1369, 1370, 330, 331, 332, 1371, 333, 334,
	1372, 335, 336, 337, 1373, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 1374, 262, 1375, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 1376, 356, 1377, 1378,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1379, 368, 621, 1380, 622, 369,
	1381, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	1144, 375, 376, 1382, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1383, 1143, 384, 626,
	627, 1384, 628, 1385, 386, 387, 1145, 629, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1386, 398, 400, 399, 1387, 401, 630,
	1148, 402, 403, 1149, 1388, 404, 0, 0, 0, 405,
	406, 409, 1389, 1390, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 1391, 264,
	1152, 448, 449, 1392, 631, 450, 632, 452, 453, 1393,
	0, 454, 0, 1394, 1395, 456, 457, 458, 1396, 1397,
	459, 460, 633, 1153, 461, 1154, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1398, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 1399, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	1400, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1401, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1402, 532, 533, 531, 534, 535, 536,
	1403, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 1404, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 1405, 562, 563, 0, 559, 551, 1406,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 1407,
	572, 644, 645, 646, 647, 1408, 581, 1409, 573, 574,
	575, 648, 576, 649, 1410, 577, 578, 579, 580, 0,
	582, 583, 1411, 1412, 584, 585, 586, 588, 589, 587,
	590, 1413, 591, 1414, 0, 592, 593, 594, 650, 651,
	652, 1415, 596, 595, 597, 653, 1416, 1417, 1418, 1419,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1336, 0, 0, 0, 0, 0, 0, 0, 2585, 0,
	0, 0, 0, 0, 0, 0, 2586, 265, 267, 266,
	268, 269, 270, 271, 272, 1341, 273, 274, 1342, 1343,
	1344, 0, 1345, 603, 1346, 1347, 1348, 1349, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 1350, 608, 284, 285, 286, 287, 288,
	289, 1351, 1352, 0, 290, 609, 610, 611, 1353, 291,
	292, 612, 1354, 1283, 1355, 293, 294, 295, 296, 297,
	298, 299, 0, 1356, 301, 302, 303, 300, 304, 1357,
	305, 0, 306, 307, 308, 309, 310, 311, 1358, 312,
	313, 314, 1141, 315, 316, 1359, 1360, 1362, 1361, 1363,
	1364, 1365, 317, 318, 319, 320, 0, 321, 613, 614,
	1366, 325, 322, 323, 1367, 326, 324, 1368, 327, 328,
	329, 1369, 1370, 330, 331, 332, 1371, 333, 334, 1372,
	335, 336, 337, 1373, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	1374, 262, 1375, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 1376, 356, 1377, 1378, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1379, 368, 621, 1380, 622, 369, 1381,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 1382, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1383, 1143, 384, 626, 627,
	1384, 628, 1385, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1386, 398, 400, 399, 1387, 401, 630, 1148,
	402, 403, 1149, 1388, 404, 0, 0, 0, 405, 406,
	409, 1389, 1390, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1391, 264, 1152,
	448, 449, 1392, 631, 450, 632, 452, 453, 1393, 0,
	454, 0, 1394, 1395, 456, 457, 458, 1396, 1397, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1398, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 1399, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 1400,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1401,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1402, 532, 533, 531, 534, 535, 536, 1403,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 1404, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 1405, 562, 563, 0, 559, 551, 1406, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 1407, 572,
	644, 645, 646, 647, 1408, 581, 1409, 573, 574, 575,
	648, 576, 649, 1410, 577, 578, 579, 580, 0, 582,
	583, 1411, 1412, 584, 585, 586, 588, 589, 587, 590,
	1413, 591, 1414, 0, 592, 593, 594, 650, 651, 652,
	1415, 596, 595, 597, 653, 1416, 1417, 1418, 1419, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 0,
	0, 0, 3513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3515, 265, 267, 266, 268, 269, 270,
	271, 272, 1341, 273, 274, 1342, 1343, 1344, 0, 1345,
	603, 1346, 1347, 1348, 1349, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	1350, 608, 284, 285, 286, 287, 288, 289, 1351, 1352,
	0, 290, 609, 610, 611, 1353, 291, 292, 612, 1354,
	1283, 1355, 293, 294, 295, 296, 297, 298, 299, 0,
	1356, 301, 302, 303, 300, 304, 1357, 305, 0, 306,
	307, 308, 309, 310, 311, 1358, 312, 313, 314, 1141,
	315, 316, 1359, 1360, 1362, 1361, 1363, 1364, 1365, 317,
	318, 319, 320, 0, 321, 613, 614, 1366, 325, 322,
	323, 1367, 326, 324, 1368, 327, 328, 329, 1369, 1370,
	330, 331, 332, 1371, 333, 334, 1372, 335, 336, 337,
	1373, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 1374, 262, 1375,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 1376, 356, 1377, 1378, 1142, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	1379, 368, 621, 1380, 622, 369, 1381, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 1144, 375, 376, 1382,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 1383, 1143, 384, 626, 627, 1384, 628, 1385,
	386, 387, 1145, 629, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 1386,
	398, 400, 399, 1387, 401, 630, 1148, 402, 403, 1149,
	1388, 404, 0, 0, 0, 405, 406, 409, 1389, 1390,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 1391, 264, 1152, 448, 449, 1392,
	631, 450, 632, 452, 453, 1393, 0, 454, 0, 1394,
	1395, 456, 457, 458, 1396, 1397, 459, 460, 633, 1153,
	461, 1154, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 1398, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	1399, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 1400, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 1401, 509, 510, 511,
	1155, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 1402,
	532, 533, 531, 534, 535, 536, 1403, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 1404, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 1405,
	562, 563, 0, 559, 551, 1406, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 1407, 572, 644, 645, 646,
	647, 1408, 581, 1409, 573, 574, 575, 648, 576, 649,
	1410, 577, 578, 579, 580, 0, 582, 583, 1411, 1412,
	584, 585, 586, 588, 589, 587, 590, 1413, 591, 1414,
	0, 592, 593, 594, 650, 651, 652, 1415, 596, 595,
	597, 653, 1416, 1417, 1418, 1419, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 1336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3882, 265, 267, 266, 268, 269,
	270, 271, 272, 1341, 273, 274, 1342, 1343, 1344, 0,
	1345, 603, 1346, 1347, 1348, 1349, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 1350, 608, 284, 285, 286, 287, 288, 289, 1351,
	1352, 0, 290, 609, 610, 611, 1353, 291, 292, 612,
	1354, 1283, 1355, 293, 294, 295, 296, 297, 298, 299,
	0, 1356, 301, 302, 303, 300, 304, 1357, 305, 0,
	306, 307, 308, 309, 310, 311, 1358, 312, 313, 314,
	1141, 315, 316, 1359, 1360, 1362, 1361, 1363, 1364, 1365,
	317, 318, 319, 320, 0, 321, 613, 614, 1366, 325,
	322, 323, 1367, 326, 324, 1368, 327, 328, 329, 1369,
	1370, 330, 331, 332, 1371, 333, 334, 1372, 335, 336,
	337, 1373, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 1374, 262,
	1375, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 1376, 356, 1377, 1378, 1142, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 1379, 368, 621, 1380, 622, 369, 1381, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 1144, 375, 376,
	1382, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 1383, 1143, 384, 626, 627, 1384, 628,
	1385, 386, 387, 1145, 629, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	1386, 398, 400, 399, 1387, 401, 630, 1148, 402, 403,
	1149, 1388, 404, 0, 0, 0, 405, 406, 409, 1389,
	1390, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1391, 264, 1152, 448, 449,
	1392, 631, 450, 632, 452, 453, 1393, 0, 454, 0,
	1394, 1395, 456, 457, 458, 1396, 1397, 459, 460, 633,
	1153, 461, 1154, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 1398, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 1399, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 1400, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 1401, 509, 510,
	511, 1155, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	1402, 532, 533, 531, 534, 535, 536, 1403, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 1404, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	1405, 562, 563, 0, 559, 551, 1406, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 1407, 572, 644, 645,
	646, 647, 1408, 581, 1409, 573, 574, 575, 648, 576,
	649, 1410, 577, 578, 579, 580, 0, 582, 583, 1411,
	1412, 584, 585, 586, 588, 589, 587, 590, 1413, 591,
	1414, 0, 592, 593, 594, 650, 651, 652, 1415, 596,
	595, 597, 653, 1416, 1417, 1418, 1419, 598, 599, 654,
	600, 601, 602, 0, 1336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4066, 265, 267, 266, 268, 269, 270, 271, 272, 1341,
	273, 274, 1342, 1343, 1344, 0, 1345, 603, 1346, 1347,
	1348, 1349, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 1350, 608, 284,
	285, 286, 287, 288, 289, 1351, 1352, 0, 290, 609,
	610, 611, 1353, 291, 292, 612, 1354, 1283, 1355, 293,
	294, 295, 296, 297, 298, 299, 0, 1356, 301, 302,
	303, 300, 304, 1357, 305, 0, 306, 307, 308, 309,
	310, 311, 1358, 312, 313, 314, 1141, 315, 316, 1359,
	1360, 1362, 1361, 1363, 1364, 1365, 317, 318, 319, 320,
	0, 321, 613, 614, 1366, 325, 322, 323, 1367, 326,
	324, 1368, 327, 328, 329, 1369, 1370, 330, 331, 332,
	1371, 333, 334, 1372, 335, 336, 337, 1373, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 1374, 262, 1375, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 1376,
	356, 1377, 1378, 1142, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 1379, 368, 621,
	1380, 622, 369, 1381, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 1144, 375, 376, 1382, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 1383,
	1143, 384, 626, 627, 1384, 628, 1385, 386, 387, 1145,
	629, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 1386, 398, 400, 399,
	1387, 401, 630, 1148, 402, 403, 1149, 1388, 404, 0,
	0, 0, 405, 406, 409, 1389, 1390, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1391, 264, 1152, 448, 449, 1392, 631, 450, 632,
	452, 453, 1393, 0, 454, 0, 1394, 1395, 456, 457,
	458, 1396, 1397, 459, 460, 633, 1153, 461, 1154, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 1398, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 1399, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 1400, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 1401, 509, 510, 511, 1155, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 1402, 532, 533, 531,
	534, 535, 536, 1403, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	1404, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 1405, 562, 563, 0,
	559, 551, 1406, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 1407, 572, 644, 645, 646, 647, 1408, 581,
	1409, 573, 574, 575, 648, 576, 649, 1410, 577, 578,
	579, 580, 0, 582, 583, 1411, 1412, 584, 585, 586,
	588, 589, 587, 590, 1413, 591, 1414, 0, 592, 593,
	594, 650, 651, 652, 1415, 596, 595, 597, 653, 1416,
	1417, 1418, 1419, 598, 599, 654, 600, 601, 602, 0,
	1336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3954, 265, 267, 266,
	268, 269, 270, 271, 272, 1341, 273, 274, 1342, 1343,
	1344, 0, 1345, 603, 1346, 1347, 1348, 1349, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 1350, 608, 284, 285, 286, 287, 288,
	289, 1351, 1352, 0, 290, 609, 610, 611, 1353, 291,
	292, 612, 1354, 1283, 1355, 293, 294, 295, 296, 297,
	298, 299, 0, 1356, 301, 302, 303, 300, 304, 1357,
	305, 0, 306, 307, 308, 309, 310, 311, 1358, 312,
	313, 314, 1141, 315, 316, 1359, 1360, 1362, 1361, 1363,
	1364, 1365, 317, 318, 319, 320, 0, 321, 613, 614,
	1366, 325, 322, 323, 1367, 326, 324, 1368, 327, 328,
	329, 1369, 1370, 330, 331, 332, 1371, 333, 334, 1372,
	335, 336, 337, 1373, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	1374, 262, 1375, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 1376, 356, 1377, 1378, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1379, 368, 621, 1380, 622, 369, 1381,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 1382, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1383, 1143, 384, 626, 627,
	1384, 628, 1385, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1386, 398, 400, 399, 1387, 401, 630, 1148,
	402, 403, 1149, 1388, 404, 0, 0, 0, 405, 406,
	409, 1389, 1390, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1391, 264, 1152,
	448, 449, 1392, 631, 450, 632, 452, 453, 1393, 0,
	454, 0, 1394, 1395, 456, 457, 458, 1396, 1397, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1398, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 1399, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 1400,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1401,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1402, 532, 533, 531, 534, 535, 536, 1403,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 1404, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 1405, 562, 563, 0, 559, 551, 1406, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 1407, 572,
	644, 645, 646, 647, 1408, 581, 1409, 573, 574, 575,
	648, 576, 649, 1410, 577, 578, 579, 580, 0, 582,
	583, 1411, 1412, 584, 585, 586, 588, 589, 587, 590,
	1413, 591, 1414, 0, 592, 593, 594, 650, 651, 652,
	1415, 596, 595, 597, 653, 1416, 1417, 1418, 1419, 598,
	599, 654, 600, 601, 602, 0, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3812, 265, 267, 266, 268, 269, 270, 271,
	272, 1341, 273, 274, 1342, 1343, 1344, 0, 1345, 603,
	1346, 1347, 1348, 1349, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 1350,
	608, 284, 285, 286, 287, 288, 289, 1351, 1352, 0,
	290, 609, 610, 611, 1353, 291, 292, 612, 1354, 1283,
	1355, 293, 294, 295, 296, 297, 298, 299, 0, 1356,
	301, 302, 303, 300, 304, 1357, 305, 0, 306, 307,
	308, 309, 310, 311, 1358, 312, 313, 314, 1141, 315,
	316, 1359, 1360, 1362, 1361, 1363, 1364, 1365, 317, 318,
	319, 320, 0, 321, 613, 614, 1366, 325, 322, 323,
	1367, 326, 324, 1368, 327, 328, 329, 1369, 1370, 330,
	331, 332, 1371, 333, 334, 1372, 335, 336, 337, 1373,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 1374, 262, 1375, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 1376, 356, 1377, 1378, 1142, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 1379,
	368, 621, 1380, 622, 369, 1381, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 1144, 375, 376, 1382, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 1383, 1143, 384, 626, 627, 1384, 628, 1385, 386,
	387, 1145, 629, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 1386, 398,
	400, 399, 1387, 401, 630, 1148, 402, 403, 1149, 1388,
	404, 0, 0, 0, 405, 406, 409, 1389, 1390, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1391, 264, 1152, 448, 449, 1392, 631,
	450, 632, 452, 453, 1393, 0, 454, 0, 1394, 1395,
	456, 457, 458, 1396, 1397, 459, 460, 633, 1153, 461,
	1154, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 1398, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 1399,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 1400, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 1401, 509, 510, 511, 1155,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 1402, 532,
	533, 531, 534, 535, 536, 1403, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 1404, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 1405, 562,
	563, 0, 559, 551, 1406, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 1407, 572, 644, 645, 646, 647,
	1408, 581, 1409, 573, 574, 575, 648, 576, 649, 1410,
	577, 578, 579, 580, 0, 582, 583, 1411, 1412, 584,
	585, 586, 588, 589, 587, 590, 1413, 591, 1414, 0,
	592, 593, 594, 650, 651, 652, 1415, 596, 595, 597,
	653, 1416, 1417, 1418, 1419, 598, 599, 654, 600, 601,
	602, 0, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3531, 265,
	267, 266, 268, 269, 270, 271, 272, 1341, 273, 274,
	1342, 1343, 1344, 0, 1345, 603, 1346, 1347, 1348, 1349,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 1350, 608, 284, 285, 286,
	287, 288, 289, 1351, 1352, 0, 290, 609, 610, 611,
	1353, 291, 292, 612, 1354, 1283, 1355, 293, 294, 295,
	296, 297, 298, 299, 0, 1356, 301, 302, 303, 300,
	304, 1357, 305, 0, 306, 307, 308, 309, 310, 311,
	1358, 312, 313, 314, 1141, 315, 316, 1359, 1360, 1362,
	1361, 1363, 1364, 1365, 317, 318, 319, 320, 0, 321,
	613, 614, 1366, 325, 322, 323, 1367, 326, 324, 1368,
	327, 328, 329, 1369, 1370, 330, 331, 332, 1371, 333,
	334, 1372, 335, 336, 337, 1373, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 1374, 262, 1375, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 1376, 356, 1377,
	1378, 1142, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 1379, 368, 621, 1380, 622,
	369, 1381, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 1144, 375, 376, 1382, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 1383, 1143, 384,
	626, 627, 1384, 628, 1385, 386, 387, 1145, 629, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 1386, 398, 400, 399, 1387, 401,
	630, 1148, 402, 403, 1149, 1388, 404, 0, 0, 0,
	405, 406, 409, 1389, 1390, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1391,
	264, 1152, 448, 449, 1392, 631, 450, 632, 452, 453,
	1393, 0, 454, 0, 1394, 1395, 456, 457, 458, 1396,
	1397, 459, 460, 633, 1153, 461, 1154, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 1398,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 1399, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 1400, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 1401, 509, 510, 511, 1155, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 1402, 532, 533, 531, 534, 535,
	536, 1403, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 1404, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 1405, 562, 563, 0, 559, 551,
	1406, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	1407, 572, 644, 645, 646, 647, 1408, 581, 1409, 573,
	574, 575, 648, 576, 649, 1410, 577, 578, 579, 580,
	0, 582, 583, 1411, 1412, 584, 585, 586, 588, 589,
	587, 590, 1413, 591, 1414, 0, 592, 593, 594, 650,
	651, 652, 1415, 596, 595, 597, 653, 1416, 1417, 1418,
	1419, 598, 599, 654, 600, 601, 602, 0, 1336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3364, 265, 267, 266, 268, 269,
	270, 271, 272, 1341, 273, 274, 1342, 1343, 1344, 0,
	1345, 603, 1346, 1347, 1348, 1349, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 1350, 608, 284, 285, 286, 287, 288, 289, 1351,
	1352, 0, 290, 609, 610, 611, 1353, 291, 292, 612,
	1354, 1283, 1355, 293, 294, 295, 296, 297, 298, 299,
	0, 1356, 301, 302, 303, 300, 304, 1357, 305, 0,
	306, 307, 308, 309, 310, 311, 1358, 312, 313, 314,
	1141, 315, 316, 1359, 1360, 1362, 1361, 1363, 1364, 1365,
	317, 318, 319, 320, 0, 321, 613, 614, 1366, 325,
	322, 323, 1367, 326, 324, 1368, 327, 328, 329, 1369,
	1370, 330, 331, 332, 1371, 333, 334, 1372, 335, 336,
	337, 1373, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 1374, 262,
	1375, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 1376, 356, 1377, 1378, 1142, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 1379, 368, 621, 1380, 622, 369, 1381, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 1144, 375, 376,
	1382, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 1383, 1143, 384, 626, 627, 1384, 628,
	1385, 386, 387, 1145, 629, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	1386, 398, 400, 399, 1387, 401, 630, 1148, 402, 403,
	1149, 1388, 404, 0, 0, 0, 405, 406, 409, 1389,
	1390, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1391, 264, 1152, 448, 449,
	1392, 631, 450, 632, 452, 453, 1393, 0, 454, 0,
	1394, 1395, 456, 457, 458, 1396, 1397, 459, 460, 633,
	1153, 461, 1154, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 1398, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 1399, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 1400, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 1401, 509, 510,
	511, 1155, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	1402, 532, 533, 531, 534, 535, 536, 1403, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 1404, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	1405, 562, 563, 0, 559, 551, 1406, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 1407, 572, 644, 645,
	646, 647, 1408, 581, 1409, 573, 574, 575, 648, 576,
	649, 1410, 577, 578, 579, 580, 0, 582, 583, 1411,
	1412, 584, 585, 586, 588, 589, 587, 590, 1413, 591,
	1414, 0, 592, 593, 594, 650, 651, 652, 1415, 596,
	595, 597, 653, 1416, 1417, 1418, 1419, 598, 599, 654,
	600, 601, 602, 0, 1336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2443, 265, 267, 266, 268, 269, 270, 271, 272, 1341,
	273, 274, 1342, 1343, 1344, 0, 1345, 603, 1346, 1347,
	1348, 1349, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 1350, 608, 284,
	285, 286, 287, 288, 289, 1351, 1352, 0, 290, 609,
	610, 611, 1353, 291, 292, 612, 1354, 1283, 1355, 293,
	294, 295, 296, 297, 298, 299, 0, 1356, 301, 302,
	303, 300, 304, 1357, 305, 0, 306, 307, 308, 309,
	310, 311, 1358, 312, 313, 314, 1141, 315, 316, 1359,
	1360, 1362, 1361, 1363, 1364, 1365, 317, 318, 319, 320,
	0, 321, 613, 614, 1366, 325, 322, 323, 1367, 326,
	324, 1368, 327, 328, 329, 1369, 1370, 330, 331, 332,
	1371, 333, 334, 1372, 335, 336, 337, 1373, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 1374, 262, 1375, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 1376,
	356, 1377, 1378, 1142, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 1379, 368, 621,
	1380, 622, 369, 1381, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 1144, 375, 376, 1382, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 1383,
	1143, 384, 626, 627, 1384, 628, 1385, 386, 387, 1145,
	629, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 1386, 398, 400, 399,
	1387, 401, 630, 1148, 402, 403, 1149, 1388, 404, 0,
	0, 0, 405, 406, 409, 1389, 1390, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1391, 264, 1152, 448, 449, 1392, 631, 450, 632,
	452, 453, 1393, 0, 454, 0, 1394, 1395, 456, 457,
	458, 1396, 1397, 459, 460, 633, 1153, 461, 1154, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 1398, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 1399, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 1400, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 1401, 509, 510, 511, 1155, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 1402, 532, 533, 531,
	534, 535, 536, 1403, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	1404, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 1405, 562, 563, 0,
	559, 551, 1406, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 1407, 572, 644, 645, 646, 647, 1408, 581,
	1409, 573, 574, 575, 648, 576, 649, 1410, 577, 578,
	579, 580, 0, 582, 583, 1411, 1412, 584, 585, 586,
	588, 589, 587, 590, 1413, 591, 1414, 0, 592, 593,
	594, 650, 651, 652, 1415, 596, 595, 597, 653, 1416,
	1417, 1418, 1419, 598, 599, 654, 600, 601, 602, 1431,
	0, 1336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2137, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 1341, 273, 274, 1342,
	1343, 1344, 0, 1345, 603, 1346, 1347, 1348, 1349, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 1350, 608, 284, 285, 286, 287,
	288, 289, 1351, 1352, 0, 290, 609, 610, 611, 1353,
	291, 292, 612, 1354, 1283, 1355, 293, 294, 295, 296,
	297, 298, 299, 0, 1356, 301, 302, 303, 300, 304,
	1357, 305, 0, 306, 307, 308, 309, 310, 311, 1358,
	312, 313, 314, 1141, 315, 316, 1359, 1360, 1362, 1361,
	1363, 1364, 1365, 317, 318, 319, 320, 0, 321, 613,
	614, 1366, 325, 322, 323, 1367, 326, 324, 1368, 327,
	328, 329, 1369, 1370, 330, 331, 332, 1371, 333, 334,
	1372, 335, 336, 337, 1373, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 1374, 262, 1375, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 1376, 356, 1377, 1378,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1379, 368, 621, 1380, 622, 369,
	1381, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	1144, 375, 376, 1382, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1383, 1143, 384, 626,
	627, 1384, 628, 1385, 386, 387, 1145, 629, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1386, 398, 400, 399, 1387, 401, 630,
	1148, 402, 403, 1149, 1388, 404, 0, 0, 0, 405,
	406, 409, 1389, 1390, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 1391, 264,
	1152, 448, 449, 1392, 631, 450, 632, 452, 453, 1393,
	0, 454, 0, 1394, 1395, 456, 457, 458, 1396, 1397,
	459, 460, 633, 1153, 461, 1154, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1398, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 1399, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	1400, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1401, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1402, 532, 533, 531, 534, 535, 536,
	1403, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 1404, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 1405, 562, 563, 0, 559, 551, 1406,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 1407,
	572, 644, 645, 646, 647, 1408, 581, 1409, 573, 574,
	575, 648, 576, 649, 1410, 577, 578, 579, 580, 0,
	582, 583, 1411, 1412, 584, 585, 586, 588, 589, 587,
	590, 1413, 591, 1414, 0, 592, 593, 594, 650, 651,
	652, 1415, 596, 595, 597, 653, 1416, 1417, 1418, 1419,
	598, 599, 654, 600, 601, 602, 1333, 0, 1336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 1341, 273, 274, 1342, 1343, 1344, 0,
	1345, 603, 1346, 1347, 1348, 1349, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 1350, 608, 284, 285, 286, 287, 288, 289, 1351,
	1352, 0, 290, 609, 610, 611, 1353, 291, 292, 612,
	1354, 1283, 1355, 293, 294, 295, 296, 297, 298, 299,
	0, 1356, 301, 302, 303, 300, 304, 1357, 305, 0,
	306, 307, 308, 309, 310, 311, 1358, 312, 313, 314,
	1141, 315, 316, 1359, 1360, 1362, 1361, 1363, 1364, 1365,
	317, 318, 319, 320, 0, 321, 613, 614, 1366, 325,
	322, 323, 1367, 326, 324, 1368, 327, 328, 329, 1369,
	1370, 330, 331, 332, 1371, 333, 334, 1372, 335, 336,
	337, 1373, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 1374, 262,
	1375, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 1376, 356, 1377, 1378, 1142, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 1379, 368, 621, 1380, 622, 369, 1381, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 1144, 375, 376,
	1382, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 1383, 1143, 384, 626, 627, 1384, 628,
	1385, 386, 387, 1145, 629, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	1386, 398, 400, 399, 1387, 401, 630, 1148, 402, 403,
	1149, 1388, 404, 0, 0, 0, 405, 406, 409, 1389,
	1390, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1391, 264, 1152, 448, 449,
	1392, 631, 450, 632, 452, 453, 1393, 0, 454, 0,
	1394, 1395, 456, 457, 458, 1396, 1397, 459, 460, 633,
	1153, 461, 1154, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 1398, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 1399, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 1400, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 1401, 509, 510,
	511, 1155, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	1402, 532, 533, 531, 534, 535, 536, 1403, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 1404, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	1405, 562, 563, 0, 559, 551, 1406, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 1407, 572, 644, 645,
	646, 647, 1408, 581, 1409, 573, 574, 575, 648, 576,
	649, 1410, 577, 578, 579, 580, 0, 582, 583, 1411,
	1412, 584, 585, 586, 588, 589, 587, 590, 1413, 591,
	1414, 0, 592, 593, 594, 650, 651, 652, 1415, 596,
	595, 597, 653, 1416, 1417, 1418, 1419, 598, 599, 654,
	600, 601, 602, 1336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 1341, 273,
	274, 1342, 1343, 1344, 0, 1345, 603, 1346, 1347, 1348,
	1349, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 1350, 608, 284, 285,
	286, 287, 288, 289, 1351, 1352, 0, 290, 609, 610,
	611, 1353, 291, 292, 612, 1354, 1283, 1355, 293, 294,
	295, 296, 297, 298, 299, 0, 1356, 301, 302, 303,
	300, 304, 1357, 305, 0, 306, 307, 308, 309, 310,
	311, 1358, 312, 313, 314, 1141, 315, 316, 1359, 1360,
	1362, 1361, 1363, 1364, 1365, 317, 318, 319, 320, 0,
	321, 613, 614, 1366, 325, 322, 323, 1367, 326, 324,
	1368, 327, 328, 329, 1369, 1370, 330, 331, 332, 1371,
	333, 334, 1372, 335, 336, 337, 1373, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 1374, 262, 1375, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 1376, 356,
	1377, 1378, 1142, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 1379, 368, 621, 1380,
	622, 369, 1381, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 1144, 375, 376, 1382, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 1383, 1143,
	384, 626, 627, 1384, 628, 1385, 386, 387, 1145, 629,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 1386, 398, 400, 399, 1387,
	401, 630, 1148, 402, 403, 1149, 1388, 404, 0, 0,
	0, 405, 406, 409, 1389, 1390, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	1391, 264, 1152, 448, 449, 1392, 631, 450, 632, 452,
	453, 1393, 0, 454, 0, 1394, 1395, 456, 457, 458,
	1396, 1397, 459, 460, 633, 1153, 461, 1154, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	1398, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 1399, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 1400, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 1401, 509, 510, 511, 1155, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 1402, 532, 533, 531, 534,
	535, 536, 1403, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 1404,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 1405, 562, 563, 0, 559,
	551, 1406, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 1407, 572, 644, 645, 646, 647, 1408, 581, 1409,
	573, 574, 575, 648, 576, 649, 1410, 577, 578, 579,
	580, 0, 582, 583, 1411, 1412, 584, 585, 586, 588,
	589, 587, 590, 1413, 591, 1414, 0, 592, 593, 594,
	650, 651, 652, 1415, 596, 595, 597, 653, 1416, 1417,
	1418, 1419, 598, 599, 654, 600, 601, 602, 2418, 0,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 2415, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 2416, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	2414, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 2417, 0, 0, 0, 0, 0, 0, 1060,
	2413, 0, 1022, 1058, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 224, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 226, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 1549, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 218, 598, 599, 654, 600, 601, 602, 1035,
	0, 219, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 1792, 1790, 0, 0, 1058, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 224, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 226, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 1549, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 218, 598, 599, 654, 600, 601,
	602, 1035, 0, 219, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 1792, 3014, 0, 0, 1058,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	224, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 226, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 1549, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 218, 598, 599, 654,
	600, 601, 602, 1035, 0, 219, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 1792, 1790, 0,
	0, 1058, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 2546, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 2551, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 2547, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 2548, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 0, 0, 0, 0, 0, 0, 0, 1060,
	0, 0, 2463, 1058, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 0, 0, 0, 0,
	0, 0, 0, 1060, 2461, 0, 2460, 1058, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	0, 0, 0, 0, 0, 0, 0, 1060, 2458, 0,
	2457, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 0, 0, 0, 0, 0, 0,
	0, 1060, 2455, 0, 2454, 1058, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 0, 0,
	0, 0, 0, 0, 0, 1060, 2452, 0, 1642, 1058,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 1641, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 0, 0, 0, 0, 0, 0, 0, 1060,
	0, 0, 1025, 1058, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 1039, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 1060, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 4381, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 1039, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 1060, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 2332, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 2331, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 1039, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 4142, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 1039, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 1060, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 3775, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 1860, 0, 0, 0,
	0, 0, 0, 1060, 0, 0, 0, 1058, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 3509, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 1860, 0, 0, 0, 0, 0, 0, 1060,
	0, 0, 0, 1058, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 2551, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 1060, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 0, 0,
	0, 0, 0, 0, 0, 1060, 1790, 0, 2556, 1058,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 0, 0, 0, 0, 0, 0, 0, 1060,
	0, 0, 2554, 1058, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 0, 0, 0, 0,
	0, 0, 0, 1060, 0, 0, 2542, 1058, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	2531, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 0, 0, 0, 0, 0, 0,
	0, 1060, 0, 0, 2529, 1058, 2520, 2527, 1049, 1050,
	1046, 1047, 1059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 2523, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 2524,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	2525, 419, 2522, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 2526, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 2521,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 0, 0,
	0, 0, 0, 0, 0, 1060, 0, 0, 2517, 1058,
	2520, 2527, 1049, 1050, 1046, 1047, 1059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 2523, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 2524, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 2525, 419, 2522, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 2526, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 2521, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 0, 0, 0, 0, 0, 1798,
	0, 1060, 0, 0, 0, 1058, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 2311, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 0, 0,
	0, 0, 0, 0, 0, 1060, 0, 0, 1647, 1058,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 0, 0, 0, 0, 0, 0, 0, 1060,
	0, 0, 1579, 1058, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 0, 0, 0, 0,
	0, 0, 0, 1060, 0, 0, 1574, 1058, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	1565, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 0, 0, 0, 0, 0, 0,
	0, 1060, 0, 0, 1560, 1058, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 0, 0,
	0, 0, 0, 0, 0, 1060, 0, 0, 1473, 1058,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1472, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 0, 0, 0, 0, 0, 0, 0, 1060,
	0, 0, 1467, 1058, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1466,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 0, 0, 0, 0,
	0, 0, 0, 1060, 0, 0, 1460, 1058, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	1285, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 1060, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 1060, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	4426, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 4425, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 1060, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 4424, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 4426, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 4425, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 4085, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 4086, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 4084, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 1076, 1048, 1049, 1050, 2981, 2982, 1059, 1060,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 1076, 1048, 1049, 1050, 2979, 2980,
	1059, 1060, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 1060, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 2319, 2320, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 1060, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 0, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 0, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 2539, 0, 0, 0, 0, 0, 0, 2537, 2538,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 0, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 0, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 2974, 2975,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2038, 2039, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 0, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 4426, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 0, 1103, 0,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 0, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 4425, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1022, 0, 1198,
	0, 0, 1029, 1030, 0, 0, 0, 0, 0, 0,
	0, 1060, 0, 0, 0, 1058, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 1100, 0, 0, 0, 0, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 1099, 0, 290, 609, 610, 611, 0, 291, 292,
	1106, 0, 1087, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091,
	1095, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1131, 1132, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 1142, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1138, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 1101, 1102, 1105, 451, 1144, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1143, 384, 626, 627, 0,
	628, 0, 386, 387, 1145, 1103, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 1184, 398, 400, 399, 0, 401, 1139, 1148, 402,
	403, 1149, 0, 404, 0, 0, 0, 405, 406, 409,
	1094, 1093, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 0, 264, 1152, 448,
	449, 0, 1104, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 1190, 456, 457, 458, 0, 0, 459, 460,
	633, 1153, 461, 1154, 1133, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 1134, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1155, 512, 513, 514, 515, 640, 1192, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 224, 532, 533, 531, 534, 535, 536, 1097, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 1135, 560,
	561, 0, 562, 563, 0, 559, 551, 226, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 1136,
	576, 1137, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 1098,
	591, 0, 0, 592, 593, 594, 1549, 651, 652, 0,
	596, 595, 597, 653, 1198, 0, 0, 218, 598, 599,
	654, 600, 601, 602, 0, 0, 219, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 1188, 1100, 1884, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 1099, 0, 290, 609,
	610, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 626, 627, 0, 628, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 1184, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 0, 264, 1152, 448, 449, 0, 1104, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 1190, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 640, 1192, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 224, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 0,
	559, 551, 226, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 1549, 651, 652, 0, 596, 595, 597, 653, 3158,
	0, 1198, 218, 598, 599, 654, 600, 601, 602, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 1188, 0, 1884, 1100, 0, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 1099, 0, 290, 609, 610, 611, 0,
	291, 292, 1106, 0, 1087, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096,
	1092, 1091, 1095, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1131, 1132,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1138, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 1101, 1102, 1105, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1143, 384, 626,
	627, 0, 628, 0, 386, 387, 1145, 1103, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1184, 398, 400, 399, 0, 401, 1139,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 1094, 1093, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 0, 264,
	1152, 448, 449, 0, 1104, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 1190, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 1133, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 1134,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	1192, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1097, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	1135, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 1136, 576, 1137, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 1098, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 1180, 0, 1198, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 1188, 0,
	1186, 1100, 0, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	1099, 0, 290, 609, 610, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 626, 627, 0, 628,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	1184, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 0, 264, 1152, 448, 449,
	0, 1104, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 1190, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 640, 1192, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 1198, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 1188, 1100, 1186, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 1099, 0, 290, 609, 610,
	611, 0, 291, 292, 1106, 0, 1087, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 1090, 1088,
	1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1131, 1132, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1138, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 1101, 1102,
	1105, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1143,
	384, 626, 627, 0, 628, 0, 386, 387, 1145, 1103,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 1184, 398, 400, 399, 0,
	401, 1139, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 1094, 1093, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	0, 264, 1152, 448, 449, 0, 1104, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 1190, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 1133, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 1134, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 640, 1192, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1097, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 1135, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 1136, 576, 1137, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 1098, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 1198, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	1188, 1100, 1186, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	1099, 0, 290, 609, 610, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 626, 627, 0, 628,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 0, 264, 1152, 448, 449,
	0, 1104, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 1198, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 1100, 3930, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 1099, 0, 290, 609, 610,
	611, 0, 291, 292, 1106, 0, 1087, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 1090, 1088,
	1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	1131, 1132, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 1138, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 1101, 1102,
	1105, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 1143,
	384, 626, 627, 0, 628, 0, 386, 387, 1145, 1103,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 1139, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 1094, 1093, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	0, 264, 1152, 448, 449, 0, 1104, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 1133, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 1134, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 640, 1192, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1097, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 1135, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 1136, 576, 1137, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 1098, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 1022, 0,
	1278, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 1783, 603, 0, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 1283, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1143, 384, 626, 627,
	0, 628, 0, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 0, 0, 1152,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 224, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 226, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 1549, 651, 652,
	0, 596, 595, 597, 653, 1546, 0, 1278, 218, 598,
	599, 654, 600, 601, 602, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 183,
	603, 0, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	1283, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1143, 384, 626, 627, 0, 628, 0,
	386, 387, 1145, 629, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 0, 0, 1152, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 224,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 226, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 1549, 651, 652, 0, 596, 595,
	597, 653, 0, 0, 0, 218, 598, 599, 654, 600,
	601, 602, 0, 0, 219, 0, 0, 0, 0, 0,
	1278, 1277, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 1283, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1143, 384, 626, 627,
	0, 628, 0, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 0, 0, 1152,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 1278, 1277, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1571,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 1283, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1143,
	384, 626, 627, 0, 628, 0, 386, 387, 1145, 629,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	0, 0, 1152, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 1278, 2129, 0, 0,
	0, 0, 2130, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3429, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 1283,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 1143, 384, 626, 627, 0, 628, 0, 386,
	387, 1145, 629, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 2128,
	400, 399, 0, 401, 630, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 0, 0, 1152, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 1278,
	1277, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1571, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 1283, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1141, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 1142, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 1144, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 1143, 384, 626, 627, 0,
	628, 0, 386, 387, 1145, 629, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 1148, 402,
	403, 1149, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 0, 0, 1152, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 1153, 461, 1154, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1155, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 1198, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1555, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 1099, 0, 290, 609,
	610, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 626, 627, 0, 628, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 0, 264, 1152, 448, 449, 0, 1104, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 1022,
	0, 259, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 224, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 226,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 1549, 651,
	652, 0, 596, 595, 597, 653, 259, 0, 0, 218,
	598, 599, 654, 600, 601, 602, 0, 0, 219, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	183, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 259, 2889, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 1898, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 259, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	4580, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 3380, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 1543, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 259, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 2877, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 259, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	3534, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 865, 0, 773, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 2205, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 780, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 863, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 778, 564, 565, 566, 567, 568, 779, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 771, 0,
	773, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 783, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 780, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 778, 564,
	565, 566, 567, 568, 779, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	1935, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 783, 0, 0, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 0, 1941, 0, 282,
	1931, 283, 1947, 0, 1954, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 1957, 1958, 0, 0, 291,
	292, 0, 0, 1283, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 1123, 321, 1945, 1944,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 0, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	1943, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1952, 1953, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 0, 0, 0, 369, 0,
	370, 371, 372, 373, 374, 0, 0, 0, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1143, 384, 1938, 1939,
	0, 1934, 0, 386, 387, 1145, 0, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 0, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 0, 0, 1152,
	448, 449, 0, 0, 450, 1946, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 0, 1153, 461, 1154, 0, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	1928, 474, 475, 476, 1929, 477, 478, 479, 0, 480,
	0, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1942, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 0, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1940, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1956, 554, 555, 556, 557, 0,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1948, 1949, 1950, 1951, 0, 581, 0, 573, 574, 575,
	0, 576, 0, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 0, 1932, 1955,
	0, 596, 595, 597, 0, 0, 773, 0, 0, 598,
	599, 0, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 1922, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	780, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 778, 564, 565, 566, 567, 568,
	779, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 773, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 783, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	780, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	2247, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 2248, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 778, 564, 565, 566, 567, 568,
	779, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 2249, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 2004, 0, 1278, 1971, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 783, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 1283, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 0, 0,
	0, 0, 0, 0, 1968, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1143,
	384, 626, 627, 0, 628, 0, 386, 387, 1145, 629,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	0, 0, 1152, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 1969, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 1965, 0,
	1278, 1971, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 1283, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 0, 0, 0, 0, 0,
	0, 1968, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1143, 384, 626, 627,
	0, 628, 0, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 0, 0, 1152,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1969,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	773, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 780, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 1961, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 778, 564,
	565, 566, 567, 568, 779, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 1960, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	773, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 783, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 780, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 1914, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 778, 564,
	565, 566, 567, 568, 779, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 1913, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 0, 0, 1278, 1971, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 783, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	1283, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 0, 0, 0, 0, 0, 0, 1968, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1143, 384, 626, 627, 0, 628, 0,
	386, 387, 1145, 629, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 0, 0, 1152, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 1969, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 1278, 1277, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 1283, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 1143, 384,
	626, 627, 0, 628, 0, 386, 387, 1145, 629, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 0,
	0, 1152, 448, 449, 3720, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1278, 1277, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	1283, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1143, 384, 626, 627, 0, 628, 0,
	386, 387, 1145, 629, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 0, 0, 1152, 448, 449, 3352,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 259, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 1599, 0, 1278, 1277, 0, 0, 0, 0,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 783,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 1283, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 262, 0, 0, 0, 0,
	0, 1598, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	1143, 384, 626, 627, 0, 628, 0, 386, 387, 1145,
	629, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 0, 0, 1152, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 1597, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 1596, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1517,
	0, 1278, 1277, 0, 0, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 1283, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 1516, 624, 625, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1143, 384, 626,
	627, 0, 628, 0, 386, 387, 1145, 629, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 0, 0,
	1152, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 1478, 0, 1278, 1277,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 1283, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 1143, 384, 626, 627, 0, 628,
	0, 386, 387, 1145, 629, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 0, 0, 1152, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1446, 0, 1278, 1277, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 1283, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	1445, 624, 625, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1143, 384, 626, 627, 0, 628, 0, 386, 387,
	1145, 629, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 0, 0, 1152, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	1272, 0, 1278, 1277, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 1283, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 1271, 624, 625,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 1143, 384,
	626, 627, 0, 628, 0, 386, 387, 1145, 629, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 0,
	0, 1152, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1278, 1277, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	1283, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1143, 384, 626, 627, 0, 628, 0,
	386, 387, 1145, 629, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 0, 0, 1152, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 1278, 1971, 0, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 1283, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 2011, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 1143, 384,
	626, 627, 0, 628, 0, 386, 387, 1145, 629, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 0,
	0, 1152, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 1278, 1277, 0,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	1283, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1143, 384, 626, 627, 0, 628, 0,
	386, 387, 1145, 629, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 0, 0, 1152, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 1278, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	1283, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1143, 384, 626, 627, 0, 628, 0,
	386, 387, 1145, 629, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 0, 0, 1152, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 259, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 2705, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 2702, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 2709, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 2902, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 2708, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 2899, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 2901, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 2898,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	2707, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 2900,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 259, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 2705, 291, 292, 612, 0,
	0, 2699, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 2702, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 2709, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 2708, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 2698, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	2707, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 2706,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 1669, 0, 259, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 1672, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 1670, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 1671, 595, 597, 653, 1424,
	0, 259, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 1426, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 1190, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 1421, 0, 259, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 1423, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 1190, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 1329, 0, 259, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	1331, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 1190, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	686, 0, 259, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 685, 270, 271, 272, 675, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	678, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 679, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	626, 627, 0, 628, 0, 386, 387, 0, 629, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 0, 461, 0, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 680, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 674, 0, 259,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 675, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 678, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 679, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 680, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 259,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 1190, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 259,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 3309, 438, 0, 264, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 2847, 0, 259, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 2846, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 2219, 0, 259, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 259, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 2162, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 2168, 0,
	259, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 2167, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 2155, 0, 259, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 2157, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 259, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 2125, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	1190, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 1521, 0, 259, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 1520,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 1441,
	0, 259, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 1434, 0, 259, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 1436, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 1262, 0, 259, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	1261, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	1252, 0, 259, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 1251, 624, 625,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	626, 627, 0, 628, 0, 386, 387, 0, 629, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 0, 461, 0, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 1249, 0, 259,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 1248, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 1244, 0, 259, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 1243, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 656, 0, 259, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 250, 0,
	259, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 3651, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 3652, 438, 0, 0, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 3654, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 3655, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 3650, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 678, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 679, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 680, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 2256, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 2254, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 2252, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 2174, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 1990, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	259, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 1984, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 852, 0, 259, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 851,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 850, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 259, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 2902, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	3990, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 259, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 3900, 438, 0, 0, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	3902, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 743, 0, 259, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 1299, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 1297, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 744, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 740, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 1300, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 739, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 743,
	0, 259, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 1299, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 1297, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 744, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 740, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 1300, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 739, 645, 646, 647, 0, 581, 0, 573, 1298,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 665, 0, 259, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 664, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 663,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 259, 2889, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 259, 4000,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 4257, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 4252, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 3691, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 2591, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 259, 2889, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 2886,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 259, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 2229, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 2217, 0,
	259, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 743, 0, 259, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 733, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 744, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 740, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 1554, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 739, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 1527, 0, 259, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 1526,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 1511,
	0, 259, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 1509, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 1505, 0, 259, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 1482, 0, 259, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	1480, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	1443, 0, 259, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	626, 627, 0, 628, 0, 386, 387, 0, 629, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 0, 461, 0, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 1429, 0, 259,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 1267, 0, 259, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 1266, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 1258, 0, 259, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 1257, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 259, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 1211, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 259, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 749, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 623, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 743, 0,
	259, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	733, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	731, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 732,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 744, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 734, 516,
	0, 517, 518, 524, 525, 519, 520, 740, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 735, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	739, 645, 646, 647, 0, 581, 0, 573, 737, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 725, 0, 259, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	726, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 688, 0, 259, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 682,
	0, 259, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 660, 0, 259, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 3399, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 3346, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 3280, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 3278, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 3263, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 2857, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 726, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 2192, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 0, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 1229, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 1163, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 0, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 0,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 0,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 0, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1717, 1718, 0, 1750, 1751, 1752, 1760,
	1761, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 1748, 0, 0,
	0, 0, 1717, 1718, 1720, 1750, 1751, 1752, 1760, 1761,
	1762, 0, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 1748, 0, 0, 0,
	0, 0, 0, 1720, 0, 0, 0, 0, 1719, 1717,
	1718, 1766, 1750, 1751, 1752, 1760, 1761, 1762, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 1753, 1748, 0, 0, 0, 1719, 1717, 1718,
	1720, 1750, 1751, 1752, 1760, 1761, 1762, 1739, 1766, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1753, 1748, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 1719, 0, 0, 1766, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 1742,
	1743, 1744, 1745, 1719, 0, 0, 0, 0, 0, 1725,
	0, 0, 0, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 1742, 1743,
	1744, 1745, 0, 0, 0, 0, 0, 0, 1725, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 1767, 0,
	0, 0, 0, 0, 1747, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 1743, 1744, 1745, 0,
	0, 1763, 0, 1764, 1757, 1725, 0, 1767, 0, 0,
	1734, 1735, 0, 1747, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1742, 1743, 1744, 1745, 1755, 0,
	1763, 0, 1764, 0, 1725, 0, 0, 0, 0, 1734,
	1735, 1757, 0, 1740, 1767, 0, 0, 0, 0, 0,
	1747, 1749, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 1764,
	1757, 0, 1740, 1767, 0, 0, 1734, 1735, 0, 1747,
	1749, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 1763, 0, 1764, 0,
	0, 0, 0, 1754, 0, 1734, 1735, 0, 0, 1740,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 1740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 1741, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1758, 0, 0, 1741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1741, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 1756, 0, 0, 0, 0, 1731, 1732, 1738, 1759,
	1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724,
	1726, 1727, 0, 0, 0, 0, 4360, 0, 0, 0,
	1756, 0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737,
	1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726,
	1727, 0, 0, 0, 0, 4356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0,
	0, 0, 4278, 0, 0, 0, 1756, 0, 0, 0,
	0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 1717,
	1718, 4238, 1750, 1751, 1752, 1760, 1761, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 1748, 0, 0, 0, 0, 1717, 1718,
	1720, 1750, 1751, 1752, 1760, 1761, 1762, 0, 1766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 1748, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 1719, 1717, 1718, 1766, 1750, 1751,
	1752, 1760, 1761, 1762, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 1753, 1748,
	0, 0, 0, 1719, 1717, 1718, 1720, 1750, 1751, 1752,
	1760, 1761, 1762, 1739, 1766, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 1753, 1748, 0,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 0,
	1719, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 0, 1742, 1743, 1744, 1745, 1719,
	0, 0, 0, 0, 0, 1725, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 1742, 1743, 1744, 1745, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 1767, 0, 0, 0, 0, 0,
	1747, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 1743, 1744, 1745, 0, 0, 1763, 0, 1764,
	1757, 1725, 0, 1767, 0, 0, 1734, 1735, 0, 1747,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 1743, 1744, 1745, 1755, 0, 1763, 0, 1764, 0,
	1725, 0, 0, 0, 0, 1734, 1735, 1757, 0, 1740,
	1767, 0, 0, 0, 0, 0, 1747, 1749, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 1764, 1757, 0, 1740, 1767,
	0, 0, 1734, 1735, 0, 1747, 1749, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 1763, 0, 1764, 0, 0, 0, 0, 1754,
	0, 1734, 1735, 0, 0, 1740, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 1741, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 1756, 0, 0,
	0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0,
	0, 0, 4237, 0, 0, 0, 1756, 0, 0, 0,
	0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	0, 4069, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 1731, 1732,
	1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 0, 0, 0, 3926, 0,
	0, 0, 1756, 0, 0, 0, 0, 1731, 1732, 1738,
	1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 0, 0, 1717, 1718, 3859, 1750, 1751,
	1752, 1760, 1761, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 1748,
	0, 0, 0, 0, 1717, 1718, 1720, 1750, 1751, 1752,
	1760, 1761, 1762, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 1748, 0,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 0,
	1719, 1717, 1718, 1766, 1750, 1751, 1752, 1760, 1761, 1762,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 1753, 1748, 0, 0, 0, 1719,
	1717, 1718, 1720, 1750, 1751, 1752, 1760, 1761, 1762, 1739,
	1766, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1753, 1748, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 1719, 0, 0, 1766,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 1742, 1743, 1744, 1745, 1719, 0, 0, 0, 0,
	0, 1725, 0, 0, 0, 1739, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	1742, 1743, 1744, 1745, 0, 0, 0, 0, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	1767, 0, 0, 0, 0, 0, 1747, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 1743, 1744,
	1745, 0, 0, 1763, 0, 1764, 1757, 1725, 0, 1767,
	0, 0, 1734, 1735, 0, 1747, 1749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 1743, 1744, 1745,
	1755, 0, 1763, 0, 1764, 0, 1725, 0, 0, 0,
	0, 1734, 1735, 1757, 0, 1740, 1767, 0, 0, 0,
	0, 0, 1747, 1749, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	0, 1764, 1757, 0, 1740, 1767, 0, 0, 1734, 1735,
	0, 1747, 1749, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 1763, 0,
	1764, 0, 0, 0, 0, 1754, 0, 1734, 1735, 0,
	0, 1740, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 1741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 0, 0, 1756, 0, 0, 0, 0, 1731, 1732,
	1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 0, 0, 0, 3858, 0,
	0, 0, 1756, 0, 0, 0, 0, 1731, 1732, 1738,
	1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 0, 0, 0, 0, 3857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733,
	0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	0, 0, 0, 0, 3539, 0, 0, 0, 1756, 0,
	0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0,
	1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0,
	0, 1717, 1718, 3054, 1750, 1751, 1752, 1760, 1761, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 1748, 0, 0, 0, 0,
	1717, 1718, 1720, 1750, 1751, 1752, 1760, 1761, 1762, 0,
	1766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 1748, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 1719, 1717, 1718, 1766,
	1750, 1751, 1752, 1760, 1761, 1762, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	1753, 1748, 0, 0, 0, 1719, 1717, 1718, 1720, 1750,
	1751, 1752, 1760, 1761, 1762, 1739, 1766, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 1753,
	1748, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 1719, 0, 0, 1766, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 1742, 1743, 1744,
	1745, 1719, 0, 0, 0, 0, 0, 1725, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 0, 1742, 1743, 1744, 1745,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 1767, 0, 0, 0,
	0, 0, 1747, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 0, 0, 1763,
	0, 1764, 1757, 1725, 0, 1767, 0, 0, 1734, 1735,
	0, 1747, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 1743, 1744, 1745, 1755, 0, 1763, 0,
	1764, 0, 1725, 0, 0, 0, 0, 1734, 1735, 1757,
	0, 1740, 1767, 0, 0, 0, 0, 0, 1747, 1749,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 1764, 1757, 0,
	1740, 1767, 0, 0, 1734, 1735, 0, 1747, 1749, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 1763, 0, 1764, 0, 0, 0,
	0, 1754, 0, 1734, 1735, 0, 0, 1740, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 1740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 1741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1758, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 0, 1756,
	0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733,
	0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	0, 0, 0, 0, 3053, 0, 0, 0, 1756, 0,
	0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0,
	1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0,
	0, 0, 0, 3052, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0,
	3051, 0, 0, 0, 1756, 0, 0, 0, 0, 1731,
	1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 1717, 1718, 3018, 1750, 1751,
	1752, 1760, 1761, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 1748,
	0, 0, 0, 0, 1717, 1718, 1720, 1750, 1751, 1752,
	1760, 1761, 1762, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 1748, 0,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 0,
	1719, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1719,
	1717, 1718, 0, 1750, 1751, 1752, 1760, 1761, 1762, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1753, 1748, 0, 0, 0, 0, 2989,
	0, 1720, 0, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 1743, 1744, 1745, 1719, 0, 0, 0, 0,
	0, 1725, 4495, 0, 0, 1739, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	1742, 1743, 1744, 1745, 0, 0, 0, 0, 0, 0,
	1725, 0, 3138, 0, 0, 3137, 0, 1757, 0, 0,
	1767, 0, 0, 0, 0, 0, 1747, 1749, 0, 0,
	2990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 1764, 1757, 0, 0, 1767,
	0, 0, 1734, 1735, 0, 1747, 1749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 1743, 1744, 1745,
	1755, 0, 1763, 0, 1764, 0, 1725, 0, 0, 0,
	0, 1734, 1735, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 0, 1740, 1767, 0, 0, 0, 0,
	0, 1747, 1749, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	1764, 0, 0, 0, 0, 1754, 0, 1734, 1735, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 4494, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 1741, 0, 0,
	2564, 0, 0, 0, 0, 0, 0, 1717, 1718, 0,
	1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 0, 0,
	1753, 1748, 0, 0, 0, 2563, 0, 0, 1720, 0,
	0, 0, 0, 1746, 0, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 0, 0,
	0, 0, 1719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 1758,
	0, 1736, 0, 1756, 0, 0, 0, 0, 1731, 1732,
	1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 1731, 1732, 1738,
	1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0,
	1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 1757,
	0, 0, 1767, 0, 0, 0, 0, 0, 1747, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 1764, 0, 0,
	0, 0, 0, 0, 1734, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1717, 1718, 1755, 1750, 1751, 1752, 1760, 1761, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 1753, 1748, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 1719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1739, 0, 1754, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1717, 1718, 0, 1750, 1751, 1752, 1760, 1761,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 1753, 1748, 0, 0, 0,
	0, 0, 0, 1720, 0, 0, 1742, 1743, 1744, 1745,
	1741, 1766, 0, 0, 0, 0, 1725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1758, 1719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1739, 0, 0,
	0, 0, 1757, 0, 0, 1767, 1736, 0, 0, 0,
	0, 1747, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	1764, 0, 0, 0, 0, 0, 0, 1734, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 1742, 1743,
	1744, 1745, 0, 0, 0, 1756, 0, 0, 1725, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1757, 0, 0, 1767, 0, 0,
	1754, 1019, 0, 1747, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 1764, 0, 0, 0, 0, 0, 0, 1734,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1740, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1741, 0, 0, 1756, 0,
	0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0,
	1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 1717,
	1718, 1758, 1750, 1751, 1752, 1760, 1761, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 1748, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	0, 0, 0, 3520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 1717, 1718, 0, 1750, 1751,
	1752, 1760, 1761, 1762, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 1753, 1748,
	0, 0, 0, 3139, 0, 0, 1720, 0, 0, 0,
	1756, 0, 0, 0, 1766, 1731, 1732, 1738, 1759, 1737,
	1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726,
	1727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 0, 1742, 1743, 1744, 1745, 0,
	0, 0, 0, 0, 0, 1725, 0, 0, 0, 0,
	3144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 1767, 0, 0, 0, 0, 0,
	1747, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 1743, 1744, 1745, 0, 0, 1763, 0, 1764,
	0, 1725, 0, 0, 0, 0, 1734, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 1717, 1718, 0,
	1750, 1751, 1752, 1760, 1761, 1762, 0, 1757, 0, 1740,
	1767, 0, 0, 0, 0, 0, 1747, 1749, 0, 0,
	1753, 1748, 0, 0, 0, 0, 0, 0, 1720, 0,
	0, 0, 0, 1763, 0, 1764, 1766, 0, 0, 0,
	0, 0, 1734, 1735, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 1719, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 1739, 0, 0, 1740, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1741, 1742, 1743, 1744, 1745, 0, 0, 0,
	0, 0, 0, 1725, 1717, 1718, 0, 1750, 1751, 1752,
	1760, 1761, 1762, 0, 0, 0, 0, 0, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 1748, 0,
	0, 0, 3055, 0, 0, 1720, 0, 0, 1746, 1757,
	0, 0, 1767, 1766, 0, 0, 0, 0, 1747, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 1763, 0, 1764, 0, 1719,
	0, 0, 0, 0, 1734, 1735, 0, 0, 0, 1739,
	0, 0, 0, 0, 1758, 0, 0, 0, 1736, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 1743, 1744, 1745, 0, 0, 0, 1754, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 3106, 1731, 1732,
	1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 0, 1757, 0, 0, 1767,
	0, 0, 0, 0, 0, 1747, 1749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 1763, 0, 1764, 0, 0, 0, 0, 0,
	0, 1734, 1735, 0, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 1717, 1718, 1755,
	1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 1740, 0, 1758, 0, 0, 0,
	1753, 1748, 0, 0, 0, 0, 0, 0, 1720, 0,
	0, 0, 0, 0, 0, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 1719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 1754, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 1741, 0, 0,
	0, 0, 0, 1725, 1717, 1718, 0, 1750, 1751, 1752,
	1760, 1761, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 1753, 1748, 0,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 1757,
	0, 0, 1767, 1766, 0, 0, 0, 0, 1747, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 1764, 0, 1719,
	0, 0, 0, 0, 1734, 1735, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 1731, 1732, 1738,
	1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 1743, 1744, 1745, 0, 0, 0, 1754, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1717, 1718, 0, 1750,
	1751, 1752, 1760, 1761, 1762, 0, 1757, 0, 0, 1767,
	0, 0, 0, 0, 0, 1747, 1749, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	1746, 0, 1763, 0, 1764, 1766, 0, 0, 0, 0,
	0, 1734, 1735, 0, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 1719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1739, 0, 0, 1740, 0, 1758, 0, 0, 0,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 1743, 1744, 1745, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 1746, 1757, 0,
	0, 1767, 0, 0, 0, 0, 0, 1747, 1749, 0,
	0, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 1763, 0, 1764, 0, 0, 0,
	0, 0, 0, 1734, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 1731, 1732, 1738,
	1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 1731,
	1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727,
}

var sqlPact = [...]int{
	9515, -1000, -1000, -1000, -1000, 138, -1000, -1000, 136, 135,
	133, 132, 130, 129, 128, 127, 126, 125, 121, -1000,
	-1000, -1000, -1000, -1000, -1000, 120, -1000, -1000, 119, -1000,
	118, 117, 115, -1000, -1000, 114, -1000, 113, -1000, -1000,
	-1000, -1000, 112, 110, 104, 85416, 84879, 85946, 2209, 106764,
	93394, 2213, 76315, 106227, 75778, 105690, 2063, 11618, 105153, 2680,
	102, -1000, 104616, 101, 99, 96, -1000, 104079, -1000, 1805,
	-1000, 95, 5257, 61266, 94, 93, 92, 2842, 90, -1000,
	89, 88, 87, -1000, 12006, 1466, -1000, 86, 85, -1000,
	323, 90723, 84, 83, 2298, 82, 80, 60729, 79, 74,
	2064, 2815, -1000, -1000, 1979, -1000, -1000, 73, 72, 71,
	66, 65, 62, 60, 59, 53, 49, 48, -1000, 46,
	44, 43, 41, 39, -1000, 38, 37, 36, -1000, 35,
	-1000, 31, 28, 27, 26, 24, 22, 19, 18, 14,
	13, 11, 10, 8, -1000, 11321, -1000, 1778, 1613, 1606,
	1602, 1584, 1558, 911, 7, 6, 5, 4, 3, 2,
	1, 0, -1, -1000, -2, -3, -4, -5, -6, -9,
	-10, -16, 106, -17, -18, -22, -23, -25, -28, -29,
	2612, -1000, 1470, 923, 27880, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 112594, 107294,
	-32, -211, -33, -1000, 3265, 839, 50494, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 211, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 434, 1952, 688,
	-1000, -1000, -1000, 103549, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2208, -38, -1000, 1903, -1000, -1000, -1000, -1000,
	-1000, 685, -1000, 2191, 285, 2124, -1000, -1000, -1000, 3328,
	2368, 3770, 3769, 3767, 3766, 3765, 112064, 1691, 3762, 2465,
	3761, 3760, 3759, 3758, 3757, 3756, 3755, -1000, 84342, 979,
	83805, 83268, 3361, 103019, 82731, 102482, 69888, 42708, 897, 3327,
	-1000, -1000, -1000, -1000, -1000, -1000, 107294, -1000, 977, -1000,
	-1000, 3754, 3752, 1991, 684, 92857, -1000, 1801, -1000, 851,
	29566, -1000, 1123, -1000, 29566, 209, -1000, -1000, -1000, -1000,
	-1000, -1000, 3750, 3748, 3747, 3745, 3744, -1000, -1000, 75241,
	21084, 74704, 74167, 101945, 20537, 82194, 81657, 101408, 69341, 960,
	1395, -1000, -1000, -1000, -1000, -1000, -1000, -66, 67153, 3480,
	107294, -1000, 208, -1000, -1000, -1000, -1000, -1000, -1000, 42134,
	544, 41560, 652, 40986, 478, -1000, -1000, -1000, -1000, 68794,
	-1000, 100871, 2362, 3743, 3742, 1050, 3741, 3220, 1678, 3740,
	1743, 1156, 3739, 3736, 3733, 3720, 3718, 3704, 3700, 1302,
	100334, 2982, 99797, 1625, 68247, 959, 81120, 85946, 2591, 99260,
	1214, 1206, -1000, -1000, -1000, -1000, 3033, 2807, 2804, 980,
	-1000, -1000, -1000, -1000, 53173, 11051, 10159, 8339, 98723, 55385,
	85946, 85946, -1000, -1000, -1000, -1000, -1000, 40412, 385, 39838,
	867, -1000, -1000, 53726, 2894, -1000, -1000, -1000, -1000, 39264,
	335, 38690, 812, 107294, -1000, 2980, 1787, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2201, 1519, 3506, 2687, 67700, 1914, 1327, 3298,
	3031, 3029, 1425, 3028, 3694, 2469, 3016, 3007, 3005, 2994,
	2991, 1514, 2533, 271, 27306, 2967, 1596, 38116, 1423, 1409,
	2984, 2981, 3537, 1879, 1870, 1981, 73630, 3693, 3692, 3269,
	2971, 2968, 2763, 2959, -1000, 2893, -1000, -1000, -1000, -1000,
	1379, -1000, -1000, -1000, -1000, 76845, -1000, -1000, 1229, -1000,
	-1000, 1229, -1000, -1000, -1000, -1000, -1000, 1189, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1470,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2177, -1000, 1953, -1000, -1000, 2487, 3249, 3249, 3249, 3325,
	395, 393, -1000, 106, -1000, -1000, 118226, -1000, -1000, 43270,
	43270, 43270, 43270, 43270, 43270, 43270, 2075, -1000, 683, -1000,
	-1000, 714, -1000, 682, 555, -1000, -1000, -1000, -1000, -1000,
	-1000, 681, -1000, -1000, -1000, -1000, -1000, -1000, 3480, -1000,
	23874, -1000, -1000, -1000, 410, 679, 43270, -1000, -1000, 3560,
	3559, 907, -1000, 204, 871, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2978, 676, 674,
	-1000, 673, 672, 668, 666, 665, -1000, -1000, -1000, 663,
	661, 657, 656, 655, 654, 653, 651, -1000, 1906, -1000,
	-1000, -1000, -1000, -1000, -1000, 616, 615, 615, 615, -1000,
	956, -1000, -1000, -1000, 267, 611, 236, 603, 602, 598,
	-1000, 645, 643, 641, 639, 638, 636, 635, 634, 633,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 943, -1000, -1000,
	-1000, -1000, -68, 107294, -1000, 434, -68, -1000, -1000, 632,
	-1000, 31826, 31826, 31826, -1000, -1000, 2190, 43270, -1000, 2802,
	-1000, -60, -60, 785, 52099, -1000, 49420, 785, 264, 720,
	56992, -1000, 2891, -1000, -1000, 626, 203, -1000, -1000, -1000,
	-1000, 21629, 2890, 107294, 107294, 85946, 85946, 85946, 3142, 43270,
	-1000, -1000, 64996, 107294, 87006, -1000, -1000, 3428, 61796, 64466,
	107294, 2975, 63936, 3691, -1000, -1000, -1000, -1000, -1000, 3111,
	3690, 3689, 3688, -1000, 107294, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 210, 3110, -1000, -1000, 90186, 210, 3109, -1000,
	210, 3107, -1000, 89656, -1000, -1000, 2114, 3103, -1000, -1000,
	220, 3102, -1000, -1000, -1000, 219, 3094, -1000, -1000, 202,
	-89, 3093, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 118226, -1000, -1000, -1000, 63399, -1000,
	3246, -1000, -1000, 107294, -1000, 43270, -1000, 3427, 1560, 70968,
	3368, -77, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2441,
	2377, 1065, 2230, -1000, 3161, 1708, -1000, 29566, 3209, -1000,
	-1000, -1000, 185, 21629, -1000, -1000, -1000, -1000, -1000, -1000,
	3125, 3092, 1373, -1000, 2228, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1628, 3089, -1000, 2545, 3088, 1595, -1000, -1000,
	3124, -1000, 3237, -1000, -1000, 2067, 3087, -58, -1000, -1000,
	2616, -1000, 1811, -1000, 894, 3086, -1000, 80583, 54832, 53726,
	67153, -71, -1000, -1000, -1000, -1000, -189, -1000, 19990, 118226,
	-1000, -1000, -1000, -1000, 1684, 118226, 820, -1000, -1000, 3084,
	-1000, 118226, 818, -1000, -1000, 3080, -1000, 2973, -1000, -1000,
	2317, -1000, -1000, 3687, -1000, -1000, 3686, -1000, 3685, 3684,
	3683, -1000, 1649, 1887, 3682, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 80053, 2188, -1000, -1000, 78979, -1000, 2315,
	3367, -1000, 79516, 958, -1000, 894, 2314, -1000, 89126, 940,
	2311, -1000, 3681, 3351, 2627, 894, 2307, -1000, -1000, -1000,
	-1000, -1000, 833, -1000, 58592, -1000, 58592, -1000, 1488, -1000,
	111534, -60, 85946, 3480, -1000, -99, -1000, -1000, -1000, 839,
	-1000, 52636, -1000, 52636, 92320, 70433, 880, 642, 60192, 118226,
	-1000, -1000, -1000, -1000, 118226, -1000, -1000, -1000, -171, 2685,
	-1000, 70433, 53726, 118226, -1000, -1000, -1000, -1000, 118226, -1000,
	-1000, -1000, 70433, 78979, -1000, 98186, 78449, -1000, -1000, 1239,
	2493, -1000, -1000, -1000, 70433, 1241, 70433, 70433, 70433, -1000,
	97649, -1000, -1000, 1951, 1393, 3242, 1901, 85946, -1000, 1881,
	-1000, -1000, -1000, 3267, 107294, -1000, -1000, 2972, -1000, 62862,
	88596, -1000, 88066, -1000, 87536, -1000, 85946, -1000, 85946, -1000,
	3679, 3678, 3676, -1000, -1000, 3675, -1000, 3674, 3277, -1000,
	118226, 3256, -1000, 3673, 3360, 2967, 118226, -1000, 3079, 1617,
	1616, 107294, -1000, -1000, 107294, -1000, 107294, -1000, -1000, -1000,
	1415, -1000, -1000, 2440, -1000, -1000, -1000, -1000, 85946, -1000,
	-1000, -1000, -1000, -1000, -1000, 2956, -1000, 1634, -1000, 1718,
	-1000, 2888, 3272, -1000, 1220, -1000, -1000, 229, -1000, -1000,
	-77, -1000, 111004, -1000, 2487, -1000, 107294, -1000, 2412, 2908,
	2922, 1663, 2155, 2535, -1000, 37542, 2489, 46642, 2225, 106,
	-1000, -1000, 106, 106, 29004, -1000, -1000, 61796, 61796, 21629,
	1196, 43270, 43270, 43270, 43270, 43270, 43270, 43270, 43270, 43270,
	43270, 43270, 43270, 43270, 43270, 43270, 43270, 43270, 43270, 43270,
	43270, 43270, 43270, 43270, 43270, 43270, 43270, 43270, 43270, 43270,
	43270, 43270, 43270, 43270, 43270, 43270, 2231, 43270, 1186, 43270,
	43270, 43270, 43270, 2304, -1000, -1000, 1798, 481, 1844, -1000,
	3485, 3485, 3485, 557, 557, 118585, 118585, 475, 3672, 714,
	-1000, 43270, -1000, 54, 43270, 22176, -1000, 393, 8334, 2375,
	-1000, 392, 22750, -1000, -1000, -1000, 23874, 555, 36968, 43270,
	930, 118226, -1000, -1000, 1352, 3508, 19444, 2964, 2729, 625,
	774, 766, 26732, 26158, 25584, 25010, 764, 43270, 43270, 43270,
	43270, 43270, 43270, 43270, 43270, -1000, -1000, 3525, -1000, 3508,
	-1000, -1000, -1000, -1000, 3508, 1195, 1160, 3508, -1000, 3508,
	3508, 11721, 11721, 36406, 35832, 35258, 47204, 34684, 43270, 24436,
	34110, 33536, -1000, 107294, -68, 3425, 43270, 273, -1000, 116736,
	-1000, 273, 273, 624, -100, 118226, 2678, 2678, 51029, 2222,
	2084, 2084, 2084, -1000, 785, 15047, 785, 96584, 2098, 785,
	785, 180, 201, 388, 48885, 2802, 96584, 699, 623, -35,
	-39, -41, -1000, -1000, -48, -52, -1000, -1000, 85946, 620,
	22176, 21629, 168, 1365, -106, 2565, 2564, 2560, -1000, 2554,
	1696, -109, 1185, 85946, 107294, -108, -1000, 9371, -117, -1000,
	1011, 167, 3508, -1000, -1000, -1000, -1000, -1000, 3664, 3663,
	-1000, 941, 619, 617, 338, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 616, 615, 615, 615, -1000, 267, 611,
	236, 603, 602, 598, -1000, -1000, -1000, -1000, -1000, 2886,
	85946, 107294, -189, 87006, -115, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 107294, -1000, -1000, -1000, 3662, -1000, 85946,
	-1000, -1000, 85946, 210, 3078, -1000, 85946, -1000, 85946, 207,
	3074, -1000, -1000, 107294, -1000, 85946, 85946, -1000, 107294, 107294,
	107294, 70433, 70433, 223, -1000, 85946, 789, -120, 1073, -77,
	-1000, -1000, -1000, 1229, -1000, 1820, -1000, -1000, -1000, -1000,
	-1000, -1000, 1231, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 907, -1000, -1000, -1000, -1000, -1000, -1000, 3518, 3510,
	-69, -1000, -1000, 21629, -1000, -78, 1555, 2291, -1000, 73093,
	2210, 3262, 3661, 2615, 3227, 1484, -1000, 1406, 1184, 3323,
	76845, 3377, 3395, 700, -1000, 2884, -1000, -1000, 849, 1483,
	1633, 1182, 76845, 2545, -1000, 61796, -1000, 2588, 3322, 1313,
	1356, 1313, 1313, 1296, -1000, 76845, 1626, 1180, 1179, 1839,
	1832, -1000, -1000, -1000, 1177, 1172, 755, 1824, -1000, -80,
	3374, 3393, 649, -1000, 2872, 1170, -1000, -1000, 85946, 21629,
	1477, 1482, 1618, 1168, -70, -1000, 3372, 3371, 1157, 1154,
	-1000, 4740, -1000, 70433, 1591, 3071, 2684, 768, 2682, -1000,
	-1000, -1000, 768, -71, 67153, 107294, 165, -1000, 54, 43270,
	43270, 54, 43270, 54, 3359, 3070, -1000, -1000, -1000, -1000,
	-1000, 3660, 1867, 2463, -1000, -1000, 596, 2305, 2868, 107294,
	2576, -72, 85946, -1000, 3068, 65533, 2545, 2301, -1000, -1000,
	77912, -1000, 3067, 434, 2300, -1000, 578, 3658, 3062, -1000,
	110474, -1000, 3246, 1210, 3057, 1008, 473, 3424, -1000, 473,
	59122, -1000, 107294, -1000, -60, 10130, 72033, -122, -125, 376,
	-1000, 97119, 107294, 1007, 72563, 107294, 3199, 891, 53726, -1000,
	53726, -127, -171, 2667, 880, 880, 768, -1000, 768, -1000,
	85946, 2916, -1000, -1000, 70433, 880, 880, 880, -1000, -1000,
	-1000, -1000, 3657, 3653, 3651, -1000, -1000, -1000, 893, 85946,
	107294, 85946, -1000, 164, -1000, 107294, -1000, 107294, 107294, 85946,
	-1000, 893, 107294, 893, 107294, 893, 107294, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 54, 43270, -1000, -1000, 3650, 1532,
	-1000, 2914, -1000, 2911, -1000, -20, -1000, -1000, -1000, -1000,
	-1000, 1883, 85946, 85946, 85946, 85946, 107294, 3179, -1000, 107294,
	3172, 85946, -1000, 76845, -1000, 2412, 2908, -1000, -1000, -1000,
	-1000, -1000, -1000, 1464, 2133, -1000, 2511, -1000, 1436, -1000,
	-1000, -1000, 118226, 47766, -1000, -1000, 118226, 1716, -1000, 46080,
	45518, -1000, -1000, 1573, 85946, 2584, -1000, 2584, -112, -1000,
	116379, 2509, 85946, -1000, -1000, -1000, -1000, -1000, 847, 1534,
	1534, 1286, 1286, 1286, 1286, 3357, 4754, 597, 429, 7396,
	7396, 476, 476, 476, 476, 476, 7396, 936, 557, 557,
	936, 936, 936, 936, 936, 557, 557, 557, 7396, 7396,
	7396, 118585, 118393, 9825, 43270, 43270, 1147, 1789, 481, 8082,
	43270, 7418, 7418, 7418, 7418, -1000, 2532, -1000, -1000, -1000,
	-1000, 2866, 595, 47204, 47204, -1000, -1000, -1000, -1000, 23312,
	43270, -1000, -1000, -1000, -1000, 32962, -1000, -1000, 115725, -312,
	375, -105, -15, -1000, 43270, 43270, 43270, 371, -1000, 161,
	43270, 107294, -1000, 14447, 698, -220, -1000, -130, 1351, -1000,
	43270, -1000, -1000, 1145, -1000, 1138, 1137, 1134, -1000, 594,
	370, -1000, 154, -1000, 2078, 584, 583, 43270, -1000, -1000,
	-1000, -1000, -1000, 115696, -1000, -1000, 115659, -1000, -1000, 115630,
	-1000, -1000, 115069, -1000, -1000, -1000, 117973, 14360, 13863, 13670,
	7668, 13222, 12654, -132, 369, -139, 368, 842, 836, 367,
	366, 363, -141, -1000, 3648, 3647, 3646, -1000, 3645, 3644,
	3640, -1000, 3636, 3634, 3632, -1000, 3631, 3628, 3627, -1000,
	3626, 3625, 3624, -1000, 3621, 3619, 3618, -1000, 3617, 3615,
	3614, -1000, 3612, 3608, 3606, -142, 356, -1000, 2860, -105,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 355, -1000,
	354, -1000, 117806, -105, 352, 5345, -1000, 47204, 47204, 47204,
	-1000, 348, -1000, 116313, -1000, 117614, 32400, 32400, 32400, 346,
	117548, 43270, -105, -147, -1000, -148, -1000, -1000, 487, -150,
	927, 31826, 49957, 21629, -1000, 927, 927, 43270, -1000, 43270,
	2543, -1000, -1000, -1000, -1000, 2529, 2126, 2678, 51029, -1000,
	-1000, -1000, -1000, 96584, -1000, 3480, 2957, -1000, 96584, -1000,
	-1000, 107294, 434, -1000, 96584, 96584, 21629, 785, -1000, 785,
	96584, 718, -1000, -1000, -1000, -1000, -1000, 333, 55920, -15,
	149, 21629, 894, -1000, 2570, 2570, 2570, 2570, -1000, -1000,
	107294, 1132, -75, -149, 3459, -1000, 1956, -1000, 61796, -1000,
	713, 1122, 21629, -1000, -1000, -1000, 582, -1000, 3508, 3508,
	-1000, 3508, 107294, 2846, 184, 169, 65533, 65533, 3605, -1000,
	-1000, 210, -1000, 85946, 210, 210, -1000, 85946, 85946, 2114,
	-1000, 220, -1000, 219, -1000, -1000, -89, -1000, 922, 29566,
	-1000, 1229, -1000, -1000, 1497, -1000, 1871, -1000, 1099, -1000,
	-1000, -1000, -1000, 29566, -1000, 2272, 107294, 107294, 85946, -1000,
	107294, -1000, 1960, 3457, 1770, 2434, 2429, -1000, 2297, 109944,
	2281, 61796, 107294, -1000, -1000, 580, 866, 2499, 2498, 1005,
	107294, 107294, 2497, 109414, 108884, -1000, 3604, 107294, 1955, 43270,
	65533, 2135, 1992, 54, 54, -1000, -1000, 54, 568, 1300,
	85946, 85946, 107294, 85946, 1587, -1000, -1000, -1000, -1000, -1000,
	77375, -1000, -1000, 3524, 3523, -1000, 1313, -1000, -1000, -1000,
	1313, 2545, 1583, 107294, 85946, 65533, 107294, 107294, 1610, 107294,
	974, -1000, 755, 1962, 54, 54, -1000, -1000, 54, 565,
	21629, 1819, -1000, 2933, 107294, 3558, 107294, 107294, 107294, 65533,
	3247, 108354, 107294, 107294, 65533, 4740, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 66623, 1015, 894,
	1597, 1131, 76845, 53726, 890, 53726, 2650, -1000, -1000, 18898,
	-1000, 118226, 118226, -1000, 118226, -1000, 62332, 107294, -1000, 937,
	107294, 72563, 873, 3056, 58062, -189, 880, 70433, 85946, -72,
	107294, -1000, -1000, 2545, 3054, 434, 2296, -1000, 70433, 3422,
	3052, 564, 3601, 3600, -1000, 85946, 2187, 2287, -1000, -1000,
	107824, 3127, 755, 107294, 927, 51029, 1885, -1000, 56457, 984,
	107294, 1717, 147, -1000, -1000, -1000, -36, 107294, -1000, 588,
	-1000, -1000, 10130, 10130, 880, -257, 562, -1000, 805, 802,
	54279, 70433, -155, -1000, -1000, -1000, -1000, 2281, 85946, 107294,
	1227, 2626, 107294, -157, -1000, 146, 560, -1000, 3217, -1000,
	-171, -1000, 891, 53726, 2835, -1000, -1000, 918, -1000, 1218,
	880, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -61, 107294, -189, -189, -74, -75, -1000, 893, -1000,
	893, -1000, 893, -1000, 118226, -1000, -1000, 1513, 1500, 107294,
	-1000, 21629, 107294, 85946, 21629, 85946, 2900, 2810, -1000, -1000,
	-1000, 107294, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1028,
	-1000, 1716, 2132, -1000, 555, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2397, -1000, -76, 29004, 819, -1000,
	-1000, 85946, -62, 43270, 43270, 6717, 6043, 43270, 47204, 47204,
	-1000, 43270, 4989, -1000, -1000, -1000, -1000, -1000, 2834, 545,
	43270, 61796, 5282, 4663, -1000, 332, 10734, 936, -1000, 43270,
	-1000, 330, 31264, -1000, 116989, -53, -158, -1000, 15606, -105,
	-160, -1000, -1000, 711, -1000, 3126, -1000, 43270, 117111, 2353,
	1835, 1702, 1563, 3508, 3557, 18352, -1000, 59657, 928, 2101,
	115040, -1000, -1000, -1000, -1000, 61796, 61796, 43270, 43270, -1000,
	43270, 43270, 43270, -1000, -1000, -1000, 3508, 821, -1000, -1000,
	-1000, 821, -1000, -1000, 1313, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1313, -1000, 43270, -1000, -1000, 2828, 43270, -1000, 61796, 61796,
	47204, 47204, 47204, 47204, 47204, 47204, 47204, 47204, 47204, 47204,
	47204, 47204, 47204, 47204, 47204, 47204, 47204, 47204, 47204, 2439,
	47204, 3479, 3479, 3479, -1000, 2781, 2828, 43270, 43270, 61796,
	328, 327, 324, -1000, 43270, -105, -1000, -1000, 10130, 543,
	-1000, 2376, -1000, 2722, -1000, 43270, -1000, -140, -1000, 2802,
	-1000, -1000, 2722, 2722, -163, 118226, 51029, 51029, -1000, 542,
	43270, 2527, -1000, -1000, 697, -310, -1000, 800, -1000, -1000,
	-1000, -1000, -1000, 434, -1000, -1000, -1000, 145, 96584, 96584,
	696, -1000, -165, -1000, -1000, -168, -1000, 3419, 321, 21629,
	-1000, 927, 3232, -1000, -1000, -1000, -1000, -1000, -1000, -189,
	107294, 107294, 2122, 3556, -1000, 3514, 707, 695, 141, 3508,
	318, 315, 314, -189, 107294, 107294, 107294, -1000, -1000, -1000,
	-1000, 210, -1000, -1000, -1000, 207, -1000, -1000, -1000, -1000,
	2537, -1000, -77, -1000, -1000, -1000, 43270, -1000, -1000, 3244,
	1130, 1129, -1000, -1000, -1000, -1000, 3321, 86476, 3455, 1759,
	1755, 3051, -1000, 2277, -1000, 988, -1000, 1505, -1000, 43270,
	541, 2618, 539, 535, 3599, 1797, 3597, 1006, 3049, 2114,
	3044, 2114, -1000, -1000, -1000, 857, -1000, 118226, -1000, 532,
	531, -1000, -78, 1510, 2023, 910, -1000, -1000, 43270, 43270,
	96054, -1000, 409, 3237, -64, -1000, -1000, 1593, 1128, -1000,
	-1000, -1000, -1000, 2545, 1588, 1127, -1000, -1000, -1000, -1000,
	-1000, -1000, 900, -1000, 3002, 2999, 107294, -1000, 899, -1000,
	-1000, 43270, -1000, -80, 1125, 3375, 2275, 85946, 1114, -1000,
	1104, -1000, -1000, -1000, 3370, 2114, 3041, 1084, -1000, -1000,
	-1000, -1000, -1000, 66078, -1000, 107294, 85946, 1545, 768, -1000,
	2637, 768, 890, 2824, -1000, 2574, -1000, 85946, 3593, 308,
	-173, -81, 61796, 3418, -1000, 2216, 525, 85946, 854, -1000,
	3480, -1000, -1000, -1000, -1000, 3363, 85946, 3417, 3040, 894,
	54, 85946, 3535, -1000, -1000, 3410, 85946, 3032, 2186, 2262,
	2448, 755, 71503, 894, 2100, -87, -1000, 1717, 30690, 3234,
	-174, -1000, -1000, -1000, 927, 59122, 51029, 43270, 3592, -175,
	-1000, -1000, -1000, -1000, -1000, 93929, 93929, 70433, 70433, 70433,
	880, 107294, 107294, 72563, -1000, -1000, 530, 107294, 107294, 529,
	-1000, 107294, 107294, 3582, 70433, -82, 528, -1000, 799, 795,
	794, -1000, -1000, -1000, -1000, -1000, 891, -1000, -171, 54,
	-1000, 2118, 85946, -1000, 17806, -1000, -1000, -1000, -1000, -1000,
	-1000, 893, -1000, -1000, 1986, 2224, 1986, 1725, 1713, -1000,
	-1000, 2129, -1000, -1000, -1000, -1000, 2539, 3240, 21629, 3366,
	7418, 43270, 43270, 581, 1948, 1095, 7418, 43270, 43270, 61796,
	6824, -176, 43270, 43270, -1000, 43270, 694, 118226, 3555, 43270,
	305, 302, -1000, -1000, -1000, 3497, -1000, -1000, -1000, 118226,
	43270, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 301, -1000,
	-14, -1000, -1000, -1000, 113124, -1000, 43270, 299, 3320, -1000,
	297, 294, 9065, 515, 115003, 114974, 114413, 283, -1000, -1000,
	281, 278, 118226, 2781, 118226, -1000, -1000, 1298, 1298, 1290,
	1290, 1290, 1290, 3479, 1627, 2025, 1967, 920, 920, 920,
	1002, 942, 942, 920, 920, 920, 2823, 2416, 527, 5438,
	-1000, -1000, 118226, 118226, 275, -1000, -1000, -1000, -105, 274,
	10130, -1000, 2715, 3316, 118226, -1000, 51029, 2715, 2715, -1000,
	-1000, 2126, 107294, 118226, 51029, -1000, 2957, -1000, 16163, -1000,
	21629, -1000, -1000, -1000, -1000, 3480, -1000, 55920, -1000, 523,
	-1000, -19, -1000, 3232, -1000, 791, -1000, -189, -189, -1000,
	-1000, 693, 3581, 706, 21629, 268, -1000, -1000, -1000, -189,
	-189, -189, -1000, -1000, -1000, 3198, 118226, 107294, 107294, 1355,
	91783, 1711, -1000, -1000, 1812, 2418, -1000, 3452, 3448, 107294,
	3027, -1000, 2316, -1000, 1005, 114384, 51564, -1000, 51564, 107294,
	-1000, -1000, 1693, 2486, 1043, -1000, 3288, 107294, -1000, 107294,
	-1000, -1000, 107294, 107294, 85946, 107294, -1000, 3013, -182, 118226,
	-83, -1000, 790, -1000, 1288, -1000, 17260, 107294, 85946, 107294,
	85946, 2043, -1000, -1000, -1000, 2990, -183, 21629, -1000, 3551,
	3549, 3025, 3294, 3545, 107294, -1000, 107294, 85946, 3197, -1000,
	-1000, -1000, -1000, 1582, 1103, 890, -84, 521, -1000, 781,
	-1000, -1000, 779, 890, -1000, 70433, 53726, 434, -1000, 2607,
	-1000, 91253, 2160, 54, -1000, 3580, 94464, 519, -1000, 2113,
	-1000, 691, 65533, 2545, 54, 85946, -1000, -1000, 434, 262,
	-85, -1000, 3121, 997, 21629, 85946, 3024, 2452, 755, 71503,
	-1000, 1210, 2535, -1000, -86, -1000, 579, 54, 2100, -1000,
	-87, 118226, -1000, 775, -1000, -184, -1000, -1000, 261, -1000,
	3196, 3194, -1000, 2748, 51564, 518, 517, 107294, 3193, -1000,
	-1000, -190, 2236, 2236, 70433, 53726, 70433, -1000, 891, -1000,
	2241, -1000, -1000, -1000, -1000, -1000, 21629, 1479, -1000, 514,
	492, -1000, -1000, -1000, -1000, 3240, 7418, 7418, 43270, 43270,
	43270, 7418, 6824, -192, -1000, 7418, 7418, -105, -1000, -1000,
	116989, -1000, -1000, -1000, 118226, -1000, 16714, 2003, -1000, 114347,
	-1000, 29004, -1000, -1000, 43270, 43270, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 47204, 2821, 490, 61796, -1000, -1000,
	253, 921, 43270, 44956, 2802, 921, 921, -1000, -198, -1000,
	-1000, -1000, 3480, -19, -1000, -1000, 3578, 21629, -1000, 70433,
	431, -1000, 3577, -1000, -1000, -1000, -1000, -1000, 2665, 2172,
	-1000, -1000, 1808, 2415, -1000, 2165, 1094, 2164, -1000, 107294,
	-1000, 107294, -1000, 21629, 107294, 2755, 2251, -1000, 866, 2495,
	489, 47204, 85946, 780, -1000, 3439, 2739, -199, -1000, 107294,
	43270, 107294, -200, -201, 2245, -1000, -1000, 2243, 43270, -1000,
	61796, 486, 2114, 2114, -206, -214, -1000, -1000, 43270, 1089,
	107294, 30128, -1000, 3576, 3237, -1000, -1000, -1000, -1000, 107294,
	43270, 1086, -1000, -1000, -1000, 3541, 2114, 21629, -1000, 2114,
	2114, 3294, 1039, 107294, 85946, -1000, 2151, 2151, 70433, 53726,
	-1000, -89, 890, 3407, 2597, 3575, -1000, -1000, -1000, -1000,
	2492, -1000, -1000, 107294, 2481, 881, -1000, -215, -1000, 773,
	771, 72563, 873, 831, -1000, -1000, -1000, -1000, 434, 3405,
	-1000, 3540, 484, 483, 107294, 2154, 482, 21629, 3229, 755,
	71503, -1000, 3127, 1717, -1000, 2258, 107294, 3226, -1000, 2535,
	481, -1000, 880, 480, 477, 3008, 3008, -217, 51564, 51564,
	-224, 474, 880, -1000, -230, -1000, -1000, -1000, -1000, -92,
	-1000, 814, 804, -1000, -1000, 85946, 85946, 43270, 43270, -1000,
	7418, 7418, 7418, -1000, 252, -1000, -1000, 2100, 3314, -1000,
	-93, 114318, 113757, 1528, 47204, 61796, -231, -1000, -1000, 107294,
	118226, -94, -1000, 118226, 455, 454, 383, -1000, -1000, -1000,
	690, -1000, -1000, 3574, -1000, 95524, 107294, -1000, 2153, 107294,
	94994, 107294, -1000, 2103, -1000, -1000, -1000, 107294, 2246, -1000,
	-1000, 1004, 43270, 5438, 450, 43270, -1000, 3404, -1000, 2593,
	2778, 1806, 51564, -1000, 3240, -1000, 113728, -1000, 992, 1838,
	-1000, -1000, 118226, 3294, 51564, -1000, -1000, 446, 445, 118226,
	444, 767, 2819, -1000, -1000, -1000, -1000, 118226, 443, 3375,
	-1000, -1000, -1000, -1000, 2114, 85946, -1000, -1000, -1000, -232,
	-1000, -1000, 1849, 54, 1962, 2662, -1000, 2160, 438, -1000,
	-1000, 2138, 2528, -1000, 94464, 29566, 29566, 242, 3401, 831,
	-1000, 3493, -1000, 3386, 54, -1000, 3535, 51564, -1000, 85946,
	51564, 2150, 1915, 2408, 71503, -1000, 2448, -1000, -1000, -233,
	107294, 1717, -1000, -1000, 70433, 70433, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 992, -238, -239,
	-1000, 70433, -1000, -1000, 2241, -1000, 107294, -1000, 107294, -1000,
	-1000, -240, -246, -1000, 1927, 43270, 29004, -1000, -1000, 1528,
	-248, -1000, -95, -1000, 3381, 44956, 3573, 3571, 3569, -1000,
	-1000, -1000, 1803, -1000, 107294, -1000, -1000, 1772, -1000, -1000,
	-1000, 3022, 2706, 113691, 2386, 107294, 113662, -1000, 2765, -1000,
	-1000, 2597, 437, -1000, -1000, -1000, -1000, 819, 107294, 2597,
	2702, 85946, 1001, -254, 1986, 1986, 43270, 28442, 2015, 43270,
	-1000, -1000, 3294, -1000, 2761, 3507, -1000, 873, -1000, 2011,
	107294, -1000, 3283, -1000, 3189, -1000, -1000, -1000, 2607, 54,
	-1000, -1000, 54, -1000, 238, -255, 997, -256, 85946, 1866,
	-1000, 755, -1000, 2452, 927, -1000, -1000, -261, -262, 1806,
	992, 878, -264, -1000, -267, -269, -1000, -1000, 225, 44394,
	44394, 44394, -105, -112, -1000, 107294, 435, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2995, 889, -1000, 2142, 1700, -51,
	1019, -1000, -1000, 1962, 107294, -1000, -1000, -1000, 888, 434,
	-1000, 43270, 992, -270, -1000, 947, -272, -1000, 945, -275,
	-1000, 2796, -1000, -277, 2114, 882, 3358, -1000, -1000, -1000,
	2138, 85946, -278, -1000, -1000, 2183, -1000, 2597, 881, -1000,
	-1000, 992, 430, 1806, 428, 1337, 755, -1000, -1000, 1313,
	3229, 3136, 880, 880, 2597, 1806, 927, 426, 880, -1000,
	-1000, -1000, 3081, -1000, 48328, 2173, 1706, 116284, 3081, 3081,
	-1000, -1000, 107294, 3338, -1000, 2148, 2147, 1417, -1000, -1000,
	-1000, -1000, -1000, -1000, 2739, -280, 3334, 2386, 118226, 2597,
	-1000, 1986, 2660, -1000, 1986, 2783, -1000, 1984, -1000, -1000,
	-1000, 1642, 3463, 1908, 415, -1000, 107294, 1686, 1683, 3568,
	1962, 2138, 1806, 51564, 2597, 51564, -1000, -1000, 107294, -1000,
	1915, 1252, -1000, -1000, 1962, 2597, -1000, -1000, -1000, 1818,
	3376, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 743,
	-1000, 3158, -1000, 1021, 1982, 1982, 927, -1000, 739, 2142,
	-1000, -1000, 414, -1000, 411, -1000, 2110, -1000, -1000, -1000,
	-1000, 107294, -1000, -1000, 3564, -1000, 873, -1000, 2597, -283,
	1962, -286, -1000, -189, 1866, -1000, 1465, 878, 1962, 1704,
	-1000, -1000, 2091, 43832, 43270, -1000, 3462, -1000, -1000, 2437,
	-1000, -1000, 43270, 2739, 43270, 43270, 57527, -288, -1000, 2138,
	1962, 992, 878, 1806, 1337, 59122, 927, 878, -1000, -1000,
	-1000, 118226, -1000, -1000, -1000, 118226, -1000, -293, -296, -257,
	93929, 2108, 1908, 878, 1806, 927, 2597, -1000, -263, -1000,
	927, 1962, 1081, -298, -1000, -1000, -1000, -1000, 927, 2597,
	-1000, 1962, -1000, -1000, -1000, 401, -1000, -1000, 1962, 878,
	43270, 878, 927, -299, 927, -1000, 1962, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4387, 4380, 4379, 4374, 4373, 4370, 4369, 4368, 4367,
	4366, 4365, 4364, 4363, 4362, 4361, 4358, 4357, 4356, 4355,
	4353, 4351, 4350, 4347, 4345, 4344, 4343, 4339, 4338, 4329,
	4326, 4323, 4321, 4319, 4314, 4312, 4311, 4310, 4309, 4308,
	4306, 4305, 4304, 4303, 4302, 4301, 4300, 4298, 4296, 4295,
	4293, 4292, 4289, 4286, 4285, 4281, 4278, 4277, 4275, 47,
	4271, 4270, 4269, 4266, 4264, 4263, 4262, 4261, 4260, 4259,
	4257, 4254, 4253, 4250, 4249, 4247, 4243, 4240, 4234, 58,
	4232, 258, 4231, 4228, 4227, 4226, 4223, 4218, 4217, 4216,
	4214, 4213, 4208, 4207, 256, 4204, 143, 4203, 4202, 4201,
	4200, 4197, 255, 4196, 4194, 4193, 4190, 261, 4185, 4183,
	4182, 4179, 4178, 4175, 4174, 4172, 4170, 4169, 4168, 140,
	191, 4167, 4164, 521, 4162, 4160, 4159, 4158, 4157, 4156,
	4155, 4154, 4153, 4152, 223, 4151, 254, 4150, 4149, 4144,
	4143, 4142, 4139, 4138, 4137, 4133, 4132, 4130, 4129, 4128,
	4126, 4122, 4121, 4119, 4118, 4117, 4115, 4114, 4111, 4100,
	4099, 4089, 4088, 4087, 4086, 4084, 4080, 4079, 4078, 4077,
	4074, 4073, 4055, 222, 264, 174, 4052, 4051, 249, 248,
	4046, 4042, 4038, 4037, 4036, 110, 4, 28, 4035, 4034,
	84, 89, 82, 91, 96, 90, 4033, 103, 4032, 126,
	55, 4031, 9, 20, 213, 235, 9409, 220, 4030, 4029,
	4026, 219, 180, 4025, 218, 4024, 4023, 4022, 4019, 59,
	44, 171, 165, 162, 170, 674, 4017, 146, 97, 73,
	51, 35, 12, 65, 243, 18, 4016, 241, 10, 132,
	1, 34, 4015, 4014, 4013, 4010, 2877, 116, 4009, 246,
	217, 160, 4008, 4007, 4006, 1052, 4003, 4002, 39, 4001,
	83, 92, 115, 70, 109, 3999, 138, 33, 3998, 151,
	50, 3997, 148, 86, 81, 7481, 7165, 3996, 100, 56,
	152, 124, 155, 154, 188, 80, 150, 149, 184, 196,
	193, 164, 106, 3994, 232, 3993, 3408, 68, 169, 3992,
	3991, 3989, 67, 181, 102, 3988, 3987, 69, 7, 2,
	11, 186, 32, 113, 40, 19, 3986, 26, 3985, 3983,
	3982, 3978, 3977, 38, 156, 3976, 260, 3975, 66, 46,
	54, 3974, 29, 195, 3972, 206, 121, 3971, 3970, 230,
	183, 182, 3969, 43, 210, 3967, 3966, 3963, 3960, 3959,
	134, 5, 118, 3958, 3957, 141, 3953, 45, 216, 179,
	3951, 71, 3950, 3948, 159, 99, 127, 262, 128, 208,
	112, 204, 172, 211, 3947, 3945, 3944, 189, 3943, 3942,
	197, 142, 3938, 3937, 244, 267, 85, 37, 75, 215,
	79, 177, 158, 3936, 187, 3935, 3934, 265, 167, 199,
	3, 30, 95, 117, 3933, 6, 214, 144, 224, 108,
	3932, 4635, 2214, 3567, 3930, 3929, 129, 114, 77, 111,
	147, 245, 72, 3927, 3926, 2860, 3924, 3923, 3920, 3919,
	176, 3917, 3916, 3915, 123, 145, 198, 3913, 76, 63,
	41, 16, 135, 259, 240, 107, 202, 161, 237, 3911,
	3909, 3905, 173, 3904, 53, 166, 3902, 190, 236, 52,
	3896, 251, 3895, 139, 239, 60, 137, 3893, 207, 3892,
	3891, 3889, 3884, 3883, 3882, 3881, 122, 212, 3880, 3879,
	3878, 57, 178, 3876, 242, 136, 168, 101, 48, 3875,
	94, 3450, 3871, 87, 119, 49, 238, 105, 247, 3870,
	4050, 62, 3867, 0, 10860, 5250, 8497, 10159, 3866, 2333,
	3864, 3863, 3862, 203, 133, 3861, 3860, 3854, 104, 3844,
	78, 3841, 3840, 61, 3839, 22, 14, 15, 23, 21,
	730, 719, 3838, 3837, 64, 120, 130, 3836, 257, 209,
	3835, 3834, 3833, 3832, 88, 3828, 36, 3826, 31, 3823,
	3822, 42, 13, 25, 3821, 3820, 233, 3816, 200, 226,
	3815, 157, 3814, 3398, 125, 3813, 3811, 231, 93, 3809,
	266, 3808, 3366, 3804, 3803, 17, 3802, 3799, 225, 163,
	194, 3796, 3794, 153, 3791, 3790, 3789, 263, 3788, 3786,
	27, 3784, 8, 3783, 3782, 192, 3192, 3781, 3779, 24,
	3777, 175,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 7, 8, 8, 8, 8, 46, 46,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 34,
	29, 30, 31, 32, 10, 10, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 16, 16, 35, 35, 17,
	17, 37, 37, 18, 18, 38, 38, 567, 567, 21,
	40, 22, 41, 15, 568, 568, 568, 568, 33, 23,
	42, 26, 26, 26, 26, 26, 188, 188, 188, 188,
	20, 20, 36, 36, 222, 222, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 566, 566, 224, 224, 223, 218, 218, 569, 569,
	225, 225, 225, 227, 227, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 465, 465, 465, 498, 498, 497,
	497, 497, 496, 496, 582, 582, 583, 583, 583, 583,
	583, 122, 122, 363, 363, 363, 48, 48, 48, 48,
	48, 561, 561, 190, 190, 190, 192, 192, 191, 191,
	191, 191, 70, 70, 574, 574, 575, 575, 573, 576,
	576, 576, 189, 189, 189, 118, 118, 118, 118, 118,
	119, 119, 120, 120, 193, 193, 193, 195, 195, 194,
	194, 194, 194, 194, 194, 194, 194, 199, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 98, 98, 500,
	500, 501, 501, 184, 184, 185, 185, 185, 185, 186,
	186, 187, 187, 187, 62, 196, 196, 198, 198, 197,
	197, 50, 50, 50, 50, 50, 50, 50, 51, 51,
	51, 51, 51, 52, 52, 52, 52, 52, 52, 53,
	53, 53, 53, 53, 53, 60, 60, 60, 60, 175,
	175, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 67, 67, 67, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 585, 585, 586, 586, 587, 587,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 76, 76, 325,
	325, 295, 295, 77, 77, 77, 78, 78, 79, 79,
	64, 64, 559, 559, 340, 340, 456, 456, 81, 81,
	362, 362, 82, 82, 82, 82, 82, 82, 83, 83,
	83, 83, 83, 83, 83, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 91,
	91, 91, 91, 91, 92, 92, 92, 89, 89, 89,
	86, 86, 86, 85, 85, 85, 90, 90, 90, 558,
	284, 284, 88, 88, 88, 87, 87, 87, 341, 341,
	93, 93, 93, 93, 296, 94, 94, 94, 94, 94,
	94, 94, 94, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 458, 458, 95, 95,
	95, 423, 423, 99, 99, 99, 378, 378, 100, 100,
	100, 100, 100, 101, 101, 101, 101, 101, 101, 121,
	121, 121, 121, 121, 121, 563, 563, 333, 333, 249,
	249, 249, 249, 111, 111, 111, 111, 112, 112, 112,
	113, 113, 180, 180, 128, 128, 128, 128, 128, 127,
	127, 127, 127, 127, 127, 54, 54, 54, 55, 55,
	56, 56, 57, 57, 58, 58, 59, 59, 59, 59,
	59, 130, 130, 579, 579, 132, 129, 129, 129, 131,
	131, 131, 131, 133, 134, 134, 134, 134, 134, 134,
	134, 134, 135, 135, 490, 490, 349, 349, 488, 488,
	510, 510, 489, 489, 300, 300, 300, 300, 300, 301,
	301, 301, 499, 499, 499, 499, 499, 499, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 181, 181, 182, 183, 183,
	183, 183, 183, 159, 159, 159, 174, 174, 174, 174,
	174, 174, 174, 162, 162, 162, 146, 146, 137, 137,
	137, 137, 137, 137, 137, 141, 141, 141, 141, 141,
	141, 141, 141, 138, 138, 148, 148, 148, 148, 148,
	142, 142, 143, 143, 143, 143, 169, 169, 145, 145,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 139,
	139, 139, 139, 150, 150, 150, 150, 385, 385, 385,
	173, 173, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 172, 172, 172, 172, 172, 172, 577,
	577, 578, 578, 166, 166, 166, 166, 166, 166, 437,
	437, 160, 160, 160, 160, 165, 165, 165, 165, 168,
	168, 168, 168, 368, 368, 157, 157, 157, 158, 158,
	158, 163, 163, 164, 161, 161, 167, 167, 167, 167,
	140, 140, 140, 589, 589, 589, 170, 170, 156, 156,
	171, 171, 171, 171, 171, 171, 171, 171, 152, 152,
	152, 151, 151, 151, 151, 154, 154, 155, 155, 155,
	155, 155, 153, 144, 560, 560, 556, 556, 556, 556,
	556, 556, 556, 556, 557, 557, 557, 557, 562, 562,
	104, 104, 104, 104, 104, 114, 114, 114, 114, 114,
	105, 105, 105, 105, 105, 107, 107, 106, 106, 106,
	106, 71, 71, 71, 71, 71, 14, 14, 14, 72,
	72, 240, 240, 202, 202, 202, 314, 314, 203, 203,
	308, 308, 308, 308, 200, 200, 201, 201, 73, 73,
	590, 590, 590, 570, 570, 570, 571, 571, 571, 571,
	571, 571, 302, 302, 303, 303, 403, 403, 403, 403,
	403, 306, 306, 306, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 309, 309, 226, 226, 226, 312, 313,
	313, 310, 310, 311, 311, 311, 316, 316, 315, 318,
	318, 317, 402, 519, 519, 521, 521, 521, 521, 521,
	521, 521, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 386, 386, 591, 591, 517, 517, 517,
	518, 513, 513, 514, 514, 514, 514, 514, 304, 304,
	305, 305, 305, 305, 515, 516, 331, 331, 441, 520,
	520, 522, 522, 524, 592, 592, 592, 592, 592, 592,
	593, 593, 593, 401, 401, 400, 400, 323, 323, 525,
	525, 525, 525, 526, 526, 526, 526, 526, 529, 528,
	527, 527, 527, 527, 527, 75, 75, 75, 365, 365,
	364, 364, 366, 366, 366, 366, 366, 366, 366, 366,
	366, 366, 366, 366, 366, 366, 366, 177, 177, 252,
	252, 69, 69, 69, 12, 12, 12, 572, 572, 572,
	74, 74, 74, 74, 74, 74, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 565, 565, 564, 564,
	253, 253, 595, 595, 80, 80, 80, 80, 80, 80,
	80, 80, 459, 459, 460, 460, 68, 68, 68, 68,
	68, 387, 387, 384, 384, 383, 383, 330, 330, 439,
	439, 439, 440, 257, 257, 258, 258, 219, 219, 219,
	28, 27, 19, 19, 24, 24, 25, 25, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 44,
	44, 44, 44, 47, 47, 43, 43, 43, 43, 45,
	45, 39, 39, 580, 580, 581, 581, 110, 110, 115,
	115, 115, 115, 115, 116, 116, 116, 116, 117, 117,
	117, 117, 126, 126, 176, 176, 176, 176, 176, 176,
	176, 49, 49, 49, 49, 61, 61, 61, 61, 124,
	597, 597, 597, 125, 125, 125, 596, 596, 250, 250,
	397, 397, 398, 398, 598, 598, 399, 399, 399, 399,
	399, 243, 242, 244, 244, 245, 245, 66, 66, 66,
	235, 235, 234, 232, 232, 502, 502, 237, 237, 238,
	238, 228, 228, 229, 229, 230, 230, 231, 231, 241,
	241, 599, 599, 102, 102, 102, 179, 179, 294, 294,
	294, 394, 394, 394, 324, 324, 264, 264, 396, 396,
	396, 396, 361, 361, 361, 178, 178, 338, 338, 351,
	351, 352, 352, 453, 453, 353, 108, 108, 109, 109,
	123, 123, 206, 206, 204, 204, 204, 204, 204, 204,
	204, 204, 211, 211, 212, 212, 213, 213, 214, 215,
	215, 215, 215, 342, 342, 216, 216, 216, 205, 205,
	205, 207, 207, 207, 207, 207, 207, 207, 210, 210,
	210, 210, 217, 217, 217, 209, 209, 536, 536, 536,
	538, 538, 540, 540, 539, 539, 535, 535, 537, 537,
	594, 594, 367, 367, 367, 321, 322, 319, 319, 320,
	320, 328, 328, 326, 327, 327, 329, 329, 438, 438,
	438, 220, 220, 220, 358, 358, 358, 358, 359, 359,
	390, 390, 388, 388, 388, 388, 389, 389, 391, 391,
	391, 392, 392, 393, 393, 355, 355, 356, 356, 357,
	357, 357, 357, 419, 419, 208, 208, 208, 335, 335,
	335, 336, 336, 409, 409, 409, 409, 409, 409, 410,
	410, 408, 408, 408, 408, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 443, 444, 444, 337, 337, 445,
	395, 395, 554, 554, 554, 555, 555, 436, 436, 446,
	446, 446, 446, 446, 446, 434, 434, 435, 435, 454,
	455, 455, 371, 371, 371, 371, 369, 369, 372, 372,
	372, 372, 372, 370, 370, 447, 447, 447, 447, 360,
	360, 448, 448, 448, 448, 449, 450, 450, 451, 451,
	404, 405, 405, 461, 461, 461, 461, 463, 334, 334,
	334, 334, 334, 512, 511, 511, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 478, 478, 478,
	478, 478, 478, 478, 464, 464, 464, 464, 464, 468,
	468, 468, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 469, 469, 474, 474, 475, 475, 475,
	470, 471, 476, 476, 476, 476, 600, 600, 480, 480,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 466,
	466, 466, 473, 473, 473, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 379, 379,
	381, 381, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 413,
	413, 413, 413, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 530, 530,
	530, 530, 530, 530, 530, 530, 415, 415, 533, 533,
	534, 534, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 541, 541, 542, 542, 544, 544, 545, 545, 546,
	547, 547, 547, 548, 549, 549, 543, 543, 550, 550,
	550, 550, 551, 551, 552, 552, 552, 552, 552, 553,
	553, 553, 553, 553, 425, 425, 426, 426, 432, 432,
	432, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 254, 254, 254,
	254, 254, 347, 347, 345, 345, 345, 348, 348, 346,
	346, 344, 344, 343, 343, 422, 422, 420, 420, 424,
	424, 373, 373, 479, 479, 479, 479, 479, 479, 479,
	479, 374, 374, 374, 382, 375, 375, 376, 376, 376,
	376, 376, 416, 417, 377, 377, 377, 418, 418, 427,
	431, 431, 430, 429, 429, 428, 428, 406, 406, 407,
	407, 354, 354, 601, 601, 350, 350, 452, 452, 452,
	452, 298, 298, 339, 339, 297, 297, 289, 289, 290,
	290, 290, 290, 332, 332, 433, 433, 481, 481, 482,
	482, 483, 483, 484, 484, 485, 486, 487, 421, 421,
	274, 273, 261, 262, 272, 271, 270, 260, 263, 267,
	268, 269, 265, 266, 280, 279, 278, 233, 236, 285,
	286, 286, 288, 288, 287, 287, 276, 277, 457, 259,
	291, 291, 292, 292, 292, 293, 293, 293, 293, 255,
	255, 256, 256, 281, 281, 282, 283, 283, 275, 275,
	275, 246, 246, 246, 247, 247, 248, 248, 495, 495,
	492, 492, 492, 493, 493, 493, 494, 494, 494, 494,
	491, 491, 491, 491, 491, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 503, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 504, 504, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 506, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 509, 509,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 3, 1, 1, 1, 3, 4, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 6,
	6, 6, 4, 4, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 5,
	5, 6, 6, 4, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 6, 5, 6, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 0,
	1, 1, 0, 2, 0, 7, 10, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	1, 3, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 7, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 6, 3, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 2, 6,
	4, 7, 7, 7, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 2, 6, 3,
	3, 4, 4, 3, 1, 3, 2, 3, 3, 1,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 4, 3, 3, 5, 3, 4,
	3, 5, 3, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 3,
	4, 4, 5, 2, 0, 4, 2, 3, 4, 2,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 4, 3, 1, 1, 1, 2, 3, 2, 3,
	6, 6, 7, 9, 7, 9, 3, 4, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 3, 2, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 13,
	16, 1, 0, 1, 2, 3, 0, 2, 0, 4,
	0, 4, 5, 4, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 2,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 9, 9, 3, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 2, 2, 8, 4, 2, 5,
	5, 5, 2, 2, 0, 1, 3, 11, 12, 8,
	5, 3, 1, 5, 10, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 3, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 6, 4, 4, 5, 5, 7, 3,
	3, 4, 4, 6, 3, 6, 7, 4, 6, 6,
	7, 8, 9, 6, 8, 6, 7, 8, 9, 6,
	8, 6, 8, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 12, 15, 3,
	1, 0, 4, 3, 0, 1, 1, 4, 4, 1,
	0, 3, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 4, 8,
	11, 5, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 6, 4, 5, 4,
	1, 1, 3, 3, 1, 2, 4, 4, 2, 3,
	5, 5, 1, 3, 1, 0, 1, 2, 3, 2,
	4, 2, 3, 0, 2, 0, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 8, 8,
	8, 2, 4, 4, 4, 2, 2, 2, 2, 3,
	1, 3, 1, 2, 6, 7, 1, 0, 1, 0,
	1, 0, 1, 1, 0, 1, 5, 1, 0, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 3, 1,
	3, 3, 3, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 576, -96, -93, -62, -60, -99, -100,
	-82, -101, -95, -121, -126, -108, -109, -110, -122, -128,
	-176, -181, -182, -183, -3, -48, -50, -63, -81, -83,
	-94, -103, -102, -104, -111, -118, -114, -98, -54, -123,
	-127, -136, -177, -178, -179, 33, 32, 100, 80, 151,
	126, 134, 197, 375, 416, 427, 389, 139, 408, 394,
	-131, -132, 444, -49, -61, -125, -124, 73, 127, 403,
	-4, -12, 30, 46, -51, -52, -53, 62, -69, -65,
	-76, -70, -67, -584, 102, -537, -84, -87, -117, -588,
	158, 215, -105, -106, 358, -112, -113, 410, -115, -116,
	412, 159, -56, -55, 153, -204, -206, -129, -130, -180,
	-137, -138, -139, -140, -141, -142, -143, -169, -144, -145,
	-146, -147, -148, -149, -153, -172, -150, -151, -152, -155,
	-154, -156, -161, -157, -158, -159, -160, -162, -163, -165,
	-166, -167, -168, -170, -171, 449, -164, 508, 49, 463,
	82, 143, 420, 21, -5, -6, -7, -8, -9, -10,
	-11, -14, -13, -64, -66, -68, -71, -72, -73, -80,
	-74, -75, -536, -85, -86, -89, -91, -92, -88, -90,
	409, -207, -205, 573, 523, -16, -21, -22, -17, -18,
	-20, -23, -19, -24, -25, -35, -40, -41, -37, -38,
	-36, -39, -42, -43, -44, -45, -46, -47, -27, -33,
	-34, -28, -29, -30, -31, -32, -15, -26, 542, 551,
	-210, -208, -209, -217, 436, 531, 482, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, -296,
	2, -276, -281, -282, -283, -275, -246, -506, -509, 4,
	-503, -507, 165, 224, 322, 21, 23, 22, 24, 25,
	26, 27, 28, 30, 31, 42, 43, 45, 46, 47,
	48, 49, 53, 55, 59, 60, 61, 62, 63, 64,
	68, 73, 74, 79, 80, 81, 82, 83, 84, 85,
	91, 88, 89, 90, 92, 94, 96, 97, 98, 99,
	100, 101, 103, 104, 105, 107, 108, 116, 117, 118,
	119, 121, 126, 127, 130, 125, 129, 132, 133, 134,
	137, 138, 139, 141, 142, 144, 145, 146, 148, 149,
	151, 152, 153, 156, 154, 490, 155, 157, 158, 159,
	160, 163, 171, 172, 173, 178, 180, 184, 185, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 198, 202,
	204, 205, 206, 207, 208, 214, 215, 217, 218, 219,
	220, 225, 226, 227, 231, 228, 237, 238, 242, 243,
	244, 246, 250, 251, 252, 253, 254, 255, 257, 259,
	258, 261, 264, 265, 268, 272, 273, 277, 278, 274,
	279, 280, 282, 283, 286, 284, 287, 288, 285, 289,
	291, 292, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 302, 290, 305, 303, 307, 308, 309, 320, 318,
	313, 314, 310, 315, 311, 312, 316, 317, 324, 325,
	328, 212, 330, 331, 334, 352, 338, 339, 340, 343,
	344, 347, 350, 351, 353, 354, 355, 356, 357, 358,
	359, 360, 362, 363, 365, 366, 367, 369, 370, 371,
	373, 375, 376, 378, 379, 381, 382, 383, 384, 385,
	386, 387, 389, 391, 390, 392, 394, 396, 397, 398,
	403, 408, 405, 406, 407, 409, 410, 411, 412, 414,
	415, 416, 418, 419, 420, 421, 423, 425, 426, 429,
	430, 446, 447, 465, 427, 428, 431, 432, 433, 434,
	435, 439, 437, 438, 440, 441, 442, 444, 445, 448,
	449, 451, 452, 453, 454, 455, 456, 459, 461, 462,
	463, 481, 464, 466, 469, 470, 471, 472, 467, 480,
	474, 475, 477, 478, 483, 484, 485, 486, 487, 488,
	489, 491, 493, 501, 502, 503, 505, 508, 509, 510,
	511, 499, 513, 514, 517, 518, 519, 522, 520, 521,
	523, 525, 528, 529, 530, 536, 535, 537, 543, 544,
	546, 547, 548, 37, 50, 51, 54, 56, 58, 69,
	70, 71, 75, 122, 123, 150, 161, 162, 174, 186,
	187, 199, 201, 209, 210, 211, 232, 233, 235, 240,
	262, 327, 329, 345, 349, 364, 368, 372, 374, 388,
	422, 457, 468, 473, 494, 495, 496, 497, 504, 506,
	531, 532, 533, 538, 545, -296, 2, -276, 336, -269,
	2, -246, -246, 375, 29, 2, 29, 363, 438, 485,
	487, 2, -563, -333, 2, 29, -249, -246, 102, 197,
	436, -269, 2, -563, -333, 25, 2, -246, 2, 350,
	22, 28, 66, 77, 98, 137, 160, 181, 184, -587,
	352, 382, 425, 440, 480, 491, 505, 2, 535, 283,
	437, 482, 224, 118, 510, 431, -572, 429, 430, 350,
	380, 418, 200, 524, -250, 2, 427, -246, 283, 2,
	576, 94, 273, 74, 422, 441, -134, 502, -133, 494,
	431, -135, -490, 2, 305, -246, 576, 576, 576, 29,
	-259, -246, 482, 224, 431, 118, 478, 576, 2, 482,
	355, 535, 437, 118, 385, 224, 510, 431, -572, 283,
	-561, 2, -556, 4, -507, -503, -290, -289, 482, 488,
	118, -283, -275, 566, -282, 576, 576, 576, 2, 243,
	244, 384, 383, 441, 442, 576, 576, 576, 576, 429,
	2, 160, 22, 28, 66, 93, 98, 124, 181, 184,
	341, -585, 352, 382, 440, 480, 484, 491, 505, -571,
	464, 68, 431, -570, -572, 283, 510, 137, -383, 118,
	273, 195, 518, 487, 485, 516, 130, 231, 521, 520,
	576, 576, -96, 2, 573, 33, 32, 139, 444, -199,
	482, 236, 2, -246, 576, 576, 2, 243, 244, 429,
	430, 576, 576, 182, -556, 2, 576, 576, 2, 243,
	244, 429, 430, 236, 2, 68, 433, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	2, -174, 441, 464, 206, 47, 46, 74, 29, 381,
	79, 356, 119, 145, 511, 198, 224, 225, 251, 93,
	94, -385, 45, 244, 243, 430, -577, 429, -437, 483,
	432, 438, 477, 255, 427, 502, 102, 525, 419, 548,
	385, 386, 475, 398, 274, 154, 4, 118, 305, 443,
	494, 273, 426, 359, 84, -594, 2, 482, -596, 2,
	502, 502, 2, -596, 2, -596, 2, -596, 2, -597,
	502, 545, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, -205,
	-207, -206, 576, 576, 576, 576, 576, 576, 576, -174,
	441, 2, 74, 29, -326, -328, 515, 234, 147, 342,
	-204, -206, 2, -536, -488, 2, -411, -510, -413, 564,
	565, 557, 479, 67, 321, 549, -425, 124, 516, 336,
	-509, -414, -427, 150, 422, -348, 8, 9, 5, 6,
	7, -255, -415, -421, 507, 164, 326, -293, 577, 10,
	573, -533, -206, -426, 38, 201, 65, -492, -292, -256,
	-464, 235, -291, -275, -530, -531, 4, -503, -504, -493,
	-467, -475, -471, -472, -478, -246, -506, 77, 110, 111,
	109, 114, 113, 276, 275, 115, 112, 443, 524, 66,
	37, 209, 210, 240, 327, 211, 75, -532, 138, -505,
	232, 233, 457, 51, 388, 174, 123, 122, 329, 56,
	54, 532, -476, 120, 494, 495, 496, 497, 186, 187,
	58, 161, 162, 349, 372, 473, 504, 506, 199, 262,
	44, 106, 183, 230, 213, 239, 241, 245, 263, 266,
	306, 319, 323, 346, 348, 417, 450, -600, 533, 468,
	69, 70, -538, 390, -539, -269, -538, 576, 576, 578,
	576, -319, -321, -322, 2, 29, 135, 573, 2, -442,
	2, -443, -447, -206, 256, -446, 573, -444, 571, -276,
	337, -534, 423, -530, -531, -255, -275, -292, 4, -503,
	-505, 575, -323, 573, 118, 482, 78, 224, -378, 573,
	-246, 29, 336, 498, 578, -320, 379, -423, 573, 336,
	182, 339, 60, 287, 2, 2, 2, 2, 2, 209,
	-246, 482, 117, 2, 254, 2, 2, 2, 2, 2,
	2, 2, -341, 209, 2, -276, 535, -341, 209, 2,
	-341, 209, 2, -384, 2, 87, -260, 209, 2, -246,
	-284, 209, 2, -279, -281, -288, 209, 2, -286, -246,
	-501, 209, 2, -500, -495, 10, -494, 5, 4, -503,
	-507, -504, -506, 77, -411, 2, -123, 2, 60, -246,
	535, 2, 2, 446, 2, 573, -134, 71, 502, 44,
	441, -398, 2, -399, -242, -243, -244, -454, -245, 242,
	378, 387, 552, 128, 321, 548, -488, -579, 182, 556,
	498, -488, -349, 575, 2, 2, 2, 2, 2, 2,
	-447, 209, -276, 2, -273, -491, 4, -503, -507, -504,
	-508, 29, 32, 33, 34, 36, 38, 39, 40, 41,
	57, 65, 66, 72, 76, 78, 87, 93, 102, 109,
	110, 112, 111, 113, 114, 115, 124, 128, 131, 135,
	136, 140, 143, 147, 164, 166, 179, 181, 182, 197,
	200, 203, 216, 229, 234, 236, 256, 260, 267, 275,
	276, 321, 326, 332, 336, 337, 341, 342, 361, 377,
	393, 413, 436, 443, 460, 476, 482, 492, 498, 500,
	507, 515, 516, 524, 526, 534, 539, 540, 541, 542,
	-509, 2, -447, 209, 2, -278, 209, -447, -281, 2,
	-260, 2, -272, -491, 2, -297, 209, -276, -277, -281,
	-279, 2, -286, 2, -500, 209, 2, 535, 236, 498,
	578, -339, -289, -290, -487, 8, -332, -246, 575, -411,
	2, -123, -107, 2, 179, -411, 209, 2, -123, 209,
	2, -411, 209, 2, -123, 209, 2, -574, 2, -500,
	209, -246, 2, 287, 2, 2, 505, 2, 98, 482,
	117, 2, 407, -586, 425, 509, 2, 2, 2, 2,
	2, 2, 2, 482, -265, 2, -246, 179, -286, 209,
	-287, 2, 437, -595, 390, -500, 209, 2, 535, -279,
	209, 2, -279, 224, 238, -260, 209, 2, 487, 485,
	487, 485, 182, 2, 236, 2, 236, 2, -448, 2,
	-449, -443, -450, 571, 337, -458, 2, -457, -494, 531,
	-96, 573, -96, 573, 441, 573, -500, -276, -276, -411,
	2, -123, -107, 2, -411, 2, -123, 2, -120, -500,
	-119, 573, 182, -411, 2, -123, -107, 2, -411, 2,
	-123, 2, -199, 179, 2, 118, 482, -174, 2, 179,
	526, 2, 8, 2, 216, -500, 432, 386, 171, 2,
	446, 2, 447, 74, -385, 548, 74, 182, 2, 182,
	2, -368, 2, 542, 182, 2, 2, -560, 2, 336,
	182, 2, 182, 2, 182, 2, 182, 2, 182, 2,
	-173, 442, 503, 481, 383, 244, 2, -123, 539, -107,
	-411, 539, 2, -578, 179, 430, -411, 2, 501, 253,
	155, 182, -368, 2, 182, 2, 182, 2, 5, 2,
	384, 465, 2, 242, 378, 465, 2, -276, -589, 2,
	482, 535, 437, 2, 2, 88, 89, 182, 2, 182,
	2, 196, 182, 2, 182, 548, 2, -360, -447, -397,
	-398, -397, 498, -326, -328, -174, 446, 2, -211, -358,
	-213, 179, -388, -389, -214, 267, 166, 332, -215, -367,
	29, 135, -367, -367, 60, 574, 574, 11, 12, 76,
	42, 564, 565, 566, 567, 177, 568, 569, 562, 563,
	561, 554, 555, 559, 248, 249, 95, 558, 556, 86,
	281, 424, 167, 168, 169, 170, 404, 222, 35, 223,
	14, 15, 16, 34, 341, 266, 549, 213, 450, 557,
	17, 18, 19, 239, 241, 323, 50, 216, -254, -299,
	-411, -411, -411, -411, -411, -411, -411, 348, 573, -354,
	-406, 571, -206, 573, 573, 573, -487, -206, -411, -425,
	574, -346, 573, -206, -425, -420, 573, 422, 571, 573,
	-428, -411, 5, 5, 5, 573, 575, -541, 543, 179,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 374, -469, 573, -468, 573,
	-468, -468, 536, -466, 573, 551, 544, 573, -466, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 536, 578, -538, -323, 573, -350, -452, -411,
	566, -350, -350, 336, -343, -411, 106, -371, 245, 306,
	183, 263, 417, 230, -408, 577, -408, -436, 551, -206,
	-444, -275, -206, -446, 573, -442, -436, -97, -487, -81,
	-94, -102, -123, -136, -178, -179, 566, -276, 573, 182,
	573, 575, -491, 182, -332, -260, -276, -291, -292, -297,
	134, -343, -556, 510, 431, -332, -249, 39, -422, -461,
	-462, -512, 577, -511, -464, -474, -470, -473, 364, 368,
	-493, 54, 532, -476, 235, 4, -503, -505, 232, 233,
	457, 51, 388, 174, 123, 122, 329, 56, 494, 495,
	496, 497, 186, 187, 58, 533, 468, 69, 70, -556,
	510, 431, -332, 179, -498, 2, -497, -496, 115, 443,
	-494, 5, 2, 150, 2, 2, 2, -246, -225, 578,
	64, 411, 150, -341, 209, -225, 150, -225, 150, -298,
	209, -297, -225, 150, -225, 578, 150, -225, 578, 150,
	575, 578, 150, -498, 2, -384, -490, -343, 39, -398,
	2, 124, -496, -598, 578, 265, -301, 280, 320, 205,
	337, 546, 330, 128, -499, 5, 4, -421, -433, 124,
	273, 235, -481, -483, 8, -482, 9, -484, 564, 565,
	-489, -488, 108, 575, -491, -222, 405, 444, -221, 24,
	30, 139, 226, 309, 529, 156, -311, 227, 351, 355,
	150, 461, 519, -567, -568, 428, 489, 490, 90, 330,
	444, 405, 150, -364, -366, 39, 116, 309, 350, 61,
	219, 285, 286, 463, 538, 150, 444, 405, 351, 24,
	139, -237, -234, -568, 99, 405, 474, 377, -568, -224,
	461, 519, -567, -568, 428, 405, -223, -311, 150, 577,
	24, 405, 444, 351, -582, -583, 139, 30, 405, 351,
	-564, -535, 542, 150, -447, 209, -575, -119, 257, 5,
	10, -500, -119, -339, 578, 578, -491, 566, 430, 429,
	150, 150, 150, 150, 179, 321, 2, 2, 2, 2,
	2, 184, -570, -587, 2, 2, -276, 209, -325, 336,
	-559, -340, 482, -276, 321, 44, -278, 209, 2, -281,
	535, -564, 321, -280, 209, -276, 39, 573, 321, 2,
	-384, 2, 224, -535, 321, -448, -294, -276, -443, -294,
	444, -269, 39, -408, -276, 574, 578, -458, -458, -500,
	-187, 542, 182, 102, 573, 573, -199, -455, 578, -454,
	216, -501, -120, -500, -500, -559, -260, 2, -276, 2,
	482, 246, -500, -187, 216, -500, -500, -500, -490, 29,
	447, 2, -173, 442, 503, 89, 447, 2, -276, 482,
	118, 224, 80, -246, -562, 179, -557, 418, 431, 510,
	-556, -276, 118, -276, 118, -276, 118, -276, -276, 2,
	2, 2, 2, 2, 85, 85, 2, 46, -578, 179,
	2, 501, 2, 501, 2, -246, -246, -246, 464, 265,
	-276, 179, 482, 224, 482, 224, 118, 182, 74, 118,
	29, 482, -225, 578, -250, -211, -358, -490, -359, -358,
	-212, -211, -214, 179, 387, 520, 309, 448, 250, -389,
	-388, 29, -411, -393, 173, 308, -411, -391, -413, 564,
	565, -482, -484, -342, 330, -205, -205, -205, -329, -438,
	-411, 377, 224, -463, -461, -461, -274, -491, 494, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, 266, 213, 450, 50, 216, -411,
	498, -411, -411, -411, -411, 303, 321, 326, 507, 164,
	517, 135, 330, -601, 476, 41, -418, -206, -347, 573,
	-432, 36, 460, 29, -425, 573, 2, -406, -411, -407,
	-344, -343, -343, 574, 534, 29, 135, 566, 2, 574,
	578, 39, 574, -411, -344, -424, -420, -343, -431, -430,
	539, -379, -380, 547, 290, 121, 207, 288, -381, 435,
	-485, 8, -491, 566, -542, 172, 200, 573, 574, 2,
	574, 2, 574, -411, 2, 574, -411, 2, 574, -411,
	2, 574, -411, 2, 574, 2, -411, -411, -411, -411,
	-411, -411, -411, -343, 8, -485, -485, 494, 494, -485,
	-485, -485, -477, 364, 365, 366, 367, 268, 269, 270,
	271, 368, 369, 370, 371, 295, 296, 297, 298, 291,
	292, 293, 294, 299, 300, 301, 302, 191, 192, 193,
	194, 187, 188, 189, 190, -477, -373, 2, -479, -343,
	4, 547, 290, 121, 207, 288, 435, 5, -373, 2,
	-374, 2, -411, -343, -375, -412, -413, 564, 565, 557,
	-425, -376, 2, -411, -344, -411, 57, 260, 500, -377,
	-411, 182, -343, -343, 2, -343, 2, -539, 39, -343,
	-335, 578, 182, 39, 4, -335, -335, 573, 574, 578,
	-372, 204, 284, 279, 238, -372, -442, -371, 245, -369,
	346, -369, -369, -436, -261, 571, 579, -491, -436, -435,
	-434, 39, -269, 343, -436, -436, 575, 574, -435, 572,
	-554, 573, 576, 576, 576, 576, 576, -276, 573, -343,
	-491, 575, 466, 574, 239, 239, 239, 239, 423, 574,
	498, -558, -284, -288, 542, -96, 338, 574, 578, -334,
	38, 571, 575, -485, 2, 2, -480, 536, 573, 573,
	-380, 573, 182, -558, -288, -333, 578, 498, -246, 2,
	-276, -341, -225, 150, -341, -341, -225, 578, 150, -260,
	-279, -284, -286, -288, -246, -500, -501, -225, -280, -579,
	574, 502, -399, -300, 387, 459, 406, 439, 478, 8,
	9, 8, 9, 578, -491, 578, -580, 93, 498, 78,
	431, -239, 274, 397, 309, 482, 422, -402, 209, 78,
	-513, -263, 93, -514, -246, 72, 516, 377, 181, 148,
	-580, 93, 377, -580, 93, 2, 226, 93, 444, 464,
	498, 60, -447, 42, 42, 29, -123, 261, 182, 548,
	482, 224, 431, 498, -447, -366, -461, 116, 285, 286,
	60, -486, -481, 564, 565, -486, 60, -486, -486, -486,
	542, -278, -447, 431, 498, 498, 396, 396, 498, 498,
	-599, 556, 396, 578, 42, 42, 29, -123, 261, 182,
	498, -297, -261, 530, 43, 530, 498, 43, 431, 498,
	578, 43, 43, 498, 498, -565, -251, 105, 315, 278,
	316, 97, 312, 96, 311, 103, 313, 104, 314, 537,
	324, 63, 310, 289, 317, -252, -253, 357, 528, -500,
	444, 405, 150, 216, -455, 216, -455, -289, -246, 575,
	-123, -411, -411, -123, -411, -123, 46, 150, 2, -595,
	254, 573, -304, 321, 182, -332, -456, 236, 578, -340,
	150, -497, -365, -364, 321, -280, 209, 2, 150, -323,
	321, 144, 573, 385, 2, 150, -262, 209, -247, -246,
	-384, -228, 486, 150, -362, 526, -394, -123, 573, 124,
	39, -394, -351, -352, -453, -353, -263, 573, -269, -408,
	-96, -457, 574, 574, 574, -186, 340, -185, -246, 5,
	-199, 526, -303, -403, -402, -517, -518, -513, 266, 224,
	516, 238, 165, -324, -264, -263, 117, -193, 542, -119,
	-120, 574, -455, 216, -187, -187, -455, -455, -276, 179,
	-500, -187, -187, -187, 2, 2, 2, -368, -276, -260,
	-297, -276, 575, -332, -332, -288, -284, -368, -260, -368,
	-260, -368, -260, -123, -411, 2, 441, 179, 179, 575,
	-368, 385, 118, 482, 355, 224, -276, -297, -276, -297,
	-260, 118, -260, 119, -276, -447, -359, -212, 337, 250,
	448, -391, -392, -413, 422, 423, -392, 422, 423, 8,
	9, 8, 9, -216, 452, 325, -341, 578, -219, 40,
	131, 250, -276, 548, 146, -411, -411, 498, -601, 476,
	-418, 146, -411, 303, 326, 507, 164, 517, 135, 330,
	182, 573, -412, -412, 574, -345, -411, -411, 572, 581,
	574, -328, 578, -326, -411, -343, -343, 574, 575, -343,
	-332, 572, 572, 578, 574, -429, -430, 140, -411, 498,
	498, 498, 498, 573, 574, 575, -547, 347, 573, 573,
	-411, 574, 574, 574, 574, 39, 578, 578, 578, 574,
	578, 578, 578, 574, 574, 574, 578, 574, 548, 548,
	574, 574, 574, 574, 578, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 574,
	578, 574, 182, 574, 574, -382, 361, 574, 11, 12,
	564, 565, 566, 567, 177, 568, 569, 562, 563, 561,
	554, 555, 556, 86, 281, 424, 14, 15, 16, 239,
	216, -412, -412, -412, 574, -416, -417, 182, 179, 39,
	-377, -377, -377, 574, 182, -343, 574, 574, 573, -540,
	283, 321, 574, -405, -404, 540, -452, -336, 2, -442,
	-271, -491, -405, -405, -343, -411, 245, 245, -370, 526,
	336, -372, -442, -435, -487, -410, -409, 180, 40, 131,
	318, 212, -435, -269, -323, -435, -435, -491, -436, -436,
	-434, 574, -555, -487, 574, -337, -445, -534, -328, 575,
	-491, -196, -535, -175, 5, 326, -175, -175, -175, -332,
	498, 498, 25, 362, -461, 571, 572, 8, -491, 573,
	-485, -485, -485, -332, 182, 182, 182, -497, -497, 2,
	-225, -341, -225, -225, -297, -298, -225, -225, -225, -363,
	542, -488, -398, 514, 83, 387, 494, -488, -221, 405,
	-263, -263, -276, -285, -246, 195, 397, 26, 397, 265,
	265, 321, -402, 209, -227, 321, -461, -270, -246, 573,
	-386, 544, 250, 250, 526, -263, -270, 250, 209, -263,
	209, -270, 2, -270, -566, 387, 331, -411, -497, 272,
	385, 322, -222, 405, 444, -123, -123, -123, 573, -579,
	526, 134, -276, -297, -276, -285, -280, 444, 405, 319,
	-291, -486, -486, -364, 444, 405, -285, -278, -497, -233,
	-246, -233, 431, -260, 396, 548, -599, -223, -123, -123,
	-123, 573, -261, -224, 405, 5, 209, -263, 5, -246,
	-263, -285, -497, -583, 24, -263, 209, -263, -285, -497,
	-251, -500, 326, 522, -564, 431, 498, -447, -119, -190,
	542, -119, -184, 220, 566, -561, -246, 535, -246, -302,
	-305, -303, -263, -202, -203, 544, 542, 150, -295, -276,
	571, -187, -500, -276, -286, -287, 150, -323, 321, -500,
	39, 150, 573, 2, 2, -279, 336, 321, -262, 209,
	-229, 141, -599, -260, -405, -336, -361, -396, 413, 336,
	-324, 531, -269, -361, -338, 578, 182, 556, 575, -324,
	-451, 566, -96, -96, -187, 578, 573, 556, 556, 573,
	-500, -500, 574, 578, -227, -276, -262, 224, 224, -268,
	-247, 574, 578, 575, 573, -195, 340, -194, 142, 252,
	237, 453, 454, 455, 456, 133, -455, -193, -120, 182,
	-57, 542, 482, -187, 577, -246, -368, -368, -368, 441,
	441, -246, -272, -260, -276, -273, -297, 179, 179, -260,
	520, -392, 337, 277, -438, -220, 550, -276, 577, -411,
	-411, 146, 146, -411, -412, -412, -411, 146, 182, 573,
	-411, -422, 34, 34, 574, 578, -407, -411, 574, 534,
	-328, -328, 574, 566, -491, 577, 574, -420, 143, -411,
	492, 290, 207, 288, -381, 288, -381, -381, -485, 5,
	-491, 566, -548, -266, 573, -246, 540, -327, 342, 574,
	-463, -461, -411, -411, -411, -411, -411, -485, -466, -466,
	-481, -481, -411, -416, -411, -463, -461, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, 135, 321, 330, -412,
	-417, -416, -411, -411, -461, 574, 574, 574, -343, -96,
	573, 283, -355, 200, -411, -455, 578, -355, -355, 574,
	-442, -442, 573, -411, 245, 572, 578, 580, 556, -323,
	575, -434, -435, 572, 574, 578, 574, 578, -395, 39,
	574, -491, -405, -198, -197, 132, 53, -332, -332, 339,
	5, 8, 571, 572, 575, -485, 574, 574, 574, -332,
	-332, -332, -225, -225, 117, 309, -411, 498, 498, 60,
	498, 42, 319, -233, 377, 422, 26, 397, 397, 150,
	321, 528, -519, -514, 148, -411, 573, 224, 573, 573,
	2, -218, 139, 444, -581, 2, 526, 150, -225, 150,
	-225, 546, 573, 573, 498, 431, -239, 542, -343, -411,
	-188, 124, -490, -568, 577, -568, 577, 431, 498, 431,
	498, 542, 163, 163, -233, 542, -343, 498, -465, 48,
	27, 321, -279, 498, 498, -225, 150, 510, 444, -500,
	326, -285, -280, 444, 405, -455, -192, 340, -191, 142,
	415, 133, 252, -455, -190, 182, 236, -280, 2, 574,
	574, 578, -520, 39, 334, 334, 573, -276, -77, 542,
	-454, -487, 44, -278, 39, 150, -564, -123, -280, -459,
	-460, 5, 39, -276, 150, 336, 321, -230, 259, -599,
	-495, -535, -328, -361, -350, 322, 91, 574, -405, -352,
	-336, -411, 2, 574, -185, -186, -500, -500, -500, -187,
	-199, -199, -403, -306, 573, -262, -247, 573, -199, -264,
	2, -501, 578, 573, 556, 556, 556, -193, -455, -123,
	340, -276, 566, -368, -313, -312, 355, 330, -313, 422,
	422, 337, 173, 255, -219, -261, -411, -411, 146, 34,
	34, -411, -411, -422, 574, -411, -411, -343, 572, 5,
	-411, 574, 574, 8, -411, 574, 575, -549, -246, -411,
	574, 60, 574, 574, 578, 578, 574, 574, 574, 574,
	574, 574, 574, -417, 182, 135, 330, 573, 574, 574,
	-96, -419, 203, 60, -442, -419, -419, -370, -332, -442,
	-409, -261, 571, -491, -487, -445, 573, 575, -197, 556,
	572, 2, 571, -491, 574, 117, -263, -263, 482, 422,
	319, -233, 377, 422, 396, 265, 26, 26, -402, 150,
	-521, 93, -523, 76, 165, 102, 321, 326, 516, 377,
	72, 124, 393, -591, 39, 553, 574, -330, -439, -534,
	573, -246, -330, -332, 321, 471, 124, 321, 124, 117,
	510, 79, -263, -270, -332, -332, -276, -285, 157, 574,
	578, 556, 2, 566, 566, -285, -280, -285, -278, 353,
	157, 574, -261, 5, 5, 150, -258, 76, 5, -263,
	-263, -279, 117, 431, 498, -190, 578, 573, 556, 556,
	-190, -501, -119, -323, -314, 226, -263, -518, -515, -516,
	377, -522, -524, 165, 377, -123, 2, -201, -200, -246,
	5, 573, -304, 340, 572, -497, -365, -123, -280, -323,
	574, 578, 144, -387, 526, -261, -276, 150, -231, 258,
	-599, -495, -228, -390, -388, 136, 573, 336, -123, -328,
	556, 574, 574, 117, 117, 218, 149, -330, 573, 573,
	-332, 117, 574, -194, -195, -500, -119, -500, -193, -58,
	-59, 224, 93, 360, -273, 482, 224, 573, 573, -219,
	-411, -411, -411, 574, -328, -491, 566, -543, 355, 574,
	-438, -411, -411, -412, 182, 573, -422, 574, -544, 541,
	-411, -356, -357, -411, 421, 107, 201, -544, -544, 574,
	-487, 2, -500, 571, 2, 216, 336, 396, 265, 336,
	498, 336, -402, -270, -274, -267, -246, 165, 209, 326,
	-386, 250, 573, -412, -276, 573, 2, 31, -592, 128,
	229, 574, 578, -440, -257, -246, -411, -440, 574, 574,
	326, 326, -411, -461, 573, -225, -225, 574, 574, -411,
	498, -490, 100, -488, 2, -568, -260, -411, 498, 5,
	-225, -274, -225, -225, -258, 510, -285, -280, -191, -192,
	-500, -119, -190, 39, -309, 228, 2, -520, 250, -267,
	250, -590, 542, 574, 578, 556, 556, -302, -202, -78,
	-79, 499, -454, -323, 39, 5, 573, 573, -246, 336,
	573, -261, -241, 92, -599, -495, -229, -361, 322, -332,
	93, -390, -418, -187, 573, 573, -307, 81, 94, 125,
	208, 185, 225, 464, 469, 29, -307, 574, -330, -330,
	574, 573, -187, 574, 578, 29, 573, 29, 573, -276,
	-297, -343, -343, 574, -328, 60, 578, 574, 574, -412,
	-422, 574, -545, -546, -266, 578, 573, 573, 445, 572,
	2, -233, 377, -246, 336, -246, -233, 377, -246, -523,
	-267, 321, 526, -411, -248, 573, -411, 39, 229, 129,
	214, -401, -593, 101, 472, 217, -439, -219, 574, -400,
	526, 393, -258, -330, 573, 573, 573, 556, 182, 573,
	-465, -225, -279, 574, -573, 391, -123, -310, -311, 216,
	573, -308, 336, 117, 309, -200, -488, -488, 574, 39,
	-79, 9, 39, -123, -459, -330, -276, -330, 336, -235,
	-234, 267, -495, -230, 574, -270, -361, -501, -501, -400,
	574, 574, -501, -59, -332, -332, 574, 574, -550, 385,
	423, 202, -343, -329, 574, 578, 39, -357, 2, 2,
	2, 396, -246, 396, 150, 204, 574, -525, 282, -246,
	574, 129, 214, -309, 573, -220, -440, -309, 204, -276,
	-569, 526, 574, -316, -315, -312, -318, -317, -312, -343,
	-488, 100, 353, -343, -258, -576, 183, -575, 5, 10,
	-202, 353, -331, -441, -263, 82, 117, -314, -123, -123,
	574, 574, -387, 574, -276, -232, -502, 396, 398, -599,
	-231, -405, 574, 574, -401, -400, -203, 542, 574, 574,
	574, 574, -551, -552, 50, 513, 108, -411, -551, -551,
	-546, -548, 165, 542, -526, -529, -528, 336, 451, 183,
	354, 574, 471, 538, -310, -332, 542, -323, -411, -400,
	574, 578, 531, 574, 578, 531, 574, 182, 574, -225,
	-189, 542, 46, -308, -276, 574, 578, 376, 130, 139,
	-309, -590, -400, 573, -401, 573, -238, -237, -599, -481,
	-241, 136, -187, -187, -309, -401, -405, -187, -553, 148,
	-552, 373, 178, 422, 373, 178, -553, -553, -267, 55,
	-528, 336, -529, 336, 520, 130, -592, 574, 55, -525,
	-309, -315, 216, -317, 182, 353, 429, -575, 31, -240,
	-239, 573, -441, 423, 423, 2, -310, -308, -401, -330,
	-309, -330, -236, -332, -235, 322, 520, -310, -309, 108,
	200, 493, 309, 34, 556, -527, 309, 411, 64, 444,
	-527, -405, 556, -526, 573, 573, 340, -332, 2, -202,
	-309, 574, -310, 574, -232, 444, -203, -310, 422, 344,
	-552, -411, 23, 326, 124, -411, -592, -343, -343, -186,
	573, 574, -308, -310, -400, -203, -401, -238, -351, -405,
	-203, 574, 574, -186, -226, 64, 411, -240, -203, -401,
	-405, -309, -405, -405, -310, 498, 574, -405, -309, -310,
	573, -310, -203, -343, -203, -405, 574, -405, -310,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 503, 504, 506, 507, 508, 510,
	511, 513, 515, 517, 518, 519, 521, 522, 524, 525,
	526, 527, 528, 530, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	594, 596, 0, 1274, 1276, 1278, 1280, 0, 737, 0,
	36, 37, 0, -2, 301, 303, 305, 0, 331, 333,
	334, 336, 338, 340, -2, 0, 438, 439, 441, 443,
	-2, 0, 920, 922, 0, 583, 585, 0, 925, 927,
	0, 0, 605, 606, 0, 1380, -2, 599, 601, 603,
	668, 670, 672, 674, 676, 678, 680, 682, 684, 685,
	687, 689, 691, 693, 695, 696, 698, 700, 702, 703,
	705, 706, 708, 710, 712, 714, 716, 718, 720, 722,
	724, 726, 728, 730, 732, -2, 734, -2, -2, 0,
	-2, -2, -2, 1292, 40, 42, 44, 46, 48, 50,
	52, 54, 56, 389, 390, 392, 394, 396, 398, 401,
	403, 405, 1438, 445, 447, 449, 451, 453, 455, 457,
	0, -2, 1452, 0, 0, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 96, 97, 98, 99, 100,
	101, 102, 103, 71, 72, 74, 75, 76, 80, 81,
	82, 83, 84, 85, 86, 87, 94, 69, 0, 0,
	1411, 1413, 1415, 1417, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 505,
	509, 512, 514, 516, 520, 523, 529, 531, 533, 490,
	491, 494, 2116, 2133, 2134, 2135, 2138, 2139, 2140, 2141,
	2142, 2143, 2575, 2656, 2657, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259,
	2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289,
	2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309,
	2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319,
	2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329,
	2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339,
	2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
	2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359,
	2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369,
	2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389,
	2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
	2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
	2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449,
	2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 492, 493, 1088, 0, 557,
	555, 2101, 558, 2381, 560, 562, 432, 433, 434, 435,
	436, 437, 0, 576, 568, 1450, 577, 579, 580, 581,
	582, 552, 550, 0, 576, 2169, 574, 1272, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 444, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	368, 1137, 1138, 1139, 1257, 1258, 2424, 1299, 0, 212,
	595, -2, -2, -2, 2540, -2, 627, -2, 634, 2544,
	2426, 639, 0, 641, -2, 644, 1275, 1277, 1279, 735,
	736, 2119, 0, 0, 0, 0, 0, 38, 39, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 222, -2, -2, -2, -2, 0, 0, 2469,
	2219, 2069, 2135, 2072, 2067, 302, 304, 306, 307, 0,
	0, 0, 0, 0, 0, 332, 335, 337, 339, -2,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 981, 973, 974, 1195, 0, 0, 0, -2,
	440, 442, 495, 496, 0, 1439, 1439, -2, 0, 0,
	0, 0, 276, 267, 921, 923, 924, 0, 0, 0,
	0, 584, 586, 0, 0, 249, 926, 928, 929, 0,
	0, 0, 0, 0, 278, 0, 0, 600, 602, 604,
	669, 671, 673, 675, 677, 679, 681, 683, 686, 688,
	690, 692, 694, 697, 699, 701, 704, 707, 709, 711,
	713, 715, 717, 719, 721, 723, 725, 727, 729, 731,
	733, 743, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 831, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 902, 0, 746, 748, 749, 750,
	0, 809, 829, 830, 839, 0, 1128, 1440, 1301, 1282,
	1296, 1301, 1284, 1285, 1286, 1287, 1288, 1293, 1295, 1289,
	1290, 1291, 41, 43, 45, 47, 49, 51, 53, 55,
	57, 391, 393, 395, 397, 399, 402, 404, 406, -2,
	1409, 1410, 446, 448, 450, 452, 454, 456, 458, 587,
	0, 589, 0, 747, -2, 0, 1444, 1444, 1444, 0,
	0, 1410, 1408, 0, 592, 593, 648, 649, 1712, 0,
	0, 0, 0, 0, 0, 0, 1966, 1798, 0, 650,
	-2, 1829, 1831, 2515, 2540, 1965, 1833, 1834, 1835, 1836,
	1837, 0, 1839, 1840, 1841, 1842, 1843, 1844, 0, 1846,
	0, 1851, 1852, 1853, 0, 2522, 2046, 2129, -2, 0,
	0, 2528, 2125, 0, 1932, 1869, -2, -2, 2152, 2131,
	1644, 1645, 1646, 1647, 1648, -2, -2, 2558, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 0,
	2503, 2523, 2524, 2529, 2531, 2525, 2512, 1894, 2231, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1671, 1680, -2, -2, -2, -2, -2, -2,
	-2, 2516, 2517, 2534, 2537, 2543, 2548, 2549, 2521, 2530,
	2557, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 1672, -2, -2,
	-2, -2, 1427, 2394, 1430, 1088, 1428, 1412, 1414, 0,
	1416, 0, 0, 0, 1421, 1447, 1445, 0, 1496, 1425,
	1426, 1514, 1514, 1538, 0, 1519, 0, 1538, 1439, 1565,
	0, 1525, 2416, 1870, 1871, 0, 2135, 2130, -2, -2,
	2555, 0, 0, 0, 0, 0, 0, 0, 553, 0,
	559, 561, 0, 0, 0, 575, 1449, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 374, 375, 2523,
	0, 0, 0, 380, 0, 382, 383, 384, 385, 386,
	387, 388, 182, 2523, 463, 488, 0, 182, 2523, 466,
	182, 2523, 469, 0, 472, 1193, 182, 2523, 475, 2097,
	182, 2523, 478, 480, 2105, 182, 2523, 484, 2112, 2110,
	485, 2523, 487, 281, 279, 280, 2148, 2149, 2156, 2157,
	2158, 2159, 2556, 2558, 1268, 1269, 1270, 1271, 0, 1298,
	1194, 597, 598, 0, 622, 0, 626, 2511, -2, 0,
	2435, -2, 630, 1302, 1306, 1307, 1308, 1309, 1310, 0,
	0, 0, 0, 1315, 0, 0, 636, 0, 0, 623,
	624, 642, 645, 0, 738, 739, 740, 741, 742, 68,
	0, 2523, 1565, 70, 0, 2091, 2160, 2161, 2162, 2163,
	2164, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584,
	2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594,
	2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604,
	2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614,
	2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624,
	2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634,
	2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644,
	2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654,
	2655, 73, 0, 2523, 77, 0, 2523, 0, -2, 88,
	0, 95, 0, 2094, 104, 0, 2523, 0, 2066, -2,
	0, 193, 0, 948, -2, 2523, 1136, 0, 0, 0,
	0, 911, 2063, 2068, 912, 2087, 913, 2073, 0, 308,
	309, 310, 311, 312, 0, 313, 2523, 315, 316, 0,
	318, 319, 2523, 321, 322, 0, 324, 0, 233, 234,
	2523, 343, 344, 0, 346, 347, 0, 349, 0, 0,
	0, 353, -2, 369, 0, 366, 356, 357, 359, 360,
	361, 362, 363, 0, 410, 408, 2102, 0, -2, 2523,
	0, 945, 0, 0, 1173, -2, 2523, 1133, 0, 1180,
	2523, 1176, 0, -2, 0, 1437, 2523, 1319, 977, 978,
	979, 980, 1577, 429, 0, 1345, 0, 1347, 0, 1366,
	1571, 1514, 0, 0, 1576, 0, -2, 546, 2118, -2,
	498, 0, 499, 0, -2, 0, 293, 0, 0, 930,
	931, 932, 933, 934, 937, 938, 939, 940, 1551, 250,
	252, 0, 0, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 0, 0, 607, 0, 0, 744, 745, 0,
	0, 755, 756, 757, 0, 293, 2427, 2390, 2252, 764,
	0, 767, 770, -2, 0, 0, 0, 0, 774, 0,
	779, 780, 781, 0, 0, 785, 787, 919, 789, 0,
	0, 791, 0, 795, 0, 798, 0, 800, 0, 802,
	-2, -2, -2, 810, 811, -2, 815, -2, 0, 818,
	820, 0, 822, -2, 0, 831, 827, 828, 0, 0,
	0, 0, 847, 848, 0, 857, 0, 860, 861, 862,
	0, 864, 865, 0, 867, 868, 869, 870, 0, 872,
	873, -2, -2, 877, 879, 0, 886, 0, 890, 0,
	894, 0, 0, 901, 0, 751, 752, 182, 1569, 1281,
	-2, 1283, 0, -2, 0, 588, 0, 591, 1469, 1395,
	1392, 0, 1466, 1467, 1396, 0, 0, 0, 1403, 0,
	1442, 1443, 0, 0, 0, 1382, 1383, 0, 0, 0,
	0, 1971, 1972, 1973, 1974, 1975, 1976, 1979, 1980, 1977,
	1978, 1981, 1982, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 1985, 1986, 0, 0, 1988, 0, 1990, 0, 0,
	0, 0, 0, 0, 1777, 1779, 2054, 0, 0, 1987,
	1717, 1718, 1719, 1720, 1721, 1756, 1757, 0, 0, 1830,
	2051, 2050, 1832, 0, 2002, 0, 1845, -2, 0, 1966,
	1997, 0, 0, 1854, 1855, 1856, 0, 0, 2002, 0,
	0, 2045, 1866, 1867, 1709, 0, 0, 1934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1658, 1657, 0, 1659, 0,
	1660, 1661, 1668, 1681, 0, 0, 0, 0, 1685, 0,
	0, 0, 0, 0, 0, 0, 2026, -2, 0, 0,
	0, 0, 1673, 0, 1429, 0, 0, 1500, 2055, 2059,
	2060, 1500, 1500, 0, 0, 2003, 1562, 1562, 0, 0,
	1557, 1557, 1557, 1555, 1538, 0, 1538, 1548, 0, 1538,
	1538, 0, -2, 1519, 0, 0, 1548, 0, 1532, 534,
	536, 538, 540, 541, 542, 544, 1566, 1567, 0, 0,
	0, 0, 2136, 0, 0, 0, 0, 0, 2121, 0,
	0, 0, 0, 2479, 2426, 564, 578, 1439, 0, 2005,
	1592, 1596, 0, 1598, 1599, 1600, 1601, 1602, 0, 0,
	1593, -2, 1669, 1671, 1692, 2153, 2154, 2155, 1652, 1653,
	1654, 1655, 1656, 1664, 1651, 1651, 1651, 1662, 1691, 1683,
	1691, 1687, 1637, 1638, 1639, 1674, 1675, 1676, 1677, 0,
	2479, 2426, 570, 0, 0, 1377, 197, 199, 200, 201,
	202, 203, 370, 0, 377, 378, 379, 0, 459, 0,
	180, 181, 0, 182, 2523, 464, 0, 467, 0, 182,
	2523, 2061, 473, 0, 476, 0, 0, 482, 0, 0,
	0, 0, 0, 182, 1379, 0, 0, 0, 0, -2,
	632, 637, 638, 0, 1304, 0, 1311, 659, 660, 661,
	1313, 1314, 0, 1316, 635, 662, 663, 664, 665, 666,
	667, 0, 2075, 2076, 2077, 2078, 2081, 2082, 0, 0,
	633, 652, 640, 0, 646, 105, 1254, 0, 144, 0,
	1254, 1254, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 129, 140, 117, 118, 0, 0,
	0, 0, 0, 78, 1110, 0, 1113, 0, 0, 0,
	0, 0, 0, 0, 1126, 0, 0, 0, 0, 0,
	0, 92, 93, 128, 0, 0, 1342, 0, 123, 107,
	0, 0, 0, 130, 142, 0, 173, 175, 0, 0,
	0, 0, 0, 0, 192, 204, 0, 0, 0, 0,
	1134, 0, 1436, 0, 0, 2523, 0, 1551, 2298, -2,
	-2, 250, 1551, 910, 0, 0, 2136, 2071, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 348, 350, 351,
	352, 0, 1172, 0, 358, 400, 1059, 2523, 0, 0,
	427, 422, 0, 424, 0, 0, 1109, 2523, 1107, 2106,
	0, 1131, 0, 1088, 2523, 2104, 0, 0, 0, 1181,
	2145, 1190, 1194, 1332, 0, 431, 0, 1348, 1350, 0,
	0, 1572, 0, 1574, 1514, 1439, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 256, 0, 1550,
	0, 0, 1551, 250, 293, 293, 1551, 609, 1551, 611,
	0, 0, 758, 759, 0, 293, 293, 293, 765, 766,
	768, 769, -2, -2, -2, 887, 771, 772, 854, 0,
	0, 0, 853, 784, 788, 0, 904, 2412, 2426, 2479,
	917, 854, 2219, 854, 2219, 854, 2219, 799, 801, 804,
	842, 850, 814, 819, 0, 0, 824, 832, -2, 0,
	834, 0, 836, 0, 838, 854, 855, 858, 863, 866,
	871, 0, 0, 0, 0, 0, 0, 0, 897, 898,
	0, 0, 1127, 0, 1294, 1469, 1395, 590, 1386, 1468,
	1387, 1394, 1397, 0, 0, 1399, 0, 1401, 0, 1464,
	1465, 1472, 1473, 0, 1483, 1484, 1476, 0, -2, 0,
	0, 1479, 1480, 1405, 0, 1422, 1423, 1424, 1453, 1456,
	1209, 0, 2656, 1713, 1587, 1714, 1715, 2090, 0, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, -2,
	-2, -2, -2, -2, -2, -2, -2, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, -2, -2,
	-2, 1754, 1755, -2, 1989, 1991, 0, 2054, 0, -2,
	0, -2, -2, -2, -2, 1774, 0, 1776, 1781, 1783,
	1785, 0, 0, 0, 0, 2053, 1795, 2037, 2038, 0,
	0, 1968, 1969, 1970, 1780, 0, 1799, 2052, 2049, 0,
	0, 2001, 1452, 1858, 0, 0, 0, 0, 1865, 1850,
	1999, 0, 1998, 0, 0, 0, 2009, 0, 2044, 2040,
	0, 2088, 1708, 1695, 1696, 1697, 1698, 1699, 1700, 1710,
	0, 2085, 2122, 2128, 1942, 0, 0, 0, 1895, 1896,
	1897, 1898, 1899, 0, 1901, 1902, 0, 1904, 1905, 0,
	1907, 1908, 0, 1910, 1911, 1912, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1605, 0, 0, 0, 1609, 0, 0,
	0, 1613, 0, 0, 0, 1617, 0, 0, 0, 1621,
	0, 0, 0, 1625, 0, 0, 0, 1629, 0, 0,
	0, 1633, 0, 0, 0, 0, 0, 1914, 0, 2012,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 1916,
	0, 1918, 2003, 2023, 0, 0, 1800, 0, 0, 0,
	1966, 0, 1921, 2003, 2031, 0, 0, 0, 0, 0,
	2003, 0, 2036, 0, 1928, 0, 1930, 1431, 0, 0,
	1582, 0, 0, 0, 2058, 1582, 1582, 0, 1495, 0,
	0, 1558, 1559, 1560, 1561, 0, 0, 1562, 0, 1552,
	1556, 1553, 1554, 1548, 1511, 0, 0, 2092, 1548, 1517,
	1547, 0, 1088, 1537, 1548, 1548, 0, -2, 1521, 1538,
	0, 0, 535, 537, 539, 543, 545, 0, 0, 1452,
	-2, 0, -2, 1087, 0, 0, 0, 0, 554, 556,
	0, 0, 479, 0, 0, 548, 0, 551, 0, 1583,
	1586, 0, 0, 1597, 1603, 1604, 0, -2, 0, 0,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	489, 182, 461, 0, 182, 182, 470, 0, 0, 182,
	481, 182, 2113, 182, 2111, 282, 486, 1378, 215, 0,
	625, 0, 1303, 1312, 0, 656, 0, 658, 0, 2079,
	2083, 2080, 2084, 0, 647, 0, 0, 0, 0, 1253,
	0, 1216, 0, 0, 0, 0, 0, 148, 2523, 0,
	184, 0, 0, 1052, 2098, 0, 1044, 0, 0, 2238,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 119, 0, 0, 0,
	0, 0, 0, 0, 0, 1111, 1112, 1114, 1121, 1123,
	0, 1117, 2086, 0, 0, 1118, 0, 1120, 1122, 1124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1341, 1342, 0, 0, 0, 116, 120, 0, 0,
	0, 0, 2065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1168, 1166, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 0, 0, -2,
	0, 0, 0, 0, 225, 0, 284, 2064, 2074, 0,
	935, 936, 314, 317, 320, 323, 221, 0, 354, 0,
	0, 983, 958, 0, 0, 409, 293, 0, 0, 423,
	2115, 943, 1105, 1108, 0, 1088, 2523, 1145, 0, 0,
	0, 0, 0, 0, 1179, 0, 0, 2523, 2093, 2144,
	2145, 1334, 1342, 0, 1582, 0, 1364, 1351, 0, 0,
	0, 1364, 1368, 1369, 1371, 1372, 0, 0, 1573, 1579,
	497, 547, 1439, 1439, 293, 291, 2358, 289, 286, 288,
	0, 0, 0, 984, 986, 987, 988, 184, 0, 2145,
	1044, 2287, 2145, 0, 1354, 1356, 0, 245, 0, 253,
	1551, 251, 256, 0, 0, 421, 608, 613, 753, 0,
	293, 761, 762, 763, 806, 844, 852, 773, 775, 776,
	777, 0, 0, 918, 914, 915, 916, 790, 854, 793,
	854, 796, 854, 817, 821, 826, 833, 0, 0, 0,
	846, 0, 0, 0, 0, 0, 0, 0, 891, 892,
	893, 895, 900, 899, 903, 1570, 1390, 1391, 1393, 0,
	1402, 0, 0, 1478, -2, -2, 1477, 1481, 1482, -2,
	-2, -2, -2, 1398, 0, 1407, 1404, 0, 1463, 1207,
	1208, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1796, 0, -2, 1775, 1778, 1782, 1784, 1786, 0, 0,
	0, 0, 0, 0, 1992, 0, 1994, 1797, 2047, 2050,
	1964, 0, 0, 1451, 1452, 1452, 0, 1864, 0, 2000,
	0, 2007, 2008, 0, 1857, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 1900, 1903, 1906, 1909, 0, 0, 0, 0, 1889,
	0, 0, 0, 1893, 1663, 1649, 0, 1691, 1689, 1690,
	1684, 1691, 1688, 1641, 0, 1606, 1607, 1608, 1610, 1611,
	1612, 1614, 1615, 1616, 1618, 1619, 1620, 1622, 1623, 1624,
	1626, 1627, 1628, 1630, 1631, 1632, 1634, 1635, 1636, 1640,
	0, 1913, 0, 1915, 1917, 0, 0, 1919, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1803, 1804, 1805, 1920, 2029, 2030, 0, 0, 0,
	0, 0, 0, 1926, 0, 2035, 1927, 1929, 1439, 0,
	1432, 0, 1497, 1486, 1581, 0, 2056, 1551, 1499, 1501,
	2057, 2095, 1486, 1486, 0, 2004, 0, 0, 1542, 0,
	0, 0, 1544, 1515, 0, 0, 1509, 0, 1505, 1506,
	1507, 1508, 1516, 1088, 1546, 1518, 1522, 2122, 0, 1548,
	0, 1533, 0, 1535, 1568, 0, 1527, 1530, 0, 0,
	2137, 1582, 0, 325, 329, 330, 326, 327, 328, 563,
	0, 0, 0, 0, 2006, 0, 1588, 0, 1594, 0,
	0, 0, 0, 569, 0, 0, 0, 198, 1376, 376,
	460, 182, 465, 468, 2062, 182, 474, 477, 483, 211,
	0, 621, -2, 654, 655, 657, 0, 653, 145, 1254,
	0, 0, 1212, 1214, 2109, 1218, 0, 0, 0, 0,
	0, 0, 150, 2523, 159, 0, 1024, 0, 2096, 0,
	0, 0, 0, 0, 0, 1256, 0, 0, 2523, 182,
	2523, 182, 162, 164, 167, 0, 172, 169, 170, 0,
	0, 1015, 106, 1254, 0, 109, 113, 121, 0, 0,
	0, 127, 0, 0, 0, 1239, 1245, 0, 0, 1115,
	1116, 1119, 1125, 79, 0, 0, 1243, 1249, 89, 90,
	2107, 91, 0, 1211, 0, 0, 0, 174, 111, 115,
	122, 0, 1251, 108, 0, 196, 0, 0, 0, 188,
	0, 189, 190, 205, 0, 182, 2523, 0, 946, 947,
	1167, 1129, 1130, 0, 1135, 0, 0, 0, 1551, 217,
	0, 1551, 225, 0, 2070, 0, 342, 0, 0, 0,
	0, 982, 1070, 0, 953, 0, 0, 0, 415, 411,
	0, 420, 426, 425, -2, 0, 0, 0, 0, -2,
	0, 0, 1183, 1177, 1178, 0, 0, 0, 0, 2523,
	1336, 1342, 0, 1437, 1452, 430, 1343, 1364, 0, 0,
	0, 1353, 1349, 1346, 1582, 0, 0, 0, 0, 0,
	1575, 1578, 500, 501, 268, 0, 0, 0, 0, 0,
	293, 0, 0, 0, 989, 993, 0, 2145, 2145, 0,
	2100, 0, 0, 0, 0, 254, 0, 257, 0, 0,
	0, 262, 263, 264, 265, 266, 256, 247, 1551, 0,
	610, 0, 0, 760, 0, 783, 792, 794, 797, 835,
	837, 854, 880, 881, 1010, 0, 1010, 0, 0, 896,
	1400, 0, 1475, 1406, 1457, 1458, 0, 1209, 0, 1716,
	1759, 0, 0, -2, 0, 0, 1763, 0, 0, 0,
	-2, 0, 0, 0, 1993, 1995, 0, 2049, 1859, 0,
	0, 0, 1863, 1847, 1848, 0, 1967, 2010, 2039, 2043,
	0, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 0, 2089,
	2123, 2127, 1940, 1941, 1945, 2103, 0, 0, 0, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 1682, 1686,
	0, 0, 2011, 2022, 2024, 1801, 1802, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, -2, -2, -2,
	1819, 1820, 1821, -2, -2, -2, 0, 0, 0, 2025,
	2027, 2028, 2032, 2033, 0, 1923, 1924, 1925, 2034, 0,
	1439, 1433, 1494, 0, 1580, 1498, 0, 1494, 1494, 1446,
	1540, 0, 0, 1564, 0, 1512, 0, 1513, 0, 1545,
	0, 1520, 1523, 1524, 1534, 0, 1526, 0, 1529, 0,
	1859, -2, 294, 295, 297, 0, 300, 566, 567, 565,
	549, 0, 0, 1590, 0, 0, 1666, 1670, 1694, 572,
	573, 571, 462, 471, 213, 0, 1549, 0, 0, 0,
	0, 2175, 1229, 1230, 0, 2540, 1234, 0, 0, 0,
	0, 183, 1022, 1051, 0, 0, 0, 1043, 0, 0,
	1057, 152, 0, 0, 0, 160, 0, 0, 157, 0,
	166, 171, 0, 0, 0, 0, 1217, 0, 0, 124,
	125, 126, 0, 131, 0, 132, 0, 0, 0, 0,
	0, 0, 1327, 1328, 1322, 0, 0, 0, 185, 0,
	0, 0, 1206, 0, 0, 207, 0, 0, 0, 1170,
	1171, 1240, 1246, 0, 0, 225, 223, 0, 226, 0,
	229, 230, 0, 225, 219, 0, 0, 1088, 355, 956,
	1058, 0, 1060, 0, 954, 0, 0, 1059, 407, 0,
	414, 0, 0, 1109, 0, 0, 1132, 1143, 1088, 0,
	1182, 1184, 0, 1192, 0, 0, 0, 1338, 1342, 0,
	1331, 1332, 1471, 1344, 1362, -2, 0, 0, 1452, 1370,
	1367, 1373, 1374, 0, 290, 0, 285, 287, 0, 271,
	0, 0, 985, 990, 0, 0, 0, 0, 0, 1355,
	1357, 0, 0, 0, 0, 0, 0, 246, 256, 277,
	0, 754, 778, 845, 882, 1009, 0, 0, 884, 0,
	0, 1474, 1461, 1462, 1459, 1209, 1761, 1765, 0, 0,
	0, 1767, -2, 0, 1789, -2, -2, 1996, 2048, 1838,
	1452, 1860, 1862, 1849, 2042, 1711, 0, 1947, 1944, 0,
	1931, 0, 1884, 1885, 0, 0, 1888, 1890, 1891, 1892,
	1650, 1643, 1642, 2021, 0, 0, 0, 0, 1922, 1434,
	0, 1936, 0, 0, 1502, 1936, 1936, 1541, 0, 1543,
	1510, 1503, 0, 2123, 1536, 1528, 0, 0, 298, 0,
	1584, 1589, 0, 1595, 1665, 214, 146, 147, 1221, 1222,
	1224, 1225, 0, 0, 1231, 1232, 0, 1237, 149, 0,
	1023, 0, 1026, 0, 0, 0, 0, 1033, 1044, 0,
	0, 0, 0, 0, 1045, 0, 1074, 0, 1197, 1204,
	0, -2, 0, 0, 0, 154, 177, 0, 0, 1255,
	0, 0, 182, 182, 0, 0, 1213, 1215, 0, 0,
	0, 0, 134, 0, 0, 1241, 1247, 1244, 1250, 0,
	0, 0, 1252, 194, 195, 0, 182, 0, 187, 182,
	182, 1206, 0, 0, 0, 216, 0, 0, 0, 0,
	218, 283, 225, 0, 1004, 0, 1070, 1062, 1063, 1064,
	0, 1069, 1071, 0, 0, 970, 955, 0, 966, 0,
	0, 983, 958, 0, 412, 944, 1106, 1140, 1088, 0,
	1174, 0, 0, 0, 0, 0, 0, 0, 1340, 1342,
	0, 1333, 1334, 1364, 1470, 0, 0, 0, 1352, 1471,
	0, 292, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 258, 0, 259, 260, 261, 248, 612,
	614, 0, 0, 620, 1008, 0, 0, 0, 0, 1460,
	1769, -2, -2, 1790, 0, 2124, 2126, 1452, 0, 1933,
	1454, 0, 0, -2, 0, 0, 0, 1435, 1418, 0,
	1493, 1485, 1487, 1489, 2415, 2215, 2522, 1419, 1420, 1563,
	0, 1531, 299, 0, 1591, 0, 0, 1226, 1227, 0,
	0, 0, 151, 0, 1027, 1028, 2099, 1030, 0, 1032,
	1034, 1035, 0, 1038, 2147, 0, 1042, 0, 1053, 1075,
	0, 1084, 0, 1199, 1209, 1203, 0, 1201, 1086, 0,
	153, 155, 176, 1206, 0, 156, 165, 0, 0, 110,
	0, 0, 2210, 137, 135, 133, 1210, 112, 0, 196,
	206, 1205, 191, 208, 182, 0, 1242, 1248, 227, 0,
	228, 231, 0, 0, 1012, 0, 957, 1061, 0, 1072,
	1073, 960, 0, 959, 0, 0, 0, 0, 0, 413,
	416, 0, 419, 0, 0, 1185, 1183, 0, 1191, 0,
	0, 0, 1321, 0, 0, 1335, 1336, 428, 1358, 0,
	0, 1364, 1375, 270, 0, 0, 991, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 992, 1086, 0, 0,
	1050, 0, 275, 255, 0, 616, 0, 618, 0, 883,
	885, 0, 0, 1861, 1951, 0, 0, 1886, 1887, -2,
	0, 1827, 1935, 1937, 0, 0, 0, 0, 0, 1504,
	1585, 1219, 0, 1223, 0, 1233, 1235, 0, 1238, 1025,
	1029, 0, 0, 0, 1092, 0, 0, 1046, 0, 1078,
	1079, 1004, 0, 1080, 1081, 1082, 1198, 1463, 1204, 1004,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	186, 209, 1206, 224, 241, 0, 1141, 958, 1011, 0,
	0, 968, 0, 971, 0, 967, 964, 965, 956, 0,
	417, 418, 0, 1144, 0, 0, 1192, 0, 0, 1324,
	1320, 1342, 1337, 1338, 1582, 1361, 1365, 0, 0, 1084,
	1086, 958, 0, 615, 0, 0, 888, 889, 0, 0,
	0, 0, 1946, 1455, 1828, 0, 0, 1488, 1490, 1491,
	1492, 1220, 1228, 1236, 0, 0, 1037, 1097, 0, 0,
	0, 1076, 1077, 1012, 0, 1202, 1200, 1055, 0, 1088,
	158, 0, 1086, 0, 1016, 0, 0, 1019, 0, 0,
	138, 2210, 136, 0, 182, 244, 0, 238, 236, 237,
	960, 0, 0, 1066, 1068, 0, 972, 1004, 970, 1142,
	1175, 1086, 0, 1084, 0, 1330, 1342, 1325, 1326, 0,
	1340, 0, 293, 293, 1004, 1084, 1582, 0, 293, 617,
	619, 1943, 1963, 1952, -2, 2482, 2216, 0, 1963, 1963,
	1938, 1939, 0, 0, 1039, 1093, 1094, 0, 1089, 1090,
	1091, 2146, 1040, 1041, 1074, 0, 0, 1092, 178, 1004,
	1013, 0, 0, 1014, 0, 0, 141, 0, 143, 210,
	232, 0, 0, 952, 0, 1065, 0, 0, 0, 0,
	1012, 960, 1084, 0, 1004, 0, 1317, 1329, 0, 1339,
	1321, 0, 272, 273, 1012, 1004, 1049, 274, 1948, 0,
	0, 1954, 1955, 1956, 1957, 1958, 1949, 1950, 1031, 0,
	1095, 0, 1096, 0, 0, 0, 1582, 1083, 0, 1097,
	163, 1017, 0, 1020, 0, 139, 0, 239, 240, 949,
	951, 0, 1067, 961, 0, 963, 958, 969, 1004, 0,
	1012, 0, 1323, 2108, 1324, 1359, 0, 958, 1012, 0,
	1960, 1961, 0, 0, 0, 1098, 0, 1101, 1102, 0,
	1099, 1054, 0, 1074, 0, 0, 0, 0, 962, 960,
	1012, 1086, 958, 1084, 1330, 0, 1582, 958, 1959, 1962,
	1953, 1036, 1100, 1103, 1104, 1085, 1056, 0, 0, 242,
	0, 1007, 952, 958, 1084, 1582, 1004, 1318, 1582, 1047,
	1582, 1012, 0, 0, 1003, 1005, 1006, 950, 1582, 1004,
	1188, 1012, 1360, 1048, 1018, 0, 243, 1186, 1012, 958,
	0, 958, 1582, 0, 1582, 1189, 1012, 1187, 1021,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 562, 3, 568, 563, 3,
	573, 574, 566, 564, 578, 565, 575, 567, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 581, 3,
	554, 556, 555, 559, 577, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 571, 3, 572, 569, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 579, 561, 580, 557,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 558, 57897, 560, 57898, 570, 57899, 576,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1283
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1288
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1290
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1293
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1294
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1300
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1301
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1302
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1303
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1310
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1325
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1326
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1327
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1328
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1329
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1330
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1331
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1389
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1415
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1428
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1445
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1449
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1453
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1489
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1498
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1507
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1516
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1540
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1576
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1580
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1586
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1590
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1596
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1605
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1616
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1620
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1626
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1634
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1644
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1648
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1658
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1669
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1676
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1688
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1695
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1703
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1712
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1717
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1723
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1731
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1742
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1752
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1762
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1771
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1782
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 135:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1788
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1796
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1814
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1819
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1939
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1942
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1948
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 163:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1979
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1988
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2000
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].union.user(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2020
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2042
		{
			sqlVAL.union.val = nil
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = nil
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2161
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2165
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2168
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2203
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2208
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2215
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2223
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2254
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2337
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2345
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2372
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2483
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = nil
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = nil
		}
	case 245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2608
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2652
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2732
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2741
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2747
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2752
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2757
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2762
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2767
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2771
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2790
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2798
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2874
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2904
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2924
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2927
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3038
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3057
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3062
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3074
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3076
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3077
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3078
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3079
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3080
		{
			return helpWith(sqllex, "CREATE")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3093
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3096
		{
			return unimplemented(sqllex, "create access method")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3097
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3098
		{
			return unimplemented(sqllex, "create cast")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3099
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3101
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3102
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3103
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3104
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3105
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3106
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3107
		{
			return unimplemented(sqllex, "create operator")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3108
		{
			return unimplemented(sqllex, "create publication")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3109
		{
			return unimplemented(sqllex, "create rule")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3110
		{
			return unimplemented(sqllex, "create server")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3111
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3113
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3114
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3117
		{
		}
	case 365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3118
		{
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3121
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3122
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3125
		{
		}
	case 369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3126
		{
		}
	case 370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3129
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3130
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3131
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3135
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3136
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3137
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3138
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3140
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplemented(sqllex, "drop server")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3146
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3151
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3152
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3153
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3154
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3155
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3157
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3159
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3160
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3192
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3196
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3205
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3224
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3228
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3239
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3267
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3281
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3302
		{

			sqlVAL.union.val = nil
		}
	case 428:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			return helpWith(sqllex, "DELETE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3329
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3330
		{
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3341
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3343
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3344
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3345
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3354
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3356
		{
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3357
		{
			return helpWith(sqllex, "DROP")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3360
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3437
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3454
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3462
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3499
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3530
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3556
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3561
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3579
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3613
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3620
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3622
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3638
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3646
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3654
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3665
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3669
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3672
		{
			return helpWith(sqllex, "DELETE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "INSERT")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3681
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3690
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3691
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "DELETE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3697
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "INSERT")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3705
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3731
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3764
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3798
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3852
		{
			return helpWith(sqllex, "GRANT")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3908
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			return helpWith(sqllex, "RESET")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			return helpWith(sqllex, "RESET")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3974
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3977
		{
			return helpWith(sqllex, "USE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3981
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3982
		{
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3984
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3988
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3989
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3990
		{
			return helpWith(sqllex, "USE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4006
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4021
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4024
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4050
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4054
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4058
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4101
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4104
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4139
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4161
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4166
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4170
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4201
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4206
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			return unimplemented(sqllex, "set from current")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4225
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4306
		{
			sqlVAL.union.val = tree.Low
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = tree.Normal
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4314
		{
			sqlVAL.union.val = tree.High
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4329
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4382
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4388
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4389
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SHOW")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4402
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4406
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4416
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4421
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4426
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.str = "client_encoding"
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.str = "timezone"
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4471
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4475
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4486
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4494
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4534
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4543
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4570
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4616
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4634
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4638
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4657
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4667
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4680
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4688
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4696
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4699
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4712
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4721
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4732
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4737
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4748
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4753
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = true
		}
	case 809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = false
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4785
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4833
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4849
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4888
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = true
		}
	case 840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = false
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4953
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = true
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = false
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4990
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4997
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5005
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5026
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5031
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5036
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5052
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5056
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5072
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5083
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5095
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5103
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5129
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5140
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5154
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5163
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5209
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5237
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5377
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5420
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5429
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5478
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5479
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5480
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5490
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5492
		{
			return helpWith(sqllex, "RESUME")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5519
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5551
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5559
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5594
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5622
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5661
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:      sqlDollar[13].union.locality(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5677
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:      sqlDollar[16].union.locality(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{

			sqlVAL.union.val = nil
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.str = ""
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5722
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = nil
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5745
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5749
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5765
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 968:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5775
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5789
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5804
		{
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5805
		{
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5806
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5861
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5887
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5898
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5901
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5904
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5905
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5911
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5927
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5932
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.str = ""
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6027
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6123
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = true
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = false
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6158
		{
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6159
		{
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[4].union.idxElems(),
					Storing:     sqlDollar[6].union.nameList(),
					Interleave:  sqlDollar[7].union.interleave(),
					PartitionBy: sqlDollar[8].union.partitionBy(),
					Predicate:   sqlDollar[10].union.expr(),
				},
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6259
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6270
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6297
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6312
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6377
		{
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6378
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6379
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6380
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6381
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6382
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6454
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6538
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6547
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6555
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6566
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6571
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6581
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6584
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6586
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6588
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6591
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6594
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6609
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6634
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6649
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = true
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6659
		{

			sqlVAL.union.val = true
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = false
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6674
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6688
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6700
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6712
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6722
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6732
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = nil
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6842
		{
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6843
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6868
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6870
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6872
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6874
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6876
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6878
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6916
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6934
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6953
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6970
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6987
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6991
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = false
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = true
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = false
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = true
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = false
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7045
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7051
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7057
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7065
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.str = ""
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.str = ""
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7124
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7130
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[7].str),
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7354
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7360
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7372
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7378
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7392
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7398
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7415
		{
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7416
		{
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7419
		{
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7420
		{
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7431
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7449
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7458
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7479
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7487
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7508
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7516
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7527
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7531
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7532
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7533
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7552
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7557
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7570
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7575
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7584
		{
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7586
		{
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7603
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7606
		{
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7607
		{
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7615
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7635
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7648
		{
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7650
		{
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7654
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7741
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.str = ""
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7767
		{

		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.str = ""
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.str = ""
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.str = ""
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.str = ""
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7831
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7844
		{
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7845
		{
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7874
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7892
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7896
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7905
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7954
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7981
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7985
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8023
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8055
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8076
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8091
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8235
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8270
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8271
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8272
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8333
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8377
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8393
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = true
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = false
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8447
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = nil
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8460
		{
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8461
		{
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = true
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = false
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = false
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = true
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8490
		{
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8491
		{
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8494
		{
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8495
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8536
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8557
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8562
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8591
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8624
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8679
		{
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8680
		{
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8683
		{
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8684
		{
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8718
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8719
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8720
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8750
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8752
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8767
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8789
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8794
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8799
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8810
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8822
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8841
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8880
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8890
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8925
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8936
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8966
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8999
		{
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9001
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = nil
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = true
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = false
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.str = tree.AstFull
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.str = tree.AstRight
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.str = tree.AstInner
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9118
		{
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9119
		{
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.str = tree.AstHash
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.str = ""
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9188
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9193
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9211
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9217
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9223
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9233
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = true
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = false
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = true
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = false
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9282
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9295
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9303
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9304
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9322
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9324
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9332
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9345
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9352
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9361
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9401
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9413
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9414
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9418
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9419
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9420
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9422
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9424
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9426
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9427
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9428
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9430
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9431
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9432
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9434
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9435
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9436
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9438
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9439
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9440
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9442
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9443
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9444
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9446
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9447
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9448
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = types.Geography
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9463
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9471
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9497
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9505
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = nil
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = types.Int2
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = types.Int
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = types.Float4
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = types.Float
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9548
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9556
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9564
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = types.Bool
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9578
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = types.Float
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9597
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9603
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9625
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = types.String
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = true
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = false
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = types.Date
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9674
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9682
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9696
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9705
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9713
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9730
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = true
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = false
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = false
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = types.Interval
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9754
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9838
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9853
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = nil
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9883
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9943
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10195
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10261
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10477
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10482
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10508
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10532
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10562
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10573
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10574
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10589
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10598
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10664
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10789
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10794
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10803
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10812
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10821
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10830
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10835
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10840
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10845
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10850
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10859
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10860
		{
			return unimplemented(sqllex, "treat")
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10881
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10886
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10933
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.str = ""
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11022
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11035
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11132
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = tree.Any
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = tree.Some
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = tree.All
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = tree.Div
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = tree.LT
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = tree.GT
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = tree.LE
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = tree.GE
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = tree.NE
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = tree.Like
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11493
		{
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11494
		{
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11566
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11574
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11647
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11663
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11672
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11683
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11692
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11700
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11712
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11877
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11925
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11938
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11945
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.str = ""
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
