// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:684
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11822

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1341,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	224, 202,
	454, 202,
	-2, 0,
	-1, 79,
	213, 1143,
	226, 1143,
	242, 340,
	345, 340,
	354, 927,
	386, 340,
	398, 927,
	439, 927,
	465, 340,
	491, 927,
	-2, 0,
	-1, 85,
	242, 344,
	-2, 0,
	-1, 86,
	127, 1341,
	219, 1341,
	476, 1341,
	477, 1341,
	-2, 0,
	-1, 102,
	144, 1312,
	162, 1312,
	175, 1312,
	222, 1312,
	255, 1312,
	304, 1312,
	314, 1312,
	471, 1312,
	-2, 1283,
	-1, 138,
	152, 808,
	241, 808,
	348, 777,
	403, 777,
	457, 808,
	459, 777,
	-2, 0,
	-1, 140,
	4, 1343,
	21, 1343,
	22, 1343,
	23, 1343,
	24, 1343,
	25, 1343,
	26, 1343,
	28, 1343,
	29, 1343,
	35, 1343,
	40, 1343,
	41, 1343,
	42, 1343,
	43, 1343,
	44, 1343,
	45, 1343,
	46, 1343,
	47, 1343,
	48, 1343,
	49, 1343,
	51, 1343,
	52, 1343,
	53, 1343,
	54, 1343,
	56, 1343,
	57, 1343,
	58, 1343,
	59, 1343,
	60, 1343,
	61, 1343,
	62, 1343,
	66, 1343,
	67, 1343,
	68, 1343,
	69, 1343,
	71, 1343,
	72, 1343,
	73, 1343,
	77, 1343,
	78, 1343,
	79, 1343,
	80, 1343,
	81, 1343,
	82, 1343,
	83, 1343,
	86, 1343,
	87, 1343,
	88, 1343,
	89, 1343,
	91, 1343,
	93, 1343,
	94, 1343,
	95, 1343,
	96, 1343,
	97, 1343,
	98, 1343,
	100, 1343,
	101, 1343,
	102, 1343,
	104, 1343,
	105, 1343,
	113, 1343,
	114, 1343,
	115, 1343,
	116, 1343,
	118, 1343,
	119, 1343,
	120, 1343,
	122, 1343,
	123, 1343,
	124, 1343,
	126, 1343,
	127, 1343,
	129, 1343,
	130, 1343,
	131, 1343,
	134, 1343,
	135, 1343,
	136, 1343,
	138, 1343,
	139, 1343,
	141, 1343,
	142, 1343,
	143, 1343,
	145, 1343,
	146, 1343,
	147, 1343,
	148, 1343,
	149, 1343,
	150, 1343,
	151, 1343,
	152, 1343,
	153, 1343,
	154, 1343,
	155, 1343,
	156, 1343,
	157, 1343,
	158, 1343,
	159, 1343,
	161, 1343,
	167, 1343,
	168, 1343,
	169, 1343,
	170, 1343,
	174, 1343,
	176, 1343,
	180, 1343,
	181, 1343,
	182, 1343,
	183, 1343,
	184, 1343,
	185, 1343,
	187, 1343,
	188, 1343,
	190, 1343,
	191, 1343,
	193, 1343,
	194, 1343,
	195, 1343,
	196, 1343,
	197, 1343,
	198, 1343,
	199, 1343,
	200, 1343,
	201, 1343,
	203, 1343,
	204, 1343,
	206, 1343,
	207, 1343,
	208, 1343,
	209, 1343,
	213, 1343,
	214, 1343,
	215, 1343,
	216, 1343,
	219, 1343,
	220, 1343,
	221, 1343,
	223, 1343,
	225, 1343,
	226, 1343,
	228, 1343,
	230, 1343,
	231, 1343,
	232, 1343,
	234, 1343,
	238, 1343,
	239, 1343,
	240, 1343,
	241, 1343,
	242, 1343,
	243, 1343,
	245, 1343,
	246, 1343,
	247, 1343,
	249, 1343,
	250, 1343,
	252, 1343,
	253, 1343,
	256, 1343,
	257, 1343,
	258, 1343,
	261, 1343,
	262, 1343,
	263, 1343,
	264, 1343,
	266, 1343,
	267, 1343,
	268, 1343,
	269, 1343,
	270, 1343,
	271, 1343,
	272, 1343,
	273, 1343,
	274, 1343,
	275, 1343,
	276, 1343,
	278, 1343,
	280, 1343,
	281, 1343,
	282, 1343,
	283, 1343,
	284, 1343,
	285, 1343,
	286, 1343,
	287, 1343,
	288, 1343,
	289, 1343,
	290, 1343,
	292, 1343,
	294, 1343,
	296, 1343,
	297, 1343,
	299, 1343,
	300, 1343,
	301, 1343,
	302, 1343,
	303, 1343,
	306, 1343,
	309, 1343,
	310, 1343,
	311, 1343,
	312, 1343,
	315, 1343,
	316, 1343,
	317, 1343,
	319, 1343,
	321, 1343,
	322, 1343,
	323, 1343,
	324, 1343,
	325, 1343,
	326, 1343,
	327, 1343,
	328, 1343,
	329, 1343,
	330, 1343,
	331, 1343,
	332, 1343,
	334, 1343,
	335, 1343,
	336, 1343,
	337, 1343,
	338, 1343,
	339, 1343,
	340, 1343,
	341, 1343,
	342, 1343,
	344, 1343,
	346, 1343,
	347, 1343,
	348, 1343,
	349, 1343,
	350, 1343,
	351, 1343,
	352, 1343,
	353, 1343,
	354, 1343,
	355, 1343,
	356, 1343,
	358, 1343,
	364, 1343,
	366, 1343,
	367, 1343,
	368, 1343,
	369, 1343,
	370, 1343,
	371, 1343,
	372, 1343,
	373, 1343,
	375, 1343,
	376, 1343,
	377, 1343,
	379, 1343,
	380, 1343,
	381, 1343,
	382, 1343,
	383, 1343,
	384, 1343,
	386, 1343,
	387, 1343,
	388, 1343,
	389, 1343,
	390, 1343,
	391, 1343,
	392, 1343,
	393, 1343,
	394, 1343,
	395, 1343,
	396, 1343,
	398, 1343,
	399, 1343,
	400, 1343,
	401, 1343,
	402, 1343,
	403, 1343,
	405, 1343,
	406, 1343,
	407, 1343,
	408, 1343,
	409, 1343,
	411, 1343,
	412, 1343,
	413, 1343,
	414, 1343,
	415, 1343,
	416, 1343,
	417, 1343,
	419, 1343,
	421, 1343,
	422, 1343,
	423, 1343,
	424, 1343,
	425, 1343,
	426, 1343,
	427, 1343,
	428, 1343,
	429, 1343,
	430, 1343,
	431, 1343,
	432, 1343,
	433, 1343,
	435, 1343,
	436, 1343,
	438, 1343,
	440, 1343,
	441, 1343,
	442, 1343,
	443, 1343,
	444, 1343,
	445, 1343,
	446, 1343,
	447, 1343,
	449, 1343,
	450, 1343,
	451, 1343,
	452, 1343,
	453, 1343,
	455, 1343,
	457, 1343,
	458, 1343,
	459, 1343,
	460, 1343,
	461, 1343,
	462, 1343,
	464, 1343,
	465, 1343,
	466, 1343,
	467, 1343,
	469, 1343,
	470, 1343,
	473, 1343,
	474, 1343,
	475, 1343,
	476, 1343,
	477, 1343,
	478, 1343,
	479, 1343,
	481, 1343,
	484, 1343,
	485, 1343,
	486, 1343,
	487, 1343,
	488, 1343,
	489, 1343,
	491, 1343,
	492, 1343,
	493, 1343,
	494, 1343,
	499, 1343,
	500, 1343,
	501, 1343,
	502, 1343,
	503, 1343,
	504, 1343,
	-2, 0,
	-1, 141,
	1, 1216,
	125, 1216,
	230, 1216,
	293, 1216,
	344, 1216,
	352, 1216,
	507, 1216,
	531, 1216,
	-2, 0,
	-1, 143,
	1, 1216,
	531, 1216,
	-2, 0,
	-1, 144,
	1, 1216,
	531, 1216,
	-2, 0,
	-1, 145,
	1, 1216,
	454, 1216,
	531, 1216,
	-2, 0,
	-1, 174,
	144, 1311,
	162, 1311,
	175, 1311,
	222, 1311,
	255, 1311,
	304, 1311,
	314, 1311,
	471, 1311,
	-2, 1286,
	-1, 212,
	4, 1350,
	5, 1350,
	6, 1350,
	7, 1350,
	8, 1350,
	9, 1350,
	10, 1350,
	21, 1350,
	22, 1350,
	23, 1350,
	24, 1350,
	25, 1350,
	26, 1350,
	28, 1350,
	29, 1350,
	35, 1350,
	36, 1350,
	40, 1350,
	41, 1350,
	42, 1350,
	43, 1350,
	44, 1350,
	45, 1350,
	46, 1350,
	47, 1350,
	48, 1350,
	49, 1350,
	51, 1350,
	52, 1350,
	53, 1350,
	54, 1350,
	56, 1350,
	57, 1350,
	58, 1350,
	59, 1350,
	60, 1350,
	61, 1350,
	62, 1350,
	63, 1350,
	64, 1350,
	65, 1350,
	66, 1350,
	67, 1350,
	68, 1350,
	69, 1350,
	71, 1350,
	72, 1350,
	73, 1350,
	75, 1350,
	77, 1350,
	78, 1350,
	79, 1350,
	80, 1350,
	81, 1350,
	82, 1350,
	83, 1350,
	86, 1350,
	87, 1350,
	88, 1350,
	89, 1350,
	91, 1350,
	93, 1350,
	94, 1350,
	95, 1350,
	96, 1350,
	97, 1350,
	98, 1350,
	100, 1350,
	101, 1350,
	102, 1350,
	103, 1350,
	104, 1350,
	105, 1350,
	106, 1350,
	107, 1350,
	108, 1350,
	109, 1350,
	110, 1350,
	111, 1350,
	112, 1350,
	113, 1350,
	114, 1350,
	115, 1350,
	116, 1350,
	117, 1350,
	118, 1350,
	119, 1350,
	120, 1350,
	121, 1350,
	122, 1350,
	123, 1350,
	124, 1350,
	126, 1350,
	127, 1350,
	129, 1350,
	130, 1350,
	131, 1350,
	134, 1350,
	135, 1350,
	136, 1350,
	138, 1350,
	139, 1350,
	141, 1350,
	142, 1350,
	143, 1350,
	145, 1350,
	146, 1350,
	147, 1350,
	148, 1350,
	149, 1350,
	150, 1350,
	151, 1350,
	152, 1350,
	153, 1350,
	154, 1350,
	155, 1350,
	156, 1350,
	157, 1350,
	158, 1350,
	159, 1350,
	160, 1350,
	161, 1350,
	167, 1350,
	168, 1350,
	169, 1350,
	170, 1350,
	174, 1350,
	176, 1350,
	179, 1350,
	180, 1350,
	181, 1350,
	182, 1350,
	183, 1350,
	184, 1350,
	185, 1350,
	187, 1350,
	188, 1350,
	190, 1350,
	191, 1350,
	193, 1350,
	194, 1350,
	195, 1350,
	196, 1350,
	197, 1350,
	198, 1350,
	199, 1350,
	200, 1350,
	201, 1350,
	202, 1350,
	203, 1350,
	204, 1350,
	206, 1350,
	207, 1350,
	208, 1350,
	209, 1350,
	213, 1350,
	214, 1350,
	215, 1350,
	216, 1350,
	218, 1350,
	219, 1350,
	220, 1350,
	221, 1350,
	223, 1350,
	225, 1350,
	226, 1350,
	227, 1350,
	228, 1350,
	229, 1350,
	230, 1350,
	231, 1350,
	232, 1350,
	233, 1350,
	234, 1350,
	238, 1350,
	239, 1350,
	240, 1350,
	241, 1350,
	242, 1350,
	243, 1350,
	245, 1350,
	246, 1350,
	247, 1350,
	249, 1350,
	250, 1350,
	251, 1350,
	252, 1350,
	253, 1350,
	254, 1350,
	256, 1350,
	257, 1350,
	258, 1350,
	259, 1350,
	260, 1350,
	261, 1350,
	262, 1350,
	263, 1350,
	264, 1350,
	266, 1350,
	267, 1350,
	268, 1350,
	269, 1350,
	270, 1350,
	271, 1350,
	272, 1350,
	273, 1350,
	274, 1350,
	275, 1350,
	276, 1350,
	278, 1350,
	279, 1350,
	280, 1350,
	281, 1350,
	282, 1350,
	283, 1350,
	284, 1350,
	285, 1350,
	286, 1350,
	287, 1350,
	288, 1350,
	289, 1350,
	290, 1350,
	291, 1350,
	292, 1350,
	293, 1350,
	294, 1350,
	295, 1350,
	296, 1350,
	297, 1350,
	298, 1350,
	299, 1350,
	300, 1350,
	301, 1350,
	302, 1350,
	303, 1350,
	306, 1350,
	310, 1350,
	311, 1350,
	312, 1350,
	315, 1350,
	316, 1350,
	317, 1350,
	318, 1350,
	319, 1350,
	320, 1350,
	321, 1350,
	322, 1350,
	323, 1350,
	324, 1350,
	325, 1350,
	326, 1350,
	327, 1350,
	328, 1350,
	329, 1350,
	330, 1350,
	331, 1350,
	332, 1350,
	334, 1350,
	335, 1350,
	336, 1350,
	337, 1350,
	338, 1350,
	339, 1350,
	340, 1350,
	341, 1350,
	342, 1350,
	344, 1350,
	346, 1350,
	347, 1350,
	348, 1350,
	349, 1350,
	350, 1350,
	351, 1350,
	352, 1350,
	353, 1350,
	354, 1350,
	355, 1350,
	356, 1350,
	358, 1350,
	364, 1350,
	366, 1350,
	367, 1350,
	368, 1350,
	369, 1350,
	370, 1350,
	371, 1350,
	372, 1350,
	373, 1350,
	375, 1350,
	376, 1350,
	377, 1350,
	378, 1350,
	379, 1350,
	380, 1350,
	381, 1350,
	382, 1350,
	383, 1350,
	384, 1350,
	386, 1350,
	387, 1350,
	388, 1350,
	389, 1350,
	390, 1350,
	391, 1350,
	392, 1350,
	393, 1350,
	394, 1350,
	395, 1350,
	396, 1350,
	398, 1350,
	399, 1350,
	400, 1350,
	401, 1350,
	402, 1350,
	403, 1350,
	404, 1350,
	405, 1350,
	406, 1350,
	407, 1350,
	408, 1350,
	409, 1350,
	410, 1350,
	411, 1350,
	412, 1350,
	413, 1350,
	414, 1350,
	415, 1350,
	416, 1350,
	417, 1350,
	419, 1350,
	421, 1350,
	422, 1350,
	423, 1350,
	424, 1350,
	425, 1350,
	426, 1350,
	427, 1350,
	428, 1350,
	429, 1350,
	430, 1350,
	431, 1350,
	432, 1350,
	433, 1350,
	435, 1350,
	436, 1350,
	437, 1350,
	438, 1350,
	440, 1350,
	441, 1350,
	442, 1350,
	443, 1350,
	444, 1350,
	445, 1350,
	446, 1350,
	447, 1350,
	449, 1350,
	450, 1350,
	451, 1350,
	452, 1350,
	453, 1350,
	455, 1350,
	457, 1350,
	458, 1350,
	459, 1350,
	460, 1350,
	461, 1350,
	462, 1350,
	463, 1350,
	464, 1350,
	465, 1350,
	466, 1350,
	467, 1350,
	469, 1350,
	470, 1350,
	472, 1350,
	473, 1350,
	474, 1350,
	475, 1350,
	476, 1350,
	477, 1350,
	478, 1350,
	479, 1350,
	480, 1350,
	481, 1350,
	484, 1350,
	485, 1350,
	486, 1350,
	487, 1350,
	488, 1350,
	489, 1350,
	491, 1350,
	492, 1350,
	493, 1350,
	494, 1350,
	499, 1350,
	500, 1350,
	501, 1350,
	502, 1350,
	503, 1350,
	504, 1350,
	505, 1350,
	512, 1350,
	519, 1350,
	520, 1350,
	521, 1350,
	528, 1350,
	532, 1350,
	-2, 0,
	-1, 642,
	178, 2060,
	454, 2060,
	511, 2060,
	530, 2060,
	-2, 0,
	-1, 643,
	178, 2152,
	454, 2152,
	511, 2152,
	530, 2152,
	-2, 0,
	-1, 644,
	178, 2048,
	454, 2048,
	511, 2048,
	530, 2048,
	-2, 0,
	-1, 646,
	178, 2257,
	454, 2257,
	511, 2257,
	530, 2257,
	-2, 0,
	-1, 648,
	178, 2291,
	454, 2291,
	511, 2291,
	530, 2291,
	-2, 0,
	-1, 655,
	178, 2167,
	454, 2167,
	511, 2167,
	530, 2167,
	-2, 619,
	-1, 686,
	530, 1998,
	533, 1998,
	-2, 866,
	-1, 687,
	530, 2000,
	533, 2000,
	-2, 867,
	-1, 688,
	530, 1999,
	533, 1999,
	-2, 868,
	-1, 689,
	533, 1933,
	-2, 869,
	-1, 711,
	175, 216,
	-2, 0,
	-1, 733,
	491, 1120,
	-2, 928,
	-1, 773,
	4, 1141,
	21, 1141,
	22, 1141,
	23, 1141,
	24, 1141,
	25, 1141,
	26, 1141,
	28, 1141,
	29, 1141,
	35, 1141,
	40, 1141,
	41, 1141,
	42, 1141,
	43, 1141,
	44, 1141,
	45, 1141,
	46, 1141,
	47, 1141,
	48, 1141,
	49, 1141,
	51, 1141,
	52, 1141,
	53, 1141,
	54, 1141,
	56, 1141,
	57, 1141,
	58, 1141,
	59, 1141,
	60, 1141,
	61, 1141,
	62, 1141,
	66, 1141,
	67, 1141,
	68, 1141,
	69, 1141,
	71, 1141,
	72, 1141,
	73, 1141,
	77, 1141,
	78, 1141,
	79, 1141,
	80, 1141,
	81, 1141,
	82, 1141,
	83, 1141,
	86, 1141,
	87, 1141,
	88, 1141,
	89, 1141,
	91, 1141,
	93, 1141,
	94, 1141,
	95, 1141,
	96, 1141,
	97, 1141,
	98, 1141,
	100, 1141,
	101, 1141,
	102, 1141,
	104, 1141,
	105, 1141,
	113, 1141,
	114, 1141,
	115, 1141,
	116, 1141,
	118, 1141,
	119, 1141,
	120, 1141,
	122, 1141,
	123, 1141,
	124, 1141,
	126, 1141,
	127, 1141,
	129, 1141,
	130, 1141,
	131, 1141,
	134, 1141,
	135, 1141,
	136, 1141,
	138, 1141,
	139, 1141,
	141, 1141,
	142, 1141,
	143, 1141,
	145, 1141,
	146, 1141,
	147, 1141,
	148, 1141,
	149, 1141,
	150, 1141,
	151, 1141,
	152, 1141,
	153, 1141,
	154, 1141,
	155, 1141,
	156, 1141,
	157, 1141,
	158, 1141,
	159, 1141,
	161, 1141,
	167, 1141,
	168, 1141,
	169, 1141,
	170, 1141,
	174, 1141,
	176, 1141,
	180, 1141,
	181, 1141,
	182, 1141,
	183, 1141,
	184, 1141,
	185, 1141,
	187, 1141,
	188, 1141,
	190, 1141,
	191, 1141,
	193, 1141,
	194, 1141,
	195, 1141,
	196, 1141,
	197, 1141,
	198, 1141,
	199, 1141,
	200, 1141,
	201, 1141,
	203, 1141,
	204, 1141,
	206, 1141,
	207, 1141,
	208, 1141,
	209, 1141,
	213, 1141,
	214, 1141,
	215, 1141,
	216, 1141,
	219, 1141,
	220, 1141,
	221, 1141,
	223, 1141,
	225, 1141,
	226, 1141,
	228, 1141,
	230, 1141,
	231, 1141,
	232, 1141,
	234, 1141,
	238, 1141,
	239, 1141,
	240, 1141,
	241, 1141,
	242, 1141,
	243, 1141,
	245, 1141,
	246, 1141,
	247, 1141,
	249, 1141,
	250, 1141,
	252, 1141,
	253, 1141,
	256, 1141,
	257, 1141,
	258, 1141,
	261, 1141,
	262, 1141,
	263, 1141,
	264, 1141,
	266, 1141,
	267, 1141,
	268, 1141,
	269, 1141,
	270, 1141,
	271, 1141,
	272, 1141,
	273, 1141,
	274, 1141,
	275, 1141,
	276, 1141,
	278, 1141,
	280, 1141,
	281, 1141,
	282, 1141,
	283, 1141,
	284, 1141,
	285, 1141,
	286, 1141,
	287, 1141,
	288, 1141,
	289, 1141,
	290, 1141,
	292, 1141,
	294, 1141,
	296, 1141,
	297, 1141,
	299, 1141,
	300, 1141,
	301, 1141,
	302, 1141,
	303, 1141,
	306, 1141,
	310, 1141,
	311, 1141,
	312, 1141,
	315, 1141,
	316, 1141,
	317, 1141,
	319, 1141,
	321, 1141,
	322, 1141,
	323, 1141,
	324, 1141,
	325, 1141,
	326, 1141,
	327, 1141,
	328, 1141,
	329, 1141,
	330, 1141,
	331, 1141,
	332, 1141,
	334, 1141,
	335, 1141,
	336, 1141,
	337, 1141,
	338, 1141,
	339, 1141,
	340, 1141,
	341, 1141,
	342, 1141,
	344, 1141,
	346, 1141,
	347, 1141,
	348, 1141,
	349, 1141,
	350, 1141,
	351, 1141,
	352, 1141,
	353, 1141,
	354, 1141,
	355, 1141,
	356, 1141,
	358, 1141,
	364, 1141,
	366, 1141,
	367, 1141,
	368, 1141,
	369, 1141,
	370, 1141,
	371, 1141,
	372, 1141,
	373, 1141,
	375, 1141,
	376, 1141,
	377, 1141,
	379, 1141,
	380, 1141,
	381, 1141,
	382, 1141,
	383, 1141,
	384, 1141,
	386, 1141,
	387, 1141,
	388, 1141,
	389, 1141,
	390, 1141,
	391, 1141,
	392, 1141,
	393, 1141,
	394, 1141,
	395, 1141,
	396, 1141,
	398, 1141,
	399, 1141,
	400, 1141,
	401, 1141,
	402, 1141,
	403, 1141,
	405, 1141,
	406, 1141,
	407, 1141,
	408, 1141,
	409, 1141,
	411, 1141,
	412, 1141,
	413, 1141,
	414, 1141,
	415, 1141,
	416, 1141,
	417, 1141,
	419, 1141,
	421, 1141,
	422, 1141,
	423, 1141,
	424, 1141,
	425, 1141,
	426, 1141,
	427, 1141,
	428, 1141,
	429, 1141,
	430, 1141,
	431, 1141,
	432, 1141,
	433, 1141,
	435, 1141,
	436, 1141,
	438, 1141,
	440, 1141,
	441, 1141,
	442, 1141,
	443, 1141,
	444, 1141,
	445, 1141,
	446, 1141,
	447, 1141,
	449, 1141,
	450, 1141,
	451, 1141,
	452, 1141,
	453, 1141,
	455, 1141,
	457, 1141,
	458, 1141,
	459, 1141,
	460, 1141,
	461, 1141,
	462, 1141,
	464, 1141,
	465, 1141,
	466, 1141,
	467, 1141,
	469, 1141,
	470, 1141,
	473, 1141,
	474, 1141,
	475, 1141,
	476, 1141,
	477, 1141,
	478, 1141,
	479, 1141,
	481, 1141,
	484, 1141,
	485, 1141,
	486, 1141,
	487, 1141,
	488, 1141,
	489, 1141,
	491, 1141,
	492, 1141,
	493, 1141,
	494, 1141,
	499, 1141,
	500, 1141,
	501, 1141,
	502, 1141,
	503, 1141,
	504, 1141,
	-2, 0,
	-1, 854,
	348, 778,
	403, 778,
	459, 778,
	-2, 0,
	-1, 855,
	348, 777,
	403, 777,
	459, 777,
	-2, 719,
	-1, 859,
	1, 822,
	527, 822,
	529, 822,
	531, 822,
	-2, 0,
	-1, 860,
	1, 754,
	527, 754,
	529, 754,
	531, 754,
	-2, 0,
	-1, 861,
	1, 756,
	527, 756,
	529, 756,
	531, 756,
	-2, 0,
	-1, 862,
	1, 865,
	175, 865,
	527, 865,
	529, 865,
	531, 865,
	-2, 0,
	-1, 870,
	1, 781,
	527, 781,
	529, 781,
	531, 781,
	-2, 0,
	-1, 876,
	1, 822,
	527, 822,
	529, 822,
	531, 822,
	-2, 0,
	-1, 877,
	1, 824,
	527, 824,
	529, 824,
	531, 824,
	-2, 0,
	-1, 878,
	1, 827,
	527, 827,
	529, 827,
	531, 827,
	-2, 0,
	-1, 884,
	1, 844,
	527, 844,
	529, 844,
	531, 844,
	-2, 0,
	-1, 885,
	1, 846,
	527, 846,
	529, 846,
	531, 846,
	-2, 0,
	-1, 934,
	162, 1352,
	175, 1352,
	255, 1352,
	304, 1352,
	-2, 1290,
	-1, 949,
	162, 1351,
	175, 1351,
	255, 1351,
	304, 1351,
	-2, 1287,
	-1, 975,
	530, 1997,
	-2, 627,
	-1, 1003,
	5, 1989,
	528, 1987,
	-2, 1978,
	-1, 1011,
	5, 2010,
	528, 2007,
	-2, 1998,
	-1, 1012,
	5, 2011,
	528, 2008,
	-2, 1999,
	-1, 1020,
	530, 1995,
	-2, 1977,
	-1, 1021,
	528, 2373,
	-2, 1996,
	-1, 1044,
	528, 2372,
	-2, 2012,
	-1, 1045,
	5, 1517,
	-2, 2343,
	-1, 1046,
	5, 1518,
	-2, 2344,
	-1, 1047,
	5, 1519,
	-2, 2358,
	-1, 1048,
	5, 1520,
	-2, 2322,
	-1, 1049,
	5, 1521,
	-2, 2356,
	-1, 1050,
	5, 1529,
	-2, 2335,
	-1, 1051,
	5, 1516,
	-2, 2331,
	-1, 1052,
	5, 1516,
	-2, 2330,
	-1, 1053,
	5, 1516,
	-2, 2349,
	-1, 1054,
	5, 1527,
	-2, 2324,
	-1, 1055,
	5, 1532,
	-2, 2323,
	-1, 1056,
	5, 1534,
	-2, 2368,
	-1, 1059,
	5, 1556,
	-2, 2361,
	-1, 1060,
	5, 1548,
	-2, 2362,
	-1, 1061,
	5, 1556,
	-2, 2363,
	-1, 1062,
	5, 1552,
	-2, 2364,
	-1, 1063,
	5, 1502,
	-2, 2336,
	-1, 1064,
	5, 1503,
	-2, 2337,
	-1, 1065,
	5, 1504,
	-2, 2325,
	-1, 1092,
	5, 1539,
	-2, 2369,
	-1, 1093,
	5, 1540,
	-2, 2359,
	-1, 1094,
	5, 1541,
	492, 1541,
	-2, 2326,
	-1, 1095,
	5, 1542,
	492, 1542,
	-2, 2327,
	-1, 1132,
	528, 2007,
	-2, 1998,
	-1, 1133,
	528, 2008,
	-2, 1999,
	-1, 1163,
	178, 2291,
	454, 2291,
	511, 2291,
	530, 2291,
	-2, 0,
	-1, 1166,
	1, 605,
	531, 605,
	-2, 1224,
	-1, 1294,
	366, 1973,
	405, 1973,
	521, 1973,
	-2, 1971,
	-1, 1306,
	532, 1973,
	-2, 1974,
	-1, 1313,
	1, 1117,
	527, 1117,
	529, 1117,
	531, 1117,
	-2, 1339,
	-1, 1367,
	354, 927,
	491, 927,
	-2, 339,
	-1, 1388,
	1, 1117,
	527, 1117,
	529, 1117,
	531, 1117,
	-2, 1339,
	-1, 1395,
	4, 1141,
	21, 1141,
	22, 1141,
	23, 1141,
	24, 1141,
	25, 1141,
	26, 1141,
	28, 1141,
	29, 1141,
	35, 1141,
	40, 1141,
	41, 1141,
	42, 1141,
	43, 1141,
	44, 1141,
	45, 1141,
	46, 1141,
	47, 1141,
	48, 1141,
	49, 1141,
	51, 1141,
	52, 1141,
	53, 1141,
	54, 1141,
	56, 1141,
	57, 1141,
	58, 1141,
	59, 1141,
	60, 1141,
	61, 1141,
	62, 1141,
	66, 1141,
	67, 1141,
	68, 1141,
	69, 1141,
	71, 1141,
	72, 1141,
	73, 1141,
	77, 1141,
	78, 1141,
	79, 1141,
	80, 1141,
	81, 1141,
	82, 1141,
	83, 1141,
	86, 1141,
	87, 1141,
	88, 1141,
	89, 1141,
	91, 1141,
	93, 1141,
	94, 1141,
	95, 1141,
	96, 1141,
	97, 1141,
	98, 1141,
	100, 1141,
	101, 1141,
	102, 1141,
	104, 1141,
	105, 1141,
	113, 1141,
	114, 1141,
	115, 1141,
	116, 1141,
	118, 1141,
	119, 1141,
	120, 1141,
	122, 1141,
	123, 1141,
	124, 1141,
	126, 1141,
	127, 1141,
	129, 1141,
	130, 1141,
	131, 1141,
	134, 1141,
	135, 1141,
	136, 1141,
	138, 1141,
	139, 1141,
	141, 1141,
	142, 1141,
	143, 1141,
	145, 1141,
	146, 1141,
	147, 1141,
	148, 1141,
	149, 1141,
	150, 1141,
	151, 1141,
	152, 1141,
	153, 1141,
	154, 1141,
	155, 1141,
	156, 1141,
	157, 1141,
	158, 1141,
	159, 1141,
	167, 1141,
	168, 1141,
	169, 1141,
	170, 1141,
	174, 1141,
	176, 1141,
	180, 1141,
	181, 1141,
	182, 1141,
	183, 1141,
	184, 1141,
	185, 1141,
	187, 1141,
	188, 1141,
	190, 1141,
	191, 1141,
	193, 1141,
	194, 1141,
	195, 1141,
	196, 1141,
	197, 1141,
	198, 1141,
	199, 1141,
	200, 1141,
	201, 1141,
	203, 1141,
	204, 1141,
	206, 1141,
	207, 1141,
	208, 1141,
	209, 1141,
	214, 1141,
	215, 1141,
	216, 1141,
	219, 1141,
	220, 1141,
	221, 1141,
	223, 1141,
	225, 1141,
	226, 1141,
	228, 1141,
	230, 1141,
	231, 1141,
	232, 1141,
	234, 1141,
	238, 1141,
	239, 1141,
	240, 1141,
	241, 1141,
	242, 1141,
	243, 1141,
	245, 1141,
	246, 1141,
	247, 1141,
	249, 1141,
	250, 1141,
	252, 1141,
	253, 1141,
	256, 1141,
	257, 1141,
	258, 1141,
	261, 1141,
	262, 1141,
	263, 1141,
	264, 1141,
	266, 1141,
	267, 1141,
	268, 1141,
	269, 1141,
	270, 1141,
	271, 1141,
	272, 1141,
	273, 1141,
	274, 1141,
	275, 1141,
	276, 1141,
	278, 1141,
	280, 1141,
	281, 1141,
	282, 1141,
	283, 1141,
	284, 1141,
	285, 1141,
	286, 1141,
	287, 1141,
	288, 1141,
	289, 1141,
	290, 1141,
	292, 1141,
	296, 1141,
	297, 1141,
	299, 1141,
	300, 1141,
	301, 1141,
	302, 1141,
	303, 1141,
	306, 1141,
	308, 1141,
	310, 1141,
	311, 1141,
	312, 1141,
	315, 1141,
	316, 1141,
	317, 1141,
	319, 1141,
	321, 1141,
	322, 1141,
	323, 1141,
	324, 1141,
	325, 1141,
	326, 1141,
	327, 1141,
	328, 1141,
	329, 1141,
	330, 1141,
	331, 1141,
	332, 1141,
	334, 1141,
	335, 1141,
	336, 1141,
	337, 1141,
	338, 1141,
	339, 1141,
	340, 1141,
	341, 1141,
	342, 1141,
	344, 1141,
	346, 1141,
	347, 1141,
	348, 1141,
	349, 1141,
	350, 1141,
	351, 1141,
	352, 1141,
	353, 1141,
	354, 1141,
	355, 1141,
	356, 1141,
	358, 1141,
	364, 1141,
	366, 1141,
	367, 1141,
	368, 1141,
	369, 1141,
	370, 1141,
	371, 1141,
	372, 1141,
	373, 1141,
	375, 1141,
	376, 1141,
	377, 1141,
	379, 1141,
	380, 1141,
	381, 1141,
	382, 1141,
	383, 1141,
	384, 1141,
	386, 1141,
	387, 1141,
	388, 1141,
	389, 1141,
	390, 1141,
	391, 1141,
	392, 1141,
	393, 1141,
	394, 1141,
	395, 1141,
	396, 1141,
	398, 1141,
	399, 1141,
	400, 1141,
	401, 1141,
	402, 1141,
	403, 1141,
	405, 1141,
	406, 1141,
	407, 1141,
	408, 1141,
	409, 1141,
	411, 1141,
	412, 1141,
	413, 1141,
	414, 1141,
	415, 1141,
	416, 1141,
	417, 1141,
	419, 1141,
	421, 1141,
	422, 1141,
	423, 1141,
	424, 1141,
	425, 1141,
	426, 1141,
	427, 1141,
	428, 1141,
	429, 1141,
	430, 1141,
	431, 1141,
	432, 1141,
	433, 1141,
	435, 1141,
	436, 1141,
	438, 1141,
	440, 1141,
	441, 1141,
	442, 1141,
	443, 1141,
	444, 1141,
	445, 1141,
	446, 1141,
	447, 1141,
	449, 1141,
	450, 1141,
	451, 1141,
	452, 1141,
	453, 1141,
	455, 1141,
	457, 1141,
	458, 1141,
	459, 1141,
	460, 1141,
	461, 1141,
	462, 1141,
	464, 1141,
	465, 1141,
	466, 1141,
	467, 1141,
	469, 1141,
	470, 1141,
	473, 1141,
	474, 1141,
	475, 1141,
	476, 1141,
	477, 1141,
	478, 1141,
	479, 1141,
	481, 1141,
	484, 1141,
	485, 1141,
	486, 1141,
	487, 1141,
	488, 1141,
	489, 1141,
	491, 1141,
	492, 1141,
	493, 1141,
	494, 1141,
	499, 1141,
	500, 1141,
	501, 1141,
	502, 1141,
	503, 1141,
	504, 1141,
	-2, 0,
	-1, 1468,
	1, 478,
	527, 478,
	529, 478,
	531, 478,
	-2, 1310,
	-1, 1471,
	4, 2367,
	11, 2367,
	12, 2367,
	14, 2367,
	15, 2367,
	16, 2367,
	17, 2367,
	18, 2367,
	19, 2367,
	21, 2367,
	22, 2367,
	23, 2367,
	24, 2367,
	25, 2367,
	26, 2367,
	28, 2367,
	29, 2367,
	32, 2367,
	33, 2367,
	35, 2367,
	37, 2367,
	40, 2367,
	41, 2367,
	42, 2367,
	43, 2367,
	44, 2367,
	45, 2367,
	46, 2367,
	47, 2367,
	48, 2367,
	49, 2367,
	51, 2367,
	52, 2367,
	53, 2367,
	54, 2367,
	56, 2367,
	57, 2367,
	58, 2367,
	59, 2367,
	60, 2367,
	61, 2367,
	62, 2367,
	66, 2367,
	67, 2367,
	68, 2367,
	69, 2367,
	71, 2367,
	72, 2367,
	73, 2367,
	74, 2367,
	77, 2367,
	78, 2367,
	79, 2367,
	80, 2367,
	81, 2367,
	82, 2367,
	83, 2367,
	84, 2367,
	86, 2367,
	87, 2367,
	88, 2367,
	89, 2367,
	91, 2367,
	92, 2367,
	93, 2367,
	94, 2367,
	95, 2367,
	96, 2367,
	97, 2367,
	98, 2367,
	100, 2367,
	101, 2367,
	102, 2367,
	103, 2367,
	104, 2367,
	105, 2367,
	113, 2367,
	114, 2367,
	115, 2367,
	116, 2367,
	118, 2367,
	119, 2367,
	120, 2367,
	122, 2367,
	123, 2367,
	124, 2367,
	126, 2367,
	127, 2367,
	129, 2367,
	130, 2367,
	131, 2367,
	134, 2367,
	135, 2367,
	136, 2367,
	138, 2367,
	139, 2367,
	141, 2367,
	142, 2367,
	143, 2367,
	145, 2367,
	146, 2367,
	147, 2367,
	148, 2367,
	149, 2367,
	150, 2367,
	151, 2367,
	152, 2367,
	153, 2367,
	154, 2367,
	155, 2367,
	156, 2367,
	157, 2367,
	158, 2367,
	159, 2367,
	163, 2367,
	164, 2367,
	165, 2367,
	166, 2367,
	167, 2367,
	168, 2367,
	169, 2367,
	170, 2367,
	173, 2367,
	174, 2367,
	176, 2367,
	179, 2367,
	180, 2367,
	181, 2367,
	182, 2367,
	183, 2367,
	184, 2367,
	185, 2367,
	187, 2367,
	188, 2367,
	190, 2367,
	191, 2367,
	193, 2367,
	194, 2367,
	195, 2367,
	196, 2367,
	197, 2367,
	198, 2367,
	199, 2367,
	200, 2367,
	201, 2367,
	202, 2367,
	203, 2367,
	204, 2367,
	205, 2367,
	206, 2367,
	207, 2367,
	208, 2367,
	209, 2367,
	211, 2367,
	212, 2367,
	214, 2367,
	215, 2367,
	216, 2367,
	218, 2367,
	219, 2367,
	220, 2367,
	221, 2367,
	223, 2367,
	225, 2367,
	226, 2367,
	227, 2367,
	228, 2367,
	229, 2367,
	230, 2367,
	231, 2367,
	232, 2367,
	233, 2367,
	234, 2367,
	236, 2367,
	237, 2367,
	238, 2367,
	239, 2367,
	240, 2367,
	241, 2367,
	242, 2367,
	243, 2367,
	245, 2367,
	246, 2367,
	247, 2367,
	249, 2367,
	250, 2367,
	251, 2367,
	252, 2367,
	253, 2367,
	254, 2367,
	256, 2367,
	257, 2367,
	258, 2367,
	261, 2367,
	262, 2367,
	263, 2367,
	264, 2367,
	265, 2367,
	266, 2367,
	267, 2367,
	268, 2367,
	269, 2367,
	270, 2367,
	271, 2367,
	272, 2367,
	273, 2367,
	274, 2367,
	275, 2367,
	276, 2367,
	278, 2367,
	279, 2367,
	280, 2367,
	281, 2367,
	282, 2367,
	283, 2367,
	284, 2367,
	285, 2367,
	286, 2367,
	287, 2367,
	288, 2367,
	289, 2367,
	290, 2367,
	292, 2367,
	295, 2367,
	296, 2367,
	297, 2367,
	299, 2367,
	300, 2367,
	301, 2367,
	302, 2367,
	303, 2367,
	306, 2367,
	310, 2367,
	311, 2367,
	312, 2367,
	313, 2367,
	315, 2367,
	316, 2367,
	317, 2367,
	319, 2367,
	321, 2367,
	322, 2367,
	323, 2367,
	324, 2367,
	325, 2367,
	326, 2367,
	327, 2367,
	328, 2367,
	329, 2367,
	330, 2367,
	331, 2367,
	332, 2367,
	334, 2367,
	335, 2367,
	336, 2367,
	337, 2367,
	338, 2367,
	339, 2367,
	340, 2367,
	341, 2367,
	342, 2367,
	344, 2367,
	346, 2367,
	347, 2367,
	348, 2367,
	349, 2367,
	350, 2367,
	351, 2367,
	352, 2367,
	353, 2367,
	354, 2367,
	355, 2367,
	356, 2367,
	358, 2367,
	364, 2367,
	365, 2367,
	366, 2367,
	367, 2367,
	368, 2367,
	369, 2367,
	370, 2367,
	371, 2367,
	372, 2367,
	373, 2367,
	375, 2367,
	376, 2367,
	377, 2367,
	378, 2367,
	379, 2367,
	380, 2367,
	381, 2367,
	382, 2367,
	383, 2367,
	384, 2367,
	385, 2367,
	386, 2367,
	387, 2367,
	388, 2367,
	389, 2367,
	390, 2367,
	391, 2367,
	392, 2367,
	393, 2367,
	394, 2367,
	395, 2367,
	396, 2367,
	398, 2367,
	399, 2367,
	400, 2367,
	401, 2367,
	402, 2367,
	403, 2367,
	405, 2367,
	406, 2367,
	407, 2367,
	408, 2367,
	409, 2367,
	410, 2367,
	411, 2367,
	412, 2367,
	413, 2367,
	414, 2367,
	415, 2367,
	416, 2367,
	417, 2367,
	419, 2367,
	421, 2367,
	422, 2367,
	423, 2367,
	424, 2367,
	425, 2367,
	426, 2367,
	427, 2367,
	428, 2367,
	429, 2367,
	430, 2367,
	431, 2367,
	432, 2367,
	433, 2367,
	435, 2367,
	436, 2367,
	438, 2367,
	440, 2367,
	441, 2367,
	442, 2367,
	443, 2367,
	444, 2367,
	445, 2367,
	446, 2367,
	447, 2367,
	449, 2367,
	450, 2367,
	451, 2367,
	452, 2367,
	453, 2367,
	455, 2367,
	457, 2367,
	458, 2367,
	459, 2367,
	460, 2367,
	461, 2367,
	462, 2367,
	464, 2367,
	465, 2367,
	466, 2367,
	467, 2367,
	469, 2367,
	470, 2367,
	473, 2367,
	474, 2367,
	475, 2367,
	476, 2367,
	477, 2367,
	478, 2367,
	479, 2367,
	481, 2367,
	484, 2367,
	485, 2367,
	486, 2367,
	487, 2367,
	488, 2367,
	489, 2367,
	491, 2367,
	492, 2367,
	493, 2367,
	494, 2367,
	499, 2367,
	500, 2367,
	501, 2367,
	502, 2367,
	503, 2367,
	504, 2367,
	505, 2367,
	506, 2367,
	509, 2367,
	510, 2367,
	511, 2367,
	512, 2367,
	513, 2367,
	514, 2367,
	516, 2367,
	517, 2367,
	518, 2367,
	519, 2367,
	520, 2367,
	521, 2367,
	522, 2367,
	523, 2367,
	524, 2367,
	526, 2367,
	529, 2367,
	530, 2367,
	532, 2367,
	533, 2367,
	-2, 0,
	-1, 1476,
	178, 2257,
	454, 2257,
	511, 2257,
	530, 2257,
	-2, 0,
	-1, 1525,
	348, 778,
	403, 778,
	459, 778,
	-2, 0,
	-1, 1551,
	1, 773,
	527, 773,
	529, 773,
	531, 773,
	-2, 0,
	-1, 1552,
	1, 809,
	527, 809,
	529, 809,
	531, 809,
	-2, 0,
	-1, 1553,
	1, 817,
	527, 817,
	529, 817,
	531, 817,
	-2, 0,
	-1, 1554,
	1, 780,
	527, 780,
	529, 780,
	531, 780,
	-2, 0,
	-1, 1556,
	1, 784,
	527, 784,
	529, 784,
	531, 784,
	-2, 0,
	-1, 1562,
	1, 791,
	527, 791,
	529, 791,
	531, 791,
	-2, 0,
	-1, 1590,
	1, 2313,
	527, 2313,
	529, 2313,
	530, 2313,
	531, 2313,
	-2, 842,
	-1, 1591,
	1, 2254,
	527, 2254,
	529, 2254,
	530, 2254,
	531, 2254,
	-2, 843,
	-1, 1606,
	1, 1219,
	531, 1219,
	-2, 1224,
	-1, 1609,
	162, 1351,
	175, 1351,
	255, 1351,
	304, 1351,
	-2, 1291,
	-1, 1703,
	144, 1312,
	162, 1312,
	175, 1312,
	222, 1312,
	255, 1312,
	304, 1312,
	314, 1312,
	471, 1312,
	-2, 1717,
	-1, 1763,
	529, 1867,
	-2, 0,
	-1, 1798,
	144, 1312,
	162, 1312,
	175, 1312,
	222, 1312,
	255, 1312,
	304, 1312,
	314, 1312,
	471, 1312,
	-2, 1432,
	-1, 1847,
	528, 1544,
	-2, 1532,
	-1, 1884,
	1, 607,
	531, 607,
	-2, 1224,
	-1, 1997,
	205, 217,
	-2, 2006,
	-1, 1998,
	205, 218,
	-2, 260,
	-1, 2125,
	1, 775,
	527, 775,
	529, 775,
	531, 775,
	-2, 0,
	-1, 2126,
	1, 811,
	527, 811,
	529, 811,
	531, 811,
	-2, 0,
	-1, 2127,
	1, 819,
	527, 819,
	529, 819,
	531, 819,
	-2, 0,
	-1, 2158,
	1, 793,
	527, 793,
	529, 793,
	531, 793,
	-2, 0,
	-1, 2204,
	383, 1378,
	384, 1378,
	-2, 1577,
	-1, 2235,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1597,
	-1, 2236,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1598,
	-1, 2237,
	92, 0,
	236, 0,
	237, 0,
	513, 0,
	514, 0,
	-2, 1599,
	-1, 2238,
	92, 0,
	236, 0,
	237, 0,
	513, 0,
	514, 0,
	-2, 1600,
	-1, 2239,
	92, 0,
	236, 0,
	237, 0,
	513, 0,
	514, 0,
	-2, 1601,
	-1, 2240,
	92, 0,
	236, 0,
	237, 0,
	513, 0,
	514, 0,
	-2, 1602,
	-1, 2241,
	92, 0,
	236, 0,
	237, 0,
	513, 0,
	514, 0,
	-2, 1603,
	-1, 2242,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1604,
	-1, 2254,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1616,
	-1, 2255,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1617,
	-1, 2256,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1618,
	-1, 2259,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1623,
	-1, 2265,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1627,
	-1, 2267,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1635,
	-1, 2268,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1636,
	-1, 2269,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1637,
	-1, 2270,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1638,
	-1, 2382,
	5, 2010,
	178, 1878,
	528, 2007,
	-2, 1998,
	-1, 2383,
	178, 1879,
	-2, 2318,
	-1, 2384,
	178, 1880,
	-2, 2166,
	-1, 2385,
	178, 1881,
	-2, 2076,
	-1, 2386,
	178, 1882,
	-2, 2120,
	-1, 2387,
	178, 1883,
	-2, 2161,
	-1, 2388,
	178, 1884,
	-2, 2252,
	-1, 2389,
	178, 1885,
	-2, 1700,
	-1, 2458,
	1, 1433,
	2, 1433,
	103, 1433,
	144, 1433,
	162, 1433,
	175, 1433,
	179, 1433,
	189, 1433,
	192, 1433,
	218, 1433,
	222, 1433,
	233, 1433,
	251, 1433,
	255, 1433,
	279, 1433,
	304, 1433,
	308, 1433,
	314, 1433,
	374, 1433,
	378, 1433,
	471, 1433,
	482, 1433,
	496, 1433,
	497, 1433,
	498, 1433,
	507, 1433,
	527, 1433,
	529, 1433,
	531, 1433,
	533, 1433,
	-2, 1432,
	-1, 2471,
	528, 1979,
	-2, 1993,
	-1, 2473,
	1, 276,
	-2, 1339,
	-1, 2498,
	528, 1543,
	-2, 1533,
	-1, 2633,
	1, 1117,
	527, 1117,
	529, 1117,
	531, 1117,
	-2, 1339,
	-1, 2806,
	309, 1381,
	-2, 2357,
	-1, 2807,
	309, 1382,
	-2, 2238,
	-1, 2811,
	383, 1944,
	384, 1944,
	-2, 1698,
	-1, 2812,
	383, 1948,
	384, 1948,
	-2, 1699,
	-1, 2813,
	383, 1945,
	384, 1945,
	-2, 1698,
	-1, 2814,
	383, 1949,
	384, 1949,
	-2, 1699,
	-1, 2827,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1625,
	-1, 2828,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1629,
	-1, 2834,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1631,
	-1, 3038,
	1, 604,
	527, 604,
	529, 604,
	531, 604,
	-2, 1224,
	-1, 3172,
	1, 1117,
	527, 1117,
	529, 1117,
	531, 1117,
	-2, 1339,
	-1, 3280,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1633,
	-1, 3287,
	227, 0,
	229, 0,
	295, 0,
	-2, 1652,
	-1, 3354,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1681,
	-1, 3355,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1682,
	-1, 3356,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1683,
	-1, 3360,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1687,
	-1, 3361,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1688,
	-1, 3362,
	14, 0,
	15, 0,
	16, 0,
	509, 0,
	510, 0,
	511, 0,
	-2, 1689,
	-1, 3408,
	528, 1980,
	-2, 1994,
	-1, 3545,
	530, 2473,
	-2, 1269,
	-1, 3603,
	227, 0,
	229, 0,
	295, 0,
	-2, 1653,
	-1, 3606,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1656,
	-1, 3607,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1658,
	-1, 3818,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1657,
	-1, 3819,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 1659,
	-1, 3830,
	227, 0,
	-2, 1690,
	-1, 3980,
	227, 0,
	-2, 1691,
	-1, 4127,
	48, 0,
	202, 0,
	254, 0,
	410, 0,
	505, 0,
	512, 0,
	-2, 2321,
}

const sqlPrivate = 57344

const sqlLast = 107509

var sqlAct = [...]int{

	246, 4002, 3158, 3743, 3862, 2961, 4126, 3908, 2724, 2694,
	4137, 4236, 4102, 2534, 3157, 4086, 3586, 4023, 3865, 4068,
	4083, 4138, 1994, 3440, 4139, 4185, 1136, 3915, 2065, 3850,
	3984, 3319, 3775, 4125, 3770, 37, 3807, 3725, 959, 2214,
	3056, 3537, 2103, 3924, 1333, 3479, 3189, 3673, 3947, 3757,
	2094, 2598, 1454, 2282, 3182, 3514, 2078, 1459, 1834, 3780,
	1618, 3153, 3497, 3441, 3499, 2222, 3184, 2397, 3272, 1938,
	688, 3143, 1491, 1316, 653, 2733, 2215, 3835, 2414, 1198,
	1804, 2820, 2746, 3237, 3235, 2665, 2683, 2656, 3410, 1125,
	2735, 1296, 3004, 2967, 688, 2976, 2984, 1291, 2944, 3585,
	950, 3642, 787, 2678, 2732, 2743, 2726, 1533, 1773, 3379,
	2965, 2680, 2695, 1948, 958, 165, 2536, 2451, 2573, 2219,
	2295, 1299, 1988, 1490, 2450, 1989, 4, 2943, 2076, 1749,
	3985, 2101, 240, 683, 2804, 2612, 2326, 1003, 1182, 1711,
	3075, 239, 2324, 1983, 1974, 1007, 1967, 1921, 1116, 2666,
	2742, 1774, 1924, 1434, 2411, 1606, 3011, 2432, 2279, 2315,
	1911, 2039, 2203, 2186, 3909, 3155, 1469, 2184, 2483, 2688,
	2736, 1455, 2028, 1386, 1445, 2453, 689, 1168, 1012, 2525,
	619, 690, 2482, 2318, 1783, 1119, 1014, 1098, 1744, 2422,
	2296, 1793, 2378, 2572, 1619, 1696, 2368, 174, 1620, 2185,
	635, 165, 694, 175, 1562, 2440, 685, 1115, 2027, 1318,
	1467, 697, 1458, 781, 647, 1133, 2051, 2187, 1835, 733,
	760, 1410, 1328, 605, 1937, 2208, 694, 627, 988, 622,
	1121, 42, 41, 630, 39, 697, 1096, 30, 1057, 28,
	26, 1625, 848, 238, 2855, 1339, 1605, 868, 2851, 3393,
	68, 3394, 101, 4302, 2067, 1633, 1634, 2431, 1666, 1667,
	1668, 1676, 1677, 1678, 4296, 1005, 69, 2963, 3216, 2067,
	4280, 2067, 954, 2067, 2431, 2067, 1669, 1664, 1790, 4279,
	3199, 4253, 73, 2431, 1636, 3689, 4251, 1555, 3034, 4247,
	3689, 4167, 1682, 2002, 4161, 4168, 1177, 782, 2431, 4159,
	802, 4156, 4153, 2431, 3198, 4157, 4154, 1332, 1113, 4148,
	4123, 1177, 4122, 2002, 2002, 1499, 2002, 3033, 1635, 954,
	4121, 79, 2102, 68, 2087, 785, 784, 4116, 1655, 4115,
	4111, 2087, 3216, 2087, 3689, 2485, 1652, 3383, 4109, 69,
	2916, 2917, 3689, 4081, 4062, 4055, 4054, 3689, 2489, 2431,
	2431, 2424, 1131, 4049, 3019, 73, 4048, 3689, 85, 2819,
	3689, 4042, 4016, 935, 3982, 2002, 3735, 3964, 2489, 934,
	2002, 3574, 100, 2864, 1633, 1634, 3961, 86, 97, 2865,
	2002, 3958, 1099, 1099, 3917, 3689, 3882, 3881, 3918, 3873,
	2002, 2002, 1485, 2002, 79, 3872, 1664, 3841, 3820, 3689,
	3799, 2002, 2489, 1636, 2087, 1147, 2431, 1658, 1659, 1660,
	1661, 3788, 4063, 3977, 3720, 3216, 944, 1641, 2431, 3708,
	949, 3688, 3965, 2431, 3605, 3689, 87, 2087, 2489, 955,
	3553, 85, 3547, 2085, 3232, 3512, 3232, 1635, 3403, 3513,
	2594, 3383, 3404, 3401, 1100, 100, 1673, 3402, 3386, 1683,
	86, 97, 2431, 3303, 86, 1663, 1665, 2002, 3299, 3231,
	1341, 3223, 2431, 3232, 2423, 3224, 2960, 1152, 1353, 3769,
	2431, 1679, 2955, 1680, 2954, 2907, 2431, 212, 2431, 2908,
	1650, 1651, 2905, 2897, 1148, 2895, 2906, 2898, 1341, 2431,
	2866, 2431, 3735, 2749, 2431, 1633, 1634, 2087, 1671, 87,
	2722, 2721, 2922, 2509, 2090, 2090, 2488, 2431, 2480, 1656,
	2489, 2474, 2431, 2430, 1340, 2002, 2089, 2431, 3709, 214,
	2090, 1633, 1634, 1102, 1636, 1103, 2002, 3574, 3224, 2589,
	1942, 2524, 2487, 1890, 2066, 2662, 1641, 2082, 2854, 1681,
	2001, 2606, 2522, 1664, 1769, 1327, 3470, 3275, 3253, 1791,
	1636, 1977, 90, 3200, 2467, 2916, 2917, 1670, 1635, 1535,
	2466, 2465, 2464, 2463, 2068, 1341, 1104, 213, 212, 1101,
	943, 942, 3201, 3658, 1663, 1665, 941, 2321, 206, 2068,
	940, 2068, 939, 2068, 1635, 2068, 207, 938, 212, 937,
	933, 2784, 173, 93, 2932, 96, 932, 931, 930, 929,
	928, 927, 926, 925, 924, 923, 922, 921, 176, 1662,
	214, 2351, 920, 919, 918, 917, 899, 846, 845, 212,
	844, 843, 842, 841, 840, 90, 839, 786, 1656, 1657,
	214, 138, 838, 1332, 837, 3198, 836, 835, 834, 833,
	832, 4144, 831, 1148, 1347, 830, 829, 828, 827, 826,
	825, 824, 1012, 823, 1674, 2322, 1012, 1641, 213, 822,
	821, 214, 820, 819, 1352, 173, 93, 818, 96, 817,
	3617, 1201, 2085, 816, 815, 1201, 805, 804, 213, 1321,
	800, 799, 212, 1641, 793, 792, 140, 1341, 751, 206,
	1181, 1172, 212, 750, 1186, 710, 212, 207, 709, 176,
	786, 177, 3420, 1012, 138, 1012, 2423, 1012, 138, 213,
	212, 708, 1321, 700, 2933, 699, 698, 2922, 667, 176,
	206, 1663, 1665, 3397, 214, 2710, 659, 658, 207, 1307,
	2323, 2320, 1302, 657, 214, 1321, 641, 234, 214, 1338,
	2066, 1345, 2085, 1351, 2082, 233, 2179, 232, 1657, 1672,
	176, 231, 214, 1647, 1648, 1654, 1675, 1653, 1649, 140,
	1646, 1644, 1645, 1637, 1638, 1639, 1640, 1642, 1643, 230,
	229, 228, 213, 1331, 177, 1656, 1503, 3625, 1321, 1012,
	1557, 227, 213, 206, 1321, 226, 213, 212, 1321, 1392,
	1394, 207, 225, 206, 224, 223, 1012, 206, 1012, 2558,
	213, 207, 1321, 222, 1166, 207, 221, 220, 1012, 2932,
	1012, 206, 219, 176, 218, 1465, 3782, 217, 1194, 207,
	1288, 1293, 1148, 783, 694, 216, 3233, 176, 1010, 214,
	3007, 1397, 1483, 697, 1488, 215, 2958, 2877, 2860, 2643,
	1346, 176, 2691, 2337, 1497, 2493, 1502, 2926, 2918, 2919,
	2920, 2921, 2923, 2924, 1321, 2325, 2472, 2457, 2097, 4124,
	1489, 1161, 2959, 212, 1752, 1752, 1448, 2674, 1330, 2335,
	1751, 1751, 1012, 1329, 1794, 1012, 1919, 213, 1817, 1646,
	1644, 1645, 1637, 1638, 1639, 1640, 1642, 1643, 206, 1722,
	1310, 1335, 1755, 1750, 3860, 1657, 207, 1632, 4030, 165,
	165, 1713, 1188, 1135, 3974, 214, 1556, 3968, 3834, 212,
	3966, 1472, 1474, 3789, 1504, 3768, 1294, 3665, 176, 1306,
	1309, 3640, 3639, 3633, 3632, 1439, 1442, 2916, 2917, 2933,
	2934, 2935, 2936, 3631, 3624, 3623, 3621, 2096, 3616, 3613,
	3612, 3517, 2916, 2917, 1451, 1382, 1172, 212, 3601, 1172,
	3511, 214, 3424, 213, 3423, 3422, 3407, 1413, 3374, 3373,
	3372, 3295, 2319, 3291, 206, 1012, 1012, 1012, 1012, 1012,
	1012, 1012, 207, 3002, 3468, 3227, 2951, 2916, 2917, 2942,
	1309, 1309, 2915, 2912, 1571, 2911, 2909, 2502, 1713, 214,
	2904, 3784, 2903, 1470, 176, 1720, 1012, 2902, 2899, 213,
	2931, 2896, 1012, 1637, 1638, 1639, 1640, 1642, 1643, 2876,
	206, 2859, 2852, 1112, 2723, 2931, 2458, 2308, 207, 1309,
	1632, 1631, 2042, 1633, 1634, 4295, 4245, 1644, 1645, 1637,
	1638, 1639, 1640, 1642, 1643, 1610, 955, 213, 2009, 212,
	176, 2007, 1484, 1128, 1714, 1664, 1712, 4244, 206, 1604,
	1633, 1634, 1636, 3518, 1498, 4177, 207, 4175, 4166, 1137,
	2927, 2925, 2926, 2918, 2919, 2920, 2921, 2923, 2924, 1633,
	1634, 3321, 1664, 4022, 1702, 4012, 2676, 4009, 176, 1636,
	4008, 214, 4007, 4001, 3994, 3962, 1635, 3946, 3945, 2922,
	2285, 1664, 1509, 3933, 3930, 3878, 1655, 2956, 1636, 3856,
	3832, 3815, 3814, 1526, 2922, 3796, 1012, 1012, 1012, 3795,
	3760, 1466, 1012, 1635, 3736, 3657, 1558, 3638, 212, 1133,
	3575, 1133, 3569, 1655, 3566, 3458, 1771, 3457, 3444, 213,
	3443, 1652, 1635, 2291, 3389, 3377, 1201, 3986, 2350, 2922,
	206, 3286, 1700, 2937, 1012, 3234, 3217, 688, 207, 3175,
	1615, 1852, 688, 1607, 2999, 3115, 935, 3088, 1808, 3059,
	214, 1012, 934, 3518, 3058, 1321, 3027, 2881, 1614, 3025,
	176, 212, 2880, 2875, 2843, 1658, 1659, 1660, 1661, 1609,
	2655, 2932, 1820, 1012, 1758, 1641, 1757, 1756, 1611, 1201,
	1780, 1754, 1831, 1753, 1628, 1629, 2932, 1878, 1825, 1633,
	1634, 1745, 1658, 1659, 1660, 1661, 1172, 1743, 213, 2916,
	2917, 3783, 1641, 214, 1801, 1777, 1778, 2500, 2499, 206,
	2469, 1917, 1827, 1663, 1665, 2462, 2429, 207, 1636, 2333,
	1821, 1641, 1816, 1881, 1772, 1767, 1766, 165, 1887, 1882,
	1765, 1746, 1747, 1764, 1492, 1633, 1634, 1009, 955, 2690,
	1663, 1665, 1763, 1762, 2675, 212, 1131, 1761, 1131, 1760,
	1759, 213, 1635, 1740, 1739, 1738, 1737, 1664, 1736, 1663,
	1665, 1735, 206, 1099, 1636, 1650, 1651, 1656, 1824, 694,
	207, 1734, 1733, 1732, 694, 1731, 1823, 2098, 697, 1730,
	3059, 1729, 1728, 697, 1727, 1726, 1715, 214, 1701, 1908,
	1699, 2933, 176, 1694, 1656, 1160, 1799, 1150, 1635, 1143,
	3763, 3661, 3609, 1802, 3419, 3400, 2933, 3392, 2863, 1884,
	2460, 2491, 3845, 1656, 3663, 3418, 1321, 1321, 1714, 244,
	1880, 2916, 2917, 3023, 1770, 1697, 1201, 1846, 1812, 4242,
	4235, 4010, 3185, 3920, 1185, 213, 3711, 3919, 3787, 1796,
	2916, 2917, 1177, 1828, 1811, 1810, 206, 1809, 1875, 1930,
	1807, 3738, 1806, 1805, 207, 1910, 1963, 3737, 1910, 1966,
	2336, 2922, 1971, 955, 3710, 3660, 3578, 1662, 1832, 3577,
	3576, 3395, 3219, 3218, 3521, 1306, 176, 1794, 1752, 1849,
	1910, 2901, 3925, 1177, 1751, 1792, 2334, 1657, 1995, 1999,
	957, 1184, 1633, 1634, 1662, 1602, 1913, 1641, 3969, 1903,
	2900, 3967, 2825, 2560, 1180, 1525, 1840, 1942, 2577, 1735,
	3859, 3456, 1735, 915, 1657, 2928, 2929, 2930, 1896, 1572,
	4120, 1636, 2927, 2925, 2926, 2918, 2919, 2920, 2921, 2923,
	2924, 1947, 1724, 1657, 1177, 1663, 1665, 2927, 2925, 2926,
	2918, 2919, 2920, 2921, 2923, 2924, 3160, 1183, 3159, 2117,
	694, 2095, 1127, 1534, 3836, 1635, 916, 1975, 2072, 697,
	3916, 2074, 4164, 1992, 1321, 4149, 1321, 2079, 1321, 4136,
	2081, 3144, 2747, 2032, 2084, 2918, 2919, 2920, 2921, 2923,
	2924, 1535, 1990, 3476, 1321, 1321, 3475, 3461, 3250, 1656,
	3036, 2963, 3323, 4145, 1330, 1321, 212, 975, 2869, 1329,
	2316, 2037, 2922, 2043, 2498, 1768, 1748, 1321, 1721, 1321,
	1321, 1321, 3151, 2048, 2036, 1438, 1391, 1970, 1646, 1644,
	1645, 1637, 1638, 1639, 1640, 1642, 1643, 1324, 1155, 1111,
	4158, 688, 4155, 3194, 2600, 3435, 4003, 3771, 214, 4080,
	2000, 2104, 1653, 1649, 3137, 1646, 1644, 1645, 1637, 1638,
	1639, 1640, 1642, 1643, 1641, 3991, 4146, 2603, 2116, 3062,
	2045, 3451, 2730, 2687, 4201, 1513, 1645, 1637, 1638, 1639,
	1640, 1642, 1643, 2100, 4202, 3040, 3091, 2019, 2056, 2020,
	4226, 963, 2070, 3267, 3899, 3699, 213, 2121, 1359, 2109,
	2510, 895, 4290, 3892, 2932, 1570, 913, 206, 3884, 911,
	3733, 1369, 1413, 2164, 2053, 207, 2053, 2162, 2105, 1657,
	3489, 1897, 1012, 3485, 1012, 2054, 2050, 3484, 2321, 2035,
	909, 1012, 2178, 3478, 1852, 1852, 1201, 176, 1012, 1012,
	1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012,
	1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012,
	1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012,
	1012, 1012, 1012, 694, 1012, 3474, 1012, 1012, 1012, 1012,
	2196, 3488, 697, 1470, 2091, 1470, 2092, 2183, 3024, 1306,
	1370, 1161, 2058, 2059, 1569, 3472, 2125, 907, 1012, 904,
	1325, 1012, 1012, 2528, 3432, 2194, 2322, 3431, 3042, 1012,
	3140, 953, 1643, 1012, 2108, 1012, 1012, 2526, 1939, 2920,
	2921, 2923, 2924, 1201, 2933, 3018, 955, 2874, 955, 1012,
	1012, 1012, 1012, 1185, 1012, 1012, 1012, 1012, 1012, 1012,
	1012, 1012, 2873, 2872, 746, 2528, 2871, 2140, 1511, 2192,
	1935, 2126, 2095, 1637, 1638, 1639, 1640, 1642, 1643, 2526,
	1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 2158,
	2829, 2610, 4227, 1012, 1940, 1941, 2609, 2605, 1178, 2297,
	2298, 2323, 2320, 1568, 2207, 1133, 1551, 2596, 1885, 952,
	1184, 2588, 1201, 2297, 2313, 212, 2587, 2364, 2684, 2586,
	2585, 1133, 2916, 2917, 1936, 2564, 1510, 2127, 890, 2180,
	2182, 2492, 2551, 2195, 2363, 2188, 2481, 1012, 1201, 2359,
	1846, 1846, 2266, 935, 1608, 2448, 935, 935, 2181, 2211,
	2224, 948, 2212, 2213, 3251, 1167, 747, 214, 2381, 2381,
	2395, 1552, 2297, 2445, 2924, 2415, 2417, 1527, 3813, 2562,
	1812, 2421, 2220, 2221, 2312, 2581, 2925, 2926, 2918, 2919,
	2920, 2921, 2923, 2924, 2177, 3712, 2316, 1424, 901, 2538,
	2277, 1365, 1849, 1849, 2113, 2193, 2574, 2575, 2437, 2574,
	2575, 954, 2361, 1174, 2194, 213, 1403, 2362, 1402, 1321,
	2365, 2293, 2366, 2367, 1801, 2470, 206, 1553, 2275, 1840,
	1840, 2574, 2575, 2173, 207, 2310, 2325, 1601, 1506, 1185,
	1377, 1178, 1639, 1640, 1642, 1643, 1401, 2517, 1400, 891,
	1201, 665, 1131, 1313, 2281, 1535, 176, 2459, 2192, 2281,
	1326, 2176, 1172, 4201, 4230, 1902, 1901, 3090, 1131, 1910,
	1912, 2436, 2473, 2191, 3438, 1099, 1179, 1128, 165, 1128,
	1852, 1581, 955, 2390, 2406, 2377, 1356, 2419, 1178, 1535,
	2486, 955, 1887, 2550, 2922, 955, 1184, 2427, 2428, 3695,
	2438, 2168, 2133, 2557, 3039, 2494, 2541, 4142, 1201, 1388,
	2602, 975, 2444, 2289, 2449, 975, 1799, 2455, 2456, 2599,
	2287, 1523, 1321, 2442, 2443, 2817, 1754, 1175, 2190, 1567,
	1285, 2530, 2484, 890, 1285, 1176, 2593, 1012, 1012, 3867,
	1012, 2018, 2601, 2319, 2271, 4254, 1174, 2802, 4231, 664,
	2508, 1507, 1462, 617, 2130, 3447, 948, 4239, 2549, 2175,
	2124, 2272, 1478, 2597, 2501, 2055, 2273, 1585, 951, 3258,
	2278, 2644, 2507, 3257, 2647, 3495, 2649, 2781, 612, 2505,
	1746, 1747, 1905, 955, 2193, 1512, 2932, 2582, 1942, 2504,
	2506, 2566, 905, 1174, 1782, 905, 2672, 2511, 2163, 2698,
	2134, 2659, 2161, 1309, 3812, 2561, 3105, 2513, 1613, 1179,
	1159, 3459, 892, 2553, 3494, 2325, 905, 2689, 1321, 1321,
	2689, 1321, 2515, 749, 748, 2565, 2533, 2787, 1517, 2705,
	2840, 701, 1564, 1321, 3732, 2709, 2543, 2546, 2583, 813,
	2816, 4233, 3473, 2744, 891, 3104, 3471, 3869, 1321, 1387,
	1309, 3460, 2191, 2527, 4143, 2516, 1179, 2638, 2838, 2172,
	1175, 2640, 3139, 3685, 694, 2713, 1846, 3109, 1176, 2604,
	1786, 3693, 2540, 697, 2514, 971, 2718, 1140, 2576, 2578,
	2579, 2580, 986, 906, 1907, 905, 1012, 3312, 2752, 2753,
	1177, 2584, 2563, 1385, 2529, 4246, 3681, 4218, 2567, 2759,
	2760, 2761, 2712, 3309, 3098, 2748, 2933, 1175, 1330, 1789,
	2635, 4217, 2770, 2641, 2771, 1176, 1138, 2263, 1849, 1906,
	2778, 2768, 1423, 2653, 1784, 2790, 1364, 2479, 2668, 2729,
	1012, 2274, 2663, 1294, 165, 4257, 1012, 1012, 893, 4141,
	4190, 2276, 1787, 3097, 3191, 1840, 2719, 3682, 3591, 2634,
	1306, 1961, 2682, 2704, 2693, 2767, 3590, 2707, 1367, 2708,
	2792, 4270, 2794, 2700, 2773, 4004, 2775, 2750, 2777, 2765,
	1785, 2754, 666, 2755, 2835, 663, 1945, 4237, 3310, 2772,
	3192, 2774, 2714, 2776, 894, 2174, 2067, 2720, 2716, 4059,
	1960, 1012, 1012, 1987, 2731, 1582, 2836, 1012, 2795, 2978,
	2841, 2539, 744, 2785, 743, 2809, 2810, 892, 4232, 3694,
	1012, 1012, 2325, 4018, 1141, 1944, 1012, 1012, 2006, 2005,
	1933, 1387, 1012, 1177, 3448, 3041, 2132, 1933, 2715, 1579,
	1470, 1012, 1012, 1012, 780, 902, 1986, 1012, 3073, 2789,
	2918, 2919, 2920, 2921, 2923, 2924, 3191, 1012, 2832, 2831,
	4189, 1741, 3752, 1933, 2280, 3021, 1309, 1309, 2797, 3118,
	702, 703, 2786, 1786, 1012, 3587, 1973, 4238, 2808, 1788,
	1177, 2261, 3825, 3868, 2264, 1508, 2799, 2844, 2845, 2798,
	4211, 3079, 2862, 1925, 4091, 4021, 613, 3072, 1926, 1972,
	2207, 3718, 2803, 3809, 2818, 1693, 1127, 1129, 1127, 2879,
	4240, 806, 1789, 2325, 1580, 2307, 2288, 3502, 1306, 1583,
	2857, 2858, 2441, 4258, 2454, 2861, 3500, 2439, 3081, 3677,
	3415, 1968, 2528, 2260, 3678, 1522, 1524, 954, 3325, 2853,
	1012, 1012, 1012, 893, 4268, 1787, 2544, 3762, 1153, 1012,
	1012, 1012, 3581, 794, 1012, 1940, 1941, 1306, 4057, 1306,
	614, 2788, 2830, 1978, 1012, 1133, 1201, 3502, 1985, 2129,
	1012, 2837, 1012, 2970, 2971, 2123, 3500, 814, 3592, 3680,
	1133, 2839, 3269, 2977, 3080, 1969, 4170, 705, 704, 894,
	1914, 1915, 4058, 3683, 2800, 4171, 4024, 4140, 1201, 4200,
	1584, 4198, 615, 1539, 616, 1285, 1927, 2939, 2940, 2941,
	1133, 4039, 3932, 1201, 2868, 3535, 3178, 3636, 2026, 1779,
	2992, 1151, 1612, 1929, 1158, 4188, 3808, 3503, 1146, 604,
	1852, 3516, 2953, 3363, 1201, 1623, 1199, 3588, 2210, 1622,
	1300, 706, 707, 946, 3753, 890, 1943, 1898, 2972, 1012,
	1139, 3273, 975, 1942, 4263, 3012, 3875, 3874, 1285, 3854,
	3939, 1964, 3990, 1012, 3698, 3536, 3017, 2982, 948, 3482,
	2986, 3697, 1788, 2980, 3434, 1852, 1984, 3503, 955, 3046,
	3047, 4271, 3179, 3001, 3171, 1931, 3054, 3037, 3031, 2262,
	3050, 1012, 1321, 1172, 2673, 2667, 2657, 3063, 2049, 3005,
	3067, 3043, 1131, 2948, 2949, 2950, 2068, 2038, 3679, 2981,
	2031, 3006, 2014, 947, 2990, 2964, 1895, 1131, 2200, 2998,
	2993, 2994, 1622, 3308, 3378, 3064, 640, 1321, 3069, 3070,
	3085, 3086, 1621, 4069, 3087, 1617, 2979, 1201, 3538, 3010,
	807, 808, 4025, 3270, 3686, 3810, 1321, 1131, 3051, 3498,
	3428, 1321, 2433, 1128, 3121, 2169, 891, 3124, 1891, 3093,
	2987, 3129, 3131, 3501, 3776, 3076, 3112, 3113, 2991, 1128,
	3114, 3593, 1321, 3014, 3015, 3016, 3028, 3029, 1321, 3030,
	1321, 1623, 795, 796, 1201, 2654, 1893, 3637, 3116, 1426,
	2996, 688, 2997, 1932, 3364, 3914, 2568, 1933, 1693, 2545,
	3076, 4169, 1321, 3365, 1622, 1285, 3038, 3912, 2985, 3156,
	3855, 3065, 1321, 3501, 1894, 1621, 1846, 3044, 3061, 3076,
	3110, 1925, 2435, 3107, 3076, 3060, 1926, 2434, 1133, 1930,
	2201, 4262, 3187, 2989, 2823, 3170, 3083, 2801, 2114, 3089,
	3391, 3082, 2975, 3696, 2744, 3594, 2974, 1554, 3022, 1824,
	3142, 3165, 3145, 2744, 2478, 3507, 2477, 3100, 1930, 1409,
	2476, 1846, 2093, 1981, 1623, 2475, 3096, 3108, 1849, 2661,
	1321, 1321, 3103, 3204, 3111, 3084, 3206, 3207, 1462, 2106,
	3196, 3210, 3049, 3211, 3117, 3212, 3126, 3134, 1962, 2107,
	3127, 3133, 1321, 3055, 1975, 1840, 3138, 1621, 1407, 809,
	810, 2115, 1975, 2118, 2119, 2120, 1979, 3208, 952, 1540,
	4026, 3101, 3245, 1849, 3215, 3102, 3095, 3186, 3429, 892,
	2566, 3238, 2988, 694, 3149, 3141, 3180, 1201, 3863, 812,
	1201, 1965, 697, 3997, 1927, 3744, 3228, 3106, 3188, 2047,
	1840, 797, 798, 1395, 3147, 1980, 1306, 4208, 3013, 3252,
	3793, 1929, 2569, 2570, 3910, 1928, 1396, 3125, 2751, 2639,
	1012, 2637, 3132, 1516, 4072, 1131, 1012, 1012, 3852, 2035,
	1012, 1012, 1012, 3246, 1012, 3998, 165, 165, 4077, 4066,
	3209, 3193, 3226, 1012, 1852, 3119, 3643, 3264, 3213, 3214,
	3202, 639, 1012, 3230, 3380, 1012, 4095, 2332, 4210, 4160,
	3205, 1201, 4011, 1599, 1597, 3853, 3831, 3240, 3195, 3263,
	1012, 3792, 3635, 1931, 1576, 3247, 2160, 3168, 1201, 3261,
	3864, 3254, 3239, 3255, 3506, 3256, 1574, 2946, 1852, 1852,
	1012, 1012, 2945, 1012, 1012, 1012, 3271, 1550, 3281, 3282,
	3285, 4073, 3288, 945, 3248, 893, 3032, 2910, 3260, 2842,
	1548, 1012, 3999, 2658, 2595, 1012, 1546, 1852, 1852, 1012,
	1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012,
	1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 3268, 1012,
	1925, 1408, 1544, 955, 1949, 1926, 1012, 1012, 1852, 1542,
	2559, 894, 1532, 1012, 1306, 1306, 2503, 3297, 3298, 1819,
	1815, 1818, 1600, 1530, 1012, 1285, 1953, 1494, 1405, 3266,
	3265, 1617, 3293, 2783, 2782, 1133, 1133, 2757, 2189, 1012,
	1406, 1932, 2171, 1563, 2137, 1933, 3344, 3345, 3346, 3347,
	3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357,
	3358, 3359, 3360, 3361, 3362, 3304, 3366, 3327, 1201, 2011,
	3320, 811, 3315, 1879, 1920, 3311, 3313, 3314, 3396, 1725,
	1950, 1505, 1381, 2331, 3045, 3337, 4135, 3338, 4212, 3335,
	1846, 3375, 1127, 3336, 1306, 3334, 3342, 3719, 3120, 1598,
	1596, 3340, 3367, 1012, 3707, 4065, 3774, 3724, 1127, 2159,
	1575, 903, 1285, 1927, 4186, 3241, 3242, 3243, 3244, 1012,
	1012, 3305, 1573, 3413, 3414, 3670, 3534, 3526, 3387, 3388,
	1929, 165, 3368, 1549, 1846, 1846, 1782, 3425, 3426, 3427,
	3384, 3385, 1849, 3376, 3487, 3454, 1547, 3183, 3452, 1012,
	1012, 3433, 1545, 3174, 1626, 3169, 3453, 3382, 3455, 3161,
	2711, 2706, 2685, 1846, 1846, 2671, 2220, 3328, 4178, 1840,
	2664, 2651, 1131, 1131, 3398, 1954, 1012, 2636, 1543, 2088,
	1826, 1285, 3399, 2086, 2083, 1541, 1849, 1849, 1531, 2080,
	2075, 2073, 1931, 2069, 1846, 2220, 3343, 2060, 1321, 1529,
	2010, 1705, 2008, 1928, 1404, 1710, 1991, 1285, 1976, 1959,
	1946, 1934, 1786, 1840, 1840, 1849, 1849, 1852, 3486, 1108,
	4202, 2003, 3467, 3469, 3421, 3466, 3371, 3462, 1899, 3412,
	4105, 3798, 3791, 3437, 3483, 3790, 1955, 1956, 3731, 2821,
	3666, 1361, 1840, 1840, 1109, 1321, 1849, 3956, 3128, 1951,
	2745, 1789, 1012, 1985, 3477, 908, 910, 912, 1918, 1627,
	1133, 1012, 2528, 3548, 3941, 3522, 1784, 2548, 2528, 3528,
	3546, 1020, 2698, 1840, 2128, 2204, 2526, 2566, 3505, 1321,
	1321, 1321, 2547, 1942, 1787, 1447, 3557, 4104, 2155, 1952,
	1594, 1595, 2046, 2154, 3554, 1321, 2633, 3543, 3555, 3948,
	1932, 2135, 3726, 3700, 1933, 3523, 2744, 3411, 1528, 1285,
	3539, 3949, 1785, 1128, 1201, 242, 242, 242, 3540, 607,
	608, 1446, 623, 607, 623, 633, 638, 3524, 1128, 2822,
	656, 1129, 3561, 1129, 3496, 662, 1201, 3504, 3976, 1012,
	1012, 242, 3950, 1922, 3580, 1012, 1012, 1852, 3542, 1110,
	1012, 1012, 3573, 1012, 3644, 3527, 678, 1012, 1128, 791,
	3544, 1984, 3493, 1633, 1634, 242, 3622, 1285, 1012, 2571,
	3550, 3549, 3541, 3509, 2552, 1447, 2376, 2372, 1633, 1634,
	1630, 4204, 1923, 3556, 1012, 3562, 3563, 3596, 4196, 3564,
	1957, 3567, 2717, 1462, 3570, 618, 3529, 1131, 3571, 3481,
	3568, 3952, 235, 1846, 1447, 3604, 3245, 1636, 4165, 2650,
	2157, 1788, 3492, 1888, 2398, 3238, 3595, 3951, 2600, 2608,
	3480, 2607, 2758, 2590, 3589, 1309, 1635, 3584, 2554, 4064,
	2592, 3608, 2556, 4034, 3953, 3055, 734, 4031, 3996, 3579,
	4234, 1635, 777, 2591, 1133, 2555, 3928, 601, 629, 2370,
	3907, 3525, 1133, 3515, 3406, 1849, 1201, 3173, 1201, 2692,
	2420, 1958, 1928, 1883, 1833, 1133, 2374, 2375, 2373, 4097,
	3861, 3020, 4261, 2035, 4098, 4097, 2916, 2917, 607, 607,
	4098, 1201, 1840, 1633, 1634, 4033, 242, 2520, 2521, 2518,
	2519, 1515, 1332, 4214, 3649, 3614, 2327, 1514, 3417, 3634,
	2520, 3240, 2518, 2360, 1012, 3667, 3668, 3652, 1578, 3929,
	3893, 1577, 3727, 3723, 3722, 3610, 3239, 3532, 3416, 3316,
	3122, 2223, 1719, 1718, 4248, 4219, 3701, 3691, 3987, 2369,
	2371, 1201, 3888, 1846, 3846, 3843, 3755, 3645, 3662, 1201,
	3572, 3552, 3510, 3655, 3648, 3650, 3646, 3647, 3508, 3692,
	3651, 3450, 165, 3445, 3005, 3702, 3203, 3656, 3659, 3728,
	3177, 3729, 3703, 3704, 3641, 3176, 2780, 1321, 1321, 3669,
	2764, 2763, 2762, 2702, 2677, 2652, 1128, 2496, 2495, 2292,
	2156, 1131, 2153, 2152, 3690, 1849, 2151, 3745, 3236, 1131,
	3721, 2150, 2149, 2063, 2062, 1201, 3742, 2061, 2044, 2021,
	1321, 3730, 1131, 2017, 2016, 2015, 2013, 2012, 2328, 1593,
	1592, 3754, 1840, 1537, 1536, 1433, 3767, 1432, 1431, 1430,
	1429, 3765, 1428, 1427, 3740, 1425, 1420, 1012, 3734, 1419,
	1418, 1417, 3717, 1416, 1376, 1375, 3739, 1321, 1321, 1321,
	3741, 1374, 1373, 3785, 3954, 1372, 3772, 1371, 1201, 3955,
	3794, 1366, 1360, 1358, 1357, 1192, 1191, 1190, 1189, 1157,
	1012, 1012, 1012, 3781, 3746, 3777, 1156, 3761, 1091, 1889,
	3764, 914, 900, 3778, 3797, 3866, 3684, 1587, 1201, 84,
	1368, 722, 78, 1012, 1982, 3449, 1012, 1012, 3779, 3241,
	3242, 3243, 3244, 873, 3715, 4094, 1012, 1354, 4017, 1852,
	729, 4079, 3071, 2471, 1012, 1012, 2611, 2136, 1538, 3786,
	3803, 2138, 3000, 2461, 4056, 3618, 2878, 3983, 3800, 1201,
	3801, 1321, 3805, 3824, 2330, 1723, 2957, 3811, 80, 996,
	1042, 3751, 1127, 3706, 3750, 1201, 3671, 3436, 3816, 2734,
	3748, 3747, 1837, 1012, 3714, 1839, 3716, 1127, 3766, 962,
	1012, 1204, 1900, 1002, 1916, 1909, 2497, 3833, 1012, 3827,
	1852, 2380, 1019, 3830, 1016, 1841, 1843, 1018, 1012, 1017,
	1842, 1012, 3821, 3848, 1742, 1015, 1836, 1127, 2035, 3531,
	1012, 3530, 2660, 3838, 3839, 3840, 2696, 1201, 1412, 875,
	3879, 3880, 1309, 1904, 3842, 2286, 2314, 2867, 1321, 1321,
	3849, 1716, 977, 998, 2311, 2523, 3847, 1149, 987, 3887,
	3857, 976, 2983, 3870, 3894, 1285, 2962, 3896, 3897, 3871,
	3190, 3405, 2199, 738, 2913, 2317, 1142, 2403, 3898, 2396,
	2392, 3035, 2686, 1603, 3156, 1201, 3922, 1695, 1321, 2697,
	1187, 980, 3913, 3889, 3885, 2284, 1707, 1285, 2847, 2209,
	3197, 2805, 3895, 3927, 3003, 2490, 1012, 1012, 4101, 3903,
	3902, 3911, 1285, 1128, 1128, 3926, 3324, 2025, 1107, 1106,
	3890, 3905, 1105, 3906, 4085, 1012, 1012, 4082, 3565, 3959,
	3960, 1144, 3921, 1285, 3154, 1846, 3934, 3938, 3940, 1892,
	2512, 1685, 1012, 1852, 3937, 3162, 992, 1305, 975, 2290,
	3944, 3943, 3957, 3935, 2968, 3229, 3942, 3781, 1378, 1154,
	3963, 3936, 975, 661, 1705, 1004, 1684, 1012, 656, 2630,
	1012, 2629, 3993, 1173, 1171, 1170, 1169, 3053, 4269, 4000,
	3971, 2398, 2398, 3446, 211, 2815, 3135, 1849, 1624, 1012,
	1616, 242, 3989, 242, 242, 1297, 1846, 242, 242, 1312,
	208, 3981, 210, 3972, 3973, 3901, 3988, 209, 3756, 3980,
	3409, 3009, 4006, 242, 1840, 1334, 3166, 4163, 2402, 3464,
	3146, 21, 20, 19, 105, 4005, 3172, 40, 3877, 18,
	1012, 1012, 120, 4020, 137, 3975, 1285, 4014, 136, 113,
	1363, 1012, 135, 134, 1012, 1127, 1321, 1129, 1849, 4013,
	133, 132, 1380, 4019, 1312, 3900, 1321, 1321, 242, 242,
	139, 1297, 4015, 1129, 4036, 131, 130, 4038, 4028, 4029,
	4047, 242, 125, 1321, 4035, 1840, 3926, 4032, 4027, 1422,
	129, 128, 127, 1285, 3221, 3222, 126, 1012, 1012, 4041,
	124, 242, 4043, 242, 242, 123, 1297, 242, 1312, 4044,
	122, 2398, 2398, 2398, 121, 119, 118, 117, 656, 116,
	242, 242, 4051, 4045, 4046, 115, 4076, 114, 4074, 4040,
	1012, 1012, 4052, 1012, 4053, 112, 111, 4061, 110, 1846,
	4050, 109, 108, 791, 4084, 4087, 107, 106, 1128, 652,
	649, 57, 56, 104, 4106, 103, 4103, 17, 4099, 38,
	14, 4096, 61, 62, 16, 13, 4075, 33, 4114, 4089,
	4118, 83, 4119, 4093, 95, 4060, 94, 1306, 1012, 1012,
	1012, 34, 92, 91, 32, 15, 4117, 4107, 89, 88,
	4108, 1849, 4110, 31, 4113, 29, 11, 9, 8, 4147,
	35, 1012, 1803, 4152, 12, 5, 170, 169, 4088, 172,
	168, 4092, 4131, 4132, 4133, 242, 4134, 171, 1840, 82,
	167, 166, 81, 27, 10, 4150, 162, 3923, 3520, 76,
	164, 4174, 242, 163, 4172, 161, 1285, 160, 159, 1285,
	77, 4181, 4162, 74, 158, 4183, 157, 75, 1012, 156,
	4176, 25, 6, 60, 4187, 4173, 7, 4182, 3806, 3249,
	98, 99, 36, 1309, 72, 71, 70, 24, 59, 23,
	199, 198, 197, 4203, 196, 195, 4206, 4193, 4194, 194,
	189, 4199, 188, 4197, 193, 4195, 4179, 4180, 191, 190,
	4205, 4084, 4184, 4209, 4087, 4207, 1012, 192, 1012, 187,
	4224, 4216, 4103, 202, 201, 203, 4229, 4220, 4213, 4228,
	1285, 4221, 200, 4222, 205, 186, 184, 180, 179, 4223,
	183, 4225, 185, 182, 181, 178, 204, 1285, 154, 155,
	67, 4215, 1128, 153, 4241, 152, 4243, 151, 150, 149,
	1128, 148, 1127, 1127, 147, 66, 4250, 22, 2, 1,
	0, 4255, 4252, 1128, 0, 1012, 1012, 4256, 4249, 0,
	0, 4259, 0, 1012, 0, 1012, 1012, 0, 4265, 0,
	0, 2969, 0, 4273, 0, 4274, 0, 0, 4272, 4278,
	0, 4277, 0, 0, 4276, 0, 0, 0, 2698, 0,
	0, 0, 4275, 0, 0, 4283, 0, 4281, 0, 4286,
	4285, 0, 4287, 2995, 4288, 0, 0, 4289, 4293, 4292,
	0, 4291, 4284, 0, 4294, 0, 1012, 4298, 3008, 0,
	4300, 4297, 0, 0, 4301, 0, 4303, 0, 0, 607,
	4304, 0, 0, 0, 0, 0, 0, 0, 0, 3026,
	0, 0, 0, 4266, 4267, 0, 0, 0, 0, 0,
	242, 0, 242, 0, 0, 3685, 242, 1285, 0, 0,
	1633, 1634, 0, 0, 0, 2402, 0, 0, 0, 1334,
	1297, 242, 0, 242, 0, 0, 0, 0, 242, 1334,
	623, 0, 1664, 242, 1334, 0, 0, 0, 3681, 1636,
	656, 0, 3674, 0, 4299, 0, 0, 0, 0, 0,
	0, 0, 3490, 0, 0, 0, 0, 0, 3672, 0,
	0, 0, 0, 0, 0, 0, 0, 3676, 0, 0,
	0, 0, 0, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1655, 0, 0, 0, 0, 0, 3682,
	0, 1652, 2398, 2398, 0, 2402, 2402, 0, 0, 0,
	0, 0, 0, 2916, 2917, 0, 2934, 2935, 2936, 0,
	668, 0, 0, 2627, 0, 0, 0, 1127, 0, 0,
	0, 0, 0, 0, 3600, 0, 0, 0, 0, 3675,
	0, 0, 0, 3558, 3559, 3560, 0, 0, 0, 3008,
	0, 0, 3599, 0, 0, 2619, 2617, 0, 0, 1462,
	0, 0, 2621, 2623, 2613, 0, 0, 0, 0, 0,
	0, 0, 1658, 1659, 1660, 1661, 0, 0, 0, 0,
	0, 0, 1641, 0, 0, 0, 2931, 0, 0, 0,
	2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398,
	2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398, 0,
	2398, 0, 0, 0, 0, 0, 242, 0, 0, 242,
	1663, 1665, 0, 0, 0, 2402, 2402, 2402, 0, 0,
	0, 0, 0, 673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 1651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1129, 0, 0,
	0, 0, 0, 1285, 0, 0, 0, 0, 0, 242,
	0, 3677, 1129, 242, 1656, 2922, 3678, 242, 0, 0,
	0, 0, 0, 242, 0, 1285, 0, 0, 0, 0,
	0, 0, 1300, 0, 0, 1199, 242, 0, 242, 0,
	242, 0, 1129, 0, 607, 0, 0, 681, 0, 0,
	0, 1127, 0, 0, 0, 0, 0, 0, 2064, 1127,
	0, 3680, 2916, 2917, 2615, 2934, 2935, 2936, 0, 2937,
	242, 675, 1127, 0, 0, 3683, 0, 242, 0, 0,
	0, 0, 0, 3290, 0, 2628, 2620, 2618, 2622, 2624,
	2614, 2616, 0, 1633, 1634, 0, 0, 0, 2626, 0,
	0, 0, 0, 0, 0, 0, 3301, 2932, 656, 0,
	0, 0, 791, 0, 1662, 1664, 0, 0, 0, 0,
	0, 0, 1636, 3317, 0, 679, 0, 0, 0, 0,
	0, 2631, 0, 0, 1657, 2931, 0, 242, 0, 1297,
	242, 0, 0, 0, 0, 1285, 0, 1285, 0, 0,
	0, 0, 0, 0, 656, 0, 1635, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 1655, 0, 0, 0,
	1285, 1462, 242, 242, 1652, 242, 0, 242, 0, 242,
	0, 242, 0, 0, 0, 670, 0, 0, 0, 0,
	3679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2165, 0, 0, 2166, 0, 2167, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	1285, 0, 0, 0, 2922, 3284, 3686, 2933, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 680, 0, 0,
	638, 3802, 0, 3804, 656, 1658, 1659, 1660, 1661, 0,
	677, 0, 0, 3408, 0, 1641, 672, 0, 0, 0,
	1129, 0, 1653, 1649, 0, 1646, 1644, 1645, 1637, 1638,
	1639, 1640, 1642, 1643, 0, 0, 0, 0, 2937, 0,
	0, 0, 0, 0, 1285, 0, 2632, 0, 0, 0,
	0, 0, 0, 1663, 1665, 2625, 0, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2932, 0, 1650, 1651,
	0, 0, 0, 0, 676, 3844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1285, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 1656, 0, 671,
	0, 2928, 2929, 2930, 0, 0, 0, 0, 2927, 2925,
	2926, 2918, 2919, 2920, 2921, 2923, 2924, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2402, 2402, 0, 0,
	0, 607, 3904, 0, 0, 0, 0, 0, 1285, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 1285, 607, 0, 0, 0, 0,
	0, 0, 242, 0, 607, 0, 2933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 1662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	975, 242, 1312, 0, 0, 0, 0, 1657, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 0, 0, 0,
	0, 0, 0, 0, 2402, 2402, 2402, 2402, 2402, 2402,
	2402, 2402, 2402, 2402, 2402, 2402, 2402, 2402, 2402, 2402,
	2402, 2402, 2402, 0, 2402, 0, 0, 0, 242, 1312,
	0, 623, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1129, 1129, 0,
	0, 0, 0, 0, 0, 0, 0, 2537, 0, 0,
	2928, 2929, 2930, 0, 0, 0, 242, 2927, 2925, 2926,
	2918, 2919, 2920, 2921, 2923, 2924, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 1653, 1649, 0, 1646, 1644,
	1645, 1637, 1638, 1639, 1640, 1642, 1643, 0, 242, 0,
	1462, 1462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 1462, 0, 0,
	0, 0, 0, 242, 2642, 0, 0, 0, 0, 0,
	69, 0, 0, 3654, 0, 0, 0, 2398, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 1334, 0,
	0, 242, 0, 0, 0, 0, 3664, 0, 242, 975,
	975, 0, 0, 0, 0, 0, 0, 2681, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2537, 0, 607,
	0, 0, 2701, 0, 2398, 79, 0, 0, 242, 0,
	0, 242, 0, 0, 0, 242, 0, 242, 0, 0,
	0, 0, 1297, 0, 242, 242, 0, 1312, 1312, 0,
	0, 0, 0, 0, 0, 0, 0, 2727, 791, 0,
	2537, 2537, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 100, 0, 0, 0,
	0, 86, 97, 0, 0, 0, 0, 0, 0, 0,
	975, 0, 0, 0, 242, 1297, 242, 0, 0, 1334,
	0, 1334, 1129, 0, 1297, 0, 1297, 0, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 242, 242, 242, 242, 1297, 242,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1199, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 2398, 0, 0, 0, 0, 1781, 0,
	242, 0, 0, 0, 1633, 1634, 0, 1666, 1667, 1668,
	1676, 1677, 1678, 3822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 1664, 0, 0, 0,
	0, 0, 0, 1636, 0, 0, 0, 0, 0, 0,
	0, 1682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 0, 0,
	2223, 0, 0, 0, 0, 0, 90, 1655, 0, 0,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 1334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1129, 0, 0, 0,
	0, 0, 0, 0, 1129, 0, 173, 93, 0, 96,
	0, 0, 2223, 0, 0, 0, 0, 1129, 0, 0,
	0, 0, 0, 0, 2916, 2917, 0, 2934, 2935, 2936,
	0, 0, 0, 212, 0, 0, 0, 0, 0, 0,
	0, 786, 0, 0, 0, 138, 1658, 1659, 1660, 1661,
	0, 0, 0, 0, 0, 0, 1641, 0, 0, 2916,
	2917, 0, 2934, 2935, 2936, 0, 961, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1673, 0, 0, 1683, 0,
	0, 0, 0, 0, 1663, 1665, 242, 2931, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1679, 242, 1680, 0, 0, 177, 607, 0, 0, 1650,
	1651, 607, 0, 213, 607, 0, 0, 607, 607, 0,
	0, 0, 2931, 607, 206, 0, 0, 1671, 0, 68,
	0, 242, 207, 0, 0, 0, 0, 0, 1656, 0,
	0, 0, 0, 1334, 0, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 1334, 0, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 2922, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1670, 2537, 2537, 242,
	0, 1312, 0, 0, 2537, 0, 0, 3057, 0, 0,
	79, 0, 0, 0, 0, 2537, 3057, 0, 2537, 3057,
	3057, 2922, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 242, 1312, 242, 0, 0, 0,
	2937, 2402, 0, 0, 0, 0, 0, 85, 1662, 0,
	0, 0, 0, 0, 0, 0, 1312, 242, 0, 0,
	1297, 100, 0, 997, 102, 0, 86, 97, 1657, 0,
	0, 0, 2537, 0, 3123, 2537, 1312, 0, 2932, 2537,
	2537, 1312, 0, 0, 0, 0, 0, 0, 2402, 0,
	0, 0, 0, 1674, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 2932, 0, 87, 0, 0, 0, 0,
	0, 0, 242, 3150, 0, 0, 3152, 2537, 0, 0,
	242, 0, 0, 0, 242, 0, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 2681, 0, 0, 1297, 0, 242,
	0, 0, 2537, 0, 607, 0, 0, 0, 0, 0,
	0, 2537, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 242, 242, 0, 0, 0, 0, 1672, 0,
	0, 0, 1647, 1648, 1654, 1675, 1653, 1649, 2933, 1646,
	1644, 1645, 1637, 1638, 1639, 1640, 1642, 1643, 0, 242,
	2681, 0, 3627, 2681, 0, 0, 3626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 936,
	0, 0, 0, 2933, 0, 0, 0, 2402, 0, 0,
	956, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3259, 0, 0, 1297,
	242, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1117, 0,
	0, 173, 93, 0, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 786, 0, 0, 0,
	138, 0, 2928, 2929, 2930, 0, 0, 0, 0, 2927,
	2925, 2926, 2918, 2919, 2920, 2921, 2923, 2924, 0, 0,
	961, 0, 0, 0, 961, 0, 0, 0, 0, 0,
	214, 3322, 0, 0, 0, 0, 0, 2928, 2929, 2930,
	0, 0, 0, 0, 2927, 2925, 2926, 2918, 2919, 2920,
	2921, 2923, 2924, 0, 0, 140, 0, 0, 0, 0,
	0, 1633, 1634, 0, 1666, 1667, 1668, 1676, 1677, 1678,
	177, 1336, 0, 1342, 0, 1348, 0, 0, 213, 0,
	0, 0, 1669, 1664, 0, 0, 0, 0, 0, 206,
	1636, 0, 0, 0, 0, 0, 0, 207, 1682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1475,
	0, 0, 0, 0, 1635, 0, 242, 242, 0, 0,
	0, 0, 0, 0, 1655, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 1463, 607, 607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1481, 0, 1486, 0, 0, 0,
	1334, 1334, 0, 0, 0, 0, 1495, 0, 1500, 0,
	0, 0, 0, 0, 1334, 1334, 1334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 1659, 1660, 1661, 0, 0, 0,
	0, 0, 0, 1641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1559, 0, 656, 1565, 0, 0, 0, 0, 0, 0,
	0, 0, 1673, 0, 0, 1683, 0, 0, 0, 0,
	0, 1663, 1665, 0, 0, 0, 0, 0, 1633, 1634,
	0, 0, 0, 242, 1676, 1677, 1678, 1679, 0, 1680,
	0, 0, 0, 0, 0, 0, 1650, 1651, 0, 0,
	1664, 1312, 242, 0, 0, 0, 0, 1636, 0, 0,
	0, 0, 0, 242, 1671, 1682, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 1656, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 242, 0, 0, 0,
	242, 1635, 0, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	0, 1655, 0, 0, 0, 1681, 0, 0, 0, 1652,
	2537, 242, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 0, 1670, 1704, 0, 0, 0, 2727, 2727,
	1717, 69, 0, 0, 791, 791, 2537, 0, 0, 2681,
	2681, 0, 0, 791, 2537, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1662, 0, 0, 0, 0,
	1658, 1659, 1660, 1661, 0, 0, 79, 0, 0, 0,
	1641, 0, 0, 0, 0, 1657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 102, 0, 102,
	0, 102, 0, 0, 0, 0, 0, 0, 0, 1673,
	1674, 0, 1683, 85, 0, 0, 0, 0, 1663, 1665,
	0, 0, 0, 3619, 1775, 1775, 1775, 100, 0, 0,
	0, 0, 86, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1650, 1651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1656, 102, 0, 0, 0, 956, 102, 102,
	0, 87, 0, 0, 0, 242, 0, 0, 0, 0,
	102, 1334, 102, 242, 0, 0, 0, 0, 0, 0,
	0, 961, 102, 0, 102, 1672, 242, 0, 0, 1647,
	1648, 1654, 1675, 1653, 1649, 0, 1646, 1644, 1645, 1637,
	1638, 1639, 1640, 1642, 1643, 0, 0, 0, 0, 4071,
	0, 0, 0, 2537, 2537, 2537, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1334, 0, 0, 0,
	0, 0, 0, 0, 2537, 0, 3057, 0, 0, 1334,
	1334, 242, 1312, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 1662, 1312, 242, 1312, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2537, 0, 2537,
	242, 0, 1657, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 0, 0, 0, 0, 2537, 0, 1674, 0, 0,
	3758, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	2916, 2917, 0, 2934, 2935, 2936, 0, 173, 93, 0,
	96, 0, 936, 0, 0, 0, 0, 0, 0, 0,
	0, 3289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 1698, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 786, 0, 0, 0, 138, 0, 0, 1703,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1672, 2931, 0, 0, 214, 0, 0, 1675,
	1653, 1649, 0, 1646, 1644, 1645, 1637, 1638, 1639, 1640,
	1642, 1643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 2537, 0, 3057, 206, 0, 3851, 0, 0,
	0, 0, 0, 207, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2922, 0, 0, 1473, 0, 0, 0, 0,
	0, 656, 1795, 0, 1798, 0, 102, 0, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3851, 0, 2937, 0, 0, 0,
	0, 0, 2537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 2932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3322, 0,
	2198, 0, 2202, 0, 0, 0, 0, 0, 0, 2216,
	0, 0, 0, 0, 3851, 0, 2225, 2226, 2227, 2228,
	2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238,
	2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248,
	2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258,
	2259, 0, 2265, 0, 2267, 2268, 2269, 2270, 0, 768,
	0, 242, 0, 0, 1633, 1634, 0, 1666, 1667, 1668,
	1676, 1677, 1678, 0, 2933, 0, 2294, 0, 0, 0,
	3758, 0, 0, 752, 0, 1669, 1664, 1704, 0, 0,
	0, 2309, 0, 1636, 242, 0, 0, 0, 0, 0,
	0, 1682, 0, 3057, 0, 0, 0, 2339, 2342, 2345,
	2348, 0, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 0,
	0, 753, 0, 0, 0, 0, 0, 1635, 0, 1334,
	0, 1334, 754, 0, 0, 0, 0, 1655, 0, 0,
	2394, 0, 2405, 2407, 2412, 1652, 0, 0, 0, 0,
	0, 0, 755, 0, 0, 0, 4070, 0, 0, 0,
	0, 0, 0, 1334, 0, 0, 242, 0, 0, 0,
	0, 0, 774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 2537, 0, 0, 0, 0, 0,
	0, 756, 0, 0, 0, 0, 0, 0, 2928, 2929,
	2930, 242, 0, 0, 0, 2927, 2925, 2926, 2918, 2919,
	2920, 2921, 2923, 2924, 757, 0, 1658, 1659, 1660, 1661,
	0, 0, 0, 0, 0, 3322, 1641, 956, 0, 956,
	0, 0, 0, 0, 758, 0, 0, 759, 0, 1633,
	1634, 1021, 0, 0, 0, 0, 681, 0, 0, 0,
	0, 0, 0, 0, 0, 1673, 0, 0, 1683, 0,
	0, 1664, 0, 0, 1663, 1665, 0, 0, 1636, 0,
	773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1679, 0, 1680, 0, 0, 243, 243, 243, 0, 1650,
	1651, 0, 0, 0, 0, 0, 0, 3851, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 1671, 0, 0,
	0, 243, 1655, 0, 0, 0, 0, 0, 1656, 0,
	1652, 0, 0, 0, 770, 0, 0, 0, 1334, 0,
	2537, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1670, 0, 0, 0,
	0, 3279, 0, 0, 0, 0, 0, 0, 0, 936,
	0, 761, 936, 936, 0, 2645, 2646, 0, 2648, 0,
	0, 1658, 1659, 1660, 1661, 0, 0, 0, 0, 0,
	0, 1641, 780, 0, 762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2537, 0, 1662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2727, 0, 0, 0, 0, 0, 680, 2283, 1657, 1663,
	1665, 0, 0, 763, 2727, 0, 0, 778, 779, 776,
	0, 0, 0, 956, 0, 771, 0, 0, 764, 0,
	0, 0, 1703, 1674, 1650, 1651, 1703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1656, 0, 765, 772, 0, 0, 0,
	0, 0, 0, 0, 766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 767, 0,
	0, 0, 0, 775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2779, 0, 0, 682, 1117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	0, 0, 0, 0, 1798, 0, 0, 0, 1672, 0,
	0, 0, 1647, 1648, 1654, 1675, 1653, 1649, 0, 1646,
	1644, 1645, 1637, 1638, 1639, 1640, 1642, 1643, 1633, 1634,
	0, 0, 2891, 0, 1686, 1687, 2892, 102, 0, 0,
	0, 0, 0, 1662, 0, 0, 0, 0, 2916, 2917,
	1664, 2934, 2935, 2936, 0, 0, 0, 1636, 0, 0,
	0, 0, 0, 1657, 0, 0, 0, 0, 0, 0,
	0, 1633, 1634, 0, 1666, 1667, 1668, 1676, 1677, 1678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2827,
	2828, 1635, 1669, 1664, 0, 2834, 0, 0, 0, 0,
	1636, 1655, 0, 0, 0, 0, 0, 0, 1682, 1652,
	0, 0, 0, 0, 2848, 2849, 0, 0, 0, 0,
	2309, 2931, 0, 0, 0, 0, 0, 0, 0, 2856,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 1655, 2870, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	3278, 0, 2882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 0,
	1658, 1659, 1660, 1661, 0, 0, 0, 0, 0, 0,
	1641, 1653, 1649, 0, 1646, 1644, 1645, 1637, 1638, 1639,
	1640, 1642, 1643, 0, 0, 0, 0, 0, 0, 102,
	2922, 0, 102, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 1659, 1660, 1661, 0, 1663, 1665,
	0, 0, 0, 1641, 0, 0, 0, 2412, 2412, 2412,
	0, 0, 2938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 1650, 1651, 102, 0, 0, 102, 0,
	2973, 0, 1673, 0, 2937, 1683, 0, 0, 0, 0,
	0, 1663, 1665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1656, 0, 0, 0, 0, 1679, 0, 1680,
	0, 0, 0, 102, 0, 0, 1650, 1651, 0, 0,
	0, 0, 2932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 961, 0, 0, 0, 1681, 0, 0, 102, 0,
	0, 243, 1205, 243, 243, 0, 1205, 243, 243, 0,
	1205, 0, 0, 1670, 0, 0, 0, 0, 0, 3074,
	0, 0, 1662, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2933, 0, 0, 1662, 1205, 0, 243, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 1657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 243, 243, 0, 0, 243, 2283, 1205,
	1674, 0, 0, 0, 0, 1205, 0, 0, 0, 1205,
	243, 243, 0, 0, 0, 0, 0, 0, 0, 1703,
	0, 0, 0, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1653, 1649, 0, 1646, 1644, 1645, 1637, 1638, 1639, 1640,
	1642, 1643, 0, 0, 0, 1205, 2928, 2929, 2930, 0,
	0, 0, 0, 2927, 2925, 2926, 2918, 2919, 2920, 2921,
	2923, 2924, 0, 0, 0, 1672, 0, 0, 0, 1647,
	1648, 1654, 1675, 1653, 1649, 243, 1646, 1644, 1645, 1637,
	1638, 1639, 1640, 1642, 1643, 0, 0, 0, 0, 4067,
	0, 0, 243, 1008, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1117, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 241, 241,
	0, 0, 0, 1117, 0, 0, 0, 0, 2216, 0,
	0, 0, 0, 0, 3276, 3277, 0, 0, 3280, 0,
	0, 0, 3283, 695, 0, 0, 0, 0, 0, 0,
	0, 3287, 0, 0, 0, 0, 0, 0, 0, 0,
	3294, 0, 0, 2973, 0, 0, 0, 695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3329, 3330,
	0, 3331, 3332, 3333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3339,
	0, 0, 0, 3341, 0, 0, 0, 0, 0, 1633,
	1634, 0, 1666, 1667, 1668, 1676, 1677, 1678, 102, 102,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	1669, 1664, 0, 0, 3369, 3370, 0, 0, 1636, 0,
	0, 0, 0, 0, 0, 0, 1682, 0, 0, 0,
	0, 0, 3381, 0, 102, 102, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 3390, 1130, 0,
	0, 0, 1635, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 1205, 0, 0,
	1652, 243, 243, 243, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3430, 0, 0, 0, 0, 0, 0, 0, 0,
	1205, 0, 0, 0, 0, 0, 0, 3439, 3442, 0,
	0, 1117, 0, 0, 956, 0, 0, 0, 0, 0,
	0, 1658, 1659, 1660, 1661, 0, 0, 0, 0, 0,
	0, 1641, 0, 0, 0, 0, 0, 0, 3463, 0,
	0, 0, 0, 0, 0, 102, 102, 0, 0, 0,
	0, 0, 0, 1633, 1634, 0, 0, 0, 0, 0,
	1673, 0, 0, 1683, 0, 0, 0, 0, 0, 1663,
	1665, 0, 0, 0, 0, 1664, 0, 0, 0, 0,
	0, 0, 1636, 0, 0, 1679, 0, 1680, 0, 0,
	0, 0, 0, 0, 1650, 1651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1671, 0, 0, 0, 1635, 0, 0, 0,
	0, 0, 0, 1656, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 1652, 0, 243, 1205, 1205, 243,
	1775, 0, 0, 0, 0, 0, 0, 1205, 0, 3551,
	0, 0, 0, 1681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2833, 0, 0, 0, 243,
	0, 0, 0, 243, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 243, 0, 1658, 1659, 1660, 1661, 0,
	0, 0, 0, 0, 0, 1641, 243, 0, 243, 0,
	243, 0, 0, 1662, 0, 0, 0, 3597, 3598, 0,
	0, 0, 0, 3602, 3603, 0, 0, 0, 3606, 3607,
	0, 0, 0, 1657, 0, 3611, 0, 0, 0, 0,
	243, 0, 0, 1663, 1665, 0, 3615, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1674, 0,
	0, 0, 3620, 0, 0, 0, 0, 0, 1650, 1651,
	102, 0, 0, 0, 0, 1205, 0, 1205, 0, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 1117, 1117,
	0, 0, 0, 0, 0, 1205, 1205, 1656, 0, 0,
	0, 0, 0, 0, 0, 0, 1205, 243, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 1205, 0,
	1205, 1205, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 243, 0, 243, 0, 243, 0, 243,
	0, 243, 0, 1672, 0, 0, 1123, 1647, 1648, 1654,
	1675, 1653, 1649, 0, 1646, 1644, 1645, 1637, 1638, 1639,
	1640, 1642, 1643, 241, 0, 241, 241, 2305, 0, 241,
	241, 2306, 3442, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 695, 0, 1662, 0, 0,
	237, 237, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1205, 0, 0,
	241, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	1633, 1634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 241, 241, 0, 0, 241,
	0, 0, 1664, 0, 0, 0, 0, 102, 0, 1636,
	0, 0, 241, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3442, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1635, 1205, 0, 0, 0, 0, 0,
	0, 0, 0, 1655, 0, 0, 0, 0, 3817, 3818,
	3819, 1652, 0, 0, 0, 1653, 1649, 0, 1646, 1644,
	1645, 1637, 1638, 1639, 1640, 1642, 1643, 0, 0, 0,
	0, 2216, 102, 0, 3828, 3829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3837, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 2826, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 1658, 1659, 1660, 1661, 243, 0, 0, 1205,
	0, 0, 1641, 0, 0, 0, 0, 0, 3442, 0,
	0, 243, 0, 0, 0, 0, 3876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3883, 0, 0, 961,
	0, 0, 0, 0, 0, 0, 0, 0, 3891, 0,
	1663, 1665, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 243, 0, 0, 1650, 1651, 0, 0, 0,
	1205, 102, 0, 0, 0, 0, 0, 1117, 0, 0,
	0, 0, 0, 0, 0, 1117, 0, 0, 0, 0,
	0, 0, 0, 0, 1656, 0, 0, 0, 0, 0,
	0, 1205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3442, 3442, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1205, 0, 3992, 0, 0, 3995, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1662, 0, 0, 3442, 0, 0,
	0, 0, 1797, 0, 1130, 0, 0, 0, 241, 102,
	0, 243, 0, 0, 1657, 0, 0, 0, 243, 102,
	0, 0, 0, 241, 1797, 241, 0, 0, 0, 0,
	695, 0, 0, 0, 0, 695, 0, 0, 961, 961,
	0, 102, 0, 0, 0, 0, 0, 0, 243, 3442,
	0, 243, 3442, 0, 0, 243, 0, 243, 0, 0,
	0, 0, 0, 0, 243, 243, 0, 0, 0, 1205,
	1205, 0, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 2216, 0, 0, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1653, 1649, 0, 1646, 1644, 1645, 1637, 1638,
	1639, 1640, 1642, 1643, 243, 243, 243, 243, 0, 243,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4130, 4130, 4130, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 4151,
	243, 0, 0, 0, 0, 0, 1196, 0, 241, 0,
	0, 695, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4130, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 241, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 2283, 0, 0, 0, 0, 1414, 0, 241, 0,
	241, 0, 241, 0, 3442, 0, 3442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1437, 0, 1437, 1437,
	0, 0, 0, 0, 0, 0, 0, 712, 0, 0,
	0, 0, 241, 0, 0, 1479, 1480, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4130, 4260, 0, 0, 0, 0, 0,
	0, 4264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 714,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 715, 0, 1205, 0, 0,
	716, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	1586, 0, 102, 0, 695, 241, 0, 241, 0, 241,
	739, 241, 0, 241, 0, 0, 717, 0, 0, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 1205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 718, 0, 0, 1205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 719, 0, 0, 720, 0, 0, 0, 0,
	741, 0, 0, 0, 681, 0, 0, 0, 0, 243,
	0, 0, 0, 1044, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 102, 0,
	0, 0, 0, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 243, 0, 243, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 1205, 0,
	0, 0, 0, 740, 0, 0, 0, 0, 1205, 0,
	0, 0, 735, 0, 0, 0, 0, 1205, 0, 0,
	0, 0, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1205, 0, 0, 0, 0, 243, 1205,
	0, 1205, 0, 0, 0, 1205, 0, 0, 721, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 723,
	243, 0, 0, 1205, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 1205, 0, 0, 0, 0, 0, 0,
	0, 1813, 724, 0, 0, 0, 0, 0, 1130, 0,
	0, 0, 0, 0, 0, 0, 1822, 0, 1304, 0,
	0, 0, 0, 0, 1130, 0, 0, 0, 243, 0,
	0, 0, 243, 243, 680, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 711, 0, 732, 0, 0,
	0, 1205, 1205, 241, 0, 0, 725, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 1134, 0,
	0, 0, 0, 1205, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 726, 0, 0, 744, 0, 743, 0,
	241, 0, 727, 0, 241, 0, 0, 0, 1205, 0,
	243, 1205, 243, 0, 0, 0, 728, 0, 0, 0,
	0, 736, 0, 0, 0, 0, 0, 745, 0, 742,
	0, 0, 0, 0, 0, 682, 0, 146, 0, 0,
	0, 0, 0, 0, 68, 243, 44, 43, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	69, 0, 0, 141, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 0, 1205, 241, 0, 0, 0, 63, 0, 0,
	0, 0, 0, 0, 46, 0, 143, 0, 0, 1205,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 45, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
	64, 0, 0, 0, 0, 0, 0, 49, 0, 0,
	0, 0, 85, 241, 2023, 0, 144, 0, 2030, 0,
	241, 0, 0, 0, 47, 0, 100, 0, 2041, 0,
	0, 86, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 0, 2052, 0, 2052, 0, 0, 0, 0,
	241, 0, 0, 241, 0, 0, 247, 241, 0, 241,
	0, 0, 50, 0, 0, 0, 241, 241, 0, 0,
	0, 0, 0, 0, 0, 1437, 0, 0, 0, 0,
	87, 0, 1304, 0, 0, 0, 0, 0, 0, 1205,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 0, 2111, 0, 0, 0, 0,
	687, 0, 0, 0, 0, 0, 241, 241, 241, 241,
	0, 241, 0, 241, 0, 0, 2131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2141, 0,
	2143, 0, 2145, 0, 2147, 0, 2148, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 241, 243, 0, 0, 90, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 0, 1205,
	0, 0, 243, 0, 2170, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 55, 0, 0, 0, 0, 0,
	65, 0, 0, 243, 0, 54, 173, 93, 0, 96,
	0, 243, 0, 52, 0, 0, 243, 145, 0, 0,
	243, 0, 0, 0, 53, 0, 1205, 0, 0, 0,
	0, 0, 0, 212, 0, 0, 0, 0, 0, 0,
	0, 58, 0, 0, 1134, 138, 0, 0, 1134, 0,
	0, 0, 1134, 0, 0, 0, 0, 0, 0, 142,
	1205, 1205, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 1205, 0, 0, 0,
	0, 0, 0, 0, 0, 1134, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 1205, 0, 0, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 1134, 0,
	0, 0, 0, 0, 0, 177, 0, 1205, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 1134, 0, 0,
	0, 1134, 0, 0, 176, 0, 0, 3, 1130, 0,
	0, 0, 0, 0, 0, 1134, 0, 0, 0, 0,
	0, 0, 0, 1130, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2468, 0, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1205, 0, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1013, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 241, 241, 0, 241, 0,
	0, 0, 1205, 0, 243, 1797, 243, 0, 0, 0,
	1205, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1205, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 1304, 0, 0, 1205, 243, 0, 0,
	241, 1205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 695, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1205, 1205,
	1205, 0, 0, 0, 0, 0, 2030, 0, 0, 1205,
	0, 1130, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 241, 241, 0, 0, 0, 1205,
	0, 0, 0, 2703, 0, 0, 1437, 0, 0, 0,
	1437, 0, 1437, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 1202, 0, 0,
	0, 1202, 1134, 0, 1134, 1322, 0, 0, 0, 0,
	1205, 0, 1205, 0, 0, 0, 0, 0, 0, 1134,
	2756, 0, 0, 0, 0, 0, 1205, 0, 0, 0,
	0, 0, 0, 0, 1853, 243, 0, 0, 1322, 2766,
	0, 2769, 241, 0, 241, 0, 0, 0, 1134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1134, 0, 0, 0, 0, 241, 1205, 2791,
	1304, 2793, 1304, 0, 2796, 243, 0, 0, 0, 1205,
	1205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1322, 0, 0, 0, 0, 0,
	1322, 0, 0, 0, 1322, 0, 0, 1437, 0, 0,
	0, 0, 0, 0, 0, 2824, 1205, 0, 1322, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1134,
	1134, 0, 0, 0, 0, 0, 0, 0, 0, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 1130, 1130,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 1633, 1634, 0,
	1666, 1667, 1668, 1676, 1677, 1678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 243, 0, 1636, 1205, 0, 0,
	0, 0, 0, 0, 1682, 0, 0, 1205, 1205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1205, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 1652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 1134, 0, 1134,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 241, 0, 1134, 1134, 1633,
	1634, 0, 1666, 1667, 1668, 1676, 1677, 1678, 1134, 0,
	0, 243, 0, 0, 241, 0, 0, 0, 0, 0,
	1134, 1664, 1134, 1134, 1134, 241, 0, 0, 1636, 1658,
	1659, 1660, 1661, 0, 0, 241, 1682, 0, 0, 1641,
	0, 0, 0, 241, 0, 0, 0, 0, 241, 0,
	0, 0, 241, 1203, 3048, 0, 0, 1203, 0, 0,
	0, 1323, 1635, 0, 0, 0, 0, 0, 1673, 0,
	0, 1683, 1655, 1130, 0, 0, 0, 1663, 1665, 0,
	1652, 0, 1202, 0, 0, 0, 0, 0, 3092, 3094,
	0, 2041, 0, 687, 1323, 0, 0, 0, 687, 0,
	0, 0, 1650, 1651, 0, 0, 0, 0, 0, 0,
	0, 1322, 0, 0, 0, 0, 0, 1323, 0, 0,
	1671, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 1656, 0, 0, 0, 1202, 0, 1853, 1853, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1658, 1659, 1660, 1661, 0, 0, 0, 0, 0,
	1323, 1641, 0, 0, 0, 0, 1323, 0, 0, 0,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 3163, 0, 0, 0, 3167,
	1673, 0, 0, 1683, 0, 0, 0, 0, 0, 1663,
	1665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1679, 0, 1680, 0, 0,
	0, 0, 0, 0, 1650, 1651, 1134, 0, 0, 0,
	0, 1662, 0, 1437, 0, 0, 1323, 1304, 1304, 0,
	0, 0, 1671, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 0, 1656, 0, 0, 0, 1130, 0, 0,
	0, 0, 0, 0, 3225, 1130, 0, 0, 0, 0,
	0, 0, 1322, 1322, 0, 0, 1674, 0, 1797, 0,
	0, 0, 1202, 1681, 0, 0, 0, 0, 1134, 0,
	0, 0, 0, 0, 0, 1134, 0, 0, 0, 0,
	0, 0, 0, 0, 1134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3262, 0, 1304, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 241, 0,
	3274, 0, 0, 1662, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 1672, 0, 1657, 0, 1647, 1648, 1654, 1675, 1653,
	1649, 0, 1646, 1644, 1645, 1637, 1638, 1639, 1640, 1642,
	1643, 0, 1134, 0, 0, 0, 0, 0, 1674, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1322, 0, 1322, 1134, 1322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1322, 1322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1322, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1322, 0, 1322, 1322, 1322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 1672, 0, 1134, 0, 1647, 1648, 1654,
	1675, 1653, 1649, 0, 1646, 1644, 1645, 1637, 1638, 1639,
	1640, 1642, 1643, 0, 0, 0, 0, 0, 1203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1202, 0, 0, 0, 0, 0, 0, 0,
	0, 1134, 1134, 0, 1134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1134, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 1202,
	0, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 241, 241, 3519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 3533, 0, 0, 1323, 1323,
	0, 0, 0, 0, 0, 0, 0, 0, 1203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 847, 0, 890, 0, 1202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 855,
	0, 0, 0, 0, 1202, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 869, 853, 852, 3582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 854, 0, 241, 0, 0, 857,
	0, 0, 0, 0, 898, 0, 0, 0, 0, 0,
	0, 0, 866, 867, 0, 0, 0, 0, 0, 0,
	0, 883, 0, 0, 0, 1322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 891, 859, 0,
	0, 0, 0, 0, 0, 0, 1323, 0, 1323, 0,
	1323, 0, 0, 0, 0, 0, 1202, 0, 0, 0,
	0, 0, 0, 0, 860, 0, 1323, 1323, 241, 0,
	0, 0, 0, 889, 0, 0, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 1323,
	0, 1323, 1323, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 862,
	0, 0, 0, 0, 1202, 0, 0, 851, 1134, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 1322, 0,
	0, 0, 0, 1134, 0, 863, 864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1134, 0, 871, 870, 0, 0, 0, 0, 0,
	0, 865, 0, 1134, 0, 880, 1134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3705, 0, 0, 0,
	895, 0, 0, 1853, 0, 0, 0, 1134, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	892, 0, 0, 0, 0, 0, 0, 0, 1203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1322, 1322, 0, 1322, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1322,
	0, 0, 0, 2041, 0, 1134, 0, 0, 0, 0,
	858, 0, 3773, 897, 1322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 856, 0,
	0, 0, 887, 888, 0, 0, 0, 0, 0, 0,
	1134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1134, 0, 0, 0, 0, 1203, 0, 0, 0, 1134,
	0, 0, 885, 0, 1134, 0, 0, 0, 0, 896,
	881, 0, 874, 872, 0, 877, 0, 0, 0, 0,
	0, 878, 0, 0, 849, 1134, 893, 0, 0, 0,
	0, 1134, 0, 1134, 0, 0, 0, 1134, 0, 0,
	0, 0, 0, 0, 0, 0, 850, 0, 0, 0,
	0, 0, 0, 0, 0, 1134, 0, 879, 0, 0,
	0, 0, 876, 0, 1203, 1134, 0, 0, 0, 0,
	0, 0, 894, 0, 0, 0, 0, 0, 0, 0,
	882, 1134, 0, 0, 0, 0, 0, 0, 0, 861,
	1203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3858, 0, 0, 884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1134, 1134, 0, 886, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1134, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1134, 0, 0, 1134, 0, 0, 0, 0, 0, 0,
	0, 0, 1203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3970,
	1304, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1203, 0, 0, 0, 1134, 0, 0, 0, 0, 0,
	0, 0, 1202, 0, 1323, 0, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1202,
	1853, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 4037,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 1323, 0, 1323, 0, 0, 0, 0, 1134, 1134,
	0, 0, 0, 0, 0, 1323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1322, 0,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4078, 0, 1322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1202, 0, 0, 0, 0, 4100, 0,
	0, 0, 1322, 0, 0, 0, 0, 1322, 0, 0,
	0, 0, 0, 0, 0, 0, 4112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1322, 0,
	0, 0, 0, 0, 1322, 0, 1322, 0, 0, 0,
	1202, 0, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1322, 1322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1322, 0,
	0, 0, 0, 1134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1134, 1134, 1134, 0, 0, 0, 0, 0,
	0, 0, 0, 1202, 0, 0, 1202, 0, 1134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1202, 1203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1134, 0, 0,
	0, 0, 0, 0, 0, 1134, 0, 0, 0, 1134,
	0, 1134, 0, 0, 0, 0, 0, 0, 1134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1323,
	0, 0, 0, 0, 1134, 0, 0, 0, 0, 1203,
	0, 0, 1134, 0, 0, 0, 0, 0, 1323, 0,
	0, 0, 0, 1323, 0, 1633, 1634, 0, 1666, 1667,
	1668, 1676, 1677, 1678, 0, 0, 0, 0, 0, 0,
	1134, 1134, 0, 0, 1323, 0, 1669, 1664, 0, 0,
	1323, 0, 1323, 0, 1636, 0, 1203, 0, 0, 0,
	0, 0, 1682, 0, 0, 0, 0, 0, 1134, 0,
	0, 0, 0, 1134, 1323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1655, 0,
	0, 0, 0, 0, 0, 0, 1652, 0, 0, 0,
	1134, 1134, 1134, 0, 1322, 0, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1323, 1323, 0, 0, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1322, 0, 0, 1323, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 1658, 1659, 1660,
	1661, 0, 0, 0, 0, 0, 0, 1641, 0, 0,
	0, 0, 1134, 0, 1134, 1322, 1322, 1322, 0, 1203,
	0, 0, 1203, 0, 0, 0, 0, 0, 1134, 0,
	0, 1322, 0, 0, 0, 0, 1673, 0, 0, 1683,
	0, 0, 0, 0, 0, 1663, 1665, 0, 0, 0,
	1202, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 1679, 0, 1680, 0, 0, 0, 0, 0, 0,
	1650, 1651, 1202, 0, 0, 0, 0, 0, 0, 0,
	1134, 0, 0, 0, 0, 0, 0, 0, 1671, 0,
	0, 1134, 1134, 1203, 0, 0, 0, 0, 0, 1656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1134, 1681,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 1202, 0, 1202, 0, 0, 0, 0, 1662,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1202, 0, 1657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1203, 0, 0, 0, 1674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1202, 0, 0,
	0, 0, 0, 0, 0, 1202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1134,
	1134, 0, 0, 1322, 1322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1202, 0, 0, 0, 0, 1322, 0, 0, 1672,
	0, 0, 0, 1647, 1648, 1654, 1675, 1653, 1649, 0,
	1646, 1644, 1645, 1637, 1638, 1639, 1640, 1642, 1643, 0,
	0, 0, 0, 0, 0, 0, 0, 3292, 0, 0,
	1323, 0, 0, 1322, 1322, 1322, 0, 0, 0, 0,
	0, 0, 0, 0, 1202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1202, 0, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 1633, 1634, 0, 1666, 1667,
	1668, 1676, 1677, 1678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 1664, 0, 0,
	0, 1323, 1323, 1323, 1636, 1202, 0, 1322, 0, 0,
	0, 0, 1682, 0, 0, 0, 0, 1323, 0, 0,
	0, 1202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1655, 0,
	0, 0, 0, 0, 0, 0, 1652, 0, 1203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1322, 1322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1202, 0, 0, 1322, 0, 0, 1658, 1659, 1660,
	1661, 0, 0, 0, 0, 0, 0, 1641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1633, 1634, 0, 1666, 1667, 1668, 1676, 1677, 1678, 0,
	0, 0, 0, 0, 0, 0, 1673, 0, 0, 1683,
	0, 1669, 1664, 0, 0, 1663, 1665, 0, 1203, 1636,
	1203, 0, 0, 0, 0, 0, 0, 1682, 0, 0,
	0, 1679, 0, 1680, 0, 0, 0, 0, 0, 0,
	1650, 1651, 0, 1203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1635, 0, 0, 0, 0, 1671, 0,
	0, 0, 0, 1655, 0, 0, 0, 0, 0, 1656,
	0, 1652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1203, 0, 0, 0, 0, 0, 1681,
	0, 1203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 1322, 0, 0, 0, 0, 0, 0, 1323,
	1323, 0, 1322, 1322, 0, 0, 0, 0, 0, 0,
	0, 0, 1658, 1659, 1660, 1661, 0, 0, 0, 1322,
	0, 0, 1641, 0, 0, 0, 0, 1203, 0, 0,
	0, 0, 1323, 0, 0, 0, 0, 0, 0, 1662,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1673, 0, 0, 1683, 0, 0, 0, 0, 1657,
	1663, 1665, 0, 0, 0, 0, 0, 0, 0, 1323,
	1323, 1323, 0, 0, 0, 0, 1679, 0, 1680, 0,
	1203, 0, 0, 0, 1674, 1650, 1651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1671, 0, 0, 0, 0, 0, 0,
	1203, 0, 0, 0, 1656, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1681, 0, 0, 0, 0, 0,
	0, 1203, 0, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 1670, 0, 0, 0, 0, 1203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1672,
	0, 0, 0, 1647, 1648, 1654, 1675, 1653, 1649, 0,
	1646, 1644, 1645, 1637, 1638, 1639, 1640, 1642, 1643, 0,
	0, 0, 0, 0, 0, 0, 0, 2894, 0, 0,
	0, 0, 0, 0, 1662, 0, 0, 0, 0, 1203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 1323, 0, 0, 1657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1674,
	0, 0, 0, 0, 0, 0, 0, 1203, 0, 0,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1672, 0, 0, 0, 1647, 1648,
	1654, 1675, 1653, 1649, 0, 1646, 1644, 1645, 1637, 1638,
	1639, 1640, 1642, 1643, 0, 0, 0, 0, 0, 0,
	0, 0, 2893, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1200, 0, 1323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1323, 1323,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 1206,
	257, 258, 1207, 1208, 1209, 1323, 1210, 549, 1211, 1212,
	1213, 1214, 259, 260, 262, 261, 263, 264, 265, 266,
	550, 551, 0, 267, 552, 268, 553, 1215, 554, 269,
	270, 271, 272, 273, 274, 1216, 1217, 0, 275, 555,
	556, 557, 1218, 276, 277, 558, 1219, 1286, 1220, 278,
	279, 280, 281, 282, 283, 284, 0, 1221, 286, 287,
	288, 285, 1222, 289, 0, 290, 291, 292, 293, 294,
	295, 1223, 296, 297, 298, 1075, 299, 300, 1224, 1225,
	1227, 1226, 1228, 1229, 1230, 301, 302, 303, 304, 0,
	305, 559, 560, 1231, 309, 306, 307, 1232, 310, 308,
	1233, 311, 312, 313, 1234, 1235, 314, 315, 316, 1236,
	317, 318, 1237, 319, 320, 321, 1238, 322, 323, 561,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	562, 563, 1239, 248, 1240, 0, 0, 0, 0, 335,
	336, 337, 564, 0, 0, 0, 338, 1241, 339, 1242,
	1243, 1076, 340, 341, 565, 566, 342, 343, 1244, 344,
	567, 1245, 568, 345, 1246, 346, 347, 348, 349, 350,
	569, 570, 571, 413, 1078, 351, 352, 1247, 353, 354,
	355, 356, 0, 0, 0, 249, 357, 358, 360, 1248,
	1077, 359, 572, 573, 1249, 574, 1250, 361, 362, 1079,
	575, 1080, 363, 364, 365, 1081, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 1251, 373, 375, 374,
	1252, 376, 576, 1082, 377, 378, 1083, 1253, 379, 380,
	381, 1254, 1255, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	396, 1084, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 1085, 401, 1256, 250, 1086, 410, 411,
	1257, 577, 412, 578, 414, 415, 1258, 0, 416, 0,
	1259, 1260, 418, 419, 420, 1261, 1262, 421, 422, 579,
	1087, 423, 1088, 580, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 1263, 434, 435, 581, 582,
	583, 436, 584, 437, 438, 1264, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 585, 448, 447, 449, 1265,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 1266, 460, 461, 462,
	1089, 463, 464, 465, 466, 586, 467, 0, 468, 469,
	475, 476, 470, 471, 477, 478, 479, 480, 481, 1267,
	483, 484, 482, 485, 486, 487, 1268, 488, 472, 473,
	489, 490, 1090, 491, 492, 493, 494, 495, 496, 587,
	0, 497, 1269, 498, 499, 500, 501, 474, 502, 507,
	588, 503, 504, 505, 506, 589, 1270, 509, 510, 0,
	508, 1271, 511, 512, 513, 514, 515, 516, 329, 517,
	1272, 518, 590, 591, 592, 593, 1273, 527, 1274, 519,
	520, 521, 594, 522, 595, 1275, 523, 524, 525, 526,
	0, 528, 529, 1276, 1277, 530, 531, 532, 534, 535,
	533, 536, 1278, 537, 1279, 0, 538, 539, 540, 596,
	597, 598, 1280, 542, 541, 543, 599, 1281, 1282, 1283,
	1284, 544, 545, 600, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1200, 0, 0, 0, 0, 0, 0, 0, 2446, 0,
	0, 0, 0, 0, 0, 0, 2447, 251, 252, 253,
	254, 255, 256, 1206, 257, 258, 1207, 1208, 1209, 0,
	1210, 549, 1211, 1212, 1213, 1214, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 551, 0, 267, 552, 268,
	553, 1215, 554, 269, 270, 271, 272, 273, 274, 1216,
	1217, 0, 275, 555, 556, 557, 1218, 276, 277, 558,
	1219, 1286, 1220, 278, 279, 280, 281, 282, 283, 284,
	0, 1221, 286, 287, 288, 285, 1222, 289, 0, 290,
	291, 292, 293, 294, 295, 1223, 296, 297, 298, 1075,
	299, 300, 1224, 1225, 1227, 1226, 1228, 1229, 1230, 301,
	302, 303, 304, 0, 305, 559, 560, 1231, 309, 306,
	307, 1232, 310, 308, 1233, 311, 312, 313, 1234, 1235,
	314, 315, 316, 1236, 317, 318, 1237, 319, 320, 321,
	1238, 322, 323, 561, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 562, 563, 1239, 248, 1240, 0,
	0, 0, 0, 335, 336, 337, 564, 0, 0, 0,
	338, 1241, 339, 1242, 1243, 1076, 340, 341, 565, 566,
	342, 343, 1244, 344, 567, 1245, 568, 345, 1246, 346,
	347, 348, 349, 350, 569, 570, 571, 413, 1078, 351,
	352, 1247, 353, 354, 355, 356, 0, 0, 0, 249,
	357, 358, 360, 1248, 1077, 359, 572, 573, 1249, 574,
	1250, 361, 362, 1079, 575, 1080, 363, 364, 365, 1081,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	1251, 373, 375, 374, 1252, 376, 576, 1082, 377, 378,
	1083, 1253, 379, 380, 381, 1254, 1255, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 1084, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 1085, 401, 1256,
	250, 1086, 410, 411, 1257, 577, 412, 578, 414, 415,
	1258, 0, 416, 0, 1259, 1260, 418, 419, 420, 1261,
	1262, 421, 422, 579, 1087, 423, 1088, 580, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 1263,
	434, 435, 581, 582, 583, 436, 584, 437, 438, 1264,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 585,
	448, 447, 449, 1265, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	1266, 460, 461, 462, 1089, 463, 464, 465, 466, 586,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 1267, 483, 484, 482, 485, 486, 487,
	1268, 488, 472, 473, 489, 490, 1090, 491, 492, 493,
	494, 495, 496, 587, 0, 497, 1269, 498, 499, 500,
	501, 474, 502, 507, 588, 503, 504, 505, 506, 589,
	1270, 509, 510, 0, 508, 1271, 511, 512, 513, 514,
	515, 516, 329, 517, 1272, 518, 590, 591, 592, 593,
	1273, 527, 1274, 519, 520, 521, 594, 522, 595, 1275,
	523, 524, 525, 526, 0, 528, 529, 1276, 1277, 530,
	531, 532, 534, 535, 533, 536, 1278, 537, 1279, 0,
	538, 539, 540, 596, 597, 598, 1280, 542, 541, 543,
	599, 1281, 1282, 1283, 1284, 544, 545, 600, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1200, 0, 0, 0, 0, 3300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3302, 251,
	252, 253, 254, 255, 256, 1206, 257, 258, 1207, 1208,
	1209, 0, 1210, 549, 1211, 1212, 1213, 1214, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 551, 0, 267,
	552, 268, 553, 1215, 554, 269, 270, 271, 272, 273,
	274, 1216, 1217, 0, 275, 555, 556, 557, 1218, 276,
	277, 558, 1219, 1286, 1220, 278, 279, 280, 281, 282,
	283, 284, 0, 1221, 286, 287, 288, 285, 1222, 289,
	0, 290, 291, 292, 293, 294, 295, 1223, 296, 297,
	298, 1075, 299, 300, 1224, 1225, 1227, 1226, 1228, 1229,
	1230, 301, 302, 303, 304, 0, 305, 559, 560, 1231,
	309, 306, 307, 1232, 310, 308, 1233, 311, 312, 313,
	1234, 1235, 314, 315, 316, 1236, 317, 318, 1237, 319,
	320, 321, 1238, 322, 323, 561, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 562, 563, 1239, 248,
	1240, 0, 0, 0, 0, 335, 336, 337, 564, 0,
	0, 0, 338, 1241, 339, 1242, 1243, 1076, 340, 341,
	565, 566, 342, 343, 1244, 344, 567, 1245, 568, 345,
	1246, 346, 347, 348, 349, 350, 569, 570, 571, 413,
	1078, 351, 352, 1247, 353, 354, 355, 356, 0, 0,
	0, 249, 357, 358, 360, 1248, 1077, 359, 572, 573,
	1249, 574, 1250, 361, 362, 1079, 575, 1080, 363, 364,
	365, 1081, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 1251, 373, 375, 374, 1252, 376, 576, 1082,
	377, 378, 1083, 1253, 379, 380, 381, 1254, 1255, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 396, 1084, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 1085,
	401, 1256, 250, 1086, 410, 411, 1257, 577, 412, 578,
	414, 415, 1258, 0, 416, 0, 1259, 1260, 418, 419,
	420, 1261, 1262, 421, 422, 579, 1087, 423, 1088, 580,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 1263, 434, 435, 581, 582, 583, 436, 584, 437,
	438, 1264, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 585, 448, 447, 449, 1265, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 1266, 460, 461, 462, 1089, 463, 464, 465,
	466, 586, 467, 0, 468, 469, 475, 476, 470, 471,
	477, 478, 479, 480, 481, 1267, 483, 484, 482, 485,
	486, 487, 1268, 488, 472, 473, 489, 490, 1090, 491,
	492, 493, 494, 495, 496, 587, 0, 497, 1269, 498,
	499, 500, 501, 474, 502, 507, 588, 503, 504, 505,
	506, 589, 1270, 509, 510, 0, 508, 1271, 511, 512,
	513, 514, 515, 516, 329, 517, 1272, 518, 590, 591,
	592, 593, 1273, 527, 1274, 519, 520, 521, 594, 522,
	595, 1275, 523, 524, 525, 526, 0, 528, 529, 1276,
	1277, 530, 531, 532, 534, 535, 533, 536, 1278, 537,
	1279, 0, 538, 539, 540, 596, 597, 598, 1280, 542,
	541, 543, 599, 1281, 1282, 1283, 1284, 544, 545, 600,
	546, 547, 548, 0, 0, 0, 0, 0, 1200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3653, 251, 252, 253, 254, 255,
	256, 1206, 257, 258, 1207, 1208, 1209, 0, 1210, 549,
	1211, 1212, 1213, 1214, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 551, 0, 267, 552, 268, 553, 1215,
	554, 269, 270, 271, 272, 273, 274, 1216, 1217, 0,
	275, 555, 556, 557, 1218, 276, 277, 558, 1219, 1286,
	1220, 278, 279, 280, 281, 282, 283, 284, 0, 1221,
	286, 287, 288, 285, 1222, 289, 0, 290, 291, 292,
	293, 294, 295, 1223, 296, 297, 298, 1075, 299, 300,
	1224, 1225, 1227, 1226, 1228, 1229, 1230, 301, 302, 303,
	304, 0, 305, 559, 560, 1231, 309, 306, 307, 1232,
	310, 308, 1233, 311, 312, 313, 1234, 1235, 314, 315,
	316, 1236, 317, 318, 1237, 319, 320, 321, 1238, 322,
	323, 561, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 562, 563, 1239, 248, 1240, 0, 0, 0,
	0, 335, 336, 337, 564, 0, 0, 0, 338, 1241,
	339, 1242, 1243, 1076, 340, 341, 565, 566, 342, 343,
	1244, 344, 567, 1245, 568, 345, 1246, 346, 347, 348,
	349, 350, 569, 570, 571, 413, 1078, 351, 352, 1247,
	353, 354, 355, 356, 0, 0, 0, 249, 357, 358,
	360, 1248, 1077, 359, 572, 573, 1249, 574, 1250, 361,
	362, 1079, 575, 1080, 363, 364, 365, 1081, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 1251, 373,
	375, 374, 1252, 376, 576, 1082, 377, 378, 1083, 1253,
	379, 380, 381, 1254, 1255, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 1084, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 1085, 401, 1256, 250, 1086,
	410, 411, 1257, 577, 412, 578, 414, 415, 1258, 0,
	416, 0, 1259, 1260, 418, 419, 420, 1261, 1262, 421,
	422, 579, 1087, 423, 1088, 580, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 1263, 434, 435,
	581, 582, 583, 436, 584, 437, 438, 1264, 439, 0,
	440, 441, 442, 443, 444, 445, 446, 585, 448, 447,
	449, 1265, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 1266, 460,
	461, 462, 1089, 463, 464, 465, 466, 586, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 478, 479, 480,
	481, 1267, 483, 484, 482, 485, 486, 487, 1268, 488,
	472, 473, 489, 490, 1090, 491, 492, 493, 494, 495,
	496, 587, 0, 497, 1269, 498, 499, 500, 501, 474,
	502, 507, 588, 503, 504, 505, 506, 589, 1270, 509,
	510, 0, 508, 1271, 511, 512, 513, 514, 515, 516,
	329, 517, 1272, 518, 590, 591, 592, 593, 1273, 527,
	1274, 519, 520, 521, 594, 522, 595, 1275, 523, 524,
	525, 526, 0, 528, 529, 1276, 1277, 530, 531, 532,
	534, 535, 533, 536, 1278, 537, 1279, 0, 538, 539,
	540, 596, 597, 598, 1280, 542, 541, 543, 599, 1281,
	1282, 1283, 1284, 544, 545, 600, 546, 547, 548, 1200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3823, 251, 252, 253, 254,
	255, 256, 1206, 257, 258, 1207, 1208, 1209, 0, 1210,
	549, 1211, 1212, 1213, 1214, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	1215, 554, 269, 270, 271, 272, 273, 274, 1216, 1217,
	0, 275, 555, 556, 557, 1218, 276, 277, 558, 1219,
	1286, 1220, 278, 279, 280, 281, 282, 283, 284, 0,
	1221, 286, 287, 288, 285, 1222, 289, 0, 290, 291,
	292, 293, 294, 295, 1223, 296, 297, 298, 1075, 299,
	300, 1224, 1225, 1227, 1226, 1228, 1229, 1230, 301, 302,
	303, 304, 0, 305, 559, 560, 1231, 309, 306, 307,
	1232, 310, 308, 1233, 311, 312, 313, 1234, 1235, 314,
	315, 316, 1236, 317, 318, 1237, 319, 320, 321, 1238,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 1239, 248, 1240, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	1241, 339, 1242, 1243, 1076, 340, 341, 565, 566, 342,
	343, 1244, 344, 567, 1245, 568, 345, 1246, 346, 347,
	348, 349, 350, 569, 570, 571, 413, 1078, 351, 352,
	1247, 353, 354, 355, 356, 0, 0, 0, 249, 357,
	358, 360, 1248, 1077, 359, 572, 573, 1249, 574, 1250,
	361, 362, 1079, 575, 1080, 363, 364, 365, 1081, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 1251,
	373, 375, 374, 1252, 376, 576, 1082, 377, 378, 1083,
	1253, 379, 380, 381, 1254, 1255, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 1084, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 1085, 401, 1256, 250,
	1086, 410, 411, 1257, 577, 412, 578, 414, 415, 1258,
	0, 416, 0, 1259, 1260, 418, 419, 420, 1261, 1262,
	421, 422, 579, 1087, 423, 1088, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 1263, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 1264, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 1265, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 1266,
	460, 461, 462, 1089, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 1267, 483, 484, 482, 485, 486, 487, 1268,
	488, 472, 473, 489, 490, 1090, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 1269, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 1270,
	509, 510, 0, 508, 1271, 511, 512, 513, 514, 515,
	516, 329, 517, 1272, 518, 590, 591, 592, 593, 1273,
	527, 1274, 519, 520, 521, 594, 522, 595, 1275, 523,
	524, 525, 526, 0, 528, 529, 1276, 1277, 530, 531,
	532, 534, 535, 533, 536, 1278, 537, 1279, 0, 538,
	539, 540, 596, 597, 598, 1280, 542, 541, 543, 599,
	1281, 1282, 1283, 1284, 544, 545, 600, 546, 547, 548,
	1200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3713, 251, 252, 253,
	254, 255, 256, 1206, 257, 258, 1207, 1208, 1209, 0,
	1210, 549, 1211, 1212, 1213, 1214, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 551, 0, 267, 552, 268,
	553, 1215, 554, 269, 270, 271, 272, 273, 274, 1216,
	1217, 0, 275, 555, 556, 557, 1218, 276, 277, 558,
	1219, 1286, 1220, 278, 279, 280, 281, 282, 283, 284,
	0, 1221, 286, 287, 288, 285, 1222, 289, 0, 290,
	291, 292, 293, 294, 295, 1223, 296, 297, 298, 1075,
	299, 300, 1224, 1225, 1227, 1226, 1228, 1229, 1230, 301,
	302, 303, 304, 0, 305, 559, 560, 1231, 309, 306,
	307, 1232, 310, 308, 1233, 311, 312, 313, 1234, 1235,
	314, 315, 316, 1236, 317, 318, 1237, 319, 320, 321,
	1238, 322, 323, 561, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 562, 563, 1239, 248, 1240, 0,
	0, 0, 0, 335, 336, 337, 564, 0, 0, 0,
	338, 1241, 339, 1242, 1243, 1076, 340, 341, 565, 566,
	342, 343, 1244, 344, 567, 1245, 568, 345, 1246, 346,
	347, 348, 349, 350, 569, 570, 571, 413, 1078, 351,
	352, 1247, 353, 354, 355, 356, 0, 0, 0, 249,
	357, 358, 360, 1248, 1077, 359, 572, 573, 1249, 574,
	1250, 361, 362, 1079, 575, 1080, 363, 364, 365, 1081,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	1251, 373, 375, 374, 1252, 376, 576, 1082, 377, 378,
	1083, 1253, 379, 380, 381, 1254, 1255, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 1084, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 1085, 401, 1256,
	250, 1086, 410, 411, 1257, 577, 412, 578, 414, 415,
	1258, 0, 416, 0, 1259, 1260, 418, 419, 420, 1261,
	1262, 421, 422, 579, 1087, 423, 1088, 580, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 1263,
	434, 435, 581, 582, 583, 436, 584, 437, 438, 1264,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 585,
	448, 447, 449, 1265, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	1266, 460, 461, 462, 1089, 463, 464, 465, 466, 586,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 1267, 483, 484, 482, 485, 486, 487,
	1268, 488, 472, 473, 489, 490, 1090, 491, 492, 493,
	494, 495, 496, 587, 0, 497, 1269, 498, 499, 500,
	501, 474, 502, 507, 588, 503, 504, 505, 506, 589,
	1270, 509, 510, 0, 508, 1271, 511, 512, 513, 514,
	515, 516, 329, 517, 1272, 518, 590, 591, 592, 593,
	1273, 527, 1274, 519, 520, 521, 594, 522, 595, 1275,
	523, 524, 525, 526, 0, 528, 529, 1276, 1277, 530,
	531, 532, 534, 535, 533, 536, 1278, 537, 1279, 0,
	538, 539, 540, 596, 597, 598, 1280, 542, 541, 543,
	599, 1281, 1282, 1283, 1284, 544, 545, 600, 546, 547,
	548, 1200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3583, 251, 252,
	253, 254, 255, 256, 1206, 257, 258, 1207, 1208, 1209,
	0, 1210, 549, 1211, 1212, 1213, 1214, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 1215, 554, 269, 270, 271, 272, 273, 274,
	1216, 1217, 0, 275, 555, 556, 557, 1218, 276, 277,
	558, 1219, 1286, 1220, 278, 279, 280, 281, 282, 283,
	284, 0, 1221, 286, 287, 288, 285, 1222, 289, 0,
	290, 291, 292, 293, 294, 295, 1223, 296, 297, 298,
	1075, 299, 300, 1224, 1225, 1227, 1226, 1228, 1229, 1230,
	301, 302, 303, 304, 0, 305, 559, 560, 1231, 309,
	306, 307, 1232, 310, 308, 1233, 311, 312, 313, 1234,
	1235, 314, 315, 316, 1236, 317, 318, 1237, 319, 320,
	321, 1238, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 562, 563, 1239, 248, 1240,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 1241, 339, 1242, 1243, 1076, 340, 341, 565,
	566, 342, 343, 1244, 344, 567, 1245, 568, 345, 1246,
	346, 347, 348, 349, 350, 569, 570, 571, 413, 1078,
	351, 352, 1247, 353, 354, 355, 356, 0, 0, 0,
	249, 357, 358, 360, 1248, 1077, 359, 572, 573, 1249,
	574, 1250, 361, 362, 1079, 575, 1080, 363, 364, 365,
	1081, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 1251, 373, 375, 374, 1252, 376, 576, 1082, 377,
	378, 1083, 1253, 379, 380, 381, 1254, 1255, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 1084, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 1085, 401,
	1256, 250, 1086, 410, 411, 1257, 577, 412, 578, 414,
	415, 1258, 0, 416, 0, 1259, 1260, 418, 419, 420,
	1261, 1262, 421, 422, 579, 1087, 423, 1088, 580, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	1263, 434, 435, 581, 582, 583, 436, 584, 437, 438,
	1264, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 1265, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 1266, 460, 461, 462, 1089, 463, 464, 465, 466,
	586, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 1267, 483, 484, 482, 485, 486,
	487, 1268, 488, 472, 473, 489, 490, 1090, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 1269, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	589, 1270, 509, 510, 0, 508, 1271, 511, 512, 513,
	514, 515, 516, 329, 517, 1272, 518, 590, 591, 592,
	593, 1273, 527, 1274, 519, 520, 521, 594, 522, 595,
	1275, 523, 524, 525, 526, 0, 528, 529, 1276, 1277,
	530, 531, 532, 534, 535, 533, 536, 1278, 537, 1279,
	0, 538, 539, 540, 596, 597, 598, 1280, 542, 541,
	543, 599, 1281, 1282, 1283, 1284, 544, 545, 600, 546,
	547, 548, 1200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3318, 251,
	252, 253, 254, 255, 256, 1206, 257, 258, 1207, 1208,
	1209, 0, 1210, 549, 1211, 1212, 1213, 1214, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 551, 0, 267,
	552, 268, 553, 1215, 554, 269, 270, 271, 272, 273,
	274, 1216, 1217, 0, 275, 555, 556, 557, 1218, 276,
	277, 558, 1219, 1286, 1220, 278, 279, 280, 281, 282,
	283, 284, 0, 1221, 286, 287, 288, 285, 1222, 289,
	0, 290, 291, 292, 293, 294, 295, 1223, 296, 297,
	298, 1075, 299, 300, 1224, 1225, 1227, 1226, 1228, 1229,
	1230, 301, 302, 303, 304, 0, 305, 559, 560, 1231,
	309, 306, 307, 1232, 310, 308, 1233, 311, 312, 313,
	1234, 1235, 314, 315, 316, 1236, 317, 318, 1237, 319,
	320, 321, 1238, 322, 323, 561, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 562, 563, 1239, 248,
	1240, 0, 0, 0, 0, 335, 336, 337, 564, 0,
	0, 0, 338, 1241, 339, 1242, 1243, 1076, 340, 341,
	565, 566, 342, 343, 1244, 344, 567, 1245, 568, 345,
	1246, 346, 347, 348, 349, 350, 569, 570, 571, 413,
	1078, 351, 352, 1247, 353, 354, 355, 356, 0, 0,
	0, 249, 357, 358, 360, 1248, 1077, 359, 572, 573,
	1249, 574, 1250, 361, 362, 1079, 575, 1080, 363, 364,
	365, 1081, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 1251, 373, 375, 374, 1252, 376, 576, 1082,
	377, 378, 1083, 1253, 379, 380, 381, 1254, 1255, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 396, 1084, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 1085,
	401, 1256, 250, 1086, 410, 411, 1257, 577, 412, 578,
	414, 415, 1258, 0, 416, 0, 1259, 1260, 418, 419,
	420, 1261, 1262, 421, 422, 579, 1087, 423, 1088, 580,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 1263, 434, 435, 581, 582, 583, 436, 584, 437,
	438, 1264, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 585, 448, 447, 449, 1265, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 1266, 460, 461, 462, 1089, 463, 464, 465,
	466, 586, 467, 0, 468, 469, 475, 476, 470, 471,
	477, 478, 479, 480, 481, 1267, 483, 484, 482, 485,
	486, 487, 1268, 488, 472, 473, 489, 490, 1090, 491,
	492, 493, 494, 495, 496, 587, 0, 497, 1269, 498,
	499, 500, 501, 474, 502, 507, 588, 503, 504, 505,
	506, 589, 1270, 509, 510, 0, 508, 1271, 511, 512,
	513, 514, 515, 516, 329, 517, 1272, 518, 590, 591,
	592, 593, 1273, 527, 1274, 519, 520, 521, 594, 522,
	595, 1275, 523, 524, 525, 526, 0, 528, 529, 1276,
	1277, 530, 531, 532, 534, 535, 533, 536, 1278, 537,
	1279, 0, 538, 539, 540, 596, 597, 598, 1280, 542,
	541, 543, 599, 1281, 1282, 1283, 1284, 544, 545, 600,
	546, 547, 548, 1200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3148,
	251, 252, 253, 254, 255, 256, 1206, 257, 258, 1207,
	1208, 1209, 0, 1210, 549, 1211, 1212, 1213, 1214, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 551, 0,
	267, 552, 268, 553, 1215, 554, 269, 270, 271, 272,
	273, 274, 1216, 1217, 0, 275, 555, 556, 557, 1218,
	276, 277, 558, 1219, 1286, 1220, 278, 279, 280, 281,
	282, 283, 284, 0, 1221, 286, 287, 288, 285, 1222,
	289, 0, 290, 291, 292, 293, 294, 295, 1223, 296,
	297, 298, 1075, 299, 300, 1224, 1225, 1227, 1226, 1228,
	1229, 1230, 301, 302, 303, 304, 0, 305, 559, 560,
	1231, 309, 306, 307, 1232, 310, 308, 1233, 311, 312,
	313, 1234, 1235, 314, 315, 316, 1236, 317, 318, 1237,
	319, 320, 321, 1238, 322, 323, 561, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 562, 563, 1239,
	248, 1240, 0, 0, 0, 0, 335, 336, 337, 564,
	0, 0, 0, 338, 1241, 339, 1242, 1243, 1076, 340,
	341, 565, 566, 342, 343, 1244, 344, 567, 1245, 568,
	345, 1246, 346, 347, 348, 349, 350, 569, 570, 571,
	413, 1078, 351, 352, 1247, 353, 354, 355, 356, 0,
	0, 0, 249, 357, 358, 360, 1248, 1077, 359, 572,
	573, 1249, 574, 1250, 361, 362, 1079, 575, 1080, 363,
	364, 365, 1081, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 1251, 373, 375, 374, 1252, 376, 576,
	1082, 377, 378, 1083, 1253, 379, 380, 381, 1254, 1255,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 1084, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	1085, 401, 1256, 250, 1086, 410, 411, 1257, 577, 412,
	578, 414, 415, 1258, 0, 416, 0, 1259, 1260, 418,
	419, 420, 1261, 1262, 421, 422, 579, 1087, 423, 1088,
	580, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 1263, 434, 435, 581, 582, 583, 436, 584,
	437, 438, 1264, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 585, 448, 447, 449, 1265, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 1266, 460, 461, 462, 1089, 463, 464,
	465, 466, 586, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 1267, 483, 484, 482,
	485, 486, 487, 1268, 488, 472, 473, 489, 490, 1090,
	491, 492, 493, 494, 495, 496, 587, 0, 497, 1269,
	498, 499, 500, 501, 474, 502, 507, 588, 503, 504,
	505, 506, 589, 1270, 509, 510, 0, 508, 1271, 511,
	512, 513, 514, 515, 516, 329, 517, 1272, 518, 590,
	591, 592, 593, 1273, 527, 1274, 519, 520, 521, 594,
	522, 595, 1275, 523, 524, 525, 526, 0, 528, 529,
	1276, 1277, 530, 531, 532, 534, 535, 533, 536, 1278,
	537, 1279, 0, 538, 539, 540, 596, 597, 598, 1280,
	542, 541, 543, 599, 1281, 1282, 1283, 1284, 544, 545,
	600, 546, 547, 548, 1200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2329, 251, 252, 253, 254, 255, 256, 1206, 257, 258,
	1207, 1208, 1209, 0, 1210, 549, 1211, 1212, 1213, 1214,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 551,
	0, 267, 552, 268, 553, 1215, 554, 269, 270, 271,
	272, 273, 274, 1216, 1217, 0, 275, 555, 556, 557,
	1218, 276, 277, 558, 1219, 1286, 1220, 278, 279, 280,
	281, 282, 283, 284, 0, 1221, 286, 287, 288, 285,
	1222, 289, 0, 290, 291, 292, 293, 294, 295, 1223,
	296, 297, 298, 1075, 299, 300, 1224, 1225, 1227, 1226,
	1228, 1229, 1230, 301, 302, 303, 304, 0, 305, 559,
	560, 1231, 309, 306, 307, 1232, 310, 308, 1233, 311,
	312, 313, 1234, 1235, 314, 315, 316, 1236, 317, 318,
	1237, 319, 320, 321, 1238, 322, 323, 561, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 562, 563,
	1239, 248, 1240, 0, 0, 0, 0, 335, 336, 337,
	564, 0, 0, 0, 338, 1241, 339, 1242, 1243, 1076,
	340, 341, 565, 566, 342, 343, 1244, 344, 567, 1245,
	568, 345, 1246, 346, 347, 348, 349, 350, 569, 570,
	571, 413, 1078, 351, 352, 1247, 353, 354, 355, 356,
	0, 0, 0, 249, 357, 358, 360, 1248, 1077, 359,
	572, 573, 1249, 574, 1250, 361, 362, 1079, 575, 1080,
	363, 364, 365, 1081, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 1251, 373, 375, 374, 1252, 376,
	576, 1082, 377, 378, 1083, 1253, 379, 380, 381, 1254,
	1255, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 1084,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 1085, 401, 1256, 250, 1086, 410, 411, 1257, 577,
	412, 578, 414, 415, 1258, 0, 416, 0, 1259, 1260,
	418, 419, 420, 1261, 1262, 421, 422, 579, 1087, 423,
	1088, 580, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 1263, 434, 435, 581, 582, 583, 436,
	584, 437, 438, 1264, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 585, 448, 447, 449, 1265, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 1266, 460, 461, 462, 1089, 463,
	464, 465, 466, 586, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 1267, 483, 484,
	482, 485, 486, 487, 1268, 488, 472, 473, 489, 490,
	1090, 491, 492, 493, 494, 495, 496, 587, 0, 497,
	1269, 498, 499, 500, 501, 474, 502, 507, 588, 503,
	504, 505, 506, 589, 1270, 509, 510, 0, 508, 1271,
	511, 512, 513, 514, 515, 516, 329, 517, 1272, 518,
	590, 591, 592, 593, 1273, 527, 1274, 519, 520, 521,
	594, 522, 595, 1275, 523, 524, 525, 526, 0, 528,
	529, 1276, 1277, 530, 531, 532, 534, 535, 533, 536,
	1278, 537, 1279, 0, 538, 539, 540, 596, 597, 598,
	1280, 542, 541, 543, 599, 1281, 1282, 1283, 1284, 544,
	545, 600, 546, 547, 548, 1298, 0, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2004, 0, 0, 251, 252, 253, 254, 255, 256,
	1206, 257, 258, 1207, 1208, 1209, 0, 1210, 549, 1211,
	1212, 1213, 1214, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 1215, 554,
	269, 270, 271, 272, 273, 274, 1216, 1217, 0, 275,
	555, 556, 557, 1218, 276, 277, 558, 1219, 1286, 1220,
	278, 279, 280, 281, 282, 283, 284, 0, 1221, 286,
	287, 288, 285, 1222, 289, 0, 290, 291, 292, 293,
	294, 295, 1223, 296, 297, 298, 1075, 299, 300, 1224,
	1225, 1227, 1226, 1228, 1229, 1230, 301, 302, 303, 304,
	0, 305, 559, 560, 1231, 309, 306, 307, 1232, 310,
	308, 1233, 311, 312, 313, 1234, 1235, 314, 315, 316,
	1236, 317, 318, 1237, 319, 320, 321, 1238, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 562, 563, 1239, 248, 1240, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 1241, 339,
	1242, 1243, 1076, 340, 341, 565, 566, 342, 343, 1244,
	344, 567, 1245, 568, 345, 1246, 346, 347, 348, 349,
	350, 569, 570, 571, 413, 1078, 351, 352, 1247, 353,
	354, 355, 356, 0, 0, 0, 249, 357, 358, 360,
	1248, 1077, 359, 572, 573, 1249, 574, 1250, 361, 362,
	1079, 575, 1080, 363, 364, 365, 1081, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 1251, 373, 375,
	374, 1252, 376, 576, 1082, 377, 378, 1083, 1253, 379,
	380, 381, 1254, 1255, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 1084, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 1085, 401, 1256, 250, 1086, 410,
	411, 1257, 577, 412, 578, 414, 415, 1258, 0, 416,
	0, 1259, 1260, 418, 419, 420, 1261, 1262, 421, 422,
	579, 1087, 423, 1088, 580, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 1263, 434, 435, 581,
	582, 583, 436, 584, 437, 438, 1264, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	1265, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 1266, 460, 461,
	462, 1089, 463, 464, 465, 466, 586, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	1267, 483, 484, 482, 485, 486, 487, 1268, 488, 472,
	473, 489, 490, 1090, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 1269, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 589, 1270, 509, 510,
	0, 508, 1271, 511, 512, 513, 514, 515, 516, 329,
	517, 1272, 518, 590, 591, 592, 593, 1273, 527, 1274,
	519, 520, 521, 594, 522, 595, 1275, 523, 524, 525,
	526, 0, 528, 529, 1276, 1277, 530, 531, 532, 534,
	535, 533, 536, 1278, 537, 1279, 0, 538, 539, 540,
	596, 597, 598, 1280, 542, 541, 543, 599, 1281, 1282,
	1283, 1284, 544, 545, 600, 546, 547, 548, 1197, 0,
	1200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 1206, 257, 258, 1207, 1208, 1209, 0,
	1210, 549, 1211, 1212, 1213, 1214, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 551, 0, 267, 552, 268,
	553, 1215, 554, 269, 270, 271, 272, 273, 274, 1216,
	1217, 0, 275, 555, 556, 557, 1218, 276, 277, 558,
	1219, 1286, 1220, 278, 279, 280, 281, 282, 283, 284,
	0, 1221, 286, 287, 288, 285, 1222, 289, 0, 290,
	291, 292, 293, 294, 295, 1223, 296, 297, 298, 1075,
	299, 300, 1224, 1225, 1227, 1226, 1228, 1229, 1230, 301,
	302, 303, 304, 0, 305, 559, 560, 1231, 309, 306,
	307, 1232, 310, 308, 1233, 311, 312, 313, 1234, 1235,
	314, 315, 316, 1236, 317, 318, 1237, 319, 320, 321,
	1238, 322, 323, 561, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 562, 563, 1239, 248, 1240, 0,
	0, 0, 0, 335, 336, 337, 564, 0, 0, 0,
	338, 1241, 339, 1242, 1243, 1076, 340, 341, 565, 566,
	342, 343, 1244, 344, 567, 1245, 568, 345, 1246, 346,
	347, 348, 349, 350, 569, 570, 571, 413, 1078, 351,
	352, 1247, 353, 354, 355, 356, 0, 0, 0, 249,
	357, 358, 360, 1248, 1077, 359, 572, 573, 1249, 574,
	1250, 361, 362, 1079, 575, 1080, 363, 364, 365, 1081,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	1251, 373, 375, 374, 1252, 376, 576, 1082, 377, 378,
	1083, 1253, 379, 380, 381, 1254, 1255, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 1084, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 1085, 401, 1256,
	250, 1086, 410, 411, 1257, 577, 412, 578, 414, 415,
	1258, 0, 416, 0, 1259, 1260, 418, 419, 420, 1261,
	1262, 421, 422, 579, 1087, 423, 1088, 580, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 1263,
	434, 435, 581, 582, 583, 436, 584, 437, 438, 1264,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 585,
	448, 447, 449, 1265, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	1266, 460, 461, 462, 1089, 463, 464, 465, 466, 586,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 1267, 483, 484, 482, 485, 486, 487,
	1268, 488, 472, 473, 489, 490, 1090, 491, 492, 493,
	494, 495, 496, 587, 0, 497, 1269, 498, 499, 500,
	501, 474, 502, 507, 588, 503, 504, 505, 506, 589,
	1270, 509, 510, 0, 508, 1271, 511, 512, 513, 514,
	515, 516, 329, 517, 1272, 518, 590, 591, 592, 593,
	1273, 527, 1274, 519, 520, 521, 594, 522, 595, 1275,
	523, 524, 525, 526, 0, 528, 529, 1276, 1277, 530,
	531, 532, 534, 535, 533, 536, 1278, 537, 1279, 0,
	538, 539, 540, 596, 597, 598, 1280, 542, 541, 543,
	599, 1281, 1282, 1283, 1284, 544, 545, 600, 546, 547,
	548, 1200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 1206, 257, 258, 1207, 1208, 1209,
	0, 1210, 549, 1211, 1212, 1213, 1214, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 1215, 554, 269, 270, 271, 272, 273, 274,
	1216, 1217, 0, 275, 555, 556, 557, 1218, 276, 277,
	558, 1219, 1286, 1220, 278, 279, 280, 281, 282, 283,
	284, 0, 1221, 286, 287, 288, 285, 1222, 289, 0,
	290, 291, 292, 293, 294, 295, 1223, 296, 297, 298,
	1075, 299, 300, 1224, 1225, 1227, 1226, 1228, 1229, 1230,
	301, 302, 303, 304, 0, 305, 559, 560, 1231, 309,
	306, 307, 1232, 310, 308, 1233, 311, 312, 313, 1234,
	1235, 314, 315, 316, 1236, 317, 318, 1237, 319, 320,
	321, 1238, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 562, 563, 1239, 248, 1240,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 1241, 339, 1242, 1243, 1076, 340, 341, 565,
	566, 342, 343, 1244, 344, 567, 1245, 568, 345, 1246,
	346, 347, 348, 349, 350, 569, 570, 571, 413, 1078,
	351, 352, 1247, 353, 354, 355, 356, 0, 0, 0,
	249, 357, 358, 360, 1248, 1077, 359, 572, 573, 1249,
	574, 1250, 361, 362, 1079, 575, 1080, 363, 364, 365,
	1081, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 1251, 373, 375, 374, 1252, 376, 576, 1082, 377,
	378, 1083, 1253, 379, 380, 381, 1254, 1255, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 1084, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 1085, 401,
	1256, 250, 1086, 410, 411, 1257, 577, 412, 578, 414,
	415, 1258, 0, 416, 0, 1259, 1260, 418, 419, 420,
	1261, 1262, 421, 422, 579, 1087, 423, 1088, 580, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	1263, 434, 435, 581, 582, 583, 436, 584, 437, 438,
	1264, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 1265, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 1266, 460, 461, 462, 1089, 463, 464, 465, 466,
	586, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 1267, 483, 484, 482, 485, 486,
	487, 1268, 488, 472, 473, 489, 490, 1090, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 1269, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	589, 1270, 509, 510, 0, 508, 1271, 511, 512, 513,
	514, 515, 516, 329, 517, 1272, 518, 590, 591, 592,
	593, 1273, 527, 1274, 519, 520, 521, 594, 522, 595,
	1275, 523, 524, 525, 526, 0, 528, 529, 1276, 1277,
	530, 531, 532, 534, 535, 533, 536, 1278, 537, 1279,
	0, 538, 539, 540, 596, 597, 598, 1280, 542, 541,
	543, 599, 1281, 1282, 1283, 1284, 544, 545, 600, 546,
	547, 548, 2304, 0, 1011, 983, 984, 985, 981, 982,
	994, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 2301, 257, 258,
	0, 0, 0, 0, 0, 1035, 999, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 1048,
	0, 267, 1055, 268, 1054, 0, 1065, 269, 270, 271,
	272, 273, 274, 1001, 1034, 968, 275, 1094, 1095, 557,
	0, 276, 277, 1041, 0, 1022, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1075, 299, 300, 1025, 1023, 1024, 1031,
	1027, 1026, 1030, 301, 302, 303, 304, 1058, 305, 1052,
	1051, 972, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 2302, 0, 314, 1043, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 978, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1066, 1067,
	990, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1050, 0, 0, 0, 338, 0, 339, 0, 0, 1076,
	340, 341, 1063, 1064, 342, 343, 0, 344, 1073, 0,
	1000, 345, 0, 346, 347, 348, 349, 350, 1036, 1037,
	1040, 413, 1078, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 249, 357, 358, 360, 0, 1077, 359,
	1045, 1046, 0, 1006, 0, 361, 362, 1079, 1038, 1080,
	363, 364, 365, 1081, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	1074, 1082, 377, 378, 1083, 0, 379, 380, 381, 1029,
	1028, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 1084,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 1085, 401, 969, 250, 1086, 410, 411, 991, 1039,
	412, 1053, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 1087, 423,
	1088, 1068, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 1069, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 1049, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 1089, 463,
	464, 465, 466, 979, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 0, 483, 484,
	482, 485, 486, 487, 1032, 488, 472, 473, 489, 490,
	1090, 491, 492, 493, 494, 495, 496, 1047, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 1093, 503,
	504, 505, 506, 1070, 0, 509, 510, 967, 508, 0,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	1059, 1060, 1061, 1062, 0, 527, 0, 519, 520, 521,
	1071, 522, 1072, 989, 523, 524, 525, 526, 0, 528,
	529, 0, 973, 530, 531, 532, 534, 535, 533, 536,
	1033, 537, 0, 0, 538, 539, 540, 596, 1056, 1092,
	2300, 542, 541, 543, 599, 0, 0, 0, 0, 544,
	545, 600, 546, 547, 548, 970, 0, 0, 0, 0,
	0, 0, 966, 0, 0, 0, 0, 0, 0, 964,
	965, 2303, 0, 0, 0, 0, 0, 0, 995, 2299,
	0, 957, 993, 1011, 983, 984, 985, 981, 982, 994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1035, 999, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 1048, 0,
	267, 1055, 268, 1054, 0, 1065, 269, 270, 271, 272,
	273, 274, 1001, 1034, 968, 275, 1094, 1095, 557, 0,
	276, 277, 1041, 0, 1022, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1075, 299, 300, 1025, 1023, 1024, 1031, 1027,
	1026, 1030, 301, 302, 303, 304, 1058, 305, 1052, 1051,
	972, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1043, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 978, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1066, 1067, 990,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1050,
	0, 0, 0, 338, 0, 339, 0, 0, 1076, 340,
	341, 1063, 1064, 342, 343, 0, 344, 1073, 0, 1000,
	345, 0, 346, 347, 348, 349, 350, 1036, 1037, 1040,
	413, 1078, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 249, 357, 358, 360, 0, 1077, 359, 1045,
	1046, 0, 1006, 0, 361, 362, 1079, 1038, 1080, 363,
	364, 365, 1081, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 1074,
	1082, 377, 378, 1083, 0, 379, 380, 381, 1029, 1028,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 1084, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	1085, 401, 969, 250, 1086, 410, 411, 991, 1039, 412,
	1053, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 1087, 423, 1088,
	1068, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 1069, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 1049, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 1089, 463, 464,
	465, 466, 979, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 212, 483, 484, 482,
	485, 486, 487, 1032, 488, 472, 473, 489, 490, 1090,
	491, 492, 493, 494, 495, 496, 1047, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 1093, 503, 504,
	505, 506, 1070, 0, 509, 510, 967, 508, 214, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 1059,
	1060, 1061, 1062, 0, 527, 0, 519, 520, 521, 1071,
	522, 1072, 989, 523, 524, 525, 526, 0, 528, 529,
	0, 973, 530, 531, 532, 534, 535, 533, 536, 1033,
	537, 0, 0, 538, 539, 540, 1471, 1056, 1092, 0,
	542, 541, 543, 599, 0, 0, 0, 206, 544, 545,
	600, 546, 547, 548, 970, 207, 0, 0, 0, 0,
	0, 966, 0, 0, 0, 0, 0, 0, 964, 965,
	1011, 983, 984, 985, 981, 982, 994, 1708, 1706, 0,
	0, 993, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1035, 999, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 1048, 0, 267, 1055, 268,
	1054, 0, 1065, 269, 270, 271, 272, 273, 274, 1001,
	1034, 968, 275, 1094, 1095, 557, 0, 276, 277, 1041,
	0, 1022, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1075,
	299, 300, 1025, 1023, 1024, 1031, 1027, 1026, 1030, 301,
	302, 303, 304, 1058, 305, 1052, 1051, 972, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1043, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 978, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1066, 1067, 990, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1050, 0, 0, 0,
	338, 0, 339, 0, 0, 1076, 340, 341, 1063, 1064,
	342, 343, 0, 344, 1073, 0, 1000, 345, 0, 346,
	347, 348, 349, 350, 1036, 1037, 1040, 413, 1078, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 249,
	357, 358, 360, 0, 1077, 359, 1045, 1046, 0, 1006,
	0, 361, 362, 1079, 1038, 1080, 363, 364, 365, 1081,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 1074, 1082, 377, 378,
	1083, 0, 379, 380, 381, 1029, 1028, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 1084, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 1085, 401, 969,
	250, 1086, 410, 411, 991, 1039, 412, 1053, 414, 415,
	0, 0, 416, 0, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 579, 1087, 423, 1088, 1068, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 1069, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 1049,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 1089, 463, 464, 465, 466, 979,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 212, 483, 484, 482, 485, 486, 487,
	1032, 488, 472, 473, 489, 490, 1090, 491, 492, 493,
	494, 495, 496, 1047, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 1093, 503, 504, 505, 506, 1070,
	0, 509, 510, 967, 508, 214, 511, 512, 513, 514,
	515, 516, 329, 517, 0, 518, 1059, 1060, 1061, 1062,
	0, 527, 0, 519, 520, 521, 1071, 522, 1072, 989,
	523, 524, 525, 526, 0, 528, 529, 0, 973, 530,
	531, 532, 534, 535, 533, 536, 1033, 537, 0, 0,
	538, 539, 540, 1471, 1056, 1092, 0, 542, 541, 543,
	599, 0, 0, 0, 206, 544, 545, 600, 546, 547,
	548, 970, 207, 0, 0, 0, 0, 0, 966, 0,
	0, 0, 0, 0, 0, 964, 965, 1011, 983, 984,
	985, 981, 982, 994, 1708, 2846, 0, 0, 993, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1035, 999,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 1048, 0, 267, 1055, 268, 1054, 0, 1065,
	269, 270, 271, 272, 273, 274, 1001, 1034, 968, 275,
	1094, 1095, 557, 0, 276, 277, 1041, 0, 1022, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1075, 299, 300, 1025,
	1023, 1024, 1031, 1027, 1026, 1030, 301, 302, 303, 304,
	1058, 305, 1052, 1051, 972, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1043, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	978, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1066, 1067, 990, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1050, 0, 0, 0, 338, 0, 339,
	0, 0, 1076, 340, 341, 1063, 1064, 342, 343, 0,
	344, 1073, 0, 1000, 345, 0, 346, 347, 348, 349,
	350, 1036, 1037, 1040, 413, 1078, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 249, 357, 358, 360,
	0, 1077, 359, 1045, 1046, 0, 1006, 0, 361, 362,
	1079, 1038, 1080, 363, 364, 365, 1081, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 1074, 1082, 377, 378, 1083, 0, 379,
	380, 381, 1029, 1028, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 1084, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 1085, 401, 969, 250, 1086, 410,
	411, 991, 1039, 412, 1053, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 1087, 423, 1088, 1068, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 1069, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 1049, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 1089, 463, 464, 465, 466, 979, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	212, 483, 484, 482, 485, 486, 487, 1032, 488, 472,
	473, 489, 490, 1090, 491, 492, 493, 494, 495, 496,
	1047, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 1093, 503, 504, 505, 506, 1070, 0, 509, 510,
	967, 508, 214, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 1059, 1060, 1061, 1062, 0, 527, 0,
	519, 520, 521, 1071, 522, 1072, 989, 523, 524, 525,
	526, 0, 528, 529, 0, 973, 530, 531, 532, 534,
	535, 533, 536, 1033, 537, 0, 0, 538, 539, 540,
	1471, 1056, 1092, 0, 542, 541, 543, 599, 0, 0,
	0, 206, 544, 545, 600, 546, 547, 548, 970, 207,
	0, 0, 0, 0, 0, 966, 0, 0, 0, 0,
	0, 0, 964, 965, 1011, 983, 984, 985, 981, 982,
	994, 1708, 1706, 0, 0, 993, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1035, 999, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 1048,
	0, 267, 1055, 268, 1054, 2408, 1065, 269, 270, 271,
	272, 273, 274, 1001, 1034, 968, 275, 1094, 1095, 557,
	0, 276, 277, 1041, 0, 1022, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1075, 299, 300, 1025, 1023, 1024, 1031,
	1027, 1026, 1030, 301, 302, 303, 304, 1058, 305, 1052,
	1051, 972, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1043, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 978, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1066, 1067,
	990, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1050, 0, 0, 0, 338, 0, 339, 0, 2413, 1076,
	340, 341, 1063, 1064, 342, 343, 0, 344, 1073, 0,
	1000, 345, 0, 346, 347, 348, 349, 350, 1036, 1037,
	1040, 413, 1078, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 249, 357, 358, 360, 0, 1077, 359,
	1045, 1046, 0, 1006, 0, 361, 362, 1079, 1038, 1080,
	363, 364, 365, 1081, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 2409, 376,
	1074, 1082, 377, 378, 1083, 0, 379, 380, 381, 1029,
	1028, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 1084,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 1085, 401, 969, 250, 1086, 410, 411, 991, 1039,
	412, 1053, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 1087, 423,
	1088, 1068, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 1069, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 1049, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 1089, 463,
	464, 465, 466, 979, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 0, 483, 484,
	482, 485, 486, 487, 1032, 488, 472, 473, 489, 490,
	1090, 491, 492, 493, 494, 495, 496, 1047, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 1093, 503,
	504, 505, 506, 1070, 0, 509, 510, 967, 508, 0,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	1059, 1060, 1061, 1062, 0, 527, 2410, 519, 520, 521,
	1071, 522, 1072, 989, 523, 524, 525, 526, 0, 528,
	529, 0, 973, 530, 531, 532, 534, 535, 533, 536,
	1033, 537, 0, 0, 538, 539, 540, 596, 1056, 1092,
	0, 542, 541, 543, 599, 0, 0, 0, 0, 544,
	545, 600, 546, 547, 548, 970, 0, 0, 0, 0,
	0, 0, 966, 0, 0, 0, 0, 0, 0, 964,
	965, 0, 0, 0, 0, 0, 0, 0, 995, 0,
	0, 2349, 993, 1011, 983, 984, 985, 981, 982, 994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1035, 999, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 1048, 0,
	267, 1055, 268, 1054, 0, 1065, 269, 270, 271, 272,
	273, 274, 1001, 1034, 968, 275, 1094, 1095, 557, 0,
	276, 277, 1041, 0, 1022, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1075, 299, 300, 1025, 1023, 1024, 1031, 1027,
	1026, 1030, 301, 302, 303, 304, 1058, 305, 1052, 1051,
	972, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1043, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 978, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1066, 1067, 990,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1050,
	0, 0, 0, 338, 0, 339, 0, 0, 1076, 340,
	341, 1063, 1064, 342, 343, 0, 344, 1073, 0, 1000,
	345, 0, 346, 347, 348, 349, 350, 1036, 1037, 1040,
	413, 1078, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 249, 357, 358, 360, 0, 1077, 359, 1045,
	1046, 0, 1006, 0, 361, 362, 1079, 1038, 1080, 363,
	364, 365, 1081, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 1074,
	1082, 377, 378, 1083, 0, 379, 380, 381, 1029, 1028,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 1084, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	1085, 401, 969, 250, 1086, 410, 411, 991, 1039, 412,
	1053, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 1087, 423, 1088,
	1068, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 1069, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 1049, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 1089, 463, 464,
	465, 466, 979, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 1032, 488, 472, 473, 489, 490, 1090,
	491, 492, 493, 494, 495, 496, 1047, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 1093, 503, 504,
	505, 506, 1070, 0, 509, 510, 967, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 1059,
	1060, 1061, 1062, 0, 527, 0, 519, 520, 521, 1071,
	522, 1072, 989, 523, 524, 525, 526, 0, 528, 529,
	0, 973, 530, 531, 532, 534, 535, 533, 536, 1033,
	537, 0, 0, 538, 539, 540, 596, 1056, 1092, 0,
	542, 541, 543, 599, 0, 0, 0, 0, 544, 545,
	600, 546, 547, 548, 970, 0, 0, 0, 0, 0,
	0, 966, 0, 0, 0, 0, 0, 0, 964, 965,
	0, 0, 0, 0, 0, 0, 0, 995, 2347, 0,
	2346, 993, 1011, 983, 984, 985, 981, 982, 994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1035, 999, 0, 0, 0, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 1048, 0, 267,
	1055, 268, 1054, 0, 1065, 269, 270, 271, 272, 273,
	274, 1001, 1034, 968, 275, 1094, 1095, 557, 0, 276,
	277, 1041, 0, 1022, 0, 278, 279, 280, 281, 282,
	283, 284, 0, 0, 286, 287, 288, 285, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1075, 299, 300, 1025, 1023, 1024, 1031, 1027, 1026,
	1030, 301, 302, 303, 304, 1058, 305, 1052, 1051, 972,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1043, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 978, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1066, 1067, 990, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1050, 0,
	0, 0, 338, 0, 339, 0, 0, 1076, 340, 341,
	1063, 1064, 342, 343, 0, 344, 1073, 0, 1000, 345,
	0, 346, 347, 348, 349, 350, 1036, 1037, 1040, 413,
	1078, 351, 352, 0, 353, 354, 355, 356, 0, 0,
	0, 249, 357, 358, 360, 0, 1077, 359, 1045, 1046,
	0, 1006, 0, 361, 362, 1079, 1038, 1080, 363, 364,
	365, 1081, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 0, 373, 375, 374, 0, 376, 1074, 1082,
	377, 378, 1083, 0, 379, 380, 381, 1029, 1028, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 396, 1084, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 1085,
	401, 969, 250, 1086, 410, 411, 991, 1039, 412, 1053,
	414, 415, 0, 0, 416, 0, 0, 0, 418, 419,
	420, 0, 0, 421, 422, 579, 1087, 423, 1088, 1068,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 0, 434, 435, 581, 582, 1069, 436, 584, 437,
	438, 0, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 1049, 448, 447, 449, 0, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 0, 460, 461, 462, 1089, 463, 464, 465,
	466, 979, 467, 0, 468, 469, 475, 476, 470, 471,
	477, 478, 479, 480, 481, 0, 483, 484, 482, 485,
	486, 487, 1032, 488, 472, 473, 489, 490, 1090, 491,
	492, 493, 494, 495, 496, 1047, 0, 497, 0, 498,
	499, 500, 501, 474, 502, 507, 1093, 503, 504, 505,
	506, 1070, 0, 509, 510, 967, 508, 0, 511, 512,
	513, 514, 515, 516, 329, 517, 0, 518, 1059, 1060,
	1061, 1062, 0, 527, 0, 519, 520, 521, 1071, 522,
	1072, 989, 523, 524, 525, 526, 0, 528, 529, 0,
	973, 530, 531, 532, 534, 535, 533, 536, 1033, 537,
	0, 0, 538, 539, 540, 596, 1056, 1092, 0, 542,
	541, 543, 599, 0, 0, 0, 0, 544, 545, 600,
	546, 547, 548, 970, 0, 0, 0, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 0, 964, 965, 0,
	0, 0, 0, 0, 0, 0, 995, 2344, 0, 2343,
	993, 1011, 983, 984, 985, 981, 982, 994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1035, 999, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 1048, 0, 267, 1055,
	268, 1054, 0, 1065, 269, 270, 271, 272, 273, 274,
	1001, 1034, 968, 275, 1094, 1095, 557, 0, 276, 277,
	1041, 0, 1022, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1075, 299, 300, 1025, 1023, 1024, 1031, 1027, 1026, 1030,
	301, 302, 303, 304, 1058, 305, 1052, 1051, 972, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 1043, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 978, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1066, 1067, 990, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 1050, 0, 0,
	0, 338, 0, 339, 0, 0, 1076, 340, 341, 1063,
	1064, 342, 343, 0, 344, 1073, 0, 1000, 345, 0,
	346, 347, 348, 349, 350, 1036, 1037, 1040, 413, 1078,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	249, 357, 358, 360, 0, 1077, 359, 1045, 1046, 0,
	1006, 0, 361, 362, 1079, 1038, 1080, 363, 364, 365,
	1081, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 1074, 1082, 377,
	378, 1083, 0, 379, 380, 381, 1029, 1028, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 1084, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 1085, 401,
	969, 250, 1086, 410, 411, 991, 1039, 412, 1053, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 1087, 423, 1088, 1068, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 1069, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	1049, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 1089, 463, 464, 465, 466,
	979, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 1032, 488, 472, 473, 489, 490, 1090, 491, 492,
	493, 494, 495, 496, 1047, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 1093, 503, 504, 505, 506,
	1070, 0, 509, 510, 967, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 1059, 1060, 1061,
	1062, 0, 527, 0, 519, 520, 521, 1071, 522, 1072,
	989, 523, 524, 525, 526, 0, 528, 529, 0, 973,
	530, 531, 532, 534, 535, 533, 536, 1033, 537, 0,
	0, 538, 539, 540, 596, 1056, 1092, 0, 542, 541,
	543, 599, 0, 0, 0, 0, 544, 545, 600, 546,
	547, 548, 970, 0, 0, 0, 0, 0, 0, 966,
	0, 0, 0, 0, 0, 0, 964, 965, 0, 0,
	0, 0, 0, 0, 0, 995, 2341, 0, 2340, 993,
	1011, 983, 984, 985, 981, 982, 994, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1035, 999, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 1048, 0, 267, 1055, 268,
	1054, 0, 1065, 269, 270, 271, 272, 273, 274, 1001,
	1034, 968, 275, 1094, 1095, 557, 0, 276, 277, 1041,
	0, 1022, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1075,
	299, 300, 1025, 1023, 1024, 1031, 1027, 1026, 1030, 301,
	302, 303, 304, 1058, 305, 1052, 1051, 972, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1043, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 978, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1066, 1067, 990, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1050, 0, 0, 0,
	338, 0, 339, 0, 0, 1076, 340, 341, 1063, 1064,
	342, 343, 0, 344, 1073, 0, 1000, 345, 0, 346,
	347, 348, 349, 350, 1036, 1037, 1040, 413, 1078, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 249,
	357, 358, 360, 0, 1077, 359, 1045, 1046, 0, 1006,
	0, 361, 362, 1079, 1038, 1080, 363, 364, 365, 1081,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 1074, 1082, 377, 378,
	1083, 0, 379, 380, 381, 1029, 1028, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 1084, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 1085, 401, 969,
	250, 1086, 410, 411, 991, 1039, 412, 1053, 414, 415,
	0, 0, 416, 0, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 579, 1087, 423, 1088, 1068, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 1069, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 1049,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 1089, 463, 464, 465, 466, 979,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 0, 483, 484, 482, 485, 486, 487,
	1032, 488, 472, 473, 489, 490, 1090, 491, 492, 493,
	494, 495, 496, 1047, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 1093, 503, 504, 505, 506, 1070,
	0, 509, 510, 967, 508, 0, 511, 512, 513, 514,
	515, 516, 329, 517, 0, 518, 1059, 1060, 1061, 1062,
	0, 527, 0, 519, 520, 521, 1071, 522, 1072, 989,
	523, 524, 525, 526, 0, 528, 529, 0, 973, 530,
	531, 532, 534, 535, 533, 536, 1033, 537, 0, 0,
	538, 539, 540, 596, 1056, 1092, 0, 542, 541, 543,
	599, 0, 0, 0, 0, 544, 545, 600, 546, 547,
	548, 970, 0, 0, 0, 0, 0, 0, 966, 0,
	0, 0, 0, 0, 0, 964, 965, 0, 0, 0,
	0, 0, 0, 0, 995, 2338, 0, 1561, 993, 1011,
	983, 984, 985, 981, 982, 994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1035, 999, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 1048, 0, 267, 1055, 268, 1054,
	0, 1065, 269, 270, 271, 272, 273, 274, 1001, 1034,
	968, 275, 1094, 1095, 557, 0, 276, 277, 1041, 0,
	1022, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1075, 299,
	300, 1025, 1023, 1024, 1031, 1027, 1026, 1030, 301, 302,
	303, 304, 1058, 305, 1052, 1051, 972, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	1043, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 978, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1066, 1067, 990, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 1050, 0, 0, 0, 338,
	0, 339, 0, 0, 1076, 340, 341, 1063, 1064, 342,
	343, 0, 344, 1073, 0, 1000, 345, 0, 346, 347,
	348, 349, 350, 1036, 1037, 1040, 413, 1078, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 249, 357,
	358, 360, 0, 1077, 359, 1045, 1046, 0, 1006, 0,
	361, 362, 1079, 1038, 1080, 363, 364, 365, 1081, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 1074, 1082, 377, 378, 1083,
	0, 379, 380, 381, 1029, 1028, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 1084, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 1085, 401, 969, 250,
	1086, 410, 411, 991, 1039, 412, 1053, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 1087, 423, 1088, 1068, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 1069, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 1049, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 1089, 463, 464, 465, 466, 979, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 1032,
	488, 472, 473, 489, 490, 1090, 491, 492, 493, 494,
	495, 496, 1047, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 1093, 503, 504, 505, 506, 1070, 0,
	509, 510, 967, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 1059, 1060, 1061, 1062, 0,
	527, 0, 519, 520, 521, 1071, 522, 1072, 989, 523,
	524, 525, 526, 0, 528, 529, 0, 973, 530, 531,
	532, 534, 535, 533, 536, 1033, 537, 0, 0, 538,
	539, 540, 596, 1056, 1092, 0, 542, 541, 543, 599,
	1560, 0, 0, 0, 544, 545, 600, 546, 547, 548,
	970, 0, 0, 0, 0, 0, 0, 966, 0, 0,
	0, 0, 0, 0, 964, 965, 0, 0, 0, 0,
	0, 0, 0, 995, 0, 0, 960, 993, 1011, 983,
	984, 985, 981, 982, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1035,
	999, 0, 0, 0, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 1048, 0, 267, 1055, 268, 1054, 0,
	1065, 269, 270, 271, 272, 273, 274, 1001, 1034, 968,
	275, 1094, 1095, 557, 0, 276, 277, 1041, 0, 1022,
	0, 278, 279, 280, 281, 282, 283, 284, 0, 0,
	286, 287, 288, 285, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1075, 299, 300,
	1025, 1023, 1024, 1031, 1027, 1026, 1030, 301, 302, 303,
	304, 1058, 305, 1052, 1051, 972, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1043,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 978, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1066, 1067, 990, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1050, 0, 0, 0, 338, 0,
	339, 0, 0, 1076, 340, 341, 1063, 1064, 342, 343,
	0, 344, 1073, 0, 1000, 345, 0, 346, 347, 348,
	349, 350, 1036, 1037, 1040, 413, 1078, 351, 352, 0,
	353, 354, 355, 356, 0, 0, 0, 249, 357, 358,
	360, 0, 1077, 359, 1045, 1046, 0, 1006, 0, 361,
	362, 1079, 1038, 1080, 363, 364, 365, 1081, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 0, 373,
	375, 374, 0, 376, 1074, 1082, 377, 378, 1083, 0,
	379, 380, 381, 1029, 1028, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 1084, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 1085, 401, 969, 250, 1086,
	410, 411, 991, 1039, 412, 1053, 414, 415, 0, 0,
	416, 0, 974, 0, 418, 419, 420, 0, 0, 421,
	422, 579, 1087, 423, 1088, 1068, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 0, 434, 435,
	581, 582, 1069, 436, 584, 437, 438, 0, 439, 0,
	440, 441, 442, 443, 444, 445, 446, 1049, 448, 447,
	449, 0, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 0, 460,
	461, 462, 1089, 463, 464, 465, 466, 979, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 478, 479, 480,
	481, 0, 483, 484, 482, 485, 486, 487, 1032, 488,
	472, 473, 489, 490, 1090, 491, 492, 493, 494, 495,
	496, 1047, 0, 497, 0, 498, 499, 500, 501, 474,
	502, 507, 1093, 503, 504, 505, 506, 1070, 0, 509,
	510, 967, 508, 0, 511, 512, 513, 514, 515, 516,
	329, 517, 0, 518, 1059, 1060, 1061, 1062, 0, 527,
	0, 519, 520, 521, 1071, 522, 1072, 989, 523, 524,
	525, 526, 0, 528, 529, 0, 973, 530, 531, 532,
	534, 535, 533, 536, 1033, 537, 0, 0, 538, 539,
	540, 596, 1056, 1092, 0, 542, 541, 543, 599, 0,
	0, 0, 0, 544, 545, 600, 546, 547, 548, 970,
	0, 0, 0, 0, 0, 0, 966, 0, 0, 0,
	0, 0, 0, 964, 965, 1011, 983, 984, 985, 981,
	982, 994, 995, 0, 0, 0, 993, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1035, 999, 0, 0,
	0, 259, 260, 262, 261, 263, 264, 265, 266, 550,
	1048, 0, 267, 1055, 268, 1054, 0, 1065, 269, 270,
	271, 272, 273, 274, 1001, 1034, 968, 275, 1094, 1095,
	557, 0, 276, 277, 1041, 0, 1022, 0, 278, 279,
	280, 281, 282, 283, 284, 0, 0, 286, 287, 288,
	285, 0, 289, 0, 290, 291, 292, 293, 4090, 295,
	0, 296, 297, 298, 1075, 299, 300, 1025, 1023, 1024,
	1031, 1027, 1026, 1030, 301, 302, 303, 304, 1058, 305,
	1052, 1051, 972, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 1043, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 978, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 1066,
	1067, 990, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 1050, 0, 0, 0, 338, 0, 339, 0, 0,
	1076, 340, 341, 1063, 1064, 342, 343, 0, 344, 1073,
	0, 1000, 345, 0, 346, 347, 348, 349, 350, 1036,
	1037, 1040, 413, 1078, 351, 352, 0, 353, 354, 355,
	356, 0, 0, 0, 249, 357, 358, 360, 0, 1077,
	359, 1045, 1046, 0, 1006, 0, 361, 362, 1079, 1038,
	1080, 363, 364, 365, 1081, 366, 0, 0, 0, 367,
	368, 369, 370, 371, 372, 0, 373, 375, 374, 0,
	376, 1074, 1082, 377, 378, 1083, 0, 379, 380, 381,
	1029, 1028, 382, 383, 384, 385, 0, 386, 387, 389,
	391, 388, 390, 395, 392, 393, 394, 397, 0, 396,
	1084, 398, 399, 400, 405, 407, 408, 403, 404, 406,
	409, 402, 1085, 401, 969, 250, 1086, 410, 411, 991,
	1039, 412, 1053, 414, 415, 0, 0, 416, 0, 974,
	0, 418, 419, 420, 0, 0, 421, 422, 579, 1087,
	423, 1088, 1068, 424, 425, 417, 426, 427, 428, 429,
	430, 431, 432, 433, 0, 434, 435, 581, 582, 1069,
	436, 584, 437, 438, 0, 439, 0, 440, 441, 442,
	443, 444, 445, 446, 1049, 448, 447, 449, 0, 450,
	0, 0, 0, 0, 0, 451, 0, 453, 454, 455,
	452, 456, 457, 458, 459, 0, 460, 461, 462, 1089,
	463, 464, 465, 466, 979, 467, 0, 468, 469, 475,
	476, 470, 471, 477, 478, 479, 480, 481, 0, 483,
	484, 482, 485, 486, 487, 1032, 488, 472, 473, 489,
	490, 1090, 491, 492, 493, 494, 495, 496, 1047, 0,
	497, 0, 498, 499, 500, 501, 474, 502, 507, 1093,
	503, 504, 505, 506, 1070, 0, 509, 510, 967, 508,
	0, 511, 512, 513, 514, 515, 516, 329, 517, 0,
	518, 1059, 1060, 1061, 1062, 0, 527, 0, 519, 520,
	521, 1071, 522, 1072, 989, 523, 524, 525, 526, 0,
	528, 529, 0, 973, 530, 531, 532, 534, 535, 533,
	536, 1033, 537, 0, 0, 538, 539, 540, 596, 1056,
	1092, 0, 542, 541, 543, 599, 0, 0, 0, 0,
	544, 545, 600, 546, 547, 548, 970, 0, 0, 0,
	0, 0, 0, 966, 0, 0, 0, 0, 0, 0,
	964, 965, 1011, 983, 984, 985, 981, 982, 994, 995,
	0, 0, 0, 993, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1035, 999, 0, 0, 0, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 1048, 0, 267,
	1055, 268, 1054, 0, 1065, 269, 270, 271, 272, 273,
	274, 1001, 1034, 968, 275, 1094, 1095, 557, 0, 276,
	277, 1041, 0, 1022, 0, 278, 279, 280, 281, 282,
	283, 284, 0, 0, 286, 287, 288, 285, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1075, 299, 300, 1025, 1023, 1024, 1031, 1027, 1026,
	1030, 301, 302, 303, 304, 1058, 305, 1052, 1051, 972,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1043, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 978, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1066, 1067, 990, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1050, 0,
	0, 0, 338, 0, 339, 0, 0, 1076, 340, 341,
	1063, 1064, 342, 343, 0, 344, 1073, 0, 1000, 345,
	0, 346, 347, 348, 349, 350, 1036, 1037, 1040, 413,
	1078, 351, 352, 0, 353, 354, 355, 356, 0, 0,
	0, 2218, 357, 358, 360, 0, 1077, 359, 1045, 1046,
	0, 1006, 0, 361, 362, 1079, 1038, 1080, 363, 364,
	365, 1081, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 0, 373, 375, 374, 0, 376, 1074, 1082,
	377, 378, 1083, 0, 379, 380, 381, 1029, 1028, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 396, 1084, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 1085,
	401, 969, 250, 1086, 410, 411, 991, 1039, 412, 1053,
	414, 415, 0, 0, 416, 0, 0, 0, 418, 419,
	420, 0, 0, 421, 422, 579, 1087, 423, 1088, 1068,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 0, 434, 435, 581, 582, 1069, 436, 584, 437,
	438, 2217, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 1049, 448, 447, 449, 0, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 0, 460, 461, 462, 1089, 463, 464, 465,
	466, 979, 467, 0, 468, 469, 475, 476, 470, 471,
	477, 478, 479, 480, 481, 0, 483, 484, 482, 485,
	486, 487, 1032, 488, 472, 473, 489, 490, 1090, 491,
	492, 493, 494, 495, 496, 1047, 0, 497, 0, 498,
	499, 500, 501, 474, 502, 507, 1093, 503, 504, 505,
	506, 1070, 0, 509, 510, 967, 508, 0, 511, 512,
	513, 514, 515, 516, 329, 517, 0, 518, 1059, 1060,
	1061, 1062, 0, 527, 0, 519, 520, 521, 1071, 522,
	1072, 989, 523, 524, 525, 526, 0, 528, 529, 0,
	973, 530, 531, 532, 534, 535, 533, 536, 1033, 537,
	0, 0, 538, 539, 540, 596, 1056, 1092, 0, 542,
	541, 543, 599, 0, 0, 0, 0, 544, 545, 600,
	546, 547, 548, 970, 0, 0, 0, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 0, 964, 965, 1011,
	983, 984, 985, 981, 982, 994, 995, 0, 0, 0,
	993, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1035, 999, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 1048, 0, 267, 1055, 268, 1054,
	0, 1065, 269, 270, 271, 272, 273, 274, 1001, 1034,
	968, 275, 1094, 1095, 557, 0, 276, 277, 1041, 0,
	1022, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1075, 299,
	300, 1025, 1023, 1024, 1031, 1027, 1026, 1030, 301, 302,
	303, 304, 1058, 305, 1052, 1051, 972, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	1043, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 978, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1066, 1067, 990, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 1050, 0, 0, 0, 338,
	0, 339, 0, 0, 1076, 340, 341, 1063, 1064, 342,
	343, 0, 344, 1073, 0, 1000, 345, 0, 346, 347,
	348, 349, 350, 1036, 1037, 1040, 413, 1078, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 249, 357,
	358, 360, 0, 1077, 359, 1045, 1046, 0, 1006, 0,
	361, 362, 1079, 1038, 1080, 363, 364, 365, 1081, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 1074, 1082, 377, 378, 1083,
	0, 379, 380, 381, 1029, 1028, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 1084, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 1085, 401, 969, 250,
	1086, 410, 411, 991, 1039, 412, 1053, 414, 415, 0,
	0, 416, 0, 974, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 1087, 423, 1088, 1068, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 1069, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 1049, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 1089, 463, 464, 465, 466, 979, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 1032,
	488, 472, 473, 489, 490, 1090, 491, 492, 493, 494,
	495, 496, 1047, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 1093, 503, 504, 505, 506, 1070, 0,
	509, 510, 967, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 1059, 1060, 1061, 1062, 0,
	527, 0, 519, 520, 521, 1071, 522, 1072, 989, 523,
	524, 525, 526, 0, 528, 529, 0, 973, 530, 531,
	532, 534, 535, 533, 536, 1033, 537, 0, 0, 538,
	539, 540, 596, 1056, 1092, 0, 542, 541, 543, 599,
	0, 0, 0, 0, 544, 545, 600, 546, 547, 548,
	970, 0, 0, 0, 0, 0, 0, 966, 0, 0,
	0, 0, 0, 0, 964, 965, 1011, 983, 984, 985,
	981, 982, 994, 995, 0, 0, 0, 993, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1035, 999, 0,
	0, 0, 259, 260, 262, 261, 263, 264, 265, 266,
	550, 1048, 0, 267, 1055, 268, 1054, 0, 1065, 269,
	270, 271, 272, 273, 274, 1001, 1034, 968, 275, 1094,
	1095, 557, 0, 276, 277, 1041, 0, 1022, 0, 278,
	279, 280, 281, 282, 283, 284, 0, 0, 286, 287,
	288, 285, 0, 289, 0, 290, 291, 292, 293, 3886,
	295, 0, 296, 297, 298, 1075, 299, 300, 1025, 1023,
	1024, 1031, 1027, 1026, 1030, 301, 302, 303, 304, 1058,
	305, 1052, 1051, 972, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1043, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 978,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1066, 1067, 990, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1050, 0, 0, 0, 338, 0, 339, 0,
	0, 1076, 340, 341, 1063, 1064, 342, 343, 0, 344,
	1073, 0, 1000, 345, 0, 346, 347, 348, 349, 350,
	1036, 1037, 1040, 413, 1078, 351, 352, 0, 353, 354,
	355, 356, 0, 0, 0, 249, 357, 358, 360, 0,
	1077, 359, 1045, 1046, 0, 1006, 0, 361, 362, 1079,
	1038, 1080, 363, 364, 365, 1081, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 0, 373, 375, 374,
	0, 376, 1074, 1082, 377, 378, 1083, 0, 379, 380,
	381, 1029, 1028, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	396, 1084, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 1085, 401, 969, 250, 1086, 410, 411,
	991, 1039, 412, 1053, 414, 415, 0, 0, 416, 0,
	974, 0, 418, 419, 420, 0, 0, 421, 422, 579,
	1087, 423, 1088, 1068, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 0, 434, 435, 581, 582,
	1069, 436, 584, 437, 438, 0, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 1049, 448, 447, 449, 0,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 0, 460, 461, 462,
	1089, 463, 464, 465, 466, 979, 467, 0, 468, 469,
	475, 476, 470, 471, 477, 478, 479, 480, 481, 0,
	483, 484, 482, 485, 486, 487, 1032, 488, 472, 473,
	489, 490, 1090, 491, 492, 493, 494, 495, 496, 1047,
	0, 497, 0, 498, 499, 500, 501, 474, 502, 507,
	1093, 503, 504, 505, 506, 1070, 0, 509, 510, 967,
	508, 0, 511, 512, 513, 514, 515, 516, 329, 517,
	0, 518, 1059, 1060, 1061, 1062, 0, 527, 0, 519,
	520, 521, 1071, 522, 1072, 989, 523, 524, 525, 526,
	0, 528, 529, 0, 973, 530, 531, 532, 534, 535,
	533, 536, 1033, 537, 0, 0, 538, 539, 540, 596,
	1056, 1092, 0, 542, 541, 543, 599, 0, 0, 0,
	0, 544, 545, 600, 546, 547, 548, 970, 0, 0,
	0, 0, 0, 0, 966, 0, 0, 0, 0, 0,
	0, 964, 965, 1011, 983, 984, 985, 981, 982, 994,
	995, 0, 0, 0, 993, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1035, 999, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 1048, 0,
	267, 1055, 268, 1054, 0, 1065, 269, 270, 271, 272,
	273, 274, 1001, 1034, 968, 275, 1094, 1095, 557, 0,
	276, 277, 1041, 0, 1022, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1075, 299, 300, 1025, 1023, 1024, 1031, 1027,
	1026, 1030, 301, 302, 303, 304, 1058, 305, 1052, 1051,
	972, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1043, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 978, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1066, 1067, 990,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1050,
	0, 0, 0, 338, 0, 339, 0, 0, 1076, 340,
	341, 1063, 1064, 342, 343, 0, 344, 1073, 0, 1000,
	345, 0, 346, 347, 348, 349, 350, 1036, 1037, 1040,
	413, 1078, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 249, 357, 358, 360, 0, 1077, 359, 1045,
	1046, 0, 1006, 0, 361, 362, 1079, 1038, 1080, 363,
	364, 365, 1081, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 1074,
	1082, 377, 378, 1083, 0, 379, 380, 381, 1029, 1028,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 1084, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	1085, 401, 969, 3545, 1086, 410, 411, 991, 1039, 412,
	1053, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 1087, 423, 1088,
	1068, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 1069, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 1049, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 1089, 463, 464,
	465, 466, 979, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 1032, 488, 472, 473, 489, 490, 1090,
	491, 492, 493, 494, 495, 496, 1047, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 1093, 503, 504,
	505, 506, 1070, 0, 509, 510, 967, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 1059,
	1060, 1061, 1062, 0, 527, 0, 519, 520, 521, 1071,
	522, 1072, 989, 523, 524, 525, 526, 0, 528, 529,
	0, 973, 530, 531, 532, 534, 535, 533, 536, 1033,
	537, 0, 0, 538, 539, 540, 596, 1056, 1092, 0,
	542, 541, 543, 599, 0, 0, 0, 0, 544, 545,
	600, 546, 547, 548, 970, 0, 0, 0, 0, 0,
	0, 966, 0, 0, 0, 0, 0, 0, 964, 965,
	1776, 0, 0, 0, 0, 0, 0, 995, 0, 0,
	0, 993, 1011, 983, 984, 985, 981, 982, 994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1035, 999, 0, 0, 0, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 1048, 0, 267,
	1055, 268, 1054, 0, 1065, 269, 270, 271, 272, 273,
	274, 1001, 1034, 968, 275, 1094, 1095, 557, 0, 276,
	277, 1041, 0, 1022, 0, 278, 279, 280, 281, 282,
	283, 284, 0, 0, 286, 287, 288, 285, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1075, 299, 300, 1025, 1023, 1024, 1031, 1027, 1026,
	1030, 301, 302, 303, 304, 1058, 305, 1052, 1051, 972,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1043, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 978, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1066, 1067, 990, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1050, 0,
	0, 0, 338, 0, 339, 0, 0, 1076, 340, 341,
	1063, 1064, 342, 343, 0, 344, 1073, 0, 1000, 345,
	0, 346, 347, 348, 349, 350, 1036, 1037, 1040, 413,
	1078, 351, 352, 0, 353, 354, 355, 356, 0, 0,
	0, 249, 357, 358, 360, 0, 1077, 359, 1045, 1046,
	0, 1006, 0, 361, 362, 1079, 1038, 1080, 363, 364,
	365, 1081, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 0, 373, 375, 374, 0, 376, 1074, 1082,
	377, 378, 1083, 0, 379, 380, 381, 1029, 1028, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 396, 1084, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 1085,
	401, 969, 250, 1086, 410, 411, 991, 1039, 412, 1053,
	414, 415, 0, 0, 416, 0, 0, 0, 418, 419,
	420, 0, 0, 421, 422, 579, 1087, 423, 1088, 1068,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 0, 434, 435, 581, 582, 1069, 436, 584, 437,
	438, 0, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 1049, 448, 447, 449, 0, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 0, 460, 461, 462, 1089, 463, 464, 465,
	466, 979, 467, 0, 468, 469, 475, 476, 470, 471,
	477, 478, 479, 480, 481, 0, 483, 484, 482, 485,
	486, 487, 1032, 488, 472, 473, 489, 490, 1090, 491,
	492, 493, 494, 495, 496, 1047, 0, 497, 0, 498,
	499, 500, 501, 474, 502, 507, 1093, 503, 504, 505,
	506, 1070, 0, 509, 510, 967, 508, 0, 511, 512,
	513, 514, 515, 516, 329, 517, 0, 518, 1059, 1060,
	1061, 1062, 0, 527, 0, 519, 520, 521, 1071, 522,
	1072, 989, 523, 524, 525, 526, 0, 528, 529, 0,
	973, 530, 531, 532, 534, 535, 533, 536, 1033, 537,
	0, 0, 538, 539, 540, 596, 1056, 1092, 3296, 542,
	541, 543, 599, 0, 0, 0, 0, 544, 545, 600,
	546, 547, 548, 970, 0, 0, 0, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 0, 964, 965, 1011,
	983, 984, 985, 981, 982, 994, 995, 0, 0, 0,
	993, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1035, 999, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 1048, 0, 267, 1055, 268, 1054,
	0, 1065, 269, 270, 271, 272, 273, 274, 1001, 1034,
	968, 275, 1094, 1095, 557, 0, 276, 277, 1041, 0,
	1022, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1075, 299,
	300, 1025, 1023, 1024, 1031, 1027, 1026, 1030, 301, 302,
	303, 304, 1058, 305, 1052, 1051, 972, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	1043, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 978, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1066, 1067, 990, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 1050, 0, 0, 0, 338,
	0, 339, 0, 0, 1076, 340, 341, 1063, 1064, 342,
	343, 0, 344, 1073, 0, 1000, 345, 0, 346, 347,
	348, 349, 350, 1036, 1037, 1040, 413, 1078, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 249, 357,
	358, 360, 0, 1077, 359, 1045, 1046, 0, 1006, 0,
	361, 362, 1079, 1038, 1080, 363, 364, 365, 1081, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 1074, 1082, 377, 378, 1083,
	0, 379, 380, 381, 1029, 1028, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 1084, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 1085, 401, 969, 250,
	1086, 410, 411, 991, 1039, 412, 1053, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 1087, 423, 1088, 1068, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 1069, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 1049, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 1089, 463, 464, 465, 466, 979, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 1032,
	488, 472, 473, 489, 490, 1090, 491, 492, 493, 494,
	495, 496, 1047, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 1093, 503, 504, 505, 506, 1070, 0,
	509, 510, 967, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 1059, 1060, 1061, 1062, 0,
	527, 0, 519, 520, 521, 1071, 522, 1072, 989, 523,
	524, 525, 526, 0, 528, 529, 0, 973, 530, 531,
	532, 534, 535, 533, 536, 1033, 537, 0, 0, 538,
	539, 540, 596, 1056, 1092, 0, 542, 541, 543, 599,
	0, 0, 0, 0, 544, 545, 600, 546, 547, 548,
	970, 0, 0, 0, 0, 0, 0, 966, 0, 0,
	0, 0, 0, 0, 964, 965, 1776, 0, 0, 0,
	0, 0, 0, 995, 0, 0, 0, 993, 1011, 983,
	984, 985, 981, 982, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1035,
	999, 0, 0, 0, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 1048, 0, 267, 1055, 268, 1054, 0,
	1065, 269, 270, 271, 272, 273, 274, 1001, 1034, 968,
	275, 1094, 1095, 557, 0, 276, 277, 1041, 0, 1022,
	0, 278, 279, 280, 281, 282, 283, 284, 0, 0,
	286, 287, 288, 285, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1075, 299, 300,
	1025, 1023, 1024, 1031, 1027, 1026, 1030, 301, 302, 303,
	304, 1058, 305, 1052, 1051, 972, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1043,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 978, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1066, 1067, 990, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1050, 0, 0, 0, 338, 0,
	339, 0, 2413, 1076, 340, 341, 1063, 1064, 342, 343,
	0, 344, 1073, 0, 1000, 345, 0, 346, 347, 348,
	349, 350, 1036, 1037, 1040, 413, 1078, 351, 352, 0,
	353, 354, 355, 356, 0, 0, 0, 249, 357, 358,
	360, 0, 1077, 359, 1045, 1046, 0, 1006, 0, 361,
	362, 1079, 1038, 1080, 363, 364, 365, 1081, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 0, 373,
	375, 374, 0, 376, 1074, 1082, 377, 378, 1083, 0,
	379, 380, 381, 1029, 1028, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 1084, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 1085, 401, 969, 250, 1086,
	410, 411, 991, 1039, 412, 1053, 414, 415, 0, 0,
	416, 0, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 579, 1087, 423, 1088, 1068, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 0, 434, 435,
	581, 582, 1069, 436, 584, 437, 438, 0, 439, 0,
	440, 441, 442, 443, 444, 445, 446, 1049, 448, 447,
	449, 0, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 0, 460,
	461, 462, 1089, 463, 464, 465, 466, 979, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 478, 479, 480,
	481, 0, 483, 484, 482, 485, 486, 487, 1032, 488,
	472, 473, 489, 490, 1090, 491, 492, 493, 494, 495,
	496, 1047, 0, 497, 0, 498, 499, 500, 501, 474,
	502, 507, 1093, 503, 504, 505, 506, 1070, 0, 509,
	510, 967, 508, 0, 511, 512, 513, 514, 515, 516,
	329, 517, 0, 518, 1059, 1060, 1061, 1062, 0, 527,
	0, 519, 520, 521, 1071, 522, 1072, 989, 523, 524,
	525, 526, 0, 528, 529, 0, 973, 530, 531, 532,
	534, 535, 533, 536, 1033, 537, 0, 0, 538, 539,
	540, 596, 1056, 1092, 0, 542, 541, 543, 599, 0,
	0, 0, 0, 544, 545, 600, 546, 547, 548, 970,
	0, 0, 0, 0, 0, 0, 966, 0, 0, 0,
	0, 0, 0, 964, 965, 1011, 983, 984, 985, 981,
	982, 994, 995, 0, 0, 0, 993, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1035, 999, 0, 0,
	0, 259, 260, 262, 261, 263, 264, 265, 266, 550,
	1048, 0, 267, 1055, 268, 1054, 0, 1065, 269, 270,
	271, 272, 273, 274, 1001, 1034, 968, 275, 1094, 1095,
	557, 0, 276, 277, 1041, 0, 1022, 0, 278, 279,
	280, 281, 282, 283, 284, 0, 0, 286, 287, 288,
	285, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1075, 299, 300, 1025, 1023, 1024,
	1031, 1027, 1026, 1030, 301, 302, 303, 304, 1058, 305,
	1052, 1051, 972, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 1043, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 978, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 1066,
	1067, 990, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 1050, 0, 0, 0, 338, 0, 339, 0, 0,
	1076, 340, 341, 1063, 1064, 342, 343, 0, 344, 1073,
	0, 1000, 345, 0, 346, 347, 348, 349, 350, 1036,
	1037, 1040, 413, 1078, 351, 352, 0, 353, 354, 355,
	356, 0, 0, 0, 249, 357, 358, 360, 0, 1077,
	359, 1045, 1046, 0, 1006, 0, 361, 362, 1079, 1038,
	1080, 363, 364, 365, 1081, 366, 0, 0, 0, 367,
	368, 369, 370, 371, 372, 0, 373, 375, 374, 0,
	376, 1074, 1082, 377, 378, 1083, 0, 379, 380, 381,
	1029, 1028, 382, 383, 384, 385, 0, 386, 387, 389,
	391, 388, 390, 395, 392, 393, 394, 397, 0, 396,
	1084, 398, 399, 400, 405, 407, 408, 403, 404, 406,
	409, 402, 1085, 401, 969, 250, 1086, 410, 411, 991,
	1039, 412, 1053, 414, 415, 0, 0, 416, 0, 0,
	0, 418, 419, 420, 0, 0, 421, 422, 579, 1087,
	423, 1088, 1068, 424, 425, 417, 426, 427, 428, 429,
	430, 431, 432, 433, 0, 434, 435, 581, 582, 1069,
	436, 584, 437, 438, 0, 439, 0, 440, 441, 442,
	443, 444, 445, 446, 1049, 448, 447, 449, 0, 450,
	0, 0, 0, 0, 0, 451, 0, 453, 454, 455,
	452, 456, 457, 458, 459, 0, 460, 461, 462, 1089,
	463, 464, 465, 466, 979, 467, 0, 468, 469, 475,
	476, 470, 471, 477, 478, 479, 480, 481, 0, 483,
	484, 482, 485, 486, 487, 1032, 488, 472, 473, 489,
	490, 1090, 491, 492, 493, 494, 495, 496, 1047, 0,
	497, 0, 498, 499, 500, 501, 474, 502, 507, 1093,
	503, 504, 505, 506, 1070, 0, 509, 510, 967, 508,
	0, 511, 512, 513, 514, 515, 516, 329, 517, 0,
	518, 1059, 1060, 1061, 1062, 0, 527, 0, 519, 520,
	521, 1071, 522, 1072, 989, 523, 524, 525, 526, 0,
	528, 529, 0, 973, 530, 531, 532, 534, 535, 533,
	536, 1033, 537, 0, 0, 538, 539, 540, 596, 1056,
	1092, 0, 542, 541, 543, 599, 0, 0, 0, 0,
	544, 545, 600, 546, 547, 548, 970, 0, 0, 0,
	0, 0, 0, 966, 0, 0, 0, 0, 0, 0,
	964, 965, 0, 0, 0, 0, 0, 0, 0, 995,
	1706, 0, 2418, 993, 1011, 983, 984, 985, 981, 982,
	994, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1035, 999, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 1048,
	0, 267, 1055, 268, 1054, 0, 1065, 269, 270, 271,
	272, 273, 274, 1001, 1034, 968, 275, 1094, 1095, 557,
	0, 276, 277, 1041, 0, 1022, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1075, 299, 300, 1025, 1023, 1024, 1031,
	1027, 1026, 1030, 301, 302, 303, 304, 1058, 305, 1052,
	1051, 972, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1043, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 978, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1066, 1067,
	990, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1050, 0, 0, 0, 338, 0, 339, 0, 0, 1076,
	340, 341, 1063, 1064, 342, 343, 0, 344, 1073, 0,
	1000, 345, 0, 346, 347, 348, 349, 350, 1036, 1037,
	1040, 413, 1078, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 249, 357, 358, 360, 0, 1077, 359,
	1045, 1046, 0, 1006, 0, 361, 362, 1079, 1038, 1080,
	363, 364, 365, 1081, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	1074, 1082, 377, 378, 1083, 0, 379, 380, 381, 1029,
	1028, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 1084,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 1085, 401, 969, 250, 1086, 410, 411, 991, 1039,
	412, 1053, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 1087, 423,
	1088, 1068, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 1069, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 1049, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 1089, 463,
	464, 465, 466, 979, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 0, 483, 484,
	482, 485, 486, 487, 1032, 488, 472, 473, 489, 490,
	1090, 491, 492, 493, 494, 495, 496, 1047, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 1093, 503,
	504, 505, 506, 1070, 0, 509, 510, 967, 508, 0,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	1059, 1060, 1061, 1062, 0, 527, 0, 519, 520, 521,
	1071, 522, 1072, 989, 523, 524, 525, 526, 0, 528,
	529, 0, 973, 530, 531, 532, 534, 535, 533, 536,
	1033, 537, 0, 0, 538, 539, 540, 596, 1056, 1092,
	0, 542, 541, 543, 599, 0, 0, 0, 0, 544,
	545, 600, 546, 547, 548, 970, 0, 0, 0, 0,
	0, 0, 966, 0, 0, 0, 0, 0, 0, 964,
	965, 0, 0, 0, 0, 0, 0, 0, 995, 0,
	0, 2416, 993, 1011, 983, 984, 985, 981, 982, 994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1035, 999, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 1048, 0,
	267, 1055, 268, 1054, 0, 1065, 269, 270, 271, 272,
	273, 274, 1001, 1034, 968, 275, 1094, 1095, 557, 0,
	276, 277, 1041, 0, 1022, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1075, 299, 300, 1025, 1023, 1024, 1031, 1027,
	1026, 1030, 301, 302, 303, 304, 1058, 305, 1052, 1051,
	972, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1043, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 978, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1066, 1067, 990,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1050,
	0, 0, 0, 338, 0, 339, 0, 0, 1076, 340,
	341, 1063, 1064, 342, 343, 0, 344, 1073, 0, 1000,
	345, 0, 346, 347, 348, 349, 350, 1036, 1037, 1040,
	413, 1078, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 249, 357, 358, 360, 0, 1077, 359, 1045,
	1046, 0, 1006, 0, 361, 362, 1079, 1038, 1080, 363,
	364, 365, 1081, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 1074,
	1082, 377, 378, 1083, 0, 379, 380, 381, 1029, 1028,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 1084, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	1085, 401, 969, 250, 1086, 410, 411, 991, 1039, 412,
	1053, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 1087, 423, 1088,
	1068, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 1069, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 1049, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 1089, 463, 464,
	465, 466, 979, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 1032, 488, 472, 473, 489, 490, 1090,
	491, 492, 493, 494, 495, 496, 1047, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 1093, 503, 504,
	505, 506, 1070, 0, 509, 510, 967, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 1059,
	1060, 1061, 1062, 0, 527, 0, 519, 520, 521, 1071,
	522, 1072, 989, 523, 524, 525, 526, 0, 528, 529,
	0, 973, 530, 531, 532, 534, 535, 533, 536, 1033,
	537, 0, 0, 538, 539, 540, 596, 1056, 1092, 0,
	542, 541, 543, 599, 0, 0, 0, 0, 544, 545,
	600, 546, 547, 548, 970, 0, 0, 0, 0, 0,
	0, 966, 0, 0, 0, 0, 0, 0, 964, 965,
	0, 0, 0, 0, 0, 0, 0, 995, 0, 0,
	2404, 993, 1011, 983, 984, 985, 981, 982, 994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1035, 999, 0, 0, 0, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 1048, 0, 267,
	1055, 268, 1054, 0, 1065, 269, 270, 271, 272, 273,
	274, 1001, 1034, 968, 275, 1094, 1095, 557, 0, 276,
	277, 1041, 0, 1022, 0, 278, 279, 280, 281, 282,
	283, 284, 0, 0, 286, 287, 288, 285, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1075, 299, 300, 1025, 1023, 1024, 1031, 1027, 1026,
	1030, 301, 302, 303, 304, 1058, 305, 1052, 1051, 972,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1043, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 978, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1066, 1067, 990, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1050, 0,
	0, 0, 338, 0, 339, 0, 0, 1076, 340, 341,
	1063, 1064, 342, 343, 0, 344, 1073, 0, 1000, 345,
	0, 346, 347, 348, 349, 350, 1036, 1037, 1040, 413,
	1078, 351, 352, 0, 353, 354, 355, 356, 0, 0,
	0, 249, 357, 358, 360, 0, 1077, 359, 1045, 1046,
	0, 1006, 0, 361, 362, 1079, 1038, 1080, 363, 364,
	365, 1081, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 0, 373, 375, 374, 0, 376, 1074, 1082,
	377, 378, 1083, 0, 379, 380, 381, 1029, 1028, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 396, 1084, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 1085,
	401, 969, 250, 1086, 410, 411, 991, 1039, 412, 1053,
	414, 415, 0, 0, 416, 0, 0, 0, 418, 419,
	420, 0, 0, 421, 422, 579, 1087, 423, 1088, 1068,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 0, 434, 435, 581, 582, 1069, 436, 584, 437,
	438, 0, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 1049, 448, 447, 449, 0, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 0, 460, 461, 462, 1089, 463, 464, 465,
	466, 979, 467, 0, 468, 469, 475, 476, 470, 471,
	477, 478, 479, 480, 481, 0, 483, 484, 482, 485,
	486, 487, 1032, 488, 472, 473, 489, 490, 1090, 491,
	492, 493, 494, 495, 496, 1047, 0, 497, 0, 498,
	499, 500, 501, 474, 502, 507, 1093, 503, 504, 505,
	506, 1070, 0, 509, 510, 967, 508, 0, 511, 512,
	513, 514, 515, 516, 329, 517, 0, 518, 1059, 1060,
	1061, 1062, 0, 527, 0, 519, 520, 521, 1071, 522,
	1072, 989, 523, 524, 525, 526, 0, 528, 529, 0,
	973, 530, 531, 532, 534, 535, 533, 536, 1033, 537,
	0, 0, 538, 539, 540, 596, 1056, 1092, 0, 542,
	541, 543, 599, 0, 0, 0, 0, 544, 545, 600,
	546, 547, 548, 970, 0, 0, 0, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 0, 964, 965, 0,
	0, 0, 0, 0, 0, 0, 995, 0, 0, 2393,
	993, 1011, 983, 984, 985, 981, 982, 994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1035, 999, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 1048, 0, 267, 1055,
	268, 1054, 0, 1065, 269, 270, 271, 272, 273, 274,
	1001, 1034, 968, 275, 1094, 1095, 557, 0, 276, 277,
	1041, 0, 1022, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1075, 299, 300, 1025, 1023, 1024, 1031, 1027, 1026, 1030,
	301, 302, 303, 304, 1058, 305, 1052, 1051, 972, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 1043, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 978, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1066, 1067, 990, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 1050, 0, 0,
	0, 338, 0, 339, 0, 0, 1076, 340, 341, 1063,
	1064, 342, 343, 0, 344, 1073, 0, 1000, 345, 0,
	346, 347, 348, 349, 350, 1036, 1037, 1040, 413, 1078,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	249, 357, 358, 360, 0, 1077, 359, 1045, 1046, 0,
	1006, 0, 361, 362, 1079, 1038, 1080, 363, 364, 365,
	1081, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 1074, 1082, 377,
	378, 1083, 0, 379, 380, 381, 1029, 1028, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 1084, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 1085, 401,
	969, 250, 1086, 410, 411, 991, 1039, 412, 1053, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 1087, 423, 1088, 1068, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 1069, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	1049, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 1089, 463, 464, 465, 466,
	979, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 1032, 488, 472, 473, 489, 490, 1090, 491, 492,
	493, 494, 495, 496, 1047, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 1093, 503, 504, 505, 506,
	1070, 0, 509, 510, 967, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 1059, 1060, 1061,
	1062, 0, 527, 0, 519, 520, 521, 1071, 522, 1072,
	989, 523, 524, 525, 526, 0, 528, 529, 0, 973,
	530, 531, 532, 534, 535, 533, 536, 1033, 537, 0,
	0, 538, 539, 540, 596, 1056, 1092, 0, 542, 541,
	543, 599, 0, 0, 0, 0, 544, 545, 600, 546,
	547, 548, 970, 0, 0, 0, 0, 0, 0, 966,
	0, 0, 0, 0, 0, 0, 964, 965, 0, 0,
	0, 0, 0, 0, 0, 995, 0, 0, 2391, 993,
	2382, 2389, 984, 985, 981, 982, 994, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1035, 999, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 1048, 0, 267, 1055, 268,
	1054, 0, 1065, 269, 270, 271, 272, 273, 274, 1001,
	1034, 968, 275, 1094, 1095, 557, 0, 276, 277, 1041,
	0, 1022, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1075,
	299, 300, 1025, 1023, 1024, 1031, 1027, 1026, 1030, 301,
	302, 303, 304, 1058, 2385, 1052, 1051, 972, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1043, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 978, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1066, 1067, 990, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1050, 0, 0, 0,
	338, 0, 339, 0, 0, 1076, 340, 341, 1063, 1064,
	342, 343, 0, 344, 1073, 0, 1000, 345, 0, 346,
	347, 348, 2386, 350, 1036, 1037, 1040, 413, 1078, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 249,
	357, 358, 360, 0, 1077, 359, 1045, 1046, 0, 1006,
	0, 361, 362, 1079, 1038, 1080, 363, 364, 365, 1081,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 1074, 1082, 377, 378,
	1083, 0, 379, 380, 381, 1029, 1028, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 2387, 2384, 392,
	393, 394, 397, 0, 396, 1084, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 1085, 401, 969,
	250, 1086, 410, 411, 991, 1039, 412, 1053, 414, 415,
	0, 0, 416, 0, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 579, 1087, 423, 1088, 1068, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 1069, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 1049,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 1089, 463, 464, 465, 466, 979,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 2388, 0, 483, 484, 482, 485, 486, 487,
	1032, 488, 472, 473, 489, 490, 1090, 491, 492, 493,
	494, 495, 496, 1047, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 1093, 503, 504, 505, 506, 1070,
	0, 509, 510, 967, 508, 0, 511, 512, 513, 514,
	515, 516, 329, 517, 0, 518, 1059, 1060, 1061, 1062,
	0, 527, 0, 519, 520, 521, 1071, 522, 1072, 989,
	523, 524, 525, 526, 0, 528, 529, 0, 973, 530,
	531, 532, 534, 535, 533, 536, 1033, 537, 0, 0,
	538, 539, 540, 596, 1056, 1092, 0, 542, 541, 543,
	599, 0, 0, 0, 0, 544, 545, 600, 546, 2383,
	548, 970, 0, 0, 0, 0, 0, 0, 966, 0,
	0, 0, 0, 0, 0, 964, 965, 0, 0, 0,
	0, 0, 0, 0, 995, 0, 0, 2379, 993, 2382,
	2389, 984, 985, 981, 982, 994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1035, 999, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 1048, 0, 267, 1055, 268, 1054,
	0, 1065, 269, 270, 271, 272, 273, 274, 1001, 1034,
	968, 275, 1094, 1095, 557, 0, 276, 277, 1041, 0,
	1022, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1075, 299,
	300, 1025, 1023, 1024, 1031, 1027, 1026, 1030, 301, 302,
	303, 304, 1058, 2385, 1052, 1051, 972, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	1043, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 978, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1066, 1067, 990, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 1050, 0, 0, 0, 338,
	0, 339, 0, 0, 1076, 340, 341, 1063, 1064, 342,
	343, 0, 344, 1073, 0, 1000, 345, 0, 346, 347,
	348, 2386, 350, 1036, 1037, 1040, 413, 1078, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 249, 357,
	358, 360, 0, 1077, 359, 1045, 1046, 0, 1006, 0,
	361, 362, 1079, 1038, 1080, 363, 364, 365, 1081, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 1074, 1082, 377, 378, 1083,
	0, 379, 380, 381, 1029, 1028, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 2387, 2384, 392, 393,
	394, 397, 0, 396, 1084, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 1085, 401, 969, 250,
	1086, 410, 411, 991, 1039, 412, 1053, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 1087, 423, 1088, 1068, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 1069, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 1049, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 1089, 463, 464, 465, 466, 979, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 2388, 0, 483, 484, 482, 485, 486, 487, 1032,
	488, 472, 473, 489, 490, 1090, 491, 492, 493, 494,
	495, 496, 1047, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 1093, 503, 504, 505, 506, 1070, 0,
	509, 510, 967, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 1059, 1060, 1061, 1062, 0,
	527, 0, 519, 520, 521, 1071, 522, 1072, 989, 523,
	524, 525, 526, 0, 528, 529, 0, 973, 530, 531,
	532, 534, 535, 533, 536, 1033, 537, 0, 0, 538,
	539, 540, 596, 1056, 1092, 0, 542, 541, 543, 599,
	0, 0, 0, 0, 544, 545, 600, 546, 2383, 548,
	970, 0, 0, 0, 0, 0, 0, 966, 0, 0,
	0, 0, 0, 0, 964, 965, 1011, 983, 984, 985,
	981, 982, 994, 995, 0, 0, 0, 993, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1035, 999, 0,
	0, 0, 259, 260, 262, 261, 263, 264, 265, 266,
	550, 1048, 0, 267, 1055, 268, 1054, 0, 1065, 269,
	270, 271, 272, 273, 274, 1001, 1034, 968, 275, 1094,
	1095, 557, 0, 276, 277, 1041, 0, 1022, 0, 278,
	279, 280, 281, 282, 283, 284, 0, 0, 286, 287,
	288, 285, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1075, 299, 300, 1025, 1023,
	1024, 1031, 1027, 1026, 1030, 301, 302, 303, 304, 1058,
	305, 1052, 1051, 972, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1043, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 978,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1066, 1067, 990, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1050, 0, 0, 0, 338, 0, 339, 0,
	0, 1076, 340, 341, 1063, 1064, 342, 343, 0, 344,
	1073, 0, 1000, 345, 0, 346, 347, 348, 349, 350,
	1036, 1037, 1040, 413, 1078, 351, 352, 0, 353, 354,
	355, 356, 0, 0, 0, 249, 357, 358, 360, 0,
	1077, 359, 1045, 1046, 0, 1006, 0, 361, 362, 1079,
	1038, 1080, 363, 364, 365, 1081, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 0, 373, 375, 374,
	0, 376, 1074, 1082, 377, 378, 1083, 0, 379, 380,
	381, 1029, 1028, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	396, 1084, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 1085, 401, 969, 250, 1086, 410, 411,
	991, 1039, 412, 1053, 414, 415, 0, 0, 416, 0,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 579,
	1087, 423, 1088, 1068, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 0, 434, 435, 581, 582,
	1069, 436, 584, 437, 438, 0, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 1049, 448, 447, 449, 0,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 0, 460, 461, 462,
	1089, 463, 464, 465, 466, 979, 467, 0, 468, 469,
	475, 476, 470, 471, 477, 478, 479, 480, 481, 0,
	483, 484, 482, 485, 486, 487, 1032, 488, 472, 473,
	489, 490, 1090, 491, 492, 493, 494, 495, 496, 1047,
	0, 497, 0, 498, 499, 500, 501, 474, 502, 507,
	1093, 503, 504, 505, 506, 1070, 0, 509, 510, 967,
	508, 0, 511, 512, 513, 514, 515, 516, 329, 517,
	0, 518, 1059, 1060, 1061, 1062, 0, 527, 0, 519,
	520, 521, 1071, 522, 1072, 989, 523, 524, 525, 526,
	0, 528, 529, 0, 973, 530, 531, 532, 534, 535,
	533, 536, 1033, 537, 0, 0, 538, 539, 540, 596,
	1056, 1092, 0, 542, 541, 543, 599, 0, 0, 0,
	0, 544, 545, 600, 546, 547, 548, 970, 0, 0,
	0, 0, 0, 0, 966, 0, 0, 0, 0, 0,
	0, 964, 965, 0, 0, 0, 0, 0, 1714, 0,
	995, 0, 0, 0, 993, 1011, 983, 984, 985, 981,
	982, 994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 2197, 257,
	258, 0, 0, 0, 0, 0, 1035, 999, 0, 0,
	0, 259, 260, 262, 261, 263, 264, 265, 266, 550,
	1048, 0, 267, 1055, 268, 1054, 0, 1065, 269, 270,
	271, 272, 273, 274, 1001, 1034, 968, 275, 1094, 1095,
	557, 0, 276, 277, 1041, 0, 1022, 0, 278, 279,
	280, 281, 282, 283, 284, 0, 0, 286, 287, 288,
	285, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1075, 299, 300, 1025, 1023, 1024,
	1031, 1027, 1026, 1030, 301, 302, 303, 304, 1058, 305,
	1052, 1051, 972, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 1043, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 978, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 1066,
	1067, 990, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 1050, 0, 0, 0, 338, 0, 339, 0, 0,
	1076, 340, 341, 1063, 1064, 342, 343, 0, 344, 1073,
	0, 1000, 345, 0, 346, 347, 348, 349, 350, 1036,
	1037, 1040, 413, 1078, 351, 352, 0, 353, 354, 355,
	356, 0, 0, 0, 249, 357, 358, 360, 0, 1077,
	359, 1045, 1046, 0, 1006, 0, 361, 362, 1079, 1038,
	1080, 363, 364, 365, 1081, 366, 0, 0, 0, 367,
	368, 369, 370, 371, 372, 0, 373, 375, 374, 0,
	376, 1074, 1082, 377, 378, 1083, 0, 379, 380, 381,
	1029, 1028, 382, 383, 384, 385, 0, 386, 387, 389,
	391, 388, 390, 395, 392, 393, 394, 397, 0, 396,
	1084, 398, 399, 400, 405, 407, 408, 403, 404, 406,
	409, 402, 1085, 401, 969, 250, 1086, 410, 411, 991,
	1039, 412, 1053, 414, 415, 0, 0, 416, 0, 0,
	0, 418, 419, 420, 0, 0, 421, 422, 579, 1087,
	423, 1088, 1068, 424, 425, 417, 426, 427, 428, 429,
	430, 431, 432, 433, 0, 434, 435, 581, 582, 1069,
	436, 584, 437, 438, 0, 439, 0, 440, 441, 442,
	443, 444, 445, 446, 1049, 448, 447, 449, 0, 450,
	0, 0, 0, 0, 0, 451, 0, 453, 454, 455,
	452, 456, 457, 458, 459, 0, 460, 461, 462, 1089,
	463, 464, 465, 466, 979, 467, 0, 468, 469, 475,
	476, 470, 471, 477, 478, 479, 480, 481, 0, 483,
	484, 482, 485, 486, 487, 1032, 488, 472, 473, 489,
	490, 1090, 491, 492, 493, 494, 495, 496, 1047, 0,
	497, 0, 498, 499, 500, 501, 474, 502, 507, 1093,
	503, 504, 505, 506, 1070, 0, 509, 510, 967, 508,
	0, 511, 512, 513, 514, 515, 516, 329, 517, 0,
	518, 1059, 1060, 1061, 1062, 0, 527, 0, 519, 520,
	521, 1071, 522, 1072, 989, 523, 524, 525, 526, 0,
	528, 529, 0, 973, 530, 531, 532, 534, 535, 533,
	536, 1033, 537, 0, 0, 538, 539, 540, 596, 1056,
	1092, 0, 542, 541, 543, 599, 0, 0, 0, 0,
	544, 545, 600, 546, 547, 548, 970, 0, 0, 0,
	0, 0, 0, 966, 0, 0, 0, 0, 0, 0,
	964, 965, 0, 0, 0, 0, 0, 0, 0, 995,
	0, 0, 1566, 993, 1011, 983, 984, 985, 981, 982,
	994, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1035, 999, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 1048,
	0, 267, 1055, 268, 1054, 0, 1065, 269, 270, 271,
	272, 273, 274, 1001, 1034, 968, 275, 1094, 1095, 557,
	0, 276, 277, 1041, 0, 1022, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1075, 299, 300, 1025, 1023, 1024, 1031,
	1027, 1026, 1030, 301, 302, 303, 304, 1058, 305, 1052,
	1051, 972, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1043, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 978, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1066, 1067,
	990, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1050, 0, 0, 0, 338, 0, 339, 0, 0, 1076,
	340, 341, 1063, 1064, 342, 343, 0, 344, 1073, 0,
	1000, 345, 0, 346, 347, 348, 349, 350, 1036, 1037,
	1040, 413, 1078, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 249, 357, 358, 360, 0, 1077, 359,
	1045, 1046, 0, 1006, 0, 361, 362, 1079, 1038, 1080,
	363, 364, 365, 1081, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	1074, 1082, 377, 378, 1083, 0, 379, 380, 381, 1029,
	1028, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 1084,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 1085, 401, 969, 250, 1086, 410, 411, 991, 1039,
	412, 1053, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 1087, 423,
	1088, 1068, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 1069, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 1049, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 1089, 463,
	464, 465, 466, 979, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 0, 483, 484,
	482, 485, 486, 487, 1032, 488, 472, 473, 489, 490,
	1090, 491, 492, 493, 494, 495, 496, 1047, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 1093, 503,
	504, 505, 506, 1070, 0, 509, 510, 967, 508, 0,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	1059, 1060, 1061, 1062, 0, 527, 0, 519, 520, 521,
	1071, 522, 1072, 989, 523, 524, 525, 526, 0, 528,
	529, 0, 973, 530, 531, 532, 534, 535, 533, 536,
	1033, 537, 0, 0, 538, 539, 540, 596, 1056, 1092,
	0, 542, 541, 543, 599, 0, 0, 0, 0, 544,
	545, 600, 546, 547, 548, 970, 0, 0, 0, 0,
	0, 0, 966, 0, 0, 0, 0, 0, 0, 964,
	965, 0, 0, 0, 0, 0, 0, 0, 995, 0,
	0, 1501, 993, 1011, 983, 984, 985, 981, 982, 994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1035, 999, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 1048, 0,
	267, 1055, 268, 1054, 0, 1065, 269, 270, 271, 272,
	273, 274, 1001, 1034, 968, 275, 1094, 1095, 557, 0,
	276, 277, 1041, 0, 1022, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1075, 299, 300, 1025, 1023, 1024, 1031, 1027,
	1026, 1030, 301, 302, 303, 304, 1058, 305, 1052, 1051,
	972, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1043, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 978, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1066, 1067, 990,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1050,
	0, 0, 0, 338, 0, 339, 0, 0, 1076, 340,
	341, 1063, 1064, 342, 343, 0, 344, 1073, 0, 1000,
	345, 0, 346, 347, 348, 349, 350, 1036, 1037, 1040,
	413, 1078, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 249, 357, 358, 360, 0, 1077, 359, 1045,
	1046, 0, 1006, 0, 361, 362, 1079, 1038, 1080, 363,
	364, 365, 1081, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 1074,
	1082, 377, 378, 1083, 0, 379, 380, 381, 1029, 1028,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 1084, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	1085, 401, 969, 250, 1086, 410, 411, 991, 1039, 412,
	1053, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 1087, 423, 1088,
	1068, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 1069, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 1049, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 1089, 463, 464,
	465, 466, 979, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 1032, 488, 472, 473, 489, 490, 1090,
	491, 492, 493, 494, 495, 496, 1047, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 1093, 503, 504,
	505, 506, 1070, 0, 509, 510, 967, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 1059,
	1060, 1061, 1062, 0, 527, 0, 519, 520, 521, 1071,
	522, 1072, 989, 523, 524, 525, 526, 0, 528, 529,
	0, 973, 530, 531, 532, 534, 535, 533, 536, 1033,
	537, 0, 0, 538, 539, 540, 596, 1056, 1092, 0,
	542, 541, 543, 599, 0, 0, 0, 0, 544, 545,
	600, 546, 547, 548, 970, 0, 0, 0, 0, 0,
	0, 966, 0, 0, 0, 0, 0, 0, 964, 965,
	0, 0, 0, 0, 0, 0, 0, 995, 0, 0,
	1496, 993, 1011, 983, 984, 985, 981, 982, 994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1035, 999, 0, 0, 0, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 1048, 0, 267,
	1055, 268, 1054, 0, 1065, 269, 270, 271, 272, 273,
	274, 1001, 1034, 968, 275, 1094, 1095, 557, 0, 276,
	277, 1041, 0, 1022, 0, 278, 279, 280, 281, 282,
	283, 284, 0, 0, 286, 287, 288, 285, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1075, 299, 300, 1025, 1023, 1024, 1031, 1027, 1026,
	1030, 301, 302, 303, 304, 1058, 305, 1052, 1051, 972,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1043, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 978, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1066, 1067, 990, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1050, 0,
	0, 0, 338, 0, 339, 0, 0, 1076, 340, 341,
	1063, 1064, 342, 343, 0, 344, 1073, 0, 1000, 345,
	0, 346, 347, 348, 349, 350, 1036, 1037, 1040, 413,
	1078, 351, 352, 0, 353, 354, 355, 356, 0, 0,
	0, 249, 357, 358, 360, 0, 1077, 359, 1045, 1046,
	0, 1006, 0, 361, 362, 1079, 1038, 1080, 363, 364,
	365, 1081, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 0, 373, 375, 374, 0, 376, 1074, 1082,
	377, 378, 1083, 0, 379, 380, 381, 1029, 1028, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 396, 1084, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 1085,
	401, 969, 250, 1086, 410, 411, 991, 1039, 412, 1053,
	414, 415, 0, 0, 416, 0, 0, 0, 418, 419,
	420, 0, 0, 421, 422, 579, 1087, 423, 1088, 1068,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 0, 434, 435, 581, 582, 1069, 436, 584, 437,
	438, 0, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 1049, 448, 447, 449, 0, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 0, 460, 461, 462, 1089, 463, 464, 465,
	466, 979, 467, 0, 468, 469, 475, 476, 470, 471,
	477, 478, 479, 480, 481, 0, 483, 484, 482, 485,
	486, 487, 1032, 488, 472, 473, 489, 490, 1090, 491,
	492, 493, 494, 495, 496, 1047, 0, 497, 0, 498,
	499, 500, 501, 474, 502, 507, 1093, 503, 504, 505,
	506, 1070, 0, 509, 510, 967, 508, 0, 511, 512,
	513, 514, 515, 516, 329, 517, 0, 518, 1059, 1060,
	1061, 1062, 0, 527, 0, 519, 520, 521, 1071, 522,
	1072, 989, 523, 524, 525, 526, 0, 528, 529, 0,
	973, 530, 531, 532, 534, 535, 533, 536, 1033, 537,
	0, 0, 538, 539, 540, 596, 1056, 1092, 0, 542,
	541, 543, 599, 0, 0, 0, 0, 544, 545, 600,
	546, 547, 548, 970, 0, 0, 0, 0, 0, 0,
	966, 0, 0, 0, 0, 0, 0, 964, 965, 0,
	0, 0, 0, 0, 0, 0, 995, 0, 0, 1487,
	993, 1011, 983, 984, 985, 981, 982, 994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1035, 999, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 1048, 0, 267, 1055,
	268, 1054, 0, 1065, 269, 270, 271, 272, 273, 274,
	1001, 1034, 968, 275, 1094, 1095, 557, 0, 276, 277,
	1041, 0, 1022, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1075, 299, 300, 1025, 1023, 1024, 1031, 1027, 1026, 1030,
	301, 302, 303, 304, 1058, 305, 1052, 1051, 972, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 1043, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 978, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1066, 1067, 990, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 1050, 0, 0,
	0, 338, 0, 339, 0, 0, 1076, 340, 341, 1063,
	1064, 342, 343, 0, 344, 1073, 0, 1000, 345, 0,
	346, 347, 348, 349, 350, 1036, 1037, 1040, 413, 1078,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	249, 357, 358, 360, 0, 1077, 359, 1045, 1046, 0,
	1006, 0, 361, 362, 1079, 1038, 1080, 363, 364, 365,
	1081, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 1074, 1082, 377,
	378, 1083, 0, 379, 380, 381, 1029, 1028, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 1084, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 1085, 401,
	969, 250, 1086, 410, 411, 991, 1039, 412, 1053, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 1087, 423, 1088, 1068, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 1069, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	1049, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 1089, 463, 464, 465, 466,
	979, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 1032, 488, 472, 473, 489, 490, 1090, 491, 492,
	493, 494, 495, 496, 1047, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 1093, 503, 504, 505, 506,
	1070, 0, 509, 510, 967, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 1059, 1060, 1061,
	1062, 0, 527, 0, 519, 520, 521, 1071, 522, 1072,
	989, 523, 524, 525, 526, 0, 528, 529, 0, 973,
	530, 531, 532, 534, 535, 533, 536, 1033, 537, 0,
	0, 538, 539, 540, 596, 1056, 1092, 0, 542, 541,
	543, 599, 0, 0, 0, 0, 544, 545, 600, 546,
	547, 548, 970, 0, 0, 0, 0, 0, 0, 966,
	0, 0, 0, 0, 0, 0, 964, 965, 0, 0,
	0, 0, 0, 0, 0, 995, 0, 0, 1482, 993,
	1011, 983, 984, 985, 981, 982, 994, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1035, 999, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 1048, 0, 267, 1055, 268,
	1054, 0, 1065, 269, 270, 271, 272, 273, 274, 1001,
	1034, 968, 275, 1094, 1095, 557, 0, 276, 277, 1041,
	0, 1022, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1075,
	299, 300, 1025, 1023, 1024, 1031, 1027, 1026, 1030, 301,
	302, 303, 304, 1058, 305, 1052, 1051, 972, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1043, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 978, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1066, 1067, 990, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1050, 0, 0, 0,
	338, 0, 339, 0, 0, 1076, 340, 341, 1063, 1064,
	342, 343, 0, 344, 1073, 0, 1000, 345, 0, 346,
	347, 348, 349, 350, 1036, 1037, 1040, 413, 1078, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 249,
	357, 358, 360, 0, 1077, 359, 1045, 1046, 0, 1006,
	0, 361, 362, 1079, 1038, 1080, 363, 364, 365, 1081,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 1074, 1082, 377, 378,
	1083, 0, 379, 380, 381, 1029, 1028, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 1084, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 1085, 401, 969,
	250, 1086, 410, 411, 991, 1039, 412, 1053, 414, 415,
	0, 0, 416, 0, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 579, 1087, 423, 1088, 1068, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 1069, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 1049,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 1089, 463, 464, 465, 466, 979,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 0, 483, 484, 482, 485, 486, 487,
	1032, 488, 472, 473, 489, 490, 1090, 491, 492, 493,
	494, 495, 496, 1047, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 1093, 503, 504, 505, 506, 1070,
	0, 509, 510, 967, 508, 0, 511, 512, 513, 514,
	515, 516, 329, 517, 0, 518, 1059, 1060, 1061, 1062,
	0, 527, 0, 519, 520, 521, 1071, 522, 1072, 989,
	523, 524, 525, 526, 0, 528, 529, 0, 973, 530,
	531, 532, 534, 535, 533, 536, 1033, 537, 0, 0,
	538, 539, 540, 596, 1056, 1092, 0, 542, 541, 543,
	599, 0, 0, 0, 0, 544, 545, 600, 546, 547,
	548, 970, 0, 0, 0, 0, 0, 0, 966, 0,
	0, 0, 0, 0, 0, 964, 965, 0, 0, 0,
	0, 0, 0, 0, 995, 0, 0, 1464, 993, 1011,
	983, 984, 985, 981, 982, 994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1035, 999, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 1048, 0, 267, 1055, 268, 1054,
	0, 1065, 269, 270, 271, 272, 273, 274, 1001, 1034,
	968, 275, 1094, 1095, 557, 0, 276, 277, 1041, 0,
	1022, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1075, 299,
	300, 1025, 1023, 1024, 1031, 1027, 1026, 1030, 301, 302,
	303, 304, 1058, 305, 1052, 1051, 972, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	1043, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 978, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1066, 1067, 990, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 1050, 0, 0, 0, 338,
	0, 339, 0, 0, 1076, 340, 341, 1063, 1064, 342,
	343, 0, 344, 1073, 0, 1000, 345, 0, 346, 347,
	348, 349, 350, 1036, 1037, 1040, 413, 1078, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 249, 357,
	358, 360, 0, 1077, 359, 1045, 1046, 0, 1006, 0,
	361, 362, 1079, 1038, 1080, 363, 364, 365, 1081, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 1074, 1082, 377, 378, 1083,
	0, 379, 380, 381, 1029, 1028, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 1084, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 1085, 401, 969, 250,
	1086, 410, 411, 991, 1039, 412, 1053, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 1087, 423, 1088, 1068, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 1069, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 1049, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 1089, 463, 464, 465, 466, 979, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 1032,
	488, 472, 473, 489, 490, 1090, 491, 492, 493, 494,
	495, 496, 1047, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 1093, 503, 504, 505, 506, 1070, 0,
	509, 510, 967, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 1059, 1060, 1061, 1062, 0,
	527, 0, 519, 520, 521, 1071, 522, 1072, 989, 523,
	524, 525, 526, 0, 528, 529, 0, 973, 530, 531,
	532, 534, 535, 533, 536, 1033, 537, 0, 0, 538,
	539, 540, 596, 1056, 1092, 0, 542, 541, 543, 599,
	0, 0, 0, 0, 544, 545, 600, 546, 547, 548,
	970, 0, 0, 0, 0, 0, 0, 966, 0, 0,
	0, 0, 0, 0, 964, 965, 0, 0, 0, 0,
	0, 0, 0, 995, 0, 0, 1350, 993, 1011, 983,
	984, 985, 981, 982, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1035,
	999, 0, 0, 0, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 1048, 0, 267, 1055, 268, 1054, 0,
	1065, 269, 270, 271, 272, 273, 274, 1001, 1034, 968,
	275, 1094, 1095, 557, 0, 276, 277, 1041, 0, 1022,
	0, 278, 279, 280, 281, 282, 283, 284, 0, 0,
	286, 287, 288, 285, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1075, 299, 300,
	1025, 1023, 1024, 1031, 1027, 1026, 1030, 301, 302, 303,
	304, 1058, 305, 1052, 1051, 972, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1043,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 978, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1066, 1067, 990, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1050, 0, 0, 0, 338, 0,
	339, 0, 0, 1076, 340, 341, 1063, 1064, 342, 343,
	0, 344, 1073, 0, 1000, 345, 0, 346, 347, 348,
	349, 350, 1349, 1037, 1040, 413, 1078, 351, 352, 0,
	353, 354, 355, 356, 0, 0, 0, 249, 357, 358,
	360, 0, 1077, 359, 1045, 1046, 0, 1006, 0, 361,
	362, 1079, 1038, 1080, 363, 364, 365, 1081, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 0, 373,
	375, 374, 0, 376, 1074, 1082, 377, 378, 1083, 0,
	379, 380, 381, 1029, 1028, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 1084, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 1085, 401, 969, 250, 1086,
	410, 411, 991, 1039, 412, 1053, 414, 415, 0, 0,
	416, 0, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 579, 1087, 423, 1088, 1068, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 0, 434, 435,
	581, 582, 1069, 436, 584, 437, 438, 0, 439, 0,
	440, 441, 442, 443, 444, 445, 446, 1049, 448, 447,
	449, 0, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 0, 460,
	461, 462, 1089, 463, 464, 465, 466, 979, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 478, 479, 480,
	481, 0, 483, 484, 482, 485, 486, 487, 1032, 488,
	472, 473, 489, 490, 1090, 491, 492, 493, 494, 495,
	496, 1047, 0, 497, 0, 498, 499, 500, 501, 474,
	502, 507, 1093, 503, 504, 505, 506, 1070, 0, 509,
	510, 967, 508, 0, 511, 512, 513, 514, 515, 516,
	329, 517, 0, 518, 1059, 1060, 1061, 1062, 0, 527,
	0, 519, 520, 521, 1071, 522, 1072, 989, 523, 524,
	525, 526, 0, 528, 529, 0, 973, 530, 531, 532,
	534, 535, 533, 536, 1033, 537, 0, 0, 538, 539,
	540, 596, 1056, 1092, 0, 542, 541, 543, 599, 0,
	0, 0, 0, 544, 545, 600, 546, 547, 548, 970,
	0, 0, 0, 0, 0, 0, 966, 0, 0, 0,
	0, 0, 0, 964, 965, 0, 0, 0, 0, 0,
	0, 0, 995, 0, 0, 1344, 993, 1011, 983, 984,
	985, 981, 982, 994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1035, 999,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 1048, 0, 267, 1055, 268, 1054, 0, 1065,
	269, 270, 271, 272, 273, 274, 1001, 1034, 968, 275,
	1094, 1095, 557, 0, 276, 277, 1041, 0, 1022, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1075, 299, 300, 1025,
	1023, 1024, 1031, 1027, 1026, 1030, 301, 302, 303, 304,
	1058, 305, 1052, 1051, 972, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1043, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	978, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1066, 1067, 990, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1050, 0, 0, 0, 338, 0, 339,
	0, 0, 1076, 340, 341, 1063, 1064, 342, 343, 0,
	344, 1073, 0, 1000, 345, 0, 346, 347, 348, 349,
	350, 1343, 1037, 1040, 413, 1078, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 249, 357, 358, 360,
	0, 1077, 359, 1045, 1046, 0, 1006, 0, 361, 362,
	1079, 1038, 1080, 363, 364, 365, 1081, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 1074, 1082, 377, 378, 1083, 0, 379,
	380, 381, 1029, 1028, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 1084, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 1085, 401, 969, 250, 1086, 410,
	411, 991, 1039, 412, 1053, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 1087, 423, 1088, 1068, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 1069, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 1049, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 1089, 463, 464, 465, 466, 979, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 1032, 488, 472,
	473, 489, 490, 1090, 491, 492, 493, 494, 495, 496,
	1047, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 1093, 503, 504, 505, 506, 1070, 0, 509, 510,
	967, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 1059, 1060, 1061, 1062, 0, 527, 0,
	519, 520, 521, 1071, 522, 1072, 989, 523, 524, 525,
	526, 0, 528, 529, 0, 973, 530, 531, 532, 534,
	535, 533, 536, 1033, 537, 0, 0, 538, 539, 540,
	596, 1056, 1092, 0, 542, 541, 543, 599, 0, 0,
	0, 0, 544, 545, 600, 546, 547, 548, 970, 0,
	0, 0, 0, 0, 0, 966, 0, 0, 0, 0,
	0, 0, 964, 965, 0, 0, 0, 0, 0, 0,
	0, 995, 0, 0, 1337, 993, 1011, 983, 984, 985,
	981, 982, 994, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1035, 999, 0,
	0, 0, 259, 260, 262, 261, 263, 264, 265, 266,
	550, 1048, 0, 267, 1055, 268, 1054, 0, 1065, 269,
	270, 271, 272, 273, 274, 1001, 1034, 968, 275, 1094,
	1095, 557, 0, 276, 277, 1041, 0, 1022, 0, 278,
	279, 280, 281, 282, 283, 284, 0, 0, 286, 287,
	288, 285, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1075, 299, 300, 1025, 1023,
	1024, 1031, 1027, 1026, 1030, 301, 302, 303, 304, 1058,
	305, 1052, 1051, 972, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1043, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 978,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1066, 1067, 990, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1050, 0, 0, 0, 338, 0, 339, 0,
	0, 1076, 340, 341, 1063, 1064, 342, 343, 0, 344,
	1073, 0, 1000, 345, 0, 346, 347, 348, 349, 350,
	1036, 1037, 1040, 413, 1078, 351, 352, 0, 353, 354,
	355, 356, 0, 0, 0, 249, 357, 358, 360, 0,
	1077, 359, 1045, 1046, 0, 1006, 0, 361, 362, 1079,
	1038, 1080, 363, 364, 365, 1081, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 0, 373, 375, 374,
	0, 376, 1074, 1082, 377, 378, 1083, 0, 379, 380,
	381, 1029, 1028, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	396, 1084, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 1085, 401, 969, 250, 1086, 410, 411,
	991, 1039, 412, 1053, 414, 415, 0, 0, 416, 0,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 579,
	1087, 423, 1088, 1068, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 0, 434, 435, 581, 582,
	1069, 436, 584, 437, 438, 0, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 1049, 448, 447, 449, 0,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 0, 460, 461, 462,
	1089, 463, 464, 465, 466, 979, 467, 0, 468, 469,
	475, 476, 470, 471, 477, 478, 479, 480, 481, 0,
	483, 484, 482, 485, 486, 487, 1032, 488, 472, 473,
	489, 490, 1090, 491, 492, 493, 494, 495, 496, 1047,
	0, 497, 0, 498, 499, 500, 501, 474, 502, 507,
	1093, 503, 504, 505, 506, 1070, 0, 509, 510, 967,
	508, 0, 511, 512, 513, 514, 515, 516, 329, 517,
	0, 518, 1059, 1060, 1061, 1062, 0, 527, 0, 519,
	520, 521, 1071, 522, 1072, 989, 523, 524, 525, 526,
	0, 528, 529, 0, 973, 530, 531, 532, 534, 535,
	533, 536, 1033, 537, 0, 0, 538, 539, 540, 596,
	1056, 1092, 0, 542, 541, 543, 599, 0, 0, 0,
	0, 544, 545, 600, 546, 547, 548, 970, 0, 0,
	0, 0, 0, 0, 966, 0, 0, 0, 0, 0,
	0, 964, 965, 1011, 983, 984, 985, 981, 982, 994,
	995, 0, 0, 0, 993, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1035, 999, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 1048, 0,
	267, 1055, 268, 1054, 0, 1065, 269, 270, 271, 272,
	273, 274, 1001, 1034, 968, 275, 1094, 1095, 557, 0,
	276, 277, 1041, 0, 1022, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1075, 299, 300, 1025, 1023, 1024, 1031, 1027,
	1026, 1030, 301, 302, 303, 304, 1058, 305, 1052, 1051,
	972, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 1043, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 978, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1066, 1067, 990,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 1050,
	0, 0, 0, 338, 0, 339, 0, 0, 1076, 340,
	341, 1063, 1064, 342, 343, 0, 344, 1073, 0, 1000,
	345, 0, 346, 347, 348, 349, 350, 1036, 1037, 1040,
	413, 1078, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 249, 357, 358, 360, 0, 1077, 359, 1045,
	1046, 0, 1006, 0, 361, 362, 1079, 1038, 1080, 363,
	364, 365, 1081, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 1074,
	1082, 377, 378, 1083, 0, 379, 380, 381, 1029, 1028,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 1084, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	1085, 401, 969, 250, 1086, 410, 411, 991, 1039, 412,
	1053, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 1087, 423, 1088,
	1068, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 1069, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 1049, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 1089, 463, 464,
	465, 466, 979, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 1032, 488, 472, 473, 489, 490, 1090,
	491, 492, 493, 494, 495, 496, 1047, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 1093, 503, 504,
	505, 506, 1070, 0, 509, 510, 967, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 1059,
	1060, 1061, 1062, 0, 527, 0, 519, 520, 521, 1071,
	522, 1072, 989, 523, 524, 525, 526, 0, 528, 529,
	0, 973, 530, 531, 532, 534, 535, 533, 536, 1033,
	537, 0, 0, 538, 539, 540, 596, 1056, 1092, 0,
	542, 541, 543, 599, 0, 0, 0, 0, 544, 545,
	600, 546, 547, 548, 970, 0, 0, 0, 0, 0,
	0, 966, 0, 0, 0, 0, 0, 0, 964, 965,
	1011, 983, 984, 985, 981, 982, 994, 995, 0, 0,
	0, 993, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1035, 999, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 1048, 0, 267, 1055, 268,
	1054, 0, 1065, 269, 270, 271, 272, 273, 274, 1001,
	1034, 968, 275, 1094, 1095, 557, 0, 276, 277, 1041,
	0, 1022, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1075,
	299, 4129, 1025, 1023, 1024, 1031, 1027, 1026, 1030, 301,
	302, 303, 304, 1058, 305, 1052, 1051, 972, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1043, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 978, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1066, 1067, 990, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1050, 0, 0, 0,
	338, 0, 339, 0, 0, 1076, 340, 341, 1063, 1064,
	342, 343, 0, 344, 1073, 0, 1000, 345, 0, 346,
	347, 348, 349, 350, 1036, 1037, 1040, 413, 1078, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 249,
	357, 358, 360, 0, 1077, 359, 1045, 1046, 0, 1006,
	0, 361, 362, 1079, 1038, 1080, 363, 364, 365, 1081,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 1074, 1082, 377, 378,
	1083, 0, 379, 380, 381, 1029, 1028, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 1084, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 1085, 401, 969,
	250, 1086, 410, 411, 991, 1039, 412, 1053, 414, 415,
	0, 0, 416, 0, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 579, 1087, 423, 1088, 1068, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 1069, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 1049,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 1089, 463, 464, 465, 466, 979,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 0, 483, 484, 482, 485, 486, 487,
	1032, 488, 472, 473, 489, 490, 1090, 491, 492, 493,
	494, 495, 496, 1047, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 1093, 503, 504, 505, 506, 1070,
	0, 509, 510, 967, 508, 0, 511, 512, 513, 514,
	515, 516, 329, 517, 0, 518, 1059, 1060, 1061, 1062,
	0, 527, 0, 519, 520, 521, 1071, 522, 1072, 989,
	523, 524, 525, 526, 0, 4128, 529, 0, 973, 530,
	531, 532, 534, 535, 533, 536, 1033, 537, 0, 0,
	538, 539, 540, 596, 1056, 1092, 0, 542, 541, 543,
	599, 0, 0, 0, 0, 544, 545, 600, 546, 547,
	548, 970, 0, 0, 0, 0, 0, 0, 966, 0,
	0, 0, 0, 0, 0, 964, 965, 1011, 983, 984,
	985, 981, 982, 994, 995, 0, 0, 0, 993, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1035, 999,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 4127, 1048, 0, 267, 1055, 268, 1054, 0, 1065,
	269, 270, 271, 272, 273, 274, 1001, 1034, 968, 275,
	1094, 1095, 557, 0, 276, 277, 1041, 0, 1022, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1075, 299, 4129, 1025,
	1023, 1024, 1031, 1027, 1026, 1030, 301, 302, 303, 304,
	1058, 305, 1052, 1051, 972, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1043, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	978, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1066, 1067, 990, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1050, 0, 0, 0, 338, 0, 339,
	0, 0, 1076, 340, 341, 1063, 1064, 342, 343, 0,
	344, 1073, 0, 1000, 345, 0, 346, 347, 348, 349,
	350, 1036, 1037, 1040, 413, 1078, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 249, 357, 358, 360,
	0, 1077, 359, 1045, 1046, 0, 1006, 0, 361, 362,
	1079, 1038, 1080, 363, 364, 365, 1081, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 1074, 1082, 377, 378, 1083, 0, 379,
	380, 381, 1029, 1028, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 1084, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 1085, 401, 969, 250, 1086, 410,
	411, 991, 1039, 412, 1053, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 1087, 423, 1088, 1068, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 1069, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 1049, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 1089, 463, 464, 465, 466, 979, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 1032, 488, 472,
	473, 489, 490, 1090, 491, 492, 493, 494, 495, 496,
	1047, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 1093, 503, 504, 505, 506, 1070, 0, 509, 510,
	967, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 1059, 1060, 1061, 1062, 0, 527, 0,
	519, 520, 521, 1071, 522, 1072, 989, 523, 524, 525,
	526, 0, 4128, 529, 0, 973, 530, 531, 532, 534,
	535, 533, 536, 1033, 537, 0, 0, 538, 539, 540,
	596, 1056, 1092, 0, 542, 541, 543, 599, 0, 0,
	0, 0, 544, 545, 600, 546, 547, 548, 970, 0,
	0, 0, 0, 0, 0, 966, 0, 0, 0, 0,
	0, 0, 964, 965, 1011, 983, 984, 985, 2813, 2814,
	994, 995, 0, 0, 0, 993, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1035, 999, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 1048,
	0, 267, 1055, 268, 1054, 0, 1065, 269, 270, 271,
	272, 273, 274, 1001, 1034, 968, 275, 1094, 1095, 557,
	0, 276, 277, 1041, 0, 1022, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1075, 299, 300, 1025, 1023, 1024, 1031,
	1027, 1026, 1030, 301, 302, 303, 304, 1058, 305, 1052,
	1051, 972, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1043, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 978, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1066, 1067,
	990, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1050, 0, 0, 0, 338, 0, 339, 0, 0, 1076,
	340, 341, 1063, 1064, 342, 343, 0, 344, 1073, 0,
	1000, 345, 0, 346, 347, 348, 349, 350, 1036, 1037,
	1040, 413, 1078, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 249, 357, 358, 360, 0, 1077, 359,
	1045, 1046, 0, 1006, 0, 361, 362, 1079, 1038, 1080,
	363, 364, 365, 1081, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	1074, 1082, 377, 378, 1083, 0, 379, 380, 381, 1029,
	1028, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 1084,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 1085, 401, 969, 250, 1086, 410, 411, 991, 1039,
	412, 1053, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 1087, 423,
	1088, 1068, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 1069, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 1049, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 1089, 463,
	464, 465, 466, 979, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 0, 483, 484,
	482, 485, 486, 487, 1032, 488, 472, 473, 489, 490,
	1090, 491, 492, 493, 494, 495, 496, 1047, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 1093, 503,
	504, 505, 506, 1070, 0, 509, 510, 967, 508, 0,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	1059, 1060, 1061, 1062, 0, 527, 0, 519, 520, 521,
	1071, 522, 1072, 989, 523, 524, 525, 526, 0, 528,
	529, 0, 973, 530, 531, 532, 534, 535, 533, 536,
	1033, 537, 0, 0, 538, 539, 540, 596, 1056, 1092,
	0, 542, 541, 543, 599, 0, 0, 0, 0, 544,
	545, 600, 546, 547, 548, 970, 0, 0, 0, 0,
	0, 0, 966, 0, 0, 0, 0, 0, 0, 964,
	965, 1011, 983, 984, 985, 2811, 2812, 994, 995, 0,
	0, 0, 993, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1035, 999, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 1048, 0, 267, 1055,
	268, 1054, 0, 1065, 269, 270, 271, 272, 273, 274,
	1001, 1034, 968, 275, 1094, 1095, 557, 0, 276, 277,
	1041, 0, 1022, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1075, 299, 300, 1025, 1023, 1024, 1031, 1027, 1026, 1030,
	301, 302, 303, 304, 1058, 305, 1052, 1051, 972, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 1043, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 978, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1066, 1067, 990, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 1050, 0, 0,
	0, 338, 0, 339, 0, 0, 1076, 340, 341, 1063,
	1064, 342, 343, 0, 344, 1073, 0, 1000, 345, 0,
	346, 347, 348, 349, 350, 1036, 1037, 1040, 413, 1078,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	249, 357, 358, 360, 0, 1077, 359, 1045, 1046, 0,
	1006, 0, 361, 362, 1079, 1038, 1080, 363, 364, 365,
	1081, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 1074, 1082, 377,
	378, 1083, 0, 379, 380, 381, 1029, 1028, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 1084, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 1085, 401,
	969, 250, 1086, 410, 411, 991, 1039, 412, 1053, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 1087, 423, 1088, 1068, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 1069, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	1049, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 1089, 463, 464, 465, 466,
	979, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 1032, 488, 472, 473, 489, 490, 1090, 491, 492,
	493, 494, 495, 496, 1047, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 1093, 503, 504, 505, 506,
	1070, 0, 509, 510, 967, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 1059, 1060, 1061,
	1062, 0, 527, 0, 519, 520, 521, 1071, 522, 1072,
	989, 523, 524, 525, 526, 0, 528, 529, 0, 973,
	530, 531, 532, 534, 535, 533, 536, 1033, 537, 0,
	0, 538, 539, 540, 596, 1056, 1092, 0, 542, 541,
	543, 599, 0, 0, 0, 0, 544, 545, 600, 546,
	547, 548, 970, 0, 0, 0, 0, 0, 0, 966,
	0, 0, 0, 0, 0, 0, 964, 965, 1011, 983,
	984, 985, 981, 982, 994, 995, 0, 0, 0, 993,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1035,
	999, 0, 0, 0, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 1048, 0, 267, 1055, 268, 1054, 0,
	1065, 269, 270, 271, 272, 273, 274, 1001, 1034, 968,
	275, 1094, 1095, 557, 0, 276, 277, 1041, 0, 1022,
	0, 278, 279, 280, 281, 282, 283, 284, 0, 0,
	286, 287, 288, 285, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1075, 299, 300,
	1025, 1023, 1024, 1031, 1027, 1026, 1030, 301, 302, 303,
	304, 1058, 305, 1052, 1051, 972, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1043,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 978, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1066, 1067, 990, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1050, 0, 0, 0, 338, 0,
	339, 0, 0, 1076, 340, 341, 1063, 1064, 342, 343,
	0, 344, 1073, 0, 1000, 345, 0, 346, 347, 348,
	349, 350, 1036, 1037, 1040, 413, 1078, 351, 352, 0,
	353, 354, 355, 356, 0, 0, 0, 249, 357, 358,
	360, 0, 1077, 359, 1045, 1046, 0, 1006, 0, 361,
	362, 1079, 1038, 1080, 363, 364, 365, 1081, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 0, 373,
	375, 374, 0, 376, 1074, 1082, 377, 378, 1083, 0,
	379, 380, 381, 1029, 1028, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 1084, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 1085, 401, 969, 250, 1086,
	410, 411, 991, 1039, 412, 1053, 414, 415, 0, 0,
	416, 0, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 579, 1087, 423, 1088, 1068, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 0, 434, 435,
	581, 582, 1069, 436, 584, 437, 438, 0, 439, 0,
	440, 441, 442, 443, 444, 445, 446, 1049, 448, 447,
	449, 0, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 0, 460,
	461, 462, 1089, 463, 464, 465, 466, 979, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 478, 479, 480,
	481, 0, 483, 484, 482, 485, 486, 487, 1032, 488,
	472, 473, 489, 490, 1090, 491, 492, 493, 494, 495,
	496, 1047, 0, 497, 0, 498, 499, 500, 501, 474,
	502, 507, 1093, 503, 504, 505, 506, 1070, 0, 509,
	510, 967, 508, 0, 511, 512, 513, 514, 515, 516,
	329, 517, 0, 518, 1059, 1060, 1061, 1062, 0, 527,
	0, 519, 520, 521, 1071, 522, 1072, 989, 523, 524,
	525, 526, 0, 528, 529, 0, 973, 530, 531, 532,
	534, 535, 533, 536, 1033, 537, 0, 0, 538, 539,
	540, 596, 1056, 1092, 0, 542, 541, 543, 599, 0,
	0, 0, 0, 544, 545, 600, 546, 547, 548, 970,
	0, 0, 0, 0, 0, 0, 966, 0, 0, 0,
	0, 0, 0, 2205, 2206, 1011, 983, 984, 985, 981,
	982, 994, 995, 0, 0, 0, 993, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1035, 999, 0, 0,
	0, 259, 260, 262, 261, 263, 264, 265, 266, 550,
	1048, 0, 267, 1055, 268, 1054, 0, 1065, 269, 270,
	271, 272, 273, 274, 1001, 1034, 0, 275, 1094, 1095,
	557, 0, 276, 277, 1041, 0, 1022, 0, 278, 279,
	280, 281, 282, 283, 284, 0, 0, 286, 287, 288,
	285, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1075, 299, 300, 1025, 1023, 1024,
	1031, 1027, 1026, 1030, 301, 302, 303, 304, 1058, 305,
	1052, 1051, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 1043, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 978, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 1066,
	1067, 990, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 1050, 0, 0, 0, 338, 0, 339, 0, 0,
	1076, 340, 341, 1063, 1064, 342, 343, 0, 344, 1073,
	0, 1000, 345, 0, 346, 347, 348, 349, 350, 1036,
	1037, 1040, 413, 1078, 351, 352, 0, 353, 354, 355,
	356, 0, 0, 0, 249, 357, 358, 360, 0, 1077,
	359, 1045, 1046, 0, 1006, 0, 361, 362, 1079, 1038,
	1080, 363, 364, 365, 1081, 366, 0, 0, 0, 367,
	368, 369, 370, 371, 372, 0, 373, 375, 374, 0,
	376, 1074, 1082, 377, 378, 1083, 0, 379, 380, 381,
	1029, 1028, 382, 383, 384, 385, 0, 386, 387, 389,
	391, 388, 390, 395, 392, 393, 394, 397, 0, 396,
	1084, 398, 399, 400, 405, 407, 408, 403, 404, 406,
	409, 402, 1085, 401, 0, 250, 1086, 410, 411, 991,
	1039, 412, 1053, 414, 415, 0, 0, 416, 0, 0,
	0, 418, 419, 420, 0, 0, 421, 422, 579, 1087,
	423, 1088, 1068, 424, 425, 417, 426, 427, 428, 429,
	430, 431, 432, 433, 0, 434, 435, 581, 582, 1069,
	436, 584, 437, 438, 0, 439, 0, 440, 441, 442,
	443, 444, 445, 446, 1049, 448, 447, 449, 0, 450,
	0, 0, 0, 0, 0, 451, 0, 453, 454, 455,
	452, 456, 457, 458, 459, 0, 460, 461, 462, 1089,
	463, 464, 465, 466, 979, 467, 0, 468, 469, 475,
	476, 470, 471, 477, 478, 479, 480, 481, 0, 483,
	484, 482, 485, 486, 487, 1032, 488, 472, 473, 489,
	490, 1090, 491, 492, 493, 494, 495, 496, 1047, 0,
	497, 0, 498, 499, 500, 501, 474, 502, 507, 1093,
	503, 504, 505, 506, 1070, 0, 509, 510, 0, 508,
	0, 511, 512, 513, 514, 515, 516, 329, 517, 0,
	518, 1059, 1060, 1061, 1062, 0, 527, 0, 519, 520,
	521, 1071, 522, 1072, 989, 523, 524, 525, 526, 0,
	528, 529, 0, 0, 530, 531, 532, 534, 535, 533,
	536, 1033, 537, 0, 0, 538, 539, 540, 596, 1056,
	1092, 0, 542, 541, 543, 599, 0, 0, 0, 0,
	544, 545, 600, 546, 547, 548, 1011, 983, 984, 985,
	981, 982, 994, 2401, 0, 0, 0, 0, 0, 0,
	2399, 2400, 0, 251, 252, 253, 254, 255, 256, 995,
	257, 258, 0, 993, 0, 0, 0, 1035, 999, 0,
	0, 0, 259, 260, 262, 261, 263, 264, 265, 266,
	550, 1048, 0, 267, 1055, 268, 1054, 0, 1065, 269,
	270, 271, 272, 273, 274, 1001, 1034, 0, 275, 1094,
	1095, 557, 0, 276, 277, 1041, 0, 1022, 0, 278,
	279, 280, 281, 282, 283, 284, 0, 0, 286, 287,
	288, 285, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1075, 299, 300, 1025, 1023,
	1024, 1031, 1027, 1026, 1030, 301, 302, 303, 304, 1058,
	305, 1052, 1051, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1043, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 978,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1066, 1067, 990, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1050, 0, 0, 0, 338, 0, 339, 0,
	0, 1076, 340, 341, 1063, 1064, 342, 343, 0, 344,
	1073, 0, 1000, 345, 0, 346, 347, 348, 349, 350,
	1036, 1037, 1040, 413, 1078, 351, 352, 0, 353, 354,
	355, 356, 0, 0, 0, 249, 357, 358, 360, 0,
	1077, 359, 1045, 1046, 0, 1006, 0, 361, 362, 1079,
	1038, 1080, 363, 364, 365, 1081, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 0, 373, 375, 374,
	0, 376, 1074, 1082, 377, 378, 1083, 0, 379, 380,
	381, 1029, 1028, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	396, 1084, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 1085, 401, 0, 250, 1086, 410, 411,
	991, 1039, 412, 1053, 414, 415, 0, 0, 416, 0,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 579,
	1087, 423, 1088, 1068, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 0, 434, 435, 581, 582,
	1069, 436, 584, 437, 438, 0, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 1049, 448, 447, 449, 0,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 0, 460, 461, 462,
	1089, 463, 464, 465, 466, 2806, 2807, 0, 468, 469,
	475, 476, 470, 471, 477, 478, 479, 480, 481, 0,
	483, 484, 482, 485, 486, 487, 1032, 488, 472, 473,
	489, 490, 1090, 491, 492, 493, 494, 495, 496, 1047,
	0, 497, 0, 498, 499, 500, 501, 474, 502, 507,
	1093, 503, 504, 505, 506, 1070, 0, 509, 510, 0,
	508, 0, 511, 512, 513, 514, 515, 516, 329, 517,
	0, 518, 1059, 1060, 1061, 1062, 0, 527, 0, 519,
	520, 521, 1071, 522, 1072, 989, 523, 524, 525, 526,
	0, 528, 529, 0, 0, 530, 531, 532, 534, 535,
	533, 536, 1033, 537, 0, 0, 538, 539, 540, 596,
	1056, 1092, 0, 542, 541, 543, 599, 0, 0, 0,
	0, 544, 545, 600, 546, 547, 548, 1011, 983, 984,
	985, 981, 982, 994, 0, 0, 0, 0, 0, 0,
	0, 1914, 1915, 0, 251, 252, 253, 254, 255, 256,
	995, 257, 258, 0, 993, 0, 0, 0, 1035, 999,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 0, 1048, 0, 267, 1055, 268, 1054, 0, 1065,
	269, 270, 271, 272, 273, 274, 1001, 1034, 968, 275,
	1094, 1095, 557, 0, 276, 277, 1041, 0, 1022, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1075, 299, 4129, 1025,
	1023, 1024, 1031, 1027, 1026, 1030, 301, 302, 303, 304,
	1058, 305, 1052, 1051, 972, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 1043, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	978, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1066, 1067, 990, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 1050, 0, 0, 0, 338, 0, 339,
	0, 0, 1076, 340, 341, 1063, 1064, 342, 343, 0,
	344, 1073, 0, 1000, 345, 0, 346, 347, 348, 349,
	350, 1036, 1037, 1040, 413, 0, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 249, 357, 358, 360,
	0, 1077, 359, 1045, 1046, 0, 1006, 0, 361, 362,
	0, 1038, 0, 363, 364, 365, 1081, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 1074, 1082, 377, 378, 0, 0, 379,
	380, 381, 1029, 1028, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 1084, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 1085, 401, 969, 250, 0, 410,
	411, 991, 1039, 412, 1053, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 1087, 423, 1088, 1068, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 1069, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 1049, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 1089, 463, 464, 465, 466, 979, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 1032, 488, 472,
	473, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	1047, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 1093, 503, 504, 505, 506, 1070, 0, 509, 510,
	967, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 1059, 1060, 1061, 1062, 0, 527, 0,
	519, 520, 521, 1071, 522, 1072, 989, 523, 524, 525,
	526, 0, 4128, 529, 0, 973, 530, 531, 532, 534,
	535, 533, 536, 1033, 537, 0, 0, 538, 539, 540,
	596, 1056, 1092, 0, 542, 541, 543, 599, 0, 0,
	0, 0, 544, 545, 600, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 957, 0, 1132,
	0, 0, 964, 965, 0, 0, 0, 0, 0, 0,
	0, 995, 0, 0, 0, 993, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1035, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 1034,
	0, 275, 555, 556, 557, 0, 276, 277, 1041, 0,
	1022, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1075, 299,
	300, 1025, 1023, 1024, 1031, 1027, 1026, 1030, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1066, 1067, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 1076, 340, 341, 565, 566, 342,
	343, 0, 344, 1073, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 1036, 1037, 1040, 413, 1078, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 249, 357,
	358, 360, 0, 1077, 359, 572, 573, 0, 574, 0,
	361, 362, 1079, 1038, 1080, 363, 364, 365, 1081, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 1118,
	373, 375, 374, 0, 376, 1074, 1082, 377, 378, 1083,
	0, 379, 380, 381, 1029, 1028, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 1084, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 1085, 401, 0, 250,
	1086, 410, 411, 0, 1039, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 1124, 418, 419, 420, 0, 0,
	421, 422, 579, 1087, 423, 1088, 1068, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 1069, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 1089, 463, 464, 465, 466, 586, 1126,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 212, 483, 484, 482, 485, 486, 487, 1032,
	488, 472, 473, 489, 490, 1090, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 1070, 0,
	509, 510, 0, 508, 214, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 1071, 522, 1072, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 1033, 537, 0, 0, 538,
	539, 540, 1471, 597, 598, 0, 542, 541, 543, 599,
	0, 1132, 0, 206, 544, 545, 600, 546, 547, 548,
	0, 207, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 1122, 1035, 1800, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 0, 554, 269, 270, 271, 272, 273, 274,
	0, 1034, 0, 275, 555, 556, 557, 0, 276, 277,
	1041, 0, 1022, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1075, 299, 300, 1025, 1023, 1024, 1031, 1027, 1026, 1030,
	301, 302, 303, 304, 0, 305, 559, 560, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1066, 1067, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 0, 339, 0, 0, 1076, 340, 341, 565,
	566, 342, 343, 0, 344, 1073, 0, 568, 345, 0,
	346, 347, 348, 349, 350, 1036, 1037, 1040, 413, 1078,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	249, 357, 358, 360, 0, 1077, 359, 572, 573, 0,
	574, 0, 361, 362, 1079, 1038, 1080, 363, 364, 365,
	1081, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 1118, 373, 375, 374, 0, 376, 1074, 1082, 377,
	378, 1083, 0, 379, 380, 381, 1029, 1028, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 1084, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 1085, 401,
	0, 250, 1086, 410, 411, 0, 1039, 412, 578, 414,
	415, 0, 0, 416, 0, 0, 1124, 418, 419, 420,
	0, 0, 421, 422, 579, 1087, 423, 1088, 1068, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 1069, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 1089, 463, 464, 465, 466,
	586, 1126, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 212, 483, 484, 482, 485, 486,
	487, 1032, 488, 472, 473, 489, 490, 1090, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	1070, 0, 509, 510, 0, 508, 214, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 590, 591, 592,
	593, 0, 527, 0, 519, 520, 521, 1071, 522, 1072,
	0, 523, 524, 525, 526, 0, 528, 529, 0, 0,
	530, 531, 532, 534, 535, 533, 536, 1033, 537, 0,
	0, 538, 539, 540, 1471, 597, 598, 0, 542, 541,
	543, 599, 0, 0, 0, 206, 544, 545, 600, 546,
	547, 548, 0, 207, 0, 0, 0, 2966, 0, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1122, 0, 1800, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1035, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 1034,
	0, 275, 555, 556, 557, 0, 276, 277, 1041, 0,
	1022, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1075, 299,
	300, 1025, 1023, 1024, 1031, 1027, 1026, 1030, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 1066, 1067, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 1076, 340, 341, 565, 566, 342,
	343, 0, 344, 1073, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 1036, 1037, 1040, 413, 1078, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 249, 357,
	358, 360, 0, 1077, 359, 572, 573, 0, 574, 0,
	361, 362, 1079, 1038, 1080, 363, 364, 365, 1081, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 1118,
	373, 375, 374, 0, 376, 1074, 1082, 377, 378, 1083,
	0, 379, 380, 381, 1029, 1028, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 1084, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 1085, 401, 0, 250,
	1086, 410, 411, 0, 1039, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 1124, 418, 419, 420, 0, 0,
	421, 422, 579, 1087, 423, 1088, 1068, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 1069, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 1089, 463, 464, 465, 466, 586, 1126,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 1032,
	488, 472, 473, 489, 490, 1090, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 1070, 0,
	509, 510, 0, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 1071, 522, 1072, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 1033, 537, 0, 0, 538,
	539, 540, 596, 597, 598, 0, 542, 541, 543, 599,
	0, 1114, 0, 1132, 544, 545, 600, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 1122, 0, 1120, 1035, 0, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 551, 0,
	267, 552, 268, 553, 0, 554, 269, 270, 271, 272,
	273, 274, 0, 1034, 0, 275, 555, 556, 557, 0,
	276, 277, 1041, 0, 1022, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1075, 299, 300, 1025, 1023, 1024, 1031, 1027,
	1026, 1030, 301, 302, 303, 304, 0, 305, 559, 560,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 561, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1066, 1067, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 564,
	0, 0, 0, 338, 0, 339, 0, 0, 1076, 340,
	341, 565, 566, 342, 343, 0, 344, 1073, 0, 568,
	345, 0, 346, 347, 348, 349, 350, 1036, 1037, 1040,
	413, 1078, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 249, 357, 358, 360, 0, 1077, 359, 572,
	573, 0, 574, 0, 361, 362, 1079, 1038, 1080, 363,
	364, 365, 1081, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 1118, 373, 375, 374, 0, 376, 1074,
	1082, 377, 378, 1083, 0, 379, 380, 381, 1029, 1028,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 1084, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	1085, 401, 0, 250, 1086, 410, 411, 0, 1039, 412,
	578, 414, 415, 0, 0, 416, 0, 0, 1124, 418,
	419, 420, 0, 0, 421, 422, 579, 1087, 423, 1088,
	1068, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 1069, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 585, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 1089, 463, 464,
	465, 466, 586, 1126, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 1032, 488, 472, 473, 489, 490, 1090,
	491, 492, 493, 494, 495, 496, 587, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 588, 503, 504,
	505, 506, 1070, 0, 509, 510, 0, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 590,
	591, 592, 593, 0, 527, 0, 519, 520, 521, 1071,
	522, 1072, 0, 523, 524, 525, 526, 0, 528, 529,
	0, 0, 530, 531, 532, 534, 535, 533, 536, 1033,
	537, 0, 0, 538, 539, 540, 596, 597, 598, 0,
	542, 541, 543, 599, 0, 1132, 0, 0, 544, 545,
	600, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 1122, 1035, 1120, 0, 0,
	0, 259, 260, 262, 261, 263, 264, 265, 266, 550,
	551, 0, 267, 552, 268, 553, 0, 554, 269, 270,
	271, 272, 273, 274, 0, 1034, 0, 275, 555, 556,
	557, 0, 276, 277, 1041, 0, 1022, 0, 278, 279,
	280, 281, 282, 283, 284, 0, 0, 286, 287, 288,
	285, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1075, 299, 300, 1025, 1023, 1024,
	1031, 1027, 1026, 1030, 301, 302, 303, 304, 0, 305,
	559, 560, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 561, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 1066,
	1067, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 564, 0, 0, 0, 338, 0, 339, 0, 0,
	1076, 340, 341, 565, 566, 342, 343, 0, 344, 1073,
	0, 568, 345, 0, 346, 347, 348, 349, 350, 1036,
	1037, 1040, 413, 1078, 351, 352, 0, 353, 354, 355,
	356, 0, 0, 0, 249, 357, 358, 360, 0, 1077,
	359, 572, 573, 0, 574, 0, 361, 362, 1079, 1038,
	1080, 363, 364, 365, 1081, 366, 0, 0, 0, 367,
	368, 369, 370, 371, 372, 1118, 373, 375, 374, 0,
	376, 1074, 1082, 377, 378, 1083, 0, 379, 380, 381,
	1029, 1028, 382, 383, 384, 385, 0, 386, 387, 389,
	391, 388, 390, 395, 392, 393, 394, 397, 0, 396,
	1084, 398, 399, 400, 405, 407, 408, 403, 404, 406,
	409, 402, 1085, 401, 0, 250, 1086, 410, 411, 0,
	1039, 412, 578, 414, 415, 0, 0, 416, 0, 0,
	1124, 418, 419, 420, 0, 0, 421, 422, 579, 1087,
	423, 1088, 1068, 424, 425, 417, 426, 427, 428, 429,
	430, 431, 432, 433, 0, 434, 435, 581, 582, 1069,
	436, 584, 437, 438, 0, 439, 0, 440, 441, 442,
	443, 444, 445, 446, 585, 448, 447, 449, 0, 450,
	0, 0, 0, 0, 0, 451, 0, 453, 454, 455,
	452, 456, 457, 458, 459, 0, 460, 461, 462, 1089,
	463, 464, 465, 466, 586, 1126, 0, 468, 469, 475,
	476, 470, 471, 477, 478, 479, 480, 481, 0, 483,
	484, 482, 485, 486, 487, 1032, 488, 472, 473, 489,
	490, 1090, 491, 492, 493, 494, 495, 496, 587, 0,
	497, 0, 498, 499, 500, 501, 474, 502, 507, 588,
	503, 504, 505, 506, 1070, 0, 509, 510, 0, 508,
	0, 511, 512, 513, 514, 515, 516, 329, 517, 0,
	518, 590, 591, 592, 593, 0, 527, 0, 519, 520,
	521, 1071, 522, 1072, 0, 523, 524, 525, 526, 0,
	528, 529, 0, 0, 530, 531, 532, 534, 535, 533,
	536, 1033, 537, 0, 0, 538, 539, 540, 596, 597,
	598, 0, 542, 541, 543, 599, 0, 1132, 0, 0,
	544, 545, 600, 546, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 1122, 1035, 1120,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 0, 554,
	269, 270, 271, 272, 273, 274, 0, 1034, 0, 275,
	555, 556, 557, 0, 276, 277, 1041, 0, 1022, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1075, 299, 300, 1025,
	1023, 1024, 1031, 1027, 1026, 1030, 301, 302, 303, 304,
	0, 305, 559, 560, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1066, 1067, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 0, 339,
	0, 0, 1076, 340, 341, 565, 566, 342, 343, 0,
	344, 1073, 0, 568, 345, 0, 346, 347, 348, 349,
	350, 1036, 1037, 1040, 413, 1078, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 249, 357, 358, 360,
	0, 1077, 359, 572, 573, 0, 574, 0, 361, 362,
	1079, 1038, 1080, 363, 364, 365, 1081, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 1074, 1082, 377, 378, 1083, 0, 379,
	380, 381, 1029, 1028, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 1084, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 1085, 401, 0, 250, 1086, 410,
	411, 0, 1039, 412, 578, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 1087, 423, 1088, 1068, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 1069, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 1089, 463, 464, 465, 466, 586, 1126, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 1032, 488, 472,
	473, 489, 490, 1090, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 1070, 0, 509, 510,
	0, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 590, 591, 592, 593, 0, 527, 0,
	519, 520, 521, 1071, 522, 1072, 0, 523, 524, 525,
	526, 0, 528, 529, 0, 0, 530, 531, 532, 534,
	535, 533, 536, 1033, 537, 0, 0, 538, 539, 540,
	596, 597, 598, 0, 542, 541, 543, 599, 0, 957,
	0, 1320, 544, 545, 600, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 1699, 549, 0, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 0, 554, 269, 270, 271, 272, 273, 274,
	0, 0, 0, 275, 555, 556, 557, 0, 276, 277,
	558, 0, 1286, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1075, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 559, 560, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 562, 563, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 0, 339, 0, 0, 1076, 340, 341, 565,
	566, 342, 343, 0, 344, 567, 0, 568, 345, 0,
	346, 347, 348, 349, 350, 569, 570, 571, 413, 1078,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	0, 357, 358, 360, 0, 1077, 359, 572, 573, 0,
	574, 0, 361, 362, 1079, 575, 1080, 363, 364, 365,
	1081, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 576, 1082, 377,
	378, 1083, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 1084, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 1085, 401,
	0, 0, 1086, 410, 411, 0, 577, 412, 578, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 1087, 423, 1088, 580, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 583, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 1089, 463, 464, 465, 466,
	586, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 212, 483, 484, 482, 485, 486,
	487, 0, 488, 472, 473, 489, 490, 1090, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	589, 0, 509, 510, 0, 508, 214, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 590, 591, 592,
	593, 0, 527, 0, 519, 520, 521, 594, 522, 595,
	0, 523, 524, 525, 526, 0, 528, 529, 0, 0,
	530, 531, 532, 534, 535, 533, 536, 0, 537, 0,
	0, 538, 539, 540, 1471, 597, 598, 0, 542, 541,
	543, 599, 0, 0, 0, 206, 544, 545, 600, 546,
	547, 548, 0, 207, 0, 0, 0, 1468, 0, 1320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 0,
	0, 275, 555, 556, 557, 0, 276, 277, 558, 0,
	1286, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1075, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 1076, 340, 341, 565, 566, 342,
	343, 0, 344, 567, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 569, 570, 571, 413, 1078, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 0, 357,
	358, 360, 0, 1077, 359, 572, 573, 0, 574, 0,
	361, 362, 1079, 575, 1080, 363, 364, 365, 1081, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 576, 1082, 377, 378, 1083,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 1084, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 1085, 401, 0, 0,
	1086, 410, 411, 0, 577, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 1087, 423, 1088, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 1089, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 212, 483, 484, 482, 485, 486, 487, 0,
	488, 472, 473, 489, 490, 1090, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 0,
	509, 510, 0, 508, 214, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 594, 522, 595, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 0, 537, 0, 0, 538,
	539, 540, 1471, 597, 598, 0, 542, 541, 543, 599,
	0, 0, 0, 206, 544, 545, 600, 546, 547, 548,
	0, 207, 0, 0, 0, 0, 0, 1320, 1319, 0,
	0, 0, 0, 1317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 0, 554,
	269, 270, 271, 272, 273, 274, 0, 0, 0, 275,
	555, 556, 557, 0, 276, 277, 558, 0, 1286, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1075, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 559, 560, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 562, 563, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 0, 339,
	0, 0, 1076, 340, 341, 565, 566, 342, 343, 0,
	344, 567, 0, 568, 345, 0, 346, 347, 348, 349,
	350, 569, 570, 571, 413, 1078, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 0, 357, 358, 360,
	0, 1077, 359, 572, 573, 0, 574, 0, 361, 362,
	1079, 575, 1080, 363, 364, 365, 1081, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 576, 1082, 377, 378, 1083, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 1084, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 1085, 401, 0, 0, 1086, 410,
	411, 0, 577, 412, 578, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 1087, 423, 1088, 580, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 583, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 1089, 463, 464, 465, 466, 586, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 0, 488, 472,
	473, 489, 490, 1090, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 589, 0, 509, 510,
	0, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 590, 591, 592, 593, 0, 527, 0,
	519, 520, 521, 594, 522, 595, 0, 523, 524, 525,
	526, 0, 528, 529, 0, 0, 530, 531, 532, 534,
	535, 533, 536, 0, 537, 0, 0, 538, 539, 540,
	596, 597, 598, 0, 542, 541, 543, 599, 0, 0,
	0, 0, 544, 545, 600, 546, 547, 548, 1320, 1319,
	0, 0, 0, 0, 1317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 1493, 257, 258, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 551, 0, 267, 552, 268, 553, 0,
	554, 269, 270, 271, 272, 273, 274, 0, 0, 0,
	275, 555, 556, 557, 0, 276, 277, 558, 0, 1286,
	0, 278, 279, 280, 281, 282, 283, 284, 0, 0,
	286, 287, 288, 285, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1075, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 559, 560, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 561, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 562, 563, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 564, 0, 0, 0, 338, 0,
	339, 0, 0, 1076, 340, 341, 565, 566, 342, 343,
	0, 344, 567, 0, 568, 345, 0, 346, 347, 348,
	349, 350, 569, 570, 571, 413, 1078, 351, 352, 0,
	353, 354, 355, 356, 0, 0, 0, 0, 357, 358,
	360, 0, 1077, 359, 572, 573, 0, 574, 0, 361,
	362, 1079, 575, 1080, 363, 364, 365, 1081, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 0, 373,
	375, 374, 0, 376, 576, 1082, 377, 378, 1083, 0,
	379, 380, 381, 0, 0, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 1084, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 1085, 401, 0, 0, 1086,
	410, 411, 0, 577, 412, 578, 414, 415, 0, 0,
	416, 0, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 579, 1087, 423, 1088, 580, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 0, 434, 435,
	581, 582, 583, 436, 584, 437, 438, 0, 439, 0,
	440, 441, 442, 443, 444, 445, 446, 585, 448, 447,
	449, 0, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 0, 460,
	461, 462, 1089, 463, 464, 465, 466, 586, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 478, 479, 480,
	481, 0, 483, 484, 482, 485, 486, 487, 0, 488,
	472, 473, 489, 490, 1090, 491, 492, 493, 494, 495,
	496, 587, 0, 497, 0, 498, 499, 500, 501, 474,
	502, 507, 588, 503, 504, 505, 506, 589, 0, 509,
	510, 0, 508, 0, 511, 512, 513, 514, 515, 516,
	329, 517, 0, 518, 590, 591, 592, 593, 0, 527,
	0, 519, 520, 521, 594, 522, 595, 0, 523, 524,
	525, 526, 0, 528, 529, 0, 0, 530, 531, 532,
	534, 535, 533, 536, 0, 537, 0, 0, 538, 539,
	540, 596, 597, 598, 0, 542, 541, 543, 599, 0,
	0, 0, 0, 544, 545, 600, 546, 547, 548, 1320,
	1997, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 3220, 257, 258, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 0,
	0, 275, 555, 556, 557, 0, 276, 277, 558, 0,
	1286, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1075, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 1076, 340, 341, 565, 566, 342,
	343, 0, 344, 567, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 569, 570, 571, 413, 1078, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 0, 357,
	358, 360, 0, 1077, 359, 572, 573, 0, 574, 0,
	361, 362, 1079, 575, 1080, 363, 364, 365, 1081, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	1996, 375, 374, 0, 376, 576, 1082, 377, 378, 1083,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 1084, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 1085, 401, 0, 0,
	1086, 410, 411, 0, 577, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 1087, 423, 1088, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 1089, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 0,
	488, 472, 473, 489, 490, 1090, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 0,
	509, 510, 0, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 594, 522, 595, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 0, 537, 0, 0, 538,
	539, 540, 596, 597, 598, 0, 542, 541, 543, 599,
	0, 0, 0, 0, 544, 545, 600, 546, 547, 548,
	1320, 1319, 0, 0, 0, 0, 1317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 1493, 257, 258, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 551, 0, 267, 552, 268,
	553, 0, 554, 269, 270, 271, 272, 273, 274, 0,
	0, 0, 275, 555, 556, 557, 0, 276, 277, 558,
	0, 1286, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1075,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 559, 560, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 561, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 562, 563, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 564, 0, 0, 0,
	338, 0, 339, 0, 0, 1076, 340, 341, 565, 566,
	342, 343, 0, 344, 567, 0, 568, 345, 0, 346,
	347, 348, 349, 350, 569, 570, 571, 413, 1078, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 0,
	357, 358, 360, 0, 1077, 359, 572, 573, 0, 574,
	0, 361, 362, 1079, 575, 1080, 363, 364, 365, 1081,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 576, 1082, 377, 378,
	1083, 0, 379, 380, 381, 0, 0, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 1084, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 1085, 401, 0,
	0, 1086, 410, 411, 0, 577, 412, 578, 414, 415,
	0, 0, 416, 0, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 579, 1087, 423, 1088, 580, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 583, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 585,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 1089, 463, 464, 465, 466, 586,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 0, 483, 484, 482, 485, 486, 487,
	0, 488, 472, 473, 489, 490, 1090, 491, 492, 493,
	494, 495, 496, 587, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 588, 503, 504, 505, 506, 589,
	0, 509, 510, 0, 508, 0, 511, 512, 513, 514,
	515, 516, 329, 517, 0, 518, 590, 591, 592, 593,
	0, 527, 0, 519, 520, 521, 594, 522, 595, 0,
	523, 524, 525, 526, 0, 528, 529, 0, 0, 530,
	531, 532, 534, 535, 533, 536, 0, 537, 0, 0,
	538, 539, 540, 596, 597, 598, 0, 542, 541, 543,
	599, 1132, 0, 0, 0, 544, 545, 600, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1035, 0, 1477, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 0, 554, 269, 270, 271, 272, 273, 274,
	0, 1034, 0, 275, 555, 556, 557, 0, 276, 277,
	1041, 0, 1022, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1075, 299, 300, 1025, 1023, 1024, 1031, 1027, 1026, 1030,
	301, 302, 303, 304, 0, 305, 559, 560, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1066, 1067, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 0, 339, 0, 0, 1076, 340, 341, 565,
	566, 342, 343, 0, 344, 1073, 0, 568, 345, 0,
	346, 347, 348, 349, 350, 1036, 1037, 1040, 413, 1078,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	249, 357, 358, 360, 0, 1077, 359, 572, 573, 0,
	574, 0, 361, 362, 1079, 1038, 1080, 363, 364, 365,
	1081, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 1074, 1082, 377,
	378, 1083, 0, 379, 380, 381, 1029, 1028, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 1084, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 1085, 401,
	0, 250, 1086, 410, 411, 0, 1039, 412, 578, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 1087, 423, 1088, 1068, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 1069, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 1089, 463, 464, 465, 466,
	586, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 1032, 488, 472, 473, 489, 490, 1090, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	1070, 0, 509, 510, 0, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 590, 591, 592,
	593, 0, 527, 0, 519, 520, 521, 1071, 522, 1072,
	0, 523, 524, 525, 526, 0, 528, 529, 0, 0,
	530, 531, 532, 534, 535, 533, 536, 1033, 537, 0,
	0, 538, 539, 540, 596, 597, 598, 0, 542, 541,
	543, 599, 957, 0, 245, 0, 544, 545, 600, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 551,
	0, 267, 552, 268, 553, 0, 554, 269, 270, 271,
	272, 273, 274, 0, 0, 0, 275, 555, 556, 557,
	0, 276, 277, 558, 0, 0, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 559,
	560, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 561, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	564, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 565, 566, 342, 343, 0, 344, 567, 0,
	568, 345, 0, 346, 347, 348, 349, 350, 569, 570,
	571, 413, 0, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 0, 357, 358, 360, 0, 0, 359,
	572, 573, 0, 574, 0, 361, 362, 0, 575, 0,
	363, 364, 365, 0, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	576, 0, 377, 378, 0, 0, 379, 380, 381, 0,
	0, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 0,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 0, 401, 0, 0, 0, 410, 411, 0, 577,
	412, 578, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 0, 423,
	0, 580, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 583, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 585, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 0, 463,
	464, 465, 466, 586, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 212, 483, 484,
	482, 485, 486, 487, 0, 488, 472, 473, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 587, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 588, 503,
	504, 505, 506, 589, 0, 509, 510, 0, 508, 214,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	590, 591, 592, 593, 0, 527, 0, 519, 520, 521,
	594, 522, 595, 0, 523, 524, 525, 526, 0, 528,
	529, 0, 0, 530, 531, 532, 534, 535, 533, 536,
	0, 537, 0, 0, 538, 539, 540, 1471, 597, 598,
	0, 542, 541, 543, 599, 245, 0, 0, 206, 544,
	545, 600, 546, 547, 548, 0, 207, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 549, 0, 176, 0,
	0, 259, 260, 262, 261, 263, 264, 265, 266, 550,
	551, 0, 267, 552, 268, 553, 0, 554, 269, 270,
	271, 272, 273, 274, 0, 0, 0, 275, 555, 556,
	557, 0, 276, 277, 558, 0, 0, 0, 278, 279,
	280, 281, 282, 283, 284, 0, 0, 286, 287, 288,
	285, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	559, 560, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 561, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 562,
	563, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 564, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 565, 566, 342, 343, 0, 344, 567,
	0, 568, 345, 0, 346, 347, 348, 349, 350, 569,
	570, 571, 413, 0, 351, 352, 0, 353, 354, 355,
	356, 0, 0, 0, 249, 357, 358, 360, 0, 0,
	359, 572, 573, 0, 574, 0, 361, 362, 0, 575,
	0, 363, 364, 365, 0, 366, 0, 0, 0, 367,
	368, 369, 370, 371, 372, 0, 373, 375, 374, 0,
	376, 576, 0, 377, 378, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 385, 0, 386, 387, 389,
	391, 388, 390, 395, 392, 393, 394, 397, 0, 396,
	0, 398, 399, 400, 405, 407, 408, 403, 404, 406,
	409, 402, 0, 401, 0, 250, 0, 410, 411, 0,
	577, 412, 578, 414, 415, 0, 0, 416, 0, 0,
	0, 418, 419, 420, 0, 0, 421, 422, 579, 0,
	423, 0, 580, 424, 425, 417, 426, 427, 428, 429,
	430, 431, 432, 433, 0, 434, 435, 581, 582, 583,
	436, 584, 437, 438, 0, 439, 0, 440, 441, 442,
	443, 444, 445, 446, 585, 448, 447, 449, 0, 450,
	0, 0, 0, 0, 0, 451, 0, 453, 454, 455,
	452, 456, 457, 458, 459, 0, 460, 461, 462, 0,
	463, 464, 465, 466, 586, 467, 0, 468, 469, 475,
	476, 470, 471, 477, 478, 479, 480, 481, 0, 483,
	484, 482, 485, 486, 487, 0, 488, 472, 473, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 587, 0,
	497, 0, 498, 499, 500, 501, 474, 502, 507, 588,
	503, 504, 505, 506, 589, 0, 509, 510, 0, 508,
	0, 511, 512, 513, 514, 515, 516, 329, 517, 0,
	518, 590, 591, 592, 593, 0, 527, 0, 519, 520,
	521, 594, 522, 595, 0, 523, 524, 525, 526, 0,
	528, 529, 0, 0, 530, 531, 532, 534, 535, 533,
	536, 0, 537, 0, 0, 538, 539, 540, 596, 597,
	598, 0, 542, 541, 543, 599, 0, 1411, 0, 245,
	544, 545, 600, 546, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 1814,
	549, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 0,
	0, 275, 555, 556, 557, 0, 276, 277, 558, 0,
	0, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 565, 566, 342,
	343, 0, 344, 567, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 569, 570, 571, 413, 0, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 249, 357,
	358, 360, 0, 0, 359, 572, 573, 0, 574, 0,
	361, 362, 0, 575, 0, 363, 364, 365, 0, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 576, 0, 377, 378, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 0, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 0, 401, 0, 250,
	0, 410, 411, 0, 577, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 0, 423, 0, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 0, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 0,
	488, 472, 473, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 0,
	509, 510, 0, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 594, 522, 595, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 0, 537, 0, 0, 538,
	539, 540, 596, 597, 598, 0, 542, 541, 543, 599,
	0, 245, 2728, 0, 544, 545, 600, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 1415, 549, 0, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 0, 554, 269, 270, 271, 272, 273, 274,
	0, 0, 0, 275, 555, 556, 557, 0, 276, 277,
	558, 0, 0, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 559, 560, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 562, 563, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 565,
	566, 342, 343, 0, 344, 567, 0, 568, 345, 0,
	346, 347, 348, 349, 350, 569, 570, 571, 413, 0,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	0, 357, 358, 360, 0, 0, 359, 572, 573, 0,
	574, 0, 361, 362, 0, 575, 0, 363, 364, 365,
	0, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 576, 0, 377,
	378, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 0, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 0, 401,
	0, 0, 0, 410, 411, 0, 577, 412, 578, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 0, 423, 0, 580, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 583, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 0, 463, 464, 465, 466,
	586, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 0, 488, 472, 473, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	589, 0, 509, 510, 0, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 590, 591, 592,
	593, 0, 527, 0, 519, 520, 521, 594, 522, 595,
	0, 523, 524, 525, 526, 0, 528, 529, 0, 0,
	530, 531, 532, 534, 535, 533, 536, 0, 537, 0,
	0, 538, 539, 540, 596, 597, 598, 0, 542, 541,
	543, 599, 245, 0, 0, 0, 544, 545, 600, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 549, 0, 4282, 0, 0, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 551, 0, 267,
	552, 268, 553, 0, 554, 269, 270, 271, 272, 273,
	274, 0, 0, 0, 275, 555, 556, 557, 0, 276,
	277, 558, 0, 0, 0, 278, 279, 280, 281, 282,
	283, 284, 0, 0, 286, 287, 288, 285, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 559, 560, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 561, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 562, 563, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 564, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	565, 566, 342, 343, 0, 344, 567, 0, 568, 345,
	0, 346, 347, 348, 349, 350, 569, 570, 571, 413,
	0, 351, 352, 0, 353, 354, 355, 356, 0, 0,
	0, 249, 357, 358, 360, 0, 0, 359, 572, 573,
	0, 574, 0, 361, 362, 0, 575, 0, 363, 364,
	365, 0, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 0, 373, 375, 374, 0, 376, 576, 0,
	377, 378, 0, 0, 379, 380, 381, 0, 0, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 396, 0, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 0,
	401, 0, 250, 0, 410, 411, 0, 577, 412, 578,
	414, 415, 0, 0, 416, 0, 0, 0, 418, 419,
	420, 0, 0, 421, 422, 579, 0, 423, 0, 580,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 0, 434, 435, 581, 582, 583, 436, 584, 437,
	438, 0, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 585, 448, 447, 449, 0, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 0, 460, 461, 462, 0, 463, 464, 465,
	466, 586, 467, 0, 468, 469, 475, 476, 470, 471,
	477, 478, 479, 480, 481, 0, 483, 484, 482, 485,
	486, 487, 0, 488, 472, 473, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 587, 0, 497, 0, 498,
	499, 500, 501, 474, 502, 507, 588, 503, 504, 505,
	506, 589, 0, 509, 510, 0, 508, 0, 511, 512,
	513, 514, 515, 516, 329, 517, 0, 518, 590, 591,
	592, 593, 0, 527, 0, 519, 520, 521, 594, 522,
	595, 0, 523, 524, 525, 526, 0, 528, 529, 0,
	0, 530, 531, 532, 534, 535, 533, 536, 0, 537,
	0, 0, 538, 539, 540, 596, 597, 598, 0, 542,
	541, 543, 599, 0, 245, 0, 0, 544, 545, 600,
	546, 547, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 3164, 549, 0, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 551,
	0, 267, 552, 268, 553, 0, 554, 269, 270, 271,
	272, 273, 274, 0, 0, 0, 275, 555, 556, 557,
	0, 276, 277, 558, 0, 0, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 559,
	560, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 561, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 562, 563,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	564, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 565, 566, 342, 343, 0, 344, 567, 0,
	568, 345, 0, 346, 347, 348, 349, 350, 569, 570,
	571, 413, 0, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 249, 357, 358, 360, 0, 0, 359,
	572, 573, 0, 574, 0, 361, 362, 0, 575, 0,
	363, 364, 365, 0, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	576, 0, 377, 378, 0, 0, 379, 380, 381, 0,
	0, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 0,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 0, 401, 0, 250, 0, 410, 411, 0, 577,
	412, 578, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 0, 423,
	0, 580, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 583, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 585, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 0, 463,
	464, 465, 466, 586, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 0, 483, 484,
	482, 485, 486, 487, 0, 488, 472, 473, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 587, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 588, 503,
	504, 505, 506, 589, 0, 509, 510, 0, 508, 0,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	590, 591, 592, 593, 0, 527, 0, 519, 520, 521,
	594, 522, 595, 0, 523, 524, 525, 526, 0, 528,
	529, 0, 0, 530, 531, 532, 534, 535, 533, 536,
	0, 537, 0, 0, 538, 539, 540, 596, 597, 598,
	0, 542, 541, 543, 599, 0, 245, 0, 0, 544,
	545, 600, 546, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 1415, 549, 0, 0,
	0, 0, 259, 260, 262, 261, 263, 264, 265, 266,
	550, 551, 0, 267, 552, 268, 553, 0, 554, 269,
	270, 271, 272, 273, 274, 0, 0, 0, 275, 555,
	556, 557, 0, 276, 277, 558, 0, 0, 0, 278,
	279, 280, 281, 282, 283, 284, 0, 0, 286, 287,
	288, 285, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 559, 560, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 561,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	562, 563, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 564, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 565, 566, 342, 343, 0, 344,
	567, 0, 568, 345, 0, 346, 347, 348, 349, 350,
	569, 570, 571, 413, 0, 351, 352, 0, 353, 354,
	355, 356, 0, 0, 0, 0, 357, 358, 360, 0,
	0, 359, 572, 573, 0, 574, 0, 361, 362, 0,
	575, 0, 363, 364, 365, 0, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 0, 373, 375, 374,
	0, 376, 576, 0, 377, 378, 0, 0, 379, 380,
	381, 0, 0, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	396, 0, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 0, 401, 0, 0, 0, 410, 411,
	0, 577, 412, 578, 414, 415, 0, 0, 416, 0,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 579,
	0, 423, 0, 580, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 0, 434, 435, 581, 582,
	583, 436, 584, 437, 438, 0, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 585, 448, 447, 449, 0,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 0, 460, 461, 462,
	0, 463, 464, 465, 466, 586, 467, 0, 468, 469,
	475, 476, 470, 471, 477, 478, 479, 480, 481, 0,
	483, 484, 482, 485, 486, 487, 0, 488, 472, 473,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 587,
	0, 497, 0, 498, 499, 500, 501, 474, 502, 507,
	588, 503, 504, 505, 506, 589, 0, 509, 510, 0,
	508, 0, 511, 512, 513, 514, 515, 516, 329, 517,
	0, 518, 590, 591, 592, 593, 0, 527, 0, 519,
	520, 521, 594, 522, 595, 0, 523, 524, 525, 526,
	0, 528, 529, 0, 0, 530, 531, 532, 534, 535,
	533, 536, 0, 537, 0, 0, 538, 539, 540, 596,
	597, 598, 0, 542, 541, 543, 599, 245, 0, 0,
	0, 544, 545, 600, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 549, 0,
	2699, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 0, 554,
	269, 270, 271, 272, 273, 274, 0, 0, 0, 275,
	555, 556, 557, 0, 276, 277, 558, 0, 0, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 559, 560, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 562, 563, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 565, 566, 342, 343, 0,
	344, 567, 0, 568, 345, 0, 346, 347, 348, 349,
	350, 569, 570, 571, 413, 0, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 0, 357, 358, 360,
	0, 0, 359, 572, 573, 0, 574, 0, 361, 362,
	0, 575, 0, 363, 364, 365, 0, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 576, 0, 377, 378, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 0, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 0, 401, 0, 0, 0, 410,
	411, 0, 577, 412, 578, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 0, 423, 0, 580, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 583, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 0, 463, 464, 465, 466, 586, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 0, 488, 472,
	473, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 589, 0, 509, 510,
	0, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 590, 591, 592, 593, 0, 527, 0,
	519, 520, 521, 594, 522, 595, 0, 523, 524, 525,
	526, 0, 528, 529, 0, 0, 530, 531, 532, 534,
	535, 533, 536, 0, 537, 0, 0, 538, 539, 540,
	596, 597, 598, 0, 542, 541, 543, 599, 245, 0,
	0, 0, 544, 545, 600, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 549,
	0, 3321, 0, 0, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 551, 0, 267, 552, 268, 553, 0,
	554, 269, 270, 271, 272, 273, 274, 0, 0, 0,
	275, 555, 556, 557, 0, 276, 277, 558, 0, 0,
	0, 278, 279, 280, 281, 282, 283, 284, 0, 0,
	286, 287, 288, 285, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 559, 560, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 561, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 564, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 565, 566, 342, 343,
	0, 344, 567, 0, 568, 345, 0, 346, 347, 348,
	349, 350, 569, 570, 571, 413, 0, 351, 352, 0,
	353, 354, 355, 356, 0, 0, 0, 0, 357, 358,
	360, 0, 0, 359, 572, 573, 0, 574, 0, 361,
	362, 0, 575, 0, 363, 364, 365, 0, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 0, 373,
	375, 374, 0, 376, 576, 0, 377, 378, 0, 0,
	379, 380, 381, 0, 0, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 0, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 0, 401, 0, 0, 0,
	410, 411, 0, 577, 412, 578, 414, 415, 0, 0,
	416, 0, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 579, 0, 423, 0, 580, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 0, 434, 435,
	581, 582, 583, 436, 584, 437, 438, 0, 439, 0,
	440, 441, 442, 443, 444, 445, 446, 585, 448, 447,
	449, 0, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 0, 460,
	461, 462, 0, 463, 464, 465, 466, 586, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 478, 479, 480,
	481, 0, 483, 484, 482, 485, 486, 487, 0, 488,
	472, 473, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 587, 0, 497, 0, 498, 499, 500, 501, 474,
	502, 507, 588, 503, 504, 505, 506, 589, 0, 509,
	510, 0, 508, 0, 511, 512, 513, 514, 515, 516,
	329, 517, 0, 518, 590, 591, 592, 593, 0, 527,
	0, 519, 520, 521, 594, 522, 595, 0, 523, 524,
	525, 526, 0, 528, 529, 0, 0, 530, 531, 532,
	534, 535, 533, 536, 0, 537, 0, 0, 538, 539,
	540, 596, 597, 598, 0, 542, 541, 543, 599, 0,
	803, 0, 686, 544, 545, 600, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 2099, 549, 0, 0, 0, 0, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 551, 0, 267,
	552, 268, 553, 0, 554, 269, 270, 271, 272, 273,
	274, 0, 0, 0, 275, 555, 556, 557, 0, 276,
	277, 558, 0, 0, 0, 278, 279, 280, 281, 282,
	283, 284, 0, 0, 286, 287, 288, 285, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 693, 304, 0, 305, 559, 560, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 561, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 562, 563, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 564, 0,
	0, 0, 338, 0, 339, 0, 801, 0, 340, 341,
	565, 566, 342, 343, 0, 344, 567, 0, 568, 345,
	0, 346, 347, 348, 349, 350, 569, 570, 571, 413,
	0, 351, 352, 0, 353, 354, 355, 356, 0, 0,
	0, 249, 357, 358, 360, 0, 0, 359, 572, 573,
	0, 574, 0, 361, 362, 0, 575, 0, 363, 364,
	365, 0, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 0, 373, 375, 374, 0, 376, 576, 0,
	377, 378, 0, 0, 379, 380, 381, 0, 0, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 396, 0, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 0,
	401, 0, 250, 0, 410, 411, 0, 577, 412, 578,
	414, 415, 0, 0, 416, 0, 0, 0, 418, 419,
	420, 0, 0, 421, 422, 579, 0, 423, 0, 580,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 0, 434, 435, 581, 582, 583, 436, 584, 437,
	438, 0, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 585, 448, 447, 449, 0, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 0, 460, 461, 462, 0, 463, 464, 465,
	466, 586, 467, 0, 468, 469, 475, 476, 470, 471,
	477, 478, 479, 480, 481, 0, 483, 484, 482, 485,
	486, 487, 0, 488, 472, 473, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 587, 0, 497, 0, 498,
	499, 500, 501, 474, 502, 507, 588, 503, 504, 505,
	506, 589, 0, 509, 510, 0, 508, 691, 511, 512,
	513, 514, 692, 516, 329, 517, 0, 518, 590, 591,
	592, 593, 0, 527, 0, 519, 520, 521, 594, 522,
	595, 0, 523, 524, 525, 526, 0, 528, 529, 0,
	0, 530, 531, 532, 534, 535, 533, 536, 0, 537,
	0, 0, 538, 539, 540, 596, 597, 598, 0, 542,
	541, 543, 599, 0, 684, 0, 686, 544, 545, 600,
	546, 547, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 696,
	257, 258, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 0, 259, 260, 262, 261, 263, 264, 265, 266,
	550, 551, 0, 267, 552, 268, 553, 0, 554, 269,
	270, 271, 272, 273, 274, 0, 0, 0, 275, 555,
	556, 557, 0, 276, 277, 558, 0, 0, 0, 278,
	279, 280, 281, 282, 283, 284, 0, 0, 286, 287,
	288, 285, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 693, 304, 0,
	305, 559, 560, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 561,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	562, 563, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 564, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 565, 566, 342, 343, 0, 344,
	567, 0, 568, 345, 0, 346, 347, 348, 349, 350,
	569, 570, 571, 413, 0, 351, 352, 0, 353, 354,
	355, 356, 0, 0, 0, 249, 357, 358, 360, 0,
	0, 359, 572, 573, 0, 574, 0, 361, 362, 0,
	575, 0, 363, 364, 365, 0, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 0, 373, 375, 374,
	0, 376, 576, 0, 377, 378, 0, 0, 379, 380,
	381, 0, 0, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	396, 0, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 0, 401, 0, 250, 0, 410, 411,
	0, 577, 412, 578, 414, 415, 0, 0, 416, 0,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 579,
	0, 423, 0, 580, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 0, 434, 435, 581, 582,
	583, 436, 584, 437, 438, 0, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 585, 448, 447, 449, 0,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 0, 460, 461, 462,
	0, 463, 464, 465, 466, 586, 467, 0, 468, 469,
	475, 476, 470, 471, 477, 478, 479, 480, 481, 0,
	483, 484, 482, 485, 486, 487, 0, 488, 472, 473,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 587,
	0, 497, 0, 498, 499, 500, 501, 474, 502, 507,
	588, 503, 504, 505, 506, 589, 0, 509, 510, 0,
	508, 691, 511, 512, 513, 514, 692, 516, 329, 517,
	0, 518, 590, 591, 592, 593, 0, 527, 0, 519,
	520, 521, 594, 522, 595, 0, 523, 524, 525, 526,
	0, 528, 529, 0, 0, 530, 531, 532, 534, 535,
	533, 536, 0, 537, 0, 0, 538, 539, 540, 596,
	597, 598, 0, 542, 541, 543, 599, 686, 0, 0,
	0, 544, 545, 600, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 696, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 0, 554,
	269, 270, 271, 272, 273, 274, 0, 0, 0, 275,
	555, 556, 557, 0, 276, 277, 558, 0, 0, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 693, 304,
	0, 305, 559, 560, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 562, 563, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 565, 566, 342, 343, 0,
	344, 567, 0, 568, 345, 0, 346, 347, 348, 349,
	350, 569, 570, 571, 413, 0, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 249, 357, 358, 360,
	0, 0, 359, 572, 573, 0, 574, 0, 361, 362,
	0, 575, 0, 363, 364, 365, 0, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 576, 0, 377, 378, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 0, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 0, 401, 0, 250, 0, 410,
	411, 0, 577, 412, 578, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 0, 423, 0, 580, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 583, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 0, 463, 464, 465, 466, 586, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 0, 488, 472,
	473, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 589, 0, 509, 510,
	0, 508, 691, 511, 512, 513, 514, 692, 516, 329,
	517, 0, 518, 590, 591, 592, 593, 0, 527, 0,
	519, 520, 521, 594, 522, 595, 0, 523, 524, 525,
	526, 0, 528, 529, 0, 0, 530, 531, 532, 534,
	535, 533, 536, 0, 537, 0, 0, 538, 539, 540,
	596, 597, 598, 0, 542, 541, 543, 599, 686, 0,
	0, 0, 544, 545, 600, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 696, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 551, 0, 267, 552, 268, 553, 0,
	554, 269, 270, 271, 272, 273, 274, 0, 0, 0,
	275, 555, 556, 557, 0, 276, 277, 558, 0, 0,
	0, 278, 279, 280, 281, 282, 283, 284, 0, 0,
	286, 287, 288, 285, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 693,
	304, 0, 305, 559, 560, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 561, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 562, 563, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 564, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 565, 566, 342, 343,
	0, 344, 567, 0, 568, 345, 0, 346, 347, 348,
	349, 350, 569, 570, 571, 413, 0, 351, 352, 0,
	353, 354, 355, 356, 0, 0, 0, 249, 357, 358,
	360, 0, 0, 359, 572, 573, 0, 574, 0, 361,
	362, 0, 575, 0, 363, 364, 365, 0, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 0, 373,
	375, 374, 0, 376, 576, 0, 377, 378, 0, 0,
	379, 380, 381, 0, 0, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 0, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 0, 401, 0, 250, 0,
	410, 411, 0, 577, 412, 578, 414, 415, 0, 0,
	416, 0, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 579, 0, 423, 0, 580, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 0, 434, 435,
	581, 582, 583, 436, 584, 437, 438, 0, 439, 0,
	440, 441, 442, 443, 444, 445, 446, 585, 448, 447,
	449, 0, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 0, 460,
	461, 462, 0, 2139, 464, 465, 466, 586, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 478, 479, 480,
	481, 0, 483, 484, 482, 485, 486, 487, 0, 488,
	472, 473, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 587, 0, 497, 0, 498, 499, 500, 501, 474,
	502, 507, 588, 503, 504, 505, 506, 589, 0, 509,
	510, 0, 508, 691, 511, 512, 513, 514, 692, 516,
	329, 517, 0, 518, 590, 591, 592, 593, 0, 527,
	0, 519, 520, 521, 594, 522, 595, 0, 523, 524,
	525, 526, 0, 528, 529, 0, 0, 530, 531, 532,
	534, 535, 533, 536, 0, 537, 0, 0, 538, 539,
	540, 596, 597, 598, 0, 542, 541, 543, 599, 686,
	0, 0, 0, 544, 545, 600, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 696, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 0,
	0, 275, 555, 556, 557, 0, 276, 277, 558, 0,
	0, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	693, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 565, 566, 342,
	343, 0, 344, 567, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 569, 570, 571, 413, 0, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 249, 357,
	358, 360, 0, 0, 359, 572, 573, 0, 574, 0,
	361, 362, 0, 575, 0, 363, 364, 365, 0, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 576, 0, 377, 378, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 0, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 0, 401, 0, 250,
	0, 410, 411, 0, 577, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 0, 423, 0, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 0, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 1877, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 0,
	488, 472, 473, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 0,
	509, 510, 0, 508, 691, 511, 512, 513, 514, 692,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 594, 522, 595, 0, 523,
	524, 1876, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 0, 537, 0, 0, 538,
	539, 540, 596, 597, 598, 0, 542, 541, 543, 599,
	686, 0, 0, 0, 544, 545, 600, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 696, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 551, 0, 267, 552, 268,
	553, 0, 554, 269, 270, 271, 272, 273, 274, 0,
	0, 0, 275, 555, 556, 557, 0, 276, 277, 558,
	0, 0, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 693, 304, 0, 305, 559, 560, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 561, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 562, 563, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 564, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 565, 566,
	342, 343, 0, 344, 567, 0, 568, 345, 0, 346,
	347, 348, 349, 350, 569, 570, 571, 413, 0, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 249,
	357, 358, 360, 0, 0, 359, 572, 573, 0, 574,
	0, 361, 362, 0, 575, 0, 363, 364, 365, 0,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 576, 0, 377, 378,
	0, 0, 379, 380, 381, 0, 0, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 0, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 0, 401, 0,
	250, 0, 410, 411, 0, 577, 412, 578, 414, 415,
	0, 0, 416, 0, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 579, 0, 423, 0, 580, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 583, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 585,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 0, 463, 464, 465, 466, 586,
	467, 0, 468, 469, 475, 476, 470, 471, 1830, 478,
	479, 480, 481, 0, 483, 484, 482, 485, 486, 487,
	0, 488, 472, 473, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 587, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 588, 503, 504, 505, 506, 589,
	0, 509, 510, 0, 508, 691, 511, 512, 513, 514,
	692, 516, 329, 517, 0, 518, 590, 591, 592, 593,
	0, 527, 0, 519, 520, 521, 594, 522, 595, 0,
	523, 524, 1829, 526, 0, 528, 529, 0, 0, 530,
	531, 532, 534, 535, 533, 536, 0, 537, 0, 0,
	538, 539, 540, 596, 597, 598, 1851, 542, 541, 543,
	599, 0, 0, 0, 0, 544, 545, 600, 546, 547,
	548, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 696, 0, 0,
	0, 0, 259, 260, 262, 261, 263, 264, 265, 266,
	0, 1857, 0, 267, 1847, 268, 1863, 0, 1870, 269,
	270, 271, 272, 273, 274, 0, 0, 0, 275, 1873,
	1874, 0, 0, 276, 277, 0, 0, 1286, 0, 278,
	279, 280, 281, 282, 283, 284, 0, 0, 286, 287,
	288, 285, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1075, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 1058,
	305, 1861, 1860, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1043, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 1859, 0, 0, 0, 338, 0, 339, 0,
	0, 1076, 340, 341, 1868, 1869, 342, 343, 0, 344,
	0, 0, 0, 345, 0, 346, 347, 348, 349, 350,
	0, 0, 0, 413, 1078, 351, 352, 0, 353, 354,
	355, 356, 0, 0, 0, 0, 357, 358, 360, 0,
	1077, 359, 1854, 1855, 0, 1850, 0, 361, 362, 1079,
	0, 1080, 363, 364, 365, 1081, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 0, 373, 375, 374,
	0, 376, 0, 1082, 377, 378, 1083, 0, 379, 380,
	381, 0, 0, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	396, 1084, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 1085, 401, 0, 0, 1086, 410, 411,
	0, 0, 412, 1862, 414, 415, 0, 0, 416, 0,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 0,
	1087, 423, 1088, 0, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 0, 434, 435, 1844, 1845,
	0, 436, 0, 437, 438, 0, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 1858, 448, 447, 449, 0,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 0, 460, 461, 462,
	1089, 463, 464, 465, 466, 0, 467, 0, 468, 469,
	475, 476, 470, 471, 477, 478, 479, 480, 481, 0,
	483, 484, 482, 485, 486, 487, 0, 488, 472, 473,
	489, 490, 1090, 491, 492, 493, 494, 495, 496, 1856,
	0, 497, 0, 498, 499, 500, 501, 474, 502, 507,
	1872, 503, 504, 505, 506, 0, 0, 509, 510, 0,
	508, 0, 511, 512, 513, 514, 515, 516, 329, 517,
	0, 518, 1864, 1865, 1866, 1867, 0, 527, 0, 519,
	520, 521, 0, 522, 0, 0, 523, 524, 525, 526,
	0, 528, 529, 0, 0, 530, 531, 532, 534, 535,
	533, 536, 0, 537, 0, 0, 538, 539, 540, 0,
	1848, 1871, 0, 542, 541, 543, 0, 0, 0, 0,
	0, 544, 545, 0, 546, 547, 548, 1320, 1319, 0,
	0, 0, 0, 1317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 1838, 0, 0, 0, 549, 0,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 0, 554,
	269, 270, 271, 272, 273, 274, 0, 0, 0, 275,
	555, 556, 557, 0, 276, 277, 558, 0, 1286, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1075, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 559, 560, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 562, 563, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 0, 339,
	0, 0, 1076, 340, 341, 565, 566, 342, 343, 0,
	344, 567, 0, 568, 345, 0, 346, 347, 348, 349,
	350, 569, 570, 571, 413, 1078, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 0, 357, 358, 360,
	0, 1077, 359, 572, 573, 0, 574, 0, 361, 362,
	1079, 575, 1080, 363, 364, 365, 1081, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 576, 1082, 377, 378, 1083, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 1084, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 1085, 401, 0, 0, 1086, 410,
	411, 3491, 577, 412, 578, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 1087, 423, 1088, 580, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 583, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 1089, 463, 464, 465, 466, 586, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 0, 488, 472,
	473, 489, 490, 1090, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 589, 0, 509, 510,
	0, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 590, 591, 592, 593, 0, 527, 0,
	519, 520, 521, 594, 522, 595, 0, 523, 524, 525,
	526, 0, 528, 529, 0, 0, 530, 531, 532, 534,
	535, 533, 536, 0, 537, 0, 0, 538, 539, 540,
	596, 597, 598, 0, 542, 541, 543, 599, 0, 0,
	0, 0, 544, 545, 600, 546, 547, 548, 1320, 1319,
	0, 0, 0, 0, 1317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 551, 0, 267, 552, 268, 553, 0,
	554, 269, 270, 271, 272, 273, 274, 0, 0, 0,
	275, 555, 556, 557, 0, 276, 277, 558, 0, 1286,
	0, 278, 279, 280, 281, 282, 283, 284, 0, 0,
	286, 287, 288, 285, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1075, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 559, 560, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 561, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 562, 563, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 564, 0, 0, 0, 338, 0,
	339, 0, 0, 1076, 340, 341, 565, 566, 342, 343,
	0, 344, 567, 0, 568, 345, 0, 346, 347, 348,
	349, 350, 569, 570, 571, 413, 1078, 351, 352, 0,
	353, 354, 355, 356, 0, 0, 0, 0, 357, 358,
	360, 0, 1077, 359, 572, 573, 0, 574, 0, 361,
	362, 1079, 575, 1080, 363, 364, 365, 1081, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 0, 373,
	375, 374, 0, 376, 576, 1082, 377, 378, 1083, 0,
	379, 380, 381, 0, 0, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 1084, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 1085, 401, 0, 0, 1086,
	410, 411, 3136, 577, 412, 578, 414, 415, 0, 0,
	416, 0, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 579, 1087, 423, 1088, 580, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 0, 434, 435,
	581, 582, 583, 436, 584, 437, 438, 0, 439, 0,
	440, 441, 442, 443, 444, 445, 446, 585, 448, 447,
	449, 0, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 0, 460,
	461, 462, 1089, 463, 464, 465, 466, 586, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 478, 479, 480,
	481, 0, 483, 484, 482, 485, 486, 487, 0, 488,
	472, 473, 489, 490, 1090, 491, 492, 493, 494, 495,
	496, 587, 0, 497, 0, 498, 499, 500, 501, 474,
	502, 507, 588, 503, 504, 505, 506, 589, 0, 509,
	510, 0, 508, 0, 511, 512, 513, 514, 515, 516,
	329, 517, 0, 518, 590, 591, 592, 593, 0, 527,
	0, 519, 520, 521, 594, 522, 595, 0, 523, 524,
	525, 526, 0, 528, 529, 0, 0, 530, 531, 532,
	534, 535, 533, 536, 0, 537, 0, 0, 538, 539,
	540, 596, 597, 598, 0, 542, 541, 543, 599, 1320,
	1319, 0, 0, 544, 545, 600, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 0,
	0, 275, 555, 556, 557, 0, 276, 277, 558, 0,
	1286, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1075, 299,
	300, 0, 0, 0, 0, 0, 0, 3077, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 1076, 340, 341, 565, 566, 342,
	343, 0, 344, 567, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 569, 570, 571, 413, 1078, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 0, 357,
	358, 360, 0, 1077, 359, 572, 573, 0, 574, 0,
	361, 362, 1079, 575, 1080, 363, 364, 365, 1081, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 576, 1082, 377, 378, 1083,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 1084, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 1085, 401, 0, 0,
	1086, 410, 411, 0, 577, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 1087, 423, 1088, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 1089, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 3078,
	488, 472, 473, 489, 490, 1090, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 0,
	509, 510, 0, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 594, 522, 595, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 0, 537, 0, 0, 538,
	539, 540, 596, 597, 598, 245, 542, 541, 543, 599,
	0, 0, 0, 0, 544, 545, 600, 546, 547, 548,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 259, 260, 262, 261, 263, 264, 265, 266, 550,
	551, 0, 267, 552, 268, 553, 0, 554, 269, 270,
	271, 272, 273, 274, 0, 0, 0, 275, 555, 556,
	557, 0, 276, 277, 558, 0, 0, 0, 278, 279,
	280, 281, 282, 283, 284, 0, 0, 286, 287, 288,
	285, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	559, 560, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 561, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 562,
	563, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 564, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 565, 566, 342, 343, 0, 344, 567,
	0, 568, 345, 0, 346, 347, 348, 349, 350, 569,
	570, 571, 413, 0, 351, 352, 0, 353, 354, 355,
	356, 0, 0, 0, 249, 357, 358, 360, 0, 0,
	359, 572, 573, 0, 574, 0, 361, 362, 0, 575,
	0, 363, 364, 365, 0, 366, 0, 0, 0, 367,
	368, 369, 370, 371, 372, 0, 373, 375, 374, 0,
	376, 576, 0, 377, 378, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 385, 0, 386, 387, 389,
	391, 388, 390, 395, 392, 393, 394, 397, 0, 396,
	0, 398, 399, 400, 405, 407, 408, 403, 404, 406,
	409, 402, 0, 401, 0, 250, 0, 410, 411, 0,
	577, 412, 578, 414, 415, 0, 0, 416, 0, 0,
	0, 418, 419, 420, 0, 0, 421, 422, 579, 0,
	423, 0, 580, 424, 425, 417, 426, 427, 428, 429,
	430, 431, 432, 433, 0, 434, 435, 581, 582, 583,
	436, 584, 437, 438, 0, 439, 0, 440, 441, 442,
	443, 444, 445, 446, 585, 448, 447, 449, 0, 450,
	0, 0, 0, 0, 0, 451, 0, 453, 454, 455,
	452, 456, 457, 458, 459, 0, 460, 461, 462, 0,
	463, 464, 465, 466, 586, 467, 0, 468, 469, 475,
	476, 470, 471, 477, 478, 479, 480, 481, 0, 483,
	484, 482, 485, 486, 487, 0, 488, 472, 473, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 587, 0,
	497, 0, 498, 499, 500, 501, 474, 502, 507, 588,
	503, 504, 505, 506, 589, 0, 509, 510, 0, 508,
	0, 511, 512, 513, 514, 515, 516, 329, 517, 0,
	518, 590, 591, 592, 593, 0, 527, 0, 519, 520,
	521, 594, 522, 595, 0, 523, 524, 525, 526, 0,
	528, 529, 0, 0, 530, 531, 532, 534, 535, 533,
	536, 0, 537, 0, 0, 538, 539, 540, 596, 597,
	598, 0, 542, 541, 543, 599, 0, 0, 0, 0,
	544, 545, 600, 546, 547, 548, 1521, 0, 1320, 1319,
	0, 0, 0, 0, 1317, 0, 0, 0, 0, 0,
	0, 0, 696, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 551, 0, 267, 552, 268, 553, 0,
	554, 269, 270, 271, 272, 273, 274, 0, 0, 0,
	275, 555, 556, 557, 0, 276, 277, 558, 0, 1286,
	0, 278, 279, 280, 281, 282, 283, 284, 0, 0,
	286, 287, 288, 285, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1075, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 559, 560, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 561, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 562, 563, 0, 248, 0, 0, 0, 0,
	0, 1520, 336, 337, 564, 0, 0, 0, 338, 0,
	339, 0, 0, 1076, 340, 341, 565, 566, 342, 343,
	0, 344, 567, 0, 568, 345, 0, 346, 347, 348,
	349, 350, 569, 570, 571, 413, 1078, 351, 352, 0,
	353, 354, 355, 356, 0, 0, 0, 0, 357, 358,
	360, 0, 1077, 359, 572, 573, 0, 574, 0, 361,
	362, 1079, 575, 1080, 363, 364, 365, 1081, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 0, 373,
	375, 374, 0, 376, 576, 1082, 377, 378, 1083, 0,
	379, 380, 381, 0, 0, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 1084, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 1085, 401, 0, 0, 1086,
	410, 411, 0, 577, 412, 578, 414, 415, 0, 0,
	416, 0, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 579, 1087, 423, 1088, 580, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 0, 434, 435,
	581, 582, 583, 436, 584, 437, 438, 0, 439, 0,
	440, 441, 442, 443, 444, 1519, 446, 585, 448, 447,
	449, 0, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 0, 460,
	461, 462, 1089, 463, 464, 465, 466, 586, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 1518, 479, 480,
	481, 0, 483, 484, 482, 485, 486, 487, 0, 488,
	472, 473, 489, 490, 1090, 491, 492, 493, 494, 495,
	496, 587, 0, 497, 0, 498, 499, 500, 501, 474,
	502, 507, 588, 503, 504, 505, 506, 589, 0, 509,
	510, 0, 508, 0, 511, 512, 513, 514, 515, 516,
	329, 517, 0, 518, 590, 591, 592, 593, 0, 527,
	0, 519, 520, 521, 594, 522, 595, 0, 523, 524,
	525, 526, 0, 528, 529, 0, 0, 530, 531, 532,
	534, 535, 533, 536, 0, 537, 0, 0, 538, 539,
	540, 596, 597, 598, 0, 542, 541, 543, 599, 0,
	0, 0, 0, 544, 545, 600, 546, 547, 548, 1461,
	0, 1320, 1319, 0, 0, 0, 0, 1317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 0, 554, 269, 270, 271, 272, 273, 274,
	0, 0, 0, 275, 555, 556, 557, 0, 276, 277,
	558, 0, 1286, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1075, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 559, 560, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 562, 563, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 0, 339, 0, 0, 1076, 340, 341, 565,
	566, 342, 343, 0, 344, 567, 0, 568, 345, 0,
	346, 347, 348, 349, 350, 1460, 570, 571, 413, 1078,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	0, 357, 358, 360, 0, 1077, 359, 572, 573, 0,
	574, 0, 361, 362, 1079, 575, 1080, 363, 364, 365,
	1081, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 576, 1082, 377,
	378, 1083, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 1084, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 1085, 401,
	0, 0, 1086, 410, 411, 0, 577, 412, 578, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 1087, 423, 1088, 580, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 583, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 1089, 463, 464, 465, 466,
	586, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 0, 488, 472, 473, 489, 490, 1090, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	589, 0, 509, 510, 0, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 590, 591, 592,
	593, 0, 527, 0, 519, 520, 521, 594, 522, 595,
	0, 523, 524, 525, 526, 0, 528, 529, 0, 0,
	530, 531, 532, 534, 535, 533, 536, 0, 537, 0,
	0, 538, 539, 540, 596, 597, 598, 0, 542, 541,
	543, 599, 0, 0, 0, 0, 544, 545, 600, 546,
	547, 548, 1390, 0, 1320, 1319, 0, 0, 0, 0,
	1317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 551,
	0, 267, 552, 268, 553, 0, 554, 269, 270, 271,
	272, 273, 274, 0, 0, 0, 275, 555, 556, 557,
	0, 276, 277, 558, 0, 1286, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1075, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 559,
	560, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 561, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 562, 563,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	564, 0, 0, 0, 338, 0, 339, 0, 0, 1076,
	340, 341, 565, 566, 342, 343, 0, 344, 567, 0,
	568, 345, 0, 346, 347, 348, 349, 350, 1389, 570,
	571, 413, 1078, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 0, 357, 358, 360, 0, 1077, 359,
	572, 573, 0, 574, 0, 361, 362, 1079, 575, 1080,
	363, 364, 365, 1081, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	576, 1082, 377, 378, 1083, 0, 379, 380, 381, 0,
	0, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 1084,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 1085, 401, 0, 0, 1086, 410, 411, 0, 577,
	412, 578, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 1087, 423,
	1088, 580, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 583, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 585, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 1089, 463,
	464, 465, 466, 586, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 0, 483, 484,
	482, 485, 486, 487, 0, 488, 472, 473, 489, 490,
	1090, 491, 492, 493, 494, 495, 496, 587, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 588, 503,
	504, 505, 506, 589, 0, 509, 510, 0, 508, 0,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	590, 591, 592, 593, 0, 527, 0, 519, 520, 521,
	594, 522, 595, 0, 523, 524, 525, 526, 0, 528,
	529, 0, 0, 530, 531, 532, 534, 535, 533, 536,
	0, 537, 0, 0, 538, 539, 540, 596, 597, 598,
	0, 542, 541, 543, 599, 0, 0, 0, 0, 544,
	545, 600, 546, 547, 548, 1355, 0, 1320, 1319, 0,
	0, 0, 0, 1317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 0, 554,
	269, 270, 271, 272, 273, 274, 0, 0, 0, 275,
	555, 556, 557, 0, 276, 277, 558, 0, 1286, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1075, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 559, 560, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 562, 563, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 0, 339,
	0, 0, 1076, 340, 341, 565, 566, 342, 343, 0,
	344, 567, 0, 568, 345, 0, 346, 347, 348, 349,
	350, 569, 570, 571, 413, 1078, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 0, 357, 358, 360,
	0, 1077, 359, 572, 573, 0, 574, 0, 361, 362,
	1079, 575, 1080, 363, 364, 365, 1081, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 576, 1082, 377, 378, 1083, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 1084, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 1085, 401, 0, 0, 1086, 410,
	411, 0, 577, 412, 578, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 1087, 423, 1088, 580, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 583, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 1089, 463, 464, 465, 466, 586, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 0, 488, 472,
	473, 489, 490, 1090, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 589, 0, 509, 510,
	0, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 590, 591, 592, 593, 0, 527, 0,
	519, 520, 521, 594, 522, 595, 0, 523, 524, 525,
	526, 0, 528, 529, 0, 0, 530, 531, 532, 534,
	535, 533, 536, 0, 537, 0, 0, 538, 539, 540,
	596, 597, 598, 0, 542, 541, 543, 599, 0, 0,
	0, 0, 544, 545, 600, 546, 547, 548, 1315, 0,
	1320, 1319, 0, 0, 0, 0, 1317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 551, 0, 267, 552, 268,
	553, 0, 554, 269, 270, 271, 272, 273, 274, 0,
	0, 0, 275, 555, 556, 557, 0, 276, 277, 558,
	0, 1286, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1075,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 559, 560, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 561, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 562, 563, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 564, 0, 0, 0,
	338, 0, 339, 0, 0, 1076, 340, 341, 565, 566,
	342, 343, 0, 344, 567, 0, 568, 345, 0, 346,
	347, 348, 349, 350, 1314, 570, 571, 413, 1078, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 0,
	357, 358, 360, 0, 1077, 359, 572, 573, 0, 574,
	0, 361, 362, 1079, 575, 1080, 363, 364, 365, 1081,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 576, 1082, 377, 378,
	1083, 0, 379, 380, 381, 0, 0, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 1084, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 1085, 401, 0,
	0, 1086, 410, 411, 0, 577, 412, 578, 414, 415,
	0, 0, 416, 0, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 579, 1087, 423, 1088, 580, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 583, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 585,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 1089, 463, 464, 465, 466, 586,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 0, 483, 484, 482, 485, 486, 487,
	0, 488, 472, 473, 489, 490, 1090, 491, 492, 493,
	494, 495, 496, 587, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 588, 503, 504, 505, 506, 589,
	0, 509, 510, 0, 508, 0, 511, 512, 513, 514,
	515, 516, 329, 517, 0, 518, 590, 591, 592, 593,
	0, 527, 0, 519, 520, 521, 594, 522, 595, 0,
	523, 524, 525, 526, 0, 528, 529, 0, 0, 530,
	531, 532, 534, 535, 533, 536, 0, 537, 0, 0,
	538, 539, 540, 596, 597, 598, 0, 542, 541, 543,
	599, 0, 0, 0, 0, 544, 545, 600, 546, 547,
	548, 1320, 1319, 0, 0, 0, 0, 1317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 0, 554, 269, 270, 271, 272, 273, 274,
	0, 0, 0, 275, 555, 556, 557, 0, 276, 277,
	558, 0, 1286, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1075, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 559, 560, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 562, 563, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 0, 339, 0, 0, 1076, 340, 341, 565,
	566, 342, 343, 0, 344, 567, 0, 568, 345, 0,
	346, 347, 348, 349, 350, 569, 570, 571, 413, 1078,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	0, 357, 358, 360, 0, 1077, 359, 572, 573, 0,
	574, 0, 361, 362, 1079, 575, 1080, 363, 364, 365,
	1081, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 576, 1082, 377,
	378, 1083, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 1084, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 1085, 401,
	0, 0, 1086, 410, 411, 0, 577, 412, 578, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 1087, 423, 1088, 580, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 583, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 1089, 463, 464, 465, 466,
	586, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 0, 488, 472, 473, 489, 490, 1090, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	589, 0, 509, 510, 0, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 590, 591, 592,
	593, 0, 527, 0, 519, 520, 521, 594, 522, 595,
	0, 523, 524, 525, 526, 0, 528, 529, 0, 0,
	530, 531, 532, 534, 535, 533, 536, 0, 537, 0,
	0, 538, 539, 540, 596, 597, 598, 0, 542, 541,
	543, 599, 1320, 1319, 0, 0, 544, 545, 600, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 551, 0, 267,
	552, 268, 553, 0, 554, 269, 270, 271, 272, 273,
	274, 0, 0, 0, 275, 555, 556, 557, 0, 276,
	277, 558, 0, 1286, 0, 278, 279, 280, 281, 282,
	283, 284, 0, 0, 286, 287, 288, 285, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1075, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 559, 560, 1886,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 561, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 562, 563, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 564, 0,
	0, 0, 338, 0, 339, 0, 0, 1076, 340, 341,
	565, 566, 342, 343, 0, 344, 567, 0, 568, 345,
	0, 346, 347, 348, 349, 350, 569, 570, 571, 413,
	1078, 351, 352, 0, 353, 354, 355, 356, 0, 0,
	0, 0, 357, 358, 360, 0, 1077, 359, 572, 573,
	0, 574, 0, 361, 362, 1079, 575, 1080, 363, 364,
	365, 1081, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 0, 373, 375, 374, 0, 376, 576, 1082,
	377, 378, 1083, 0, 379, 380, 381, 0, 0, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 396, 1084, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 1085,
	401, 0, 0, 1086, 410, 411, 0, 577, 412, 578,
	414, 415, 0, 0, 416, 0, 0, 0, 418, 419,
	420, 0, 0, 421, 422, 579, 1087, 423, 1088, 580,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 0, 434, 435, 581, 582, 583, 436, 584, 437,
	438, 0, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 585, 448, 447, 449, 0, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 0, 460, 461, 462, 1089, 463, 464, 465,
	466, 586, 467, 0, 468, 469, 475, 476, 470, 471,
	477, 478, 479, 480, 481, 0, 483, 484, 482, 485,
	486, 487, 0, 488, 472, 473, 489, 490, 1090, 491,
	492, 493, 494, 495, 496, 587, 0, 497, 0, 498,
	499, 500, 501, 474, 502, 507, 588, 503, 504, 505,
	506, 589, 0, 509, 510, 0, 508, 0, 511, 512,
	513, 514, 515, 516, 329, 517, 0, 518, 590, 591,
	592, 593, 0, 527, 0, 519, 520, 521, 594, 522,
	595, 0, 523, 524, 525, 526, 0, 528, 529, 0,
	0, 530, 531, 532, 534, 535, 533, 536, 0, 537,
	0, 0, 538, 539, 540, 596, 597, 598, 0, 542,
	541, 543, 599, 1320, 1319, 0, 0, 544, 545, 600,
	546, 547, 548, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 551, 0,
	267, 552, 268, 553, 0, 554, 269, 270, 271, 272,
	273, 274, 0, 0, 0, 275, 555, 556, 557, 0,
	276, 277, 558, 0, 1286, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1075, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 559, 560,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 561, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 562, 563, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 564,
	0, 0, 0, 338, 0, 339, 0, 0, 1076, 340,
	341, 565, 566, 342, 343, 0, 344, 567, 0, 568,
	345, 0, 346, 347, 348, 349, 350, 569, 570, 571,
	413, 1078, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 0, 357, 358, 360, 0, 1077, 359, 572,
	573, 0, 574, 0, 361, 362, 1079, 575, 1080, 363,
	364, 365, 1081, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 576,
	1082, 377, 378, 1083, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 1084, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	1085, 401, 0, 0, 1086, 410, 411, 0, 577, 412,
	578, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 1087, 423, 1088,
	580, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 583, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 585, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 1089, 463, 464,
	465, 466, 586, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 0, 488, 472, 473, 489, 490, 1090,
	491, 492, 493, 494, 495, 496, 587, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 588, 503, 504,
	505, 506, 589, 0, 509, 510, 0, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 590,
	591, 592, 593, 0, 527, 0, 519, 520, 521, 594,
	522, 595, 0, 523, 524, 525, 526, 0, 528, 529,
	0, 0, 530, 531, 532, 534, 535, 533, 536, 0,
	537, 0, 0, 538, 539, 540, 596, 597, 598, 1320,
	542, 541, 543, 599, 0, 0, 0, 0, 544, 545,
	600, 546, 547, 548, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 0,
	0, 275, 555, 556, 557, 0, 276, 277, 558, 0,
	1286, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1075, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 1076, 340, 341, 565, 566, 342,
	343, 0, 344, 567, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 569, 570, 571, 413, 1078, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 0, 357,
	358, 360, 0, 1077, 359, 572, 573, 0, 574, 0,
	361, 362, 1079, 575, 1080, 363, 364, 365, 1081, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 576, 1082, 377, 378, 1083,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 1084, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 1085, 401, 0, 0,
	1086, 410, 411, 0, 577, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 1087, 423, 1088, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 1089, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 0,
	488, 472, 473, 489, 490, 1090, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 0,
	509, 510, 0, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 594, 522, 595, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 0, 537, 0, 0, 538,
	539, 540, 596, 597, 598, 245, 542, 541, 543, 599,
	0, 0, 0, 0, 544, 545, 600, 546, 547, 548,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 259, 260, 262, 261, 263, 264, 265, 266, 550,
	551, 0, 267, 552, 268, 553, 0, 554, 269, 270,
	271, 272, 273, 274, 0, 0, 0, 275, 555, 556,
	557, 2538, 276, 277, 558, 0, 0, 0, 278, 279,
	280, 281, 282, 283, 284, 0, 0, 286, 287, 288,
	285, 2535, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	559, 560, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 2542, 323, 561, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 562,
	563, 0, 2741, 0, 0, 0, 0, 0, 335, 336,
	337, 564, 0, 0, 0, 338, 0, 339, 2541, 0,
	0, 340, 341, 565, 566, 342, 343, 0, 344, 567,
	0, 568, 345, 0, 346, 347, 348, 349, 350, 569,
	570, 571, 413, 0, 351, 352, 0, 353, 354, 355,
	356, 0, 0, 0, 2738, 357, 358, 360, 0, 0,
	359, 572, 573, 0, 574, 0, 361, 2740, 0, 575,
	0, 363, 364, 365, 0, 366, 0, 0, 0, 367,
	368, 369, 370, 371, 372, 0, 373, 375, 374, 0,
	376, 576, 0, 377, 378, 2737, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 385, 0, 386, 387, 389,
	391, 388, 390, 395, 392, 393, 394, 397, 0, 396,
	0, 398, 399, 400, 405, 407, 408, 403, 404, 406,
	409, 402, 0, 401, 0, 0, 0, 410, 411, 0,
	577, 412, 578, 414, 415, 0, 0, 416, 0, 0,
	0, 418, 419, 420, 0, 0, 421, 422, 579, 0,
	423, 0, 580, 424, 425, 417, 426, 427, 428, 429,
	430, 431, 432, 433, 0, 434, 435, 581, 582, 583,
	436, 584, 437, 438, 2540, 439, 0, 440, 441, 442,
	443, 444, 445, 446, 585, 448, 447, 449, 0, 450,
	0, 0, 0, 0, 0, 451, 0, 453, 454, 455,
	452, 456, 457, 458, 459, 0, 460, 461, 462, 0,
	463, 464, 465, 466, 586, 467, 0, 468, 469, 475,
	476, 470, 471, 477, 478, 479, 480, 481, 0, 483,
	484, 482, 485, 486, 487, 0, 488, 472, 473, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 587, 0,
	497, 0, 498, 499, 500, 501, 474, 502, 507, 588,
	503, 504, 505, 506, 589, 0, 509, 510, 0, 508,
	0, 511, 512, 513, 514, 515, 516, 329, 517, 0,
	518, 590, 591, 592, 593, 0, 527, 0, 519, 520,
	521, 594, 522, 595, 0, 523, 524, 525, 526, 0,
	528, 529, 0, 2739, 530, 531, 532, 534, 535, 533,
	536, 0, 537, 0, 0, 538, 539, 540, 596, 597,
	598, 245, 542, 541, 543, 599, 0, 0, 0, 0,
	544, 545, 600, 546, 547, 548, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 0, 554, 269, 270, 271, 272, 273, 274,
	0, 0, 0, 275, 555, 556, 557, 2538, 276, 277,
	558, 0, 0, 2532, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 2535, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 559, 560, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 2542, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 562, 563, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 0, 339, 2541, 0, 0, 340, 341, 565,
	566, 342, 343, 0, 344, 567, 0, 568, 345, 0,
	346, 347, 348, 349, 350, 2531, 570, 571, 413, 0,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	0, 357, 358, 360, 0, 0, 359, 572, 573, 0,
	574, 0, 361, 362, 0, 575, 0, 363, 364, 365,
	0, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 576, 0, 377,
	378, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 0, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 0, 401,
	0, 0, 0, 410, 411, 0, 577, 412, 578, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 0, 423, 0, 580, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 583, 436, 584, 437, 438,
	2540, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 0, 463, 464, 465, 466,
	586, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 0, 488, 472, 473, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	589, 0, 509, 510, 0, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 590, 591, 592,
	593, 0, 527, 0, 519, 520, 521, 594, 522, 595,
	0, 523, 524, 525, 526, 0, 528, 529, 0, 2539,
	530, 531, 532, 534, 535, 533, 536, 0, 537, 0,
	0, 538, 539, 540, 596, 597, 598, 0, 542, 541,
	543, 599, 1588, 0, 245, 0, 544, 545, 600, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 551,
	0, 267, 552, 268, 553, 0, 554, 269, 270, 271,
	272, 273, 274, 0, 0, 0, 275, 555, 556, 557,
	0, 276, 277, 558, 0, 0, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 559,
	560, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 561, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 562, 563,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	564, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 565, 566, 342, 343, 0, 344, 567, 0,
	568, 345, 0, 346, 347, 348, 349, 350, 569, 570,
	571, 413, 0, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 249, 357, 358, 360, 0, 0, 359,
	572, 573, 0, 574, 0, 361, 362, 0, 575, 0,
	363, 364, 365, 0, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	576, 0, 377, 378, 0, 0, 379, 380, 381, 0,
	0, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 0,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 0, 401, 0, 250, 0, 410, 411, 0, 577,
	412, 578, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 0, 423,
	0, 580, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 583, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 585, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 0, 463,
	464, 465, 466, 586, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 0, 1591, 484,
	482, 485, 486, 487, 0, 488, 472, 473, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 587, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 588, 503,
	504, 505, 506, 589, 0, 509, 510, 0, 508, 1589,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	590, 591, 592, 593, 0, 527, 0, 519, 520, 521,
	594, 522, 595, 0, 523, 524, 525, 526, 0, 528,
	529, 0, 0, 530, 531, 532, 534, 535, 533, 536,
	0, 537, 0, 0, 538, 539, 540, 596, 597, 598,
	0, 1590, 541, 543, 599, 1290, 0, 245, 0, 544,
	545, 600, 546, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 0, 554,
	269, 270, 271, 272, 273, 274, 0, 0, 0, 275,
	555, 556, 557, 0, 276, 277, 558, 0, 0, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 559, 560, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 562, 563, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 565, 566, 342, 343, 0,
	344, 567, 0, 568, 345, 0, 346, 347, 348, 349,
	350, 1292, 570, 571, 413, 0, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 249, 357, 358, 360,
	0, 0, 359, 572, 573, 0, 574, 0, 361, 362,
	0, 575, 0, 363, 364, 365, 0, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 576, 0, 377, 378, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 0, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 0, 401, 0, 250, 0, 410,
	411, 0, 577, 412, 578, 414, 415, 0, 0, 416,
	0, 0, 1124, 418, 419, 420, 0, 0, 421, 422,
	579, 0, 423, 0, 580, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 583, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 0, 463, 464, 465, 466, 586, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 0, 488, 472,
	473, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 589, 0, 509, 510,
	0, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 590, 591, 592, 593, 0, 527, 0,
	519, 520, 521, 594, 522, 595, 0, 523, 524, 525,
	526, 0, 528, 529, 0, 0, 530, 531, 532, 534,
	535, 533, 536, 0, 537, 0, 0, 538, 539, 540,
	596, 597, 598, 0, 542, 541, 543, 599, 1287, 0,
	245, 0, 544, 545, 600, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 551, 0, 267, 552, 268,
	553, 0, 554, 269, 270, 271, 272, 273, 274, 0,
	0, 0, 275, 555, 556, 557, 0, 276, 277, 558,
	0, 0, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 559, 560, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 561, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 562, 563, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 564, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 565, 566,
	342, 343, 0, 344, 567, 0, 568, 345, 0, 346,
	347, 348, 349, 350, 1289, 570, 571, 413, 0, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 249,
	357, 358, 360, 0, 0, 359, 572, 573, 0, 574,
	0, 361, 362, 0, 575, 0, 363, 364, 365, 0,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 576, 0, 377, 378,
	0, 0, 379, 380, 381, 0, 0, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 0, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 0, 401, 0,
	250, 0, 410, 411, 0, 577, 412, 578, 414, 415,
	0, 0, 416, 0, 0, 1124, 418, 419, 420, 0,
	0, 421, 422, 579, 0, 423, 0, 580, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 583, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 585,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 0, 463, 464, 465, 466, 586,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 0, 483, 484, 482, 485, 486, 487,
	0, 488, 472, 473, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 587, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 588, 503, 504, 505, 506, 589,
	0, 509, 510, 0, 508, 0, 511, 512, 513, 514,
	515, 516, 329, 517, 0, 518, 590, 591, 592, 593,
	0, 527, 0, 519, 520, 521, 594, 522, 595, 0,
	523, 524, 525, 526, 0, 528, 529, 0, 0, 530,
	531, 532, 534, 535, 533, 536, 0, 537, 0, 0,
	538, 539, 540, 596, 597, 598, 0, 542, 541, 543,
	599, 1193, 0, 245, 0, 544, 545, 600, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 551, 0,
	267, 552, 268, 553, 0, 554, 269, 270, 271, 272,
	273, 274, 0, 0, 0, 275, 555, 556, 557, 0,
	276, 277, 558, 0, 0, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 559, 560,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 561, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 562, 563, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 564,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 565, 566, 342, 343, 0, 344, 567, 0, 568,
	345, 0, 346, 347, 348, 349, 350, 1195, 570, 571,
	413, 0, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 249, 357, 358, 360, 0, 0, 359, 572,
	573, 0, 574, 0, 361, 362, 0, 575, 0, 363,
	364, 365, 0, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 576,
	0, 377, 378, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 0, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	0, 401, 0, 250, 0, 410, 411, 0, 577, 412,
	578, 414, 415, 0, 0, 416, 0, 0, 1124, 418,
	419, 420, 0, 0, 421, 422, 579, 0, 423, 0,
	580, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 583, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 585, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 0, 463, 464,
	465, 466, 586, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 0, 488, 472, 473, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 587, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 588, 503, 504,
	505, 506, 589, 0, 509, 510, 0, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 590,
	591, 592, 593, 0, 527, 0, 519, 520, 521, 594,
	522, 595, 0, 523, 524, 525, 526, 0, 528, 529,
	0, 0, 530, 531, 532, 534, 535, 533, 536, 0,
	537, 0, 0, 538, 539, 540, 596, 597, 598, 0,
	542, 541, 543, 599, 632, 0, 245, 0, 544, 545,
	600, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 631, 255, 256, 621,
	257, 258, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 0, 259, 260, 262, 261, 263, 264, 265, 266,
	550, 551, 0, 267, 552, 268, 553, 0, 554, 269,
	270, 271, 272, 273, 274, 0, 0, 0, 275, 555,
	556, 557, 0, 276, 277, 558, 0, 0, 0, 278,
	279, 280, 281, 282, 283, 284, 0, 0, 286, 287,
	288, 285, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 624, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 559, 560, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 561,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	562, 563, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 564, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 565, 566, 342, 343, 625, 344,
	567, 0, 568, 345, 0, 346, 347, 348, 349, 350,
	569, 570, 571, 413, 0, 351, 352, 0, 353, 354,
	355, 356, 0, 0, 0, 0, 357, 358, 360, 0,
	0, 359, 572, 573, 0, 574, 0, 361, 362, 0,
	575, 0, 363, 364, 365, 0, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 0, 373, 375, 374,
	0, 376, 576, 0, 377, 378, 0, 0, 379, 380,
	381, 0, 0, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	396, 0, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 0, 401, 0, 0, 0, 410, 411,
	0, 577, 412, 578, 414, 415, 0, 0, 416, 0,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 579,
	0, 423, 0, 580, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 0, 434, 435, 581, 582,
	583, 436, 584, 437, 438, 0, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 585, 448, 447, 449, 0,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 0, 460, 461, 462,
	0, 463, 464, 465, 466, 586, 467, 0, 468, 469,
	475, 476, 470, 471, 477, 478, 479, 480, 481, 626,
	483, 484, 482, 485, 486, 487, 0, 488, 472, 473,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 587,
	0, 497, 0, 498, 499, 500, 501, 474, 502, 507,
	588, 503, 504, 505, 506, 589, 0, 509, 510, 0,
	508, 0, 511, 512, 513, 514, 515, 516, 329, 517,
	0, 518, 590, 591, 592, 593, 0, 527, 0, 519,
	520, 521, 594, 522, 595, 0, 523, 524, 525, 526,
	0, 528, 529, 0, 0, 530, 531, 532, 534, 535,
	533, 536, 0, 537, 0, 0, 538, 539, 540, 596,
	597, 598, 0, 542, 541, 543, 599, 620, 0, 245,
	0, 544, 545, 600, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 621, 257, 258, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 0,
	0, 275, 555, 556, 557, 0, 276, 277, 558, 0,
	0, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 624, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 565, 566, 342,
	343, 625, 344, 567, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 569, 570, 571, 413, 0, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 0, 357,
	358, 360, 0, 0, 359, 572, 573, 0, 574, 0,
	361, 362, 0, 575, 0, 363, 364, 365, 0, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 576, 0, 377, 378, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 0, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 0, 401, 0, 0,
	0, 410, 411, 0, 577, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 0, 423, 0, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 0, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 626, 483, 484, 482, 485, 486, 487, 0,
	488, 472, 473, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 0,
	509, 510, 0, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 594, 522, 595, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 0, 537, 0, 0, 538,
	539, 540, 596, 597, 598, 245, 542, 541, 543, 599,
	0, 0, 0, 0, 544, 545, 600, 546, 547, 548,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 259, 260, 262, 261, 263, 264, 265, 266, 550,
	551, 0, 267, 552, 268, 553, 0, 554, 269, 270,
	271, 272, 273, 274, 0, 0, 0, 275, 555, 556,
	557, 0, 276, 277, 558, 0, 0, 0, 278, 279,
	280, 281, 282, 283, 284, 0, 0, 286, 287, 288,
	285, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	559, 560, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 561, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 562,
	563, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 564, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 565, 566, 342, 343, 0, 344, 567,
	0, 568, 345, 0, 346, 347, 348, 349, 350, 569,
	570, 571, 413, 0, 351, 352, 0, 353, 354, 355,
	356, 0, 0, 0, 249, 357, 358, 360, 0, 0,
	359, 572, 573, 0, 574, 0, 361, 362, 0, 575,
	0, 363, 364, 365, 0, 366, 0, 0, 0, 367,
	368, 369, 370, 371, 372, 0, 373, 375, 374, 0,
	376, 576, 0, 377, 378, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 385, 0, 386, 387, 389,
	391, 388, 390, 395, 392, 393, 394, 397, 0, 396,
	0, 398, 399, 400, 405, 407, 408, 403, 404, 406,
	409, 402, 0, 401, 0, 250, 0, 410, 411, 0,
	577, 412, 578, 414, 415, 0, 0, 416, 0, 0,
	1124, 418, 419, 420, 0, 0, 421, 422, 579, 0,
	423, 0, 580, 424, 425, 417, 426, 427, 428, 429,
	430, 431, 432, 433, 0, 434, 435, 581, 582, 583,
	436, 584, 437, 438, 0, 439, 0, 440, 441, 442,
	443, 444, 445, 446, 585, 448, 447, 449, 0, 450,
	0, 0, 0, 0, 0, 451, 0, 453, 454, 455,
	452, 456, 457, 458, 459, 0, 460, 461, 462, 0,
	463, 464, 465, 466, 586, 467, 0, 468, 469, 475,
	476, 470, 471, 477, 478, 479, 480, 481, 0, 483,
	484, 482, 485, 486, 487, 0, 488, 472, 473, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 587, 0,
	497, 0, 498, 499, 500, 501, 474, 502, 507, 588,
	503, 504, 505, 506, 589, 0, 509, 510, 0, 508,
	0, 511, 512, 513, 514, 515, 516, 329, 517, 0,
	518, 590, 591, 592, 593, 0, 527, 0, 519, 520,
	521, 594, 522, 595, 0, 523, 524, 525, 526, 0,
	528, 529, 0, 0, 530, 531, 532, 534, 535, 533,
	536, 0, 537, 0, 0, 538, 539, 540, 596, 597,
	598, 245, 542, 541, 543, 599, 0, 0, 0, 0,
	544, 545, 600, 546, 547, 548, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 0, 554, 269, 270, 271, 272, 273, 274,
	0, 0, 0, 275, 555, 556, 557, 0, 276, 277,
	558, 0, 0, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 559, 560, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 562, 563, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 565,
	566, 342, 343, 0, 344, 567, 0, 568, 345, 0,
	346, 347, 348, 349, 350, 569, 570, 571, 413, 0,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	249, 357, 358, 360, 0, 0, 359, 572, 573, 0,
	574, 0, 361, 362, 0, 575, 0, 363, 364, 365,
	0, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 576, 0, 377,
	378, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 0, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 3099, 401,
	0, 250, 0, 410, 411, 0, 577, 412, 578, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 0, 423, 0, 580, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 583, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 0, 463, 464, 465, 466,
	586, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 0, 488, 472, 473, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	589, 0, 509, 510, 0, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 590, 591, 592,
	593, 0, 527, 0, 519, 520, 521, 594, 522, 595,
	0, 523, 524, 525, 526, 0, 528, 529, 0, 0,
	530, 531, 532, 534, 535, 533, 536, 0, 537, 0,
	0, 538, 539, 540, 596, 597, 598, 0, 542, 541,
	543, 599, 2670, 0, 245, 0, 544, 545, 600, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 551,
	0, 267, 552, 268, 553, 0, 554, 269, 270, 271,
	272, 273, 274, 0, 0, 0, 275, 555, 556, 557,
	0, 276, 277, 558, 0, 0, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 559,
	560, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 561, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 562, 563,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	564, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 565, 566, 342, 343, 0, 344, 567, 0,
	568, 345, 0, 346, 347, 348, 349, 350, 2669, 570,
	571, 413, 0, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 249, 357, 358, 360, 0, 0, 359,
	572, 573, 0, 574, 0, 361, 362, 0, 575, 0,
	363, 364, 365, 0, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	576, 0, 377, 378, 0, 0, 379, 380, 381, 0,
	0, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 0,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 0, 401, 0, 250, 0, 410, 411, 0, 577,
	412, 578, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 0, 423,
	0, 580, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 583, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 585, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 0, 463,
	464, 465, 466, 586, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 0, 483, 484,
	482, 485, 486, 487, 0, 488, 472, 473, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 587, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 588, 503,
	504, 505, 506, 589, 0, 509, 510, 0, 508, 0,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	590, 591, 592, 593, 0, 527, 0, 519, 520, 521,
	594, 522, 595, 0, 523, 524, 525, 526, 0, 528,
	529, 0, 0, 530, 531, 532, 534, 535, 533, 536,
	0, 537, 0, 0, 538, 539, 540, 596, 597, 598,
	0, 542, 541, 543, 599, 2112, 0, 245, 0, 544,
	545, 600, 546, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 0, 554,
	269, 270, 271, 272, 273, 274, 0, 0, 0, 275,
	555, 556, 557, 0, 276, 277, 558, 0, 0, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 559, 560, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 562, 563, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 565, 566, 342, 343, 0,
	344, 567, 0, 568, 345, 0, 346, 347, 348, 349,
	350, 569, 570, 571, 413, 0, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 249, 357, 358, 360,
	0, 0, 359, 572, 573, 0, 574, 0, 361, 362,
	0, 575, 0, 363, 364, 365, 0, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 576, 0, 377, 378, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 0, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 0, 401, 0, 250, 0, 410,
	411, 0, 577, 412, 578, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 0, 423, 0, 580, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 583, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 0, 463, 464, 465, 466, 586, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 0, 488, 472,
	473, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 589, 0, 509, 510,
	0, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 590, 591, 592, 593, 0, 527, 0,
	519, 520, 521, 594, 522, 595, 0, 523, 524, 525,
	526, 0, 528, 529, 0, 0, 530, 531, 532, 534,
	535, 533, 536, 0, 537, 0, 0, 538, 539, 540,
	596, 597, 598, 245, 542, 541, 543, 599, 0, 0,
	0, 0, 544, 545, 600, 546, 547, 548, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 551, 0,
	267, 552, 268, 553, 0, 554, 269, 270, 271, 272,
	273, 274, 0, 0, 0, 275, 555, 556, 557, 0,
	276, 277, 558, 0, 0, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 559, 560,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 561, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 562, 563, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 564,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 565, 566, 342, 343, 0, 344, 567, 0, 568,
	345, 0, 346, 347, 348, 349, 350, 569, 570, 571,
	413, 0, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 249, 357, 358, 360, 0, 0, 359, 572,
	573, 0, 574, 0, 361, 362, 0, 575, 0, 363,
	364, 365, 0, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 576,
	0, 377, 378, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 0, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	0, 401, 0, 250, 0, 410, 411, 0, 577, 412,
	578, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 0, 423, 0,
	580, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 583, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 585, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 0, 463, 464,
	465, 466, 586, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 0, 488, 472, 473, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 587, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 588, 503, 504,
	505, 506, 589, 0, 509, 510, 0, 508, 2029, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 590,
	591, 592, 593, 0, 527, 0, 519, 520, 521, 594,
	522, 595, 0, 523, 524, 525, 526, 0, 528, 529,
	0, 0, 530, 531, 532, 534, 535, 533, 536, 0,
	537, 0, 0, 538, 539, 540, 596, 597, 598, 0,
	542, 541, 543, 599, 2034, 0, 245, 0, 544, 545,
	600, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 0, 259, 260, 262, 261, 263, 264, 265, 266,
	550, 551, 0, 267, 552, 268, 553, 0, 554, 269,
	270, 271, 272, 273, 274, 0, 0, 0, 275, 555,
	556, 557, 0, 276, 277, 558, 0, 0, 0, 278,
	279, 280, 281, 282, 283, 284, 0, 0, 286, 287,
	288, 285, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 559, 560, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 561,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	562, 563, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 564, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 565, 566, 342, 343, 0, 344,
	567, 0, 568, 345, 0, 346, 347, 348, 349, 350,
	2033, 570, 571, 413, 0, 351, 352, 0, 353, 354,
	355, 356, 0, 0, 0, 249, 357, 358, 360, 0,
	0, 359, 572, 573, 0, 574, 0, 361, 362, 0,
	575, 0, 363, 364, 365, 0, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 0, 373, 375, 374,
	0, 376, 576, 0, 377, 378, 0, 0, 379, 380,
	381, 0, 0, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	396, 0, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 0, 401, 0, 250, 0, 410, 411,
	0, 577, 412, 578, 414, 415, 0, 0, 416, 0,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 579,
	0, 423, 0, 580, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 0, 434, 435, 581, 582,
	583, 436, 584, 437, 438, 0, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 585, 448, 447, 449, 0,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 0, 460, 461, 462,
	0, 463, 464, 465, 466, 586, 467, 0, 468, 469,
	475, 476, 470, 471, 477, 478, 479, 480, 481, 0,
	483, 484, 482, 485, 486, 487, 0, 488, 472, 473,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 587,
	0, 497, 0, 498, 499, 500, 501, 474, 502, 507,
	588, 503, 504, 505, 506, 589, 0, 509, 510, 0,
	508, 0, 511, 512, 513, 514, 515, 516, 329, 517,
	0, 518, 590, 591, 592, 593, 0, 527, 0, 519,
	520, 521, 594, 522, 595, 0, 523, 524, 525, 526,
	0, 528, 529, 0, 0, 530, 531, 532, 534, 535,
	533, 536, 0, 537, 0, 0, 538, 539, 540, 596,
	597, 598, 0, 542, 541, 543, 599, 2022, 0, 245,
	0, 544, 545, 600, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 0,
	0, 275, 555, 556, 557, 0, 276, 277, 558, 0,
	0, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 565, 566, 342,
	343, 0, 344, 567, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 2024, 570, 571, 413, 0, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 249, 357,
	358, 360, 0, 0, 359, 572, 573, 0, 574, 0,
	361, 362, 0, 575, 0, 363, 364, 365, 0, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 576, 0, 377, 378, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 0, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 0, 401, 0, 250,
	0, 410, 411, 0, 577, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 0, 423, 0, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 0, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 0,
	488, 472, 473, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 0,
	509, 510, 0, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 594, 522, 595, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 0, 537, 0, 0, 538,
	539, 540, 596, 597, 598, 245, 542, 541, 543, 599,
	0, 0, 0, 0, 544, 545, 600, 546, 547, 548,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 259, 260, 262, 261, 263, 264, 265, 266, 550,
	551, 0, 267, 552, 268, 553, 0, 554, 269, 270,
	271, 272, 273, 274, 0, 0, 0, 275, 555, 556,
	557, 0, 276, 277, 558, 0, 0, 0, 278, 279,
	280, 281, 282, 283, 284, 0, 0, 286, 287, 288,
	285, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	559, 560, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 561, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 562,
	563, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 564, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 565, 566, 342, 343, 0, 344, 567,
	0, 568, 345, 0, 346, 347, 348, 349, 350, 1993,
	570, 571, 413, 0, 351, 352, 0, 353, 354, 355,
	356, 0, 0, 0, 249, 357, 358, 360, 0, 0,
	359, 572, 573, 0, 574, 0, 361, 362, 0, 575,
	0, 363, 364, 365, 0, 366, 0, 0, 0, 367,
	368, 369, 370, 371, 372, 0, 373, 375, 374, 0,
	376, 576, 0, 377, 378, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 385, 0, 386, 387, 389,
	391, 388, 390, 395, 392, 393, 394, 397, 0, 396,
	0, 398, 399, 400, 405, 407, 408, 403, 404, 406,
	409, 402, 0, 401, 0, 250, 0, 410, 411, 0,
	577, 412, 578, 414, 415, 0, 0, 416, 0, 0,
	1124, 418, 419, 420, 0, 0, 421, 422, 579, 0,
	423, 0, 580, 424, 425, 417, 426, 427, 428, 429,
	430, 431, 432, 433, 0, 434, 435, 581, 582, 583,
	436, 584, 437, 438, 0, 439, 0, 440, 441, 442,
	443, 444, 445, 446, 585, 448, 447, 449, 0, 450,
	0, 0, 0, 0, 0, 451, 0, 453, 454, 455,
	452, 456, 457, 458, 459, 0, 460, 461, 462, 0,
	463, 464, 465, 466, 586, 467, 0, 468, 469, 475,
	476, 470, 471, 477, 478, 479, 480, 481, 0, 483,
	484, 482, 485, 486, 487, 0, 488, 472, 473, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 587, 0,
	497, 0, 498, 499, 500, 501, 474, 502, 507, 588,
	503, 504, 505, 506, 589, 0, 509, 510, 0, 508,
	0, 511, 512, 513, 514, 515, 516, 329, 517, 0,
	518, 590, 591, 592, 593, 0, 527, 0, 519, 520,
	521, 594, 522, 595, 0, 523, 524, 525, 526, 0,
	528, 529, 0, 0, 530, 531, 532, 534, 535, 533,
	536, 0, 537, 0, 0, 538, 539, 540, 596, 597,
	598, 0, 542, 541, 543, 599, 1453, 0, 245, 0,
	544, 545, 600, 546, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 551, 0, 267, 552, 268, 553, 0,
	554, 269, 270, 271, 272, 273, 274, 0, 0, 0,
	275, 555, 556, 557, 0, 276, 277, 558, 0, 0,
	0, 278, 279, 280, 281, 282, 283, 284, 0, 0,
	286, 287, 288, 285, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 559, 560, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 561, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 562, 563, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 564, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 565, 566, 342, 343,
	0, 344, 567, 0, 568, 345, 0, 346, 347, 348,
	349, 350, 1452, 570, 571, 413, 0, 351, 352, 0,
	353, 354, 355, 356, 0, 0, 0, 249, 357, 358,
	360, 0, 0, 359, 572, 573, 0, 574, 0, 361,
	362, 0, 575, 0, 363, 364, 365, 0, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 0, 373,
	375, 374, 0, 376, 576, 0, 377, 378, 0, 0,
	379, 380, 381, 0, 0, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 0, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 0, 401, 0, 250, 0,
	410, 411, 0, 577, 412, 578, 414, 415, 0, 0,
	416, 0, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 579, 0, 423, 0, 580, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 0, 434, 435,
	581, 582, 583, 436, 584, 437, 438, 0, 439, 0,
	440, 441, 442, 443, 444, 445, 446, 585, 448, 447,
	449, 0, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 0, 460,
	461, 462, 0, 463, 464, 465, 466, 586, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 478, 479, 480,
	481, 0, 483, 484, 482, 485, 486, 487, 0, 488,
	472, 473, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 587, 0, 497, 0, 498, 499, 500, 501, 474,
	502, 507, 588, 503, 504, 505, 506, 589, 0, 509,
	510, 0, 508, 0, 511, 512, 513, 514, 515, 516,
	329, 517, 0, 518, 590, 591, 592, 593, 0, 527,
	0, 519, 520, 521, 594, 522, 595, 0, 523, 524,
	525, 526, 0, 528, 529, 0, 0, 530, 531, 532,
	534, 535, 533, 536, 0, 537, 0, 0, 538, 539,
	540, 596, 597, 598, 0, 542, 541, 543, 599, 1444,
	0, 245, 0, 544, 545, 600, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 0, 554, 269, 270, 271, 272, 273, 274,
	0, 0, 0, 275, 555, 556, 557, 0, 276, 277,
	558, 0, 0, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 559, 560, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 562, 563, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 565,
	566, 342, 343, 0, 344, 567, 0, 568, 345, 0,
	346, 347, 348, 349, 350, 1443, 570, 571, 413, 0,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	249, 357, 358, 360, 0, 0, 359, 572, 573, 0,
	574, 0, 361, 362, 0, 575, 0, 363, 364, 365,
	0, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 576, 0, 377,
	378, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 0, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 0, 401,
	0, 250, 0, 410, 411, 0, 577, 412, 578, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 0, 423, 0, 580, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 583, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 0, 463, 464, 465, 466,
	586, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 0, 488, 472, 473, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	589, 0, 509, 510, 0, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 590, 591, 592,
	593, 0, 527, 0, 519, 520, 521, 594, 522, 595,
	0, 523, 524, 525, 526, 0, 528, 529, 0, 0,
	530, 531, 532, 534, 535, 533, 536, 0, 537, 0,
	0, 538, 539, 540, 596, 597, 598, 0, 542, 541,
	543, 599, 1441, 0, 245, 0, 544, 545, 600, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 551,
	0, 267, 552, 268, 553, 0, 554, 269, 270, 271,
	272, 273, 274, 0, 0, 0, 275, 555, 556, 557,
	0, 276, 277, 558, 0, 0, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 559,
	560, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 561, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 562, 563,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	564, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 565, 566, 342, 343, 0, 344, 567, 0,
	568, 345, 0, 346, 347, 348, 349, 350, 1440, 570,
	571, 413, 0, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 249, 357, 358, 360, 0, 0, 359,
	572, 573, 0, 574, 0, 361, 362, 0, 575, 0,
	363, 364, 365, 0, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	576, 0, 377, 378, 0, 0, 379, 380, 381, 0,
	0, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 0,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 0, 401, 0, 250, 0, 410, 411, 0, 577,
	412, 578, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 0, 423,
	0, 580, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 583, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 585, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 0, 463,
	464, 465, 466, 586, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 0, 483, 484,
	482, 485, 486, 487, 0, 488, 472, 473, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 587, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 588, 503,
	504, 505, 506, 589, 0, 509, 510, 0, 508, 0,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	590, 591, 592, 593, 0, 527, 0, 519, 520, 521,
	594, 522, 595, 0, 523, 524, 525, 526, 0, 528,
	529, 0, 0, 530, 531, 532, 534, 535, 533, 536,
	0, 537, 0, 0, 538, 539, 540, 596, 597, 598,
	0, 542, 541, 543, 599, 1436, 0, 245, 0, 544,
	545, 600, 546, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 0, 554,
	269, 270, 271, 272, 273, 274, 0, 0, 0, 275,
	555, 556, 557, 0, 276, 277, 558, 0, 0, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 559, 560, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 562, 563, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 565, 566, 342, 343, 0,
	344, 567, 0, 568, 345, 0, 346, 347, 348, 349,
	350, 1435, 570, 571, 413, 0, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 249, 357, 358, 360,
	0, 0, 359, 572, 573, 0, 574, 0, 361, 362,
	0, 575, 0, 363, 364, 365, 0, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 576, 0, 377, 378, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 0, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 0, 401, 0, 250, 0, 410,
	411, 0, 577, 412, 578, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 0, 423, 0, 580, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 583, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 0, 463, 464, 465, 466, 586, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 0, 488, 472,
	473, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 589, 0, 509, 510,
	0, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 590, 591, 592, 593, 0, 527, 0,
	519, 520, 521, 594, 522, 595, 0, 523, 524, 525,
	526, 0, 528, 529, 0, 0, 530, 531, 532, 534,
	535, 533, 536, 0, 537, 0, 0, 538, 539, 540,
	596, 597, 598, 0, 542, 541, 543, 599, 1393, 0,
	245, 0, 544, 545, 600, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 551, 0, 267, 552, 268,
	553, 0, 554, 269, 270, 271, 272, 273, 274, 0,
	0, 0, 275, 555, 556, 557, 0, 276, 277, 558,
	0, 0, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 559, 560, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 561, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 562, 563, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 564, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 565, 566,
	342, 343, 0, 344, 567, 0, 568, 345, 0, 346,
	347, 348, 349, 350, 569, 570, 571, 413, 0, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 249,
	357, 358, 360, 0, 0, 359, 572, 573, 0, 574,
	0, 361, 362, 0, 575, 0, 363, 364, 365, 0,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 576, 0, 377, 378,
	0, 0, 379, 380, 381, 0, 0, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 0, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 0, 401, 0,
	250, 0, 410, 411, 0, 577, 412, 578, 414, 415,
	0, 0, 416, 0, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 579, 0, 423, 0, 580, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 583, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 585,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 0, 463, 464, 465, 466, 586,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 0, 483, 484, 482, 485, 486, 487,
	0, 488, 472, 473, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 587, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 588, 503, 504, 505, 506, 589,
	0, 509, 510, 0, 508, 0, 511, 512, 513, 514,
	515, 516, 329, 517, 0, 518, 590, 591, 592, 593,
	0, 527, 0, 519, 520, 521, 594, 522, 595, 0,
	523, 524, 525, 526, 0, 528, 529, 0, 0, 530,
	531, 532, 534, 535, 533, 536, 0, 537, 0, 0,
	538, 539, 540, 596, 597, 598, 0, 542, 541, 543,
	599, 1308, 0, 245, 0, 544, 545, 600, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 551, 0,
	267, 552, 268, 553, 0, 554, 269, 270, 271, 272,
	273, 274, 0, 0, 0, 275, 555, 556, 557, 0,
	276, 277, 558, 0, 0, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 559, 560,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 561, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 562, 563, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 564,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 565, 566, 342, 343, 0, 344, 567, 0, 568,
	345, 0, 346, 347, 348, 349, 350, 569, 570, 571,
	413, 0, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 249, 357, 358, 360, 0, 0, 359, 572,
	573, 0, 574, 0, 361, 362, 0, 575, 0, 363,
	364, 365, 0, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 576,
	0, 377, 378, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 0, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	0, 401, 0, 250, 0, 410, 411, 0, 577, 412,
	578, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 0, 423, 0,
	580, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 583, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 585, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 0, 463, 464,
	465, 466, 586, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 0, 488, 472, 473, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 587, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 588, 503, 504,
	505, 506, 589, 0, 509, 510, 0, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 590,
	591, 592, 593, 0, 527, 0, 519, 520, 521, 594,
	522, 595, 0, 523, 524, 525, 526, 0, 528, 529,
	0, 0, 530, 531, 532, 534, 535, 533, 536, 0,
	537, 0, 0, 538, 539, 540, 596, 597, 598, 0,
	542, 541, 543, 599, 1301, 0, 245, 0, 544, 545,
	600, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 0, 259, 260, 262, 261, 263, 264, 265, 266,
	550, 551, 0, 267, 552, 268, 553, 0, 554, 269,
	270, 271, 272, 273, 274, 0, 0, 0, 275, 555,
	556, 557, 0, 276, 277, 558, 0, 0, 0, 278,
	279, 280, 281, 282, 283, 284, 0, 0, 286, 287,
	288, 285, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 559, 560, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 561,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	562, 563, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 564, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 565, 566, 342, 343, 0, 344,
	567, 0, 568, 345, 0, 346, 347, 348, 349, 350,
	1303, 570, 571, 413, 0, 351, 352, 0, 353, 354,
	355, 356, 0, 0, 0, 249, 357, 358, 360, 0,
	0, 359, 572, 573, 0, 574, 0, 361, 362, 0,
	575, 0, 363, 364, 365, 0, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 0, 373, 375, 374,
	0, 376, 576, 0, 377, 378, 0, 0, 379, 380,
	381, 0, 0, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	396, 0, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 0, 401, 0, 250, 0, 410, 411,
	0, 577, 412, 578, 414, 415, 0, 0, 416, 0,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 579,
	0, 423, 0, 580, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 0, 434, 435, 581, 582,
	583, 436, 584, 437, 438, 0, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 585, 448, 447, 449, 0,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 0, 460, 461, 462,
	0, 463, 464, 465, 466, 586, 467, 0, 468, 469,
	475, 476, 470, 471, 477, 478, 479, 480, 481, 0,
	483, 484, 482, 485, 486, 487, 0, 488, 472, 473,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 587,
	0, 497, 0, 498, 499, 500, 501, 474, 502, 507,
	588, 503, 504, 505, 506, 589, 0, 509, 510, 0,
	508, 0, 511, 512, 513, 514, 515, 516, 329, 517,
	0, 518, 590, 591, 592, 593, 0, 527, 0, 519,
	520, 521, 594, 522, 595, 0, 523, 524, 525, 526,
	0, 528, 529, 0, 0, 530, 531, 532, 534, 535,
	533, 536, 0, 537, 0, 0, 538, 539, 540, 596,
	597, 598, 0, 542, 541, 543, 599, 602, 0, 245,
	0, 544, 545, 600, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 0,
	0, 275, 555, 556, 557, 0, 276, 277, 558, 0,
	0, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 565, 566, 342,
	343, 0, 344, 567, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 569, 570, 571, 413, 0, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 249, 357,
	358, 360, 0, 0, 359, 572, 573, 0, 574, 0,
	361, 362, 0, 575, 0, 363, 364, 365, 0, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 576, 0, 377, 378, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 0, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 0, 401, 0, 250,
	0, 410, 411, 0, 577, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 0, 423, 0, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 0, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 0,
	488, 472, 473, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 0,
	509, 510, 0, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 594, 522, 595, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 0, 537, 0, 0, 538,
	539, 540, 596, 597, 598, 0, 542, 541, 543, 599,
	236, 0, 245, 0, 544, 545, 600, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 551, 0, 267,
	552, 268, 553, 0, 554, 269, 270, 271, 272, 273,
	274, 0, 0, 0, 275, 555, 556, 557, 0, 276,
	277, 558, 0, 0, 0, 278, 279, 280, 281, 282,
	283, 284, 0, 0, 286, 287, 288, 285, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 559, 560, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 561, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 562, 563, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 564, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	565, 566, 342, 343, 0, 344, 567, 0, 568, 345,
	0, 346, 347, 348, 349, 350, 569, 570, 571, 413,
	0, 351, 352, 0, 353, 354, 355, 356, 0, 0,
	0, 249, 357, 358, 360, 0, 0, 359, 572, 573,
	0, 574, 0, 361, 362, 0, 575, 0, 363, 364,
	365, 0, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 0, 373, 375, 374, 0, 376, 576, 0,
	377, 378, 0, 0, 379, 380, 381, 0, 0, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 396, 0, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 0,
	401, 0, 250, 0, 410, 411, 0, 577, 412, 578,
	414, 415, 0, 0, 416, 0, 0, 0, 418, 419,
	420, 0, 0, 421, 422, 579, 0, 423, 0, 580,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 0, 434, 435, 581, 582, 583, 436, 584, 437,
	438, 0, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 585, 448, 447, 449, 0, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 0, 460, 461, 462, 0, 463, 464, 465,
	466, 586, 467, 0, 468, 469, 475, 476, 470, 471,
	477, 478, 479, 480, 481, 0, 483, 484, 482, 485,
	486, 487, 0, 488, 472, 473, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 587, 0, 497, 0, 498,
	499, 500, 501, 474, 502, 507, 588, 503, 504, 505,
	506, 589, 0, 509, 510, 0, 508, 0, 511, 512,
	513, 514, 515, 516, 329, 517, 0, 518, 590, 591,
	592, 593, 0, 527, 0, 519, 520, 521, 594, 522,
	595, 0, 523, 524, 525, 526, 0, 528, 529, 0,
	0, 530, 531, 532, 534, 535, 533, 536, 0, 537,
	0, 0, 538, 539, 540, 596, 597, 598, 245, 542,
	541, 543, 599, 0, 0, 0, 0, 544, 545, 600,
	546, 547, 548, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 551, 0, 267, 552, 268, 553, 0,
	554, 269, 270, 271, 272, 273, 274, 0, 0, 0,
	275, 555, 556, 557, 0, 276, 277, 558, 0, 0,
	0, 278, 279, 280, 281, 282, 283, 284, 0, 0,
	286, 287, 288, 285, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 559, 560, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 561, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 562, 563, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 564, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 565, 566, 342, 343,
	0, 344, 567, 0, 568, 345, 0, 346, 347, 348,
	349, 350, 569, 570, 571, 413, 0, 351, 352, 0,
	353, 354, 355, 356, 0, 0, 0, 249, 357, 358,
	360, 0, 0, 359, 572, 573, 0, 574, 0, 361,
	362, 0, 575, 0, 363, 364, 365, 0, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 0, 373,
	375, 374, 0, 376, 576, 0, 377, 378, 0, 0,
	379, 380, 381, 0, 0, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 0, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 0, 401, 0, 250, 0,
	410, 411, 0, 577, 412, 578, 414, 415, 0, 0,
	416, 0, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 579, 0, 423, 0, 580, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 0, 434, 435,
	581, 582, 583, 436, 584, 437, 438, 0, 439, 0,
	440, 441, 442, 443, 444, 445, 446, 585, 448, 447,
	449, 0, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 0, 460,
	461, 462, 0, 463, 464, 465, 466, 586, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 478, 479, 480,
	481, 0, 483, 484, 482, 485, 486, 487, 0, 488,
	472, 473, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 587, 0, 497, 0, 498, 499, 500, 501, 474,
	502, 507, 588, 503, 504, 505, 506, 589, 0, 509,
	510, 0, 508, 0, 511, 512, 513, 514, 515, 516,
	329, 517, 0, 518, 590, 591, 592, 593, 0, 527,
	0, 519, 520, 521, 594, 522, 595, 0, 523, 524,
	525, 526, 0, 528, 529, 0, 0, 530, 531, 532,
	534, 535, 533, 536, 0, 537, 0, 0, 538, 539,
	540, 596, 597, 598, 245, 542, 541, 543, 599, 0,
	0, 0, 0, 544, 545, 600, 546, 547, 548, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 551,
	0, 267, 552, 268, 553, 0, 554, 269, 270, 271,
	272, 273, 274, 0, 0, 0, 275, 555, 556, 557,
	0, 276, 277, 558, 0, 0, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 624,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 559,
	560, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 561, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	564, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 565, 566, 342, 343, 625, 344, 567, 0,
	568, 345, 0, 346, 347, 348, 349, 350, 569, 570,
	571, 413, 0, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 0, 357, 358, 360, 0, 0, 359,
	572, 573, 0, 574, 0, 361, 362, 0, 575, 0,
	363, 364, 365, 0, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	576, 0, 377, 378, 0, 0, 379, 380, 381, 0,
	0, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 0,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 0, 401, 0, 0, 0, 410, 411, 0, 577,
	412, 578, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 0, 423,
	0, 580, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 583, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 585, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 0, 463,
	464, 465, 466, 586, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 626, 483, 484,
	482, 485, 486, 487, 0, 488, 472, 473, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 587, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 588, 503,
	504, 505, 506, 589, 0, 509, 510, 0, 508, 0,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	590, 591, 592, 593, 0, 527, 0, 519, 520, 521,
	594, 522, 595, 0, 523, 524, 525, 526, 0, 528,
	529, 0, 0, 530, 531, 532, 534, 535, 533, 536,
	0, 537, 0, 0, 538, 539, 540, 596, 597, 598,
	245, 542, 541, 543, 599, 0, 0, 0, 0, 544,
	545, 600, 546, 547, 548, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 551, 0, 267, 552, 268,
	553, 0, 554, 269, 270, 271, 272, 273, 274, 0,
	0, 0, 275, 555, 556, 557, 0, 276, 277, 558,
	0, 0, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 2146, 304, 0, 305, 559, 560, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 561, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 562, 563, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 564, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 565, 566,
	342, 343, 0, 344, 567, 0, 568, 345, 0, 346,
	347, 348, 349, 350, 569, 570, 571, 413, 0, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 249,
	357, 358, 360, 0, 0, 359, 572, 573, 0, 574,
	0, 361, 362, 0, 575, 0, 363, 364, 365, 0,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 576, 0, 377, 378,
	0, 0, 379, 380, 381, 0, 0, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 0, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 0, 401, 0,
	250, 0, 410, 411, 0, 577, 412, 578, 414, 415,
	0, 0, 416, 0, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 579, 0, 423, 0, 580, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 583, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 585,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 0, 463, 464, 465, 466, 586,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 0, 483, 484, 482, 485, 486, 487,
	0, 488, 472, 473, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 587, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 588, 503, 504, 505, 506, 589,
	0, 509, 510, 0, 508, 0, 511, 512, 513, 514,
	515, 516, 329, 517, 0, 518, 590, 591, 592, 593,
	0, 527, 0, 519, 520, 521, 594, 522, 595, 0,
	523, 524, 525, 526, 0, 528, 529, 0, 0, 530,
	531, 532, 534, 535, 533, 536, 0, 537, 0, 0,
	538, 539, 540, 596, 597, 598, 245, 542, 541, 543,
	599, 0, 0, 0, 0, 544, 545, 600, 546, 547,
	548, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 0, 259, 260, 262, 261, 263, 264, 265, 266,
	550, 551, 0, 267, 552, 268, 553, 0, 554, 269,
	270, 271, 272, 273, 274, 0, 0, 0, 275, 555,
	556, 557, 0, 276, 277, 558, 0, 0, 0, 278,
	279, 280, 281, 282, 283, 284, 0, 0, 286, 287,
	288, 285, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 2144, 304, 0,
	305, 559, 560, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 561,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	562, 563, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 564, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 565, 566, 342, 343, 0, 344,
	567, 0, 568, 345, 0, 346, 347, 348, 349, 350,
	569, 570, 571, 413, 0, 351, 352, 0, 353, 354,
	355, 356, 0, 0, 0, 249, 357, 358, 360, 0,
	0, 359, 572, 573, 0, 574, 0, 361, 362, 0,
	575, 0, 363, 364, 365, 0, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 0, 373, 375, 374,
	0, 376, 576, 0, 377, 378, 0, 0, 379, 380,
	381, 0, 0, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	396, 0, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 0, 401, 0, 250, 0, 410, 411,
	0, 577, 412, 578, 414, 415, 0, 0, 416, 0,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 579,
	0, 423, 0, 580, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 0, 434, 435, 581, 582,
	583, 436, 584, 437, 438, 0, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 585, 448, 447, 449, 0,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 0, 460, 461, 462,
	0, 463, 464, 465, 466, 586, 467, 0, 468, 469,
	475, 476, 470, 471, 477, 478, 479, 480, 481, 0,
	483, 484, 482, 485, 486, 487, 0, 488, 472, 473,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 587,
	0, 497, 0, 498, 499, 500, 501, 474, 502, 507,
	588, 503, 504, 505, 506, 589, 0, 509, 510, 0,
	508, 0, 511, 512, 513, 514, 515, 516, 329, 517,
	0, 518, 590, 591, 592, 593, 0, 527, 0, 519,
	520, 521, 594, 522, 595, 0, 523, 524, 525, 526,
	0, 528, 529, 0, 0, 530, 531, 532, 534, 535,
	533, 536, 0, 537, 0, 0, 538, 539, 540, 596,
	597, 598, 245, 542, 541, 543, 599, 0, 0, 0,
	0, 544, 545, 600, 546, 547, 548, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 551, 0, 267,
	552, 268, 553, 0, 554, 269, 270, 271, 272, 273,
	274, 0, 0, 0, 275, 555, 556, 557, 0, 276,
	277, 558, 0, 0, 0, 278, 279, 280, 281, 282,
	283, 284, 0, 0, 286, 287, 288, 285, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 2142, 304, 0, 305, 559, 560, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 561, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 562, 563, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 564, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	565, 566, 342, 343, 0, 344, 567, 0, 568, 345,
	0, 346, 347, 348, 349, 350, 569, 570, 571, 413,
	0, 351, 352, 0, 353, 354, 355, 356, 0, 0,
	0, 249, 357, 358, 360, 0, 0, 359, 572, 573,
	0, 574, 0, 361, 362, 0, 575, 0, 363, 364,
	365, 0, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 0, 373, 375, 374, 0, 376, 576, 0,
	377, 378, 0, 0, 379, 380, 381, 0, 0, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 396, 0, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 0,
	401, 0, 250, 0, 410, 411, 0, 577, 412, 578,
	414, 415, 0, 0, 416, 0, 0, 0, 418, 419,
	420, 0, 0, 421, 422, 579, 0, 423, 0, 580,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 0, 434, 435, 581, 582, 583, 436, 584, 437,
	438, 0, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 585, 448, 447, 449, 0, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 0, 460, 461, 462, 0, 463, 464, 465,
	466, 586, 467, 0, 468, 469, 475, 476, 470, 471,
	477, 478, 479, 480, 481, 0, 483, 484, 482, 485,
	486, 487, 0, 488, 472, 473, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 587, 0, 497, 0, 498,
	499, 500, 501, 474, 502, 507, 588, 503, 504, 505,
	506, 589, 0, 509, 510, 0, 508, 0, 511, 512,
	513, 514, 515, 516, 329, 517, 0, 518, 590, 591,
	592, 593, 0, 527, 0, 519, 520, 521, 594, 522,
	595, 0, 523, 524, 525, 526, 0, 528, 529, 0,
	0, 530, 531, 532, 534, 535, 533, 536, 0, 537,
	0, 0, 538, 539, 540, 596, 597, 598, 245, 542,
	541, 543, 599, 0, 0, 0, 0, 544, 545, 600,
	546, 547, 548, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 551, 0, 267, 552, 268, 553, 0,
	554, 269, 270, 271, 272, 273, 274, 0, 0, 0,
	275, 555, 556, 557, 0, 276, 277, 558, 0, 0,
	0, 278, 279, 280, 281, 282, 283, 284, 0, 0,
	286, 287, 288, 285, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 559, 560, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 561, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 562, 563, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 564, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 565, 566, 342, 343,
	0, 344, 567, 0, 568, 345, 0, 346, 347, 348,
	349, 350, 2077, 570, 571, 413, 0, 351, 352, 0,
	353, 354, 355, 356, 0, 0, 0, 249, 357, 358,
	360, 0, 0, 359, 572, 573, 0, 574, 0, 361,
	362, 0, 575, 0, 363, 364, 365, 0, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 0, 373,
	375, 374, 0, 376, 576, 0, 377, 378, 0, 0,
	379, 380, 381, 0, 0, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 0, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 0, 401, 0, 250, 0,
	410, 411, 0, 577, 412, 578, 414, 415, 0, 0,
	416, 0, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 579, 0, 423, 0, 580, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 0, 434, 435,
	581, 582, 583, 436, 584, 437, 438, 0, 439, 0,
	440, 441, 442, 443, 444, 445, 446, 585, 448, 447,
	449, 0, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 0, 460,
	461, 462, 0, 463, 464, 465, 466, 586, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 478, 479, 480,
	481, 0, 483, 484, 482, 485, 486, 487, 0, 488,
	472, 473, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 587, 0, 497, 0, 498, 499, 500, 501, 474,
	502, 507, 588, 503, 504, 505, 506, 589, 0, 509,
	510, 0, 508, 0, 511, 512, 513, 514, 515, 516,
	329, 517, 0, 518, 590, 591, 592, 593, 0, 527,
	0, 519, 520, 521, 594, 522, 595, 0, 523, 524,
	525, 526, 0, 528, 529, 0, 0, 530, 531, 532,
	534, 535, 533, 536, 0, 537, 0, 0, 538, 539,
	540, 596, 597, 598, 245, 542, 541, 543, 599, 0,
	0, 0, 0, 544, 545, 600, 546, 547, 548, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 551,
	0, 267, 552, 268, 553, 0, 554, 269, 270, 271,
	272, 273, 274, 0, 0, 0, 275, 555, 556, 557,
	0, 276, 277, 558, 0, 0, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 559,
	560, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 561, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 562, 563,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	564, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 565, 566, 342, 343, 0, 344, 567, 0,
	568, 345, 0, 346, 347, 348, 349, 350, 2071, 570,
	571, 413, 0, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 249, 357, 358, 360, 0, 0, 359,
	572, 573, 0, 574, 0, 361, 362, 0, 575, 0,
	363, 364, 365, 0, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	576, 0, 377, 378, 0, 0, 379, 380, 381, 0,
	0, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 0,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 0, 401, 0, 250, 0, 410, 411, 0, 577,
	412, 578, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 0, 423,
	0, 580, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 583, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 585, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 0, 463,
	464, 465, 466, 586, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 0, 483, 484,
	482, 485, 486, 487, 0, 488, 472, 473, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 587, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 588, 503,
	504, 505, 506, 589, 0, 509, 510, 0, 508, 0,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	590, 591, 592, 593, 0, 527, 0, 519, 520, 521,
	594, 522, 595, 0, 523, 524, 525, 526, 0, 528,
	529, 0, 0, 530, 531, 532, 534, 535, 533, 536,
	0, 537, 0, 0, 538, 539, 540, 596, 597, 598,
	245, 542, 541, 543, 599, 0, 0, 0, 0, 544,
	545, 600, 546, 547, 548, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 551, 0, 267, 552, 268,
	553, 0, 554, 269, 270, 271, 272, 273, 274, 0,
	0, 0, 275, 555, 556, 557, 0, 276, 277, 558,
	0, 0, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 559, 560, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 561, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 562, 563, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 564, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 565, 566,
	342, 343, 0, 344, 567, 0, 568, 345, 0, 346,
	347, 348, 349, 350, 2040, 570, 571, 413, 0, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 249,
	357, 358, 360, 0, 0, 359, 572, 573, 0, 574,
	0, 361, 362, 0, 575, 0, 363, 364, 365, 0,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 576, 0, 377, 378,
	0, 0, 379, 380, 381, 0, 0, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 0, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 0, 401, 0,
	250, 0, 410, 411, 0, 577, 412, 578, 414, 415,
	0, 0, 416, 0, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 579, 0, 423, 0, 580, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 583, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 585,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 0, 463, 464, 465, 466, 586,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 0, 483, 484, 482, 485, 486, 487,
	0, 488, 472, 473, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 587, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 588, 503, 504, 505, 506, 589,
	0, 509, 510, 0, 508, 0, 511, 512, 513, 514,
	515, 516, 329, 517, 0, 518, 590, 591, 592, 593,
	0, 527, 0, 519, 520, 521, 594, 522, 595, 0,
	523, 524, 525, 526, 0, 528, 529, 0, 0, 530,
	531, 532, 534, 535, 533, 536, 0, 537, 0, 0,
	538, 539, 540, 596, 597, 598, 0, 542, 541, 543,
	599, 790, 0, 245, 0, 544, 545, 600, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 551, 0,
	267, 552, 268, 553, 0, 554, 269, 270, 271, 272,
	273, 274, 0, 0, 0, 275, 555, 556, 557, 0,
	276, 277, 558, 0, 0, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 559, 560,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 561, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 562, 563, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 564,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 565, 566, 342, 343, 0, 344, 567, 0, 568,
	345, 0, 346, 347, 348, 349, 350, 569, 570, 571,
	413, 0, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 0, 357, 358, 360, 0, 0, 359, 572,
	573, 0, 574, 789, 361, 362, 0, 575, 0, 363,
	364, 365, 0, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 576,
	0, 377, 378, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 0, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	0, 401, 0, 0, 0, 410, 411, 0, 577, 412,
	578, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 0, 423, 0,
	580, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 583, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 585, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 0, 463, 464,
	465, 466, 586, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 0, 488, 472, 473, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 587, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 588, 503, 504,
	505, 506, 589, 0, 509, 510, 0, 508, 788, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 590,
	591, 592, 593, 0, 527, 0, 519, 520, 521, 594,
	522, 595, 0, 523, 524, 525, 526, 0, 528, 529,
	0, 0, 530, 531, 532, 534, 535, 533, 536, 0,
	537, 0, 0, 538, 539, 540, 596, 597, 598, 245,
	542, 541, 543, 599, 0, 0, 0, 0, 544, 545,
	600, 546, 547, 548, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 0,
	0, 275, 555, 556, 557, 0, 276, 277, 558, 0,
	0, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 0, 2741, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 565, 566, 342,
	343, 0, 344, 567, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 569, 570, 571, 413, 0, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 0, 357,
	358, 360, 0, 0, 359, 572, 573, 0, 574, 0,
	361, 362, 0, 575, 0, 363, 364, 365, 0, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 576, 0, 377, 378, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 0, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 0, 401, 0, 0,
	0, 410, 411, 0, 577, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 0, 423, 0, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 3749, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 0, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 0,
	488, 472, 473, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 0,
	509, 510, 0, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 594, 522, 595, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 0, 537, 0, 0, 538,
	539, 540, 596, 597, 598, 0, 542, 541, 543, 599,
	611, 0, 245, 0, 544, 545, 600, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 610, 257, 258, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 551, 0, 267,
	552, 268, 553, 0, 554, 269, 270, 271, 272, 273,
	274, 0, 0, 0, 275, 555, 556, 557, 0, 276,
	277, 558, 0, 0, 0, 278, 279, 280, 281, 282,
	283, 284, 0, 0, 286, 287, 288, 285, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 559, 560, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 561, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 562, 563, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 564, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	565, 566, 342, 343, 0, 344, 567, 0, 568, 345,
	0, 346, 347, 348, 349, 350, 569, 570, 571, 413,
	0, 351, 352, 0, 353, 354, 355, 356, 0, 0,
	0, 0, 357, 358, 360, 0, 0, 359, 572, 573,
	0, 574, 0, 361, 362, 0, 575, 0, 363, 364,
	365, 0, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 0, 373, 375, 374, 0, 376, 576, 0,
	377, 378, 0, 0, 379, 380, 381, 0, 0, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 396, 0, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 0,
	401, 0, 0, 0, 410, 411, 0, 577, 412, 578,
	414, 415, 0, 0, 416, 0, 0, 0, 418, 419,
	420, 0, 0, 421, 422, 579, 0, 423, 0, 580,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 0, 434, 435, 581, 582, 583, 436, 584, 609,
	438, 0, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 585, 448, 447, 449, 0, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 0, 460, 461, 462, 0, 463, 464, 465,
	466, 586, 467, 0, 468, 469, 475, 476, 470, 471,
	477, 478, 479, 480, 481, 0, 483, 484, 482, 485,
	486, 487, 0, 488, 472, 473, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 587, 0, 497, 0, 498,
	499, 500, 501, 474, 502, 507, 588, 503, 504, 505,
	506, 589, 0, 509, 510, 0, 508, 0, 511, 512,
	513, 514, 515, 516, 329, 517, 0, 518, 590, 591,
	592, 593, 0, 527, 0, 519, 520, 521, 594, 522,
	595, 0, 523, 524, 525, 526, 0, 528, 529, 0,
	0, 530, 531, 532, 534, 535, 533, 536, 0, 537,
	0, 0, 538, 539, 540, 596, 597, 598, 0, 542,
	541, 543, 599, 245, 2728, 0, 0, 544, 545, 600,
	546, 547, 548, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 551, 0,
	267, 552, 268, 553, 0, 554, 269, 270, 271, 272,
	273, 274, 0, 0, 0, 275, 555, 556, 557, 0,
	276, 277, 558, 0, 0, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 559, 560,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 561, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 562, 563, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 564,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 565, 566, 342, 343, 0, 344, 567, 0, 568,
	345, 0, 346, 347, 348, 349, 350, 569, 570, 571,
	413, 0, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 0, 357, 358, 360, 0, 0, 359, 572,
	573, 0, 574, 0, 361, 362, 0, 575, 0, 363,
	364, 365, 0, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 576,
	0, 377, 378, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 0, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	0, 401, 0, 0, 0, 410, 411, 0, 577, 412,
	578, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 0, 423, 0,
	580, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 583, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 585, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 0, 463, 464,
	465, 466, 586, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 0, 488, 472, 473, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 587, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 588, 503, 504,
	505, 506, 589, 0, 509, 510, 0, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 590,
	591, 592, 593, 0, 527, 0, 519, 520, 521, 594,
	522, 595, 0, 523, 524, 525, 526, 0, 528, 529,
	0, 0, 530, 531, 532, 534, 535, 533, 536, 0,
	537, 0, 0, 538, 539, 540, 596, 597, 598, 0,
	542, 541, 543, 599, 245, 3759, 0, 0, 544, 545,
	600, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 551,
	0, 267, 552, 268, 553, 0, 554, 269, 270, 271,
	272, 273, 274, 0, 0, 0, 275, 555, 556, 557,
	0, 276, 277, 558, 0, 0, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 559,
	560, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 561, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	564, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 565, 566, 342, 343, 0, 344, 567, 0,
	568, 345, 0, 346, 347, 348, 349, 350, 569, 570,
	571, 413, 0, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 0, 357, 358, 360, 0, 0, 359,
	572, 573, 0, 574, 0, 361, 362, 0, 575, 0,
	363, 364, 365, 0, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	576, 0, 377, 378, 0, 0, 379, 380, 381, 0,
	0, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 0,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 0, 401, 0, 0, 0, 410, 411, 0, 577,
	412, 578, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 0, 423,
	0, 580, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 583, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 585, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 0, 463,
	464, 465, 466, 586, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 0, 483, 484,
	482, 485, 486, 487, 0, 488, 472, 473, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 587, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 588, 503,
	504, 505, 506, 589, 0, 509, 510, 0, 508, 0,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	590, 591, 592, 593, 0, 527, 0, 519, 520, 521,
	594, 522, 595, 0, 523, 524, 525, 526, 0, 528,
	529, 0, 0, 530, 531, 532, 534, 535, 533, 536,
	0, 537, 0, 0, 538, 539, 540, 596, 597, 598,
	245, 542, 541, 543, 599, 0, 0, 0, 0, 544,
	545, 600, 546, 547, 548, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 551, 0, 267, 552, 268,
	553, 0, 554, 269, 270, 271, 272, 273, 274, 0,
	0, 0, 275, 555, 556, 557, 0, 276, 277, 558,
	0, 0, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 559, 560, 3465, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 561, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 564, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 565, 566,
	342, 343, 0, 344, 567, 0, 568, 345, 0, 346,
	347, 348, 349, 350, 569, 570, 571, 413, 0, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 0,
	357, 358, 360, 0, 0, 359, 572, 573, 0, 574,
	0, 361, 362, 0, 575, 0, 363, 364, 365, 0,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 576, 0, 377, 378,
	0, 0, 379, 380, 381, 0, 0, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 0, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 0, 401, 0,
	0, 0, 410, 411, 0, 577, 412, 578, 414, 415,
	0, 0, 416, 0, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 579, 0, 423, 0, 580, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 583, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 585,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 0, 463, 464, 465, 466, 586,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 0, 483, 484, 482, 485, 486, 487,
	0, 488, 472, 473, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 587, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 588, 503, 504, 505, 506, 589,
	0, 509, 510, 0, 508, 0, 511, 512, 513, 514,
	515, 516, 329, 517, 0, 518, 590, 591, 592, 593,
	0, 527, 0, 519, 520, 521, 594, 522, 595, 0,
	523, 524, 525, 526, 0, 528, 529, 0, 0, 530,
	531, 532, 534, 535, 533, 536, 0, 537, 0, 0,
	538, 539, 540, 596, 597, 598, 245, 542, 541, 543,
	599, 0, 0, 0, 0, 544, 545, 600, 546, 547,
	548, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 549, 0, 2452,
	0, 0, 259, 260, 262, 261, 263, 264, 265, 266,
	550, 551, 0, 267, 552, 268, 553, 0, 554, 269,
	270, 271, 272, 273, 274, 0, 0, 0, 275, 555,
	556, 557, 0, 276, 277, 558, 0, 0, 0, 278,
	279, 280, 281, 282, 283, 284, 0, 0, 286, 287,
	288, 285, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 559, 560, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 561,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	562, 563, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 564, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 565, 566, 342, 343, 0, 344,
	567, 0, 568, 345, 0, 346, 347, 348, 349, 350,
	569, 570, 571, 413, 0, 351, 352, 0, 353, 354,
	355, 356, 0, 0, 0, 0, 357, 358, 360, 0,
	0, 359, 572, 573, 0, 574, 0, 361, 362, 0,
	575, 0, 363, 364, 365, 0, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 0, 373, 375, 374,
	0, 376, 576, 0, 377, 378, 0, 0, 379, 380,
	381, 0, 0, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	396, 0, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 0, 401, 0, 0, 0, 410, 411,
	0, 577, 412, 578, 414, 415, 0, 0, 416, 0,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 579,
	0, 423, 0, 580, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 0, 434, 435, 581, 582,
	583, 436, 584, 437, 438, 0, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 585, 448, 447, 449, 0,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 0, 460, 461, 462,
	0, 463, 464, 465, 466, 586, 467, 0, 468, 469,
	475, 476, 470, 471, 477, 478, 479, 480, 481, 0,
	483, 484, 482, 485, 486, 487, 0, 488, 472, 473,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 587,
	0, 497, 0, 498, 499, 500, 501, 474, 502, 507,
	588, 503, 504, 505, 506, 589, 0, 509, 510, 0,
	508, 0, 511, 512, 513, 514, 515, 516, 329, 517,
	0, 518, 590, 591, 592, 593, 0, 527, 0, 519,
	520, 521, 594, 522, 595, 0, 523, 524, 525, 526,
	0, 528, 529, 0, 0, 530, 531, 532, 534, 535,
	533, 536, 0, 537, 0, 0, 538, 539, 540, 596,
	597, 598, 0, 542, 541, 543, 599, 245, 2728, 0,
	0, 544, 545, 600, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 0, 554,
	269, 270, 271, 272, 273, 274, 0, 0, 0, 275,
	555, 556, 557, 0, 276, 277, 558, 0, 0, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 559, 560, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 562, 563, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 565, 566, 342, 343, 0,
	344, 567, 0, 568, 345, 0, 346, 347, 348, 349,
	350, 569, 570, 571, 413, 0, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 0, 357, 358, 360,
	0, 0, 359, 572, 573, 0, 574, 0, 361, 362,
	0, 575, 0, 363, 364, 365, 0, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 576, 0, 377, 378, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 0, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 0, 401, 0, 0, 0, 410,
	411, 0, 577, 412, 578, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 2725, 0, 0, 421, 422,
	579, 0, 423, 0, 580, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 583, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 0, 463, 464, 465, 466, 586, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 0, 488, 472,
	473, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 589, 0, 509, 510,
	0, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 590, 591, 592, 593, 0, 527, 0,
	519, 520, 521, 594, 522, 595, 0, 523, 524, 525,
	526, 0, 528, 529, 0, 0, 530, 531, 532, 534,
	535, 533, 536, 0, 537, 0, 0, 538, 539, 540,
	596, 597, 598, 245, 542, 541, 543, 599, 0, 0,
	0, 0, 544, 545, 600, 546, 547, 548, 0, 0,
	251, 252, 253, 254, 255, 256, 2122, 257, 258, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 551, 0,
	267, 552, 268, 553, 0, 554, 269, 270, 271, 272,
	273, 274, 0, 0, 0, 275, 555, 556, 557, 0,
	276, 277, 558, 0, 0, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 559, 560,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 561, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 562, 563, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 564,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 565, 566, 342, 343, 0, 344, 567, 0, 568,
	345, 0, 346, 347, 348, 349, 350, 569, 570, 571,
	413, 0, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 0, 357, 358, 360, 0, 0, 359, 572,
	573, 0, 574, 0, 361, 362, 0, 575, 0, 363,
	364, 365, 0, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 576,
	0, 377, 378, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 0, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	0, 401, 0, 0, 0, 410, 411, 0, 577, 412,
	578, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 0, 423, 0,
	580, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 583, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 585, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 0, 463, 464,
	465, 466, 586, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 0, 488, 472, 473, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 587, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 588, 503, 504,
	505, 506, 589, 0, 509, 510, 0, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 590,
	591, 592, 593, 0, 527, 0, 519, 520, 521, 594,
	522, 595, 0, 523, 524, 525, 526, 0, 528, 529,
	0, 0, 530, 531, 532, 534, 535, 533, 536, 0,
	537, 0, 0, 538, 539, 540, 596, 597, 598, 0,
	542, 541, 543, 599, 2110, 0, 245, 0, 544, 545,
	600, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 0, 259, 260, 262, 261, 263, 264, 265, 266,
	550, 551, 0, 267, 552, 268, 553, 0, 554, 269,
	270, 271, 272, 273, 274, 0, 0, 0, 275, 555,
	556, 557, 0, 276, 277, 558, 0, 0, 0, 278,
	279, 280, 281, 282, 283, 284, 0, 0, 286, 287,
	288, 285, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 559, 560, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 561,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	562, 563, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 564, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 565, 566, 342, 343, 0, 344,
	567, 0, 568, 345, 0, 346, 347, 348, 349, 350,
	569, 570, 571, 413, 0, 351, 352, 0, 353, 354,
	355, 356, 0, 0, 0, 0, 357, 358, 360, 0,
	0, 359, 572, 573, 0, 574, 0, 361, 362, 0,
	575, 0, 363, 364, 365, 0, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 0, 373, 375, 374,
	0, 376, 576, 0, 377, 378, 0, 0, 379, 380,
	381, 0, 0, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	396, 0, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 0, 401, 0, 0, 0, 410, 411,
	0, 577, 412, 578, 414, 415, 0, 0, 416, 0,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 579,
	0, 423, 0, 580, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 0, 434, 435, 581, 582,
	583, 436, 584, 437, 438, 0, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 585, 448, 447, 449, 0,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 0, 460, 461, 462,
	0, 463, 464, 465, 466, 586, 467, 0, 468, 469,
	475, 476, 470, 471, 477, 478, 479, 480, 481, 0,
	483, 484, 482, 485, 486, 487, 0, 488, 472, 473,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 587,
	0, 497, 0, 498, 499, 500, 501, 474, 502, 507,
	588, 503, 504, 505, 506, 589, 0, 509, 510, 0,
	508, 0, 511, 512, 513, 514, 515, 516, 329, 517,
	0, 518, 590, 591, 592, 593, 0, 527, 0, 519,
	520, 521, 594, 522, 595, 0, 523, 524, 525, 526,
	0, 528, 529, 0, 0, 530, 531, 532, 534, 535,
	533, 536, 0, 537, 0, 0, 538, 539, 540, 596,
	597, 598, 0, 542, 541, 543, 599, 654, 0, 245,
	0, 544, 545, 600, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 259, 260, 1164, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 0,
	0, 275, 555, 556, 1162, 0, 276, 277, 558, 0,
	0, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 565, 566, 342,
	343, 0, 344, 567, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 569, 570, 571, 413, 0, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 0, 357,
	358, 360, 0, 0, 359, 572, 573, 0, 574, 0,
	361, 362, 0, 575, 0, 363, 364, 365, 0, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 576, 0, 377, 378, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 655, 0, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 0, 401, 0, 0,
	0, 410, 411, 0, 577, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 0, 423, 0, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 0, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 651, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 1165, 487, 0,
	488, 472, 473, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 0,
	509, 510, 0, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 650, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 594, 522, 595, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 0, 537, 0, 0, 538,
	539, 540, 596, 597, 598, 0, 542, 541, 543, 599,
	654, 0, 245, 0, 544, 545, 600, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 551, 0, 267,
	552, 268, 553, 0, 554, 269, 270, 271, 272, 273,
	274, 0, 0, 0, 275, 555, 556, 557, 0, 276,
	644, 558, 0, 0, 0, 278, 279, 280, 281, 282,
	283, 284, 0, 0, 286, 287, 288, 285, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 559, 560, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 561, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 562, 563, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 564, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	565, 566, 342, 343, 0, 344, 567, 0, 568, 345,
	0, 346, 347, 348, 349, 350, 569, 570, 571, 413,
	0, 351, 352, 0, 353, 354, 355, 356, 0, 0,
	0, 0, 357, 358, 360, 0, 0, 359, 572, 573,
	0, 574, 0, 361, 362, 0, 575, 0, 363, 364,
	365, 0, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 0, 373, 375, 374, 0, 376, 576, 0,
	377, 378, 0, 0, 379, 380, 381, 0, 0, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 655, 0, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 0,
	401, 0, 0, 0, 410, 411, 0, 577, 412, 578,
	414, 415, 0, 0, 416, 0, 0, 0, 418, 419,
	420, 0, 0, 421, 422, 579, 0, 423, 0, 580,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 0, 434, 435, 581, 582, 583, 436, 584, 437,
	438, 0, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 585, 448, 447, 449, 0, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 0, 460, 461, 462, 0, 463, 464, 465,
	466, 586, 467, 0, 468, 469, 475, 476, 470, 471,
	651, 478, 479, 480, 481, 0, 483, 484, 482, 485,
	1476, 487, 0, 488, 472, 473, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 587, 0, 497, 0, 498,
	499, 500, 501, 474, 502, 507, 588, 503, 504, 505,
	506, 589, 0, 509, 510, 0, 508, 0, 511, 512,
	513, 514, 515, 516, 329, 517, 0, 518, 650, 591,
	592, 593, 0, 527, 0, 519, 520, 521, 594, 522,
	595, 0, 523, 524, 525, 526, 0, 528, 529, 0,
	0, 530, 531, 532, 534, 535, 533, 536, 0, 537,
	0, 0, 538, 539, 540, 596, 597, 598, 0, 542,
	541, 543, 599, 1457, 0, 245, 0, 544, 545, 600,
	546, 547, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 259, 260, 262, 261, 263, 264, 265, 266, 550,
	551, 0, 267, 552, 268, 553, 0, 554, 269, 270,
	271, 272, 273, 274, 0, 0, 0, 275, 555, 556,
	557, 0, 276, 277, 558, 0, 0, 0, 278, 279,
	280, 281, 282, 283, 284, 0, 0, 286, 287, 288,
	285, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	559, 560, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 561, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 562,
	563, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 564, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 565, 566, 342, 343, 0, 344, 567,
	0, 568, 345, 0, 346, 347, 348, 349, 350, 1456,
	570, 571, 413, 0, 351, 352, 0, 353, 354, 355,
	356, 0, 0, 0, 0, 357, 358, 360, 0, 0,
	359, 572, 573, 0, 574, 0, 361, 362, 0, 575,
	0, 363, 364, 365, 0, 366, 0, 0, 0, 367,
	368, 369, 370, 371, 372, 0, 373, 375, 374, 0,
	376, 576, 0, 377, 378, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 385, 0, 386, 387, 389,
	391, 388, 390, 395, 392, 393, 394, 397, 0, 396,
	0, 398, 399, 400, 405, 407, 408, 403, 404, 406,
	409, 402, 0, 401, 0, 0, 0, 410, 411, 0,
	577, 412, 578, 414, 415, 0, 0, 416, 0, 0,
	0, 418, 419, 420, 0, 0, 421, 422, 579, 0,
	423, 0, 580, 424, 425, 417, 426, 427, 428, 429,
	430, 431, 432, 433, 0, 434, 435, 581, 582, 583,
	436, 584, 437, 438, 0, 439, 0, 440, 441, 442,
	443, 444, 445, 446, 585, 448, 447, 449, 0, 450,
	0, 0, 0, 0, 0, 451, 0, 453, 454, 455,
	452, 456, 457, 458, 459, 0, 460, 461, 462, 0,
	463, 464, 465, 466, 586, 467, 0, 468, 469, 475,
	476, 470, 471, 477, 478, 479, 480, 481, 0, 483,
	484, 482, 485, 486, 487, 0, 488, 472, 473, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 587, 0,
	497, 0, 498, 499, 500, 501, 474, 502, 507, 588,
	503, 504, 505, 506, 589, 0, 509, 510, 0, 508,
	0, 511, 512, 513, 514, 515, 516, 329, 517, 0,
	518, 590, 591, 592, 593, 0, 527, 0, 519, 520,
	521, 594, 522, 595, 0, 523, 524, 525, 526, 0,
	528, 529, 0, 0, 530, 531, 532, 534, 535, 533,
	536, 0, 537, 0, 0, 538, 539, 540, 596, 597,
	598, 0, 542, 541, 543, 599, 1450, 0, 245, 0,
	544, 545, 600, 546, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 551, 0, 267, 552, 268, 553, 0,
	554, 269, 270, 271, 272, 273, 274, 0, 0, 0,
	275, 555, 556, 557, 0, 276, 277, 558, 0, 0,
	0, 278, 279, 280, 281, 282, 283, 284, 0, 0,
	286, 287, 288, 285, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 559, 560, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 561, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 564, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 565, 566, 342, 343,
	0, 344, 567, 0, 568, 345, 0, 346, 347, 348,
	349, 350, 1449, 570, 571, 413, 0, 351, 352, 0,
	353, 354, 355, 356, 0, 0, 0, 0, 357, 358,
	360, 0, 0, 359, 572, 573, 0, 574, 0, 361,
	362, 0, 575, 0, 363, 364, 365, 0, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 0, 373,
	375, 374, 0, 376, 576, 0, 377, 378, 0, 0,
	379, 380, 381, 0, 0, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 0, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 0, 401, 0, 0, 0,
	410, 411, 0, 577, 412, 578, 414, 415, 0, 0,
	416, 0, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 579, 0, 423, 0, 580, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 0, 434, 435,
	581, 582, 583, 436, 584, 437, 438, 0, 439, 0,
	440, 441, 442, 443, 444, 445, 446, 585, 448, 447,
	449, 0, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 0, 460,
	461, 462, 0, 463, 464, 465, 466, 586, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 478, 479, 480,
	481, 0, 483, 484, 482, 485, 486, 487, 0, 488,
	472, 473, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 587, 0, 497, 0, 498, 499, 500, 501, 474,
	502, 507, 588, 503, 504, 505, 506, 589, 0, 509,
	510, 0, 508, 0, 511, 512, 513, 514, 515, 516,
	329, 517, 0, 518, 590, 591, 592, 593, 0, 527,
	0, 519, 520, 521, 594, 522, 595, 0, 523, 524,
	525, 526, 0, 528, 529, 0, 0, 530, 531, 532,
	534, 535, 533, 536, 0, 537, 0, 0, 538, 539,
	540, 596, 597, 598, 0, 542, 541, 543, 599, 1399,
	0, 245, 0, 544, 545, 600, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 0, 554, 269, 270, 271, 272, 273, 274,
	0, 0, 0, 275, 555, 556, 557, 0, 276, 277,
	558, 0, 0, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 559, 560, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 562, 563, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 565,
	566, 342, 343, 0, 344, 567, 0, 568, 345, 0,
	346, 347, 348, 349, 350, 1398, 570, 571, 413, 0,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	0, 357, 358, 360, 0, 0, 359, 572, 573, 0,
	574, 0, 361, 362, 0, 575, 0, 363, 364, 365,
	0, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 576, 0, 377,
	378, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 0, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 0, 401,
	0, 0, 0, 410, 411, 0, 577, 412, 578, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 0, 423, 0, 580, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 583, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 0, 463, 464, 465, 466,
	586, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 0, 488, 472, 473, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	589, 0, 509, 510, 0, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 590, 591, 592,
	593, 0, 527, 0, 519, 520, 521, 594, 522, 595,
	0, 523, 524, 525, 526, 0, 528, 529, 0, 0,
	530, 531, 532, 534, 535, 533, 536, 0, 537, 0,
	0, 538, 539, 540, 596, 597, 598, 0, 542, 541,
	543, 599, 1384, 0, 245, 0, 544, 545, 600, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 551,
	0, 267, 552, 268, 553, 0, 554, 269, 270, 271,
	272, 273, 274, 0, 0, 0, 275, 555, 556, 557,
	0, 276, 277, 558, 0, 0, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 559,
	560, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 561, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	564, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 565, 566, 342, 343, 0, 344, 567, 0,
	568, 345, 0, 346, 347, 348, 349, 350, 1383, 570,
	571, 413, 0, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 0, 357, 358, 360, 0, 0, 359,
	572, 573, 0, 574, 0, 361, 362, 0, 575, 0,
	363, 364, 365, 0, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	576, 0, 377, 378, 0, 0, 379, 380, 381, 0,
	0, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 0,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 0, 401, 0, 0, 0, 410, 411, 0, 577,
	412, 578, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 0, 423,
	0, 580, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 583, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 585, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 0, 463,
	464, 465, 466, 586, 467, 0, 468, 469, 475, 476,
	470, 471, 477, 478, 479, 480, 481, 0, 483, 484,
	482, 485, 486, 487, 0, 488, 472, 473, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 587, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 588, 503,
	504, 505, 506, 589, 0, 509, 510, 0, 508, 0,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	590, 591, 592, 593, 0, 527, 0, 519, 520, 521,
	594, 522, 595, 0, 523, 524, 525, 526, 0, 528,
	529, 0, 0, 530, 531, 532, 534, 535, 533, 536,
	0, 537, 0, 0, 538, 539, 540, 596, 597, 598,
	0, 542, 541, 543, 599, 1379, 0, 245, 0, 544,
	545, 600, 546, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 0, 554,
	269, 270, 271, 272, 273, 274, 0, 0, 0, 275,
	555, 556, 557, 0, 276, 277, 558, 0, 0, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 559, 560, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 562, 563, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 565, 566, 342, 343, 0,
	344, 567, 0, 568, 345, 0, 346, 347, 348, 349,
	350, 569, 570, 571, 413, 0, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 0, 357, 358, 360,
	0, 0, 359, 572, 573, 0, 574, 0, 361, 362,
	0, 575, 0, 363, 364, 365, 0, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 576, 0, 377, 378, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 0, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 0, 401, 0, 0, 0, 410,
	411, 0, 577, 412, 578, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 0, 423, 0, 580, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 583, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 0, 463, 464, 465, 466, 586, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 0, 488, 472,
	473, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 589, 0, 509, 510,
	0, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 590, 591, 592, 593, 0, 527, 0,
	519, 520, 521, 594, 522, 595, 0, 523, 524, 525,
	526, 0, 528, 529, 0, 0, 530, 531, 532, 534,
	535, 533, 536, 0, 537, 0, 0, 538, 539, 540,
	596, 597, 598, 0, 542, 541, 543, 599, 1311, 0,
	245, 0, 544, 545, 600, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 551, 0, 267, 552, 268,
	553, 0, 554, 269, 270, 271, 272, 273, 274, 0,
	0, 0, 275, 555, 556, 557, 0, 276, 277, 558,
	0, 0, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 559, 560, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 561, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 564, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 565, 566,
	342, 343, 0, 344, 567, 0, 568, 345, 0, 346,
	347, 348, 349, 350, 569, 570, 571, 413, 0, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 0,
	357, 358, 360, 0, 0, 359, 572, 573, 0, 574,
	0, 361, 362, 0, 575, 0, 363, 364, 365, 0,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 576, 0, 377, 378,
	0, 0, 379, 380, 381, 0, 0, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 0, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 0, 401, 0,
	0, 0, 410, 411, 0, 577, 412, 578, 414, 415,
	0, 0, 416, 0, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 579, 0, 423, 0, 580, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 583, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 585,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 0, 463, 464, 465, 466, 586,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 0, 483, 484, 482, 485, 486, 487,
	0, 488, 472, 473, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 587, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 588, 503, 504, 505, 506, 589,
	0, 509, 510, 0, 508, 0, 511, 512, 513, 514,
	515, 516, 329, 517, 0, 518, 590, 591, 592, 593,
	0, 527, 0, 519, 520, 521, 594, 522, 595, 0,
	523, 524, 525, 526, 0, 528, 529, 0, 0, 530,
	531, 532, 534, 535, 533, 536, 0, 537, 0, 0,
	538, 539, 540, 596, 597, 598, 0, 542, 541, 543,
	599, 1295, 0, 245, 0, 544, 545, 600, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 551, 0,
	267, 552, 268, 553, 0, 554, 269, 270, 271, 272,
	273, 274, 0, 0, 0, 275, 555, 556, 557, 0,
	276, 277, 558, 0, 0, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 559, 560,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 561, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 562, 563, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 564,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 565, 566, 342, 343, 0, 344, 567, 0, 568,
	345, 0, 346, 347, 348, 349, 350, 569, 570, 571,
	413, 0, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 0, 357, 358, 360, 0, 0, 359, 572,
	573, 0, 574, 0, 361, 362, 0, 575, 0, 363,
	364, 365, 0, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 576,
	0, 377, 378, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 0, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	0, 401, 0, 0, 0, 410, 411, 0, 577, 412,
	578, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 0, 423, 0,
	580, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 583, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 585, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 0, 463, 464,
	465, 466, 586, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 0, 488, 472, 473, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 587, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 588, 503, 504,
	505, 506, 589, 0, 509, 510, 0, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 590,
	591, 592, 593, 0, 527, 0, 519, 520, 521, 594,
	522, 595, 0, 523, 524, 525, 526, 0, 528, 529,
	0, 0, 530, 531, 532, 534, 535, 533, 536, 0,
	537, 0, 0, 538, 539, 540, 596, 597, 598, 0,
	542, 541, 543, 599, 654, 0, 245, 0, 544, 545,
	600, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 0, 259, 260, 1164, 261, 263, 264, 265, 266,
	550, 551, 0, 267, 552, 268, 553, 0, 554, 269,
	270, 271, 272, 273, 274, 0, 0, 0, 275, 555,
	556, 1162, 0, 276, 277, 558, 0, 0, 0, 278,
	279, 280, 281, 282, 283, 284, 0, 0, 286, 287,
	288, 285, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 559, 560, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 561,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	562, 563, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 564, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 565, 566, 342, 343, 0, 344,
	567, 0, 568, 345, 0, 346, 347, 348, 349, 350,
	569, 570, 571, 413, 0, 351, 352, 0, 353, 354,
	355, 356, 0, 0, 0, 0, 357, 358, 360, 0,
	0, 359, 572, 573, 0, 574, 0, 361, 362, 0,
	575, 0, 363, 364, 365, 0, 366, 0, 0, 0,
	367, 368, 369, 370, 371, 372, 0, 373, 375, 374,
	0, 376, 576, 0, 377, 378, 0, 0, 379, 380,
	381, 0, 0, 382, 383, 384, 385, 0, 386, 387,
	389, 391, 388, 390, 395, 392, 393, 394, 397, 0,
	655, 0, 398, 399, 400, 405, 407, 408, 403, 404,
	406, 409, 402, 0, 401, 0, 0, 0, 410, 411,
	0, 577, 412, 578, 414, 415, 0, 0, 416, 0,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 579,
	0, 423, 0, 580, 424, 425, 417, 426, 427, 428,
	429, 430, 431, 432, 433, 0, 434, 435, 581, 582,
	583, 436, 584, 437, 438, 0, 439, 0, 440, 441,
	442, 443, 444, 445, 446, 585, 448, 447, 449, 0,
	450, 0, 0, 0, 0, 0, 451, 0, 453, 454,
	455, 452, 456, 457, 458, 459, 0, 460, 461, 462,
	0, 463, 464, 465, 466, 586, 467, 0, 468, 469,
	475, 476, 470, 471, 651, 478, 479, 480, 481, 0,
	483, 484, 482, 485, 1165, 487, 0, 488, 472, 473,
	489, 490, 0, 491, 492, 493, 494, 495, 496, 587,
	0, 497, 0, 498, 499, 500, 501, 474, 502, 507,
	588, 503, 504, 505, 506, 589, 0, 509, 510, 0,
	508, 0, 511, 512, 513, 514, 515, 516, 329, 517,
	0, 518, 650, 591, 592, 593, 0, 527, 0, 519,
	1163, 521, 594, 522, 595, 0, 523, 524, 525, 526,
	0, 528, 529, 0, 0, 530, 531, 532, 534, 535,
	533, 536, 0, 537, 0, 0, 538, 539, 540, 596,
	597, 598, 245, 542, 541, 543, 599, 0, 0, 0,
	0, 544, 545, 600, 546, 547, 548, 0, 0, 251,
	252, 253, 254, 255, 256, 1145, 257, 258, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 259, 260,
	262, 261, 263, 264, 265, 266, 550, 551, 0, 267,
	552, 268, 553, 0, 554, 269, 270, 271, 272, 273,
	274, 0, 0, 0, 275, 555, 556, 557, 0, 276,
	277, 558, 0, 0, 0, 278, 279, 280, 281, 282,
	283, 284, 0, 0, 286, 287, 288, 285, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 559, 560, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 561, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 562, 563, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 564, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	565, 566, 342, 343, 0, 344, 567, 0, 568, 345,
	0, 346, 347, 348, 349, 350, 569, 570, 571, 413,
	0, 351, 352, 0, 353, 354, 355, 356, 0, 0,
	0, 0, 357, 358, 360, 0, 0, 359, 572, 573,
	0, 574, 0, 361, 362, 0, 575, 0, 363, 364,
	365, 0, 366, 0, 0, 0, 367, 368, 369, 370,
	371, 372, 0, 373, 375, 374, 0, 376, 576, 0,
	377, 378, 0, 0, 379, 380, 381, 0, 0, 382,
	383, 384, 385, 0, 386, 387, 389, 391, 388, 390,
	395, 392, 393, 394, 397, 0, 396, 0, 398, 399,
	400, 405, 407, 408, 403, 404, 406, 409, 402, 0,
	401, 0, 0, 0, 410, 411, 0, 577, 412, 578,
	414, 415, 0, 0, 416, 0, 0, 0, 418, 419,
	420, 0, 0, 421, 422, 579, 0, 423, 0, 580,
	424, 425, 417, 426, 427, 428, 429, 430, 431, 432,
	433, 0, 434, 435, 581, 582, 583, 436, 584, 437,
	438, 0, 439, 0, 440, 441, 442, 443, 444, 445,
	446, 585, 448, 447, 449, 0, 450, 0, 0, 0,
	0, 0, 451, 0, 453, 454, 455, 452, 456, 457,
	458, 459, 0, 460, 461, 462, 0, 463, 464, 465,
	466, 586, 467, 0, 468, 469, 475, 476, 470, 471,
	477, 478, 479, 480, 481, 0, 483, 484, 482, 485,
	486, 487, 0, 488, 472, 473, 489, 490, 0, 491,
	492, 493, 494, 495, 496, 587, 0, 497, 0, 498,
	499, 500, 501, 474, 502, 507, 588, 503, 504, 505,
	506, 589, 0, 509, 510, 0, 508, 0, 511, 512,
	513, 514, 515, 516, 329, 517, 0, 518, 590, 591,
	592, 593, 0, 527, 0, 519, 520, 521, 594, 522,
	595, 0, 523, 524, 525, 526, 0, 528, 529, 0,
	0, 530, 531, 532, 534, 535, 533, 536, 0, 537,
	0, 0, 538, 539, 540, 596, 597, 598, 245, 542,
	541, 543, 599, 0, 0, 0, 0, 544, 545, 600,
	546, 547, 548, 0, 0, 251, 252, 253, 254, 255,
	256, 660, 257, 258, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 259, 260, 262, 261, 263, 264,
	265, 266, 550, 551, 0, 267, 552, 268, 553, 0,
	554, 269, 270, 271, 272, 273, 274, 0, 0, 0,
	275, 555, 556, 557, 0, 276, 277, 558, 0, 0,
	0, 278, 279, 280, 281, 282, 283, 284, 0, 0,
	286, 287, 288, 285, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 559, 560, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 561, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 564, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 565, 566, 342, 343,
	0, 344, 567, 0, 568, 345, 0, 346, 347, 348,
	349, 350, 569, 570, 571, 413, 0, 351, 352, 0,
	353, 354, 355, 356, 0, 0, 0, 0, 357, 358,
	360, 0, 0, 359, 572, 573, 0, 574, 0, 361,
	362, 0, 575, 0, 363, 364, 365, 0, 366, 0,
	0, 0, 367, 368, 369, 370, 371, 372, 0, 373,
	375, 374, 0, 376, 576, 0, 377, 378, 0, 0,
	379, 380, 381, 0, 0, 382, 383, 384, 385, 0,
	386, 387, 389, 391, 388, 390, 395, 392, 393, 394,
	397, 0, 396, 0, 398, 399, 400, 405, 407, 408,
	403, 404, 406, 409, 402, 0, 401, 0, 0, 0,
	410, 411, 0, 577, 412, 578, 414, 415, 0, 0,
	416, 0, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 579, 0, 423, 0, 580, 424, 425, 417, 426,
	427, 428, 429, 430, 431, 432, 433, 0, 434, 435,
	581, 582, 583, 436, 584, 437, 438, 0, 439, 0,
	440, 441, 442, 443, 444, 445, 446, 585, 448, 447,
	449, 0, 450, 0, 0, 0, 0, 0, 451, 0,
	453, 454, 455, 452, 456, 457, 458, 459, 0, 460,
	461, 462, 0, 463, 464, 465, 466, 586, 467, 0,
	468, 469, 475, 476, 470, 471, 477, 478, 479, 480,
	481, 0, 483, 484, 482, 485, 486, 487, 0, 488,
	472, 473, 489, 490, 0, 491, 492, 493, 494, 495,
	496, 587, 0, 497, 0, 498, 499, 500, 501, 474,
	502, 507, 588, 503, 504, 505, 506, 589, 0, 509,
	510, 0, 508, 0, 511, 512, 513, 514, 515, 516,
	329, 517, 0, 518, 590, 591, 592, 593, 0, 527,
	0, 519, 520, 521, 594, 522, 595, 0, 523, 524,
	525, 526, 0, 528, 529, 0, 0, 530, 531, 532,
	534, 535, 533, 536, 0, 537, 0, 0, 538, 539,
	540, 596, 597, 598, 0, 542, 541, 543, 599, 654,
	0, 245, 0, 544, 545, 600, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 0, 554, 269, 270, 271, 272, 273, 274,
	0, 0, 0, 275, 555, 556, 557, 0, 276, 644,
	558, 0, 0, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 642, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 559, 560, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 562, 563, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 565,
	566, 342, 343, 0, 344, 567, 0, 568, 345, 0,
	346, 347, 348, 349, 350, 569, 570, 571, 413, 0,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	0, 357, 358, 360, 0, 0, 359, 572, 573, 0,
	574, 0, 361, 362, 0, 575, 0, 363, 364, 365,
	0, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 576, 0, 377,
	378, 0, 0, 379, 380, 643, 0, 0, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 655, 0, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 0, 401,
	0, 0, 0, 410, 411, 0, 577, 412, 578, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 0, 423, 0, 580, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 583, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 0, 463, 464, 465, 466,
	645, 467, 0, 468, 469, 475, 476, 470, 471, 651,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 646,
	487, 0, 488, 472, 473, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	589, 0, 509, 510, 0, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 650, 591, 592,
	593, 0, 527, 0, 519, 648, 521, 594, 522, 595,
	0, 523, 524, 525, 526, 0, 528, 529, 0, 0,
	530, 531, 532, 534, 535, 533, 536, 0, 537, 0,
	0, 538, 539, 540, 596, 597, 598, 0, 542, 541,
	543, 599, 636, 0, 245, 0, 544, 545, 600, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 0,
	259, 260, 262, 261, 263, 264, 265, 266, 550, 551,
	0, 267, 552, 268, 553, 0, 554, 269, 270, 271,
	272, 273, 274, 0, 0, 0, 275, 555, 556, 557,
	0, 276, 277, 558, 0, 0, 0, 278, 279, 280,
	281, 282, 283, 284, 0, 0, 286, 287, 288, 285,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 559,
	560, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 561, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	564, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 565, 566, 342, 343, 0, 344, 567, 0,
	568, 345, 0, 346, 347, 348, 349, 350, 569, 570,
	571, 413, 0, 351, 352, 0, 353, 354, 355, 356,
	0, 0, 0, 0, 357, 358, 360, 0, 0, 359,
	572, 573, 0, 574, 0, 361, 362, 0, 575, 0,
	363, 364, 365, 0, 366, 0, 0, 0, 367, 368,
	369, 370, 371, 372, 0, 373, 375, 374, 0, 376,
	576, 0, 377, 378, 0, 0, 379, 380, 381, 0,
	0, 382, 383, 384, 385, 0, 386, 387, 389, 391,
	388, 390, 395, 392, 393, 394, 397, 0, 396, 0,
	398, 399, 400, 405, 407, 408, 403, 404, 406, 409,
	402, 0, 401, 0, 0, 0, 410, 411, 0, 577,
	412, 578, 414, 415, 0, 0, 416, 0, 0, 0,
	418, 419, 420, 0, 0, 421, 422, 579, 0, 423,
	0, 580, 424, 425, 417, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 434, 435, 581, 582, 583, 436,
	584, 437, 438, 0, 439, 0, 440, 441, 442, 443,
	444, 445, 446, 585, 448, 447, 449, 0, 450, 0,
	0, 0, 0, 0, 451, 0, 453, 454, 455, 452,
	456, 457, 458, 459, 0, 460, 461, 462, 0, 463,
	464, 465, 466, 586, 467, 0, 468, 469, 637, 476,
	470, 471, 477, 478, 479, 480, 481, 0, 483, 484,
	482, 485, 486, 487, 0, 488, 472, 473, 489, 490,
	0, 491, 492, 493, 494, 495, 496, 587, 0, 497,
	0, 498, 499, 500, 501, 474, 502, 507, 588, 503,
	504, 505, 506, 589, 0, 509, 510, 0, 508, 0,
	511, 512, 513, 514, 515, 516, 329, 517, 0, 518,
	590, 591, 592, 593, 0, 527, 0, 519, 520, 521,
	594, 522, 595, 0, 523, 524, 525, 526, 0, 528,
	529, 0, 0, 530, 531, 532, 534, 535, 533, 536,
	0, 537, 0, 0, 538, 539, 540, 596, 597, 598,
	0, 542, 541, 543, 599, 634, 0, 245, 0, 544,
	545, 600, 546, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 0, 554,
	269, 270, 271, 272, 273, 274, 0, 0, 0, 275,
	555, 556, 557, 0, 276, 277, 558, 0, 0, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 559, 560, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 562, 563, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 565, 566, 342, 343, 0,
	344, 567, 0, 568, 345, 0, 346, 347, 348, 349,
	350, 569, 570, 571, 413, 0, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 0, 357, 358, 360,
	0, 0, 359, 572, 573, 0, 574, 0, 361, 362,
	0, 575, 0, 363, 364, 365, 0, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 576, 0, 377, 378, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 0, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 0, 401, 0, 0, 0, 410,
	411, 0, 577, 412, 578, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 0, 423, 0, 580, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 583, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 0, 463, 464, 465, 466, 586, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 0, 488, 472,
	473, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 589, 0, 509, 510,
	0, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 590, 591, 592, 593, 0, 527, 0,
	519, 520, 521, 594, 522, 595, 0, 523, 524, 525,
	526, 0, 528, 529, 0, 0, 530, 531, 532, 534,
	535, 533, 536, 0, 537, 0, 0, 538, 539, 540,
	596, 597, 598, 0, 542, 541, 543, 599, 628, 0,
	245, 0, 544, 545, 600, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 259, 260, 262, 261,
	263, 264, 265, 266, 550, 551, 0, 267, 552, 268,
	553, 0, 554, 269, 270, 271, 272, 273, 274, 0,
	0, 0, 275, 555, 556, 557, 0, 276, 277, 558,
	0, 0, 0, 278, 279, 280, 281, 282, 283, 284,
	0, 0, 286, 287, 288, 285, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 559, 560, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 561, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 564, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 565, 566,
	342, 343, 0, 344, 567, 0, 568, 345, 0, 346,
	347, 348, 349, 350, 569, 570, 571, 413, 0, 351,
	352, 0, 353, 354, 355, 356, 0, 0, 0, 0,
	357, 358, 360, 0, 0, 359, 572, 573, 0, 574,
	0, 361, 362, 0, 575, 0, 363, 364, 365, 0,
	366, 0, 0, 0, 367, 368, 369, 370, 371, 372,
	0, 373, 375, 374, 0, 376, 576, 0, 377, 378,
	0, 0, 379, 380, 381, 0, 0, 382, 383, 384,
	385, 0, 386, 387, 389, 391, 388, 390, 395, 392,
	393, 394, 397, 0, 396, 0, 398, 399, 400, 405,
	407, 408, 403, 404, 406, 409, 402, 0, 401, 0,
	0, 0, 410, 411, 0, 577, 412, 578, 414, 415,
	0, 0, 416, 0, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 579, 0, 423, 0, 580, 424, 425,
	417, 426, 427, 428, 429, 430, 431, 432, 433, 0,
	434, 435, 581, 582, 583, 436, 584, 437, 438, 0,
	439, 0, 440, 441, 442, 443, 444, 445, 446, 585,
	448, 447, 449, 0, 450, 0, 0, 0, 0, 0,
	451, 0, 453, 454, 455, 452, 456, 457, 458, 459,
	0, 460, 461, 462, 0, 463, 464, 465, 466, 586,
	467, 0, 468, 469, 475, 476, 470, 471, 477, 478,
	479, 480, 481, 0, 483, 484, 482, 485, 486, 487,
	0, 488, 472, 473, 489, 490, 0, 491, 492, 493,
	494, 495, 496, 587, 0, 497, 0, 498, 499, 500,
	501, 474, 502, 507, 588, 503, 504, 505, 506, 589,
	0, 509, 510, 0, 508, 0, 511, 512, 513, 514,
	515, 516, 329, 517, 0, 518, 590, 591, 592, 593,
	0, 527, 0, 519, 520, 521, 594, 522, 595, 0,
	523, 524, 525, 526, 0, 528, 529, 0, 0, 530,
	531, 532, 534, 535, 533, 536, 0, 537, 0, 0,
	538, 539, 540, 596, 597, 598, 0, 542, 541, 543,
	599, 606, 0, 245, 0, 544, 545, 600, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 551, 0,
	267, 552, 268, 553, 0, 554, 269, 270, 271, 272,
	273, 274, 0, 0, 0, 275, 555, 556, 557, 0,
	276, 277, 558, 0, 0, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 559, 560,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 561, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 562, 563, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 564,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 565, 566, 342, 343, 0, 344, 567, 0, 568,
	345, 0, 346, 347, 348, 349, 350, 569, 570, 571,
	413, 0, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 0, 357, 358, 360, 0, 0, 359, 572,
	573, 0, 574, 0, 361, 362, 0, 575, 0, 363,
	364, 365, 0, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 576,
	0, 377, 378, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 0, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	0, 401, 0, 0, 0, 410, 411, 0, 577, 412,
	578, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 0, 423, 0,
	580, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 583, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 585, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 0, 463, 464,
	465, 466, 586, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 0, 488, 472, 473, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 587, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 588, 503, 504,
	505, 506, 589, 0, 509, 510, 0, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 590,
	591, 592, 593, 0, 527, 0, 519, 520, 521, 594,
	522, 595, 0, 523, 524, 525, 526, 0, 528, 529,
	0, 0, 530, 531, 532, 534, 535, 533, 536, 0,
	537, 0, 0, 538, 539, 540, 596, 597, 598, 245,
	542, 541, 543, 599, 0, 0, 0, 0, 544, 545,
	600, 546, 547, 548, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 0,
	0, 275, 555, 556, 557, 0, 276, 277, 558, 0,
	0, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 565, 566, 342,
	343, 0, 344, 567, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 569, 570, 571, 413, 0, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 0, 357,
	358, 360, 0, 0, 359, 572, 573, 0, 574, 0,
	361, 362, 0, 575, 0, 363, 364, 365, 0, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 576, 0, 377, 378, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 0, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 0, 401, 0, 0,
	0, 410, 411, 0, 577, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 0, 423, 0, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 0, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 0,
	488, 472, 473, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 0,
	509, 510, 0, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 594, 522, 595, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 0, 537, 0, 0, 538,
	539, 540, 596, 597, 598, 245, 542, 541, 543, 599,
	0, 0, 0, 0, 544, 545, 600, 546, 547, 548,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 259, 260, 262, 261, 263, 264, 265, 266, 550,
	551, 0, 267, 552, 268, 553, 0, 554, 269, 270,
	271, 272, 273, 274, 0, 0, 0, 275, 555, 556,
	557, 0, 276, 277, 558, 0, 0, 0, 278, 279,
	280, 281, 282, 283, 284, 0, 0, 286, 287, 288,
	285, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	559, 560, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 561, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 562,
	563, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 564, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 565, 566, 342, 343, 0, 344, 567,
	0, 568, 345, 0, 346, 347, 348, 349, 350, 3181,
	570, 571, 413, 0, 351, 352, 0, 353, 354, 355,
	356, 0, 0, 0, 0, 357, 358, 360, 0, 0,
	359, 572, 573, 0, 574, 0, 361, 362, 0, 575,
	0, 363, 364, 365, 0, 366, 0, 0, 0, 367,
	368, 369, 370, 371, 372, 0, 373, 375, 374, 0,
	376, 576, 0, 377, 378, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 385, 0, 386, 387, 389,
	391, 388, 390, 395, 392, 393, 394, 397, 0, 396,
	0, 398, 399, 400, 405, 407, 408, 403, 404, 406,
	409, 402, 0, 401, 0, 0, 0, 410, 411, 0,
	577, 412, 578, 414, 415, 0, 0, 416, 0, 0,
	0, 418, 419, 420, 0, 0, 421, 422, 579, 0,
	423, 0, 580, 424, 425, 417, 426, 427, 428, 429,
	430, 431, 432, 433, 0, 434, 435, 581, 582, 583,
	436, 584, 437, 438, 0, 439, 0, 440, 441, 442,
	443, 444, 445, 446, 585, 448, 447, 449, 0, 450,
	0, 0, 0, 0, 0, 451, 0, 453, 454, 455,
	452, 456, 457, 458, 459, 0, 460, 461, 462, 0,
	463, 464, 465, 466, 586, 467, 0, 468, 469, 475,
	476, 470, 471, 477, 478, 479, 480, 481, 0, 483,
	484, 482, 485, 486, 487, 0, 488, 472, 473, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 587, 0,
	497, 0, 498, 499, 500, 501, 474, 502, 507, 588,
	503, 504, 505, 506, 589, 0, 509, 510, 0, 508,
	0, 511, 512, 513, 514, 515, 516, 329, 517, 0,
	518, 590, 591, 592, 593, 0, 527, 0, 519, 520,
	521, 594, 522, 595, 0, 523, 524, 525, 526, 0,
	528, 529, 0, 0, 530, 531, 532, 534, 535, 533,
	536, 0, 537, 0, 0, 538, 539, 540, 596, 597,
	598, 245, 542, 541, 543, 599, 0, 0, 0, 0,
	544, 545, 600, 546, 547, 548, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 0, 554, 269, 270, 271, 272, 273, 274,
	0, 0, 0, 275, 555, 556, 557, 0, 276, 277,
	558, 0, 0, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 559, 560, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 562, 563, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 565,
	566, 342, 343, 0, 344, 567, 0, 568, 345, 0,
	346, 347, 348, 349, 350, 3130, 570, 571, 413, 0,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	0, 357, 358, 360, 0, 0, 359, 572, 573, 0,
	574, 0, 361, 362, 0, 575, 0, 363, 364, 365,
	0, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 576, 0, 377,
	378, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 0, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 0, 401,
	0, 0, 0, 410, 411, 0, 577, 412, 578, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 0, 423, 0, 580, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 583, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 0, 463, 464, 465, 466,
	586, 467, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 0, 488, 472, 473, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	589, 0, 509, 510, 0, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 590, 591, 592,
	593, 0, 527, 0, 519, 520, 521, 594, 522, 595,
	0, 523, 524, 525, 526, 0, 528, 529, 0, 0,
	530, 531, 532, 534, 535, 533, 536, 0, 537, 0,
	0, 538, 539, 540, 596, 597, 598, 245, 542, 541,
	543, 599, 0, 0, 0, 0, 544, 545, 600, 546,
	547, 548, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 0, 554,
	269, 270, 271, 272, 273, 274, 0, 0, 0, 275,
	555, 556, 557, 0, 276, 277, 558, 0, 0, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 559, 560, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 562, 563, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 565, 566, 342, 343, 0,
	344, 567, 0, 568, 345, 0, 346, 347, 348, 349,
	350, 3068, 570, 571, 413, 0, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 0, 357, 358, 360,
	0, 0, 359, 572, 573, 0, 574, 0, 361, 362,
	0, 575, 0, 363, 364, 365, 0, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 576, 0, 377, 378, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 0, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 0, 401, 0, 0, 0, 410,
	411, 0, 577, 412, 578, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 0, 423, 0, 580, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 583, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 0, 463, 464, 465, 466, 586, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 0, 488, 472,
	473, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 589, 0, 509, 510,
	0, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 590, 591, 592, 593, 0, 527, 0,
	519, 520, 521, 594, 522, 595, 0, 523, 524, 525,
	526, 0, 528, 529, 0, 0, 530, 531, 532, 534,
	535, 533, 536, 0, 537, 0, 0, 538, 539, 540,
	596, 597, 598, 245, 542, 541, 543, 599, 0, 0,
	0, 0, 544, 545, 600, 546, 547, 548, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 551, 0,
	267, 552, 268, 553, 0, 554, 269, 270, 271, 272,
	273, 274, 0, 0, 0, 275, 555, 556, 557, 0,
	276, 277, 558, 0, 0, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 559, 560,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 561, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 562, 563, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 564,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 565, 566, 342, 343, 0, 344, 567, 0, 568,
	345, 0, 346, 347, 348, 349, 350, 3066, 570, 571,
	413, 0, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 0, 357, 358, 360, 0, 0, 359, 572,
	573, 0, 574, 0, 361, 362, 0, 575, 0, 363,
	364, 365, 0, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 576,
	0, 377, 378, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 0, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	0, 401, 0, 0, 0, 410, 411, 0, 577, 412,
	578, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 0, 423, 0,
	580, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 583, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 585, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 0, 463, 464,
	465, 466, 586, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 0, 488, 472, 473, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 587, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 588, 503, 504,
	505, 506, 589, 0, 509, 510, 0, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 590,
	591, 592, 593, 0, 527, 0, 519, 520, 521, 594,
	522, 595, 0, 523, 524, 525, 526, 0, 528, 529,
	0, 0, 530, 531, 532, 534, 535, 533, 536, 0,
	537, 0, 0, 538, 539, 540, 596, 597, 598, 245,
	542, 541, 543, 599, 0, 0, 0, 0, 544, 545,
	600, 546, 547, 548, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 0,
	0, 275, 555, 556, 557, 0, 276, 277, 558, 0,
	0, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 565, 566, 342,
	343, 0, 344, 567, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 3052, 570, 571, 413, 0, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 0, 357,
	358, 360, 0, 0, 359, 572, 573, 0, 574, 0,
	361, 362, 0, 575, 0, 363, 364, 365, 0, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 576, 0, 377, 378, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 0, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 0, 401, 0, 0,
	0, 410, 411, 0, 577, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 0, 423, 0, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 0, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 0,
	488, 472, 473, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 0,
	509, 510, 0, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 594, 522, 595, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 0, 537, 0, 0, 538,
	539, 540, 596, 597, 598, 245, 542, 541, 543, 599,
	0, 0, 0, 0, 544, 545, 600, 546, 547, 548,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 259, 260, 262, 261, 263, 264, 265, 266, 550,
	551, 0, 267, 552, 268, 553, 0, 554, 269, 270,
	271, 272, 273, 274, 0, 0, 0, 275, 555, 556,
	557, 0, 276, 277, 558, 0, 0, 0, 278, 279,
	280, 281, 282, 283, 284, 0, 0, 286, 287, 288,
	285, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	559, 560, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 561, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 562,
	563, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 564, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 565, 566, 342, 343, 0, 344, 567,
	0, 568, 345, 0, 346, 347, 348, 349, 350, 2679,
	570, 571, 413, 0, 351, 352, 0, 353, 354, 355,
	356, 0, 0, 0, 0, 357, 358, 360, 0, 0,
	359, 572, 573, 0, 574, 0, 361, 362, 0, 575,
	0, 363, 364, 365, 0, 366, 0, 0, 0, 367,
	368, 369, 370, 371, 372, 0, 373, 375, 374, 0,
	376, 576, 0, 377, 378, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 385, 0, 386, 387, 389,
	391, 388, 390, 395, 392, 393, 394, 397, 0, 396,
	0, 398, 399, 400, 405, 407, 408, 403, 404, 406,
	409, 402, 0, 401, 0, 0, 0, 410, 411, 0,
	577, 412, 578, 414, 415, 0, 0, 416, 0, 0,
	0, 418, 419, 420, 0, 0, 421, 422, 579, 0,
	423, 0, 580, 424, 425, 417, 426, 427, 428, 429,
	430, 431, 432, 433, 0, 434, 435, 581, 582, 583,
	436, 584, 437, 438, 0, 439, 0, 440, 441, 442,
	443, 444, 445, 446, 585, 448, 447, 449, 0, 450,
	0, 0, 0, 0, 0, 451, 0, 453, 454, 455,
	452, 456, 457, 458, 459, 0, 460, 461, 462, 0,
	463, 464, 465, 466, 586, 467, 0, 468, 469, 475,
	476, 470, 471, 477, 478, 479, 480, 481, 0, 483,
	484, 482, 485, 486, 487, 0, 488, 472, 473, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 587, 0,
	497, 0, 498, 499, 500, 501, 474, 502, 507, 588,
	503, 504, 505, 506, 589, 0, 509, 510, 0, 508,
	0, 511, 512, 513, 514, 515, 516, 329, 517, 0,
	518, 590, 591, 592, 593, 0, 527, 0, 519, 520,
	521, 594, 522, 595, 0, 523, 524, 525, 526, 0,
	528, 529, 0, 0, 530, 531, 532, 534, 535, 533,
	536, 0, 537, 0, 0, 538, 539, 540, 596, 597,
	598, 245, 542, 541, 543, 599, 0, 0, 0, 0,
	544, 545, 600, 546, 547, 548, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 0, 554, 269, 270, 271, 272, 273, 274,
	0, 0, 0, 275, 555, 556, 557, 0, 276, 277,
	558, 0, 0, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 559, 560, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 562, 563, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 565,
	566, 342, 343, 0, 344, 567, 0, 568, 345, 0,
	346, 347, 348, 349, 350, 569, 570, 571, 413, 0,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	0, 357, 358, 360, 0, 0, 359, 572, 573, 0,
	574, 0, 361, 362, 0, 575, 0, 363, 364, 365,
	0, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 576, 0, 377,
	378, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 0, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 0, 401,
	0, 0, 0, 410, 411, 0, 577, 412, 578, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 0, 423, 0, 580, 424,
	425, 417, 426, 427, 428, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 583, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 444, 445, 446,
	585, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 0, 463, 464, 465, 466,
	586, 467, 0, 468, 469, 637, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 0, 488, 472, 473, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	589, 0, 509, 510, 0, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 590, 591, 592,
	593, 0, 527, 0, 519, 520, 521, 594, 522, 595,
	0, 523, 524, 525, 526, 0, 528, 529, 0, 0,
	530, 531, 532, 534, 535, 533, 536, 0, 537, 0,
	0, 538, 539, 540, 596, 597, 598, 245, 542, 541,
	543, 599, 0, 0, 0, 0, 544, 545, 600, 546,
	547, 548, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 549, 0,
	2057, 0, 0, 259, 260, 262, 261, 263, 264, 265,
	266, 550, 551, 0, 267, 552, 268, 553, 0, 554,
	269, 270, 271, 272, 273, 274, 0, 0, 0, 275,
	555, 556, 557, 0, 276, 277, 558, 0, 0, 0,
	278, 279, 280, 281, 282, 283, 284, 0, 0, 286,
	287, 288, 285, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 559, 560, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	561, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 562, 563, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 564, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 565, 566, 342, 343, 0,
	344, 567, 0, 568, 345, 0, 346, 347, 348, 349,
	350, 569, 570, 571, 413, 0, 351, 352, 0, 353,
	354, 355, 356, 0, 0, 0, 0, 357, 358, 360,
	0, 0, 359, 572, 573, 0, 574, 0, 361, 362,
	0, 575, 0, 363, 364, 365, 0, 366, 0, 0,
	0, 367, 368, 369, 370, 371, 372, 0, 373, 375,
	374, 0, 376, 576, 0, 377, 378, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 384, 385, 0, 386,
	387, 389, 391, 388, 390, 395, 392, 393, 394, 397,
	0, 396, 0, 398, 399, 400, 405, 407, 408, 403,
	404, 406, 409, 402, 0, 401, 0, 0, 0, 410,
	411, 0, 577, 412, 578, 414, 415, 0, 0, 416,
	0, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	579, 0, 423, 0, 580, 424, 425, 417, 426, 427,
	428, 429, 430, 431, 432, 433, 0, 434, 435, 581,
	582, 583, 436, 584, 437, 438, 0, 439, 0, 440,
	441, 442, 443, 444, 445, 446, 585, 448, 447, 449,
	0, 450, 0, 0, 0, 0, 0, 451, 0, 453,
	454, 455, 452, 456, 457, 458, 459, 0, 460, 461,
	462, 0, 463, 464, 465, 466, 586, 467, 0, 468,
	469, 475, 476, 470, 471, 477, 478, 479, 480, 481,
	0, 483, 484, 482, 485, 486, 487, 0, 0, 472,
	473, 489, 490, 0, 491, 492, 493, 494, 495, 496,
	587, 0, 497, 0, 498, 499, 500, 501, 474, 502,
	507, 588, 503, 504, 505, 506, 589, 0, 509, 510,
	0, 508, 0, 511, 512, 513, 514, 515, 516, 329,
	517, 0, 518, 590, 591, 592, 593, 0, 527, 0,
	519, 520, 521, 594, 522, 595, 0, 523, 524, 525,
	526, 0, 528, 529, 0, 0, 530, 531, 532, 534,
	535, 533, 536, 0, 537, 0, 0, 538, 539, 540,
	596, 597, 598, 245, 542, 541, 543, 599, 0, 0,
	0, 0, 544, 545, 600, 546, 547, 548, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 259,
	260, 262, 261, 263, 264, 265, 266, 550, 551, 0,
	267, 552, 268, 553, 0, 554, 269, 270, 271, 272,
	273, 274, 0, 0, 0, 275, 555, 556, 557, 0,
	276, 277, 558, 0, 0, 0, 278, 279, 280, 281,
	282, 283, 284, 0, 0, 286, 287, 288, 285, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 559, 560,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 561, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 562, 563, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 564,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 565, 566, 342, 343, 0, 344, 567, 0, 568,
	345, 0, 346, 347, 348, 349, 350, 1421, 570, 571,
	413, 0, 351, 352, 0, 353, 354, 355, 356, 0,
	0, 0, 0, 357, 358, 360, 0, 0, 359, 572,
	573, 0, 574, 0, 361, 362, 0, 575, 0, 363,
	364, 365, 0, 366, 0, 0, 0, 367, 368, 369,
	370, 371, 372, 0, 373, 375, 374, 0, 376, 576,
	0, 377, 378, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 384, 385, 0, 386, 387, 389, 391, 388,
	390, 395, 392, 393, 394, 397, 0, 396, 0, 398,
	399, 400, 405, 407, 408, 403, 404, 406, 409, 402,
	0, 401, 0, 0, 0, 410, 411, 0, 577, 412,
	578, 414, 415, 0, 0, 416, 0, 0, 0, 418,
	419, 420, 0, 0, 421, 422, 579, 0, 423, 0,
	580, 424, 425, 417, 426, 427, 428, 429, 430, 431,
	432, 433, 0, 434, 435, 581, 582, 583, 436, 584,
	437, 438, 0, 439, 0, 440, 441, 442, 443, 444,
	445, 446, 585, 448, 447, 449, 0, 450, 0, 0,
	0, 0, 0, 451, 0, 453, 454, 455, 452, 456,
	457, 458, 459, 0, 460, 461, 462, 0, 463, 464,
	465, 466, 586, 467, 0, 468, 469, 475, 476, 470,
	471, 477, 478, 479, 480, 481, 0, 483, 484, 482,
	485, 486, 487, 0, 488, 472, 473, 489, 490, 0,
	491, 492, 493, 494, 495, 496, 587, 0, 497, 0,
	498, 499, 500, 501, 474, 502, 507, 588, 503, 504,
	505, 506, 589, 0, 509, 510, 0, 508, 0, 511,
	512, 513, 514, 515, 516, 329, 517, 0, 518, 590,
	591, 592, 593, 0, 527, 0, 519, 520, 521, 594,
	522, 595, 0, 523, 524, 525, 526, 0, 528, 529,
	0, 0, 530, 531, 532, 534, 535, 533, 536, 0,
	537, 0, 0, 538, 539, 540, 596, 597, 598, 245,
	542, 541, 543, 599, 0, 0, 0, 0, 544, 545,
	600, 546, 547, 548, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 259, 260, 262, 261, 263,
	264, 265, 266, 550, 551, 0, 267, 552, 268, 553,
	0, 554, 269, 270, 271, 272, 273, 274, 0, 0,
	0, 275, 555, 556, 557, 0, 276, 277, 558, 0,
	0, 0, 278, 279, 280, 281, 282, 283, 284, 0,
	0, 286, 287, 288, 285, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 559, 560, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 561, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 562, 563, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 564, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 565, 566, 342,
	343, 0, 344, 567, 0, 568, 345, 0, 346, 347,
	348, 349, 350, 1362, 570, 571, 413, 0, 351, 352,
	0, 353, 354, 355, 356, 0, 0, 0, 0, 357,
	358, 360, 0, 0, 359, 572, 573, 0, 574, 0,
	361, 362, 0, 575, 0, 363, 364, 365, 0, 366,
	0, 0, 0, 367, 368, 369, 370, 371, 372, 0,
	373, 375, 374, 0, 376, 576, 0, 377, 378, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 384, 385,
	0, 386, 387, 389, 391, 388, 390, 395, 392, 393,
	394, 397, 0, 396, 0, 398, 399, 400, 405, 407,
	408, 403, 404, 406, 409, 402, 0, 401, 0, 0,
	0, 410, 411, 0, 577, 412, 578, 414, 415, 0,
	0, 416, 0, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 579, 0, 423, 0, 580, 424, 425, 417,
	426, 427, 428, 429, 430, 431, 432, 433, 0, 434,
	435, 581, 582, 583, 436, 584, 437, 438, 0, 439,
	0, 440, 441, 442, 443, 444, 445, 446, 585, 448,
	447, 449, 0, 450, 0, 0, 0, 0, 0, 451,
	0, 453, 454, 455, 452, 456, 457, 458, 459, 0,
	460, 461, 462, 0, 463, 464, 465, 466, 586, 467,
	0, 468, 469, 475, 476, 470, 471, 477, 478, 479,
	480, 481, 0, 483, 484, 482, 485, 486, 487, 0,
	488, 472, 473, 489, 490, 0, 491, 492, 493, 494,
	495, 496, 587, 0, 497, 0, 498, 499, 500, 501,
	474, 502, 507, 588, 503, 504, 505, 506, 589, 0,
	509, 510, 0, 508, 0, 511, 512, 513, 514, 515,
	516, 329, 517, 0, 518, 590, 591, 592, 593, 0,
	527, 0, 519, 520, 521, 594, 522, 595, 0, 523,
	524, 525, 526, 0, 528, 529, 0, 0, 530, 531,
	532, 534, 535, 533, 536, 0, 537, 0, 0, 538,
	539, 540, 596, 597, 598, 245, 542, 541, 543, 599,
	0, 0, 0, 0, 544, 545, 600, 546, 547, 548,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 259, 260, 262, 261, 263, 264, 265, 266, 550,
	551, 0, 267, 552, 268, 553, 0, 554, 269, 270,
	271, 272, 273, 274, 0, 0, 0, 275, 555, 556,
	557, 0, 276, 277, 558, 0, 0, 0, 278, 279,
	280, 281, 282, 283, 284, 0, 0, 286, 287, 288,
	285, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	559, 560, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 561, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 562,
	563, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 564, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 565, 566, 342, 343, 0, 344, 567,
	0, 568, 345, 0, 346, 347, 348, 349, 350, 569,
	570, 571, 413, 0, 351, 352, 0, 353, 354, 355,
	356, 0, 0, 0, 0, 357, 358, 360, 0, 0,
	359, 572, 573, 0, 574, 0, 361, 362, 0, 575,
	0, 363, 364, 365, 0, 366, 0, 0, 0, 367,
	368, 369, 370, 371, 372, 0, 373, 375, 374, 0,
	376, 576, 0, 377, 378, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 385, 0, 386, 387, 389,
	391, 388, 390, 395, 392, 393, 394, 397, 0, 396,
	0, 398, 399, 400, 405, 407, 408, 403, 404, 406,
	409, 402, 0, 401, 0, 0, 0, 410, 411, 0,
	577, 412, 578, 414, 415, 0, 0, 416, 0, 0,
	0, 418, 419, 420, 0, 0, 421, 422, 579, 0,
	423, 0, 580, 424, 425, 417, 426, 427, 428, 429,
	430, 431, 432, 433, 0, 434, 435, 581, 582, 583,
	436, 584, 437, 438, 0, 439, 0, 440, 441, 442,
	443, 444, 445, 446, 585, 1097, 447, 449, 0, 450,
	0, 0, 0, 0, 0, 451, 0, 453, 454, 455,
	452, 456, 457, 458, 459, 0, 460, 461, 462, 0,
	463, 464, 465, 466, 586, 467, 0, 468, 469, 475,
	476, 470, 471, 477, 478, 479, 480, 481, 0, 483,
	484, 482, 485, 486, 487, 0, 488, 472, 473, 489,
	490, 0, 491, 492, 493, 494, 495, 496, 587, 0,
	497, 0, 498, 499, 500, 501, 474, 502, 507, 588,
	503, 504, 505, 506, 589, 0, 509, 510, 0, 508,
	0, 511, 512, 513, 514, 515, 516, 329, 517, 0,
	518, 590, 591, 592, 593, 0, 527, 0, 519, 520,
	521, 594, 522, 595, 0, 523, 524, 525, 526, 0,
	528, 529, 0, 0, 530, 531, 532, 534, 535, 533,
	536, 0, 537, 0, 0, 538, 539, 540, 596, 597,
	598, 245, 542, 541, 543, 599, 0, 0, 0, 0,
	544, 545, 600, 546, 547, 548, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 259, 260, 262,
	261, 263, 264, 265, 266, 550, 551, 0, 267, 552,
	268, 553, 0, 554, 269, 270, 271, 272, 273, 274,
	0, 0, 0, 275, 555, 556, 557, 0, 276, 277,
	558, 0, 0, 0, 278, 279, 280, 281, 282, 283,
	284, 0, 0, 286, 287, 288, 285, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 559, 560, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 561, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 562, 563, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 564, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 565,
	566, 342, 343, 0, 344, 567, 0, 568, 0, 0,
	346, 347, 348, 349, 350, 569, 570, 571, 413, 0,
	351, 352, 0, 353, 354, 355, 356, 0, 0, 0,
	0, 357, 358, 360, 0, 0, 359, 572, 573, 0,
	574, 0, 361, 362, 0, 575, 0, 363, 364, 365,
	0, 366, 0, 0, 0, 367, 368, 369, 370, 371,
	372, 0, 373, 375, 374, 0, 376, 576, 0, 377,
	378, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	384, 385, 0, 386, 387, 389, 391, 388, 390, 395,
	392, 393, 394, 397, 0, 396, 0, 398, 399, 400,
	405, 407, 408, 403, 404, 406, 409, 402, 0, 401,
	0, 0, 0, 410, 411, 0, 577, 412, 578, 414,
	415, 0, 0, 416, 0, 0, 0, 418, 419, 420,
	0, 0, 421, 422, 579, 0, 423, 0, 580, 424,
	425, 417, 426, 427, 0, 429, 430, 431, 432, 433,
	0, 434, 435, 581, 582, 583, 436, 584, 437, 438,
	0, 439, 0, 440, 441, 442, 443, 0, 445, 446,
	585, 448, 447, 449, 0, 450, 0, 0, 0, 0,
	0, 451, 0, 453, 454, 455, 452, 456, 457, 458,
	459, 0, 460, 461, 462, 0, 463, 464, 465, 466,
	586, 0, 0, 468, 469, 475, 476, 470, 471, 477,
	478, 479, 480, 481, 0, 483, 484, 482, 485, 486,
	487, 0, 488, 472, 473, 489, 490, 0, 491, 492,
	493, 494, 495, 496, 587, 0, 497, 0, 498, 499,
	500, 501, 474, 502, 507, 588, 503, 504, 505, 506,
	589, 0, 509, 510, 0, 508, 0, 511, 512, 513,
	514, 515, 516, 329, 517, 0, 518, 590, 591, 592,
	593, 0, 527, 0, 519, 520, 521, 594, 522, 595,
	0, 523, 524, 525, 526, 0, 528, 529, 0, 0,
	530, 531, 532, 534, 535, 533, 536, 0, 537, 0,
	0, 538, 539, 540, 596, 597, 598, 0, 542, 541,
	543, 599, 0, 0, 0, 0, 544, 545, 600, 546,
	547, 548, 1633, 1634, 0, 1666, 1667, 1668, 1676, 1677,
	1678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1669, 1664, 0, 0, 0, 0, 0,
	0, 1636, 0, 0, 0, 0, 0, 0, 0, 1682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 1634, 0, 1666, 1667, 1668, 1676, 1677,
	1678, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 1669, 1664, 1655, 0, 0, 0, 0,
	0, 1636, 0, 1652, 0, 0, 0, 0, 0, 1682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1655, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1658, 1659, 1660, 1661, 0, 0,
	0, 0, 0, 0, 1641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1673, 0, 0, 1683, 0, 0, 0,
	0, 0, 1663, 1665, 1658, 1659, 1660, 1661, 0, 0,
	0, 0, 0, 0, 1641, 0, 0, 0, 1679, 0,
	1680, 0, 0, 0, 0, 0, 0, 1650, 1651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1673, 0, 1671, 1683, 0, 0, 0,
	0, 0, 1663, 1665, 0, 0, 1656, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1679, 0,
	1680, 0, 0, 0, 0, 0, 0, 1650, 1651, 0,
	0, 0, 0, 0, 0, 0, 1681, 0, 0, 0,
	0, 0, 0, 0, 0, 1671, 0, 0, 0, 0,
	0, 0, 0, 0, 1670, 0, 1656, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1670, 0, 1662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 0, 0,
	0, 1633, 1634, 0, 1666, 1667, 1668, 1676, 1677, 1678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1674, 1669, 1664, 0, 0, 1662, 0, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 1682, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 1674, 0, 0, 1655, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1672, 0, 0, 0,
	1647, 1648, 1654, 1675, 1653, 1649, 0, 1646, 1644, 1645,
	1637, 1638, 1639, 1640, 1642, 1643, 0, 0, 0, 0,
	0, 0, 0, 0, 2890, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 1659, 1660, 1661, 0, 0, 0,
	0, 0, 0, 1641, 0, 0, 1672, 0, 0, 0,
	1647, 1648, 1654, 1675, 1653, 1649, 0, 1646, 1644, 1645,
	1637, 1638, 1639, 1640, 1642, 1643, 0, 0, 0, 0,
	0, 0, 1673, 0, 2889, 1683, 0, 0, 0, 0,
	0, 1663, 1665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 1680,
	0, 0, 0, 0, 0, 0, 1650, 1651, 0, 0,
	0, 1633, 1634, 0, 1666, 1667, 1668, 1676, 1677, 1678,
	0, 0, 0, 0, 1671, 0, 0, 0, 0, 0,
	0, 0, 1669, 1664, 0, 1656, 0, 0, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 1682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1681, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 1670, 1655, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 1634, 0, 1666, 1667,
	1668, 1676, 1677, 1678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 1664, 0, 0,
	0, 0, 0, 0, 1636, 1662, 0, 0, 0, 0,
	0, 0, 1682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 0, 0, 0,
	0, 0, 0, 1658, 1659, 1660, 1661, 0, 1635, 0,
	0, 0, 0, 1641, 0, 0, 0, 0, 1655, 0,
	1674, 0, 0, 0, 0, 0, 1652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1673, 0, 0, 1683, 0, 0, 0, 0,
	0, 1663, 1665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 1680,
	0, 0, 0, 0, 0, 0, 1650, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1671, 0, 0, 1658, 1659, 1660,
	1661, 0, 0, 0, 0, 1656, 0, 1641, 0, 0,
	0, 0, 0, 0, 0, 1672, 0, 0, 0, 1647,
	1648, 1654, 1675, 1653, 1649, 0, 1646, 1644, 1645, 1637,
	1638, 1639, 1640, 1642, 1643, 1681, 1673, 0, 0, 1683,
	0, 0, 0, 2888, 0, 1663, 1665, 0, 0, 0,
	0, 0, 0, 1670, 0, 0, 0, 0, 0, 0,
	0, 1679, 0, 1680, 0, 0, 0, 0, 0, 0,
	1650, 1651, 0, 0, 0, 1633, 1634, 0, 1666, 1667,
	1668, 1676, 1677, 1678, 0, 0, 0, 0, 1671, 0,
	0, 0, 0, 0, 0, 0, 1669, 1664, 0, 1656,
	0, 0, 0, 0, 1636, 1662, 0, 0, 0, 0,
	0, 0, 1682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 0, 0, 1681,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 1670, 1655, 0,
	1674, 0, 0, 0, 0, 0, 1652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1662,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 0, 0, 0, 0, 0, 0, 1658, 1659, 1660,
	1661, 0, 0, 0, 0, 0, 0, 1641, 0, 0,
	0, 0, 0, 0, 1674, 1672, 0, 0, 0, 1647,
	1648, 1654, 1675, 1653, 1649, 0, 1646, 1644, 1645, 1637,
	1638, 1639, 1640, 1642, 1643, 0, 1673, 0, 0, 1683,
	0, 0, 0, 2306, 0, 1663, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1679, 0, 1680, 0, 0, 0, 0, 0, 0,
	1650, 1651, 0, 0, 0, 1633, 1634, 0, 1666, 1667,
	1668, 1676, 1677, 1678, 0, 0, 0, 0, 1671, 0,
	0, 0, 0, 0, 0, 0, 1669, 1664, 0, 1656,
	0, 0, 0, 0, 1636, 0, 0, 0, 0, 1672,
	0, 0, 1682, 1647, 1648, 1654, 1675, 1653, 1649, 0,
	1646, 1644, 1645, 1637, 1638, 1639, 1640, 1642, 1643, 1681,
	0, 0, 0, 3979, 0, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 1670, 1655, 0,
	0, 0, 0, 0, 0, 0, 1652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1633, 1634, 0, 1666, 1667, 1668, 1676,
	1677, 1678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1669, 1664, 0, 0, 0, 1662,
	0, 0, 1636, 0, 0, 0, 0, 0, 0, 0,
	1682, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 0, 0, 0, 0, 0, 0, 1658, 1659, 1660,
	1661, 0, 0, 0, 0, 0, 1635, 1641, 0, 0,
	0, 0, 0, 0, 1674, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 1652, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1673, 0, 0, 1683,
	0, 0, 0, 0, 0, 1663, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1679, 0, 1680, 0, 0, 0, 0, 0, 0,
	1650, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1671, 0,
	0, 0, 0, 0, 0, 1658, 1659, 1660, 1661, 1656,
	0, 0, 0, 0, 0, 1641, 0, 0, 0, 1672,
	0, 0, 0, 1647, 1648, 1654, 1675, 1653, 1649, 0,
	1646, 1644, 1645, 1637, 1638, 1639, 1640, 1642, 1643, 1681,
	0, 0, 0, 3978, 1673, 0, 0, 1683, 0, 0,
	0, 0, 0, 1663, 1665, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1679,
	0, 1680, 0, 0, 0, 0, 0, 0, 1650, 1651,
	0, 0, 0, 1633, 1634, 0, 1666, 1667, 1668, 1676,
	1677, 1678, 0, 0, 0, 0, 1671, 0, 0, 0,
	0, 0, 0, 0, 1669, 1664, 0, 1656, 0, 1662,
	0, 0, 1636, 0, 0, 0, 0, 0, 0, 0,
	1682, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 0, 0, 0, 0, 0, 0, 1681, 0, 0,
	0, 0, 0, 0, 0, 0, 1635, 0, 0, 0,
	0, 0, 0, 0, 1674, 1670, 1655, 0, 0, 0,
	0, 0, 0, 0, 1652, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 0, 0,
	0, 0, 0, 0, 0, 1658, 1659, 1660, 1661, 0,
	0, 0, 0, 0, 0, 1641, 0, 0, 0, 1672,
	0, 0, 1674, 1647, 1648, 1654, 1675, 1653, 1649, 0,
	1646, 1644, 1645, 1637, 1638, 1639, 1640, 1642, 1643, 0,
	0, 0, 0, 3826, 1673, 0, 0, 1683, 0, 0,
	0, 0, 0, 1663, 1665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1679,
	0, 1680, 0, 0, 0, 0, 0, 0, 1650, 1651,
	0, 0, 0, 1633, 1634, 0, 1666, 1667, 1668, 1676,
	1677, 1678, 0, 0, 0, 0, 1671, 0, 0, 0,
	0, 0, 0, 0, 1669, 1664, 0, 1656, 0, 0,
	0, 0, 1636, 0, 0, 0, 0, 1672, 0, 0,
	1682, 1647, 1648, 1654, 1675, 1653, 1649, 0, 1646, 1644,
	1645, 1637, 1638, 1639, 1640, 1642, 1643, 1681, 0, 0,
	0, 3687, 0, 0, 0, 0, 1635, 0, 0, 0,
	0, 0, 0, 0, 0, 1670, 1655, 0, 0, 0,
	0, 0, 0, 0, 1652, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 1634, 0, 1666, 1667, 1668, 1676, 1677, 1678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1669, 1664, 0, 0, 0, 1662, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 1682, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 0, 0,
	0, 0, 0, 0, 0, 1658, 1659, 1660, 1661, 0,
	0, 0, 0, 0, 1635, 1641, 0, 0, 0, 0,
	0, 0, 1674, 0, 1655, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1673, 0, 0, 1683, 0, 0,
	0, 0, 0, 1663, 1665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1679,
	0, 1680, 0, 0, 0, 0, 0, 0, 1650, 1651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1671, 0, 0, 0,
	0, 0, 0, 1658, 1659, 1660, 1661, 1656, 0, 0,
	0, 0, 0, 1641, 0, 0, 0, 1672, 0, 0,
	0, 1647, 1648, 1654, 1675, 1653, 1649, 0, 1646, 1644,
	1645, 1637, 1638, 1639, 1640, 1642, 1643, 1681, 0, 0,
	0, 3630, 1673, 0, 0, 1683, 0, 0, 0, 0,
	0, 1663, 1665, 0, 0, 1670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 1680,
	0, 0, 0, 0, 0, 0, 1650, 1651, 0, 0,
	0, 1633, 1634, 0, 1666, 1667, 1668, 1676, 1677, 1678,
	0, 0, 0, 0, 1671, 0, 0, 0, 0, 0,
	0, 0, 1669, 1664, 0, 1656, 0, 1662, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 1682, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 0, 0,
	0, 0, 0, 0, 0, 1681, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 1674, 1670, 1655, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 0, 0, 0,
	0, 0, 0, 1658, 1659, 1660, 1661, 0, 0, 0,
	0, 0, 0, 1641, 0, 0, 0, 1672, 0, 0,
	1674, 1647, 1648, 1654, 1675, 1653, 1649, 0, 1646, 1644,
	1645, 1637, 1638, 1639, 1640, 1642, 1643, 0, 0, 0,
	0, 3629, 1673, 0, 0, 1683, 0, 0, 0, 0,
	0, 1663, 1665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 1680,
	0, 0, 0, 0, 0, 0, 1650, 1651, 0, 0,
	0, 1633, 1634, 0, 1666, 1667, 1668, 1676, 1677, 1678,
	0, 0, 0, 0, 1671, 0, 0, 0, 0, 0,
	0, 0, 1669, 1664, 0, 1656, 0, 0, 0, 0,
	1636, 0, 0, 0, 0, 1672, 0, 0, 1682, 1647,
	1648, 1654, 1675, 1653, 1649, 0, 1646, 1644, 1645, 1637,
	1638, 1639, 1640, 1642, 1643, 1681, 0, 0, 0, 3628,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 1670, 1655, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	1634, 0, 1666, 1667, 1668, 1676, 1677, 1678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1669, 1664, 0, 0, 0, 1662, 0, 0, 1636, 0,
	0, 0, 0, 0, 0, 0, 1682, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 0, 0, 0,
	0, 0, 0, 1658, 1659, 1660, 1661, 0, 0, 0,
	0, 0, 1635, 1641, 0, 0, 0, 0, 0, 0,
	1674, 0, 1655, 0, 0, 0, 0, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1673, 0, 0, 1683, 0, 0, 0, 0,
	0, 1663, 1665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 1680,
	0, 0, 0, 0, 0, 0, 1650, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1671, 0, 0, 0, 0, 0,
	0, 1658, 1659, 1660, 1661, 1656, 0, 0, 0, 0,
	0, 1641, 0, 0, 0, 1672, 0, 0, 0, 1647,
	1648, 1654, 1675, 1653, 1649, 0, 1646, 1644, 1645, 1637,
	1638, 1639, 1640, 1642, 1643, 1681, 0, 0, 0, 3326,
	1673, 0, 0, 1683, 0, 0, 0, 0, 0, 1663,
	1665, 0, 0, 1670, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1679, 0, 1680, 0, 0,
	0, 0, 0, 0, 1650, 1651, 0, 0, 0, 1633,
	1634, 0, 1666, 1667, 1668, 1676, 1677, 1678, 0, 0,
	0, 0, 1671, 0, 0, 0, 0, 0, 0, 0,
	1669, 1664, 0, 1656, 0, 1662, 0, 0, 1636, 0,
	0, 0, 0, 0, 0, 0, 1682, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 0, 0, 0,
	0, 0, 0, 1681, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	1674, 1670, 1655, 0, 0, 0, 0, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 0, 0, 0, 0, 0, 0,
	0, 1658, 1659, 1660, 1661, 0, 0, 0, 0, 0,
	0, 1641, 0, 0, 0, 1672, 0, 0, 1674, 1647,
	1648, 1654, 1675, 1653, 1649, 0, 1646, 1644, 1645, 1637,
	1638, 1639, 1640, 1642, 1643, 0, 0, 0, 0, 2886,
	1673, 0, 0, 1683, 0, 0, 0, 0, 0, 1663,
	1665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1679, 0, 1680, 0, 0,
	0, 0, 0, 0, 1650, 1651, 0, 0, 0, 1633,
	1634, 0, 1666, 1667, 1668, 1676, 1677, 1678, 0, 0,
	0, 0, 1671, 0, 0, 0, 0, 0, 0, 0,
	1669, 1664, 0, 1656, 0, 0, 0, 0, 1636, 0,
	0, 0, 0, 1672, 0, 0, 1682, 1647, 1648, 1654,
	1675, 1653, 1649, 0, 1646, 1644, 1645, 1637, 1638, 1639,
	1640, 1642, 1643, 1681, 0, 0, 0, 2885, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 1670, 1655, 0, 0, 0, 0, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1633, 1634, 0,
	1666, 1667, 1668, 1676, 1677, 1678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1669, 1664,
	0, 0, 0, 1662, 0, 0, 1636, 0, 0, 0,
	0, 0, 0, 0, 1682, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 0, 0, 0, 0, 0, 0,
	0, 1658, 1659, 1660, 1661, 0, 0, 0, 0, 0,
	1635, 1641, 0, 0, 0, 0, 0, 0, 1674, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 1652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1673, 0, 0, 1683, 0, 0, 0, 0, 0, 1663,
	1665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1679, 0, 1680, 0, 0,
	0, 0, 0, 0, 1650, 1651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1671, 0, 0, 0, 0, 0, 0, 1658,
	1659, 1660, 1661, 1656, 0, 0, 0, 0, 0, 1641,
	0, 0, 0, 1672, 0, 0, 0, 1647, 1648, 1654,
	1675, 1653, 1649, 0, 1646, 1644, 1645, 1637, 1638, 1639,
	1640, 1642, 1643, 1681, 0, 0, 0, 2884, 1673, 0,
	0, 1683, 0, 0, 0, 0, 0, 1663, 1665, 0,
	0, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1679, 0, 1680, 0, 0, 0, 0,
	0, 0, 1650, 1651, 0, 0, 0, 1633, 1634, 0,
	1666, 1667, 1668, 1676, 1677, 1678, 0, 0, 0, 0,
	1671, 0, 0, 0, 0, 0, 0, 0, 1669, 1664,
	0, 1656, 0, 1662, 0, 0, 1636, 0, 0, 0,
	0, 0, 0, 0, 1682, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 0, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 1674, 1670,
	1655, 0, 0, 0, 0, 0, 0, 0, 1652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 0, 0, 0, 0, 0, 0, 0, 1658,
	1659, 1660, 1661, 0, 0, 0, 0, 0, 0, 1641,
	4192, 0, 0, 1672, 0, 0, 1674, 1647, 1648, 1654,
	1675, 1653, 1649, 0, 1646, 1644, 1645, 1637, 1638, 1639,
	1640, 1642, 1643, 0, 0, 0, 0, 2883, 1673, 0,
	0, 1683, 0, 0, 0, 0, 0, 1663, 1665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1679, 0, 1680, 0, 0, 0, 0,
	0, 0, 1650, 1651, 0, 0, 0, 1633, 1634, 0,
	1666, 1667, 1668, 1676, 1677, 1678, 0, 0, 0, 0,
	1671, 0, 0, 0, 0, 0, 0, 0, 1669, 1664,
	0, 1656, 0, 0, 2821, 0, 1636, 0, 0, 0,
	0, 1672, 0, 0, 1682, 1647, 1648, 1654, 1675, 1653,
	1649, 0, 1646, 1644, 1645, 1637, 1638, 1639, 1640, 1642,
	1643, 1681, 0, 2850, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 1670,
	1655, 0, 0, 0, 0, 0, 0, 0, 1652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2822, 0, 0, 0, 0, 0,
	0, 1662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	1634, 1657, 1666, 1667, 1668, 1676, 1677, 1678, 0, 1658,
	1659, 1660, 1661, 0, 0, 0, 0, 0, 0, 1641,
	1669, 1664, 0, 0, 0, 0, 1674, 0, 1636, 0,
	0, 0, 0, 0, 0, 0, 1682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1673, 0,
	0, 1683, 0, 0, 0, 0, 0, 1663, 1665, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1655, 1679, 0, 1680, 0, 0, 0, 0,
	1652, 0, 1650, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1672, 0, 0, 0, 1647, 1648, 1654, 1675, 1653,
	1649, 0, 1646, 1644, 1645, 1637, 1638, 1639, 1640, 1642,
	1643, 1681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1658, 1659, 1660, 1661, 0, 0, 0, 0, 1670,
	0, 1641, 0, 2946, 0, 0, 2945, 0, 0, 0,
	0, 0, 0, 0, 2426, 0, 0, 0, 0, 0,
	0, 1633, 1634, 0, 1666, 1667, 1668, 1676, 1677, 1678,
	1673, 0, 0, 1683, 0, 0, 0, 0, 0, 1663,
	1665, 0, 1669, 1664, 0, 0, 0, 2425, 0, 0,
	1636, 1662, 0, 0, 0, 1679, 0, 1680, 1682, 0,
	0, 0, 0, 0, 1650, 1651, 0, 0, 0, 0,
	0, 1657, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1671, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 1656, 1655, 0, 1674, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 1659, 1660, 1661, 0, 0, 0,
	0, 0, 0, 1641, 0, 0, 0, 0, 0, 0,
	0, 1672, 0, 1662, 0, 1647, 1648, 1654, 1675, 1653,
	1649, 0, 1646, 1644, 1645, 1637, 1638, 1639, 1640, 1642,
	1643, 0, 1673, 1657, 0, 1683, 0, 0, 0, 0,
	0, 1663, 1665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 1674, 1680,
	0, 0, 0, 0, 0, 0, 1650, 1651, 0, 0,
	0, 1633, 1634, 0, 1666, 1667, 1668, 1676, 1677, 1678,
	0, 0, 0, 0, 1671, 0, 0, 0, 0, 0,
	0, 0, 1669, 1664, 0, 1656, 0, 0, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 1682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1681, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 1670, 1655, 0, 0, 0, 0, 0,
	0, 0, 1652, 1672, 0, 0, 0, 1647, 1648, 1654,
	1675, 1653, 1649, 0, 1646, 1644, 1645, 1637, 1638, 1639,
	1640, 1642, 1643, 0, 0, 0, 1633, 1634, 0, 1666,
	1667, 1668, 1676, 1677, 1678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1662, 0, 1669, 1664, 0,
	0, 0, 0, 0, 0, 1636, 0, 0, 0, 0,
	0, 0, 0, 1682, 0, 1657, 0, 0, 0, 0,
	0, 0, 0, 1658, 1659, 1660, 1661, 0, 0, 0,
	0, 0, 0, 1641, 0, 0, 0, 0, 0, 1635,
	1674, 0, 0, 0, 0, 0, 0, 0, 0, 1655,
	0, 0, 0, 0, 0, 0, 0, 1652, 0, 0,
	0, 0, 1673, 0, 0, 1683, 0, 0, 0, 0,
	0, 1663, 1665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 1680,
	0, 0, 0, 0, 0, 0, 1650, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 1658, 1659,
	1660, 1661, 0, 0, 0, 1672, 0, 0, 1641, 1647,
	1648, 1654, 1675, 1653, 1649, 0, 1646, 1644, 1645, 1637,
	1638, 1639, 1640, 1642, 1643, 1681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1673, 0, 0,
	1683, 0, 0, 1670, 954, 0, 1663, 1665, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1679, 0, 1680, 0, 0, 0, 0, 0,
	0, 1650, 1651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1671,
	0, 0, 0, 0, 0, 1662, 0, 0, 0, 0,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 1633, 1634, 0,
	1666, 1667, 1668, 1676, 1677, 1678, 0, 0, 0, 0,
	1681, 0, 0, 0, 0, 0, 0, 0, 1669, 1664,
	1674, 0, 0, 0, 0, 0, 1636, 0, 1670, 0,
	0, 0, 0, 0, 1682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 1652, 0,
	1662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1672, 0, 0, 0, 1647,
	1648, 1654, 1675, 1653, 1649, 1674, 1646, 1644, 1645, 1637,
	1638, 1639, 1640, 1642, 1643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1658,
	1659, 1660, 1661, 0, 0, 0, 0, 0, 0, 1641,
	0, 0, 0, 3307, 2952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	1634, 0, 1666, 1667, 1668, 1676, 1677, 1678, 1673, 0,
	0, 1683, 0, 0, 0, 0, 0, 1663, 1665, 0,
	1669, 1664, 0, 0, 0, 2947, 0, 0, 1636, 0,
	0, 0, 0, 1679, 0, 1680, 1682, 0, 0, 0,
	1672, 0, 1650, 1651, 1647, 1648, 1654, 1675, 1653, 1649,
	0, 1646, 1644, 1645, 1637, 1638, 1639, 1640, 1642, 1643,
	1671, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 1656, 1655, 0, 0, 0, 0, 0, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 1634, 0, 1666, 1667, 1668, 1676, 1677, 1678,
	0, 1658, 1659, 1660, 1661, 0, 0, 0, 0, 0,
	0, 1641, 1669, 1664, 0, 0, 0, 0, 0, 0,
	1636, 1662, 0, 0, 0, 0, 0, 0, 1682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1673, 1657, 0, 1683, 0, 0, 0, 0, 0, 1663,
	1665, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1655, 1679, 1674, 1680, 0, 0,
	0, 0, 1652, 0, 1650, 1651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 1659, 1660, 1661, 0, 0, 0,
	0, 1670, 0, 1641, 0, 0, 0, 0, 0, 0,
	0, 1672, 0, 0, 0, 1647, 1648, 1654, 1675, 1653,
	1649, 0, 1646, 1644, 1645, 1637, 1638, 1639, 1640, 1642,
	1643, 0, 1673, 0, 0, 1683, 0, 0, 0, 0,
	0, 1663, 1665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1662, 0, 0, 0, 1679, 0, 1680,
	0, 0, 0, 0, 0, 0, 1650, 1651, 0, 0,
	0, 1633, 1634, 1657, 1666, 1667, 1668, 1676, 1677, 1678,
	0, 0, 0, 0, 1671, 0, 0, 0, 0, 0,
	0, 0, 1669, 1664, 0, 1656, 0, 2887, 1674, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 1682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1681, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 1670, 1655, 0, 0, 0, 0, 0,
	0, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2914, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1672, 0, 1662, 0, 1647, 1648, 1654,
	1675, 1653, 1649, 0, 1646, 1644, 1645, 1637, 1638, 1639,
	1640, 1642, 1643, 1633, 1634, 1657, 1666, 1667, 1668, 1676,
	1677, 1678, 0, 1658, 1659, 1660, 1661, 0, 0, 0,
	0, 0, 0, 1641, 1669, 1664, 0, 0, 0, 0,
	1674, 0, 1636, 0, 0, 0, 0, 0, 0, 0,
	1682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1673, 0, 0, 1683, 0, 0, 0, 0,
	0, 1663, 1665, 0, 0, 0, 1635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1655, 1679, 0, 1680,
	0, 0, 0, 0, 1652, 0, 1650, 1651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1672, 0, 0, 0, 1647,
	1648, 1654, 1675, 1653, 1649, 0, 1646, 1644, 1645, 1637,
	1638, 1639, 1640, 1642, 1643, 1681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1658, 1659, 1660, 1661, 0,
	0, 0, 0, 1670, 0, 1641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 1634, 0, 1666, 1667,
	1668, 1676, 1677, 1678, 1673, 0, 0, 1683, 0, 0,
	0, 0, 0, 1663, 1665, 0, 1669, 1664, 0, 0,
	0, 0, 0, 0, 1636, 1662, 0, 0, 0, 1679,
	0, 1680, 1682, 0, 0, 0, 0, 0, 1650, 1651,
	0, 0, 0, 0, 0, 1657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1671, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 1656, 1655, 0,
	1674, 0, 0, 0, 0, 0, 1652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1681, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1658, 1659, 1660,
	1661, 0, 0, 0, 0, 0, 0, 1641, 0, 0,
	0, 0, 0, 0, 0, 1672, 0, 1662, 0, 1647,
	1648, 1654, 1675, 1653, 1649, 0, 1646, 1644, 1645, 1637,
	1638, 1639, 1640, 1642, 1643, 0, 1673, 1657, 0, 1683,
	0, 0, 0, 0, 0, 1663, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1679, 1674, 1680, 0, 0, 0, 0, 0, 0,
	1650, 1651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1672, 0, 0,
	0, 1647, 1648, 1654, 1675, 1653, 1649, 0, 1646, 1644,
	1645, 1637, 1638, 1639, 1640, 1642, 1643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1662,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1672,
	0, 0, 0, 1647, 1648, 1654, 1675, 1653, 1649, 0,
	1646, 1644, 1645, 1637, 1638, 1639, 1640, 1642, 1643,
}
var sqlPact = [...]int{

	10086, -1000, -1000, -1000, -1000, 304, -1000, -1000, 294, 286,
	283, 281, 276, 275, 272, 264, 263, -1000, -1000, -1000,
	-1000, -1000, -1000, 261, -1000, -1000, 254, -1000, 250, 240,
	239, -1000, -1000, 238, -1000, 220, -1000, -1000, -1000, -1000,
	216, 214, 206, 77818, 77325, 78304, 2181, 94969, 83178, 2021,
	69465, 94476, 68972, 93983, 93490, 2584, 205, -1000, 92997, 202,
	196, 195, -1000, 92504, -1000, 1806, -1000, 187, 4438, 56622,
	185, 184, 182, 2099, 180, -1000, 167, 164, -1000, 9625,
	1617, -1000, 162, 157, -1000, 7107, 295, 82199, 154, 153,
	2411, 150, 149, 56128, 146, 145, 2369, 2787, -1000, -1000,
	2043, -1000, -1000, 143, 142, 138, 136, 132, 131, 129,
	128, 122, 120, 119, -1000, 118, 117, 116, 115, 114,
	111, 109, 108, -1000, 107, 106, 105, 103, 101, 95,
	93, 92, 91, 90, 89, 87, 86, -1000, 12052, 85,
	1866, 1697, 1695, 1628, 1607, 1604, 965, 84, 83, 82,
	81, 76, 75, 74, 73, 72, -1000, 71, 70, 69,
	68, 67, 66, 65, 59, 171, 58, 56, 51, 49,
	45, 40, 39, 2501, -1000, 1567, 1398, 26434, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 100801, 95455, 38, -8,
	35, -1000, 3157, 1011, 46719, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 373, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 531, 2071, 781, -1000, -1000, -1000, 92018,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2180, -49,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 779, -1000, 2173,
	289, 2097, -1000, -1000, -1000, -1000, -1000, 95455, -1000, 1047,
	-1000, -1000, 3604, 3597, 2078, 777, 91532, -1000, 1833, -1000,
	910, 27985, -1000, 1279, -1000, 27985, 372, -1000, -1000, -1000,
	-1000, -1000, -1000, 3596, 3595, 3594, 3593, -1000, -1000, 68479,
	20176, 67986, 67493, 91039, 19673, 76832, 76339, 90546, 63566, 1046,
	-1000, -1000, -1000, 1476, -1000, -1000, -1000, -1000, -1000, -1000,
	12, 61051, 3424, 95455, -1000, 361, -1000, -1000, -1000, -1000,
	-1000, -1000, 40092, 512, 39563, 642, 39034, 466, -1000, -1000,
	-1000, 63063, -1000, 3592, 3591, 1137, 3590, 3086, 100315, 1757,
	3589, 1860, 1225, 3585, 3583, 3580, 3579, 3573, 3572, 1471,
	90053, 2847, 89560, 1765, 62560, 1035, 75846, 78304, 2590, 89067,
	1475, 1445, -1000, -1000, -1000, -1000, 2966, 2756, 2717, 52685,
	-1000, -1000, 3571, 3569, 3568, 3567, 3564, 99829, 1753, 3563,
	2407, 3561, 3560, 3558, 3557, 3556, 3555, 3553, -1000, 75353,
	1034, 74860, 74367, 3259, 88574, 73874, 88081, 62057, 38505, 1109,
	-1000, -1000, -1000, 48705, 6387, 5651, 87588, 50716, 78304, 78304,
	-1000, -1000, -1000, -1000, -1000, 37976, 390, 37447, 858, -1000,
	-1000, 49213, 2789, -1000, -1000, -1000, -1000, 36918, 313, 36389,
	774, 95455, -1000, 2846, 1906, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1804,
	1573, 3429, 2618, 61554, 1989, 1343, 3176, 2961, 2950, 1461,
	3552, 3551, 2461, 2947, 2940, 2914, 2908, 2895, 1438, 2475,
	285, 25905, 2808, 1711, 35860, 1542, 1427, 2884, 2872, 3446,
	1950, 1949, 2035, 67000, 3548, 3547, 3144, 2862, 2861, 2784,
	-1000, -1000, -1000, -1000, 1403, -1000, -1000, -1000, -1000, -1000,
	69951, -1000, -1000, 1653, -1000, -1000, 1653, -1000, -1000, -1000,
	-1000, -1000, 1370, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1567, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1999, -1000, 2076, -1000, -1000,
	2420, 3067, 3067, 3067, 3262, 492, 491, -1000, 171, -1000,
	-1000, 106802, -1000, -1000, 40609, 40609, 40609, 40609, 40609, 40609,
	40609, 2045, -1000, 775, -1000, -1000, 809, -1000, 772, 614,
	-1000, -1000, -1000, -1000, -1000, -1000, 770, -1000, -1000, -1000,
	-1000, -1000, -1000, 3424, -1000, 22743, -1000, -1000, -1000, 518,
	768, 40609, -1000, -1000, 3458, 3457, 990, -1000, 359, 943,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2844, 767, 766, -1000, 764, 763, 761, 757,
	755, -1000, -1000, -1000, 754, 753, 743, 740, 738, 737,
	736, 735, -1000, 1981, -1000, -1000, -1000, -1000, -1000, -1000,
	679, 673, 673, 673, -1000, 1024, -1000, -1000, -1000, 365,
	665, 364, 659, 658, 656, -1000, 732, 731, 729, 725,
	724, 715, 712, 708, 707, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1023, -1000, -1000, -1000, -1000, 11, 95455, -1000, 531,
	11, -1000, -1000, 706, -1000, 30065, 30065, 30065, -1000, -1000,
	2171, 40609, -1000, 2973, -1000, 17, 17, 881, 47703, -1000,
	45717, 881, 299, 817, 52191, -1000, 2782, -1000, -1000, 704,
	348, -1000, -1000, -1000, -1000, 20677, 2781, 95455, 95455, 78304,
	78304, 78304, 2989, 40609, -1000, -1000, 58586, 95455, 78790, 3367,
	59072, 58095, 95455, 2838, -1000, 3140, -1000, -1000, 95455, -1000,
	40609, -1000, 3366, 1786, 64558, 3311, 0, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2365, 2382, 1119, 2205, -1000, 3043,
	1931, -1000, 27985, 3093, -1000, -1000, -1000, 346, 20677, -1000,
	-1000, -1000, -1000, -1000, 2917, 3004, 1329, -1000, 2204, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1880, 3003,
	-1000, 2907, 3002, 1855, -1000, -1000, 2425, -1000, -1000, 3135,
	-1000, -1000, 1970, 3001, 19, -1000, -1000, 2400, -1000, -1000,
	1940, -1000, -1000, 994, 2999, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 73381, 50215, 49213, 61051, 7, -1000,
	-1000, -1000, -1000, -7, -1000, 19170, 106802, -1000, -1000, -1000,
	-1000, 1898, 106802, 894, -1000, -1000, 2995, -1000, 106802, 891,
	-1000, -1000, 2993, -1000, 2834, -1000, -1000, -1000, -1000, 3545,
	-1000, 3544, 2279, 3543, 3542, 3541, -1000, 1831, 1959, 3537,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 72895, 2170, -1000,
	-1000, 71909, -1000, 2277, -1000, 72402, 1033, -1000, 994, 2274,
	-1000, 81706, 985, -1000, 3536, 3230, 2586, 994, 2265, -1000,
	-1000, -1000, -1000, -1000, 54160, -1000, 54160, -1000, 54160, -1000,
	1630, -1000, 99343, 17, 17, 3424, -1000, -1000, -1000, -1000,
	-1000, 2990, 3535, 3532, 3531, -1000, 95455, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 207, 2986, -1000, -1000, 81220, 207,
	2984, -1000, 207, 2983, -1000, 80734, -1000, -1000, 2194, 2982,
	-1000, 211, 2977, -1000, -1000, 209, 2976, -1000, -1000, -106,
	2972, -1000, -1000, 106802, -1000, -1000, -1000, -13, -1000, -1000,
	-1000, 1011, -1000, 48197, -1000, 48197, 87095, 64067, 963, 759,
	55634, 106802, -1000, -1000, -1000, -1000, 106802, -1000, -1000, -1000,
	-211, -1000, -1000, 64067, 49213, 106802, -1000, -1000, -1000, -1000,
	106802, -1000, -1000, -1000, 64067, 71909, -1000, 86602, 71423, -1000,
	-1000, 1435, 2464, -1000, -1000, -1000, 64067, 1254, 64067, 64067,
	64067, -1000, 86109, -1000, -1000, 2028, 1348, 3127, 2022, 78304,
	-1000, 1857, -1000, -1000, -1000, 3163, -1000, -1000, 2809, -1000,
	57604, 80248, -1000, 79762, -1000, 79276, -1000, 78304, -1000, 78304,
	-1000, 3530, 3529, 3524, 3521, -1000, 3520, 3150, -1000, 106802,
	3145, -1000, 3518, 3306, 2808, 106802, -1000, 2874, 1615, 1611,
	95455, -1000, -1000, 95455, -1000, 95455, -1000, -1000, -1000, 1547,
	-1000, -1000, 2362, -1000, -1000, -1000, -1000, 78304, -1000, -1000,
	-1000, -1000, -1000, -1000, 2807, -1000, 1690, -1000, 1816, -1000,
	1425, -1000, -1000, 213, -1000, -1000, 0, -1000, 98857, -1000,
	2420, -1000, 95455, -1000, 2337, 2796, 2803, 1646, 2191, 2502,
	-1000, 35331, 2409, 43194, 2196, 171, -1000, -1000, 171, 171,
	27468, -1000, -1000, 59072, 59072, 20677, 1380, 40609, 40609, 40609,
	40609, 40609, 40609, 40609, 40609, 40609, 40609, 40609, 40609, 40609,
	40609, 40609, 40609, 40609, 40609, 40609, 40609, 40609, 40609, 40609,
	40609, 40609, 40609, 40609, 40609, 40609, 40609, 40609, 40609, 40609,
	40609, 40609, 2139, 40609, 1368, 40609, 40609, 40609, 40609, 1738,
	-1000, -1000, 1890, 562, 1956, -1000, 3412, 3412, 3412, 484,
	484, 11308, 11308, 605, 3517, 809, -1000, 40609, -1000, 80,
	40609, 21180, -1000, 491, 8338, 2338, -1000, 488, 21709, -1000,
	-1000, -1000, 22743, 614, 34802, 40609, 1015, 106802, -1000, -1000,
	1510, 3428, 18669, 2855, 2668, 701, 867, 841, 25376, 24847,
	24318, 23789, 609, 40609, 40609, 40609, 40609, 40609, 40609, 40609,
	40609, -1000, -1000, 3435, -1000, 3428, -1000, -1000, -1000, -1000,
	3428, 1364, 1347, 3428, -1000, 3428, 3428, 3133, 3133, 34285,
	33756, 33227, 43711, 32698, 40609, 23260, 32169, 31640, -1000, 95455,
	11, 3363, 40609, 173, -1000, 105500, -1000, 173, 173, 698,
	-16, 106802, 2419, 2419, 47211, 2154, 2064, 2064, 2064, -1000,
	881, 14632, 881, 85132, 2069, 881, 881, 327, 368, 487,
	45225, 2973, 85132, 793, 697, 32, 31, 30, -1000, -1000,
	29, 23, -1000, -1000, 78304, 692, 21180, 20677, 326, 1516,
	-18, 2498, 2493, 2489, -1000, 2487, 1813, -21, 1362, 78304,
	95455, -163, -1000, 222, -23, -1000, 1285, 315, 3428, -1000,
	-1000, -1000, -1000, -1000, 3516, 3515, -1000, 1022, 690, 689,
	459, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 679,
	673, 673, 673, -1000, 365, 665, 364, 659, 658, 656,
	-1000, -1000, -1000, -1000, -1000, 2778, 78304, 95455, -7, 78790,
	78304, 890, -26, 1142, 0, -1000, -1000, -1000, 64558, 1653,
	-1000, 1725, -1000, -1000, -1000, -1000, -1000, -1000, 1481, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 990, -1000, -1000,
	-1000, -1000, -1000, -1000, 3421, 3419, 9, -1000, -1000, 20677,
	-1000, -2, 1669, 1772, -1000, 66507, 2316, 3132, 3117, 1623,
	-1000, 1539, 1358, 3256, 69951, 3328, 3345, 550, -1000, 2772,
	-1000, -1000, 909, 1636, 1770, 1351, 69951, 2907, -1000, 59072,
	-1000, 2543, 3251, 1382, 1360, 1382, 1382, 1357, -1000, 69951,
	1769, 1346, 1345, -1000, 1342, 1337, -1000, -4, 3323, 3343,
	191, -1000, 2736, 1333, -1000, -1000, 78304, 20677, 1503, 1526,
	1747, 1323, 8, -1000, 3320, 3318, 1322, 1317, -1000, 4382,
	-1000, 64067, 1814, 2970, 2616, 845, 2614, -1000, -1000, 845,
	7, 61051, 95455, 309, -1000, 80, 40609, 40609, 80, 40609,
	80, 3305, -1000, -1000, 2964, -1000, -1000, -1000, 3513, 1937,
	2403, -1000, -1000, 652, 2263, 2735, 95455, 2505, 2, 78304,
	-1000, 2963, 2907, 2262, -1000, -1000, 70930, -1000, 2958, 531,
	2261, -1000, 726, 3512, -1000, 98371, -1000, 3140, 1356, 2955,
	1091, 721, 3362, -1000, 721, 54652, -1000, 95455, -1000, -1000,
	95455, -1000, -1000, -1000, 3511, -1000, 78304, -1000, -1000, 78304,
	207, 2954, -1000, 78304, -1000, 78304, 192, 2953, -1000, -1000,
	95455, -1000, 78304, 78304, -1000, 95455, 95455, 64067, 64067, 5176,
	65535, -28, -29, 485, -1000, 85623, 95455, 1090, 66021, 95455,
	3076, 984, 49213, -1000, -36, -211, 2613, 963, 963, 845,
	-1000, 845, -1000, 78304, 2802, -1000, -1000, 64067, 963, 963,
	963, -1000, -1000, -1000, -1000, 3510, 3509, 3508, -1000, -1000,
	-1000, 993, 78304, 95455, 78304, -1000, -1000, 95455, -1000, 95455,
	-1000, 993, 95455, 993, 95455, 993, 95455, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 80, 40609, -1000, -1000, 3504, 1645,
	-1000, 2799, -1000, 2798, -1000, 61, -1000, -1000, -1000, -1000,
	-1000, 1982, 78304, 78304, 78304, 78304, 95455, 78304, -1000, 69951,
	-1000, 2337, 2796, -1000, -1000, -1000, -1000, -1000, -1000, 1467,
	2145, -1000, 2459, -1000, 1609, -1000, -1000, -1000, 106802, 44212,
	-1000, -1000, 106802, 1892, -1000, 42677, 42160, -1000, -1000, 1698,
	78304, 2546, -1000, 2546, -174, -1000, 105176, 2456, 78304, -1000,
	-1000, -1000, -1000, -1000, 908, 1391, 1391, 1188, 1188, 1188,
	1188, 3307, 1058, 1234, 510, 6317, 6317, 1012, 1012, 1012,
	1012, 1012, 6317, 363, 484, 484, 363, 363, 363, 363,
	363, 484, 484, 484, 6317, 6317, 6317, 11308, 106984, 8939,
	40609, 40609, 1316, 1885, 562, 8522, 40609, 1039, 1039, 1039,
	1039, -1000, 1968, -1000, -1000, -1000, -1000, 2731, 646, 43711,
	43711, -1000, -1000, -1000, -1000, 22226, 40609, -1000, -1000, -1000,
	-1000, 31111, -1000, -1000, 104716, -288, 483, -127, 5, -1000,
	40609, 40609, 40609, 482, -1000, 308, 40609, 95455, -1000, 102390,
	791, -154, -1000, -39, 1371, -1000, 40609, -1000, -1000, 1292,
	-1000, 1289, 1288, 1273, -1000, 645, 480, -1000, 307, -1000,
	2050, 644, 639, 40609, -1000, -1000, -1000, -1000, -1000, 104618,
	-1000, -1000, 104388, -1000, -1000, 104158, -1000, -1000, 104060, -1000,
	-1000, -1000, 106660, 102160, 101831, 101781, 7103, 14059, 13884, -44,
	472, -46, 469, 906, 887, 468, 463, 461, -47, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -54, 457, -1000,
	2729, -127, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	456, -1000, 454, -1000, 106430, -127, 453, 7637, -1000, 43711,
	43711, 43711, -1000, 450, -1000, 105318, -1000, 106288, 30594, 30594,
	30594, 447, 106106, 40609, -127, -55, -1000, -57, -1000, -1000,
	569, -63, 1005, 30065, 46225, 20677, -1000, 1005, 1005, 40609,
	-1000, 40609, 2473, -1000, -1000, -1000, 2469, 1961, 2419, 47211,
	-1000, -1000, -1000, -1000, 85132, -1000, 3424, 2492, -1000, 85132,
	-1000, -1000, 95455, 531, -1000, 85132, 85132, 20677, 881, -1000,
	881, 85132, 625, -1000, -1000, -1000, -1000, -1000, 444, 51207,
	5, 300, 20677, 994, -1000, 2510, 2510, 2510, 2510, -1000,
	-1000, 95455, 1271, 4, -100, 3387, -1000, 1991, -1000, 59072,
	-1000, 807, 1161, 20677, -1000, -1000, -1000, 638, -1000, 3428,
	3428, -1000, 3428, 95455, 2728, 139, 110, 1002, 27985, -1000,
	1653, -1000, -1000, 1504, -1000, 1943, -1000, 1258, -1000, -1000,
	-1000, -1000, 27985, -1000, 2658, 95455, 95455, 78304, -1000, 95455,
	-1000, 2257, 97885, 2253, 59072, 95455, -1000, -1000, 636, 631,
	2447, 2440, 1087, 95455, 95455, 2433, 97399, 96913, 95455, 2005,
	40609, 60565, 2094, 2330, 80, 80, -1000, -1000, 80, 629,
	1455, 78304, 78304, 95455, 78304, 1808, -1000, -1000, -1000, -1000,
	-1000, 70437, -1000, -1000, 3434, 3432, -1000, 1382, -1000, -1000,
	-1000, 1382, 2907, 1710, 95455, 78304, 60565, 1745, 95455, 1996,
	80, 80, -1000, -1000, 80, 627, 20677, 1963, -1000, 2840,
	95455, 3455, 95455, 95455, 95455, 60565, 3165, 96427, 95455, 95455,
	60565, 4382, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 60074, 1076, 994, 1740, 1256, 69951, 49213, 983, 49213,
	2595, -1000, -1000, 18168, -1000, 106802, 106802, -1000, 106802, -1000,
	57113, 95455, -1000, 1031, 95455, 66021, 958, 2952, 53668, -7,
	963, 64067, 78304, 2, 95455, -1000, 2907, 2948, 531, 2251,
	-1000, 64067, 3360, 2946, 621, 3503, 3498, -1000, 2168, 2249,
	-1000, -1000, 95941, 2949, 831, 95455, 1005, 47211, 1942, -1000,
	51700, 1056, 95455, 1840, 102, -1000, -1000, -1000, 42, 95455,
	-1000, 3494, -1000, -1000, 207, -1000, 78304, 207, 207, -1000,
	78304, 78304, 2194, -1000, 211, -1000, 209, -1000, -106, -1000,
	-1000, 5176, 5176, 963, -201, 618, -1000, 872, 871, 49714,
	64067, -68, -1000, -1000, -1000, -1000, -1000, 78304, 95455, 762,
	2583, 95455, -70, -1000, 296, 617, -1000, 3216, -1000, -1000,
	984, 49213, 2726, -1000, -1000, 1000, -1000, 1395, 963, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16,
	-7, -7, -1000, 993, -1000, 993, -1000, 993, -1000, 106802,
	-1000, -1000, 1641, 1637, 95455, -1000, 20677, 95455, 78304, 20677,
	78304, 2795, 2794, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1117, -1000, 1892, 2133, -1000, 614, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2342, -1000, 1, 27468,
	2211, -1000, -1000, 78304, 15, 40609, 40609, 7617, 7278, 40609,
	43711, 43711, -1000, 40609, 4662, -1000, -1000, -1000, -1000, -1000,
	2722, 613, 40609, 59072, 6739, 4631, -1000, 434, 13304, 363,
	-1000, 40609, -1000, 432, 29548, -1000, 105730, -42, -71, -1000,
	15146, -127, -76, -1000, -1000, 802, -1000, 2921, -1000, 40609,
	105835, 2311, 1977, 1886, 1689, 3428, 3454, 17667, -1000, 55143,
	1006, 2084, 103830, -1000, -1000, -1000, -1000, 59072, 59072, 40609,
	40609, -1000, 40609, 40609, 40609, -1000, -1000, -1000, 3428, 888,
	-1000, -1000, -1000, 888, -1000, -1000, 1382, -1000, 1382, -1000,
	40609, -1000, -1000, 2714, 40609, -1000, 59072, 59072, 43711, 43711,
	43711, 43711, 43711, 43711, 43711, 43711, 43711, 43711, 43711, 43711,
	43711, 43711, 43711, 43711, 43711, 43711, 43711, 2361, 43711, 3405,
	3405, 3405, -1000, 2712, 2714, 40609, 40609, 59072, 431, 430,
	429, -1000, 40609, -127, -1000, -1000, 5176, 607, -1000, 2317,
	-1000, 2665, -1000, 40609, -1000, -196, -1000, 2973, -1000, -1000,
	2665, 2665, -81, 106802, 47211, 47211, -1000, 606, 40609, 2467,
	-1000, -1000, 790, -284, -1000, 870, -1000, -1000, -1000, -1000,
	-1000, 531, -1000, -1000, -1000, 193, 85132, 85132, 788, -1000,
	-86, -1000, -1000, -91, -1000, 3357, 427, 20677, -1000, -1000,
	3118, -1000, -1000, -1000, -1000, -1000, -1000, -7, 95455, 95455,
	2079, 3453, -1000, 3430, 799, 787, 172, 3428, 426, 425,
	423, -7, 95455, 95455, 95455, -1000, 2496, -1000, 0, -1000,
	-1000, -1000, 40609, -1000, -1000, 3126, 1253, 1250, -1000, -1000,
	2944, -1000, 2241, -1000, 1061, -1000, 1799, -1000, 40609, 40609,
	602, 600, 3491, 1889, 3489, 1089, 2941, 2194, 2938, 2194,
	-1000, -1000, 919, -1000, 106802, -1000, -1000, -1000, -1000, 599,
	597, -1000, -2, 1627, 1729, 999, -1000, -1000, 40609, 40609,
	84646, -1000, 442, 3135, 14, -1000, -1000, 1724, 1241, -1000,
	-1000, -1000, -1000, 2907, 1720, 1221, -1000, -1000, -1000, 998,
	-1000, -1000, 995, -1000, -1000, 40609, -1000, -4, 1179, 3314,
	2236, 78304, 1173, -1000, 1169, -1000, -1000, -1000, 3317, 2194,
	2937, 1215, -1000, -1000, -1000, -1000, -1000, 59573, -1000, 95455,
	78304, 1679, 845, -1000, 2297, 845, 983, 2706, -1000, 2491,
	3486, 78304, 3480, 421, -94, -5, 59072, 3356, -1000, 2185,
	635, 78304, 886, -1000, 3424, -1000, -1000, -1000, -1000, 78304,
	3354, 2920, 994, 80, 78304, 3452, -1000, -1000, 78304, 2919,
	2167, 2232, 2351, 831, 65049, -1000, 994, 2083, -92, -1000,
	1840, 29019, 3121, -97, -1000, -1000, -1000, 1005, 54652, 47211,
	40609, 3479, -99, -1000, -1000, 207, -1000, -1000, -1000, 192,
	-1000, -1000, -1000, -1000, -1000, -1000, 83669, 83669, 64067, 64067,
	64067, 963, 95455, 95455, 66021, -1000, 596, 95455, 95455, 594,
	-1000, 95455, 95455, 3478, 64067, -6, 592, -1000, 869, 868,
	865, -1000, -1000, -1000, -1000, -1000, -1000, -211, 80, -1000,
	2100, 78304, -1000, 17166, -1000, -1000, -1000, -1000, -1000, 993,
	-1000, -1000, 2008, 2195, 2008, 1843, 1835, -1000, 2129, -1000,
	-1000, -1000, -1000, 2462, 3141, 20677, 3292, 1039, 40609, 40609,
	4329, 4422, 916, 1039, 40609, 40609, 59072, 11186, -105, 40609,
	40609, -1000, 40609, 785, 106802, 3450, 40609, 411, 410, -1000,
	-1000, -1000, 3427, -1000, -1000, -1000, 106802, 40609, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 409, -1000, 140, -1000, -1000,
	-1000, 101287, -1000, 40609, 407, 3248, -1000, 406, 405, 244,
	5423, 103600, 103502, 103272, 404, -1000, -1000, 395, 394, 106802,
	2712, 106802, -1000, -1000, 1198, 1198, 1320, 1320, 1320, 1320,
	3405, 329, 1791, 1339, 931, 931, 931, 544, 966, 966,
	931, 931, 931, 2694, 2345, 589, 5553, -1000, -1000, 106802,
	106802, 393, -1000, -1000, -1000, -127, 392, 5176, -1000, 2654,
	3236, 106802, -1000, 47211, 2654, 2654, -1000, -1000, 1961, 95455,
	106802, 47211, -1000, 2492, -1000, 15658, -1000, 20677, -1000, -1000,
	-1000, -1000, 3424, -1000, 51207, -1000, 587, -1000, 43, 3118,
	-1000, 864, -1000, -7, -7, -1000, -1000, 784, 3476, 798,
	20677, 388, -1000, -1000, -1000, -7, -7, -7, -1000, 3066,
	106802, 95455, 95455, 95455, 2918, -1000, 4298, -1000, 1087, 103042,
	-108, -1000, 105176, 40609, 95455, -1000, -1000, 1848, 2410, 1129,
	-1000, 3166, 95455, -1000, 95455, -1000, -1000, 95455, 95455, 78304,
	95455, 2890, -110, 106802, -15, -1000, 863, -1000, 1344, -1000,
	16665, 95455, 78304, 95455, 78304, 2036, 2883, -115, 20677, -1000,
	3449, 3448, 2900, 3168, 3447, 95455, -1000, 95455, 78304, 3064,
	-1000, -1000, -1000, -1000, 1712, 1156, 983, -41, 586, -1000,
	856, -1000, -1000, 850, 983, -1000, 64067, 49213, -1000, 531,
	-1000, 2579, -1000, 82685, 2161, 80, -1000, 3474, 84160, 582,
	-1000, 2095, -1000, 783, 2907, 80, 78304, -1000, -1000, 531,
	386, -64, -1000, 1065, 20677, 78304, 2899, 2378, 831, 65049,
	-1000, 1356, 2502, -1000, -69, -1000, 683, 80, 2083, -1000,
	-92, 106802, -1000, 837, -1000, -1000, -1000, -118, -1000, -1000,
	384, -1000, 3061, 3058, -1000, 2664, 40609, 581, 577, 95455,
	3057, -1000, -1000, -129, 2642, 2642, 64067, 49213, 64067, 984,
	-1000, 2273, -1000, -1000, -1000, -1000, -1000, 20677, 1635, -1000,
	574, 573, -1000, -1000, -1000, -1000, 3141, 1039, 1039, 40609,
	40609, 40609, 1039, 11186, -131, -1000, 1039, 1039, -127, -1000,
	-1000, 105730, -1000, -1000, -1000, 106802, -1000, 16164, 2015, -1000,
	102944, -1000, 27468, -1000, -1000, 40609, 40609, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 43711, 2688, 572, 59072, -1000,
	-1000, 379, 967, 40609, 40609, 2973, 967, 967, -1000, -132,
	-1000, -1000, -1000, 3424, 43, -1000, -1000, 3473, 20677, -1000,
	64067, 796, -1000, 3472, -1000, -1000, -1000, -1000, -1000, -1000,
	95455, -1000, 95455, -1000, 20677, 95455, 2667, 2221, -1000, -1000,
	2432, 571, 43711, 78304, 892, -1000, 3381, 2663, 1911, 40609,
	2211, -134, -140, 2219, -1000, -1000, 2218, 40609, -1000, 59072,
	567, 2194, 2194, -142, -143, -1000, -1000, 40609, 1154, 95455,
	28502, -1000, 3470, 3135, -1000, -1000, -1000, -1000, 95455, 40609,
	1149, -1000, -1000, -1000, 3445, 2194, 20677, -1000, 2194, 2194,
	3168, 1128, 95455, 78304, -1000, 2247, 2247, 64067, 49213, -1000,
	-106, 983, 3353, 1996, 2609, -1000, -1000, -1000, -1000, 2429,
	-1000, -1000, 95455, 2417, 972, -1000, -145, -1000, 836, 832,
	66021, 958, 937, -1000, -1000, -1000, 531, 3349, -1000, 3444,
	566, 95455, 2164, 565, 20677, -1000, 831, 65049, -1000, 2949,
	1840, -1000, 2226, 95455, 3114, -1000, 2502, 562, -1000, 963,
	560, 559, 3160, 3160, -148, 40609, 40609, -153, 557, 963,
	-1000, -162, -1000, -1000, -1000, -1000, -111, -1000, 883, 880,
	-1000, -1000, 78304, 78304, 40609, 40609, -1000, 1039, 1039, 1039,
	-1000, 375, -1000, -1000, 2083, 3220, -1000, -120, 102714, 102484,
	5588, 43711, 59072, -165, -1000, -1000, 95455, 106802, -127, -1000,
	-1000, -1000, 610, -1000, -1000, 3466, -1000, -1000, 2096, -1000,
	-1000, -1000, 95455, 2229, -1000, 1083, 40609, 5553, 556, 40609,
	-1000, 3341, -1000, 2576, 2709, 2579, 555, -1000, -1000, -1000,
	-1000, -1000, 1064, 1878, -1000, -1000, 106802, 3168, 40609, -1000,
	-1000, 554, 552, 106802, 549, 830, 2684, -1000, -1000, -1000,
	-1000, 106802, 547, 3314, -1000, -1000, -1000, -1000, 2194, 78304,
	-1000, -1000, -1000, -167, -1000, -1000, 1928, 80, 958, -1000,
	2030, 2161, 545, -1000, -1000, 2148, 2488, -1000, 84160, 27985,
	27985, 369, 3340, 937, -1000, 3416, -1000, 3336, 80, -1000,
	40609, -1000, 78304, 40609, 2163, 65049, -1000, 2351, -1000, -1000,
	-168, 95455, 1840, -1000, -1000, 64067, 64067, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1064, -173,
	-176, -1000, 64067, -1000, -1000, 2273, -1000, 95455, -1000, 95455,
	-1000, -1000, -183, -184, -1000, 2068, 40609, 27468, -1000, -1000,
	5588, -185, -1000, -121, -1000, 3332, -1000, -1000, -1000, -1000,
	2898, 2646, 7660, 2327, 95455, 6110, -1000, 2698, -1000, -1000,
	1996, 95455, 2579, 2645, 78304, 1067, -186, 2008, 2008, 40609,
	26951, 2029, 40609, -1000, -1000, 3168, -1000, 2677, 3410, -1000,
	2148, 78304, 95455, -1000, 3147, -1000, 3056, -1000, -1000, -1000,
	2579, 80, -1000, -1000, 80, -1000, -191, 1065, -199, 78304,
	-1000, 2378, 1005, -1000, -1000, -200, -202, 1911, 1064, 932,
	-209, -1000, -217, -219, -1000, -1000, 330, 41643, 41643, 41643,
	-127, -174, -1000, 95455, 543, 2865, 981, -1000, 2149, 1798,
	112, 1072, -1000, -1000, 2663, -220, -1000, 977, 531, -1000,
	40609, 1064, -227, -1000, 1055, -228, -1000, 1053, -230, -1000,
	2681, -1000, -235, 2194, 974, 3304, -1000, -1000, -1000, -1000,
	530, -238, -1000, -1000, 2319, -1000, 1996, 972, -1000, 1064,
	529, 1911, 527, -1000, 2975, 963, 963, 2579, 1911, 1005,
	525, 963, -1000, -1000, -1000, 2909, -1000, 44713, 2146, 1827,
	104946, 2909, 2909, -1000, -1000, 95455, 3275, -1000, 2153, 2151,
	1457, -1000, -1000, -1000, -1000, -1000, -1000, 1005, -1000, 3268,
	2327, 106802, 2579, -1000, 2008, 2602, -1000, 2008, 2680, -1000,
	2025, -1000, -1000, -1000, 2878, 3404, 95455, -1000, 95455, 1797,
	1783, 3463, 958, 2148, 1911, 40609, 2579, 40609, 1296, -1000,
	-1000, 1996, 2579, -1000, -1000, -1000, 1829, 3348, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 829, -1000, 3033, -1000,
	1098, 1965, 1965, -1000, 828, 2149, -1000, -1000, 519, -1000,
	498, -1000, 1775, -1000, -1000, -240, -1000, -1000, 3462, -1000,
	2148, -1000, 2579, -243, 1996, -248, -1000, 1610, 932, 1996,
	1822, -1000, -1000, 2067, 41126, 40609, -1000, 3390, -1000, -1000,
	2393, -1000, 40609, 2663, 40609, 40609, 2092, 2169, -1000, -1000,
	1996, 1064, 932, 1911, 54652, 1005, 932, -1000, -1000, -1000,
	106802, -1000, -1000, -1000, 106802, -1000, -250, -259, 53177, -1000,
	-1000, -1000, 932, 1911, 1005, 2579, -229, -1000, 1005, 1996,
	1148, -201, 83669, 1005, 2579, -1000, 1996, -1000, -1000, -1000,
	497, -265, -1000, 1996, 932, 40609, -1000, 932, 1005, -276,
	1005, -1000, 1996, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4229, 4228, 4227, 4225, 4224, 4221, 4219, 4218, 4217,
	4215, 4213, 4210, 4209, 4208, 4206, 4205, 4204, 4203, 4202,
	4200, 4198, 4197, 4196, 4195, 4194, 4192, 4185, 4184, 4183,
	4179, 4177, 4169, 4168, 4164, 4162, 4160, 4159, 4155, 4154,
	4152, 4151, 4150, 4149, 4148, 4147, 4146, 4145, 4144, 4142,
	4141, 4140, 4139, 4138, 36, 4136, 4133, 4132, 4131, 4129,
	4127, 4126, 4124, 4123, 4120, 4118, 4117, 4115, 4113, 4110,
	4109, 4108, 4107, 43, 4106, 240, 4104, 4103, 4102, 4101,
	4100, 4099, 4097, 4090, 4089, 4087, 4086, 4085, 239, 4084,
	126, 4082, 4080, 4078, 4077, 4076, 237, 4075, 4073, 4069,
	4068, 245, 4065, 4064, 4063, 4062, 4061, 4056, 4054, 4051,
	4047, 72, 123, 4045, 4044, 35, 4043, 4042, 4040, 4039,
	4037, 4035, 4033, 4032, 4031, 4030, 214, 4029, 234, 4027,
	4026, 4022, 4021, 4018, 4016, 4015, 4007, 4005, 3999, 3997,
	3996, 3995, 3994, 3990, 3985, 3980, 3976, 3972, 3971, 3970,
	3962, 3956, 3955, 3950, 3941, 3940, 3933, 3932, 3929, 3928,
	3924, 3922, 242, 156, 3919, 3917, 232, 231, 3914, 3913,
	3912, 3911, 3910, 106, 8, 50, 3909, 3907, 71, 64,
	62, 82, 83, 84, 3901, 88, 3900, 102, 49, 3898,
	14, 2, 252, 203, 5803, 197, 3897, 3892, 3890, 217,
	163, 3880, 198, 3878, 3875, 3874, 3873, 81, 68, 152,
	147, 144, 146, 28, 3868, 3867, 86, 54, 41, 32,
	3866, 3865, 3864, 3863, 3211, 111, 3862, 229, 200, 135,
	3861, 3859, 3856, 2152, 3855, 37, 3853, 91, 51, 103,
	13, 105, 3848, 130, 29, 3845, 175, 40, 3844, 121,
	79, 65, 8193, 8846, 3837, 97, 52, 161, 243, 141,
	132, 168, 212, 171, 181, 176, 145, 137, 3836, 216,
	3835, 3342, 56, 128, 3831, 3830, 3829, 61, 165, 87,
	3824, 3818, 48, 17, 3, 7, 164, 16, 99, 20,
	3817, 15, 3814, 3812, 3809, 3808, 26, 150, 3807, 244,
	3806, 100, 39, 23, 3798, 44, 180, 3795, 189, 110,
	3794, 3790, 222, 172, 153, 3789, 78, 190, 3788, 3786,
	3785, 3781, 3780, 108, 9, 112, 3779, 3777, 109, 199,
	167, 3773, 46, 3772, 3771, 149, 85, 113, 241, 107,
	205, 95, 184, 157, 192, 3770, 3769, 3767, 154, 3766,
	3765, 183, 142, 3764, 3763, 174, 247, 34, 60, 194,
	59, 162, 134, 3762, 169, 3761, 3760, 246, 155, 177,
	1, 18, 75, 104, 3756, 5, 195, 120, 278, 96,
	3752, 5428, 67, 1591, 3751, 3748, 127, 98, 53, 101,
	139, 228, 58, 3747, 3744, 2145, 3743, 3742, 3741, 3737,
	159, 3736, 3735, 3733, 117, 124, 191, 3729, 76, 63,
	12, 93, 207, 230, 92, 185, 148, 221, 3728, 151,
	3726, 42, 131, 3722, 166, 210, 3721, 3719, 218, 3716,
	119, 265, 45, 129, 3715, 188, 3714, 3710, 3709, 3707,
	3706, 3705, 3704, 238, 196, 3702, 3701, 3696, 118, 160,
	3695, 225, 136, 193, 80, 38, 3694, 74, 1825, 3693,
	186, 209, 73, 140, 3692, 1244, 57, 0, 10702, 9823,
	7291, 10266, 3691, 1329, 3689, 3685, 3682, 170, 116, 3681,
	3680, 3679, 90, 3677, 55, 3676, 3674, 47, 3671, 19,
	10, 11, 24, 21, 1247, 828, 3670, 3669, 89, 125,
	114, 3668, 236, 187, 3666, 3665, 3664, 3663, 77, 3657,
	30, 3656, 31, 3655, 3654, 33, 6, 25, 3653, 3652,
	206, 3651, 182, 208, 3648, 133, 3647, 3335, 122, 3646,
	3642, 224, 69, 3641, 219, 3640, 3296, 3638, 3637, 22,
	3635, 3633, 204, 138, 179, 3625, 3624, 143, 3622, 3621,
	3620, 220, 3619, 3617, 27, 3616, 4, 3615, 3612, 173,
	3051, 3611, 3609, 66, 3608, 158,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 531, 531, 21, 35, 22, 36,
	15, 532, 532, 532, 532, 28, 23, 37, 25, 25,
	25, 25, 25, 176, 176, 176, 176, 20, 20, 31,
	31, 210, 210, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 530, 530, 212, 212,
	211, 206, 206, 533, 533, 213, 213, 213, 215, 215,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 432,
	432, 432, 463, 463, 463, 546, 546, 547, 547, 547,
	547, 547, 114, 114, 334, 334, 334, 43, 43, 43,
	43, 43, 525, 525, 178, 178, 178, 180, 180, 179,
	179, 179, 179, 64, 64, 538, 538, 539, 539, 537,
	540, 540, 540, 177, 177, 177, 110, 110, 110, 110,
	111, 111, 112, 112, 181, 181, 181, 183, 183, 182,
	182, 182, 182, 182, 182, 182, 182, 187, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 92, 92, 465,
	465, 466, 466, 172, 172, 173, 173, 173, 173, 174,
	174, 175, 175, 175, 57, 184, 184, 186, 186, 185,
	185, 45, 45, 45, 45, 45, 45, 45, 46, 46,
	46, 46, 46, 47, 47, 47, 47, 47, 47, 48,
	48, 48, 48, 48, 48, 55, 55, 55, 55, 163,
	163, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 549,
	549, 550, 550, 551, 551, 552, 552, 552, 552, 552,
	552, 552, 552, 552, 552, 552, 552, 552, 552, 552,
	552, 552, 552, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 70, 70, 298, 298, 270, 270, 71, 71, 71,
	72, 72, 73, 73, 59, 59, 523, 523, 313, 313,
	423, 423, 75, 75, 333, 333, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 77, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 85, 85, 85, 85, 85, 86, 86,
	86, 83, 83, 83, 80, 80, 80, 79, 79, 79,
	84, 84, 84, 522, 261, 261, 82, 82, 82, 263,
	263, 81, 81, 81, 314, 314, 87, 87, 87, 87,
	271, 88, 88, 88, 88, 88, 88, 88, 88, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 425, 425, 89, 89, 89, 393, 393, 93,
	93, 93, 349, 349, 94, 94, 94, 94, 94, 95,
	95, 95, 95, 95, 95, 113, 113, 113, 113, 113,
	113, 527, 527, 306, 306, 227, 227, 227, 227, 103,
	103, 103, 103, 104, 104, 104, 105, 105, 168, 168,
	120, 120, 120, 120, 120, 119, 119, 119, 119, 119,
	119, 49, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 54, 54, 54, 54, 54, 122, 122, 543,
	543, 124, 121, 121, 121, 123, 123, 123, 123, 125,
	126, 126, 126, 126, 126, 126, 126, 126, 127, 127,
	457, 457, 322, 322, 455, 455, 474, 474, 456, 456,
	275, 275, 275, 275, 275, 276, 276, 276, 464, 464,
	464, 464, 464, 464, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 169, 169,
	170, 171, 171, 171, 171, 148, 148, 148, 162, 162,
	162, 162, 162, 162, 162, 151, 151, 151, 138, 138,
	129, 129, 129, 129, 129, 129, 129, 133, 133, 133,
	133, 133, 133, 133, 133, 130, 130, 140, 140, 140,
	140, 140, 134, 134, 135, 135, 158, 158, 137, 137,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 131,
	131, 131, 131, 142, 142, 142, 142, 356, 356, 356,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 161, 161, 161, 161, 161, 161, 541, 541, 542,
	542, 155, 155, 155, 155, 155, 155, 407, 407, 149,
	149, 149, 149, 154, 154, 154, 154, 157, 157, 157,
	157, 339, 339, 146, 146, 146, 147, 147, 147, 152,
	152, 153, 150, 150, 156, 156, 156, 156, 132, 132,
	132, 553, 553, 553, 159, 159, 145, 145, 160, 160,
	160, 160, 160, 160, 160, 160, 144, 144, 144, 143,
	143, 143, 143, 136, 524, 524, 520, 520, 520, 520,
	520, 520, 520, 520, 521, 521, 526, 526, 98, 98,
	98, 98, 98, 106, 106, 106, 106, 106, 99, 99,
	99, 99, 99, 101, 101, 100, 100, 100, 100, 65,
	65, 65, 14, 14, 14, 66, 66, 190, 190, 190,
	191, 191, 283, 283, 283, 283, 188, 188, 189, 189,
	67, 67, 554, 554, 554, 534, 534, 534, 535, 535,
	535, 535, 535, 535, 277, 277, 278, 278, 373, 373,
	373, 373, 373, 281, 281, 281, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 284, 284, 214, 214, 214,
	287, 288, 288, 285, 285, 286, 286, 286, 290, 290,
	289, 292, 292, 291, 372, 483, 483, 485, 485, 485,
	485, 485, 485, 485, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 555, 555, 481, 481, 481,
	482, 477, 477, 478, 478, 478, 478, 478, 279, 279,
	280, 280, 280, 280, 479, 480, 304, 304, 410, 484,
	484, 486, 486, 488, 556, 556, 556, 556, 556, 556,
	557, 557, 557, 371, 371, 370, 370, 296, 296, 489,
	489, 489, 489, 490, 490, 490, 490, 490, 493, 492,
	491, 491, 491, 491, 491, 69, 69, 69, 336, 336,
	335, 335, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 165, 165, 230,
	230, 63, 63, 63, 12, 12, 12, 536, 536, 536,
	68, 68, 68, 68, 68, 68, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 529, 529, 528, 528, 231, 231,
	559, 559, 74, 74, 74, 74, 74, 74, 74, 426,
	426, 427, 427, 62, 62, 62, 62, 62, 357, 357,
	355, 355, 354, 354, 303, 303, 409, 235, 235, 207,
	207, 207, 27, 26, 19, 19, 24, 24, 39, 39,
	39, 39, 42, 42, 38, 38, 38, 38, 40, 40,
	34, 34, 544, 544, 545, 545, 102, 102, 107, 107,
	107, 107, 107, 108, 108, 108, 108, 109, 109, 109,
	109, 118, 118, 164, 164, 164, 164, 164, 164, 164,
	44, 44, 44, 44, 56, 56, 56, 56, 116, 561,
	561, 561, 117, 117, 117, 560, 560, 228, 228, 367,
	367, 368, 368, 562, 562, 369, 369, 369, 369, 369,
	221, 220, 222, 222, 223, 223, 61, 61, 61, 216,
	216, 217, 217, 218, 218, 219, 219, 563, 563, 96,
	96, 96, 167, 167, 269, 269, 269, 364, 364, 364,
	297, 297, 241, 241, 366, 366, 366, 366, 332, 332,
	332, 166, 166, 311, 311, 324, 324, 325, 325, 420,
	420, 326, 115, 115, 194, 194, 192, 192, 192, 192,
	192, 192, 192, 192, 199, 199, 200, 200, 201, 201,
	202, 203, 203, 203, 203, 315, 315, 204, 204, 204,
	193, 193, 193, 195, 195, 195, 195, 195, 195, 195,
	198, 198, 198, 198, 205, 205, 205, 197, 197, 500,
	500, 500, 502, 502, 504, 504, 503, 503, 499, 499,
	501, 501, 558, 558, 338, 338, 338, 294, 295, 293,
	293, 301, 301, 299, 300, 300, 302, 302, 408, 408,
	408, 208, 208, 208, 329, 329, 329, 329, 330, 330,
	360, 360, 358, 358, 358, 358, 359, 359, 361, 361,
	361, 362, 362, 363, 363, 328, 328, 389, 389, 196,
	196, 196, 308, 308, 308, 309, 309, 379, 379, 379,
	379, 379, 379, 380, 380, 378, 378, 378, 378, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 412, 413,
	413, 310, 310, 414, 365, 365, 518, 518, 518, 519,
	519, 406, 406, 415, 415, 415, 415, 415, 415, 404,
	404, 405, 405, 421, 422, 422, 342, 342, 342, 342,
	340, 340, 343, 343, 343, 343, 341, 341, 416, 416,
	416, 416, 331, 331, 417, 417, 417, 417, 418, 374,
	375, 375, 428, 428, 428, 428, 430, 307, 307, 307,
	307, 307, 476, 475, 475, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 444, 444, 444, 444, 444, 444,
	444, 444, 445, 445, 445, 445, 445, 445, 445, 431,
	431, 431, 431, 431, 435, 435, 435, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 436, 436,
	441, 441, 442, 442, 442, 437, 438, 443, 443, 443,
	443, 564, 564, 447, 447, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 433, 433, 433, 440, 440, 440,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 350, 350, 352, 352, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 383, 383, 383, 383, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 494, 494, 494, 494, 494, 494, 494,
	494, 385, 385, 497, 497, 498, 498, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 505, 505, 506, 506,
	508, 508, 509, 509, 510, 511, 511, 511, 512, 513,
	513, 507, 507, 514, 514, 514, 514, 515, 515, 516,
	516, 516, 516, 516, 517, 517, 517, 517, 517, 395,
	395, 396, 396, 402, 402, 402, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 232, 232, 232, 232, 232, 320, 320, 318,
	318, 318, 321, 321, 319, 319, 317, 317, 316, 316,
	392, 392, 390, 390, 394, 394, 344, 344, 446, 446,
	446, 446, 446, 446, 446, 446, 345, 345, 345, 353,
	346, 346, 347, 347, 347, 347, 347, 386, 387, 348,
	348, 348, 388, 388, 397, 401, 401, 400, 399, 399,
	398, 398, 376, 376, 377, 377, 327, 327, 565, 565,
	323, 323, 419, 419, 419, 419, 273, 273, 312, 312,
	272, 272, 264, 264, 265, 265, 265, 265, 305, 305,
	403, 403, 448, 448, 449, 449, 450, 450, 451, 451,
	452, 453, 454, 391, 391, 251, 250, 238, 239, 249,
	248, 247, 237, 240, 244, 245, 246, 242, 243, 257,
	256, 255, 262, 253, 254, 424, 236, 266, 266, 267,
	267, 267, 268, 268, 268, 268, 233, 233, 234, 234,
	258, 258, 259, 260, 260, 252, 252, 252, 224, 224,
	224, 225, 225, 226, 226, 462, 462, 459, 459, 459,
	460, 460, 460, 461, 461, 461, 461, 458, 458, 458,
	458, 458, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 468, 468, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 470, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 473, 473,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 1, 3, 12, 3, 1, 0, 1, 1, 2,
	3, 3, 0, 5, 7, 0, 5, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 6, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 1,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 2, 6, 4, 7, 7, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 3, 6, 6, 3, 11, 14, 1, 2, 3,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 1, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 9, 9, 3, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 1, 2, 8, 4,
	2, 5, 5, 5, 2, 1, 3, 11, 12, 8,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 3, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 17, 20, 16, 19, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 3, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 8, 11, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 5, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 2, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 531, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -113, -118, -102, -114, -120, -164, -169,
	-170, -171, -3, -43, -45, -58, -75, -77, -88, -97,
	-96, -98, -103, -110, -106, -92, -49, -115, -119, -128,
	-165, -166, -167, 31, 30, 97, 78, 148, 123, 131,
	186, 341, 377, 388, 369, 358, -123, -124, 405, -44,
	-56, -117, -116, 71, 124, 364, -4, -12, 28, 44,
	-46, -47, -48, 60, -63, -60, -70, -64, -548, 99,
	-501, -78, -81, -109, -552, 136, 155, 204, -99, -100,
	330, -104, -105, 371, -107, -108, 373, 156, -51, -50,
	150, -192, -194, -121, -122, -168, -129, -130, -131, -132,
	-133, -134, -135, -158, -136, -137, -138, -139, -140, -141,
	-161, -142, -143, -144, -145, -150, -146, -147, -148, -149,
	-151, -152, -154, -155, -156, -157, -159, -160, 409, -153,
	464, 47, 423, 80, 140, 381, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -59, -61, -62, -65,
	-66, -67, -74, -68, -69, -500, -79, -80, -83, -85,
	-86, -82, -84, 370, -195, -193, 528, 479, -16, -21,
	-22, -17, -18, -20, -23, -19, -24, -30, -35, -36,
	-32, -33, -31, -34, -37, -38, -39, -40, -41, -42,
	-26, -28, -29, -27, -15, -25, 498, 506, -198, -196,
	-197, -205, 397, 487, 439, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, -271, 2, -253, -258, -259,
	-260, -252, -224, -470, -473, 4, -467, -471, 161, 213,
	294, 21, 22, 23, 24, 25, 26, 28, 29, 40,
	41, 43, 42, 44, 45, 46, 47, 51, 53, 57,
	58, 59, 60, 61, 62, 66, 71, 72, 77, 78,
	79, 80, 81, 82, 83, 89, 86, 87, 88, 91,
	93, 94, 95, 96, 97, 98, 100, 101, 102, 104,
	105, 113, 114, 115, 116, 118, 123, 124, 127, 122,
	126, 129, 130, 131, 134, 135, 136, 138, 139, 141,
	142, 143, 145, 146, 148, 149, 150, 153, 151, 446,
	152, 154, 155, 156, 157, 167, 168, 169, 174, 176,
	180, 181, 184, 185, 187, 191, 193, 194, 195, 196,
	197, 203, 204, 206, 207, 208, 209, 214, 215, 219,
	216, 225, 226, 230, 231, 232, 234, 238, 239, 240,
	241, 242, 243, 245, 247, 246, 249, 252, 253, 256,
	257, 258, 261, 262, 263, 264, 266, 267, 270, 268,
	271, 269, 273, 274, 275, 272, 278, 276, 280, 281,
	282, 292, 290, 286, 287, 283, 288, 284, 285, 289,
	296, 297, 300, 201, 302, 303, 306, 324, 310, 311,
	312, 315, 316, 319, 322, 323, 325, 326, 327, 328,
	329, 330, 331, 332, 334, 335, 339, 341, 342, 344,
	346, 347, 348, 349, 350, 351, 352, 355, 354, 356,
	358, 364, 369, 366, 367, 368, 370, 371, 372, 373,
	375, 376, 377, 379, 380, 381, 382, 384, 386, 387,
	390, 391, 406, 407, 425, 388, 389, 392, 393, 394,
	395, 396, 400, 398, 399, 401, 402, 403, 405, 408,
	409, 411, 412, 413, 414, 415, 416, 419, 421, 422,
	423, 424, 426, 429, 430, 431, 432, 427, 438, 435,
	436, 440, 441, 442, 443, 444, 445, 447, 449, 457,
	458, 459, 461, 464, 465, 466, 467, 455, 469, 470,
	473, 474, 475, 478, 476, 477, 479, 481, 484, 485,
	486, 492, 491, 493, 499, 500, 502, 503, 504, 35,
	48, 49, 52, 54, 56, 67, 68, 69, 73, 119,
	120, 147, 158, 159, 170, 182, 183, 188, 190, 198,
	199, 200, 220, 221, 223, 228, 250, 299, 301, 317,
	321, 336, 337, 338, 340, 353, 383, 417, 428, 433,
	450, 451, 452, 453, 460, 462, 487, 488, 489, 494,
	501, -271, 2, -253, 308, -246, 2, -224, -224, 341,
	27, 2, 27, 335, 399, 441, 443, 2, -527, -306,
	2, 27, -227, -224, 99, 186, 397, -246, 2, -527,
	-306, 24, 2, -224, 2, -228, 2, 388, -224, 267,
	2, 531, 91, 258, 72, 383, 402, -126, 458, -125,
	450, 392, -127, -457, 2, 278, -224, 531, 531, 531,
	27, -236, -224, 439, 213, 115, 436, 531, 2, 439,
	327, 491, 398, 115, 350, 213, 466, 392, -536, 267,
	379, 189, 480, -525, 2, -520, 4, -471, -467, -265,
	-264, 439, 444, 115, -260, -252, 521, -259, 531, 531,
	531, 2, 231, 232, 349, 348, 402, 403, 531, 531,
	531, 390, 2, 26, 64, 90, 95, 121, 157, 177,
	180, 313, -549, 324, 347, 401, 438, 447, 461, -535,
	424, 66, 392, -534, -536, 267, 466, 134, -354, 115,
	258, 185, 474, 443, 441, 472, 127, 219, 477, 476,
	531, 531, 26, 64, 75, 95, 134, 157, 177, 180,
	-551, 324, 347, 386, 401, 438, 447, 461, 2, 491,
	267, 398, 439, 213, 115, 466, 392, -536, 390, 391,
	345, -90, 2, 528, 31, 30, 405, -187, 439, 224,
	2, -224, 531, 531, 2, 231, 232, 390, 391, 531,
	531, 178, -520, 2, 531, 531, 2, 231, 232, 390,
	391, 224, 2, 66, 394, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 2, -162, 402,
	424, 195, 45, 44, 72, 27, 346, 77, 328, 116,
	142, 467, 187, 213, 214, 239, 90, 91, -356, 43,
	232, 231, 391, -541, 390, -407, 440, 393, 399, 435,
	243, 388, 458, 99, 481, 380, 504, 350, 351, 151,
	4, 115, 278, 404, 450, 258, 387, 331, 82, 531,
	-558, 2, 439, -560, 2, 458, 458, 2, -560, 2,
	-560, 2, -560, 2, -561, 458, 501, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, -193, -195, -194, 531, 531, 531,
	531, 531, 531, 531, -162, 402, 2, 72, 27, -299,
	-301, 471, 222, 144, 314, -192, -194, 2, -500, -455,
	2, -381, -474, -383, 519, 520, 512, 437, 65, 293,
	505, -395, 121, 472, 308, -473, -384, -397, 147, 383,
	-321, 8, 9, 5, 6, 7, -233, -385, -391, 463,
	160, 298, -268, 532, 10, 528, -497, -194, -396, 36,
	190, 63, -459, -267, -234, -431, 223, -266, -252, -494,
	-495, 4, -467, -468, -460, -434, -442, -438, -439, -445,
	-224, -470, 75, 107, 108, 106, 111, 110, 260, 259,
	112, 109, 404, 480, 64, 35, 198, 199, 228, 299,
	200, 73, -496, 135, -469, 220, 221, 417, 49, 353,
	170, 120, 119, 301, 54, 52, 488, -443, 117, 450,
	451, 452, 453, 182, 183, 56, 158, 159, 321, 338,
	433, 460, 462, 188, 250, 103, 179, 218, 202, 227,
	229, 233, 251, 254, 279, 291, 295, 318, 320, 378,
	410, -564, 489, 428, 67, 68, -502, 354, -503, -246,
	-502, 531, 531, 533, 531, -293, -294, -295, 2, 27,
	132, 528, 2, -411, 2, -412, -416, -194, 244, -415,
	528, -413, 526, -253, 309, -498, 384, -494, -495, -233,
	-252, -267, 4, -467, -469, 530, -296, 528, 115, 439,
	76, 213, -349, 528, -224, 27, 308, 454, 533, -393,
	528, 308, 178, 311, -224, 491, 2, 2, 406, 2,
	528, -126, 69, 458, 42, 402, -368, 2, -369, -220,
	-221, -222, -421, -223, 230, 344, 352, 507, 125, 293,
	504, -455, -543, 178, 511, 454, -455, -322, 530, 2,
	2, 2, 2, 2, -416, 198, -253, 2, -250, -458,
	4, -467, -471, -468, -472, -470, 27, 30, 31, 32,
	34, 36, 37, 38, 39, 55, 63, 64, 70, 74,
	76, 85, 90, 99, 106, 107, 109, 108, 110, 111,
	112, 121, 125, 128, 132, 133, 137, 140, 144, 160,
	162, 175, 177, 178, 186, 189, 192, 205, 217, 222,
	224, 244, 248, 255, 259, 260, 293, 298, 304, 308,
	309, 313, 314, 333, 343, 357, 374, 397, 404, 420,
	434, 439, 448, 454, 456, 463, 471, 472, 480, 482,
	490, 495, 496, 497, 498, -473, 75, 2, -416, 198,
	2, -255, 198, -416, -258, 2, -237, -224, 2, -249,
	-458, 2, -272, 198, -253, -254, -258, -256, 2, -258,
	-262, 2, -224, -465, 198, 2, -462, 10, -461, 5,
	4, -467, -471, -468, 491, 224, 454, 533, -312, -264,
	-265, -454, 8, -305, -224, 530, -381, 2, -115, -101,
	2, 175, -381, 198, 2, -115, 198, 2, -381, 198,
	2, -115, 198, 2, -538, 2, -465, 2, 2, 461,
	2, 95, 198, -224, 439, 114, 2, 368, -550, 386,
	465, 2, 2, 2, 2, 2, 2, 439, -242, 2,
	-224, 175, -262, 198, 2, 398, -559, 354, -465, 198,
	2, 491, -256, 2, -256, 213, 226, -237, 198, 2,
	443, 441, 443, 441, 178, 2, 224, 2, 224, 2,
	-417, 2, -418, -412, -253, 526, 2, 2, 2, 2,
	2, 198, -224, 439, 114, 2, 242, 2, 2, 2,
	2, 2, 2, 2, -314, 198, 2, -253, 491, -314,
	198, 2, -314, 198, 2, -355, 2, 85, -237, 198,
	2, -261, 198, 2, -256, -263, 198, 2, -262, -466,
	198, 2, -465, -381, 2, -115, 2, -425, 2, -424,
	-461, 487, -90, 528, -90, 528, 402, 528, -465, -253,
	-253, -381, 2, -115, -101, 2, -381, 2, -115, 2,
	-112, -111, -465, 528, 178, -381, 2, -115, -101, 2,
	-381, 2, -115, 2, -187, 175, 2, 115, 439, -162,
	2, 175, 482, 2, 8, 2, 205, -465, 393, 351,
	167, 2, 406, 2, 407, 72, -356, 504, 72, 178,
	2, 178, 2, -339, 2, 498, 2, 2, -524, 2,
	308, 178, 2, 178, 2, 178, 2, 178, 2, 178,
	2, 348, 403, 459, 232, 2, -115, 495, -101, -381,
	495, 2, -542, 175, 391, -381, 2, 457, 241, 152,
	178, -339, 2, 178, 2, 178, 2, 5, 2, 349,
	425, 2, 230, 344, 425, 2, -253, -553, 2, 439,
	491, 398, 2, 2, 86, 87, 178, 2, 178, 2,
	178, 504, 2, -331, -416, -367, -368, -367, 454, -299,
	-301, -162, 406, 2, -199, -329, -201, 175, -358, -359,
	-202, 255, 162, 304, -203, -338, 27, 132, -338, -338,
	58, 529, 529, 11, 12, 74, 40, 519, 520, 521,
	522, 173, 523, 524, 517, 518, 516, 509, 510, 514,
	236, 237, 92, 513, 511, 84, 265, 385, 163, 164,
	165, 166, 365, 211, 33, 212, 14, 15, 16, 32,
	313, 254, 505, 202, 410, 512, 17, 18, 19, 227,
	229, 295, 48, 205, -232, -274, -381, -381, -381, -381,
	-381, -381, -381, 320, 528, -327, -376, 526, -194, 528,
	528, 528, -454, -194, -381, -395, 529, -319, 528, -194,
	-395, -390, 528, 383, 526, 528, -398, -381, 5, 5,
	5, 528, 530, -505, 499, 175, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 340, -436, 528, -435, 528, -435, -435, 492, -433,
	528, 506, 500, 528, -433, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 492, 533,
	-502, -296, 528, -323, -419, -381, 521, -323, -323, 308,
	-316, -381, 103, -342, 233, 279, 179, 251, 378, 218,
	-378, 532, -378, -406, 506, -194, -413, -252, -194, -415,
	528, -411, -406, -91, -454, -75, -88, -96, -115, -128,
	-166, -167, 521, -253, 528, 178, 528, 530, -458, 178,
	-305, -237, -253, -266, -267, -272, 131, -316, -520, 466,
	392, -305, -227, 37, -392, -428, -429, -476, 532, -475,
	-431, -441, -437, -440, 336, 337, -460, 52, 488, -443,
	223, 4, -467, -469, 220, 221, 417, 49, 353, 170,
	120, 119, 301, 54, 450, 451, 452, 453, 182, 183,
	56, 489, 428, 67, 68, -520, 466, 392, -305, 175,
	-355, -457, -316, 37, -368, 2, 121, -462, 42, -562,
	533, 253, -276, 264, 292, 194, 309, 502, 302, 125,
	-464, 5, 4, -391, -403, 121, 258, 223, -448, -450,
	8, -449, 9, -451, 519, 520, -456, -455, 105, 530,
	-458, -210, 366, 405, -209, 23, 28, 136, 485, 153,
	-286, 215, 323, 327, 147, 421, 475, -531, -532, 389,
	445, 446, 88, 302, 405, 366, 147, -335, -337, 37,
	113, 282, 322, 59, 208, 269, 270, 423, 494, 147,
	405, 366, 323, -532, 96, 366, -532, -212, 421, 475,
	-531, -532, 389, 366, -211, -286, 147, 532, 23, 366,
	405, 323, -546, -547, 136, 28, 366, 323, -528, -499,
	498, 147, -416, 198, -539, -111, 245, 5, 10, -111,
	-312, 533, 533, -458, 521, 391, 390, 147, 147, 147,
	147, 175, 2, 2, 293, 2, 2, 2, 180, -534,
	-551, 2, 2, -253, 198, -298, 308, -523, -313, 439,
	-253, 293, -255, 198, 2, -258, 491, -528, 293, -257,
	198, -253, 37, 528, 2, -355, 2, 213, -499, 293,
	-417, -269, -253, -412, -269, 405, -246, 37, -378, -378,
	147, 2, 2, 2, -224, -213, 533, 62, 372, 147,
	-314, 198, -213, 147, -213, 147, -273, 198, -272, -213,
	147, -213, 533, 147, -213, 533, 147, 533, 147, 529,
	533, -425, -425, -465, -175, 498, 178, 99, 528, 528,
	-187, -422, 533, -421, -466, -112, -465, -465, -523, -237,
	2, -253, 2, 439, 234, -465, -175, 205, -465, -465,
	-465, -457, 27, 407, 2, 348, 403, 459, 87, 407,
	2, -253, 439, 115, 213, 78, -526, 175, -521, 379,
	-520, -253, 115, -253, 115, -253, 115, -253, -253, 2,
	2, 2, 2, 2, 83, 83, 2, 44, -542, 175,
	2, 457, 2, 457, 2, -224, -224, -224, 424, 253,
	-253, 175, 439, 213, 439, 213, 115, 439, -213, 533,
	-228, -199, -329, -457, -330, -329, -200, -199, -202, 175,
	352, 476, 282, 408, 238, -359, -358, 27, -381, -363,
	169, 281, -381, -361, -383, 519, 520, -449, -451, -315,
	302, -193, -193, -193, -302, -408, -381, 343, 213, -430,
	-428, -428, -251, -458, 450, -381, -381, -381, -381, -381,
	-381, -381, -381, -381, -381, -381, -381, -381, -381, -381,
	-381, -381, -381, -381, -381, -381, -381, -381, -381, -381,
	-381, -381, -381, -381, -381, -381, -381, -381, -381, -381,
	254, 202, 410, 48, 205, -381, 454, -381, -381, -381,
	-381, 276, 293, 298, 463, 160, 473, 132, 302, -565,
	434, 39, -388, -194, -320, 528, -402, 34, 420, 27,
	-395, 528, 2, -376, -381, -377, -317, -316, -316, 529,
	490, 27, 132, 521, 2, 529, 533, 37, 529, -381,
	-317, -394, -390, -316, -401, -400, 495, -350, -351, 503,
	272, 118, 196, 271, -352, 396, -452, 8, -458, 521,
	-506, 168, 189, 528, 529, 2, 529, 2, 529, -381,
	2, 529, -381, 2, 529, -381, 2, 529, -381, 2,
	529, 2, -381, -381, -381, -381, -381, -381, -381, -316,
	8, -452, -452, 450, 450, -452, -452, -452, -444, 336,
	256, 337, 184, 275, 273, 274, 183, -444, -344, 2,
	-446, -316, 4, 503, 272, 118, 196, 271, 396, 5,
	-344, 2, -345, 2, -381, -316, -346, -382, -383, 519,
	520, 512, -395, -347, 2, -381, -317, -381, 55, 248,
	456, -348, -381, 178, -316, -316, 2, -316, 2, -503,
	37, -316, -308, 533, 178, 37, 4, -308, -308, 528,
	529, 533, -343, 193, 268, 263, -343, -411, -342, 233,
	-340, 318, -340, -340, -406, -238, 526, 534, -458, -406,
	-405, -404, 37, -246, 315, -406, -406, 530, 529, -405,
	527, -518, 528, 531, 531, 531, 531, 531, -253, 528,
	-316, -458, 530, 426, 529, 227, 227, 227, 227, 384,
	529, 454, -522, -261, -263, 498, -90, 310, 529, 533,
	-307, 36, 526, 530, -452, 2, 2, -447, 492, 528,
	528, -351, 528, 178, -522, -263, -306, -257, -543, 529,
	458, -369, -275, 352, 419, 367, 400, 436, 8, 9,
	8, 9, 533, -458, 533, -544, 90, 454, 76, 392,
	-372, 198, 76, -477, -240, 90, -478, -224, 70, 472,
	343, 177, 145, -544, 90, 343, -544, 90, 90, 405,
	424, 454, 58, -416, 40, 40, 27, -115, 249, 178,
	504, 439, 213, 392, 454, -416, -337, -428, 113, 269,
	270, 58, -453, -448, 519, 520, -453, 58, -453, -453,
	-453, 498, -255, -416, 392, 454, 454, 454, 454, 533,
	40, 40, 27, -115, 249, 178, 454, -272, -238, 486,
	41, 486, 454, 41, 392, 454, 533, 41, 41, 454,
	454, -529, -229, 102, 288, 262, 289, 94, 285, 93,
	284, 100, 286, 101, 287, 493, 296, 61, 283, -230,
	-231, 329, 484, -465, 405, 366, 147, 205, -422, 205,
	-422, -264, -224, 530, -115, -381, -381, -115, -381, -115,
	44, 147, 2, -559, 242, 528, -279, 293, 178, -305,
	-423, 224, 533, -313, 147, -336, -335, 293, -257, 198,
	2, 147, -296, 293, 141, 528, 350, 2, -239, 198,
	-225, -224, -355, -216, 442, 147, -333, 482, -364, -115,
	528, 121, 37, -364, -324, -325, -420, -326, -240, 528,
	-246, -224, 2, -253, -314, -213, 147, -314, -314, -213,
	533, 147, -237, -256, -261, -262, -263, -465, -466, -90,
	-424, 529, 529, 529, -174, 312, -173, -224, 5, -187,
	482, -278, -373, -372, -481, -482, -477, 254, 213, 472,
	226, 161, -297, -241, -240, 114, -181, 498, -111, 529,
	-422, 205, -175, -175, -422, -422, -253, 175, -465, -175,
	-175, -175, 2, 2, 2, -339, -253, -237, -272, -253,
	-305, -305, -339, -237, -339, -237, -339, -237, -115, -381,
	2, 402, 175, 175, 530, -339, 350, 115, 439, 327,
	213, -253, -272, -253, -272, -237, -253, -416, -330, -200,
	309, 238, 408, -361, -362, -383, 383, 384, -362, 383,
	384, 8, 9, 8, 9, -204, 412, 297, -314, 533,
	-207, 38, 128, 238, -253, 504, 143, -381, -381, 454,
	-565, 434, -388, 143, -381, 276, 298, 463, 160, 473,
	132, 302, 178, 528, -382, -382, 529, -318, -381, -381,
	527, 536, 529, -301, 533, -299, -381, -316, -316, 529,
	530, -316, -305, 527, 527, 533, 529, -399, -400, 137,
	-381, 454, 454, 454, 454, 528, 529, 530, -511, 319,
	528, 528, -381, 529, 529, 529, 529, 37, 533, 533,
	533, 529, 533, 533, 533, 529, 529, 529, 533, 529,
	504, 504, 529, 529, 529, 529, 533, 529, 533, 529,
	178, 529, 529, -353, 333, 529, 11, 12, 519, 520,
	521, 522, 173, 523, 524, 517, 518, 516, 509, 510,
	511, 84, 265, 385, 14, 15, 16, 227, 205, -382,
	-382, -382, 529, -386, -387, 178, 175, 37, -348, -348,
	-348, 529, 178, -316, 529, 529, 528, -504, 267, 293,
	529, -375, -374, 496, -419, -309, 2, -411, -248, -458,
	-375, -375, -316, -381, 233, 233, -341, 482, 308, -343,
	-411, -405, -454, -380, -379, 176, 38, 128, 290, 201,
	-405, -246, -296, -405, -405, -458, -406, -406, -404, 529,
	-519, -454, 529, -310, -414, -498, -301, 530, -458, -184,
	-499, -163, 5, 298, -163, -163, -163, -305, 454, 454,
	24, 334, -428, 526, 527, 8, -458, 528, -452, -452,
	-452, -305, 178, 178, 178, -334, 498, -455, -368, 470,
	81, 352, 450, -455, -209, 366, -240, -240, -253, -262,
	293, -372, 198, -215, 293, -428, -247, -224, 528, 528,
	238, 238, 482, -240, -247, 238, 198, -240, 198, -247,
	-247, -530, 352, 303, -381, -463, -462, 112, 404, 257,
	350, 294, -210, 366, 405, -115, -115, -115, 528, -543,
	482, 131, -253, -272, -253, -262, -257, 405, 366, 291,
	-266, -453, -453, -335, 405, 366, -262, -255, -463, 392,
	-237, -211, -115, -115, -115, 528, -238, -212, 366, 5,
	198, -240, 5, -224, -240, -262, -463, -547, 23, -240,
	198, -240, -262, -463, -229, -465, 298, 478, -528, 392,
	454, -416, -111, -178, 498, -111, -172, 209, 521, -525,
	-224, 491, -224, -277, -280, -278, -240, -190, -191, 500,
	498, 147, -270, -253, 526, -175, -465, -253, -262, 147,
	-296, 293, -465, 37, 147, 528, 2, 2, 308, 293,
	-239, 198, -217, 138, -563, 511, -237, -375, -309, -332,
	-366, 374, 308, -297, 487, -246, -332, -311, 533, 178,
	511, 530, -297, 2, -213, -314, -213, -213, -272, -273,
	-213, -213, -213, -90, -90, -175, 533, 528, 511, 511,
	528, -465, -465, 529, 533, -253, -239, 213, 213, -245,
	-225, 529, 533, 530, 528, -183, 312, -182, 139, 240,
	225, 413, 414, 415, 416, 130, -181, -112, 178, -52,
	498, 439, -175, 532, -339, -339, -339, 402, 402, -224,
	-249, -237, -253, -250, -272, 175, 175, 476, -362, 309,
	261, -408, -208, 300, -253, 532, -381, -381, 143, 143,
	-381, -382, -382, -381, 143, 178, 528, -381, -392, 32,
	32, 529, 533, -377, -381, 529, 490, -301, -301, 529,
	521, -458, 532, 529, -390, 140, -381, 448, 272, 196,
	271, -352, 271, -352, -352, -452, 5, -458, 521, -512,
	-243, 528, -224, 496, -300, 314, 529, -430, -428, -381,
	-381, -381, -381, -381, -452, -433, -433, -448, -448, -381,
	-386, -381, -430, -428, -382, -382, -382, -382, -382, -382,
	-382, -382, -382, -382, -382, -382, -382, -382, -382, -382,
	-382, -382, -382, 132, 293, 302, -382, -387, -386, -381,
	-381, -428, 529, 529, 529, -316, -90, 528, 267, -328,
	189, -381, -422, 533, -328, -328, 529, -411, -411, 528,
	-381, 233, 527, 533, 535, 511, -296, 530, -404, -405,
	527, 529, 533, 529, 533, -365, 37, 529, -458, -186,
	-185, 129, 51, -305, -305, 311, 5, 8, 526, 527,
	530, -452, 529, 529, 529, -305, -305, -305, 114, 282,
	-381, 454, 454, 147, 293, 484, -483, -478, 145, -381,
	-303, -409, -381, 528, 528, 2, -206, 136, 405, -545,
	2, 482, 147, -213, 147, -213, 502, 528, 528, 454,
	392, 498, -316, -381, -176, 121, -457, -532, 532, -532,
	532, 392, 454, 392, 454, 498, 498, -316, 454, -432,
	46, 25, 293, -256, 454, 454, -213, 147, 466, 405,
	-465, 298, -262, -257, 405, 366, -422, -180, 312, -179,
	139, 376, 130, 240, -422, -178, 178, 224, 2, -257,
	2, 529, 529, 533, -484, 37, 306, 306, 528, -253,
	-71, 498, -421, -454, -255, 37, 147, -528, -115, -257,
	-426, -427, 5, -253, 147, 308, 293, -218, 247, -563,
	-462, -499, -301, -332, -323, 294, 89, 529, -375, -325,
	-309, -381, 2, 529, -213, -213, -173, -174, -465, -465,
	-465, -175, -187, -187, -373, -281, 528, -239, -225, 528,
	-187, -241, 2, -466, 533, 528, 511, 511, 511, -422,
	-115, 312, -253, 521, -339, -288, -287, 327, 302, -288,
	383, 383, 309, 169, 243, -207, -238, -381, -381, 143,
	32, 32, -381, -381, -392, 529, -381, -381, -316, 527,
	5, -381, 529, 529, 8, -381, 529, 530, -513, -224,
	-381, 529, 58, 529, 529, 533, 533, 529, 529, 529,
	529, 529, 529, 529, -387, 178, 132, 302, 528, 529,
	529, -90, -389, 192, 58, -411, -389, -389, -341, -305,
	-411, -379, -238, 526, -458, -454, -414, 528, 530, -185,
	511, 527, 2, 526, -458, 529, 114, -240, -240, -372,
	147, -485, 90, -487, 74, 161, 99, 293, 298, 472,
	343, 70, 121, 357, -555, 37, 508, 529, 529, 533,
	-207, -303, -305, 293, 431, 121, 293, 121, 114, 466,
	77, -240, -247, -305, -305, -253, -262, 154, 529, 533,
	511, 2, 521, 521, -262, -257, -262, -255, 325, 154,
	529, -238, 5, 5, 147, -235, 74, 5, -240, -240,
	-256, 114, 392, 454, -178, 533, 528, 511, 511, -178,
	-466, -111, -296, -284, 216, -240, -482, -479, -480, 343,
	-486, -488, 161, 343, -115, 2, -189, -188, -224, 5,
	528, -279, 312, 527, -336, -115, -257, -296, 529, 533,
	-357, 482, -238, -253, 147, -219, 246, -563, -462, -216,
	-360, -358, 133, 528, 308, -115, -301, 511, 529, 529,
	114, 114, 207, 146, -303, 528, 528, -305, 114, 529,
	-182, -183, -465, -111, -465, -181, -53, -54, 213, 90,
	332, -250, 439, 213, 528, 528, -207, -381, -381, -381,
	529, -301, -458, 521, -507, 327, 529, -408, -381, -381,
	-382, 178, 528, -392, 529, -508, 497, -381, -316, -508,
	-508, 529, -454, 2, -465, 526, 2, -372, -247, -251,
	-244, -224, 161, 198, 298, 238, 528, -382, -253, 528,
	2, 29, -556, 125, 217, -371, -557, 98, 432, 206,
	-409, -208, 529, 529, 298, 298, -381, -428, 528, -213,
	-213, 529, 529, -381, 454, -457, 97, -455, 2, -532,
	-237, -381, 454, 5, -213, -251, -213, -213, -235, 466,
	-262, -257, -179, -180, -465, -111, -178, 37, -285, -286,
	205, -484, 238, -244, 238, -554, 498, 529, 533, 511,
	511, -277, -190, -72, -73, 455, -421, -296, 37, 5,
	528, -224, 308, 528, -238, -563, -462, -217, -332, 294,
	-305, 90, -360, -388, -175, 528, 528, -282, 79, 91,
	122, 197, 181, 214, 424, 429, 27, -282, 529, -303,
	-303, 529, 528, -175, 529, 533, 27, 528, 27, 528,
	-253, -272, -316, -316, 529, -301, 58, 533, 529, 529,
	-382, -392, 529, -509, -510, -243, 527, 2, -487, -244,
	293, 482, -381, -226, 528, -381, 37, 217, 126, 203,
	-284, 528, -370, 482, 357, -235, -303, 528, 528, 528,
	511, 178, 528, -432, -213, -256, 529, -537, 355, -115,
	-190, 325, 528, -283, 308, 114, 282, -188, -455, -455,
	529, 37, -73, 9, 37, -115, -303, -253, -303, 308,
	-462, -218, 529, -247, -332, -466, -466, -370, 529, 529,
	-466, -54, -305, -305, 529, 529, -514, 350, 384, 191,
	-316, -302, 529, 533, 37, 147, 193, 529, -489, 266,
	-224, 529, 126, 203, -285, -305, -284, 193, -253, -533,
	482, 529, -290, -289, -287, -292, -291, -287, -316, -455,
	97, 325, -316, -235, -540, 179, -539, 5, 10, -283,
	-253, -304, -410, -240, 80, 114, -284, -115, -115, 529,
	-357, 529, -253, -219, -375, 529, 529, -371, -370, -191,
	498, 529, 529, 529, 529, -515, -516, 48, 469, 105,
	-381, -515, -515, -510, -512, 161, 498, -490, -493, -492,
	308, 411, 179, 326, 529, 431, 494, -556, 529, 498,
	-296, -381, -370, 529, 533, 487, 529, 533, 487, 529,
	178, 529, -213, -177, 498, 44, 528, 529, 533, 342,
	127, 136, -285, -554, -370, 528, -371, 528, 133, -175,
	-175, -284, -371, -375, -175, -517, 145, -516, 339, 174,
	383, 339, 174, -517, -517, -244, 53, -492, 308, -493,
	308, 476, 127, -375, 53, -489, -284, -289, 205, -291,
	178, 325, 150, -539, 29, -305, -410, 384, 384, 2,
	-190, -283, -371, -303, -284, -303, 294, 476, -285, -284,
	105, 189, 449, 282, 32, 511, -491, 282, 372, 62,
	405, -491, 511, -490, 528, 528, 390, 529, 2, -283,
	-284, 529, -285, 529, 405, -191, -285, 383, 316, -516,
	-381, 22, 298, 121, -381, -556, -316, -316, 312, -214,
	62, 372, -285, -370, -191, -371, -324, -375, -191, 529,
	529, -174, 528, -191, -371, -375, -284, -375, -375, -285,
	454, -174, -375, -284, -285, 528, 529, -285, -191, -316,
	-191, -375, 529, -375, -285,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 479, 480, 482, 483, 484, 486, 487, 489,
	491, 493, 494, 495, 497, 498, 500, 501, 502, 503,
	504, 506, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 572, 0, 1193,
	1195, 1197, 1199, 0, 710, 0, 32, 33, 0, -2,
	281, 283, 285, 0, 311, 313, 314, 316, 318, -2,
	0, 412, 413, 415, 417, -2, -2, 0, 878, 880,
	0, 559, 561, 0, 883, 885, 0, 0, 581, 582,
	0, 1282, -2, 575, 577, 579, 644, 646, 648, 650,
	652, 654, 656, 658, 660, 661, 663, 665, 667, 669,
	671, 673, 675, 677, 678, 680, 682, 684, 686, 688,
	690, 692, 694, 696, 698, 700, 702, 704, -2, 706,
	-2, -2, 0, -2, -2, -2, 1211, 36, 38, 40,
	42, 44, 46, 48, 50, 52, 363, 364, 366, 368,
	370, 372, 375, 377, 379, 1340, 419, 421, 423, 425,
	427, 429, 431, 0, -2, 1352, 0, 0, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 83, 84, 85,
	86, 87, 88, 89, 90, 66, 67, 69, 70, 71,
	75, 76, 77, 78, 81, 64, 0, 0, 1313, 1315,
	1317, 1319, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 481, 485, 488, 490, 492,
	496, 499, 505, 507, 509, 466, 467, 470, 1973, 1990,
	1991, 1992, 1995, 1996, 1997, 1998, 1999, 2000, 2391, 2472,
	2473, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030,
	2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040,
	2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070,
	2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080,
	2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090,
	2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330,
	2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340,
	2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 468, 469, 1038, 0, 533, 531, 1966, 534, 2208,
	536, 538, 406, 407, 408, 409, 410, 411, 0, 552,
	544, 551, 553, 555, 556, 557, 558, 528, 526, 0,
	552, 2025, 550, 1191, 1192, 1176, 1177, 2246, 1218, 0,
	193, 571, -2, -2, -2, 2357, -2, 603, -2, 610,
	2361, 2248, 615, 0, 617, -2, 620, 1194, 1196, 1198,
	708, 709, 1976, 0, 0, 0, 0, 34, 35, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1087, 1088, 1089, 0, 201, 203, -2, -2, -2, -2,
	0, 0, 2286, 2074, 1934, 1992, 1937, 1932, 282, 284,
	286, 287, 0, 0, 0, 0, 0, 0, 312, 315,
	317, -2, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 933, 925, 926, 1142, 0, 0, 0, 0,
	414, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	343, 471, 472, 0, 1341, 1341, 0, 0, 0, 0,
	256, 247, 879, 881, 882, 0, 0, 0, 0, 560,
	562, 0, 0, 229, 884, 886, 887, 0, 0, 0,
	0, 0, 258, 0, 0, 576, 578, 580, 645, 647,
	649, 651, 653, 655, 657, 659, 662, 664, 666, 668,
	670, 672, 674, 676, 679, 681, 683, 685, 687, 689,
	691, 693, 695, 697, 699, 701, 703, 705, 715, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, -2,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 799, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	718, 720, 721, 722, 0, 779, 797, 798, 807, 707,
	0, 1078, 1342, 1220, 1201, 1215, 1220, 1203, 1204, 1205,
	1206, 1207, 1212, 1214, 1208, 1209, 1210, 37, 39, 41,
	43, 45, 47, 49, 51, 53, 365, 367, 369, 371,
	373, 376, 378, 380, -2, 1311, 1312, 420, 422, 424,
	426, 428, 430, 432, 563, 0, 565, 0, 719, -2,
	0, 1346, 1346, 1346, 0, 0, 1312, 1310, 0, 568,
	569, 624, 625, 1577, 0, 0, 0, 0, 0, 0,
	0, 1831, 1663, 0, 626, -2, 1694, 1696, 2332, 2357,
	1830, 1698, 1699, 1700, 1701, 1702, 0, 1704, 1705, 1706,
	1707, 1708, 1709, 0, 1711, 0, 1716, 1717, 1718, 0,
	2339, 1911, 1986, -2, 0, 0, 2345, 1982, 0, 1797,
	1734, -2, -2, 2009, 1988, 1509, 1510, 1511, 1512, 1513,
	-2, -2, 2374, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 0, 2320, 2340, 2341, 2346, 2348,
	2342, 2329, 1759, 2086, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1536, 1545, -2,
	-2, -2, -2, -2, -2, -2, 2333, 2334, 2351, 2354,
	2360, 2365, 2366, 2338, 2347, 2375, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389,
	2390, 1537, -2, -2, -2, -2, 1329, 2219, 1332, 1038,
	1330, 1314, 1316, 0, 1318, 0, 0, 0, 1323, 1349,
	1347, 0, 1390, 1327, 1328, 1408, 1408, 1432, 0, 1413,
	0, 1432, 1341, 1458, 0, 1419, 2238, 1735, 1736, 0,
	1992, 1987, -2, -2, 2372, 0, 0, 0, 0, 0,
	0, 0, 529, 0, 535, 537, 0, 0, 0, 0,
	0, 0, 0, 0, 1217, 1141, 573, 574, 0, 598,
	0, 602, 2328, -2, 2033, 2257, -2, 606, 1221, 1225,
	1226, 1227, 1228, 1229, 0, 0, 0, 0, 1234, 0,
	0, 612, 0, 0, 599, 600, 618, 621, 0, 711,
	712, 713, 714, 63, 0, 2340, 1458, 65, 0, 1956,
	2017, 2018, 2019, 2020, 2021, 2373, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
	2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465,
	2466, 2467, 2468, 2469, 2470, 2471, 2374, 68, 0, 2340,
	72, 0, 2340, 0, -2, 79, 0, 1962, 82, 0,
	1959, 91, 0, 2340, 0, 1931, -2, 0, 178, 1970,
	0, 904, 1972, -2, 2340, 1086, 259, 260, 2005, 2006,
	2013, 2014, 2015, 2016, 0, 0, 0, 0, 871, 1928,
	1933, 872, 1952, 873, 1938, 0, 288, 289, 290, 291,
	292, 0, 293, 2340, 295, 296, 0, 298, 299, 2340,
	301, 302, 0, 304, 0, 214, 215, 320, 321, 0,
	323, 0, 2340, 0, 0, 0, 329, -2, 344, 0,
	341, 332, 333, 335, 336, 337, 338, 0, 384, 382,
	1967, 0, 899, 2340, 901, 0, 0, 1121, -2, 2340,
	1083, 0, 1127, 1123, 0, -2, 0, 1339, 2340, 1238,
	929, 930, 931, 932, 0, 403, 0, 1251, 0, 1253,
	0, 1272, 1464, 1408, 1408, 0, 345, 346, 347, 348,
	349, 2340, 0, 0, 0, 354, 0, 356, 357, 358,
	359, 360, 361, 362, 167, 2340, 437, 464, 0, 167,
	2340, 440, 167, 2340, 443, 0, 446, 1140, 167, 2340,
	449, 167, 2340, 452, 454, 167, 2340, 458, 459, 461,
	2340, 463, 261, 1187, 1188, 1189, 1190, 0, -2, 522,
	1975, -2, 474, 0, 475, 0, -2, 0, 273, 0,
	0, 888, 889, 890, 891, 892, 895, 896, 897, 898,
	1445, 232, 230, 0, 0, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 0, 0, 583, 0, 0, 716,
	717, 0, 0, 727, 728, 729, 0, 273, 2249, 2216,
	2106, 736, 0, 739, 742, -2, 0, 0, 0, 0,
	746, 0, 751, 752, 753, 0, 755, 757, 877, 759,
	0, 0, 761, 0, 765, 0, 768, 0, 770, 0,
	772, -2, -2, -2, -2, 783, -2, 0, 786, 788,
	0, 790, -2, 0, 799, 795, 796, 0, 0, 0,
	0, 815, 816, 0, 825, 0, 828, 829, 830, 0,
	832, 833, 0, 835, 836, 837, 838, 0, 840, 841,
	-2, -2, 845, 847, 0, 854, 0, 858, 0, 862,
	0, 723, 724, 167, 1462, 1200, -2, 1202, 0, -2,
	0, 564, 0, 567, 1369, 1297, 1294, 0, 1366, 1367,
	1298, 0, 0, 0, 1305, 0, 1344, 1345, 0, 0,
	0, 1284, 1285, 0, 0, 0, 0, 1836, 1837, 1838,
	1839, 1840, 1841, 1844, 1845, 1842, 1843, 1846, 1847, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 1850, 1851, 0,
	0, 1853, 0, 1855, 0, 0, 0, 0, 0, 0,
	1642, 1644, 1919, 0, 0, 1852, 1582, 1583, 1584, 1585,
	1586, 1621, 1622, 0, 0, 1695, 1916, 1915, 1697, 0,
	1867, 0, 1710, -2, 0, 1831, 1862, 0, 0, 1719,
	1720, 1721, 0, 0, 1867, 0, 0, 1910, 1731, 1732,
	1574, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1523, 1522, 0, 1524, 0, 1525, 1526, 1533, 1546,
	0, 0, 0, 0, 1550, 0, 0, 0, 0, 0,
	0, 0, 1891, -2, 0, 0, 0, 0, 1538, 0,
	1331, 0, 0, 1394, 1920, 1924, 1925, 1394, 1394, 0,
	0, 1868, 1455, 1455, 0, 0, 1451, 1451, 1451, 1449,
	1432, 0, 1432, 1442, 0, 1432, 1432, 0, -2, 1413,
	0, 0, 1442, 0, 1426, 510, 512, 514, 516, 517,
	518, 520, 1459, 1460, 0, 0, 0, 0, 1993, 0,
	0, 0, 0, 0, 1978, 0, 0, 0, 0, 2296,
	2248, 540, 554, 1341, 0, 1870, 1481, 1485, 0, 1487,
	1488, 1489, 1490, 1491, 0, 0, 1482, -2, 1534, 1536,
	1557, 2010, 2011, 2012, 1517, 1518, 1519, 1520, 1521, 1529,
	1516, 1516, 1516, 1527, 1556, 1548, 1556, 1552, 1502, 1503,
	1504, 1539, 1540, 1541, 1542, 0, 2296, 2248, 546, 0,
	0, 0, 0, 0, -2, 608, 613, 614, 0, 0,
	1223, 0, 1230, 635, 636, 637, 1232, 1233, 0, 1235,
	611, 638, 639, 640, 641, 642, 643, 0, 1940, 1941,
	1942, 1943, 1946, 1947, 0, 0, 609, 628, 616, 0,
	622, 92, 1173, 0, 131, 0, 1173, 1173, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 0, 116, 127,
	104, 105, 0, 0, 0, 0, 0, 73, 1060, 0,
	1063, 0, 0, 0, 0, 0, 0, 0, 1076, 0,
	0, 0, 0, 115, 0, 0, 110, 94, 0, 0,
	0, 117, 129, 0, 158, 160, 0, 0, 0, 0,
	0, 0, 177, 185, 0, 0, 0, 0, 1084, 0,
	1338, 0, 0, 2340, 0, 1445, 2144, -2, -2, 1445,
	870, 0, 0, 1993, 1936, 0, 0, 0, 0, 0,
	0, 0, 322, 324, 0, 326, 327, 328, 0, 1120,
	0, 334, 374, 1009, 2340, 0, 0, 401, 396, 0,
	398, 0, 1059, 2340, 1057, 1971, 0, 1081, 0, 1038,
	2340, 1969, 0, 0, 1128, 2002, 1137, 1141, 1240, 0,
	405, 0, 1254, 1256, 0, 0, 1465, 0, 1467, 1468,
	0, 351, 352, 353, 0, 433, 0, 165, 166, 0,
	167, 2340, 438, 0, 441, 0, 167, 2340, 1926, 447,
	0, 450, 0, 0, 456, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 236, 0, 1444, 0, 1445, 230, 273, 273, 1445,
	585, 1445, 587, 0, 0, 730, 731, 0, 273, 273,
	273, 737, 738, 740, 741, -2, -2, -2, 855, 743,
	744, 822, 0, 0, 0, 821, 758, 0, 864, 2234,
	875, 822, 2074, 822, 2074, 822, 2074, 769, 771, 774,
	810, 818, 782, 787, 0, 0, 792, 800, -2, 0,
	802, 0, 804, 0, 806, 822, 823, 826, 831, 834,
	839, 0, 0, 0, 0, 0, 0, 0, 1077, 0,
	1213, 1369, 1297, 566, 1288, 1368, 1289, 1296, 1299, 0,
	0, 1301, 0, 1303, 0, 1364, 1365, 1372, 1373, 0,
	1383, 1384, 1376, 0, -2, 0, 0, 1379, 1380, 1307,
	0, 1324, 1325, 1326, 1353, 1356, 1151, 0, 2472, 1578,
	1476, 1579, 1580, 1955, 0, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, -2, -2, -2, -2, -2,
	-2, -2, -2, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, -2, -2, -2, 1619, 1620, -2,
	1854, 1856, 0, 1919, 0, -2, 0, -2, -2, -2,
	-2, 1639, 0, 1641, 1646, 1648, 1650, 0, 0, 0,
	0, 1918, 1660, 1902, 1903, 0, 0, 1833, 1834, 1835,
	1645, 0, 1664, 1917, 1914, 0, 0, 1866, 1352, 1723,
	0, 0, 0, 0, 1730, 1715, 1864, 0, 1863, 0,
	0, 0, 1874, 0, 1909, 1905, 0, 1953, 1573, 1560,
	1561, 1562, 1563, 1564, 1565, 1575, 0, 1950, 1979, 1985,
	1807, 0, 0, 0, 1760, 1761, 1762, 1763, 1764, 0,
	1766, 1767, 0, 1769, 1770, 0, 1772, 1773, 0, 1775,
	1776, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 0, 0, 1779,
	0, 1877, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 1781, 0, 1783, 1868, 1888, 0, 0, 1665, 0,
	0, 0, 1831, 0, 1786, 1868, 1896, 0, 0, 0,
	0, 0, 1868, 0, 1901, 0, 1793, 0, 1795, 1333,
	0, 0, 1471, 0, 0, 0, 1923, 1471, 1471, 0,
	1389, 0, 0, 1452, 1453, 1454, 0, 0, 1455, 0,
	1446, 1450, 1447, 1448, 1442, 1405, 0, 0, 1957, 1442,
	1411, 1441, 0, 1038, 1431, 1442, 1442, 0, -2, 1415,
	1432, 0, 0, 511, 513, 515, 519, 521, 0, 0,
	1352, -2, 0, -2, 1037, 0, 0, 0, 0, 530,
	532, 0, 0, 453, 0, 0, 524, 0, 527, 0,
	1472, 1475, 0, 0, 1486, 1492, 1493, 0, -2, 0,
	0, 1558, 0, 0, 0, 0, 0, 196, 0, 601,
	0, 1222, 1231, 0, 632, 0, 634, 0, 1944, 1948,
	1945, 1949, 0, 623, 0, 0, 0, 0, 1172, 0,
	135, 2340, 0, 169, 0, 0, 1002, 1963, 0, 0,
	0, 0, 2093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 1061, 1062, 1064, 1071,
	1073, 0, 1067, 1951, 0, 0, 1068, 0, 1070, 1072,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 107, 0, 0, 0, 0, 1930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1116, 1114, 1096, 1097, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 0, 0, -2, 0, 0, 0, 0, 206, 0,
	264, 1929, 1939, 0, 893, 894, 294, 297, 300, 303,
	202, 0, 330, 0, 0, 935, 910, 0, 0, 383,
	273, 0, 0, 397, 0, 1055, 1058, 0, 1038, 2340,
	1095, 0, 0, 0, 0, 0, 0, 1126, 0, 2340,
	1958, 2001, 2002, 1242, 1248, 0, 1471, 0, 1270, 1257,
	0, 0, 0, 1270, 1274, 1275, 1277, 1278, 0, 0,
	1466, 0, 355, 465, 167, 435, 0, 167, 167, 444,
	0, 0, 167, 455, 167, 460, 167, 262, 462, 473,
	523, 1341, 1341, 273, 271, 2191, 269, 266, 268, 0,
	0, 0, 936, 938, 939, 940, 941, 0, 2002, 0,
	2133, 2002, 0, 1260, 1262, 0, 226, 0, 233, 231,
	236, 0, 0, 395, 584, 589, 725, 0, 273, 733,
	734, 735, 776, 812, 820, 745, 747, 748, 749, 0,
	876, 874, 760, 822, 763, 822, 766, 822, 785, 789,
	794, 801, 0, 0, 0, 814, 0, 0, 0, 0,
	0, 0, 0, 859, 860, 861, 863, 1463, 1292, 1293,
	1295, 0, 1304, 0, 0, 1378, -2, -2, 1377, 1381,
	1382, -2, -2, -2, -2, 1300, 0, 1309, 1306, 0,
	1363, 1149, 1150, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1661, 0, -2, 1640, 1643, 1647, 1649, 1651,
	0, 0, 0, 0, 0, 0, 1857, 0, 1859, 1662,
	1912, 1915, 1829, 0, 0, 1351, 1352, 1352, 0, 1729,
	0, 1865, 0, 1872, 1873, 0, 1722, 0, 1906, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1733, 0,
	0, 0, 0, 1765, 1768, 1771, 1774, 0, 0, 0,
	0, 1754, 0, 0, 0, 1758, 1528, 1514, 0, 1556,
	1554, 1555, 1549, 1556, 1553, 1506, 0, 1505, 0, 1778,
	0, 1780, 1782, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1668,
	1669, 1670, 1785, 1894, 1895, 0, 0, 0, 0, 0,
	0, 1791, 0, 1900, 1792, 1794, 1341, 0, 1334, 0,
	1391, 1386, 1470, 0, 1921, 1445, 1393, 1395, 1922, 1960,
	1386, 1386, 0, 1869, 0, 0, 1436, 0, 0, 0,
	1438, 1409, 0, 0, 1403, 0, 1399, 1400, 1401, 1402,
	1410, 1038, 1440, 1412, 1416, 1979, 0, 1442, 0, 1427,
	0, 1429, 1461, 0, 1421, 1424, 0, 0, 1994, 274,
	0, 305, 309, 310, 306, 307, 308, 539, 0, 0,
	0, 0, 1871, 0, 1477, 0, 1483, 0, 0, 0,
	0, 545, 0, 0, 0, 192, 0, 597, -2, 630,
	631, 633, 0, 629, 132, 1173, 0, 0, 1154, 1156,
	0, 137, 2340, 146, 0, 976, 0, 1961, 0, 0,
	0, 0, 0, 1175, 0, 0, 2340, 167, 2340, 167,
	149, 152, 0, 157, 154, 155, 182, 183, 184, 0,
	0, 967, 93, 1173, 0, 96, 100, 108, 0, 0,
	0, 114, 0, 0, 0, 1158, 1164, 0, 0, 1065,
	1066, 1069, 1075, 74, 0, 0, 1162, 1168, 80, 0,
	1153, 159, 98, 102, 109, 0, 1170, 95, 0, 181,
	0, 0, 0, 173, 0, 174, 175, 186, 0, 167,
	2340, 0, 902, 903, 1115, 1079, 1080, 0, 1085, 0,
	0, 0, 1445, 198, 0, 1445, 206, 0, 1935, 0,
	0, 0, 0, 0, 0, 934, 1020, 0, 907, 0,
	0, 0, 389, 385, 0, 394, 400, 399, 900, 0,
	0, 0, -2, 0, 0, 1130, 1124, 1125, 0, 0,
	0, 2340, 1244, 1248, 0, 1247, 1339, 1352, 404, 1249,
	1270, 0, 0, 0, 1259, 1255, 1252, 1471, 0, 0,
	0, 0, 0, 350, 434, 167, 439, 442, 1927, 167,
	448, 451, 457, 476, 477, 248, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 945, 0, 2002, 2002, 0,
	1965, 0, 0, 0, 0, 234, 0, 237, 0, 0,
	0, 242, 243, 244, 245, 246, 227, 1445, 0, 586,
	0, 0, 732, 0, 762, 764, 767, 803, 805, 822,
	848, 849, 962, 0, 962, 0, 0, 1302, 0, 1375,
	1308, 1357, 1358, 0, 1151, 0, 1581, 1624, 0, 0,
	-2, 0, 0, 1628, 0, 0, 0, -2, 0, 0,
	0, 1858, 1860, 0, 1914, 1724, 0, 0, 0, 1728,
	1712, 1713, 0, 1832, 1875, 1904, 1908, 0, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 0, 1954, 1980, 1984, 1805,
	1806, 1810, 1968, 0, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 1547, 1551, 0, 0, 1876,
	1887, 1889, 1666, 1667, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, -2, -2, -2, 1684, 1685, 1686,
	-2, -2, -2, 0, 0, 0, 1890, 1892, 1893, 1897,
	1898, 0, 1788, 1789, 1790, 1899, 0, 1341, 1335, 1388,
	0, 1469, 1392, 0, 1388, 1388, 1348, 1434, 0, 0,
	1457, 0, 1406, 0, 1407, 0, 1439, 0, 1414, 1417,
	1418, 1428, 0, 1420, 0, 1423, 0, 1724, -2, 275,
	277, 0, 280, 542, 543, 541, 525, 0, 0, 1479,
	0, 0, 1531, 1535, 1559, 548, 549, 547, 194, 0,
	1443, 0, 0, 0, 0, 168, 974, 1001, 0, 0,
	0, 1144, 1151, 0, 0, 1007, 139, 0, 0, 0,
	147, 0, 0, 144, 0, 151, 156, 0, 0, 0,
	0, 0, 0, 111, 112, 113, 0, 118, 0, 119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 1148, 0, 0, 188, 0, 0, 0,
	1118, 1119, 1159, 1165, 0, 0, 206, 204, 0, 207,
	0, 210, 211, 0, 206, 200, 0, 0, 325, 1038,
	331, 956, 1008, 0, 1010, 0, 908, 0, 0, 1009,
	381, 0, 388, 0, 1059, 0, 0, 1082, 1093, 1038,
	0, 1129, 1131, 1139, 0, 0, 0, 1246, 1248, 0,
	1239, 1240, 1371, 1250, 1268, -2, 0, 0, 1352, 1276,
	1273, 1279, 1280, 0, 436, 445, 270, 0, 265, 267,
	0, 251, 0, 0, 937, 942, 0, 0, 0, 0,
	0, 1261, 1263, 0, 0, 0, 0, 0, 0, 236,
	257, 0, 726, 750, 813, 850, 961, 0, 0, 852,
	0, 0, 1374, 1361, 1362, 1359, 1151, 1626, 1630, 0,
	0, 0, 1632, -2, 0, 1654, -2, -2, 1861, 1913,
	1703, 1352, 1725, 1727, 1714, 1907, 1576, 0, 1812, 1809,
	0, 1796, 0, 1749, 1750, 0, 0, 1753, 1755, 1756,
	1757, 1515, 1508, 1507, 1886, 0, 0, 0, 0, 1787,
	1336, 0, 1801, 0, 0, 1396, 1801, 1801, 1435, 0,
	1437, 1404, 1397, 0, 1980, 1430, 1422, 0, 0, 278,
	0, 1473, 1478, 0, 1484, 1530, 195, 133, 134, 136,
	0, 975, 0, 978, 0, 0, 0, 0, 985, 986,
	0, 0, 0, 0, 0, 995, 0, 1024, 1034, 0,
	1363, 0, 0, 0, 141, 162, 0, 0, 1174, 0,
	0, 167, 167, 0, 0, 1155, 1157, 0, 0, 0,
	0, 121, 0, 0, 1160, 1166, 1163, 1169, 0, 0,
	0, 1171, 179, 180, 0, 167, 0, 172, 167, 167,
	1148, 0, 0, 0, 197, 0, 0, 0, 0, 199,
	263, 206, 0, 964, 0, 1020, 1012, 1013, 1014, 0,
	1019, 1021, 0, 0, 922, 909, 0, 918, 0, 0,
	935, 910, 0, 386, 1056, 1090, 1038, 0, 1122, 0,
	0, 0, 0, 0, 0, 1236, 1248, 0, 1241, 1242,
	1270, 1370, 0, 0, 0, 1258, 1371, 0, 272, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	238, 0, 239, 240, 241, 228, 588, 590, 0, 0,
	596, 960, 0, 0, 0, 0, 1360, 1634, -2, -2,
	1655, 0, 1981, 1983, 1352, 0, 1798, 1354, 0, 0,
	-2, 0, 0, 0, 1337, 1320, 0, 1387, 1385, 1321,
	1322, 1456, 0, 1425, 279, 0, 1480, 138, 0, 979,
	980, 1964, 982, 0, 984, 987, 0, 990, 2004, 0,
	994, 0, 1003, 1025, 0, 956, 0, 1030, 1031, 1032,
	1145, 1146, 1036, 0, 140, 142, 161, 1148, 0, 143,
	150, 0, 0, 97, 0, 0, 2065, 124, 122, 120,
	1152, 99, 0, 181, 187, 1147, 176, 189, 167, 0,
	1161, 1167, 208, 0, 209, 212, 0, 0, 910, 963,
	0, 1011, 0, 1022, 1023, 912, 0, 911, 0, 0,
	0, 0, 0, 387, 390, 0, 393, 0, 0, 1132,
	0, 1138, 0, 0, 0, 0, 1243, 1244, 402, 1264,
	0, 0, 1270, 1281, 250, 0, 0, 943, 946, 947,
	948, 949, 950, 951, 952, 953, 954, 944, 1036, 0,
	0, 1000, 0, 255, 235, 0, 592, 0, 594, 0,
	851, 853, 0, 0, 1726, 1816, 0, 0, 1751, 1752,
	-2, 0, 1692, 1800, 1802, 0, 1398, 1474, 977, 981,
	0, 0, 0, 1042, 0, 0, 996, 0, 1028, 1029,
	964, 0, 956, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 171, 190, 1148, 205, 222, 0, 1091,
	912, 0, 0, 920, 0, 923, 0, 919, 916, 917,
	956, 0, 391, 392, 0, 1094, 0, 1139, 0, 0,
	1245, 1246, 1471, 1267, 1271, 0, 0, 1034, 1036, 910,
	0, 591, 0, 0, 856, 857, 0, 0, 0, 0,
	1811, 1355, 1693, 0, 0, 0, 0, 989, 1047, 0,
	0, 0, 1026, 1027, 1024, 0, 1005, 0, 1038, 145,
	0, 1036, 0, 968, 0, 0, 971, 0, 0, 125,
	2065, 123, 0, 167, 225, 0, 219, 217, 218, 905,
	0, 0, 1016, 1018, 0, 924, 964, 922, 1092, 1036,
	0, 1034, 0, 1237, 0, 273, 273, 956, 1034, 1471,
	0, 273, 593, 595, 1808, 1828, 1817, -2, 2299, 2071,
	0, 1828, 1828, 1803, 1804, 0, 0, 991, 1043, 1044,
	0, 1039, 1040, 1041, 2003, 992, 993, 1471, 1033, 0,
	1042, 163, 956, 965, 0, 0, 966, 0, 0, 128,
	0, 130, 191, 213, 0, 0, 0, 1015, 0, 0,
	0, 0, 910, 912, 1034, 0, 956, 0, 0, 252,
	253, 964, 956, 999, 254, 1813, 0, 0, 1819, 1820,
	1821, 1822, 1823, 1814, 1815, 983, 0, 1045, 0, 1046,
	0, 0, 0, 1004, 0, 1047, 148, 969, 0, 972,
	0, 126, 0, 220, 221, 0, 1017, 913, 0, 915,
	912, 921, 956, 0, 964, 0, 1265, 0, 910, 964,
	0, 1825, 1826, 0, 0, 0, 1048, 0, 1051, 1052,
	0, 1049, 0, 1024, 0, 0, 0, 959, 914, 906,
	964, 1036, 910, 1034, 0, 1471, 910, 1824, 1827, 1818,
	988, 1050, 1053, 1054, 1035, 1006, 0, 0, 0, 955,
	957, 958, 910, 1034, 1471, 956, 1471, 997, 1471, 964,
	0, 223, 0, 1471, 956, 1135, 964, 1266, 998, 970,
	0, 0, 1133, 964, 910, 0, 224, 910, 1471, 0,
	1471, 1136, 964, 1134, 973,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 517, 3, 523, 518, 3,
	528, 529, 521, 519, 533, 520, 530, 522, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 536, 3,
	509, 511, 510, 514, 532, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 526, 3, 527, 524, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 534, 516, 535, 512,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 513, 57852, 515, 57853, 525, 57854, 531,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1224
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1229
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1231
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1234
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1235
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1236
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1237
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1238
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1240
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1241
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1249
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1258
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1259
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1262
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1263
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1264
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1265
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1266
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1267
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1268
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1269
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1326
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1352
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1365
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1382
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1386
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1390
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1407
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1411
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1432
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1464
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1468
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1472
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1478
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1482
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1488
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1497
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1508
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1518
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1526
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1536
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1540
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1550
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1561
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1568
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1580
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1587
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1595
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1600
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1604
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1609
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1615
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1623
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1634
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1644
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1654
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1663
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1674
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1680
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1692
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1700
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1706
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1711
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1732
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1758
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1778
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1783
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1788
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1831
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1873
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1880
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1918
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1943
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2004
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2032
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2041
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2045
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2048
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2099
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2173
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2182
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2190
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2217
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2230
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2334
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2351
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2449
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2482
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2493
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2502
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2573
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2582
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2588
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2593
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2598
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2603
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2608
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2612
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2631
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2639
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2715
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2741
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2761
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2762
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2763
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2764
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2782
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2791
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2818
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2827
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2854
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2856
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2863
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2875
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2894
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2899
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2911
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2914
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2915
		{
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2916
		{
			return helpWith(sqllex, "CREATE")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2919
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2920
		{
			return unimplemented(sqllex, "create cast")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2929
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2930
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplemented(sqllex, "create operator")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2932
		{
			return unimplemented(sqllex, "create publication")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2933
		{
			return unimplemented(sqllex, "create rule")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			return unimplemented(sqllex, "create server")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2940
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2941
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2944
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2945
		{
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2948
		{
		}
	case 344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2949
		{
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2953
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2957
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2959
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2963
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2964
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			return unimplemented(sqllex, "drop server")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2967
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2973
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2974
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2975
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2976
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2979
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2980
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2981
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2982
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3000
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3027
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3046
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3050
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3061
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3089
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3124
		{

			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return helpWith(sqllex, "DELETE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3151
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3152
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3160
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3163
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3164
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3167
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3176
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3177
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3178
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3179
		{
			return helpWith(sqllex, "DROP")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3182
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3183
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3185
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3186
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3196
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3204
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3248
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3276
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3359
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3388
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3411
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3418
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3451
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3453
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3461
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3469
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3477
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3485
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3500
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3503
		{
			return helpWith(sqllex, "DELETE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3506
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3507
		{
			return helpWith(sqllex, "INSERT")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3510
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "DELETE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "INSERT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3562
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3570
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3595
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3603
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3683
		{
			return helpWith(sqllex, "GRANT")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3730
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3739
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3749
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3767
		{
			return helpWith(sqllex, "RESET")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "RESET")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3794
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3808
		{
			return helpWith(sqllex, "USE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3813
		{
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "USE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3881
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3992
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3997
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4001
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4020
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4027
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4032
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4037
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4042
		{
			return unimplemented(sqllex, "set from current")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4056
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4105
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = tree.Low
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = tree.Normal
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4145
		{
			sqlVAL.union.val = tree.High
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4164
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4194
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4197
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4198
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "SHOW")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4229
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4233
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4238
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4243
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4248
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4260
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.str = "client_encoding"
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.str = "timezone"
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4275
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4289
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4293
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4297
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4316
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4356
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4365
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4482
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4501
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4534
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4550
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4555
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = true
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = true
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = false
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4595
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4623
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4637
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4677
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4682
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4684
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4688
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = false
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4703
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4708
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4739
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4746
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4749
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = true
		}
	case 822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = false
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4769
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4793
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4804
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4825
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4830
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4839
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4851
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4855
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4886
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4894
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4902
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4939
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4953
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4962
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4974
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4978
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4985
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5118
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5157
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5170
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5212
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5213
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "RESUME")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5252
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5340
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5379
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5394
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5412
		{

			sqlVAL.union.val = nil
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5418
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = nil
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5428
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5439
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5444
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5449
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 920:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5476
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5490
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5505
		{
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5506
		{
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5507
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5531
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5579
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5590
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5593
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5596
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5597
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5603
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5612
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5619
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5624
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.str = ""
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 965:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5655
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 970:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 973:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5719
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5748
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5786
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5813
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5827
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5838
		{
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5839
		{
		}
	case 997:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5937
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5948
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5959
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5965
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5975
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5990
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6055
		{
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6056
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6057
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6058
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6059
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6132
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6216
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6225
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6233
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6244
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6249
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6264
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6266
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6274
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6305
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6312
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6327
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = true
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6337
		{

			sqlVAL.union.val = true
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = false
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6352
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6366
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6378
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6390
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6400
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6410
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = nil
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6512
		{
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6513
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6529
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6531
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6533
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6535
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6537
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6539
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6577
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6595
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6614
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6631
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6648
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6652
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = false
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = true
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = false
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = true
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = false
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6706
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.str = ""
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6759
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6765
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6835
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6841
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6853
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6859
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6873
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6879
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6896
		{
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6897
		{
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6900
		{
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6901
		{
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6912
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6930
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6939
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6960
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6968
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6989
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6997
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7008
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7012
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7013
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7014
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7033
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7035
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7038
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7051
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7056
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7065
		{
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7066
		{
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7067
		{
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7084
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7087
		{
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7088
		{
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7116
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7129
		{
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7131
		{
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7135
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7214
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.str = ""
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.str = ""
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.str = ""
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.str = ""
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7257
		{
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7258
		{
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7287
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7305
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7309
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7318
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7367
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7394
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7398
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7436
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7468
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7618
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7653
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7654
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7655
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7716
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7760
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7776
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = true
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = false
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7829
		{
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7830
		{
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = nil
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7843
		{
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7844
		{
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = true
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = false
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = false
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = true
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7873
		{
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7874
		{
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7915
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7936
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7941
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7970
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8003
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8058
		{
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8059
		{
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8062
		{
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8063
		{
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8116
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8118
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8133
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8155
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8160
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8165
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8176
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8188
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8207
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8246
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8256
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8291
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8302
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8332
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8365
		{
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8367
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = nil
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = true
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = false
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.str = tree.AstFull
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.str = tree.AstRight
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.str = tree.AstInner
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8484
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8485
		{
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.str = tree.AstHash
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.str = ""
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8552
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8570
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8576
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8582
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8592
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8621
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8634
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8642
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8643
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8661
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8663
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8671
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8684
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8691
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8700
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8740
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8752
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8753
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = types.Geography
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8778
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8786
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8812
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8820
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = nil
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = types.Int2
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = types.Int
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = types.Float4
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = types.Float
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8863
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8871
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8879
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = types.Bool
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8893
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = types.Float
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8912
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8918
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8940
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = types.String
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = true
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = false
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = types.Date
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8989
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8997
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9011
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9020
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9028
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9045
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = true
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = false
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = false
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = types.Interval
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9069
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9153
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9168
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = nil
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9198
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9258
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9510
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9576
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9598
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9792
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9797
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9823
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9832
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9847
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9877
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9888
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9889
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9904
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9913
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9979
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10082
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10104
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10109
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10118
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10127
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10136
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10145
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10150
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10155
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10160
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10165
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10174
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10175
		{
			return unimplemented(sqllex, "treat")
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10196
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10201
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10248
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.str = ""
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10337
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10350
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10418
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10447
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = tree.Any
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = tree.Some
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = tree.All
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = tree.Div
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = tree.LT
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = tree.GT
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = tree.LE
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = tree.GE
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = tree.NE
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = tree.Like
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10808
		{
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10809
		{
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10881
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10889
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10962
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10978
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10987
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10998
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11007
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11027
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11205
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11225
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.str = ""
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
