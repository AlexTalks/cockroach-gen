// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op {
		case tree.Plus:
			return expr, 0
		case tree.Minus:
			return unaryNegation(expr), 0
		}
	case tree.ComparisonOperator:
		switch op {
		case tree.RegMatch:
			return &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: expr}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:136

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:782
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lex.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NON_VOTERS = lex.NON_VOTERS
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCANS = lex.SCANS
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_LOCALITIES_CHECK = lex.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const VOTERS = lex.VOTERS
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13064

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1499,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	259, 397,
	-2, 0,
	-1, 74,
	241, 234,
	508, 234,
	-2, 0,
	-1, 87,
	229, 1259,
	243, 1259,
	259, 393,
	386, 393,
	396, 1029,
	432, 393,
	445, 1029,
	492, 1029,
	519, 393,
	545, 1029,
	-2, 0,
	-1, 93,
	132, 1499,
	236, 1499,
	530, 1499,
	531, 1499,
	-2, 0,
	-1, 109,
	150, 1470,
	169, 1470,
	182, 1470,
	239, 1470,
	272, 1470,
	338, 1470,
	348, 1470,
	525, 1470,
	-2, 1441,
	-1, 148,
	158, 886,
	258, 886,
	389, 849,
	450, 849,
	491, 849,
	511, 886,
	513, 849,
	-2, 0,
	-1, 151,
	4, 1501,
	21, 1501,
	22, 1501,
	23, 1501,
	24, 1501,
	25, 1501,
	26, 1501,
	27, 1501,
	29, 1501,
	30, 1501,
	36, 1501,
	41, 1501,
	42, 1501,
	44, 1501,
	45, 1501,
	46, 1501,
	47, 1501,
	48, 1501,
	49, 1501,
	50, 1501,
	51, 1501,
	53, 1501,
	54, 1501,
	55, 1501,
	56, 1501,
	58, 1501,
	59, 1501,
	60, 1501,
	61, 1501,
	62, 1501,
	63, 1501,
	64, 1501,
	68, 1501,
	69, 1501,
	70, 1501,
	71, 1501,
	73, 1501,
	74, 1501,
	75, 1501,
	79, 1501,
	80, 1501,
	81, 1501,
	82, 1501,
	83, 1501,
	84, 1501,
	85, 1501,
	88, 1501,
	89, 1501,
	90, 1501,
	91, 1501,
	92, 1501,
	94, 1501,
	96, 1501,
	97, 1501,
	98, 1501,
	99, 1501,
	100, 1501,
	101, 1501,
	103, 1501,
	104, 1501,
	105, 1501,
	107, 1501,
	108, 1501,
	109, 1501,
	117, 1501,
	118, 1501,
	119, 1501,
	120, 1501,
	121, 1501,
	123, 1501,
	124, 1501,
	125, 1501,
	127, 1501,
	128, 1501,
	129, 1501,
	131, 1501,
	132, 1501,
	133, 1501,
	135, 1501,
	136, 1501,
	137, 1501,
	140, 1501,
	141, 1501,
	142, 1501,
	144, 1501,
	145, 1501,
	147, 1501,
	148, 1501,
	149, 1501,
	151, 1501,
	152, 1501,
	153, 1501,
	154, 1501,
	155, 1501,
	156, 1501,
	157, 1501,
	158, 1501,
	159, 1501,
	160, 1501,
	161, 1501,
	162, 1501,
	163, 1501,
	164, 1501,
	165, 1501,
	166, 1501,
	168, 1501,
	174, 1501,
	175, 1501,
	176, 1501,
	177, 1501,
	181, 1501,
	183, 1501,
	184, 1501,
	188, 1501,
	189, 1501,
	190, 1501,
	191, 1501,
	192, 1501,
	193, 1501,
	194, 1501,
	195, 1501,
	196, 1501,
	197, 1501,
	198, 1501,
	199, 1501,
	200, 1501,
	202, 1501,
	203, 1501,
	205, 1501,
	206, 1501,
	208, 1501,
	209, 1501,
	210, 1501,
	211, 1501,
	212, 1501,
	213, 1501,
	214, 1501,
	215, 1501,
	216, 1501,
	218, 1501,
	219, 1501,
	221, 1501,
	222, 1501,
	223, 1501,
	224, 1501,
	225, 1501,
	229, 1501,
	230, 1501,
	231, 1501,
	232, 1501,
	233, 1501,
	236, 1501,
	237, 1501,
	238, 1501,
	240, 1501,
	242, 1501,
	243, 1501,
	245, 1501,
	247, 1501,
	248, 1501,
	249, 1501,
	251, 1501,
	255, 1501,
	256, 1501,
	257, 1501,
	258, 1501,
	259, 1501,
	260, 1501,
	262, 1501,
	263, 1501,
	264, 1501,
	266, 1501,
	267, 1501,
	269, 1501,
	270, 1501,
	273, 1501,
	277, 1501,
	278, 1501,
	279, 1501,
	282, 1501,
	283, 1501,
	284, 1501,
	285, 1501,
	287, 1501,
	288, 1501,
	289, 1501,
	290, 1501,
	291, 1501,
	292, 1501,
	293, 1501,
	294, 1501,
	295, 1501,
	296, 1501,
	297, 1501,
	298, 1501,
	299, 1501,
	300, 1501,
	301, 1501,
	302, 1501,
	303, 1501,
	304, 1501,
	305, 1501,
	306, 1501,
	307, 1501,
	308, 1501,
	310, 1501,
	312, 1501,
	313, 1501,
	314, 1501,
	315, 1501,
	316, 1501,
	317, 1501,
	318, 1501,
	319, 1501,
	320, 1501,
	321, 1501,
	322, 1501,
	323, 1501,
	325, 1501,
	326, 1501,
	328, 1501,
	330, 1501,
	331, 1501,
	333, 1501,
	334, 1501,
	335, 1501,
	336, 1501,
	337, 1501,
	340, 1501,
	343, 1501,
	344, 1501,
	345, 1501,
	346, 1501,
	349, 1501,
	350, 1501,
	351, 1501,
	353, 1501,
	355, 1501,
	356, 1501,
	357, 1501,
	358, 1501,
	359, 1501,
	360, 1501,
	361, 1501,
	362, 1501,
	363, 1501,
	364, 1501,
	365, 1501,
	366, 1501,
	368, 1501,
	369, 1501,
	370, 1501,
	371, 1501,
	372, 1501,
	373, 1501,
	374, 1501,
	375, 1501,
	376, 1501,
	377, 1501,
	378, 1501,
	379, 1501,
	380, 1501,
	381, 1501,
	382, 1501,
	384, 1501,
	385, 1501,
	387, 1501,
	388, 1501,
	389, 1501,
	390, 1501,
	391, 1501,
	392, 1501,
	393, 1501,
	394, 1501,
	395, 1501,
	396, 1501,
	397, 1501,
	398, 1501,
	400, 1501,
	402, 1501,
	403, 1501,
	404, 1501,
	409, 1501,
	411, 1501,
	412, 1501,
	413, 1501,
	414, 1501,
	415, 1501,
	416, 1501,
	417, 1501,
	418, 1501,
	419, 1501,
	421, 1501,
	422, 1501,
	423, 1501,
	425, 1501,
	426, 1501,
	427, 1501,
	428, 1501,
	429, 1501,
	430, 1501,
	432, 1501,
	433, 1501,
	434, 1501,
	435, 1501,
	436, 1501,
	437, 1501,
	438, 1501,
	439, 1501,
	440, 1501,
	441, 1501,
	442, 1501,
	443, 1501,
	445, 1501,
	446, 1501,
	447, 1501,
	448, 1501,
	449, 1501,
	450, 1501,
	452, 1501,
	453, 1501,
	454, 1501,
	455, 1501,
	456, 1501,
	457, 1501,
	459, 1501,
	460, 1501,
	461, 1501,
	462, 1501,
	463, 1501,
	464, 1501,
	465, 1501,
	466, 1501,
	468, 1501,
	470, 1501,
	471, 1501,
	472, 1501,
	473, 1501,
	474, 1501,
	475, 1501,
	476, 1501,
	477, 1501,
	478, 1501,
	479, 1501,
	480, 1501,
	481, 1501,
	482, 1501,
	483, 1501,
	484, 1501,
	485, 1501,
	487, 1501,
	488, 1501,
	490, 1501,
	491, 1501,
	493, 1501,
	494, 1501,
	495, 1501,
	496, 1501,
	497, 1501,
	498, 1501,
	499, 1501,
	500, 1501,
	501, 1501,
	503, 1501,
	504, 1501,
	505, 1501,
	506, 1501,
	507, 1501,
	509, 1501,
	511, 1501,
	512, 1501,
	513, 1501,
	514, 1501,
	515, 1501,
	516, 1501,
	518, 1501,
	519, 1501,
	520, 1501,
	521, 1501,
	523, 1501,
	524, 1501,
	527, 1501,
	528, 1501,
	529, 1501,
	530, 1501,
	531, 1501,
	532, 1501,
	533, 1501,
	535, 1501,
	538, 1501,
	539, 1501,
	540, 1501,
	541, 1501,
	542, 1501,
	543, 1501,
	545, 1501,
	546, 1501,
	547, 1501,
	548, 1501,
	550, 1501,
	555, 1501,
	556, 1501,
	557, 1501,
	558, 1501,
	559, 1501,
	560, 1501,
	-2, 0,
	-1, 152,
	1, 1356,
	130, 1356,
	247, 1356,
	327, 1356,
	384, 1356,
	393, 1356,
	564, 1356,
	588, 1356,
	-2, 0,
	-1, 154,
	1, 1356,
	588, 1356,
	-2, 0,
	-1, 155,
	1, 1356,
	588, 1356,
	-2, 0,
	-1, 156,
	1, 1356,
	508, 1356,
	588, 1356,
	-2, 0,
	-1, 184,
	150, 1469,
	169, 1469,
	182, 1469,
	239, 1469,
	272, 1469,
	338, 1469,
	348, 1469,
	525, 1469,
	-2, 1444,
	-1, 230,
	4, 1508,
	5, 1508,
	6, 1508,
	7, 1508,
	8, 1508,
	9, 1508,
	10, 1508,
	21, 1508,
	22, 1508,
	23, 1508,
	24, 1508,
	25, 1508,
	26, 1508,
	27, 1508,
	29, 1508,
	30, 1508,
	36, 1508,
	37, 1508,
	41, 1508,
	42, 1508,
	43, 1508,
	44, 1508,
	45, 1508,
	46, 1508,
	47, 1508,
	48, 1508,
	49, 1508,
	50, 1508,
	51, 1508,
	53, 1508,
	54, 1508,
	55, 1508,
	56, 1508,
	58, 1508,
	59, 1508,
	60, 1508,
	61, 1508,
	62, 1508,
	63, 1508,
	64, 1508,
	65, 1508,
	66, 1508,
	67, 1508,
	68, 1508,
	69, 1508,
	70, 1508,
	71, 1508,
	73, 1508,
	74, 1508,
	75, 1508,
	77, 1508,
	79, 1508,
	80, 1508,
	81, 1508,
	82, 1508,
	83, 1508,
	84, 1508,
	85, 1508,
	88, 1508,
	89, 1508,
	90, 1508,
	91, 1508,
	92, 1508,
	94, 1508,
	96, 1508,
	97, 1508,
	98, 1508,
	99, 1508,
	100, 1508,
	101, 1508,
	103, 1508,
	104, 1508,
	105, 1508,
	106, 1508,
	107, 1508,
	108, 1508,
	109, 1508,
	110, 1508,
	111, 1508,
	112, 1508,
	113, 1508,
	114, 1508,
	115, 1508,
	116, 1508,
	117, 1508,
	118, 1508,
	119, 1508,
	120, 1508,
	121, 1508,
	122, 1508,
	123, 1508,
	124, 1508,
	125, 1508,
	126, 1508,
	127, 1508,
	128, 1508,
	129, 1508,
	131, 1508,
	132, 1508,
	133, 1508,
	135, 1508,
	136, 1508,
	137, 1508,
	140, 1508,
	141, 1508,
	142, 1508,
	144, 1508,
	145, 1508,
	147, 1508,
	148, 1508,
	149, 1508,
	151, 1508,
	152, 1508,
	153, 1508,
	154, 1508,
	155, 1508,
	156, 1508,
	157, 1508,
	158, 1508,
	159, 1508,
	160, 1508,
	161, 1508,
	162, 1508,
	163, 1508,
	164, 1508,
	165, 1508,
	166, 1508,
	167, 1508,
	168, 1508,
	174, 1508,
	175, 1508,
	176, 1508,
	177, 1508,
	181, 1508,
	183, 1508,
	184, 1508,
	187, 1508,
	188, 1508,
	189, 1508,
	190, 1508,
	191, 1508,
	192, 1508,
	193, 1508,
	194, 1508,
	195, 1508,
	196, 1508,
	197, 1508,
	198, 1508,
	199, 1508,
	200, 1508,
	202, 1508,
	203, 1508,
	205, 1508,
	206, 1508,
	208, 1508,
	209, 1508,
	210, 1508,
	211, 1508,
	212, 1508,
	213, 1508,
	214, 1508,
	215, 1508,
	216, 1508,
	217, 1508,
	218, 1508,
	219, 1508,
	221, 1508,
	222, 1508,
	223, 1508,
	224, 1508,
	225, 1508,
	229, 1508,
	230, 1508,
	231, 1508,
	232, 1508,
	233, 1508,
	235, 1508,
	236, 1508,
	237, 1508,
	238, 1508,
	240, 1508,
	242, 1508,
	243, 1508,
	244, 1508,
	245, 1508,
	246, 1508,
	247, 1508,
	248, 1508,
	249, 1508,
	250, 1508,
	251, 1508,
	255, 1508,
	256, 1508,
	257, 1508,
	258, 1508,
	259, 1508,
	260, 1508,
	262, 1508,
	263, 1508,
	264, 1508,
	266, 1508,
	267, 1508,
	268, 1508,
	269, 1508,
	270, 1508,
	271, 1508,
	273, 1508,
	277, 1508,
	278, 1508,
	279, 1508,
	280, 1508,
	281, 1508,
	282, 1508,
	283, 1508,
	284, 1508,
	285, 1508,
	287, 1508,
	288, 1508,
	289, 1508,
	290, 1508,
	291, 1508,
	292, 1508,
	293, 1508,
	294, 1508,
	295, 1508,
	296, 1508,
	297, 1508,
	298, 1508,
	299, 1508,
	300, 1508,
	301, 1508,
	302, 1508,
	303, 1508,
	304, 1508,
	305, 1508,
	306, 1508,
	307, 1508,
	308, 1508,
	310, 1508,
	311, 1508,
	312, 1508,
	313, 1508,
	314, 1508,
	315, 1508,
	316, 1508,
	317, 1508,
	318, 1508,
	319, 1508,
	320, 1508,
	321, 1508,
	322, 1508,
	323, 1508,
	324, 1508,
	325, 1508,
	326, 1508,
	327, 1508,
	328, 1508,
	329, 1508,
	330, 1508,
	331, 1508,
	332, 1508,
	333, 1508,
	334, 1508,
	335, 1508,
	336, 1508,
	337, 1508,
	340, 1508,
	344, 1508,
	345, 1508,
	346, 1508,
	349, 1508,
	350, 1508,
	351, 1508,
	352, 1508,
	353, 1508,
	354, 1508,
	355, 1508,
	356, 1508,
	357, 1508,
	358, 1508,
	359, 1508,
	360, 1508,
	361, 1508,
	362, 1508,
	363, 1508,
	364, 1508,
	365, 1508,
	366, 1508,
	368, 1508,
	369, 1508,
	370, 1508,
	371, 1508,
	372, 1508,
	373, 1508,
	374, 1508,
	375, 1508,
	376, 1508,
	377, 1508,
	378, 1508,
	379, 1508,
	380, 1508,
	381, 1508,
	382, 1508,
	384, 1508,
	385, 1508,
	387, 1508,
	388, 1508,
	389, 1508,
	390, 1508,
	391, 1508,
	392, 1508,
	393, 1508,
	394, 1508,
	395, 1508,
	396, 1508,
	397, 1508,
	398, 1508,
	400, 1508,
	402, 1508,
	403, 1508,
	404, 1508,
	409, 1508,
	411, 1508,
	412, 1508,
	413, 1508,
	414, 1508,
	415, 1508,
	416, 1508,
	417, 1508,
	418, 1508,
	419, 1508,
	421, 1508,
	422, 1508,
	423, 1508,
	424, 1508,
	425, 1508,
	426, 1508,
	427, 1508,
	428, 1508,
	429, 1508,
	430, 1508,
	432, 1508,
	433, 1508,
	434, 1508,
	435, 1508,
	436, 1508,
	437, 1508,
	438, 1508,
	439, 1508,
	440, 1508,
	441, 1508,
	442, 1508,
	443, 1508,
	445, 1508,
	446, 1508,
	447, 1508,
	448, 1508,
	449, 1508,
	450, 1508,
	451, 1508,
	452, 1508,
	453, 1508,
	454, 1508,
	455, 1508,
	456, 1508,
	457, 1508,
	458, 1508,
	459, 1508,
	460, 1508,
	461, 1508,
	462, 1508,
	463, 1508,
	464, 1508,
	465, 1508,
	466, 1508,
	468, 1508,
	470, 1508,
	471, 1508,
	472, 1508,
	473, 1508,
	474, 1508,
	475, 1508,
	476, 1508,
	477, 1508,
	478, 1508,
	479, 1508,
	480, 1508,
	481, 1508,
	482, 1508,
	483, 1508,
	484, 1508,
	485, 1508,
	487, 1508,
	488, 1508,
	489, 1508,
	490, 1508,
	491, 1508,
	493, 1508,
	494, 1508,
	495, 1508,
	496, 1508,
	497, 1508,
	498, 1508,
	499, 1508,
	500, 1508,
	501, 1508,
	503, 1508,
	504, 1508,
	505, 1508,
	506, 1508,
	507, 1508,
	509, 1508,
	511, 1508,
	512, 1508,
	513, 1508,
	514, 1508,
	515, 1508,
	516, 1508,
	517, 1508,
	518, 1508,
	519, 1508,
	520, 1508,
	521, 1508,
	523, 1508,
	524, 1508,
	526, 1508,
	527, 1508,
	528, 1508,
	529, 1508,
	530, 1508,
	531, 1508,
	532, 1508,
	533, 1508,
	534, 1508,
	535, 1508,
	538, 1508,
	539, 1508,
	540, 1508,
	541, 1508,
	542, 1508,
	543, 1508,
	545, 1508,
	546, 1508,
	547, 1508,
	548, 1508,
	550, 1508,
	555, 1508,
	556, 1508,
	557, 1508,
	558, 1508,
	559, 1508,
	560, 1508,
	561, 1508,
	569, 1508,
	576, 1508,
	577, 1508,
	578, 1508,
	585, 1508,
	589, 1508,
	-2, 0,
	-1, 729,
	4, 1257,
	21, 1257,
	22, 1257,
	23, 1257,
	24, 1257,
	25, 1257,
	26, 1257,
	27, 1257,
	29, 1257,
	30, 1257,
	36, 1257,
	41, 1257,
	42, 1257,
	44, 1257,
	45, 1257,
	46, 1257,
	47, 1257,
	48, 1257,
	49, 1257,
	50, 1257,
	51, 1257,
	53, 1257,
	54, 1257,
	55, 1257,
	56, 1257,
	58, 1257,
	59, 1257,
	60, 1257,
	61, 1257,
	62, 1257,
	63, 1257,
	64, 1257,
	68, 1257,
	69, 1257,
	70, 1257,
	71, 1257,
	73, 1257,
	74, 1257,
	75, 1257,
	79, 1257,
	80, 1257,
	81, 1257,
	82, 1257,
	83, 1257,
	84, 1257,
	85, 1257,
	88, 1257,
	89, 1257,
	90, 1257,
	91, 1257,
	92, 1257,
	94, 1257,
	96, 1257,
	97, 1257,
	98, 1257,
	99, 1257,
	100, 1257,
	101, 1257,
	103, 1257,
	104, 1257,
	105, 1257,
	107, 1257,
	108, 1257,
	109, 1257,
	117, 1257,
	118, 1257,
	119, 1257,
	120, 1257,
	121, 1257,
	123, 1257,
	124, 1257,
	125, 1257,
	127, 1257,
	128, 1257,
	129, 1257,
	131, 1257,
	132, 1257,
	133, 1257,
	135, 1257,
	136, 1257,
	137, 1257,
	140, 1257,
	141, 1257,
	142, 1257,
	144, 1257,
	145, 1257,
	147, 1257,
	148, 1257,
	149, 1257,
	151, 1257,
	152, 1257,
	153, 1257,
	154, 1257,
	155, 1257,
	156, 1257,
	157, 1257,
	158, 1257,
	159, 1257,
	160, 1257,
	161, 1257,
	162, 1257,
	163, 1257,
	164, 1257,
	165, 1257,
	166, 1257,
	168, 1257,
	174, 1257,
	175, 1257,
	176, 1257,
	177, 1257,
	181, 1257,
	183, 1257,
	184, 1257,
	188, 1257,
	189, 1257,
	190, 1257,
	191, 1257,
	192, 1257,
	193, 1257,
	194, 1257,
	195, 1257,
	196, 1257,
	197, 1257,
	198, 1257,
	199, 1257,
	200, 1257,
	202, 1257,
	203, 1257,
	205, 1257,
	206, 1257,
	208, 1257,
	209, 1257,
	210, 1257,
	211, 1257,
	212, 1257,
	213, 1257,
	214, 1257,
	215, 1257,
	216, 1257,
	218, 1257,
	219, 1257,
	221, 1257,
	222, 1257,
	223, 1257,
	224, 1257,
	225, 1257,
	229, 1257,
	230, 1257,
	231, 1257,
	232, 1257,
	233, 1257,
	236, 1257,
	237, 1257,
	238, 1257,
	240, 1257,
	242, 1257,
	243, 1257,
	245, 1257,
	247, 1257,
	248, 1257,
	249, 1257,
	251, 1257,
	255, 1257,
	256, 1257,
	257, 1257,
	258, 1257,
	259, 1257,
	260, 1257,
	262, 1257,
	263, 1257,
	264, 1257,
	266, 1257,
	267, 1257,
	269, 1257,
	270, 1257,
	273, 1257,
	277, 1257,
	278, 1257,
	279, 1257,
	282, 1257,
	283, 1257,
	284, 1257,
	285, 1257,
	287, 1257,
	288, 1257,
	289, 1257,
	290, 1257,
	291, 1257,
	292, 1257,
	293, 1257,
	294, 1257,
	295, 1257,
	296, 1257,
	297, 1257,
	298, 1257,
	299, 1257,
	300, 1257,
	301, 1257,
	302, 1257,
	303, 1257,
	304, 1257,
	305, 1257,
	306, 1257,
	307, 1257,
	308, 1257,
	310, 1257,
	312, 1257,
	313, 1257,
	314, 1257,
	315, 1257,
	316, 1257,
	317, 1257,
	318, 1257,
	319, 1257,
	320, 1257,
	321, 1257,
	322, 1257,
	323, 1257,
	325, 1257,
	326, 1257,
	328, 1257,
	330, 1257,
	331, 1257,
	333, 1257,
	334, 1257,
	335, 1257,
	336, 1257,
	337, 1257,
	340, 1257,
	344, 1257,
	345, 1257,
	346, 1257,
	349, 1257,
	350, 1257,
	351, 1257,
	353, 1257,
	355, 1257,
	356, 1257,
	357, 1257,
	358, 1257,
	359, 1257,
	360, 1257,
	361, 1257,
	362, 1257,
	363, 1257,
	364, 1257,
	365, 1257,
	366, 1257,
	368, 1257,
	369, 1257,
	370, 1257,
	371, 1257,
	372, 1257,
	373, 1257,
	374, 1257,
	375, 1257,
	376, 1257,
	377, 1257,
	378, 1257,
	379, 1257,
	380, 1257,
	381, 1257,
	382, 1257,
	384, 1257,
	385, 1257,
	387, 1257,
	388, 1257,
	389, 1257,
	390, 1257,
	391, 1257,
	392, 1257,
	393, 1257,
	394, 1257,
	395, 1257,
	396, 1257,
	397, 1257,
	398, 1257,
	400, 1257,
	402, 1257,
	403, 1257,
	404, 1257,
	409, 1257,
	411, 1257,
	412, 1257,
	413, 1257,
	414, 1257,
	415, 1257,
	416, 1257,
	417, 1257,
	418, 1257,
	419, 1257,
	421, 1257,
	422, 1257,
	423, 1257,
	425, 1257,
	426, 1257,
	427, 1257,
	428, 1257,
	429, 1257,
	430, 1257,
	432, 1257,
	433, 1257,
	434, 1257,
	435, 1257,
	436, 1257,
	437, 1257,
	438, 1257,
	439, 1257,
	440, 1257,
	441, 1257,
	442, 1257,
	443, 1257,
	445, 1257,
	446, 1257,
	447, 1257,
	448, 1257,
	449, 1257,
	450, 1257,
	452, 1257,
	453, 1257,
	454, 1257,
	455, 1257,
	456, 1257,
	457, 1257,
	459, 1257,
	460, 1257,
	461, 1257,
	462, 1257,
	463, 1257,
	464, 1257,
	465, 1257,
	466, 1257,
	468, 1257,
	470, 1257,
	471, 1257,
	472, 1257,
	473, 1257,
	474, 1257,
	475, 1257,
	476, 1257,
	477, 1257,
	478, 1257,
	479, 1257,
	480, 1257,
	481, 1257,
	482, 1257,
	483, 1257,
	484, 1257,
	485, 1257,
	487, 1257,
	488, 1257,
	490, 1257,
	491, 1257,
	493, 1257,
	494, 1257,
	495, 1257,
	496, 1257,
	497, 1257,
	498, 1257,
	499, 1257,
	500, 1257,
	501, 1257,
	503, 1257,
	504, 1257,
	505, 1257,
	506, 1257,
	507, 1257,
	509, 1257,
	511, 1257,
	512, 1257,
	513, 1257,
	514, 1257,
	515, 1257,
	516, 1257,
	518, 1257,
	519, 1257,
	520, 1257,
	521, 1257,
	523, 1257,
	524, 1257,
	527, 1257,
	528, 1257,
	529, 1257,
	530, 1257,
	531, 1257,
	532, 1257,
	533, 1257,
	535, 1257,
	538, 1257,
	539, 1257,
	540, 1257,
	541, 1257,
	542, 1257,
	543, 1257,
	545, 1257,
	546, 1257,
	547, 1257,
	548, 1257,
	550, 1257,
	555, 1257,
	556, 1257,
	557, 1257,
	558, 1257,
	559, 1257,
	560, 1257,
	-2, 0,
	-1, 748,
	186, 2292,
	508, 2292,
	568, 2292,
	587, 2292,
	-2, 0,
	-1, 749,
	186, 2398,
	508, 2398,
	568, 2398,
	587, 2398,
	-2, 0,
	-1, 750,
	186, 2279,
	508, 2279,
	568, 2279,
	587, 2279,
	-2, 0,
	-1, 752,
	186, 2530,
	508, 2530,
	568, 2530,
	587, 2530,
	-2, 0,
	-1, 754,
	186, 2571,
	508, 2571,
	568, 2571,
	587, 2571,
	-2, 0,
	-1, 761,
	186, 2425,
	508, 2425,
	568, 2425,
	587, 2425,
	-2, 683,
	-1, 794,
	587, 2228,
	590, 2228,
	-2, 960,
	-1, 795,
	587, 2230,
	590, 2230,
	-2, 961,
	-1, 796,
	587, 2229,
	590, 2229,
	-2, 962,
	-1, 797,
	590, 2155,
	-2, 963,
	-1, 820,
	182, 249,
	-2, 0,
	-1, 844,
	43, 2202,
	-2, 0,
	-1, 845,
	545, 1235,
	-2, 1030,
	-1, 861,
	4, 1637,
	21, 1637,
	22, 1637,
	23, 1637,
	24, 1637,
	25, 1637,
	26, 1637,
	27, 1637,
	29, 1637,
	30, 1637,
	36, 1637,
	41, 1637,
	42, 1637,
	44, 1637,
	45, 1637,
	46, 1637,
	47, 1637,
	48, 1637,
	49, 1637,
	50, 1637,
	51, 1637,
	53, 1637,
	54, 1637,
	55, 1637,
	56, 1637,
	58, 1637,
	59, 1637,
	60, 1637,
	61, 1637,
	62, 1637,
	63, 1637,
	64, 1637,
	68, 1637,
	69, 1637,
	70, 1637,
	71, 1637,
	73, 1637,
	74, 1637,
	75, 1637,
	79, 1637,
	80, 1637,
	81, 1637,
	82, 1637,
	83, 1637,
	84, 1637,
	85, 1637,
	88, 1637,
	89, 1637,
	90, 1637,
	91, 1637,
	92, 1637,
	94, 1637,
	96, 1637,
	97, 1637,
	98, 1637,
	99, 1637,
	100, 1637,
	101, 1637,
	103, 1637,
	104, 1637,
	105, 1637,
	107, 1637,
	108, 1637,
	109, 1637,
	117, 1637,
	118, 1637,
	119, 1637,
	120, 1637,
	121, 1637,
	123, 1637,
	124, 1637,
	125, 1637,
	127, 1637,
	128, 1637,
	129, 1637,
	131, 1637,
	132, 1637,
	133, 1637,
	135, 1637,
	136, 1637,
	137, 1637,
	140, 1637,
	141, 1637,
	142, 1637,
	144, 1637,
	145, 1637,
	147, 1637,
	148, 1637,
	149, 1637,
	151, 1637,
	152, 1637,
	153, 1637,
	154, 1637,
	155, 1637,
	156, 1637,
	157, 1637,
	158, 1637,
	159, 1637,
	160, 1637,
	161, 1637,
	162, 1637,
	163, 1637,
	164, 1637,
	165, 1637,
	166, 1637,
	168, 1637,
	174, 1637,
	175, 1637,
	176, 1637,
	177, 1637,
	181, 1637,
	183, 1637,
	184, 1637,
	188, 1637,
	189, 1637,
	190, 1637,
	191, 1637,
	192, 1637,
	193, 1637,
	194, 1637,
	195, 1637,
	196, 1637,
	197, 1637,
	198, 1637,
	199, 1637,
	200, 1637,
	202, 1637,
	203, 1637,
	205, 1637,
	206, 1637,
	208, 1637,
	209, 1637,
	210, 1637,
	211, 1637,
	212, 1637,
	213, 1637,
	214, 1637,
	215, 1637,
	216, 1637,
	218, 1637,
	219, 1637,
	221, 1637,
	222, 1637,
	223, 1637,
	224, 1637,
	225, 1637,
	229, 1637,
	230, 1637,
	231, 1637,
	232, 1637,
	233, 1637,
	236, 1637,
	237, 1637,
	238, 1637,
	240, 1637,
	242, 1637,
	243, 1637,
	245, 1637,
	247, 1637,
	248, 1637,
	249, 1637,
	251, 1637,
	255, 1637,
	256, 1637,
	257, 1637,
	258, 1637,
	259, 1637,
	260, 1637,
	262, 1637,
	263, 1637,
	264, 1637,
	266, 1637,
	267, 1637,
	269, 1637,
	270, 1637,
	273, 1637,
	277, 1637,
	278, 1637,
	279, 1637,
	282, 1637,
	283, 1637,
	284, 1637,
	285, 1637,
	287, 1637,
	288, 1637,
	289, 1637,
	290, 1637,
	291, 1637,
	292, 1637,
	293, 1637,
	294, 1637,
	295, 1637,
	296, 1637,
	297, 1637,
	298, 1637,
	299, 1637,
	300, 1637,
	301, 1637,
	302, 1637,
	303, 1637,
	304, 1637,
	305, 1637,
	306, 1637,
	307, 1637,
	308, 1637,
	310, 1637,
	312, 1637,
	313, 1637,
	314, 1637,
	315, 1637,
	316, 1637,
	317, 1637,
	318, 1637,
	319, 1637,
	320, 1637,
	321, 1637,
	322, 1637,
	323, 1637,
	325, 1637,
	326, 1637,
	328, 1637,
	330, 1637,
	331, 1637,
	333, 1637,
	334, 1637,
	335, 1637,
	336, 1637,
	337, 1637,
	340, 1637,
	344, 1637,
	345, 1637,
	346, 1637,
	349, 1637,
	350, 1637,
	351, 1637,
	353, 1637,
	355, 1637,
	356, 1637,
	357, 1637,
	358, 1637,
	359, 1637,
	360, 1637,
	361, 1637,
	362, 1637,
	363, 1637,
	364, 1637,
	365, 1637,
	366, 1637,
	368, 1637,
	369, 1637,
	370, 1637,
	371, 1637,
	372, 1637,
	373, 1637,
	374, 1637,
	375, 1637,
	376, 1637,
	377, 1637,
	378, 1637,
	379, 1637,
	380, 1637,
	381, 1637,
	382, 1637,
	384, 1637,
	385, 1637,
	387, 1637,
	388, 1637,
	389, 1637,
	390, 1637,
	391, 1637,
	392, 1637,
	393, 1637,
	394, 1637,
	395, 1637,
	396, 1637,
	397, 1637,
	398, 1637,
	400, 1637,
	402, 1637,
	403, 1637,
	404, 1637,
	409, 1637,
	411, 1637,
	412, 1637,
	413, 1637,
	414, 1637,
	415, 1637,
	416, 1637,
	417, 1637,
	418, 1637,
	419, 1637,
	421, 1637,
	422, 1637,
	423, 1637,
	425, 1637,
	426, 1637,
	427, 1637,
	428, 1637,
	429, 1637,
	430, 1637,
	432, 1637,
	433, 1637,
	434, 1637,
	435, 1637,
	436, 1637,
	437, 1637,
	438, 1637,
	439, 1637,
	440, 1637,
	441, 1637,
	442, 1637,
	443, 1637,
	445, 1637,
	446, 1637,
	447, 1637,
	448, 1637,
	449, 1637,
	450, 1637,
	452, 1637,
	453, 1637,
	454, 1637,
	455, 1637,
	456, 1637,
	457, 1637,
	459, 1637,
	460, 1637,
	461, 1637,
	462, 1637,
	463, 1637,
	464, 1637,
	465, 1637,
	466, 1637,
	468, 1637,
	470, 1637,
	471, 1637,
	472, 1637,
	473, 1637,
	474, 1637,
	475, 1637,
	476, 1637,
	477, 1637,
	478, 1637,
	479, 1637,
	480, 1637,
	481, 1637,
	482, 1637,
	483, 1637,
	484, 1637,
	485, 1637,
	487, 1637,
	488, 1637,
	490, 1637,
	491, 1637,
	493, 1637,
	494, 1637,
	495, 1637,
	496, 1637,
	497, 1637,
	498, 1637,
	499, 1637,
	500, 1637,
	501, 1637,
	503, 1637,
	504, 1637,
	505, 1637,
	506, 1637,
	507, 1637,
	509, 1637,
	511, 1637,
	512, 1637,
	513, 1637,
	514, 1637,
	515, 1637,
	516, 1637,
	518, 1637,
	519, 1637,
	520, 1637,
	521, 1637,
	523, 1637,
	524, 1637,
	527, 1637,
	528, 1637,
	529, 1637,
	530, 1637,
	531, 1637,
	532, 1637,
	533, 1637,
	535, 1637,
	538, 1637,
	539, 1637,
	540, 1637,
	541, 1637,
	542, 1637,
	543, 1637,
	545, 1637,
	546, 1637,
	547, 1637,
	548, 1637,
	550, 1637,
	555, 1637,
	556, 1637,
	557, 1637,
	558, 1637,
	559, 1637,
	560, 1637,
	-2, 0,
	-1, 871,
	259, 397,
	-2, 0,
	-1, 942,
	389, 850,
	450, 850,
	491, 850,
	513, 850,
	-2, 0,
	-1, 943,
	389, 849,
	450, 849,
	491, 849,
	513, 849,
	-2, 789,
	-1, 947,
	1, 900,
	584, 900,
	586, 900,
	588, 900,
	-2, 0,
	-1, 948,
	1, 824,
	584, 824,
	586, 824,
	588, 824,
	-2, 0,
	-1, 949,
	1, 828,
	584, 828,
	586, 828,
	588, 828,
	-2, 0,
	-1, 950,
	1, 959,
	182, 959,
	584, 959,
	586, 959,
	588, 959,
	-2, 0,
	-1, 958,
	1, 855,
	584, 855,
	586, 855,
	588, 855,
	-2, 0,
	-1, 965,
	1, 900,
	584, 900,
	586, 900,
	588, 900,
	-2, 0,
	-1, 966,
	1, 902,
	584, 902,
	586, 902,
	588, 902,
	-2, 0,
	-1, 967,
	1, 905,
	584, 905,
	586, 905,
	588, 905,
	-2, 0,
	-1, 973,
	1, 923,
	584, 923,
	586, 923,
	588, 923,
	-2, 0,
	-1, 974,
	1, 925,
	584, 925,
	586, 925,
	588, 925,
	-2, 0,
	-1, 979,
	1, 953,
	584, 953,
	586, 953,
	588, 953,
	-2, 0,
	-1, 1026,
	169, 1512,
	182, 1512,
	272, 1512,
	338, 1512,
	-2, 1448,
	-1, 1041,
	169, 1511,
	182, 1511,
	272, 1511,
	338, 1511,
	-2, 1445,
	-1, 1068,
	587, 2227,
	-2, 691,
	-1, 1097,
	5, 2219,
	585, 2217,
	-2, 2208,
	-1, 1105,
	5, 2240,
	585, 2237,
	-2, 2228,
	-1, 1106,
	5, 2241,
	585, 2238,
	-2, 2229,
	-1, 1114,
	587, 2225,
	-2, 2207,
	-1, 1115,
	585, 2654,
	-2, 2226,
	-1, 1138,
	585, 2653,
	-2, 2242,
	-1, 1139,
	5, 1712,
	-2, 2624,
	-1, 1140,
	5, 1713,
	-2, 2625,
	-1, 1141,
	5, 1714,
	-2, 2639,
	-1, 1142,
	5, 1715,
	-2, 2603,
	-1, 1143,
	5, 1716,
	-2, 2637,
	-1, 1144,
	5, 1724,
	-2, 2616,
	-1, 1145,
	5, 1711,
	-2, 2612,
	-1, 1146,
	5, 1711,
	-2, 2611,
	-1, 1147,
	5, 1711,
	-2, 2630,
	-1, 1148,
	5, 1722,
	-2, 2605,
	-1, 1149,
	5, 1727,
	-2, 2604,
	-1, 1150,
	5, 1729,
	-2, 2649,
	-1, 1153,
	5, 1751,
	-2, 2642,
	-1, 1154,
	5, 1743,
	-2, 2643,
	-1, 1155,
	5, 1751,
	-2, 2644,
	-1, 1156,
	5, 1747,
	-2, 2645,
	-1, 1157,
	5, 1697,
	-2, 2617,
	-1, 1158,
	5, 1698,
	-2, 2618,
	-1, 1159,
	5, 1699,
	-2, 2606,
	-1, 1187,
	5, 1734,
	-2, 2650,
	-1, 1188,
	5, 1735,
	-2, 2640,
	-1, 1189,
	5, 1736,
	546, 1736,
	-2, 2607,
	-1, 1190,
	5, 1737,
	546, 1737,
	-2, 2608,
	-1, 1227,
	585, 2237,
	-2, 2228,
	-1, 1228,
	585, 2238,
	-2, 2229,
	-1, 1328,
	186, 2571,
	508, 2571,
	568, 2571,
	587, 2571,
	-2, 0,
	-1, 1331,
	1, 669,
	588, 669,
	-2, 1364,
	-1, 1459,
	357, 2203,
	411, 2203,
	452, 2203,
	578, 2203,
	-2, 2193,
	-1, 1470,
	589, 2203,
	-2, 2204,
	-1, 1479,
	1, 1232,
	584, 1232,
	586, 1232,
	588, 1232,
	-2, 1497,
	-1, 1527,
	396, 1029,
	545, 1029,
	-2, 392,
	-1, 1544,
	43, 2201,
	-2, 995,
	-1, 1551,
	1, 1232,
	584, 1232,
	586, 1232,
	588, 1232,
	-2, 1497,
	-1, 1559,
	4, 1257,
	21, 1257,
	22, 1257,
	23, 1257,
	24, 1257,
	25, 1257,
	26, 1257,
	27, 1257,
	29, 1257,
	30, 1257,
	36, 1257,
	41, 1257,
	42, 1257,
	44, 1257,
	45, 1257,
	46, 1257,
	47, 1257,
	48, 1257,
	49, 1257,
	50, 1257,
	51, 1257,
	53, 1257,
	54, 1257,
	55, 1257,
	56, 1257,
	58, 1257,
	59, 1257,
	60, 1257,
	61, 1257,
	62, 1257,
	63, 1257,
	64, 1257,
	68, 1257,
	69, 1257,
	70, 1257,
	71, 1257,
	73, 1257,
	74, 1257,
	75, 1257,
	79, 1257,
	80, 1257,
	81, 1257,
	82, 1257,
	83, 1257,
	84, 1257,
	85, 1257,
	88, 1257,
	89, 1257,
	90, 1257,
	91, 1257,
	92, 1257,
	94, 1257,
	96, 1257,
	97, 1257,
	98, 1257,
	99, 1257,
	100, 1257,
	101, 1257,
	103, 1257,
	104, 1257,
	105, 1257,
	107, 1257,
	108, 1257,
	109, 1257,
	117, 1257,
	118, 1257,
	119, 1257,
	120, 1257,
	121, 1257,
	123, 1257,
	124, 1257,
	125, 1257,
	127, 1257,
	128, 1257,
	129, 1257,
	131, 1257,
	132, 1257,
	133, 1257,
	135, 1257,
	136, 1257,
	137, 1257,
	140, 1257,
	141, 1257,
	142, 1257,
	144, 1257,
	145, 1257,
	147, 1257,
	148, 1257,
	149, 1257,
	151, 1257,
	152, 1257,
	153, 1257,
	154, 1257,
	155, 1257,
	156, 1257,
	157, 1257,
	158, 1257,
	159, 1257,
	160, 1257,
	161, 1257,
	162, 1257,
	163, 1257,
	164, 1257,
	165, 1257,
	166, 1257,
	174, 1257,
	175, 1257,
	176, 1257,
	177, 1257,
	181, 1257,
	183, 1257,
	184, 1257,
	188, 1257,
	189, 1257,
	190, 1257,
	191, 1257,
	192, 1257,
	193, 1257,
	194, 1257,
	195, 1257,
	196, 1257,
	197, 1257,
	198, 1257,
	199, 1257,
	200, 1257,
	202, 1257,
	203, 1257,
	205, 1257,
	206, 1257,
	208, 1257,
	209, 1257,
	210, 1257,
	211, 1257,
	212, 1257,
	213, 1257,
	214, 1257,
	215, 1257,
	216, 1257,
	218, 1257,
	219, 1257,
	221, 1257,
	222, 1257,
	223, 1257,
	224, 1257,
	225, 1257,
	230, 1257,
	231, 1257,
	232, 1257,
	233, 1257,
	236, 1257,
	237, 1257,
	238, 1257,
	240, 1257,
	242, 1257,
	243, 1257,
	245, 1257,
	247, 1257,
	248, 1257,
	249, 1257,
	251, 1257,
	255, 1257,
	256, 1257,
	257, 1257,
	258, 1257,
	259, 1257,
	260, 1257,
	262, 1257,
	263, 1257,
	264, 1257,
	266, 1257,
	267, 1257,
	269, 1257,
	270, 1257,
	273, 1257,
	277, 1257,
	278, 1257,
	279, 1257,
	282, 1257,
	283, 1257,
	284, 1257,
	285, 1257,
	287, 1257,
	288, 1257,
	289, 1257,
	290, 1257,
	291, 1257,
	292, 1257,
	293, 1257,
	294, 1257,
	295, 1257,
	296, 1257,
	297, 1257,
	298, 1257,
	299, 1257,
	300, 1257,
	301, 1257,
	302, 1257,
	303, 1257,
	304, 1257,
	305, 1257,
	306, 1257,
	307, 1257,
	308, 1257,
	310, 1257,
	312, 1257,
	313, 1257,
	314, 1257,
	315, 1257,
	316, 1257,
	317, 1257,
	318, 1257,
	319, 1257,
	320, 1257,
	321, 1257,
	322, 1257,
	323, 1257,
	325, 1257,
	326, 1257,
	330, 1257,
	331, 1257,
	333, 1257,
	334, 1257,
	335, 1257,
	336, 1257,
	337, 1257,
	340, 1257,
	342, 1257,
	344, 1257,
	345, 1257,
	346, 1257,
	349, 1257,
	350, 1257,
	351, 1257,
	353, 1257,
	355, 1257,
	356, 1257,
	357, 1257,
	358, 1257,
	359, 1257,
	360, 1257,
	361, 1257,
	362, 1257,
	363, 1257,
	364, 1257,
	365, 1257,
	366, 1257,
	368, 1257,
	369, 1257,
	370, 1257,
	371, 1257,
	372, 1257,
	373, 1257,
	374, 1257,
	375, 1257,
	376, 1257,
	377, 1257,
	378, 1257,
	379, 1257,
	380, 1257,
	381, 1257,
	382, 1257,
	384, 1257,
	385, 1257,
	387, 1257,
	388, 1257,
	389, 1257,
	390, 1257,
	391, 1257,
	392, 1257,
	393, 1257,
	394, 1257,
	395, 1257,
	396, 1257,
	397, 1257,
	398, 1257,
	400, 1257,
	402, 1257,
	403, 1257,
	404, 1257,
	409, 1257,
	411, 1257,
	412, 1257,
	413, 1257,
	414, 1257,
	415, 1257,
	416, 1257,
	417, 1257,
	418, 1257,
	419, 1257,
	421, 1257,
	422, 1257,
	423, 1257,
	425, 1257,
	426, 1257,
	427, 1257,
	428, 1257,
	429, 1257,
	430, 1257,
	432, 1257,
	433, 1257,
	434, 1257,
	435, 1257,
	436, 1257,
	437, 1257,
	438, 1257,
	439, 1257,
	440, 1257,
	441, 1257,
	442, 1257,
	443, 1257,
	445, 1257,
	446, 1257,
	447, 1257,
	448, 1257,
	449, 1257,
	450, 1257,
	452, 1257,
	453, 1257,
	454, 1257,
	455, 1257,
	456, 1257,
	457, 1257,
	459, 1257,
	460, 1257,
	461, 1257,
	462, 1257,
	463, 1257,
	464, 1257,
	465, 1257,
	466, 1257,
	468, 1257,
	470, 1257,
	471, 1257,
	472, 1257,
	473, 1257,
	474, 1257,
	475, 1257,
	476, 1257,
	477, 1257,
	478, 1257,
	479, 1257,
	480, 1257,
	481, 1257,
	482, 1257,
	483, 1257,
	484, 1257,
	485, 1257,
	487, 1257,
	488, 1257,
	490, 1257,
	491, 1257,
	493, 1257,
	494, 1257,
	495, 1257,
	496, 1257,
	497, 1257,
	498, 1257,
	499, 1257,
	500, 1257,
	501, 1257,
	503, 1257,
	504, 1257,
	505, 1257,
	506, 1257,
	507, 1257,
	509, 1257,
	511, 1257,
	512, 1257,
	513, 1257,
	514, 1257,
	515, 1257,
	516, 1257,
	518, 1257,
	519, 1257,
	520, 1257,
	521, 1257,
	523, 1257,
	524, 1257,
	527, 1257,
	528, 1257,
	529, 1257,
	530, 1257,
	531, 1257,
	532, 1257,
	533, 1257,
	535, 1257,
	538, 1257,
	539, 1257,
	540, 1257,
	541, 1257,
	542, 1257,
	543, 1257,
	545, 1257,
	546, 1257,
	547, 1257,
	548, 1257,
	550, 1257,
	555, 1257,
	556, 1257,
	557, 1257,
	558, 1257,
	559, 1257,
	560, 1257,
	-2, 0,
	-1, 1582,
	1, 537,
	584, 537,
	586, 537,
	588, 537,
	-2, 1468,
	-1, 1585,
	4, 2648,
	11, 2648,
	12, 2648,
	14, 2648,
	15, 2648,
	16, 2648,
	17, 2648,
	18, 2648,
	19, 2648,
	21, 2648,
	22, 2648,
	23, 2648,
	24, 2648,
	25, 2648,
	26, 2648,
	27, 2648,
	29, 2648,
	30, 2648,
	33, 2648,
	34, 2648,
	36, 2648,
	38, 2648,
	41, 2648,
	42, 2648,
	44, 2648,
	45, 2648,
	46, 2648,
	47, 2648,
	48, 2648,
	49, 2648,
	50, 2648,
	51, 2648,
	53, 2648,
	54, 2648,
	55, 2648,
	56, 2648,
	58, 2648,
	59, 2648,
	60, 2648,
	61, 2648,
	62, 2648,
	63, 2648,
	64, 2648,
	67, 2648,
	68, 2648,
	69, 2648,
	70, 2648,
	71, 2648,
	73, 2648,
	74, 2648,
	75, 2648,
	76, 2648,
	79, 2648,
	80, 2648,
	81, 2648,
	82, 2648,
	83, 2648,
	84, 2648,
	85, 2648,
	86, 2648,
	88, 2648,
	89, 2648,
	90, 2648,
	91, 2648,
	92, 2648,
	94, 2648,
	95, 2648,
	96, 2648,
	97, 2648,
	98, 2648,
	99, 2648,
	100, 2648,
	101, 2648,
	103, 2648,
	104, 2648,
	105, 2648,
	106, 2648,
	107, 2648,
	108, 2648,
	109, 2648,
	117, 2648,
	118, 2648,
	119, 2648,
	120, 2648,
	121, 2648,
	123, 2648,
	124, 2648,
	125, 2648,
	127, 2648,
	128, 2648,
	129, 2648,
	131, 2648,
	132, 2648,
	133, 2648,
	135, 2648,
	136, 2648,
	137, 2648,
	140, 2648,
	141, 2648,
	142, 2648,
	144, 2648,
	145, 2648,
	147, 2648,
	148, 2648,
	149, 2648,
	151, 2648,
	152, 2648,
	153, 2648,
	154, 2648,
	155, 2648,
	156, 2648,
	157, 2648,
	158, 2648,
	159, 2648,
	160, 2648,
	161, 2648,
	162, 2648,
	163, 2648,
	164, 2648,
	165, 2648,
	166, 2648,
	170, 2648,
	171, 2648,
	172, 2648,
	173, 2648,
	174, 2648,
	175, 2648,
	176, 2648,
	177, 2648,
	180, 2648,
	181, 2648,
	183, 2648,
	184, 2648,
	187, 2648,
	188, 2648,
	189, 2648,
	190, 2648,
	191, 2648,
	192, 2648,
	193, 2648,
	194, 2648,
	195, 2648,
	196, 2648,
	197, 2648,
	198, 2648,
	199, 2648,
	200, 2648,
	202, 2648,
	203, 2648,
	205, 2648,
	206, 2648,
	208, 2648,
	209, 2648,
	210, 2648,
	211, 2648,
	212, 2648,
	213, 2648,
	214, 2648,
	215, 2648,
	216, 2648,
	217, 2648,
	218, 2648,
	219, 2648,
	220, 2648,
	221, 2648,
	222, 2648,
	223, 2648,
	224, 2648,
	225, 2648,
	227, 2648,
	228, 2648,
	230, 2648,
	231, 2648,
	232, 2648,
	233, 2648,
	235, 2648,
	236, 2648,
	237, 2648,
	238, 2648,
	240, 2648,
	242, 2648,
	243, 2648,
	244, 2648,
	245, 2648,
	246, 2648,
	247, 2648,
	248, 2648,
	249, 2648,
	250, 2648,
	251, 2648,
	253, 2648,
	254, 2648,
	255, 2648,
	256, 2648,
	257, 2648,
	258, 2648,
	259, 2648,
	260, 2648,
	262, 2648,
	263, 2648,
	264, 2648,
	266, 2648,
	267, 2648,
	268, 2648,
	269, 2648,
	270, 2648,
	271, 2648,
	273, 2648,
	277, 2648,
	278, 2648,
	279, 2648,
	282, 2648,
	283, 2648,
	284, 2648,
	285, 2648,
	286, 2648,
	287, 2648,
	288, 2648,
	289, 2648,
	290, 2648,
	291, 2648,
	292, 2648,
	293, 2648,
	294, 2648,
	295, 2648,
	296, 2648,
	297, 2648,
	298, 2648,
	299, 2648,
	300, 2648,
	301, 2648,
	302, 2648,
	303, 2648,
	304, 2648,
	305, 2648,
	306, 2648,
	307, 2648,
	308, 2648,
	310, 2648,
	311, 2648,
	312, 2648,
	313, 2648,
	314, 2648,
	315, 2648,
	316, 2648,
	317, 2648,
	318, 2648,
	319, 2648,
	320, 2648,
	321, 2648,
	322, 2648,
	323, 2648,
	325, 2648,
	326, 2648,
	329, 2648,
	330, 2648,
	331, 2648,
	333, 2648,
	334, 2648,
	335, 2648,
	336, 2648,
	337, 2648,
	340, 2648,
	344, 2648,
	345, 2648,
	346, 2648,
	347, 2648,
	349, 2648,
	350, 2648,
	351, 2648,
	353, 2648,
	355, 2648,
	356, 2648,
	357, 2648,
	358, 2648,
	359, 2648,
	360, 2648,
	361, 2648,
	362, 2648,
	363, 2648,
	364, 2648,
	365, 2648,
	366, 2648,
	368, 2648,
	369, 2648,
	370, 2648,
	371, 2648,
	372, 2648,
	373, 2648,
	374, 2648,
	375, 2648,
	376, 2648,
	377, 2648,
	378, 2648,
	379, 2648,
	380, 2648,
	381, 2648,
	382, 2648,
	384, 2648,
	385, 2648,
	387, 2648,
	388, 2648,
	389, 2648,
	390, 2648,
	391, 2648,
	392, 2648,
	393, 2648,
	394, 2648,
	395, 2648,
	396, 2648,
	397, 2648,
	398, 2648,
	400, 2648,
	402, 2648,
	403, 2648,
	404, 2648,
	409, 2648,
	410, 2648,
	411, 2648,
	412, 2648,
	413, 2648,
	414, 2648,
	415, 2648,
	416, 2648,
	417, 2648,
	418, 2648,
	419, 2648,
	421, 2648,
	422, 2648,
	423, 2648,
	424, 2648,
	425, 2648,
	426, 2648,
	427, 2648,
	428, 2648,
	429, 2648,
	430, 2648,
	431, 2648,
	432, 2648,
	433, 2648,
	434, 2648,
	435, 2648,
	436, 2648,
	437, 2648,
	438, 2648,
	439, 2648,
	440, 2648,
	441, 2648,
	442, 2648,
	443, 2648,
	445, 2648,
	446, 2648,
	447, 2648,
	448, 2648,
	449, 2648,
	450, 2648,
	452, 2648,
	453, 2648,
	454, 2648,
	455, 2648,
	456, 2648,
	457, 2648,
	458, 2648,
	459, 2648,
	460, 2648,
	461, 2648,
	462, 2648,
	463, 2648,
	464, 2648,
	465, 2648,
	466, 2648,
	468, 2648,
	470, 2648,
	471, 2648,
	472, 2648,
	473, 2648,
	474, 2648,
	475, 2648,
	476, 2648,
	477, 2648,
	478, 2648,
	479, 2648,
	480, 2648,
	481, 2648,
	482, 2648,
	483, 2648,
	484, 2648,
	485, 2648,
	487, 2648,
	488, 2648,
	489, 2648,
	490, 2648,
	491, 2648,
	493, 2648,
	494, 2648,
	495, 2648,
	496, 2648,
	497, 2648,
	498, 2648,
	499, 2648,
	500, 2648,
	501, 2648,
	503, 2648,
	504, 2648,
	505, 2648,
	506, 2648,
	507, 2648,
	509, 2648,
	511, 2648,
	512, 2648,
	513, 2648,
	514, 2648,
	515, 2648,
	516, 2648,
	518, 2648,
	519, 2648,
	520, 2648,
	521, 2648,
	523, 2648,
	524, 2648,
	527, 2648,
	528, 2648,
	529, 2648,
	530, 2648,
	531, 2648,
	532, 2648,
	533, 2648,
	535, 2648,
	538, 2648,
	539, 2648,
	540, 2648,
	541, 2648,
	542, 2648,
	543, 2648,
	545, 2648,
	546, 2648,
	547, 2648,
	548, 2648,
	550, 2648,
	555, 2648,
	556, 2648,
	557, 2648,
	558, 2648,
	559, 2648,
	560, 2648,
	561, 2648,
	563, 2648,
	566, 2648,
	567, 2648,
	568, 2648,
	569, 2648,
	570, 2648,
	571, 2648,
	573, 2648,
	574, 2648,
	575, 2648,
	576, 2648,
	577, 2648,
	578, 2648,
	579, 2648,
	580, 2648,
	581, 2648,
	583, 2648,
	586, 2648,
	587, 2648,
	589, 2648,
	590, 2648,
	-2, 0,
	-1, 1590,
	186, 2530,
	508, 2530,
	568, 2530,
	587, 2530,
	-2, 0,
	-1, 1639,
	389, 850,
	450, 850,
	491, 850,
	513, 850,
	-2, 0,
	-1, 1666,
	1, 845,
	584, 845,
	586, 845,
	588, 845,
	-2, 0,
	-1, 1667,
	1, 887,
	584, 887,
	586, 887,
	588, 887,
	-2, 0,
	-1, 1668,
	1, 895,
	584, 895,
	586, 895,
	588, 895,
	-2, 0,
	-1, 1671,
	1, 854,
	584, 854,
	586, 854,
	588, 854,
	-2, 0,
	-1, 1673,
	1, 860,
	584, 860,
	586, 860,
	588, 860,
	-2, 0,
	-1, 1676,
	1, 856,
	584, 856,
	586, 856,
	588, 856,
	-2, 0,
	-1, 1681,
	1, 869,
	584, 869,
	586, 869,
	588, 869,
	-2, 0,
	-1, 1710,
	1, 2593,
	584, 2593,
	586, 2593,
	587, 2593,
	588, 2593,
	-2, 921,
	-1, 1711,
	1, 2527,
	584, 2527,
	586, 2527,
	587, 2527,
	588, 2527,
	-2, 922,
	-1, 1715,
	1, 934,
	584, 934,
	586, 934,
	588, 934,
	-2, 0,
	-1, 1730,
	1, 1359,
	588, 1359,
	-2, 1364,
	-1, 1733,
	169, 1511,
	182, 1511,
	272, 1511,
	338, 1511,
	-2, 1449,
	-1, 1833,
	150, 1470,
	169, 1470,
	182, 1470,
	239, 1470,
	272, 1470,
	338, 1470,
	348, 1470,
	525, 1470,
	-2, 1916,
	-1, 1893,
	586, 2089,
	-2, 0,
	-1, 1928,
	150, 1470,
	169, 1470,
	182, 1470,
	239, 1470,
	272, 1470,
	338, 1470,
	348, 1470,
	525, 1470,
	-2, 1598,
	-1, 1962,
	508, 2527,
	587, 2527,
	590, 2527,
	-2, 0,
	-1, 1979,
	585, 1739,
	-2, 1727,
	-1, 2010,
	186, 2527,
	587, 2527,
	590, 2527,
	-2, 0,
	-1, 2058,
	1, 671,
	588, 671,
	-2, 1364,
	-1, 2184,
	220, 250,
	-2, 2236,
	-1, 2185,
	220, 251,
	-2, 300,
	-1, 2289,
	1, 847,
	584, 847,
	586, 847,
	588, 847,
	-2, 0,
	-1, 2290,
	1, 889,
	584, 889,
	586, 889,
	588, 889,
	-2, 0,
	-1, 2291,
	1, 897,
	584, 897,
	586, 897,
	588, 897,
	-2, 0,
	-1, 2292,
	1, 936,
	584, 936,
	586, 936,
	588, 936,
	-2, 0,
	-1, 2328,
	1, 871,
	584, 871,
	586, 871,
	588, 871,
	-2, 0,
	-1, 2384,
	429, 1538,
	430, 1538,
	-2, 1772,
	-1, 2415,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1792,
	-1, 2416,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1793,
	-1, 2417,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1794,
	-1, 2418,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1795,
	-1, 2419,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1796,
	-1, 2420,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1797,
	-1, 2421,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1798,
	-1, 2422,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1799,
	-1, 2434,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1811,
	-1, 2435,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1812,
	-1, 2436,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1813,
	-1, 2440,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1820,
	-1, 2446,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1824,
	-1, 2448,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1832,
	-1, 2449,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1833,
	-1, 2450,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1834,
	-1, 2451,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1835,
	-1, 2623,
	5, 2240,
	186, 2100,
	585, 2237,
	-2, 2228,
	-1, 2624,
	186, 2101,
	-2, 2599,
	-1, 2625,
	186, 2102,
	-2, 2424,
	-1, 2626,
	186, 2103,
	-2, 2310,
	-1, 2627,
	186, 2104,
	-2, 2364,
	-1, 2628,
	186, 2105,
	-2, 2409,
	-1, 2629,
	186, 2106,
	-2, 2525,
	-1, 2630,
	186, 2107,
	-2, 1899,
	-1, 2701,
	1, 1599,
	2, 1599,
	106, 1599,
	150, 1599,
	169, 1599,
	182, 1599,
	187, 1599,
	204, 1599,
	207, 1599,
	235, 1599,
	239, 1599,
	250, 1599,
	268, 1599,
	272, 1599,
	311, 1599,
	338, 1599,
	342, 1599,
	348, 1599,
	420, 1599,
	424, 1599,
	525, 1599,
	536, 1599,
	552, 1599,
	553, 1599,
	554, 1599,
	564, 1599,
	584, 1599,
	586, 1599,
	588, 1599,
	590, 1599,
	-2, 1598,
	-1, 2714,
	585, 2209,
	-2, 2223,
	-1, 2716,
	1, 317,
	552, 317,
	-2, 1497,
	-1, 2743,
	585, 1738,
	-2, 1728,
	-1, 2920,
	1, 1232,
	584, 1232,
	586, 1232,
	588, 1232,
	-2, 1497,
	-1, 3089,
	343, 1541,
	-2, 2638,
	-1, 3090,
	343, 1542,
	-2, 2510,
	-1, 3094,
	429, 2166,
	430, 2166,
	-2, 1897,
	-1, 3095,
	429, 2170,
	430, 2170,
	-2, 1898,
	-1, 3096,
	429, 2167,
	430, 2167,
	-2, 1897,
	-1, 3097,
	429, 2171,
	430, 2171,
	-2, 1898,
	-1, 3110,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1822,
	-1, 3111,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1826,
	-1, 3117,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1828,
	-1, 3337,
	1, 668,
	584, 668,
	586, 668,
	588, 668,
	-2, 1364,
	-1, 3491,
	43, 2201,
	-2, 996,
	-1, 3496,
	1, 1232,
	584, 1232,
	586, 1232,
	588, 1232,
	-2, 1497,
	-1, 3602,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1830,
	-1, 3609,
	244, 0,
	246, 0,
	329, 0,
	-2, 1849,
	-1, 3677,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1878,
	-1, 3678,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1879,
	-1, 3679,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1880,
	-1, 3683,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1884,
	-1, 3684,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1885,
	-1, 3685,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1886,
	-1, 3732,
	585, 2210,
	-2, 2224,
	-1, 3894,
	587, 2756,
	-2, 1423,
	-1, 3952,
	244, 0,
	246, 0,
	329, 0,
	-2, 1850,
	-1, 3955,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1853,
	-1, 3956,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1855,
	-1, 4048,
	587, 2225,
	-2, 1267,
	-1, 4192,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1854,
	-1, 4193,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1856,
	-1, 4204,
	244, 0,
	-2, 1889,
	-1, 4373,
	244, 0,
	-2, 1890,
	-1, 4555,
	50, 0,
	217, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 2602,
}

const sqlPrivate = 57344

const sqlLast = 125833

var sqlAct = [...]int{
	266, 4651, 3480, 2985, 4737, 3248, 2998, 4548, 4607, 4536,
	4247, 4430, 4408, 4554, 4295, 3479, 4547, 4400, 4565, 4678,
	2106, 4523, 4451, 4426, 2181, 3935, 4507, 4504, 1220, 4566,
	1491, 2805, 4567, 4620, 4487, 2849, 4233, 4302, 3642, 2256,
	1231, 4377, 2869, 4148, 4044, 4326, 4143, 4553, 4109, 4213,
	4252, 2394, 3594, 4132, 1051, 3878, 3886, 3359, 1300, 4181,
	1293, 4130, 3821, 3513, 4311, 4029, 4089, 1966, 2656, 3103,
	3419, 4340, 4123, 2040, 1304, 796, 4045, 1742, 3507, 2463,
	3841, 4153, 3475, 3859, 2882, 3843, 3465, 2114, 759, 3007,
	2265, 3362, 4209, 3552, 2395, 3554, 1364, 3020, 3009, 2974,
	2402, 796, 1042, 3231, 3735, 2944, 3271, 1934, 2955, 1456,
	3934, 3291, 3263, 869, 4, 3017, 3006, 3991, 1606, 2986,
	3252, 1903, 2229, 3381, 2969, 2176, 4652, 3230, 2175, 2125,
	3000, 2971, 2263, 2399, 2541, 873, 2807, 2543, 4378, 3703,
	3254, 3356, 2694, 1811, 2693, 1050, 175, 2476, 3016, 1841,
	1546, 3087, 864, 2948, 1298, 1879, 791, 260, 2897, 2152,
	2171, 1064, 2159, 1463, 2094, 1347, 2956, 2696, 1211, 1101,
	1647, 2098, 1730, 1272, 2532, 2038, 3298, 2674, 2084, 259,
	2460, 2383, 1904, 2366, 2848, 2364, 2727, 1583, 1106, 1295,
	3477, 2979, 2015, 1286, 1283, 793, 2830, 1549, 797, 2653,
	798, 2216, 4452, 3010, 1097, 1604, 2793, 2726, 1333, 2535,
	1214, 1923, 690, 1913, 2664, 1193, 2619, 676, 1967, 1874,
	1920, 698, 1825, 2513, 2585, 2683, 1743, 1744, 2365, 3348,
	2215, 741, 802, 1228, 1681, 2367, 1666, 184, 753, 175,
	1581, 1574, 1486, 185, 2242, 2113, 4608, 1210, 2388, 1082,
	2016, 2013, 693, 1216, 805, 1191, 1749, 1104, 802, 108,
	44, 43, 41, 32, 30, 28, 936, 701, 3140, 1729,
	1497, 716, 3717, 956, 3718, 2029, 3134, 845, 2029, 4750,
	805, 4740, 4725, 2673, 3250, 3532, 2673, 1490, 2029, 4724,
	157, 1108, 2029, 2673, 1046, 4714, 888, 3523, 73, 2190,
	46, 45, 2029, 2029, 4696, 4694, 4639, 4596, 4251, 4251,
	2190, 4597, 4589, 4587, 3321, 74, 2673, 2673, 152, 4584,
	1103, 4581, 3522, 4585, 4551, 4582, 4550, 3320, 2190, 4549,
	2190, 78, 4544, 2050, 4543, 4534, 2050, 4532, 2050, 4251,
	4529, 4251, 67, 4502, 4314, 3306, 1672, 4251, 4476, 48,
	4469, 154, 2734, 4468, 2673, 4463, 4462, 2673, 4456, 4251,
	4251, 4422, 2190, 4375, 4357, 4100, 4354, 2734, 3921, 47,
	2190, 87, 4351, 1208, 4304, 4268, 4251, 4267, 4305, 2190,
	4258, 2190, 4257, 4250, 2190, 4220, 4251, 4251, 4012, 2190,
	4194, 4172, 1194, 1194, 2734, 2050, 4161, 50, 68, 2666,
	3532, 4084, 3201, 3202, 4069, 2673, 51, 1342, 2673, 3532,
	3954, 57, 3902, 1027, 2734, 155, 3549, 3896, 3857, 1026,
	1046, 3549, 3858, 49, 2190, 107, 1342, 2047, 3727, 2754,
	93, 104, 3728, 2264, 3725, 3710, 2190, 1226, 3726, 2673,
	93, 3626, 3201, 3202, 3622, 2190, 1047, 3548, 2673, 3539,
	1036, 3549, 3707, 3540, 1041, 3247, 3242, 3241, 3192, 2673,
	2673, 2673, 3193, 3190, 865, 3182, 1250, 3191, 1243, 3183,
	52, 3102, 3201, 3202, 3180, 3219, 3220, 3221, 2673, 3151,
	3149, 1195, 2673, 2673, 3201, 3202, 3150, 2730, 94, 4477,
	1223, 73, 3024, 868, 867, 2996, 2050, 2995, 2777, 2252,
	4379, 2252, 2673, 2733, 1511, 2724, 2718, 2734, 74, 2673,
	2190, 2753, 4370, 4358, 2489, 2490, 2491, 2508, 2509, 2510,
	1197, 4314, 1198, 2190, 78, 2982, 1499, 2672, 2251, 2050,
	3707, 2673, 2252, 2665, 2511, 4141, 2673, 4100, 4070, 3921,
	3540, 2872, 2792, 2063, 2028, 2044, 2047, 3216, 2950, 2189,
	1244, 2892, 2790, 1222, 1899, 1485, 2118, 2538, 3806, 3597,
	3573, 1921, 2164, 3524, 87, 2710, 1649, 1813, 2709, 2708,
	2707, 3207, 2706, 1199, 1196, 1035, 3201, 3202, 230, 3219,
	3220, 3221, 3525, 2568, 1034, 1033, 2501, 1032, 1031, 1030,
	1029, 1025, 1024, 1023, 1022, 2497, 1021, 1020, 3950, 3064,
	2554, 1019, 1018, 1017, 871, 1016, 1015, 1014, 1013, 1012,
	1011, 3207, 3201, 3202, 1010, 1009, 49, 934, 107, 933,
	932, 931, 930, 93, 104, 929, 232, 928, 927, 2030,
	926, 925, 2030, 97, 924, 923, 922, 921, 920, 919,
	918, 3207, 2030, 917, 916, 2539, 2030, 915, 914, 913,
	53, 3216, 912, 3207, 230, 911, 2030, 2030, 1613, 910,
	4007, 1599, 3139, 909, 56, 908, 907, 906, 905, 59,
	2502, 2503, 2504, 2505, 904, 231, 1617, 3217, 69, 903,
	2496, 94, 902, 901, 58, 183, 100, 3216, 103, 891,
	890, 886, 54, 885, 879, 878, 156, 863, 862, 1490,
	819, 3522, 232, 55, 818, 3223, 1151, 817, 816, 808,
	807, 2027, 806, 230, 774, 1510, 3966, 3217, 1244, 186,
	765, 62, 4155, 230, 258, 764, 148, 2540, 763, 2537,
	1505, 2047, 747, 254, 1309, 1106, 148, 253, 252, 251,
	250, 153, 249, 248, 247, 3207, 246, 3217, 245, 1810,
	244, 231, 243, 2506, 2507, 242, 241, 240, 1106, 3217,
	239, 232, 1106, 238, 224, 237, 236, 235, 234, 1757,
	1758, 232, 233, 225, 3748, 1757, 1758, 3721, 1367, 3550,
	3294, 3207, 1367, 3162, 3145, 3136, 2499, 151, 230, 1810,
	1309, 3047, 1788, 2931, 2738, 186, 3245, 4245, 4572, 1760,
	2552, 2764, 187, 2665, 2028, 1760, 2715, 1757, 1758, 3223,
	231, 1106, 1346, 1106, 2047, 1106, 1351, 1882, 2044, 1810,
	231, 1309, 3218, 224, 1881, 1813, 97, 1924, 2753, 2359,
	1788, 1810, 225, 224, 1759, 3246, 232, 1760, 1499, 2700,
	1759, 1499, 225, 230, 1471, 1337, 1885, 1309, 2964, 2092,
	1756, 3217, 2049, 1947, 186, 1852, 1466, 3, 1493, 1353,
	1230, 1882, 3218, 1813, 186, 4382, 4361, 1309, 1881, 4552,
	1244, 4531, 1759, 4437, 1309, 4367, 2259, 2542, 183, 100,
	4208, 103, 1106, 4162, 1106, 231, 4359, 3217, 1309, 4140,
	1880, 232, 3218, 4017, 1106, 1674, 1106, 3989, 224, 3988,
	3982, 1277, 1280, 3981, 3218, 1498, 230, 225, 1489, 1555,
	1558, 3980, 3973, 3972, 872, 3970, 1603, 3965, 1290, 148,
	3962, 3961, 3856, 1810, 3862, 4157, 3752, 1331, 3751, 186,
	1850, 2500, 3750, 3731, 3698, 3697, 3696, 3618, 1765, 3613,
	231, 1504, 1309, 1477, 1765, 1360, 230, 1453, 1458, 3289,
	1843, 3201, 3202, 224, 232, 3201, 3202, 802, 3238, 1810,
	2258, 1106, 225, 3229, 1106, 3210, 3211, 3203, 3204, 3205,
	3206, 3208, 3209, 3200, 1461, 3197, 1765, 1207, 3196, 805,
	151, 3194, 3189, 3188, 2981, 1787, 1789, 3187, 3184, 1812,
	3181, 1326, 3161, 2536, 232, 187, 3218, 1845, 1488, 1544,
	1487, 3144, 3137, 231, 3212, 3210, 3211, 3203, 3204, 3205,
	3206, 3208, 3209, 175, 175, 3135, 224, 3201, 3202, 2747,
	1586, 1588, 2997, 1787, 1789, 225, 2701, 3213, 3214, 3215,
	2525, 1756, 3218, 1618, 3212, 3210, 3211, 3203, 3204, 3205,
	3206, 3208, 3209, 231, 1780, 1561, 2232, 866, 3211, 3203,
	3204, 3205, 3206, 3208, 3209, 3804, 224, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 225, 2486, 2487, 2488, 2512,
	2498, 2492, 1755, 2494, 2495, 2493, 2480, 2481, 2482, 2483,
	2484, 2485, 1780, 1843, 4744, 1499, 1337, 186, 4688, 1337,
	1106, 4687, 2966, 3243, 2197, 2195, 1106, 3863, 4653, 4606,
	230, 4604, 1232, 230, 1844, 3644, 1842, 4494, 1317, 1577,
	4429, 1049, 4418, 4415, 4414, 4413, 1810, 4394, 230, 4381,
	3207, 4380, 1810, 4355, 3207, 4339, 1047, 4338, 2466, 1734,
	4324, 3213, 3214, 3215, 1757, 1758, 1690, 4321, 3212, 3210,
	3211, 3203, 3204, 3205, 3206, 3208, 3209, 4320, 232, 1080,
	3312, 232, 4315, 1598, 1810, 4264, 4241, 4206, 4189, 4188,
	4169, 1728, 4168, 4126, 1760, 1612, 232, 2567, 4156, 3863,
	4101, 4006, 230, 3987, 3212, 3210, 3211, 3203, 3204, 3205,
	3206, 3208, 3209, 4383, 2553, 3922, 3207, 3916, 3913, 1781,
	3792, 3791, 3775, 3774, 3772, 1832, 3713, 231, 3701, 1759,
	231, 1106, 1106, 1106, 1623, 3608, 1830, 1106, 3551, 3533,
	224, 3499, 3434, 224, 1228, 231, 1228, 1640, 3394, 225,
	232, 3361, 225, 3314, 3166, 3165, 3160, 1781, 224, 1675,
	3126, 1367, 2943, 1888, 1887, 1901, 1886, 225, 1883, 2472,
	1106, 186, 1875, 796, 186, 39, 1873, 1812, 2745, 1984,
	796, 1835, 2744, 1309, 2712, 1840, 2705, 2671, 2550, 186,
	1829, 1946, 1902, 1950, 1897, 1896, 1895, 1894, 1731, 231,
	1893, 1739, 1892, 1891, 1963, 1910, 1575, 3286, 1738, 1890,
	1889, 2011, 224, 1870, 1869, 1812, 2965, 1868, 1027, 1867,
	1866, 225, 3217, 1865, 1026, 1733, 1864, 1863, 1810, 1862,
	1861, 1752, 1753, 1765, 1735, 1860, 1859, 1858, 1958, 1857,
	1955, 1884, 1856, 186, 1845, 1831, 1828, 1823, 1325, 1309,
	1248, 1239, 4129, 1907, 1908, 4013, 1106, 3958, 3747, 3724,
	1309, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	1761, 1762, 1763, 1764, 1766, 1767, 3716, 230, 1106, 1047,
	3148, 2703, 4225, 4015, 1367, 2736, 1931, 1580, 230, 2260,
	1194, 3746, 1844, 175, 1810, 3310, 1876, 1877, 2108, 1826,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 3528, 1942,
	4244, 2081, 1224, 4685, 2551, 2083, 1757, 1758, 4677, 1350,
	2870, 4416, 1343, 4316, 2056, 232, 4072, 3201, 3202, 4307,
	802, 4306, 2090, 4160, 4103, 1953, 232, 802, 4102, 4071,
	4009, 2083, 2055, 3925, 3924, 3923, 1760, 2083, 1226, 1337,
	1226, 3719, 805, 4362, 3535, 1348, 1929, 1951, 1932, 805,
	3534, 4312, 1922, 1342, 1924, 1882, 3866, 3218, 1959, 3595,
	1954, 3397, 1881, 4360, 231, 2007, 1342, 1726, 1900, 1349,
	2032, 1759, 3816, 3186, 3185, 231, 1294, 224, 1639, 2075,
	2074, 3108, 2835, 2083, 2085, 1345, 225, 1926, 224, 2853,
	2069, 1223, 3363, 1223, 2161, 1047, 3789, 225, 1941, 1940,
	1939, 1937, 1936, 1935, 1309, 1309, 1342, 1854, 186, 2538,
	1007, 3482, 3544, 3481, 1367, 2118, 1648, 1964, 2059, 186,
	2281, 2058, 4618, 2257, 1459, 4303, 1691, 1470, 1294, 1339,
	1851, 4592, 4577, 4564, 3466, 2054, 3203, 3204, 3205, 3206,
	3208, 3209, 3205, 3206, 3208, 3209, 1865, 1865, 3426, 4573,
	3021, 1649, 3250, 2177, 1222, 1008, 1222, 3870, 3853, 3818,
	1978, 3813, 3797, 3570, 3335, 4210, 3646, 2533, 4057, 2146,
	230, 2151, 2878, 230, 2156, 4055, 2743, 1898, 1878, 4409,
	1206, 3473, 2226, 1554, 1482, 1320, 1276, 3154, 2832, 4586,
	2052, 2889, 4583, 1294, 1294, 3518, 2886, 2539, 2884, 3767,
	2061, 2078, 3203, 3204, 3205, 3206, 3208, 3209, 1309, 1344,
	1309, 4260, 1309, 2233, 2086, 2076, 4574, 1579, 232, 4144,
	4501, 232, 2182, 2187, 4391, 3366, 3784, 4237, 1309, 1309,
	3004, 2877, 2978, 3458, 4636, 3589, 4637, 1580, 4285, 1309,
	3831, 3339, 4059, 2124, 1529, 1521, 1343, 2831, 2778, 1688,
	858, 1309, 4739, 1309, 1309, 1309, 4667, 1670, 2809, 1005,
	1003, 1483, 1001, 802, 4278, 999, 1340, 231, 996, 4270,
	231, 2179, 2334, 1627, 2374, 1341, 796, 2332, 2222, 2540,
	224, 2537, 988, 224, 2144, 805, 2267, 2796, 4098, 225,
	4097, 2280, 225, 3829, 3828, 3820, 3341, 3812, 1106, 3811,
	2227, 3809, 2794, 3808, 1488, 2070, 1487, 2239, 3830, 3796,
	1689, 186, 3762, 3761, 186, 2080, 2186, 3462, 2290, 3461,
	2581, 1763, 1764, 1766, 1767, 3305, 2796, 3159, 2143, 3158,
	3157, 1530, 2155, 2372, 3156, 3112, 2895, 3770, 2894, 2891,
	2880, 2794, 2868, 2867, 2863, 2285, 3311, 2862, 2188, 1687,
	2262, 2861, 2840, 2079, 859, 2839, 2800, 2725, 2447, 1669,
	1732, 2580, 2404, 1339, 2247, 2975, 1106, 1350, 1106, 2341,
	1567, 2812, 1566, 993, 2236, 1106, 4054, 3571, 1984, 1984,
	1367, 2291, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 2249, 1106,
	2208, 1106, 1106, 1106, 1106, 2207, 2356, 1349, 4261, 2542,
	2241, 2206, 1350, 802, 2268, 2273, 1577, 2245, 2244, 3363,
	2244, 2376, 2638, 1344, 4238, 2363, 1342, 1106, 2253, 1326,
	2254, 1106, 1106, 1625, 2257, 805, 2833, 1525, 4668, 1106,
	3396, 2115, 1565, 1106, 1564, 1106, 1106, 1047, 2277, 1047,
	2272, 2307, 2833, 1367, 4022, 2373, 1262, 1579, 2785, 1106,
	1106, 1106, 1106, 1724, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1349, 1538, 2149, 2111, 4187, 2289, 3027, 2823,
	1340, 2374, 2717, 1543, 2462, 3424, 4041, 2338, 3100, 1341,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 2514,
	2515, 2737, 2351, 1106, 2116, 2117, 1045, 1624, 1484, 983,
	1700, 2297, 1620, 2514, 2530, 1228, 2462, 4021, 2328, 2837,
	4037, 2348, 1367, 3085, 4030, 2536, 2387, 4698, 4570, 2371,
	772, 1228, 3067, 1040, 2112, 3579, 2294, 2822, 2099, 2576,
	2372, 4028, 1670, 2100, 1641, 2288, 3578, 1106, 1367, 2811,
	4032, 1737, 2246, 2850, 2851, 1981, 1767, 2857, 2622, 2622,
	2636, 1470, 2514, 2362, 2360, 2657, 2659, 3209, 2368, 2375,
	2361, 2663, 4073, 2478, 4038, 2533, 2400, 2401, 4056, 2850,
	2851, 1316, 1686, 1942, 2471, 2850, 2851, 1027, 1332, 2034,
	1027, 1027, 2036, 2391, 2529, 1044, 2392, 2393, 2041, 3838,
	1835, 4672, 2043, 1667, 4402, 1725, 2688, 2046, 1470, 3061,
	1704, 2350, 4041, 2578, 4636, 2713, 4031, 3099, 2579, 2370,
	2298, 2582, 2542, 2583, 2584, 984, 4053, 899, 861, 860,
	1621, 2087, 2088, 3635, 1306, 2470, 1324, 2888, 4096, 770,
	1550, 3070, 2468, 3425, 1669, 3810, 4037, 2474, 1649, 1978,
	1978, 1309, 1309, 3839, 2644, 2680, 2101, 1496, 1649, 1503,
	1342, 1509, 3338, 1637, 3807, 3632, 1668, 1194, 2527, 2887,
	2458, 1931, 3460, 2105, 2885, 3422, 2883, 2702, 2890, 2731,
	2860, 4701, 2373, 1235, 2838, 983, 2194, 2193, 1047, 1548,
	2799, 2679, 2810, 1367, 3837, 1683, 4673, 3793, 1047, 2456,
	4038, 4571, 1047, 4648, 1046, 2767, 2799, 2631, 2739, 1040,
	2773, 175, 3781, 2618, 2357, 2661, 1343, 2648, 856, 1226,
	855, 2099, 2669, 2670, 4404, 1233, 2100, 1984, 1597, 2681,
	1602, 688, 2687, 4656, 2692, 1226, 2795, 2698, 2699, 4186,
	1611, 1929, 1616, 2685, 2686, 2102, 2107, 3633, 4625, 997,
	997, 2728, 997, 1337, 1884, 998, 2371, 683, 997, 3092,
	3093, 2333, 4655, 2723, 2118, 1367, 2331, 3940, 1237, 3515,
	1527, 3939, 1223, 3069, 892, 4033, 4728, 2775, 4483, 1309,
	4034, 4229, 2836, 2542, 2347, 880, 4473, 1626, 1223, 2801,
	1047, 2444, 2746, 4410, 3413, 1106, 1106, 1099, 1106, 2750,
	4569, 984, 2769, 3066, 1673, 2758, 4675, 2162, 2029, 2761,
	1524, 2762, 3516, 1876, 1877, 985, 2749, 2871, 2174, 2099,
	796, 2776, 1309, 2798, 2100, 2752, 2865, 4051, 2103, 1261,
	3779, 4036, 2768, 1339, 1236, 1222, 2766, 2881, 2770, 2101,
	2452, 3405, 2864, 994, 4681, 2947, 2858, 4039, 3414, 771,
	3794, 1222, 3350, 1309, 2842, 1701, 2105, 3437, 2165, 2453,
	1038, 2126, 983, 2172, 2454, 1309, 2797, 1309, 2459, 4424,
	2962, 2779, 2173, 2225, 2349, 2109, 3340, 1550, 2989, 2826,
	3123, 1043, 1309, 2296, 2130, 4349, 1040, 3378, 1698, 3412,
	3515, 1246, 2841, 3018, 2150, 3406, 4118, 2542, 773, 737,
	1871, 4033, 769, 2804, 3068, 2859, 4034, 2814, 2817, 3121,
	3308, 3028, 3029, 1344, 2162, 2926, 2852, 2854, 2855, 2856,
	2928, 2781, 3035, 3036, 3037, 3344, 1106, 2109, 2102, 2107,
	3114, 3936, 1039, 3048, 809, 3049, 3404, 2101, 4341, 4183,
	2783, 2127, 4538, 3377, 4539, 2843, 4199, 802, 2866, 2958,
	4647, 4342, 2876, 2796, 2105, 2716, 986, 4036, 2442, 2141,
	1912, 2445, 2461, 1224, 2524, 1224, 3382, 706, 2815, 805,
	1340, 4471, 3045, 4039, 4035, 2784, 2166, 802, 984, 1341,
	1106, 4052, 1699, 3022, 4343, 4403, 1106, 1106, 1488, 2293,
	2929, 985, 1702, 1822, 3003, 4674, 2782, 175, 2287, 805,
	900, 3025, 1622, 1736, 2993, 2941, 3030, 4624, 3031, 987,
	4472, 2103, 2441, 4042, 2954, 2952, 2991, 3384, 1978, 2951,
	893, 894, 3072, 4521, 3074, 2118, 2102, 2107, 4512, 4081,
	1303, 881, 882, 2973, 2147, 2162, 2922, 2984, 3164, 2358,
	2994, 1916, 1106, 1106, 2684, 4702, 4345, 2131, 1106, 2455,
	3118, 3005, 2697, 2104, 3388, 1046, 3351, 3648, 2109, 2457,
	4599, 1106, 1106, 1938, 1981, 1981, 3042, 1106, 1106, 4344,
	4600, 2992, 3023, 1106, 3119, 4182, 2469, 2142, 3124, 3052,
	3383, 3054, 1703, 3056, 4689, 2158, 1479, 4346, 1323, 1919,
	2923, 3044, 4128, 3051, 4679, 3050, 3930, 1234, 684, 3743,
	4035, 1251, 4133, 3053, 1914, 3055, 3065, 3057, 3386, 2103,
	2157, 4119, 2138, 2132, 2133, 1636, 1638, 1514, 1106, 1106,
	1106, 4134, 1917, 1916, 1106, 3115, 1654, 3941, 3080, 3562,
	4729, 2921, 986, 3591, 1106, 3091, 2121, 2128, 3555, 4042,
	3780, 2644, 3083, 1551, 2153, 3075, 3082, 3081, 3077, 3387,
	1342, 1106, 2097, 4431, 4568, 3147, 2109, 4635, 2387, 4633,
	4450, 3086, 2030, 4323, 3101, 1915, 2139, 3884, 985, 3503,
	1592, 1919, 2214, 2116, 2117, 685, 1746, 1909, 1249, 2129,
	810, 811, 1242, 675, 1605, 987, 2682, 3142, 3143, 1741,
	2122, 2169, 3146, 3861, 1746, 3687, 3265, 1747, 4680, 2443,
	3985, 3937, 2390, 2154, 1917, 4623, 2095, 2137, 2119, 895,
	896, 3737, 4184, 1912, 2071, 4707, 3299, 4259, 3138, 4332,
	883, 884, 2644, 2644, 686, 3113, 687, 4390, 3885, 3824,
	3766, 2120, 4682, 3357, 3504, 3557, 2104, 3846, 1631, 3495,
	3353, 1106, 1106, 1106, 1106, 2167, 3844, 2096, 2963, 2068,
	3556, 1106, 1106, 1106, 2957, 2380, 1106, 2945, 2816, 3120,
	2240, 2234, 3631, 2844, 3273, 3738, 1106, 1228, 1367, 3122,
	2228, 2220, 1106, 2200, 1106, 3257, 3258, 4488, 1918, 1745,
	1822, 1518, 4432, 1228, 1253, 1294, 2168, 746, 3702, 3758,
	3846, 3739, 2140, 3736, 1916, 2134, 3592, 1745, 2799, 3844,
	4453, 1367, 2339, 2064, 1746, 3887, 3153, 1037, 4149, 986,
	4598, 2942, 3942, 1228, 1264, 4301, 1367, 2278, 2150, 4299,
	4240, 813, 812, 3848, 3240, 2066, 1047, 3369, 3365, 3364,
	4347, 4131, 3106, 1294, 2104, 1984, 4348, 3279, 3084, 1367,
	3259, 3292, 1919, 3715, 2759, 1747, 2148, 3262, 3261, 1671,
	2763, 1677, 1676, 2722, 1309, 1309, 3304, 1914, 3847, 3274,
	1918, 2721, 987, 1747, 2774, 2720, 2067, 2719, 1573, 1294,
	1294, 2135, 1559, 1571, 3852, 1917, 3848, 1106, 2949, 3318,
	898, 814, 815, 2691, 3688, 1044, 1560, 2145, 4110, 4397,
	3264, 1106, 2381, 3689, 2675, 4296, 3943, 3269, 3986, 4248,
	2108, 1309, 2644, 2644, 2644, 2644, 1984, 1745, 2820, 3272,
	3773, 3847, 3545, 3288, 2238, 3469, 3293, 3763, 1915, 2149,
	4644, 4706, 4428, 3267, 1106, 3345, 3346, 4227, 3026, 2678,
	2927, 3336, 3268, 1981, 2108, 2845, 2846, 3277, 3329, 4166,
	1309, 3276, 3297, 3280, 3281, 3342, 3367, 3285, 3251, 3371,
	3235, 3236, 3237, 2925, 3563, 3558, 3559, 3560, 3561, 3266,
	2266, 1459, 1309, 3278, 1309, 1630, 1655, 4491, 4398, 1337,
	2677, 1226, 4498, 3368, 3438, 2676, 3373, 4433, 4485, 3375,
	2161, 1367, 3315, 3316, 3759, 3317, 3992, 1226, 1470, 2161,
	3740, 1055, 1309, 3354, 3704, 2549, 1309, 3301, 3302, 3303,
	3842, 1584, 1720, 4249, 4516, 2343, 4646, 4235, 1722, 4588,
	4165, 3399, 4417, 3283, 3427, 3284, 3440, 1226, 3442, 1309,
	4205, 3446, 2330, 3845, 1223, 3452, 1309, 1719, 1309, 3984,
	3851, 1918, 1367, 3232, 3326, 1717, 3421, 1695, 1693, 796,
	1223, 3330, 3607, 3300, 1665, 1663, 3322, 3323, 3275, 1661,
	1309, 3337, 4236, 3309, 4492, 4399, 3568, 3233, 3567, 1659,
	3319, 1657, 1309, 3403, 3343, 3435, 1651, 3195, 3125, 1646,
	1223, 2946, 3417, 745, 1644, 3478, 3845, 3764, 1569, 1228,
	2879, 2834, 2748, 3511, 2352, 1949, 1945, 1222, 3487, 1723,
	1608, 3385, 3587, 3352, 3586, 1741, 3063, 3062, 3033, 3494,
	2369, 3395, 1682, 1222, 1309, 1309, 2302, 1572, 2219, 2199,
	2012, 1855, 1570, 3018, 1619, 1542, 2548, 3408, 3509, 897,
	4563, 4082, 3018, 1470, 3358, 3411, 1978, 1309, 3815, 3502,
	3814, 1294, 3402, 1222, 4083, 3428, 4068, 3531, 3409, 4484,
	4147, 3436, 3410, 4088, 3464, 4026, 3467, 3883, 3520, 3459,
	3874, 3827, 1954, 3449, 3416, 3455, 3418, 3787, 3785, 3508,
	3765, 3498, 3423, 3493, 1224, 3483, 2976, 1367, 3401, 2968,
	1367, 2961, 2953, 1470, 3572, 1470, 2939, 2924, 4621, 2765,
	1224, 2760, 3439, 2198, 3448, 2345, 2842, 2196, 3454, 2344,
	3415, 995, 1721, 3463, 2178, 3471, 802, 1978, 3505, 3512,
	4142, 2163, 2329, 1106, 3492, 2136, 3490, 2123, 3491, 1106,
	1106, 1718, 3628, 1106, 1106, 1106, 2110, 1106, 805, 1716,
	3447, 1694, 1692, 3565, 3453, 4612, 1106, 1984, 1664, 1662,
	3517, 2051, 2048, 1660, 2045, 1106, 2042, 3543, 2037, 3526,
	1106, 175, 175, 1658, 3585, 1656, 1367, 3547, 3529, 3530,
	1650, 3519, 3541, 1645, 2035, 1106, 3564, 2031, 1643, 2022,
	3450, 1203, 1568, 1367, 1957, 2172, 3584, 1750, 4637, 4133,
	3510, 2072, 3104, 1984, 1984, 1106, 1106, 3078, 1106, 1106,
	1106, 3076, 4526, 1226, 4171, 4164, 4163, 1204, 4134, 4095,
	4018, 2355, 3019, 2091, 3610, 1523, 1106, 3593, 4334, 2821,
	1106, 4327, 1984, 1984, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 3575, 1106, 3576, 3660, 3577, 3661,
	3581, 3895, 3566, 1106, 1106, 1984, 1223, 2353, 3590, 2796,
	1106, 1047, 2796, 2118, 3620, 3621, 1000, 1002, 1004, 2292,
	733, 1106, 4525, 1285, 2794, 1714, 1715, 2818, 2237, 2325,
	1284, 3582, 1228, 1228, 2321, 2299, 1106, 3105, 4060, 4090,
	3588, 1642, 4369, 3993, 3971, 2644, 2644, 1751, 3451, 2824,
	3617, 3380, 3615, 2354, 1757, 1758, 2825, 2019, 2255, 1757,
	1758, 2847, 3634, 3636, 3637, 1367, 1754, 1205, 3638, 1222,
	3627, 3562, 3733, 3643, 1303, 2269, 3650, 1318, 3699, 1252,
	3555, 2825, 4640, 255, 1760, 2271, 4631, 3823, 4593, 3720,
	2938, 3657, 2327, 3871, 789, 2221, 3663, 2279, 1329, 2282,
	2283, 2284, 689, 2873, 3691, 3665, 3741, 3742, 846, 3822,
	3658, 2886, 1106, 1285, 3659, 1285, 2884, 2893, 2875, 1759,
	3753, 3754, 3755, 2019, 1759, 2827, 4478, 3700, 4246, 3692,
	672, 2874, 1106, 4444, 2019, 2644, 2644, 2644, 2644, 2644,
	2644, 2644, 2644, 2644, 2644, 2644, 2644, 2644, 2644, 2644,
	2644, 2644, 2644, 2644, 2644, 3706, 2644, 700, 2829, 175,
	4438, 2400, 3651, 4396, 4318, 1106, 1106, 3708, 3709, 4294,
	4228, 2828, 3711, 3712, 3881, 3873, 3860, 3557, 3730, 3497,
	2983, 2662, 2057, 1965, 4676, 3307, 4705, 4440, 1978, 1490,
	2400, 3666, 3556, 4518, 3201, 3202, 3722, 4518, 4519, 3723,
	1757, 1758, 4519, 2788, 2789, 1106, 2786, 2787, 3963, 2932,
	2544, 1981, 2935, 1629, 2937, 3745, 1972, 2788, 4650, 1628,
	2786, 2577, 3749, 3695, 1697, 3880, 4319, 1696, 4279, 1309,
	4092, 4087, 1309, 3798, 1978, 1978, 1226, 1226, 4086, 3959,
	3325, 3744, 3639, 3327, 3328, 3444, 3441, 1849, 3331, 1984,
	3332, 1848, 3333, 4691, 4657, 3802, 3803, 3805, 2980, 1470,
	1470, 2980, 4482, 1978, 1978, 4481, 3769, 4480, 3817, 4384,
	4297, 3825, 4274, 3819, 3790, 4226, 4224, 4222, 4121, 4107,
	1309, 3553, 1981, 4058, 3795, 4014, 1106, 3919, 3901, 1223,
	1223, 3855, 3783, 3776, 1228, 1106, 1978, 3897, 3501, 3500,
	3374, 3324, 3060, 3041, 3040, 1309, 1309, 1309, 3039, 3038,
	3904, 2842, 2967, 2940, 2819, 2756, 2751, 2741, 2740, 2729,
	2473, 3888, 1309, 2346, 2989, 3850, 2326, 2322, 2320, 2319,
	2318, 1365, 1470, 2317, 2316, 1464, 2235, 3058, 1309, 2209,
	2205, 2204, 2203, 2202, 1367, 3867, 2201, 3908, 3892, 2025,
	2024, 3018, 1222, 1222, 3889, 3836, 2023, 2225, 2021, 1956,
	1713, 1712, 1652, 1537, 3868, 1536, 3854, 3840, 1367, 1535,
	3849, 1106, 1106, 3872, 1534, 1114, 1533, 1106, 1106, 1984,
	3920, 1532, 1106, 1106, 3891, 1106, 1531, 1526, 1522, 1520,
	1106, 3877, 1584, 1519, 1584, 3875, 3563, 3558, 3559, 3560,
	3561, 1106, 1476, 1475, 1474, 1473, 3890, 3893, 1358, 1357,
	1356, 1355, 3898, 1354, 3899, 1322, 1321, 1106, 1271, 1270,
	1269, 262, 262, 262, 3835, 678, 679, 3911, 694, 678,
	694, 704, 3926, 3903, 744, 3918, 3944, 1268, 762, 3914,
	1267, 1266, 1265, 768, 3909, 3910, 3953, 3915, 1263, 1258,
	262, 1257, 3945, 3957, 3917, 1256, 3928, 1255, 1254, 1186,
	3834, 870, 8, 1294, 2062, 1006, 3938, 3358, 992, 3927,
	877, 4401, 4040, 2342, 1706, 92, 262, 1528, 1228, 832,
	86, 2170, 3782, 962, 4515, 1512, 1228, 4423, 840, 4500,
	1367, 3869, 1367, 3376, 2896, 2301, 1653, 2303, 1226, 1228,
	3287, 2704, 4470, 3967, 3163, 4376, 4198, 2547, 1853, 3244,
	1309, 1309, 88, 1090, 3998, 1136, 4117, 2772, 1303, 1367,
	4116, 3933, 4027, 3768, 3008, 4114, 4113, 3292, 1969, 1971,
	1054, 1370, 4537, 2073, 1096, 2089, 2082, 3983, 2742, 2621,
	1978, 1113, 1110, 1228, 1973, 1228, 1975, 1112, 1111, 1974,
	1872, 1223, 1109, 1968, 3879, 2987, 3527, 1578, 1576, 964,
	2077, 2467, 2531, 4019, 4020, 1470, 3152, 1309, 1846, 1070,
	1092, 4046, 2528, 4046, 4001, 1247, 4050, 1367, 1081, 1309,
	1069, 3270, 1309, 3249, 3514, 3990, 1224, 4061, 3729, 4049,
	2379, 1367, 4063, 4064, 4000, 3997, 3995, 3996, 850, 3198,
	678, 678, 1224, 1981, 4004, 4023, 2534, 1238, 262, 4008,
	4005, 2645, 2637, 2633, 1222, 4062, 3334, 175, 3994, 2977,
	1727, 4212, 1309, 1309, 1824, 4025, 3999, 2988, 1352, 4091,
	1074, 4093, 1224, 2465, 1837, 3130, 2389, 3521, 3290, 2735,
	4522, 3647, 1309, 2213, 1202, 2920, 1201, 1245, 1200, 1981,
	1981, 4506, 4503, 2160, 1367, 3912, 3476, 2065, 2780, 1309,
	4111, 4094, 2477, 3484, 1086, 4108, 1469, 3255, 3546, 1539,
	1978, 767, 4253, 1098, 1809, 4085, 2917, 2916, 1981, 1981,
	4105, 4393, 1226, 1338, 1228, 1336, 1335, 1334, 4139, 4664,
	1226, 4727, 4080, 3778, 1309, 1309, 1309, 4099, 3777, 229,
	4150, 3098, 4077, 1226, 1748, 1740, 4104, 1367, 226, 228,
	227, 1981, 4046, 4122, 3734, 3296, 4591, 4170, 3800, 1106,
	1106, 1106, 3468, 23, 22, 1972, 1972, 4112, 4167, 21,
	112, 42, 20, 4151, 150, 1223, 128, 1367, 4145, 4154,
	4127, 4106, 1106, 1223, 147, 1106, 1106, 1226, 3034, 1226,
	146, 4136, 120, 145, 144, 1106, 1223, 143, 1984, 4067,
	4152, 142, 149, 1106, 1106, 141, 140, 4138, 135, 139,
	4159, 4076, 138, 137, 4079, 136, 134, 132, 1367, 133,
	1309, 127, 131, 130, 1948, 4190, 4174, 4173, 129, 126,
	125, 124, 123, 122, 4066, 4178, 121, 119, 1222, 118,
	1223, 1367, 1223, 4185, 117, 116, 1222, 4075, 3756, 1106,
	4078, 115, 3757, 4176, 114, 113, 758, 755, 1106, 1222,
	61, 60, 111, 110, 19, 4207, 1106, 40, 14, 65,
	1984, 4179, 66, 4195, 4135, 18, 4201, 13, 35, 1106,
	91, 102, 1106, 3389, 3390, 101, 3391, 3392, 3393, 36,
	99, 98, 34, 3786, 1106, 3788, 4231, 17, 4218, 4219,
	16, 1367, 15, 1222, 96, 1222, 95, 33, 1309, 4256,
	31, 11, 9, 1309, 1309, 37, 1933, 12, 5, 180,
	4221, 179, 182, 178, 181, 90, 4230, 177, 1226, 3429,
	3430, 176, 3431, 3432, 3433, 264, 4273, 4239, 1224, 89,
	29, 4232, 10, 172, 4310, 3865, 81, 2093, 174, 173,
	171, 170, 169, 4309, 82, 79, 2644, 168, 1367, 85,
	167, 1309, 80, 84, 3826, 4300, 83, 27, 3478, 4271,
	6, 4284, 4275, 64, 7, 1294, 4180, 3569, 105, 1228,
	1228, 1223, 106, 38, 77, 76, 75, 26, 63, 4317,
	25, 213, 4290, 212, 211, 1981, 4289, 4333, 210, 1106,
	1106, 4281, 4328, 4293, 209, 4298, 208, 4046, 4046, 207,
	2644, 206, 4337, 201, 200, 205, 1106, 1984, 203, 4308,
	202, 204, 4356, 4352, 4353, 199, 216, 4331, 2225, 4313,
	215, 4288, 4292, 221, 220, 4329, 219, 218, 217, 214,
	223, 4330, 4325, 198, 1222, 197, 196, 4154, 4350, 194,
	4336, 4335, 1106, 190, 189, 1106, 193, 195, 192, 191,
	188, 222, 1228, 72, 165, 166, 2019, 4365, 4366, 71,
	164, 4364, 163, 162, 161, 1228, 160, 159, 158, 70,
	24, 2, 4389, 1, 4374, 4276, 0, 2191, 4263, 1978,
	4046, 0, 0, 3127, 3128, 0, 1240, 1584, 0, 0,
	4287, 0, 0, 4046, 0, 0, 0, 4388, 4385, 0,
	0, 4368, 0, 2108, 0, 0, 0, 1106, 1106, 4412,
	0, 0, 0, 1068, 0, 1981, 4427, 1106, 0, 1260,
	0, 0, 1228, 4406, 1972, 1228, 4286, 0, 4405, 1309,
	4411, 262, 0, 262, 262, 0, 1289, 262, 1299, 1309,
	1309, 0, 4419, 0, 0, 0, 4421, 0, 0, 1319,
	4046, 1978, 0, 4046, 0, 0, 1309, 0, 762, 0,
	0, 4435, 4436, 0, 4461, 0, 4447, 2644, 4441, 4449,
	1106, 1106, 0, 1226, 1226, 4439, 4446, 4442, 4434, 0,
	1106, 0, 262, 0, 262, 262, 1289, 4455, 262, 262,
	0, 4466, 4457, 4467, 1299, 0, 0, 4459, 4460, 4458,
	0, 4313, 0, 4454, 0, 262, 0, 1492, 0, 0,
	0, 1224, 1224, 0, 4464, 4493, 1106, 1106, 4465, 1106,
	0, 0, 4475, 4497, 0, 0, 1223, 1223, 1516, 4479,
	0, 0, 0, 0, 0, 0, 0, 0, 4474, 4505,
	4508, 0, 4520, 0, 0, 0, 0, 1541, 0, 4517,
	1299, 0, 0, 0, 262, 262, 1226, 1289, 4496, 4495,
	0, 4524, 4542, 3225, 3226, 3227, 3228, 0, 0, 1226,
	0, 4510, 1106, 1106, 1106, 4546, 0, 0, 762, 4545,
	262, 262, 0, 0, 4509, 0, 4527, 4513, 4514, 1222,
	1222, 0, 0, 0, 0, 4533, 4540, 0, 1978, 4541,
	0, 0, 1106, 877, 0, 0, 0, 0, 0, 1223,
	4575, 0, 0, 0, 0, 4580, 0, 4562, 0, 4561,
	4559, 4560, 1223, 0, 0, 4576, 1226, 0, 0, 1226,
	0, 0, 4594, 0, 0, 0, 0, 2225, 0, 0,
	4578, 0, 4601, 2403, 0, 4603, 0, 0, 0, 0,
	4617, 0, 4605, 0, 0, 1294, 1106, 0, 0, 0,
	4615, 0, 0, 0, 4616, 0, 4602, 0, 0, 4622,
	0, 0, 1222, 0, 0, 0, 4610, 0, 262, 1223,
	4609, 0, 1223, 4613, 4614, 1222, 4638, 4611, 0, 4619,
	0, 0, 0, 4628, 4629, 4642, 0, 4634, 262, 4632,
	4630, 0, 0, 0, 0, 1228, 0, 1228, 4505, 2108,
	4643, 4508, 4645, 4641, 4659, 3456, 0, 0, 4649, 4654,
	4662, 4660, 4427, 4671, 0, 4658, 0, 0, 0, 4524,
	0, 4670, 4669, 4046, 4666, 4046, 2545, 0, 0, 2384,
	4665, 0, 1222, 0, 4684, 1222, 3488, 0, 0, 4661,
	0, 4663, 0, 0, 0, 0, 0, 4683, 3496, 0,
	4686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4699, 1224, 4692, 4693, 4697, 1106, 1106, 4695,
	0, 0, 0, 0, 4690, 0, 1106, 4700, 1106, 1106,
	4703, 0, 0, 0, 1981, 0, 4712, 4709, 4718, 0,
	3537, 3538, 4721, 4723, 4715, 4722, 4720, 4717, 0, 0,
	4716, 0, 0, 0, 4719, 0, 0, 4730, 0, 4731,
	4726, 0, 0, 0, 4733, 0, 0, 4735, 0, 4736,
	2989, 2714, 4738, 0, 4734, 4732, 0, 4741, 0, 0,
	0, 0, 0, 3876, 0, 1106, 4746, 4742, 4748, 0,
	0, 4743, 4749, 0, 4751, 4752, 4710, 4711, 4738, 4745,
	0, 0, 775, 0, 0, 0, 1981, 0, 0, 0,
	0, 0, 0, 4265, 4266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2639, 0, 0, 786, 2019, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 678, 0,
	0, 4280, 0, 4282, 0, 4283, 0, 0, 0, 1226,
	0, 1226, 0, 4747, 3929, 0, 0, 0, 0, 262,
	0, 262, 0, 0, 0, 262, 2912, 0, 0, 0,
	0, 0, 0, 0, 0, 2019, 0, 0, 1492, 1289,
	262, 0, 262, 0, 0, 0, 0, 0, 262, 1492,
	694, 0, 0, 0, 0, 262, 1492, 1224, 0, 2904,
	2902, 0, 1223, 0, 1223, 1224, 2906, 2908, 2898, 0,
	2026, 0, 0, 0, 2019, 0, 2791, 0, 1224, 0,
	780, 0, 262, 1068, 0, 0, 787, 1068, 0, 262,
	0, 0, 0, 0, 0, 0, 2019, 0, 2019, 0,
	785, 0, 0, 1451, 0, 0, 0, 1451, 0, 0,
	0, 0, 1470, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 1224, 0, 1224, 1222, 2019, 1222, 0, 762,
	2019, 0, 1972, 0, 0, 0, 3603, 3604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 1757,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 0, 0,
	0, 0, 1788, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 782,
	0, 0, 0, 0, 0, 0, 4420, 0, 0, 0,
	0, 0, 0, 1972, 0, 1813, 0, 0, 0, 0,
	1294, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 3667, 3668, 3669, 3670,
	3671, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3680,
	3681, 3682, 3683, 3684, 3685, 3686, 2900, 3690, 790, 0,
	0, 0, 0, 0, 0, 0, 0, 2914, 0, 0,
	0, 0, 0, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2913, 2905,
	2903, 2907, 2909, 2899, 2901, 2915, 0, 0, 262, 0,
	0, 262, 0, 2911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4120, 0, 1782, 1783,
	1784, 1785, 0, 0, 0, 0, 0, 0, 1765, 4137,
	0, 777, 0, 0, 0, 0, 2918, 0, 0, 0,
	0, 0, 0, 1757, 1758, 0, 0, 0, 0, 0,
	0, 0, 4158, 0, 262, 0, 0, 0, 262, 0,
	0, 781, 0, 0, 262, 3832, 1788, 0, 0, 0,
	262, 0, 0, 1760, 0, 1787, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 262, 0,
	0, 0, 678, 0, 262, 738, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 762, 0, 1759, 788,
	877, 0, 0, 0, 0, 779, 0, 0, 0, 0,
	0, 0, 0, 1757, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 262, 4590, 1289, 262, 0,
	0, 3905, 3906, 3907, 0, 0, 1788, 0, 0, 0,
	0, 0, 762, 1760, 0, 0, 0, 0, 1303, 262,
	0, 0, 776, 0, 0, 0, 2300, 0, 0, 0,
	0, 262, 262, 0, 262, 0, 262, 0, 262, 1813,
	262, 3088, 0, 0, 0, 0, 0, 0, 1759, 0,
	783, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 740, 2335, 1810, 1776, 2336, 0,
	2337, 2919, 1765, 0, 0, 778, 0, 0, 0, 0,
	2910, 0, 262, 0, 0, 0, 0, 0, 1224, 1224,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 3201, 3202, 0, 3219, 3220, 3221, 0, 744, 0,
	0, 0, 762, 0, 0, 0, 0, 0, 1786, 1787,
	1789, 3948, 2639, 2639, 0, 0, 1451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	1972, 1972, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	1972, 1224, 0, 0, 0, 0, 3216, 0, 1780, 0,
	0, 0, 0, 0, 1224, 0, 0, 0, 0, 3201,
	3202, 0, 3219, 3220, 3221, 0, 0, 1812, 0, 1787,
	1789, 0, 1972, 0, 0, 2479, 4010, 4011, 0, 0,
	0, 3949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3256, 0, 0, 0, 1774, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1224, 0, 1068, 1224, 0, 0, 0, 0, 1451,
	1810, 0, 0, 0, 3282, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 3216, 0, 2019, 0, 0, 3295,
	3207, 0, 0, 0, 0, 678, 0, 0, 0, 0,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	262, 0, 3313, 0, 0, 0, 0, 0, 0, 678,
	0, 0, 2639, 2639, 2639, 2639, 262, 0, 678, 0,
	4425, 0, 0, 0, 0, 0, 0, 0, 1303, 0,
	262, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 4445, 0, 262, 1299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 1758, 0, 0, 3217, 0, 0, 0,
	0, 1812, 1786, 0, 262, 1299, 0, 0, 694, 1451,
	4175, 0, 4177, 0, 0, 1788, 0, 0, 2755, 0,
	0, 0, 1760, 1781, 262, 0, 0, 262, 0, 0,
	0, 262, 0, 262, 0, 0, 0, 0, 1289, 0,
	262, 262, 3223, 1299, 1299, 2771, 0, 0, 1813, 0,
	262, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 1779, 1810, 0,
	0, 0, 0, 0, 4528, 0, 1776, 0, 0, 0,
	4530, 1812, 0, 0, 3217, 0, 0, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 2808, 4223, 0, 0, 0,
	0, 0, 0, 0, 0, 3295, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3606, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 3218, 0, 0, 1224, 0, 1224, 0, 0, 0,
	0, 1782, 1783, 1784, 1785, 0, 1810, 0, 0, 262,
	0, 1765, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 2930, 0, 0, 4291,
	0, 0, 0, 0, 0, 0, 1972, 4204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 1789,
	1492, 0, 0, 262, 0, 262, 0, 0, 0, 0,
	0, 2019, 262, 0, 0, 0, 0, 0, 0, 3218,
	0, 0, 2972, 2019, 1774, 1775, 2019, 0, 0, 0,
	1464, 0, 2808, 1365, 678, 0, 0, 0, 0, 0,
	0, 4242, 0, 3001, 877, 0, 2808, 2808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 262, 0, 1451, 3213, 3214, 3215, 0,
	0, 0, 0, 3212, 3210, 3211, 3203, 3204, 3205, 3206,
	3208, 3209, 262, 1289, 262, 0, 2019, 0, 1492, 0,
	1492, 1299, 262, 0, 0, 1289, 0, 1289, 0, 1289,
	0, 0, 0, 0, 1061, 0, 0, 0, 0, 3624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3640, 0, 0, 1810,
	0, 0, 0, 262, 262, 262, 262, 1289, 0, 0,
	1289, 0, 262, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 3213, 3214, 3215, 0, 1451, 0,
	0, 3212, 3210, 3211, 3203, 3204, 3205, 3206, 3208, 3209,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 1786, 0, 0, 262, 2639, 2639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 4373, 0,
	0, 0, 0, 0, 0, 1303, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1451, 0, 0,
	0, 0, 1303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1757, 1758, 0, 0, 0, 0,
	0, 0, 0, 1451, 0, 0, 0, 0, 3732, 0,
	1812, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	0, 0, 0, 0, 1760, 2639, 2639, 2639, 2639, 2639,
	2639, 2639, 2639, 2639, 2639, 2639, 2639, 2639, 2639, 2639,
	2639, 2639, 2639, 2639, 2639, 0, 2639, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	1492, 0, 2019, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 1972, 0, 0, 0, 1757,
	1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 74,
	0, 0, 3601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1788, 0, 0, 78, 0, 0, 1451, 1760,
	0, 0, 0, 1782, 1783, 1784, 1785, 0, 1807, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 87, 0, 1972, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 262, 1776, 0, 0, 0, 0, 0, 0,
	1787, 1789, 0, 0, 0, 0, 0, 0, 262, 0,
	1451, 0, 0, 678, 0, 871, 0, 0, 678, 0,
	0, 678, 0, 0, 678, 678, 1774, 1775, 0, 107,
	678, 0, 0, 0, 93, 104, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 73, 0, 0, 1782, 1783,
	1784, 1785, 0, 0, 1492, 0, 0, 0, 1765, 0,
	0, 0, 74, 0, 0, 0, 262, 0, 0, 0,
	262, 262, 94, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 1808, 2808,
	2808, 262, 0, 3349, 1972, 1787, 1789, 0, 0, 2808,
	0, 1810, 3360, 0, 0, 0, 0, 0, 87, 0,
	2808, 3360, 0, 2808, 3360, 0, 0, 3360, 0, 0,
	0, 1774, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 262, 3349, 0, 262, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 871, 0,
	0, 0, 0, 1786, 1780, 0, 3349, 0, 262, 0,
	3420, 3420, 107, 0, 1289, 0, 0, 93, 104, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 0,
	2808, 0, 2808, 0, 3445, 2808, 3349, 2732, 0, 2808,
	3349, 0, 0, 0, 0, 4003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 4016, 0, 0, 94, 1810, 0, 0, 0,
	0, 0, 1812, 0, 262, 3472, 0, 0, 3474, 2808,
	0, 0, 262, 0, 0, 0, 262, 0, 0, 1299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	100, 0, 103, 0, 262, 0, 0, 0, 0, 2972,
	0, 0, 1289, 0, 262, 0, 73, 2808, 1786, 678,
	0, 0, 0, 0, 0, 0, 2808, 230, 0, 0,
	0, 0, 0, 74, 0, 872, 0, 0, 0, 1781,
	148, 0, 0, 0, 0, 0, 0, 262, 2972, 78,
	0, 2972, 0, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 3574, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	3580, 151, 0, 1289, 262, 0, 262, 0, 0, 0,
	97, 0, 1289, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 871,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 49, 262, 107, 0, 0, 225, 0, 93, 104,
	1365, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 100, 0, 103, 0, 0, 186, 1797,
	0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773,
	4196, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	230, 0, 0, 0, 0, 0, 0, 0, 872, 0,
	3645, 0, 0, 148, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4196, 0, 1451, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 2403, 0, 1794, 1788, 0, 0,
	0, 0, 0, 0, 1760, 0, 1451, 0, 0, 0,
	0, 0, 0, 1807, 151, 1911, 0, 0, 0, 0,
	0, 1451, 0, 0, 0, 0, 0, 0, 0, 187,
	1813, 0, 0, 0, 0, 0, 0, 231, 0, 1759,
	0, 0, 0, 0, 1451, 0, 0, 262, 262, 1779,
	224, 0, 0, 0, 2403, 0, 2639, 0, 1776, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 678,
	678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 1068, 0, 0, 1757, 1758, 0, 0, 0,
	0, 1492, 1492, 0, 0, 0, 1068, 0, 0, 0,
	0, 97, 0, 0, 0, 1492, 1492, 1492, 1788, 0,
	2639, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 0, 0, 0,
	0, 1813, 0, 1765, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 183, 100, 0, 103, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3201, 3202, 0, 3219, 3220, 3221, 0, 0, 0, 0,
	1798, 230, 762, 1808, 0, 0, 1451, 0, 0, 872,
	1787, 1789, 3612, 0, 148, 0, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 0, 0, 1804, 0, 1805,
	0, 0, 0, 3420, 0, 0, 1774, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 232,
	0, 0, 0, 0, 1796, 0, 0, 1451, 0, 0,
	0, 0, 0, 0, 0, 3216, 3349, 0, 262, 1780,
	0, 0, 0, 0, 1765, 151, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	187, 0, 0, 0, 0, 0, 0, 2639, 231, 262,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 262,
	0, 224, 1806, 0, 0, 73, 0, 0, 0, 0,
	225, 1787, 1789, 0, 0, 0, 0, 0, 2808, 262,
	1795, 0, 74, 0, 0, 0, 0, 0, 3001, 3001,
	0, 1810, 186, 0, 877, 877, 2808, 0, 78, 0,
	2972, 2972, 0, 0, 877, 2808, 0, 0, 0, 3207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 0, 1451, 1786, 0, 1451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 3223, 0, 0, 0, 0, 871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	49, 1799, 107, 1757, 1758, 0, 0, 93, 104, 0,
	3968, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3217, 1788, 0, 0, 0,
	0, 1451, 1812, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 94, 0, 0, 1759, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 1779, 1492,
	0, 262, 0, 0, 0, 1781, 0, 1776, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 2808, 2808, 3976,
	3420, 2808, 0, 3975, 0, 0, 0, 0, 4048, 0,
	4048, 1492, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 2808, 0, 3360, 0, 0, 0, 1492, 1492, 262,
	3349, 0, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	3218, 0, 1765, 3349, 0, 262, 3349, 0, 262, 1793,
	1451, 0, 1757, 1758, 0, 1793, 0, 0, 1801, 1802,
	1803, 1793, 0, 2808, 0, 2808, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	97, 0, 1760, 0, 0, 0, 0, 0, 0, 1787,
	1789, 1807, 0, 0, 2808, 0, 0, 0, 0, 4124,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 1813, 0,
	262, 0, 0, 0, 0, 1774, 1775, 1759, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 183, 100, 0, 103, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 4048,
	1793, 0, 1492, 0, 0, 1793, 0, 0, 0, 0,
	230, 0, 0, 0, 1793, 0, 0, 0, 872, 1793,
	0, 0, 0, 148, 0, 3213, 3214, 3215, 0, 0,
	0, 0, 3212, 3210, 3211, 3203, 3204, 3205, 3206, 3208,
	3209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1314, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 0, 0, 0,
	1810, 1765, 0, 1053, 0, 0, 0, 1053, 0, 0,
	0, 0, 0, 1793, 151, 0, 0, 0, 0, 1793,
	0, 3201, 3202, 0, 3219, 3220, 3221, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 231, 1798, 0,
	0, 1808, 2808, 3611, 3360, 0, 0, 4234, 1787, 1789,
	224, 0, 1786, 0, 0, 262, 1494, 0, 1500, 225,
	1506, 0, 4254, 0, 4254, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1774, 1775, 0, 0, 0, 0,
	0, 1589, 0, 0, 3201, 3202, 762, 3219, 3220, 3221,
	0, 0, 1796, 0, 0, 0, 3216, 1289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 1451,
	0, 0, 3349, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1595, 0, 1600,
	0, 1812, 0, 1451, 4234, 0, 0, 0, 0, 1609,
	0, 1614, 2808, 0, 0, 0, 0, 0, 0, 1793,
	1793, 1793, 1793, 1793, 1793, 1793, 1793, 0, 0, 3216,
	4322, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 1492, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 1793, 0, 4048, 4048, 0, 0, 0, 0,
	3207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 262, 0, 0, 1678, 0, 0, 1684,
	0, 0, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 3645, 2643, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 3420, 4387, 0, 1793, 0, 0, 0,
	0, 4234, 1781, 3207, 3223, 1451, 0, 1451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4048, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1799,
	4048, 0, 0, 0, 1451, 0, 0, 0, 0, 0,
	0, 0, 0, 3224, 0, 0, 3217, 0, 0, 0,
	0, 262, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1812, 0, 0, 0, 0, 0, 0, 3223, 0, 0,
	0, 4124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 4048, 0, 262,
	4048, 1847, 1451, 0, 0, 0, 0, 0, 0, 0,
	3360, 0, 0, 0, 0, 0, 1451, 0, 0, 3217,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 1492, 0,
	0, 0, 1797, 0, 0, 0, 0, 0, 0, 0,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 0, 0, 0,
	4489, 0, 0, 0, 0, 0, 0, 0, 0, 1451,
	0, 0, 0, 4254, 0, 0, 262, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3218, 0, 0, 0, 2808, 1905, 1905, 1905, 2614,
	2615, 2616, 2617, 2610, 2611, 2612, 2613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 1138, 0,
	0, 0, 1451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3645, 0, 0, 0, 0, 0, 0,
	0, 0, 1451, 0, 3218, 0, 0, 0, 0, 0,
	1492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2590, 2591, 2592, 2593, 0, 0, 262, 0, 0,
	0, 0, 0, 1451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2602, 2603, 2604, 2605, 2598, 2599,
	2600, 2601, 2606, 2607, 2608, 2609, 1451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3213, 3214, 3215, 4234,
	0, 0, 0, 3212, 3210, 3211, 3203, 3204, 3205, 3206,
	3208, 3209, 0, 1053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1068, 0, 0,
	0, 0, 0, 2808, 0, 0, 0, 0, 0, 0,
	4048, 0, 4048, 0, 0, 1492, 1451, 0, 2586, 2587,
	2588, 2589, 2594, 2595, 2596, 2597, 0, 0, 0, 3213,
	3214, 3215, 0, 0, 0, 0, 3212, 3210, 3211, 3203,
	3204, 3205, 3206, 3208, 3209, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 3001, 0, 0, 0, 0,
	0, 0, 0, 1793, 2808, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3001,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 1793, 1793, 1793, 1793, 1793, 0, 724, 0, 0,
	0, 1793, 0, 1793, 1793, 1793, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 2643, 2643, 707, 0, 0,
	0, 0, 708, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 709, 1068, 1068, 0, 0, 0, 0, 0, 0,
	0, 0, 710, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 1793, 730, 0, 1793, 0, 0,
	1793, 0, 0, 0, 1793, 1793, 1793, 1793, 1793, 1793,
	1793, 0, 0, 0, 0, 712, 0, 0, 0, 0,
	0, 0, 0, 2323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1068, 0, 0, 0, 0, 0, 0, 0,
	714, 0, 0, 715, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 3222, 0, 2643, 2643, 2643, 2643, 739,
	0, 0, 1793, 0, 1793, 0, 0, 0, 0, 1793,
	0, 2378, 0, 2382, 0, 0, 0, 0, 0, 0,
	2396, 0, 0, 0, 729, 0, 0, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 0, 2446, 0, 2448, 2449, 2450, 2451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 726, 0, 0, 0, 0, 0, 0,
	0, 0, 2475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 2526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2556, 2559, 2562, 2565, 0, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 736, 0, 717, 0, 0, 0, 2635, 0, 2647,
	2649, 2654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 737, 0, 718, 0, 0, 0, 0, 0, 1757,
	1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 1788, 0, 0, 0, 0, 0, 0, 1760,
	738, 0, 1229, 0, 0, 0, 0, 719, 1807, 0,
	0, 0, 734, 735, 732, 0, 0, 0, 0, 0,
	727, 0, 0, 720, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 1229, 0, 0, 0,
	1229, 0, 0, 1776, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 721, 0, 728, 1793, 1793,
	0, 1793, 0, 0, 0, 0, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	723, 0, 0, 0, 0, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 0, 0, 1229, 0, 0, 0, 0,
	725, 0, 0, 0, 0, 0, 0, 0, 1782, 1783,
	1784, 1785, 0, 0, 0, 1229, 0, 0, 1765, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 0, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 1808, 0,
	1794, 1788, 0, 0, 0, 1787, 1789, 0, 1760, 0,
	0, 0, 0, 0, 1793, 0, 0, 1807, 0, 0,
	0, 0, 1804, 0, 1805, 0, 0, 0, 0, 0,
	1229, 1774, 1775, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	2933, 2934, 1776, 2936, 1780, 1793, 1793, 0, 2643, 2643,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3222, 3222, 0, 0, 1793, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2643, 2643,
	2643, 2643, 2643, 2643, 2643, 2643, 2643, 2643, 2643, 2643,
	2643, 2643, 2643, 2643, 2643, 2643, 2643, 2643, 0, 2643,
	3222, 3222, 3222, 3222, 1798, 0, 0, 1808, 1786, 0,
	0, 3059, 0, 0, 1787, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	0, 1804, 0, 1805, 0, 1793, 0, 0, 0, 0,
	1774, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 1815, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 1806, 0, 0, 0,
	0, 0, 1229, 0, 1229, 0, 0, 3110, 3111, 0,
	78, 0, 0, 3117, 1795, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 3131, 3132, 1793, 0, 0, 1985, 2526, 1797,
	0, 1229, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773,
	87, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 0, 3176, 0, 0, 0, 3177, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 3141, 0, 0, 0, 0, 0, 0,
	871, 0, 0, 0, 0, 0, 0, 0, 1781, 3155,
	0, 0, 49, 0, 107, 0, 0, 1229, 0, 93,
	104, 0, 0, 0, 0, 0, 3167, 0, 1229, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2654, 2654, 2654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 1905, 0, 1771, 1772, 1778, 1800, 1777, 1773, 3260,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 3133, 0, 1793, 1793, 0, 0, 1793, 3222, 3222,
	1793, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 1793, 1229, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 1793, 1793,
	1793, 1793, 97, 0, 0, 0, 0, 1793, 0, 1793,
	0, 0, 3222, 3222, 3222, 3222, 3222, 3222, 3222, 3222,
	3222, 3222, 3222, 3222, 3222, 3222, 3222, 3222, 3222, 3222,
	3222, 3222, 1053, 0, 0, 3222, 0, 0, 1793, 1793,
	0, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	1793, 0, 0, 0, 183, 100, 0, 103, 0, 1793,
	0, 0, 0, 0, 0, 0, 1229, 0, 1229, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 3379,
	0, 0, 230, 0, 0, 0, 1229, 1229, 0, 0,
	872, 0, 0, 0, 0, 148, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 1229,
	0, 1229, 1229, 1229, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1587, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1985, 1985, 1229, 0,
	0, 0, 0, 1757, 1758, 1793, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 1788, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 1793, 0, 0, 0, 1793, 1793, 0, 1813,
	1793, 1793, 0, 0, 0, 1793, 0, 0, 1759, 1793,
	0, 0, 0, 0, 1793, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 2643,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2396, 0,
	0, 0, 0, 0, 3598, 3599, 0, 0, 3602, 0,
	0, 0, 3605, 0, 0, 0, 0, 0, 0, 0,
	0, 3609, 0, 2643, 0, 0, 0, 0, 0, 0,
	3616, 0, 0, 1229, 0, 3260, 0, 0, 0, 0,
	1229, 0, 1782, 1783, 1784, 1785, 0, 0, 0, 1229,
	3629, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 0,
	3652, 3653, 0, 3654, 3655, 3656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 3662, 1808, 0, 0, 3664, 0, 0, 0, 1787,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 1805, 0,
	0, 0, 0, 0, 0, 1774, 1775, 0, 3693, 3694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 3705, 0, 0, 0,
	0, 1757, 1758, 0, 0, 0, 0, 0, 1780, 0,
	0, 3714, 0, 0, 0, 0, 0, 0, 0, 1229,
	1229, 0, 0, 0, 1788, 0, 1793, 1793, 1793, 0,
	0, 1760, 0, 0, 0, 0, 0, 1793, 1793, 3222,
	2643, 0, 0, 0, 0, 0, 1793, 0, 0, 1793,
	0, 1806, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 1229, 0, 0, 0, 0, 1759, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 1779, 3222, 0, 0,
	1810, 0, 0, 0, 0, 1776, 0, 3760, 0, 0,
	1793, 0, 0, 0, 0, 1985, 0, 1793, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 3771, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 1229, 0, 0, 0, 0, 0, 3600,
	0, 3799, 0, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 1757, 1758, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 3222, 0,
	0, 1812, 1760, 0, 0, 0, 0, 1787, 1789, 0,
	0, 1229, 0, 0, 0, 0, 0, 1793, 0, 0,
	1793, 0, 0, 1229, 0, 1229, 0, 0, 1813, 0,
	0, 0, 0, 1774, 1775, 0, 0, 1759, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 1905, 0, 0, 0, 0, 1776, 0, 0, 0,
	3900, 0, 0, 0, 0, 0, 1780, 0, 1793, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 2522, 0,
	0, 0, 2523, 0, 0, 0, 0, 0, 0, 0,
	3116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 1783, 1784, 1785, 0, 3946, 3947, 1810, 0,
	0, 1765, 3951, 3952, 0, 0, 0, 3955, 3956, 0,
	0, 0, 0, 0, 0, 3960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3969, 1793, 0, 0, 0, 0, 1787, 1789,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 1774, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	1794, 1788, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 1793,
	0, 0, 1776, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 263, 263, 0, 0,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 1229, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 1798, 0, 0, 1808, 0, 1229,
	0, 0, 0, 0, 1787, 1789, 0, 0, 0, 0,
	0, 1229, 0, 0, 1229, 0, 0, 0, 0, 821,
	0, 1804, 0, 1805, 4191, 4192, 4193, 0, 0, 0,
	1774, 1775, 0, 1985, 0, 0, 0, 1229, 0, 823,
	0, 0, 0, 0, 824, 0, 0, 2396, 1796, 0,
	4202, 4203, 1229, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 4211, 4214,
	0, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 825, 0, 842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 1985, 0, 1806, 0, 0, 0,
	826, 0, 0, 0, 0, 827, 0, 0, 0, 0,
	0, 0, 0, 4255, 1795, 0, 0, 0, 0, 0,
	0, 4262, 0, 0, 0, 1810, 0, 851, 1229, 0,
	0, 0, 0, 828, 4269, 0, 0, 1053, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 849, 0, 4277,
	1229, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	822, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	1229, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 829, 0, 0, 830, 0, 0, 1781, 0,
	0, 0, 0, 0, 0, 0, 853, 1229, 0, 0,
	0, 739, 0, 0, 1229, 0, 1229, 0, 0, 0,
	1229, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 852, 0, 0, 0, 0,
	0, 0, 1229, 1229, 0, 847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4392, 0, 0,
	4395, 0, 0, 0, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 0, 0, 0, 831, 1229, 0, 3974, 1229, 0,
	0, 0, 0, 0, 0, 833, 0, 0, 0, 0,
	0, 0, 1053, 1053, 0, 0, 0, 0, 0, 0,
	0, 0, 4443, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 1788, 0, 0, 0,
	0, 0, 0, 1760, 0, 1985, 0, 0, 0, 0,
	0, 843, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 1229, 0, 2396, 0, 0, 1813,
	0, 0, 0, 0, 820, 4214, 844, 0, 1759, 0,
	0, 1229, 0, 0, 0, 835, 0, 0, 1779, 0,
	0, 1985, 1985, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	841, 0, 1053, 0, 0, 0, 0, 0, 0, 0,
	1985, 1985, 0, 0, 0, 0, 0, 836, 0, 0,
	0, 837, 856, 0, 855, 0, 0, 0, 838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 839, 1985, 0, 0, 0, 848, 0, 0,
	0, 0, 0, 857, 0, 854, 0, 4558, 4558, 4558,
	0, 740, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	1229, 1229, 1765, 0, 0, 263, 0, 263, 263, 0,
	0, 263, 0, 1312, 0, 0, 0, 4579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 1798,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 1787,
	1789, 0, 0, 0, 0, 0, 263, 1312, 263, 263,
	0, 1312, 263, 263, 0, 0, 1804, 0, 1805, 1312,
	0, 4558, 0, 0, 0, 1774, 1775, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	1312, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1312, 0, 263, 263,
	0, 0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 0, 0, 0, 1312, 0, 1218, 0,
	0, 1806, 0, 1312, 263, 263, 1794, 1788, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 1312, 0, 1795,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 4558, 4704, 257, 257, 674, 1229, 0, 1759,
	1229, 4708, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 1985, 1776, 0,
	0, 1312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 263, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 1229, 1229, 1229, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 1782, 1783, 1784, 1785, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 1229, 0, 0, 0,
	0, 1812, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 0,
	1798, 0, 0, 1808, 0, 0, 0, 1985, 0, 0,
	1787, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 0, 1805,
	0, 0, 0, 0, 0, 0, 1774, 1775, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 1796, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 0, 1780,
	0, 0, 3614, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 0,
	0, 0, 1806, 0, 1229, 0, 0, 0, 1229, 0,
	1229, 0, 0, 0, 0, 0, 0, 1229, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 1229, 1229,
	0, 1810, 0, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1312, 1229, 0, 1229, 263, 263, 263, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 1312, 1786, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 1229, 0, 0,
	1229, 0, 0, 0, 1781, 0, 263, 0, 0, 1229,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1757, 1758, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 1229, 0, 0, 0, 0, 0, 1788, 1312, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 1312,
	1229, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 1229, 0, 0,
	1813, 0, 0, 1312, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 1229, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 1229, 1229, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 1102, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 1229, 0, 0, 0, 0,
	0, 0, 3109, 3179, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 261, 261, 0, 1985, 0, 0, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 1229, 0, 1229, 0,
	0, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 1312, 1312, 263, 0, 0, 0, 1229,
	0, 0, 0, 1312, 0, 0, 0, 803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 1789, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 1775, 263, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 263, 1229,
	0, 0, 0, 0, 263, 0, 1229, 0, 0, 0,
	0, 1229, 1229, 0, 0, 0, 0, 0, 0, 1780,
	263, 0, 263, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 1312,
	0, 1312, 0, 0, 1275, 0, 1275, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 1312, 1312, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 263,
	0, 0, 263, 0, 0, 0, 0, 1229, 1229, 1225,
	1312, 0, 1312, 1312, 1312, 0, 0, 0, 0, 0,
	0, 1810, 0, 263, 0, 1362, 0, 0, 0, 0,
	0, 1468, 0, 0, 0, 263, 263, 0, 263, 0,
	263, 0, 263, 0, 263, 1985, 0, 0, 0, 0,
	0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 1794, 1788, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 263, 0, 0, 0,
	1229, 0, 1807, 0, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 1593, 1594, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 1229, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	0, 1705, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 1787,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 1805, 0,
	0, 0, 0, 0, 0, 1774, 1775, 0, 0, 0,
	0, 1312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 1312, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 263, 0, 0, 0, 263, 0, 263, 0, 0,
	0, 0, 0, 0, 263, 263, 0, 0, 0, 0,
	1312, 1312, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 1229, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1943, 0,
	0, 0, 1312, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 1468, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 261, 263, 261, 261, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 1812, 1468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 1312, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 261, 261, 0, 1312, 261,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 263,
	0, 1312, 0, 1797, 0, 0, 263, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 261, 261, 0, 4490, 0,
	0, 0, 1312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 0, 1312, 0, 0, 0,
	0, 261, 261, 0, 0, 0, 0, 263, 0, 0,
	0, 1312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 263, 263,
	263, 0, 0, 0, 0, 0, 263, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 1091, 109, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	263, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 2211, 0, 0,
	0, 2218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2243,
	0, 2243, 0, 0, 0, 0, 0, 2250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2218, 0,
	0, 2275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2308, 0, 2310, 0, 2312,
	0, 2314, 0, 2315, 0, 0, 0, 0, 0, 0,
	0, 0, 1028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 2340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 1788, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 1212,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	1927, 0, 1225, 0, 0, 0, 261, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 261, 1927, 261, 0, 0, 0, 0, 1779, 803,
	0, 0, 0, 0, 0, 0, 803, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 0, 0, 0, 0,
	0, 0, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 1312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 1312, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 263, 263, 0, 0, 0, 1798,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 1787,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 1804, 0, 1805, 0,
	1312, 0, 0, 0, 0, 1774, 1775, 0, 0, 0,
	0, 0, 0, 2711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 263, 1780, 1312,
	263, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 263, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	1312, 1806, 803, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 0, 0, 0, 1312, 0, 2757, 0, 1795,
	1275, 0, 0, 0, 1275, 0, 1275, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 1312, 0,
	0, 0, 0, 2231, 263, 1312, 0, 1312, 0, 0,
	0, 1312, 0, 0, 0, 261, 0, 0, 263, 261,
	0, 0, 0, 0, 0, 261, 263, 0, 0, 1312,
	263, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 1786, 0, 0, 0, 0, 261, 263, 261,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 1312, 0, 0, 0, 0, 0,
	1799, 263, 0, 0, 0, 0, 261, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 1312, 0, 0, 0,
	0, 0, 1468, 0, 0, 0, 0, 0, 0, 0,
	261, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 803, 261, 0, 261, 0, 261, 0, 261,
	0, 261, 0, 0, 0, 0, 1312, 0, 263, 1312,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2218, 0, 0, 0,
	0, 0, 0, 0, 0, 2231, 0, 0, 0, 0,
	0, 0, 109, 261, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 3178, 0, 0, 1312, 3032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 0, 0, 3043, 0, 3046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	109, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3071, 1468, 3073, 1468,
	0, 0, 0, 0, 0, 3079, 0, 0, 0, 0,
	0, 0, 0, 1048, 109, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 109, 0, 0, 1107, 0, 0, 0, 0, 1275,
	0, 109, 0, 109, 0, 0, 0, 3107, 0, 0,
	795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 0, 795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 1225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1028, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 261, 0,
	0, 0, 261, 0, 261, 0, 0, 0, 1827, 0,
	263, 261, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 1833, 0, 1312, 0,
	1839, 1312, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 263, 0, 0, 0, 261, 0, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 1312, 1312, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 263, 0, 1312, 0, 0, 0, 0, 0, 0,
	1925, 0, 1928, 0, 109, 0, 803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 803, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 1275,
	0, 0, 0, 1468, 1468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 3398, 3400, 0, 0, 2231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1312,
	0, 1312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1312,
	1312, 0, 0, 0, 261, 261, 261, 261, 1312, 0,
	0, 0, 0, 261, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 263, 0, 261, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1312, 0, 1312, 263,
	0, 1312, 263, 0, 0, 3485, 0, 0, 0, 3489,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 1312, 1794, 1788, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 1312, 0, 0, 263, 0, 0, 0, 0, 0,
	3542, 0, 0, 1312, 263, 0, 0, 1813, 1312, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 1312, 1312, 1312, 0, 0, 0, 1310,
	0, 0, 0, 0, 0, 0, 1312, 3583, 0, 1468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1048, 0, 1048, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1312, 0, 0, 0,
	0, 0, 0, 1368, 0, 3596, 0, 1368, 0, 0,
	0, 0, 0, 0, 0, 1310, 0, 0, 1311, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 1312, 0, 1312,
	0, 0, 0, 0, 0, 0, 1310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1312, 0, 1369, 0, 0, 0, 1369, 1798, 0, 263,
	1808, 0, 1310, 0, 1311, 0, 0, 1787, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 1225, 1804, 0, 1805, 0, 0, 1310,
	0, 0, 0, 1774, 1775, 1311, 0, 0, 0, 1225,
	0, 0, 0, 1310, 0, 0, 0, 0, 0, 0,
	1312, 1796, 0, 0, 0, 0, 0, 1312, 263, 0,
	0, 1311, 1312, 1312, 0, 0, 1780, 0, 0, 1927,
	0, 0, 0, 0, 0, 0, 1028, 0, 0, 1028,
	1028, 1311, 0, 0, 0, 0, 0, 0, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 1310, 0, 0,
	0, 0, 1311, 0, 0, 0, 0, 1312, 0, 1806,
	1312, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 261, 261, 0, 0, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 0, 2464, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 263, 263, 0, 0,
	0, 0, 261, 0, 0, 1048, 1311, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 261, 261, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 1927, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 1212, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1928, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 263, 0, 0, 0, 0, 1312, 0,
	0, 2231, 109, 0, 0, 803, 0, 0, 1312, 1312,
	0, 0, 2231, 261, 0, 0, 0, 261, 0, 0,
	0, 0, 3864, 0, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 2231, 0, 0,
	0, 0, 3882, 0, 0, 1225, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 4486, 0, 261, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 795, 0,
	3931, 0, 0, 0, 0, 795, 0, 0, 1310, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 1311, 724, 0,
	0, 0, 0, 0, 1310, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 1310, 0, 0, 707, 0,
	0, 0, 0, 708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 109, 0, 109, 0, 0, 0, 0,
	0, 0, 709, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 710, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 711, 0, 0, 0, 1369, 109,
	0, 0, 109, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1225, 1225,
	0, 0, 4065, 0, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 0, 0, 0, 0, 0, 2231, 1310,
	1310, 0, 0, 0, 0, 0, 0, 0, 109, 1368,
	0, 714, 0, 0, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 0, 1311, 1311,
	0, 0, 0, 2231, 0, 0, 0, 0, 1369, 0,
	0, 0, 0, 4146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1310, 0, 1310, 0, 1310, 0, 0,
	0, 0, 0, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 1310, 1310, 0, 0, 0, 0, 0,
	0, 0, 2464, 0, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1310, 0, 1310, 1310,
	1310, 0, 0, 1833, 0, 0, 0, 261, 0, 0,
	0, 0, 1311, 0, 1311, 0, 1311, 0, 0, 0,
	0, 795, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 1311, 1311, 717, 0, 0, 0, 0, 0,
	261, 0, 0, 1311, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 1311, 0, 1311, 1311, 1311,
	261, 0, 737, 0, 718, 261, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 4243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 738, 0, 0, 0, 0, 0, 0, 719, 0,
	0, 0, 0, 734, 735, 732, 0, 0, 0, 0,
	0, 727, 0, 0, 720, 1368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2231, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 0, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 0,
	0, 0, 0, 0, 1369, 0, 0, 0, 0, 0,
	0, 723, 0, 0, 0, 0, 731, 0, 0, 0,
	0, 0, 0, 1212, 0, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 0, 0, 0, 0, 1368, 1212,
	0, 725, 0, 0, 0, 4363, 1468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1225, 0, 0, 1369, 0, 0,
	0, 0, 1225, 0, 0, 0, 0, 1368, 0, 0,
	0, 0, 0, 0, 0, 1927, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1927,
	0, 1927, 0, 0, 0, 0, 1369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 4448, 0, 109, 109, 0, 109, 109, 109,
	0, 0, 1369, 0, 0, 0, 261, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 109, 0, 109, 109, 109, 1310, 1310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	1758, 261, 1790, 1791, 1792, 1801, 1802, 1803, 0, 4499,
	0, 261, 0, 0, 0, 0, 0, 0, 1368, 0,
	0, 1794, 1788, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 1311, 1311, 0, 1807, 0,
	1927, 0, 0, 0, 0, 0, 0, 0, 0, 4535,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 1212, 0, 1369, 1048, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	1368, 0, 109, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4595, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 795, 0, 1310, 0, 1369,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 1783,
	1784, 1785, 0, 1311, 0, 0, 261, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1310, 0, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 1311, 1310, 1808, 0,
	0, 0, 0, 0, 0, 1787, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 1804, 0, 1805, 0, 0, 1311, 0, 0,
	0, 1774, 1775, 0, 0, 0, 0, 0, 0, 1311,
	0, 1311, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 1311, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 1927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 261, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1212, 1212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1927, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1927, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 1927, 0,
	261, 1927, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 0, 0, 0, 0, 261, 3175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1212, 0, 0, 0, 0, 0, 1368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1368, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 1369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1368, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1310,
	1310, 0, 0, 0, 0, 1369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1369, 0, 0, 1310, 0, 0, 0,
	0, 1927, 0, 1927, 0, 0, 0, 0, 1311, 1311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1311, 0, 1310, 0, 1310,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 1212, 0, 1368, 0, 0, 0,
	0, 0, 1212, 0, 0, 0, 0, 1310, 0, 0,
	0, 1310, 0, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1310, 0, 1311, 0, 1311, 0,
	0, 1310, 0, 1310, 0, 0, 0, 1368, 0, 0,
	0, 0, 0, 0, 795, 1369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1310, 1311, 0, 0, 0,
	1311, 0, 0, 0, 0, 0, 0, 1310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1311, 0, 0, 0, 0, 0, 0,
	1311, 0, 1311, 0, 0, 0, 1369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1310,
	1310, 0, 0, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1311, 0, 0, 0,
	0, 0, 1310, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1311, 1311,
	0, 0, 1368, 109, 0, 1368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	1758, 1311, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 1788, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 1369, 0, 0, 1369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 1368, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 1368, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 1783,
	1784, 1785, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 1808, 0,
	1368, 0, 0, 0, 0, 1787, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 0, 1805, 0, 0, 0, 0, 0,
	0, 1774, 1775, 0, 0, 0, 0, 2464, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1369,
	0, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1310, 0, 0, 1310, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	0, 0, 0, 0, 0, 1310, 0, 0, 0, 0,
	0, 0, 0, 1311, 0, 0, 1311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	1310, 1310, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 1310, 1311, 0, 0, 0, 0, 1368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	1311, 1311, 0, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 1311, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 0, 0, 0, 0, 0, 1369, 1797,
	0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 1369, 0, 0, 0, 0, 0, 3174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 1788, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 1368, 0, 1368, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1310, 1310, 1813, 0, 0,
	0, 0, 0, 0, 1368, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 1369, 0, 1369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 0, 1311, 1311, 0, 0, 0, 0,
	0, 0, 1368, 1369, 1310, 0, 0, 1310, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 1310, 1310, 0,
	1765, 1311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1369, 0, 1311, 0, 0, 1311, 1310, 0, 0,
	0, 0, 0, 0, 0, 1369, 0, 0, 0, 1368,
	0, 0, 0, 0, 1310, 0, 0, 1798, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 1787, 1789, 0,
	0, 0, 0, 0, 0, 0, 1311, 1311, 0, 0,
	0, 0, 0, 0, 1804, 0, 1805, 0, 0, 1310,
	1310, 1310, 0, 1774, 1775, 0, 1311, 0, 0, 0,
	0, 0, 1368, 0, 0, 0, 0, 0, 1369, 0,
	0, 1796, 0, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 1368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1311, 1311,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1369, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 1368, 0, 1310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 1369, 0, 0, 0, 0, 1368, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1369, 0, 1311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 1369, 1368, 0, 0, 0,
	0, 0, 0, 1310, 0, 0, 0, 0, 1310, 1310,
	0, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 0, 1369, 1310, 0, 0, 0,
	0, 0, 1311, 0, 0, 0, 0, 1311, 1311, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1369, 0, 0, 1311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	3173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1310, 1310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1366, 0, 0, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1311, 1311, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 1371, 278, 279, 1372, 1373, 1374,
	1311, 1375, 620, 1376, 1377, 1378, 1379, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 1380, 625, 290, 291, 292, 293, 294,
	295, 1381, 1382, 0, 296, 626, 627, 628, 1383, 297,
	298, 629, 1384, 1313, 1385, 299, 300, 301, 302, 303,
	304, 305, 0, 1386, 307, 308, 309, 306, 310, 1387,
	311, 0, 312, 313, 314, 315, 316, 317, 1388, 318,
	319, 320, 1170, 321, 322, 323, 1389, 1390, 1392, 1391,
	1393, 1394, 1395, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 1396, 333, 330, 331, 1397, 334, 332, 335,
	1398, 336, 337, 338, 1399, 1400, 339, 340, 341, 1401,
	342, 343, 1402, 344, 345, 346, 1403, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 1404, 268, 1405, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 1406, 365,
	366, 1407, 1408, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1409, 378, 638,
	1410, 639, 379, 1411, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1173, 385, 386, 1412, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	1413, 1172, 395, 643, 644, 1414, 645, 1415, 397, 398,
	1174, 646, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1416, 409, 411,
	410, 1417, 412, 647, 1177, 413, 414, 1178, 1418, 415,
	0, 0, 0, 416, 417, 420, 1419, 1420, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1421, 270, 1181, 460, 461, 1422, 648,
	462, 649, 464, 465, 1423, 0, 466, 0, 1424, 1425,
	468, 469, 470, 1426, 1427, 471, 472, 650, 1182, 473,
	1183, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 1428, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 1429,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 1430, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 1431, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	1432, 546, 547, 545, 548, 549, 550, 1433, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 1434, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 1435, 578, 579, 0, 575, 566, 1436, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 1437, 588,
	661, 662, 663, 664, 1438, 597, 1439, 589, 590, 591,
	665, 592, 666, 1440, 593, 594, 595, 596, 0, 598,
	599, 1441, 1442, 600, 601, 602, 604, 605, 603, 606,
	1443, 607, 1444, 0, 608, 609, 610, 667, 668, 669,
	1445, 612, 611, 613, 670, 1446, 614, 1447, 1448, 1449,
	1450, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1366, 0, 0, 0, 0, 0, 0, 0, 2689,
	0, 0, 0, 0, 0, 0, 0, 2690, 271, 273,
	272, 274, 275, 276, 277, 1371, 278, 279, 1372, 1373,
	1374, 0, 1375, 620, 1376, 1377, 1378, 1379, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 1380, 625, 290, 291, 292, 293,
	294, 295, 1381, 1382, 0, 296, 626, 627, 628, 1383,
	297, 298, 629, 1384, 1313, 1385, 299, 300, 301, 302,
	303, 304, 305, 0, 1386, 307, 308, 309, 306, 310,
	1387, 311, 0, 312, 313, 314, 315, 316, 317, 1388,
	318, 319, 320, 1170, 321, 322, 323, 1389, 1390, 1392,
	1391, 1393, 1394, 1395, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 1396, 333, 330, 331, 1397, 334, 332,
	335, 1398, 336, 337, 338, 1399, 1400, 339, 340, 341,
	1401, 342, 343, 1402, 344, 345, 346, 1403, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 1404, 268, 1405, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 1406,
	365, 366, 1407, 1408, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1409, 378,
	638, 1410, 639, 379, 1411, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 1412, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1413, 1172, 395, 643, 644, 1414, 645, 1415, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1416, 409,
	411, 410, 1417, 412, 647, 1177, 413, 414, 1178, 1418,
	415, 0, 0, 0, 416, 417, 420, 1419, 1420, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1421, 270, 1181, 460, 461, 1422,
	648, 462, 649, 464, 465, 1423, 0, 466, 0, 1424,
	1425, 468, 469, 470, 1426, 1427, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1428, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	1429, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 1430, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1431, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1432, 546, 547, 545, 548, 549, 550, 1433, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 1434, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 1435, 578, 579, 0, 575, 566, 1436,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 1437,
	588, 661, 662, 663, 664, 1438, 597, 1439, 589, 590,
	591, 665, 592, 666, 1440, 593, 594, 595, 596, 0,
	598, 599, 1441, 1442, 600, 601, 602, 604, 605, 603,
	606, 1443, 607, 1444, 0, 608, 609, 610, 667, 668,
	669, 1445, 612, 611, 613, 670, 1446, 614, 1447, 1448,
	1449, 1450, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1366, 0, 0, 0, 0, 3623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3625, 271, 273, 272,
	274, 275, 276, 277, 1371, 278, 279, 1372, 1373, 1374,
	0, 1375, 620, 1376, 1377, 1378, 1379, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 1380, 625, 290, 291, 292, 293, 294,
	295, 1381, 1382, 0, 296, 626, 627, 628, 1383, 297,
	298, 629, 1384, 1313, 1385, 299, 300, 301, 302, 303,
	304, 305, 0, 1386, 307, 308, 309, 306, 310, 1387,
	311, 0, 312, 313, 314, 315, 316, 317, 1388, 318,
	319, 320, 1170, 321, 322, 323, 1389, 1390, 1392, 1391,
	1393, 1394, 1395, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 1396, 333, 330, 331, 1397, 334, 332, 335,
	1398, 336, 337, 338, 1399, 1400, 339, 340, 341, 1401,
	342, 343, 1402, 344, 345, 346, 1403, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 1404, 268, 1405, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 1406, 365,
	366, 1407, 1408, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1409, 378, 638,
	1410, 639, 379, 1411, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1173, 385, 386, 1412, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	1413, 1172, 395, 643, 644, 1414, 645, 1415, 397, 398,
	1174, 646, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1416, 409, 411,
	410, 1417, 412, 647, 1177, 413, 414, 1178, 1418, 415,
	0, 0, 0, 416, 417, 420, 1419, 1420, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1421, 270, 1181, 460, 461, 1422, 648,
	462, 649, 464, 465, 1423, 0, 466, 0, 1424, 1425,
	468, 469, 470, 1426, 1427, 471, 472, 650, 1182, 473,
	1183, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 1428, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 1429,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 1430, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 1431, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	1432, 546, 547, 545, 548, 549, 550, 1433, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 1434, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 1435, 578, 579, 0, 575, 566, 1436, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 1437, 588,
	661, 662, 663, 664, 1438, 597, 1439, 589, 590, 591,
	665, 592, 666, 1440, 593, 594, 595, 596, 0, 598,
	599, 1441, 1442, 600, 601, 602, 604, 605, 603, 606,
	1443, 607, 1444, 0, 608, 609, 610, 667, 668, 669,
	1445, 612, 611, 613, 670, 1446, 614, 1447, 1448, 1449,
	1450, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 1366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4002,
	271, 273, 272, 274, 275, 276, 277, 1371, 278, 279,
	1372, 1373, 1374, 0, 1375, 620, 1376, 1377, 1378, 1379,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 1380, 625, 290, 291,
	292, 293, 294, 295, 1381, 1382, 0, 296, 626, 627,
	628, 1383, 297, 298, 629, 1384, 1313, 1385, 299, 300,
	301, 302, 303, 304, 305, 0, 1386, 307, 308, 309,
	306, 310, 1387, 311, 0, 312, 313, 314, 315, 316,
	317, 1388, 318, 319, 320, 1170, 321, 322, 323, 1389,
	1390, 1392, 1391, 1393, 1394, 1395, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 1396, 333, 330, 331, 1397,
	334, 332, 335, 1398, 336, 337, 338, 1399, 1400, 339,
	340, 341, 1401, 342, 343, 1402, 344, 345, 346, 1403,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 1404, 268, 1405, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 1406, 365, 366, 1407, 1408, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1409, 378, 638, 1410, 639, 379, 1411, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1173, 385, 386, 1412,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 1413, 1172, 395, 643, 644, 1414, 645,
	1415, 397, 398, 1174, 646, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1416, 409, 411, 410, 1417, 412, 647, 1177, 413, 414,
	1178, 1418, 415, 0, 0, 0, 416, 417, 420, 1419,
	1420, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1421, 270, 1181, 460,
	461, 1422, 648, 462, 649, 464, 465, 1423, 0, 466,
	0, 1424, 1425, 468, 469, 470, 1426, 1427, 471, 472,
	650, 1182, 473, 1183, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 1428, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 1429, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 1430, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 1431,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 1432, 546, 547, 545, 548, 549, 550,
	1433, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 1434, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 1435, 578, 579, 0, 575,
	566, 1436, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 1437, 588, 661, 662, 663, 664, 1438, 597, 1439,
	589, 590, 591, 665, 592, 666, 1440, 593, 594, 595,
	596, 0, 598, 599, 1441, 1442, 600, 601, 602, 604,
	605, 603, 606, 1443, 607, 1444, 0, 608, 609, 610,
	667, 668, 669, 1445, 612, 611, 613, 670, 1446, 614,
	1447, 1448, 1449, 1450, 615, 616, 671, 617, 618, 619,
	0, 1366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4197, 271, 273,
	272, 274, 275, 276, 277, 1371, 278, 279, 1372, 1373,
	1374, 0, 1375, 620, 1376, 1377, 1378, 1379, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 1380, 625, 290, 291, 292, 293,
	294, 295, 1381, 1382, 0, 296, 626, 627, 628, 1383,
	297, 298, 629, 1384, 1313, 1385, 299, 300, 301, 302,
	303, 304, 305, 0, 1386, 307, 308, 309, 306, 310,
	1387, 311, 0, 312, 313, 314, 315, 316, 317, 1388,
	318, 319, 320, 1170, 321, 322, 323, 1389, 1390, 1392,
	1391, 1393, 1394, 1395, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 1396, 333, 330, 331, 1397, 334, 332,
	335, 1398, 336, 337, 338, 1399, 1400, 339, 340, 341,
	1401, 342, 343, 1402, 344, 345, 346, 1403, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 1404, 268, 1405, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 1406,
	365, 366, 1407, 1408, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1409, 378,
	638, 1410, 639, 379, 1411, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 1412, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1413, 1172, 395, 643, 644, 1414, 645, 1415, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1416, 409,
	411, 410, 1417, 412, 647, 1177, 413, 414, 1178, 1418,
	415, 0, 0, 0, 416, 417, 420, 1419, 1420, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1421, 270, 1181, 460, 461, 1422,
	648, 462, 649, 464, 465, 1423, 0, 466, 0, 1424,
	1425, 468, 469, 470, 1426, 1427, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1428, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	1429, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 1430, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1431, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1432, 546, 547, 545, 548, 549, 550, 1433, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 1434, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 1435, 578, 579, 0, 575, 566, 1436,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 1437,
	588, 661, 662, 663, 664, 1438, 597, 1439, 589, 590,
	591, 665, 592, 666, 1440, 593, 594, 595, 596, 0,
	598, 599, 1441, 1442, 600, 601, 602, 604, 605, 603,
	606, 1443, 607, 1444, 0, 608, 609, 610, 667, 668,
	669, 1445, 612, 611, 613, 670, 1446, 614, 1447, 1448,
	1449, 1450, 615, 616, 671, 617, 618, 619, 0, 1366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4074, 271, 273, 272, 274,
	275, 276, 277, 1371, 278, 279, 1372, 1373, 1374, 0,
	1375, 620, 1376, 1377, 1378, 1379, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 1380, 625, 290, 291, 292, 293, 294, 295,
	1381, 1382, 0, 296, 626, 627, 628, 1383, 297, 298,
	629, 1384, 1313, 1385, 299, 300, 301, 302, 303, 304,
	305, 0, 1386, 307, 308, 309, 306, 310, 1387, 311,
	0, 312, 313, 314, 315, 316, 317, 1388, 318, 319,
	320, 1170, 321, 322, 323, 1389, 1390, 1392, 1391, 1393,
	1394, 1395, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 1396, 333, 330, 331, 1397, 334, 332, 335, 1398,
	336, 337, 338, 1399, 1400, 339, 340, 341, 1401, 342,
	343, 1402, 344, 345, 346, 1403, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 1404, 268, 1405, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 1406, 365, 366,
	1407, 1408, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1409, 378, 638, 1410,
	639, 379, 1411, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 1412, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 1413,
	1172, 395, 643, 644, 1414, 645, 1415, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1416, 409, 411, 410,
	1417, 412, 647, 1177, 413, 414, 1178, 1418, 415, 0,
	0, 0, 416, 417, 420, 1419, 1420, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1421, 270, 1181, 460, 461, 1422, 648, 462,
	649, 464, 465, 1423, 0, 466, 0, 1424, 1425, 468,
	469, 470, 1426, 1427, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 1428, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 1429, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 1430, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 1431, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 1432,
	546, 547, 545, 548, 549, 550, 1433, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 1434, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 1435, 578, 579, 0, 575, 566, 1436, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 1437, 588, 661,
	662, 663, 664, 1438, 597, 1439, 589, 590, 591, 665,
	592, 666, 1440, 593, 594, 595, 596, 0, 598, 599,
	1441, 1442, 600, 601, 602, 604, 605, 603, 606, 1443,
	607, 1444, 0, 608, 609, 610, 667, 668, 669, 1445,
	612, 611, 613, 670, 1446, 614, 1447, 1448, 1449, 1450,
	615, 616, 671, 617, 618, 619, 0, 1366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3932, 271, 273, 272, 274, 275, 276,
	277, 1371, 278, 279, 1372, 1373, 1374, 0, 1375, 620,
	1376, 1377, 1378, 1379, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	1380, 625, 290, 291, 292, 293, 294, 295, 1381, 1382,
	0, 296, 626, 627, 628, 1383, 297, 298, 629, 1384,
	1313, 1385, 299, 300, 301, 302, 303, 304, 305, 0,
	1386, 307, 308, 309, 306, 310, 1387, 311, 0, 312,
	313, 314, 315, 316, 317, 1388, 318, 319, 320, 1170,
	321, 322, 323, 1389, 1390, 1392, 1391, 1393, 1394, 1395,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 1396,
	333, 330, 331, 1397, 334, 332, 335, 1398, 336, 337,
	338, 1399, 1400, 339, 340, 341, 1401, 342, 343, 1402,
	344, 345, 346, 1403, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	1404, 268, 1405, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 1406, 365, 366, 1407, 1408,
	1171, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1409, 378, 638, 1410, 639, 379,
	1411, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1173, 385, 386, 1412, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 1413, 1172, 395,
	643, 644, 1414, 645, 1415, 397, 398, 1174, 646, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1416, 409, 411, 410, 1417, 412,
	647, 1177, 413, 414, 1178, 1418, 415, 0, 0, 0,
	416, 417, 420, 1419, 1420, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1421, 270, 1181, 460, 461, 1422, 648, 462, 649, 464,
	465, 1423, 0, 466, 0, 1424, 1425, 468, 469, 470,
	1426, 1427, 471, 472, 650, 1182, 473, 1183, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	1428, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 1429, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 1430, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 1431, 522, 523, 524, 1184, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 1432, 546, 547,
	545, 548, 549, 550, 1433, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 1434, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 1435,
	578, 579, 0, 575, 566, 1436, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 1437, 588, 661, 662, 663,
	664, 1438, 597, 1439, 589, 590, 591, 665, 592, 666,
	1440, 593, 594, 595, 596, 0, 598, 599, 1441, 1442,
	600, 601, 602, 604, 605, 603, 606, 1443, 607, 1444,
	0, 608, 609, 610, 667, 668, 669, 1445, 612, 611,
	613, 670, 1446, 614, 1447, 1448, 1449, 1450, 615, 616,
	671, 617, 618, 619, 0, 1366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3641, 271, 273, 272, 274, 275, 276, 277, 1371,
	278, 279, 1372, 1373, 1374, 0, 1375, 620, 1376, 1377,
	1378, 1379, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 1380, 625,
	290, 291, 292, 293, 294, 295, 1381, 1382, 0, 296,
	626, 627, 628, 1383, 297, 298, 629, 1384, 1313, 1385,
	299, 300, 301, 302, 303, 304, 305, 0, 1386, 307,
	308, 309, 306, 310, 1387, 311, 0, 312, 313, 314,
	315, 316, 317, 1388, 318, 319, 320, 1170, 321, 322,
	323, 1389, 1390, 1392, 1391, 1393, 1394, 1395, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 1396, 333, 330,
	331, 1397, 334, 332, 335, 1398, 336, 337, 338, 1399,
	1400, 339, 340, 341, 1401, 342, 343, 1402, 344, 345,
	346, 1403, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 1404, 268,
	1405, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 1406, 365, 366, 1407, 1408, 1171, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1409, 378, 638, 1410, 639, 379, 1411, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1173, 385,
	386, 1412, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 1413, 1172, 395, 643, 644,
	1414, 645, 1415, 397, 398, 1174, 646, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1416, 409, 411, 410, 1417, 412, 647, 1177,
	413, 414, 1178, 1418, 415, 0, 0, 0, 416, 417,
	420, 1419, 1420, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1421, 270,
	1181, 460, 461, 1422, 648, 462, 649, 464, 465, 1423,
	0, 466, 0, 1424, 1425, 468, 469, 470, 1426, 1427,
	471, 472, 650, 1182, 473, 1183, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 1428, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 1429, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	1430, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 1431, 522, 523, 524, 1184, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 1432, 546, 547, 545, 548,
	549, 550, 1433, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	1434, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 1435, 578, 579,
	0, 575, 566, 1436, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 1437, 588, 661, 662, 663, 664, 1438,
	597, 1439, 589, 590, 591, 665, 592, 666, 1440, 593,
	594, 595, 596, 0, 598, 599, 1441, 1442, 600, 601,
	602, 604, 605, 603, 606, 1443, 607, 1444, 0, 608,
	609, 610, 667, 668, 669, 1445, 612, 611, 613, 670,
	1446, 614, 1447, 1448, 1449, 1450, 615, 616, 671, 617,
	618, 619, 0, 1366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3470,
	271, 273, 272, 274, 275, 276, 277, 1371, 278, 279,
	1372, 1373, 1374, 0, 1375, 620, 1376, 1377, 1378, 1379,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 1380, 625, 290, 291,
	292, 293, 294, 295, 1381, 1382, 0, 296, 626, 627,
	628, 1383, 297, 298, 629, 1384, 1313, 1385, 299, 300,
	301, 302, 303, 304, 305, 0, 1386, 307, 308, 309,
	306, 310, 1387, 311, 0, 312, 313, 314, 315, 316,
	317, 1388, 318, 319, 320, 1170, 321, 322, 323, 1389,
	1390, 1392, 1391, 1393, 1394, 1395, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 1396, 333, 330, 331, 1397,
	334, 332, 335, 1398, 336, 337, 338, 1399, 1400, 339,
	340, 341, 1401, 342, 343, 1402, 344, 345, 346, 1403,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 1404, 268, 1405, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 1406, 365, 366, 1407, 1408, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1409, 378, 638, 1410, 639, 379, 1411, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1173, 385, 386, 1412,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 1413, 1172, 395, 643, 644, 1414, 645,
	1415, 397, 398, 1174, 646, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1416, 409, 411, 410, 1417, 412, 647, 1177, 413, 414,
	1178, 1418, 415, 0, 0, 0, 416, 417, 420, 1419,
	1420, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1421, 270, 1181, 460,
	461, 1422, 648, 462, 649, 464, 465, 1423, 0, 466,
	0, 1424, 1425, 468, 469, 470, 1426, 1427, 471, 472,
	650, 1182, 473, 1183, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 1428, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 1429, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 1430, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 1431,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 1432, 546, 547, 545, 548, 549, 550,
	1433, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 1434, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 1435, 578, 579, 0, 575,
	566, 1436, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 1437, 588, 661, 662, 663, 664, 1438, 597, 1439,
	589, 590, 591, 665, 592, 666, 1440, 593, 594, 595,
	596, 0, 598, 599, 1441, 1442, 600, 601, 602, 604,
	605, 603, 606, 1443, 607, 1444, 0, 608, 609, 610,
	667, 668, 669, 1445, 612, 611, 613, 670, 1446, 614,
	1447, 1448, 1449, 1450, 615, 616, 671, 617, 618, 619,
	0, 1366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2546, 271, 273,
	272, 274, 275, 276, 277, 1371, 278, 279, 1372, 1373,
	1374, 0, 1375, 620, 1376, 1377, 1378, 1379, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 1380, 625, 290, 291, 292, 293,
	294, 295, 1381, 1382, 0, 296, 626, 627, 628, 1383,
	297, 298, 629, 1384, 1313, 1385, 299, 300, 301, 302,
	303, 304, 305, 0, 1386, 307, 308, 309, 306, 310,
	1387, 311, 0, 312, 313, 314, 315, 316, 317, 1388,
	318, 319, 320, 1170, 321, 322, 323, 1389, 1390, 1392,
	1391, 1393, 1394, 1395, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 1396, 333, 330, 331, 1397, 334, 332,
	335, 1398, 336, 337, 338, 1399, 1400, 339, 340, 341,
	1401, 342, 343, 1402, 344, 345, 346, 1403, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 1404, 268, 1405, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 1406,
	365, 366, 1407, 1408, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1409, 378,
	638, 1410, 639, 379, 1411, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 1412, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1413, 1172, 395, 643, 644, 1414, 645, 1415, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1416, 409,
	411, 410, 1417, 412, 647, 1177, 413, 414, 1178, 1418,
	415, 0, 0, 0, 416, 417, 420, 1419, 1420, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1421, 270, 1181, 460, 461, 1422,
	648, 462, 649, 464, 465, 1423, 0, 466, 0, 1424,
	1425, 468, 469, 470, 1426, 1427, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1428, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	1429, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 1430, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1431, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1432, 546, 547, 545, 548, 549, 550, 1433, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 1434, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 1435, 578, 579, 0, 575, 566, 1436,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 1437,
	588, 661, 662, 663, 664, 1438, 597, 1439, 589, 590,
	591, 665, 592, 666, 1440, 593, 594, 595, 596, 0,
	598, 599, 1441, 1442, 600, 601, 602, 604, 605, 603,
	606, 1443, 607, 1444, 0, 608, 609, 610, 667, 668,
	669, 1445, 612, 611, 613, 670, 1446, 614, 1447, 1448,
	1449, 1450, 615, 616, 671, 617, 618, 619, 1462, 0,
	1366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2192, 0, 271, 273, 272,
	274, 275, 276, 277, 1371, 278, 279, 1372, 1373, 1374,
	0, 1375, 620, 1376, 1377, 1378, 1379, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 1380, 625, 290, 291, 292, 293, 294,
	295, 1381, 1382, 0, 296, 626, 627, 628, 1383, 297,
	298, 629, 1384, 1313, 1385, 299, 300, 301, 302, 303,
	304, 305, 0, 1386, 307, 308, 309, 306, 310, 1387,
	311, 0, 312, 313, 314, 315, 316, 317, 1388, 318,
	319, 320, 1170, 321, 322, 323, 1389, 1390, 1392, 1391,
	1393, 1394, 1395, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 1396, 333, 330, 331, 1397, 334, 332, 335,
	1398, 336, 337, 338, 1399, 1400, 339, 340, 341, 1401,
	342, 343, 1402, 344, 345, 346, 1403, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 1404, 268, 1405, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 1406, 365,
	366, 1407, 1408, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1409, 378, 638,
	1410, 639, 379, 1411, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1173, 385, 386, 1412, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	1413, 1172, 395, 643, 644, 1414, 645, 1415, 397, 398,
	1174, 646, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1416, 409, 411,
	410, 1417, 412, 647, 1177, 413, 414, 1178, 1418, 415,
	0, 0, 0, 416, 417, 420, 1419, 1420, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 1421, 270, 1181, 460, 461, 1422, 648,
	462, 649, 464, 465, 1423, 0, 466, 0, 1424, 1425,
	468, 469, 470, 1426, 1427, 471, 472, 650, 1182, 473,
	1183, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 1428, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 1429,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 1430, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 1431, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	1432, 546, 547, 545, 548, 549, 550, 1433, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 1434, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 1435, 578, 579, 0, 575, 566, 1436, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 1437, 588,
	661, 662, 663, 664, 1438, 597, 1439, 589, 590, 591,
	665, 592, 666, 1440, 593, 594, 595, 596, 0, 598,
	599, 1441, 1442, 600, 601, 602, 604, 605, 603, 606,
	1443, 607, 1444, 0, 608, 609, 610, 667, 668, 669,
	1445, 612, 611, 613, 670, 1446, 614, 1447, 1448, 1449,
	1450, 615, 616, 671, 617, 618, 619, 1363, 0, 1366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 1371, 278, 279, 1372, 1373, 1374, 0,
	1375, 620, 1376, 1377, 1378, 1379, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 1380, 625, 290, 291, 292, 293, 294, 295,
	1381, 1382, 0, 296, 626, 627, 628, 1383, 297, 298,
	629, 1384, 1313, 1385, 299, 300, 301, 302, 303, 304,
	305, 0, 1386, 307, 308, 309, 306, 310, 1387, 311,
	0, 312, 313, 314, 315, 316, 317, 1388, 318, 319,
	320, 1170, 321, 322, 323, 1389, 1390, 1392, 1391, 1393,
	1394, 1395, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 1396, 333, 330, 331, 1397, 334, 332, 335, 1398,
	336, 337, 338, 1399, 1400, 339, 340, 341, 1401, 342,
	343, 1402, 344, 345, 346, 1403, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 1404, 268, 1405, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 1406, 365, 366,
	1407, 1408, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1409, 378, 638, 1410,
	639, 379, 1411, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 1412, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 1413,
	1172, 395, 643, 644, 1414, 645, 1415, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1416, 409, 411, 410,
	1417, 412, 647, 1177, 413, 414, 1178, 1418, 415, 0,
	0, 0, 416, 417, 420, 1419, 1420, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1421, 270, 1181, 460, 461, 1422, 648, 462,
	649, 464, 465, 1423, 0, 466, 0, 1424, 1425, 468,
	469, 470, 1426, 1427, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 1428, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 1429, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 1430, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 1431, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 1432,
	546, 547, 545, 548, 549, 550, 1433, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 1434, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 1435, 578, 579, 0, 575, 566, 1436, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 1437, 588, 661,
	662, 663, 664, 1438, 597, 1439, 589, 590, 591, 665,
	592, 666, 1440, 593, 594, 595, 596, 0, 598, 599,
	1441, 1442, 600, 601, 602, 604, 605, 603, 606, 1443,
	607, 1444, 0, 608, 609, 610, 667, 668, 669, 1445,
	612, 611, 613, 670, 1446, 614, 1447, 1448, 1449, 1450,
	615, 616, 671, 617, 618, 619, 1366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	1371, 278, 279, 1372, 1373, 1374, 0, 1375, 620, 1376,
	1377, 1378, 1379, 280, 281, 1169, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 1380,
	625, 290, 291, 292, 293, 294, 295, 1381, 1382, 0,
	296, 626, 627, 628, 1383, 297, 298, 629, 1384, 1313,
	1385, 299, 300, 301, 302, 303, 304, 305, 0, 1386,
	307, 308, 309, 306, 310, 1387, 311, 0, 312, 313,
	314, 315, 316, 317, 1388, 318, 319, 320, 1170, 321,
	322, 323, 1389, 1390, 1392, 1391, 1393, 1394, 1395, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 1396, 333,
	330, 331, 1397, 334, 332, 335, 1398, 336, 337, 338,
	1399, 1400, 339, 340, 341, 1401, 342, 343, 1402, 344,
	345, 346, 1403, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 1404,
	268, 1405, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 1406, 365, 366, 1407, 1408, 1171,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1409, 378, 638, 1410, 639, 379, 1411,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1173,
	385, 386, 1412, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 1413, 1172, 395, 643,
	644, 1414, 645, 1415, 397, 398, 1174, 646, 1175, 399,
	400, 401, 1176, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1416, 409, 411, 410, 1417, 412, 647,
	1177, 413, 414, 1178, 1418, 415, 0, 0, 0, 416,
	417, 420, 1419, 1420, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1179, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1180, 459, 449, 1421,
	270, 1181, 460, 461, 1422, 648, 462, 649, 464, 465,
	1423, 0, 466, 0, 1424, 1425, 468, 469, 470, 1426,
	1427, 471, 472, 650, 1182, 473, 1183, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 1428,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 1429, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 1430, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 1431, 522, 523, 524, 1184, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 1432, 546, 547, 545,
	548, 549, 550, 1433, 551, 552, 534, 535, 553, 554,
	1185, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 1434, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 1435, 578,
	579, 0, 575, 566, 1436, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 1437, 588, 661, 662, 663, 664,
	1438, 597, 1439, 589, 590, 591, 665, 592, 666, 1440,
	593, 594, 595, 596, 0, 598, 599, 1441, 1442, 600,
	601, 602, 604, 605, 603, 606, 1443, 607, 1444, 0,
	608, 609, 610, 667, 668, 669, 1445, 612, 611, 613,
	670, 1446, 614, 1447, 1448, 1449, 1450, 615, 616, 671,
	617, 618, 619, 2521, 0, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 2518,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 2519,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 2517, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 2520,
	0, 0, 0, 0, 0, 0, 1089, 2516, 0, 1049,
	1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 230, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 232,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	598, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 1585, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 224, 615, 616, 671, 617, 618, 619, 1063, 0,
	225, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 1056, 1057, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 1838, 1836, 0, 0, 1087, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 230, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 232, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 1585, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 224, 615, 616, 671, 617,
	618, 619, 1063, 0, 225, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 1838, 3129, 0, 0,
	1087, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 230,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 232, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 1585, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 224,
	615, 616, 671, 617, 618, 619, 1063, 0, 225, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	1838, 1836, 0, 0, 1087, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 2650, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 2655, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 2651, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 2652,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 0, 0, 0,
	0, 0, 0, 0, 1089, 0, 0, 2566, 1087, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 0, 0, 0, 0, 0, 0, 0,
	1089, 2564, 0, 2563, 1087, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 0,
	0, 0, 0, 0, 0, 0, 1089, 2561, 0, 2560,
	1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	598, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1063, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 1056, 1057, 0, 0, 0, 0, 0,
	0, 0, 1089, 2558, 0, 2557, 1087, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 0, 0, 0, 0, 0, 0, 0, 1089, 2555,
	0, 1680, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	1679, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 0, 0, 0,
	0, 0, 0, 0, 1089, 0, 0, 1052, 1087, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 1067, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	1089, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 4511,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 1067, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 1089, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 2398, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 2397, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 1067,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	598, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1063, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 1056, 1057, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 1089, 0, 0, 0, 1087, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 4272, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 1067, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 3894, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 1906, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 0, 1087, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 3619, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 1906, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 0, 1087, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 2655, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 0, 0, 0, 0, 0, 0, 0,
	1089, 1836, 0, 2660, 1087, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 0,
	0, 0, 0, 0, 0, 0, 1089, 0, 0, 2658,
	1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	598, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1063, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 1056, 1057, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 2646, 1087, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 0, 0, 0, 0, 0, 0, 0, 1089, 0,
	0, 2634, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 0, 0, 0,
	0, 0, 0, 0, 1089, 0, 0, 2632, 1087, 2623,
	2630, 1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 2626, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 2627, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 2628, 430,
	2625, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 2629, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 2624, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 2620, 1087, 2623, 2630, 1078, 1079, 1075,
	1076, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 2626, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 2627, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 2628, 430, 2625, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 2629, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	2624, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 0, 0, 0, 0, 0, 1844, 0,
	1089, 0, 0, 0, 1087, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 2377,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 0,
	0, 0, 0, 0, 0, 0, 1089, 0, 0, 2324,
	1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	598, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1063, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 1056, 1057, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 1685, 1087, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 0, 0, 0, 0, 0, 0, 0, 1089, 0,
	0, 1615, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 0, 0, 0,
	0, 0, 0, 0, 1089, 0, 0, 1610, 1087, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 1601, 1087, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 0,
	0, 0, 0, 0, 0, 0, 1089, 0, 0, 1596,
	1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	598, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1063, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 1056, 1057, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 1508, 1087, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1507, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 0, 0, 0, 0, 0, 0, 0, 1089, 0,
	0, 1502, 1087, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1501, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 0, 0, 0,
	0, 0, 0, 0, 1089, 0, 0, 1495, 1087, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 1315, 1087, 1105, 1077, 1078, 1079, 1075,
	1076, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 1105,
	1077, 1078, 1079, 1075, 1076, 1088, 1089, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	1089, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 4557, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 4556, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 1056, 1057, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 1089, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 4555, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	1060, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 4557, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 1065,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	1062, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 1059, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 4556, 599, 0, 1066,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1063, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 1056,
	1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 1089, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 4216, 323, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 4217, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 1174, 1132, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 1181, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 4215, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	598, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1063, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 0, 1056, 1057, 1105, 1077, 1078, 1079, 3096,
	3097, 1088, 1089, 0, 0, 0, 1087, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 1093, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 1142, 0, 288, 1149, 289, 1148, 0, 1159,
	290, 291, 292, 293, 294, 295, 1095, 1128, 1060, 296,
	1189, 1190, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 1152, 329, 1146, 1145, 1065, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1137, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1071, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 1084, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1144, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 1157, 1158, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 1094, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 1139, 1140,
	0, 1100, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 1062, 270,
	1181, 460, 461, 1085, 1133, 462, 1147, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 1072,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1143, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	1073, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 1141, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1188,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	1059, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1153, 1154, 1155, 1156, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 1083, 593,
	594, 595, 596, 0, 598, 599, 0, 1066, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 1150, 1187, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1063, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 0, 0, 0, 1056, 1057, 1105,
	1077, 1078, 1079, 3094, 3095, 1088, 1089, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1129, 1093, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 1142, 0, 288, 1149,
	289, 1148, 0, 1159, 290, 291, 292, 293, 294, 295,
	1095, 1128, 1060, 296, 1189, 1190, 628, 0, 297, 298,
	1135, 0, 1116, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125, 1121,
	1120, 1124, 324, 325, 326, 327, 328, 1152, 329, 1146,
	1145, 1065, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1137, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1071, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1160,
	1161, 360, 1084, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1144, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 1157, 1158, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1167, 0,
	1094, 379, 0, 380, 381, 382, 383, 384, 1130, 1131,
	1134, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1172, 395, 1139, 1140, 0, 1100, 0, 397, 398, 1174,
	1132, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1168, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 1123, 1122, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 1062, 270, 1181, 460, 461, 1085, 1133, 462,
	1147, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	1162, 474, 475, 1072, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1163, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1143,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 1073, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1126, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 1141, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1188, 569, 570, 571, 572, 1164, 576,
	577, 0, 578, 579, 1059, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1153,
	1154, 1155, 1156, 0, 597, 0, 589, 590, 591, 1165,
	592, 1166, 1083, 593, 594, 595, 596, 0, 598, 599,
	0, 1066, 600, 601, 602, 604, 605, 603, 606, 1127,
	607, 0, 0, 608, 609, 610, 667, 1150, 1187, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1063, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 0,
	0, 1056, 1057, 1105, 1077, 1078, 1079, 1075, 1076, 1088,
	1089, 0, 0, 0, 1087, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1129, 1093, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	1142, 0, 288, 1149, 289, 1148, 0, 1159, 290, 291,
	292, 293, 294, 295, 1095, 1128, 1060, 296, 1189, 1190,
	628, 0, 297, 298, 1135, 0, 1116, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 1119,
	1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326, 327,
	328, 1152, 329, 1146, 1145, 1065, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1137, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1071, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1160, 1161, 360, 1084, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1144, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 1157,
	1158, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1167, 0, 1094, 379, 0, 380, 381, 382,
	383, 384, 1130, 1131, 1134, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1172, 395, 1139, 1140, 0, 1100,
	0, 397, 398, 1174, 1132, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1168, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 1123,
	1122, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 1062, 270, 1181, 460,
	461, 1085, 1133, 462, 1147, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 1162, 474, 475, 1072, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1163, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1143, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 1073, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1126, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 1141, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1188, 569, 570,
	571, 572, 1164, 576, 577, 0, 578, 579, 1059, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1153, 1154, 1155, 1156, 0, 597, 0,
	589, 590, 591, 1165, 592, 1166, 1083, 593, 594, 595,
	596, 0, 598, 599, 0, 1066, 600, 601, 602, 604,
	605, 603, 606, 1127, 607, 0, 0, 608, 609, 610,
	667, 1150, 1187, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1063, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 2385, 2386, 1105, 1077, 1078,
	1079, 1075, 1076, 1088, 1089, 0, 0, 0, 1087, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1129,
	1093, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 1142, 0, 288, 1149, 289, 1148,
	0, 1159, 290, 291, 292, 293, 294, 295, 1095, 1128,
	0, 296, 1189, 1190, 628, 0, 297, 298, 1135, 0,
	1116, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 1119, 1117, 1118, 1125, 1121, 1120, 1124,
	324, 325, 326, 327, 328, 1152, 329, 1146, 1145, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1137, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1071, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1160, 1161, 360,
	1084, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1144, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 1157, 1158, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1167, 0, 1094, 379,
	0, 380, 381, 382, 383, 384, 1130, 1131, 1134, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1172, 395,
	1139, 1140, 0, 1100, 0, 397, 398, 1174, 1132, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1168, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 1123, 1122, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	0, 270, 1181, 460, 461, 1085, 1133, 462, 1147, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 1162, 474,
	475, 1072, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1163, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1143, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 1073, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1126, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 1141,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1188, 569, 570, 571, 572, 1164, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1153, 1154, 1155,
	1156, 0, 597, 0, 589, 590, 591, 1165, 592, 1166,
	1083, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 1127, 607, 0,
	0, 608, 609, 610, 667, 1150, 1187, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1105, 1077, 1078, 1079, 1075, 1076,
	1088, 0, 2642, 0, 0, 0, 0, 0, 0, 2640,
	2641, 271, 273, 272, 274, 275, 276, 277, 1089, 278,
	279, 0, 1087, 0, 0, 0, 1129, 1093, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 1142, 0, 288, 1149, 289, 1148, 0, 1159, 290,
	291, 292, 293, 294, 295, 1095, 1128, 0, 296, 1189,
	1190, 628, 0, 297, 298, 1135, 0, 1116, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325, 326,
	327, 328, 1152, 329, 1146, 1145, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1137, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1071, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1160, 1161, 360, 1084, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1144, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	1157, 1158, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1167, 0, 1094, 379, 0, 380, 381,
	382, 383, 384, 1130, 1131, 1134, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1172, 395, 1139, 1140, 0,
	1100, 0, 397, 398, 1174, 1132, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1168, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	1123, 1122, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 0, 270, 1181,
	460, 461, 1085, 1133, 462, 1147, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 1162, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1163, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1143, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 3089,
	3090, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1126, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 1141, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1188, 569,
	570, 571, 572, 1164, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1153, 1154, 1155, 1156, 0, 597,
	0, 589, 590, 591, 1165, 592, 1166, 1083, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 1127, 607, 0, 0, 608, 609,
	610, 667, 1150, 1187, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1105, 1077, 1078, 1079, 1075, 1076, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 2088, 271, 273,
	272, 274, 275, 276, 277, 1089, 278, 279, 0, 1087,
	0, 0, 0, 1129, 1093, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 0, 1142, 0,
	288, 1149, 289, 1148, 0, 1159, 290, 291, 292, 293,
	294, 295, 1095, 1128, 1060, 296, 1189, 1190, 628, 0,
	297, 298, 1135, 0, 1116, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 4557, 1119, 1117, 1118,
	1125, 1121, 1120, 1124, 324, 325, 326, 327, 328, 1152,
	329, 1146, 1145, 1065, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1137, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1071, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1160, 1161, 360, 1084, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1144, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 1157, 1158, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1167, 0, 1094, 379, 0, 380, 381, 382, 383, 384,
	1130, 1131, 1134, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1172, 395, 1139, 1140, 0, 1100, 0, 397,
	398, 0, 1132, 0, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1168, 1177, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 1123, 1122, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 1062, 270, 0, 460, 461, 1085,
	1133, 462, 1147, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 1162, 474, 475, 1072, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1163, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1143, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 1073, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1126, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 1141, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1188, 569, 570, 571, 572,
	1164, 576, 577, 0, 578, 579, 1059, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1153, 1154, 1155, 1156, 0, 597, 0, 589, 590,
	591, 1165, 592, 1166, 1083, 593, 594, 595, 596, 0,
	4556, 599, 0, 1066, 600, 601, 602, 604, 605, 603,
	606, 1127, 607, 0, 0, 608, 609, 610, 667, 1150,
	1187, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1049, 0,
	1227, 0, 0, 1056, 1057, 0, 0, 0, 0, 0,
	0, 0, 1089, 0, 0, 0, 1087, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 0, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 1128, 0, 296, 626, 627, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 643, 644, 0, 645, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1213, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 0, 270, 1181, 460, 461, 0, 1133,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 1219,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 1221, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	230, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 0, 575, 566, 232, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 1585, 668, 669,
	0, 612, 611, 613, 670, 1227, 614, 0, 0, 0,
	224, 615, 616, 671, 617, 618, 619, 0, 0, 225,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 0, 1217,
	0, 1930, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 1128, 0, 296,
	626, 627, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 643, 644,
	0, 645, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1213, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 0, 270,
	1181, 460, 461, 0, 1133, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 1219, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	657, 1221, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 230, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	0, 575, 566, 232, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 1585, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 224, 615, 616, 671, 617,
	618, 619, 0, 0, 225, 0, 0, 0, 3253, 0,
	1227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1217, 0, 1930, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 0, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 1128, 0, 296, 626, 627, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 643, 644, 0, 645, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1213, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 0, 270, 1181, 460, 461, 0, 1133,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 1219,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 1221, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 0, 1209, 0,
	1227, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 1217,
	0, 1215, 1129, 0, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 1128, 0, 296, 626, 627, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 643, 644, 0, 645, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1213, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 0, 270, 1181, 460, 461, 0, 1133,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 1219,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 1221, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1227, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 0, 1217,
	0, 1215, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 1128, 0, 296,
	626, 627, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 643, 644,
	0, 645, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1213, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 0, 270,
	1181, 460, 461, 0, 1133, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 1219, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	657, 1221, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1227, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 0, 1217, 0, 1215, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 1128, 0, 296, 626, 627, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 643, 644, 0, 645, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 0, 270, 1181, 460, 461, 0, 1133,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1227, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1129, 0, 0,
	0, 4047, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 1128, 0, 296,
	626, 627, 628, 0, 297, 298, 1135, 0, 1116, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 1119, 1117, 1118, 1125, 1121, 1120, 1124, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1160, 1161, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1167, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1130, 1131, 1134, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1172, 395, 643, 644,
	0, 645, 0, 397, 398, 1174, 1132, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1168, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 1123, 1122, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 0, 270,
	1181, 460, 461, 0, 1133, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 1162, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1163,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	657, 1221, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1126, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 1164, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 1165, 592, 1166, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 1127, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 2489, 2490, 2491, 2508, 2509, 2510, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 2511, 0, 620, 0, 1828, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 1813, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 2501, 0, 307, 308, 309, 306,
	310, 0, 311, 2497, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 2502, 2503,
	2504, 2505, 361, 362, 363, 635, 0, 0, 2496, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 2506, 2507, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 2499, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 2500,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 1812, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 1049, 0, 1308, 2486, 2487, 2488, 2512, 2498, 2492,
	0, 2494, 2495, 2493, 2480, 2481, 2482, 2483, 2484, 2485,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 1169, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 1313, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1170, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1171, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1173, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1172, 395, 643, 644, 0, 645,
	0, 397, 398, 1174, 646, 1175, 399, 400, 401, 1176,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 1177, 413, 414,
	1178, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1179, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1180, 459, 449, 0, 0, 1181, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1182, 473, 1183, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1184, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 230, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1185, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 232, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	1585, 668, 669, 0, 612, 611, 613, 670, 1582, 614,
	1308, 0, 0, 224, 615, 616, 671, 617, 618, 619,
	0, 0, 225, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 186, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 1313, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1172, 395, 643, 644, 0, 645, 0, 397, 398,
	1174, 646, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 0, 0, 1181, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	230, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 232, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 1585, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	224, 615, 616, 671, 617, 618, 619, 1308, 1307, 225,
	0, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 186, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	1313, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1172, 395,
	643, 644, 0, 645, 0, 397, 398, 1174, 646, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	0, 0, 1181, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1308, 1307, 0, 0, 0, 0,
	1305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 1607, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 1313, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1172, 395, 643, 644, 0,
	645, 0, 397, 398, 1174, 646, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 0, 0, 1181,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1308, 1307, 0, 0, 0, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 3536, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1313, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 0, 1181, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 2270, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1308, 2184,
	0, 0, 0, 0, 2185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 1607, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1313, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 2183, 411, 410, 0,
	412, 647, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 0, 1181, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1308, 1307, 0, 0, 0,
	0, 1305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 1607,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 1313, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1172, 395, 643, 644,
	0, 645, 0, 397, 398, 1174, 646, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 0, 0,
	1181, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1227, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1129, 0, 0, 0, 1591, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 1128, 0, 296, 626, 627, 628, 0, 297,
	298, 1135, 0, 1116, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 1119, 1117, 1118, 1125,
	1121, 1120, 1124, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1160, 1161, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1167,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1130,
	1131, 1134, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1172, 395, 643, 644, 0, 645, 0, 397, 398,
	1174, 1132, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1168, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 1123, 1122, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 0, 270, 1181, 460, 461, 0, 1133,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 1162, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1163, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1126, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 1164,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	1165, 592, 1166, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	1127, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1049, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 230, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 232, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 1585, 668, 669, 0, 612, 611,
	613, 670, 265, 614, 0, 0, 0, 224, 615, 616,
	671, 617, 618, 619, 0, 0, 225, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 186, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 265,
	3002, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 1944, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 265, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	4713, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 3486, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 1579, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 265,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 2990, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 265, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	3644, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 889,
	614, 794, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 2261, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 801, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 887, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 799,
	580, 581, 582, 583, 584, 800, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 792, 614, 794, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 804, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 801, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 799, 580, 581, 582,
	583, 584, 800, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 1983, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	0, 0, 804, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 0, 1989, 0, 288, 1979, 289,
	1995, 0, 2002, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 2005, 2006, 0, 0, 297, 298, 0,
	0, 1313, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 1152, 329, 1993, 1992,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1137, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 1991, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 2000, 2001, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 0, 380, 381, 382, 383, 384, 0, 0, 0,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1172,
	395, 1986, 1987, 0, 1982, 0, 397, 398, 1174, 0,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 0, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 0, 1181, 460, 461, 0, 0, 462, 1994,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 0, 1182, 473, 1183, 0,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 1976, 486, 487, 488, 1977, 489,
	490, 491, 0, 492, 0, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 1990, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 0, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	1988, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 2004, 569, 570, 571, 572, 0, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 1996, 1997,
	1998, 1999, 0, 597, 0, 589, 590, 591, 0, 592,
	0, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 0, 1980, 2003, 0, 612,
	611, 613, 0, 0, 614, 0, 0, 794, 0, 615,
	616, 0, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 1970, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 801, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 799, 580, 581, 582, 583,
	584, 800, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 794, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 804, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 801, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 2304, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 2305, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 799, 580, 581, 582, 583,
	584, 800, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 2306, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 2053, 614, 1308, 2020, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 804, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 1313, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 2017, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1172, 395, 643, 644, 0,
	645, 0, 397, 398, 1174, 646, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 0, 0, 1181,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 2018, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 2014,
	614, 1308, 2020, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1313, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 2017, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 0, 1181, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 2018, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 794, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 801, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 2009, 541, 542, 543,
	544, 0, 2010, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 799,
	580, 581, 582, 583, 584, 800, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 2008, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 794, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 804, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 801, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 1961, 541, 542, 543,
	544, 0, 1962, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 799,
	580, 581, 582, 583, 584, 800, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 1960, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 1308, 2020,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 804, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1313, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	2017, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 0, 1181, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 2018, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1308, 1307, 0, 0, 0,
	0, 1305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1169, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 1313, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1170, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1171, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1173, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 1172, 395, 643, 644,
	0, 645, 0, 397, 398, 1174, 646, 1175, 399, 400,
	401, 1176, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 1177,
	413, 414, 1178, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1179, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1180, 459, 449, 0, 0,
	1181, 460, 461, 3833, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1182, 473, 1183, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1184, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 1185,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1308, 1307, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 1169, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 1313, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1170, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1171, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1173, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1172, 395, 643, 644, 0, 645, 0,
	397, 398, 1174, 646, 1175, 399, 400, 401, 1176, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 1177, 413, 414, 1178,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1179,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1180, 459, 449, 0, 0, 1181, 460, 461,
	3457, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1182, 473, 1183, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1184, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1185, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 1635,
	0, 1308, 1307, 0, 0, 0, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 804, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1313, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 1634, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 0, 1181, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 1633,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 1632, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1553, 0,
	1308, 1307, 0, 0, 0, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 1169,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 1313, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1170, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1171, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1552,
	641, 642, 463, 1173, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1172, 395, 643, 644, 0, 645, 0, 397, 398,
	1174, 646, 1175, 399, 400, 401, 1176, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 1177, 413, 414, 1178, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1179, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1180, 459, 449, 0, 0, 1181, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1182, 473,
	1183, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1184, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 1185, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1513, 0, 1308,
	1307, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 1169, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 1313, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1170, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1171, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1173, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1172, 395, 643, 644, 0, 645, 0, 397, 398, 1174,
	646, 1175, 399, 400, 401, 1176, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 1177, 413, 414, 1178, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1179, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1180,
	459, 449, 0, 0, 1181, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1182, 473, 1183,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1184,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1185, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1481, 0, 1308, 1307,
	0, 0, 0, 0, 1305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1313, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1480, 641, 642,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 0, 1181, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1302, 0, 1308, 1307, 0,
	0, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 1169, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	1313, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1170,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1171, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1301, 641, 642, 463,
	1173, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1172, 395,
	643, 644, 0, 645, 0, 397, 398, 1174, 646, 1175,
	399, 400, 401, 1176, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 1177, 413, 414, 1178, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1179, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1180, 459, 449,
	0, 0, 1181, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1182, 473, 1183, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1184, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1185, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1308, 1307, 0, 0, 0, 0,
	1305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 1169, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 1313, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1170, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1171, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1173, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1172, 395, 643, 644, 0,
	645, 0, 397, 398, 1174, 646, 1175, 399, 400, 401,
	1176, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 1177, 413,
	414, 1178, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1179, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1180, 459, 449, 0, 0, 1181,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1182, 473, 1183, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1184, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1185, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 0,
	614, 1308, 2020, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1169, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1313, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1170, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 2060, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1171, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1173, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1172, 395, 643, 644, 0, 645, 0, 397,
	398, 1174, 646, 1175, 399, 400, 401, 1176, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1177, 413, 414, 1178, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1179, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1180, 459, 449, 0, 0, 1181, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1182,
	473, 1183, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1184, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1185, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 1308, 1307,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1313, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 0, 1181, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 1308, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1169, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1313, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1170, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1171, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1173, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1172,
	395, 643, 644, 0, 645, 0, 397, 398, 1174, 646,
	1175, 399, 400, 401, 1176, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1177, 413, 414, 1178, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1179, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1180, 459,
	449, 0, 0, 1181, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1182, 473, 1183, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1184, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1185, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 2809, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 2806, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 2813, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 3015, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 2812,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 3012, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 3014, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 3011, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 2811, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	3013, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 2809, 297, 298, 629,
	0, 0, 2803, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 2806, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 2813, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 2812,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 2802, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 2811, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	2810, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1708, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 1707,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 1711, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 1709, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 1710, 611, 613, 670,
	1455, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 1457, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 1219, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 1452, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 1454, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 1219, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 1359, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1361, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 1219, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 703, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 702, 276, 277, 692, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 695, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	696, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 697, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 691, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 692, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 695, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 696, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	697, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 1219,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	3407, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 2960, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 2959, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 2276, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 2217, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 2224,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	2223, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 2210, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 2212, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 2180, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 1219, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1557, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1556, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1472, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 1465, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 1467, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 1292, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1291, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 1282, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1281, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1279, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1278,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1274, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1273, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 673, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 256,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 695,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 696, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 697, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 2313, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 2311, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 2309, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	2230, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	2039, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	2033, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 876, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 875, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 874, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 265, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 3015, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 4115, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 760, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 1329, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 1327, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 761, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	757, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	1330, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 756, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	760, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 1329, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 1327,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 761, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 757, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 1330, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 756, 662, 663, 664, 0, 597, 0, 589,
	1328, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 682, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 681, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 680, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 265, 3002, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 0, 614, 265, 4125, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 4386, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 4024, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 3801, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 2695, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 0, 614,
	265, 3002, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 2999, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 2286, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 2274, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 760, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 750, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	761, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 757,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 1590,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 756, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 1563,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1562, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 1547, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1545, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1540, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1517, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 1515, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 1478, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 1460, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 1297, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 1296, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1288, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1287,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 1241, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 766, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 760, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 750, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 748, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 749, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 761, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 751, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 757, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 752, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 756, 662, 663,
	664, 0, 597, 0, 589, 754, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 742, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 743, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 705,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 699, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 677, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 3506, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 3443, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 3372, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 3370, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 3355, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 2970, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 743, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 2248,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 0, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1259, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 1192, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 265, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 0, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 0, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 0, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 0, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 1788, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 1794, 1788, 1759, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 1779, 0, 0,
	0, 0, 1807, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 1783, 1784, 1785, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 1783, 1784, 1785, 0, 0, 1798, 0,
	0, 1808, 1765, 0, 0, 0, 0, 0, 1787, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 1805, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 0, 1798,
	0, 0, 1808, 0, 0, 0, 0, 0, 0, 1787,
	1789, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 1780, 1805, 0,
	0, 0, 0, 0, 0, 1774, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 1794, 1788, 0, 0, 1799,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 1781, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 0, 0, 0, 0, 0, 0, 1813,
	1812, 0, 0, 0, 0, 0, 1794, 1788, 1759, 0,
	1799, 0, 0, 0, 1760, 0, 0, 0, 1779, 0,
	0, 0, 0, 1807, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 1812, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 1797, 0, 0, 0, 0, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 2523, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	0, 0, 1765, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 4407, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 0, 0, 1798,
	0, 0, 1808, 1765, 0, 0, 0, 0, 0, 1787,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 1805, 0,
	0, 0, 0, 0, 0, 1774, 1775, 0, 0, 0,
	1798, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	1787, 1789, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 1780, 1805,
	0, 0, 0, 0, 0, 0, 1774, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1780,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1757, 1758, 0, 1790, 1791, 1792,
	1801, 1802, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 1794, 1788, 0, 0,
	1799, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 1781, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 0, 0, 0, 0,
	1813, 1812, 0, 0, 0, 0, 0, 1794, 1788, 1759,
	0, 1799, 0, 0, 0, 1760, 0, 0, 0, 1779,
	0, 0, 0, 0, 1807, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 1812, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 0, 0, 0, 0, 4372, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 0, 0, 0,
	0, 0, 0, 1765, 1797, 0, 0, 0, 0, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 4371,
	0, 0, 0, 0, 1782, 1783, 1784, 1785, 0, 0,
	1798, 0, 0, 1808, 1765, 0, 0, 0, 0, 0,
	1787, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 0, 1805,
	0, 0, 0, 0, 0, 0, 1774, 1775, 0, 0,
	0, 1798, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 1787, 1789, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 1780,
	1805, 0, 0, 0, 0, 0, 0, 1774, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 1757, 1758, 0, 1790, 1791,
	1792, 1801, 1802, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 1794, 1788, 0,
	0, 1799, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 1781, 1757, 1758, 0, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 1813, 1812, 0, 0, 0, 0, 0, 1794, 1788,
	1759, 0, 1799, 0, 0, 0, 1760, 0, 0, 0,
	1779, 0, 0, 0, 0, 1807, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 1812, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 1797, 0, 0, 0, 0, 1771,
	1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761,
	1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0, 4200,
	0, 0, 0, 0, 1782, 1783, 1784, 1785, 0, 0,
	0, 0, 0, 0, 1765, 1797, 0, 0, 0, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0,
	4043, 0, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 1798, 0, 0, 1808, 1765, 0, 0, 0, 0,
	0, 1787, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 0,
	1805, 0, 0, 0, 0, 0, 0, 1774, 1775, 0,
	0, 0, 1798, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 1787, 1789, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	1780, 1805, 0, 0, 0, 0, 0, 0, 1774, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 1757, 1758, 0, 1790,
	1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 1794, 1788,
	0, 0, 1799, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 1781, 1757, 1758, 0,
	1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0,
	0, 0, 1813, 1812, 0, 0, 0, 0, 0, 1794,
	1788, 1759, 0, 1799, 0, 0, 0, 1760, 0, 0,
	0, 1779, 0, 0, 0, 0, 1807, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 1812, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 1797, 0, 0, 0, 0,
	1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768, 1769,
	1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0, 0,
	3979, 0, 0, 0, 0, 1782, 1783, 1784, 1785, 0,
	0, 0, 0, 0, 0, 1765, 1797, 0, 0, 0,
	0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 3978, 0, 0, 0, 0, 1782, 1783, 1784, 1785,
	0, 0, 1798, 0, 0, 1808, 1765, 0, 0, 0,
	0, 0, 1787, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 1805, 0, 0, 0, 0, 0, 0, 1774, 1775,
	0, 0, 0, 1798, 0, 0, 1808, 0, 0, 0,
	0, 0, 0, 1787, 1789, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 1780, 1805, 0, 0, 0, 0, 0, 0, 1774,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1780, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1757, 1758, 0,
	1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 1794,
	1788, 0, 0, 1799, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 1781, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 1813, 1812, 0, 0, 0, 0, 0,
	1794, 1788, 1759, 0, 1799, 0, 0, 0, 1760, 0,
	0, 0, 1779, 0, 0, 0, 0, 1807, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 1812, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 1797, 0, 0, 0,
	0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770, 1768,
	1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0, 0,
	0, 3977, 0, 0, 0, 0, 1782, 1783, 1784, 1785,
	0, 0, 0, 0, 0, 0, 1765, 1797, 0, 0,
	0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0,
	0, 0, 3649, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 1798, 0, 0, 1808, 1765, 0, 0,
	0, 0, 0, 1787, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 0, 1805, 0, 0, 0, 0, 0, 0, 1774,
	1775, 0, 0, 0, 1798, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 1787, 1789, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 1780, 1805, 0, 0, 0, 0, 0, 0,
	1774, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	1794, 1788, 0, 0, 1799, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 1781, 1757,
	1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0,
	0, 0, 0, 0, 1813, 1812, 0, 0, 0, 0,
	0, 1794, 1788, 1759, 0, 1799, 0, 0, 0, 1760,
	0, 0, 0, 1779, 0, 0, 0, 0, 1807, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 1812, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 1797, 0, 0,
	0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 0,
	0, 0, 3171, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 0, 0, 1765, 1797, 0,
	0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 0, 0, 3170, 0, 0, 0, 0, 1782, 1783,
	1784, 1785, 0, 0, 1798, 0, 0, 1808, 1765, 0,
	0, 0, 0, 0, 1787, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 0, 1805, 0, 0, 0, 0, 0, 0,
	1774, 1775, 0, 0, 0, 1798, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 1787, 1789, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 1780, 1805, 0, 0, 0, 0, 0,
	0, 1774, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1757, 1758, 1781,
	1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 1794,
	1788, 0, 0, 0, 0, 0, 1799, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 1812, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 0, 0, 3169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 0, 3168, 0, 1782, 1783, 1784, 1785,
	0, 0, 0, 0, 0, 0, 1765, 4627, 0, 0,
	1757, 1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 1788, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 1798, 0, 0, 1808, 0, 0, 1807,
	0, 0, 0, 1787, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	1804, 0, 1805, 0, 0, 1759, 0, 0, 0, 1774,
	1775, 0, 0, 0, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	1794, 1788, 0, 0, 0, 0, 3104, 0, 1760, 1782,
	1783, 1784, 1785, 1795, 0, 0, 0, 1807, 0, 1765,
	0, 3233, 0, 0, 1810, 3232, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 4626, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 1798, 0, 0, 1808,
	0, 0, 1776, 0, 0, 0, 1787, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 1804, 0, 1805, 0, 0, 0, 0,
	0, 0, 1774, 1775, 0, 0, 0, 1781, 0, 0,
	0, 3105, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1799, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 0, 1795, 1808, 0, 0,
	0, 0, 0, 0, 1787, 1789, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 0, 1805, 0, 0, 0, 0, 0, 0,
	1774, 1775, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 1796, 1770,
	1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0, 1786,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 2668, 0, 0, 0, 0, 0, 0, 1757,
	1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 1799, 0, 0,
	0, 1794, 1788, 0, 0, 0, 2667, 0, 0, 1760,
	0, 0, 0, 0, 1795, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777,
	1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766,
	1767, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 1783,
	1784, 1785, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 1808, 0,
	0, 0, 0, 0, 0, 1787, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 0, 1805, 0, 0, 0, 0, 0,
	0, 1774, 1775, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 1796,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 0, 1757, 1758, 1780, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 1788, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 1795, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 1794, 1788, 0, 0, 0, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 1783, 1784, 1785, 1813, 0, 0, 0, 0,
	0, 1765, 0, 0, 1759, 0, 1799, 0, 0, 0,
	0, 0, 0, 0, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 1798, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 1787, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 1805, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 1782, 1783,
	1784, 1785, 0, 0, 0, 0, 0, 1780, 1765, 1797,
	0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 1808, 0,
	1806, 0, 0, 0, 0, 1787, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 1046,
	0, 0, 1804, 0, 1805, 0, 0, 0, 0, 1810,
	0, 1774, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 1788, 0, 0, 0,
	0, 1786, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 1806, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 1779, 1799,
	0, 0, 0, 0, 0, 0, 1810, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	0, 0, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 3239, 0,
	0, 0, 1797, 0, 0, 0, 1799, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 1808, 0, 0, 0, 0, 1812, 0, 1787,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3630, 0, 0, 0, 0, 0, 1804, 0, 1805, 0,
	0, 0, 0, 0, 0, 1774, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 1788, 0, 0, 0, 3234, 0, 0, 1760, 0,
	0, 0, 1786, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	1799, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 1798, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 1787, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 0, 1805, 0, 0, 0, 0, 0, 0,
	1774, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801, 1802,
	1803, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 1788, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 1810, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	1758, 0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 1788, 0, 0, 0, 3172, 1786, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	0, 1782, 1783, 1784, 1785, 1813, 0, 0, 0, 0,
	0, 1765, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1779, 1799, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 0,
	0, 1808, 0, 0, 0, 0, 1812, 0, 1787, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 1805, 0, 0,
	0, 0, 0, 0, 1774, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 1782, 1783,
	1784, 1785, 0, 0, 0, 0, 0, 1780, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 1808, 0,
	1806, 0, 0, 0, 0, 1787, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 1804, 0, 1805, 0, 0, 0, 0, 1810,
	0, 1774, 1775, 0, 0, 0, 0, 0, 3199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 1757, 1758, 0, 1790, 1791, 1792, 1801,
	1802, 1803, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 1788, 0, 0, 0,
	0, 1786, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 1806, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 1779, 1799,
	0, 0, 0, 0, 0, 0, 1810, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	0, 0, 1782, 1783, 1784, 1785, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 1799, 1771, 1772, 1778,
	1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763,
	1764, 1766, 1767, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 1808, 0, 0, 0, 0, 1812, 0, 1787,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 1805, 0,
	0, 0, 0, 0, 0, 1774, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 1771, 1772, 1778, 1800, 1777, 1773,
	0, 1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 1758,
	0, 1790, 1791, 1792, 1801, 1802, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 1788, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 0, 1786, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1813, 0, 0, 0, 0, 0,
	0, 1757, 1758, 1759, 1790, 1791, 1792, 1801, 1802, 1803,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	1799, 0, 1776, 0, 1788, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 1783, 1784,
	1785, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 1771, 1772,
	1778, 1800, 1777, 1773, 0, 1770, 1768, 1769, 1761, 1762,
	1763, 1764, 1766, 1767, 1798, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 1787, 1789, 0, 0, 0, 0,
	1782, 1783, 1784, 1785, 0, 0, 0, 0, 0, 0,
	1765, 1804, 0, 1805, 0, 0, 0, 0, 0, 0,
	1774, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	1808, 0, 0, 1780, 0, 0, 0, 1787, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 0, 1805, 0, 0, 0,
	0, 0, 0, 1774, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 1796, 0, 0, 935, 0, 983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 957, 0, 941, 940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 942, 1786, 0, 0,
	0, 945, 0, 0, 0, 0, 991, 0, 1810, 0,
	0, 0, 0, 0, 0, 954, 955, 0, 1781, 0,
	0, 0, 0, 0, 972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 984, 947, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	948, 0, 0, 0, 0, 0, 1812, 0, 0, 981,
	0, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 982,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 950, 0, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 951, 952, 1771, 1772, 1778, 1800, 1777, 1773, 0,
	1770, 1768, 1769, 1761, 1762, 1763, 1764, 1766, 1767, 0,
	960, 958, 0, 0, 0, 0, 0, 0, 953, 0,
	0, 0, 969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	988, 980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 1771, 1772, 1778, 1800,
	1777, 1773, 0, 1770, 1768, 1769, 1761, 1762, 1763, 1764,
	1766, 1767, 985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 946, 0, 0, 990, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 944,
	0, 0, 0, 976, 977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 989, 970, 0, 0, 963,
	961, 0, 966, 0, 0, 0, 0, 0, 967, 0,
	0, 937, 0, 986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 978, 0, 968,
	0, 0, 0, 0, 0, 965, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 987, 0, 0, 0,
	0, 0, 0, 0, 971, 0, 0, 0, 0, 0,
	0, 0, 0, 949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 975,
}

var sqlPact = [...]int{
	269, -1000, -1000, -1000, -1000, 184, -1000, -1000, 180, 179,
	178, 177, 175, 172, 169, 168, 167, 164, 162, -1000,
	-1000, -1000, -1000, -1000, -1000, 160, -1000, -1000, 158, -1000,
	156, 155, 154, -1000, -1000, 152, -1000, 151, -1000, -1000,
	-1000, -1000, 150, 149, 145, 91637, 91090, 92177, 2241, 112311,
	98685, 2129, 82366, 111764, 81819, 111217, 2011, 8365, 110670, 2685,
	144, -1000, 110123, 140, 137, 132, -1000, 109576, -1000, 1810,
	-1000, 126, -1000, 4760, 67014, 124, 122, 121, 2332, 120,
	-1000, 119, 116, -1000, -1000, 112, -1000, 10777, 1498, -1000,
	110, 109, -1000, 462, 96504, 107, 106, 2183, 105, 103,
	66467, 102, 101, 2172, 2778, -1000, -1000, 1959, -1000, -1000,
	95, 94, 91, 86, 80, 79, 78, 77, 75, 71,
	67, -1000, 64, 61, 60, 59, 56, -1000, 55, 52,
	51, -1000, 50, -1000, 49, 48, 47, 46, 43, 42,
	40, 39, 37, 34, 33, 32, 31, 29, 125272, -1000,
	-1000, 1751, 1646, 1643, 1640, 1638, 1637, 978, 27, 26,
	22, 21, 20, 19, 18, 17, 15, 14, 13, 9,
	8, 6, 5, 4, 3, 134, 2, 1, 0, -1,
	-3, -4, -13, 2258, -1000, 1756, 1109, 31285, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 118251, 112851, -14, -68, -15, -1000,
	3159, 975, 54946, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 273, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 517, 2005, 736, -1000, -1000, -1000,
	109036, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2240,
	-40, -1000, 1906, -1000, -1000, -1000, -1000, -1000, 735, -1000,
	2236, 280, 2156, -1000, -1000, -1000, 3249, 2392, 3686, 3685,
	3683, 3679, 3677, 117711, 1737, 3676, 2455, 3670, 3669, 3668,
	3665, 3648, 3647, 3646, -1000, 90543, 1021, 89996, 89449, 3258,
	108496, 88902, 107949, 75813, 47011, 1106, 3247, -1000, -1000, -1000,
	-1000, -1000, -1000, 112851, -1000, 1020, -1000, -1000, 3644, 3643,
	2034, 733, 98138, -1000, 1986, -1000, 905, 33007, -1000, 1239,
	-1000, 33007, 272, -1000, -1000, -1000, -1000, -1000, -1000, 3641,
	3639, 3638, 3637, 3636, -1000, -1000, 81272, 24345, 80725, 80178,
	107402, 23786, 88355, 87808, 3633, 3632, 3631, 3630, 106855, 75254,
	1019, 1400, -1000, -1000, -1000, -1000, -1000, -1000, -35, 73018,
	3411, 112851, -1000, 271, -1000, -1000, -1000, -1000, -1000, -1000,
	46425, 903, 45839, 728, 45253, 502, -1000, -1000, -1000, -1000,
	74695, -1000, 106308, 2389, 3621, 3617, 1110, 3616, 3097, 1718,
	3615, 1757, 1192, 3614, 3609, 3604, 3602, 3597, 3593, 3591,
	1381, 105761, 2833, 1407, 105214, 1644, 74136, 1018, 87261, 92177,
	2543, 104667, 1347, 1255, -1000, -1000, -1000, -1000, 2976, 2771,
	2766, 1274, -1000, -1000, -1000, -1000, 58236, 9218, 7086, -1000,
	-1000, 15106, 104120, 61021, 92177, 92177, -1000, -1000, -1000, -1000,
	-1000, 44667, 659, 44081, 914, -1000, -1000, 58793, 2804, -1000,
	-1000, -1000, -1000, 43495, 656, 42909, 674, 112851, -1000, 2832,
	1910, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1905, 1651, 3441,
	2645, 73577, 2061, 1384, 3197, 2972, 2967, 1494, 2964, 3590,
	2524, 2959, 2957, 2947, 2943, 2942, 1553, 2500, 344, 2503,
	30699, 2820, 1657, 42323, 1471, 1504, 2936, 2935, 3452, 1898,
	1908, 2008, 79631, 3589, 3588, 3167, 2933, 2925, 2702, 2906,
	-1000, 2803, 1371, -1000, -1000, -1000, -1000, 1445, -1000, -1000,
	-1000, -1000, 82906, -1000, -1000, 1262, -1000, -1000, 1262, -1000,
	-1000, -1000, -1000, -1000, 1232, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1756, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2081, -1000, 1949,
	-1000, -1000, 2407, 3139, 3139, 3139, 3236, 486, 445, -1000,
	134, -1000, -1000, 124572, -1000, -1000, 47585, 47585, 47585, 47585,
	47585, 47585, 47585, 47585, 2039, -1000, 732, -1000, -1000, 786,
	-1000, 731, 675, 621, -1000, -1000, -1000, -1000, -1000, -1000,
	730, -1000, -1000, -1000, -1000, -1000, -1000, 3411, -1000, 27195,
	-1000, -1000, -1000, 521, 729, 47585, -1000, -1000, 3476, 3472,
	925, -1000, 268, 932, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2829, 727, 724, -1000,
	722, 721, 720, 715, 714, -1000, -1000, -1000, 712, 711,
	708, 705, 704, 702, 699, 698, -1000, 1920, -1000, -1000,
	-1000, -1000, -1000, -1000, 661, 657, 657, 657, -1000, 1012,
	-1000, -1000, -1000, 305, 653, 261, 651, 649, 648, -1000,
	695, 694, 688, 687, 685, 682, 681, 680, 679, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1011, -1000, -1000, -1000,
	-1000, -36, 112851, -1000, 517, -36, -1000, -1000, 677, -1000,
	35315, 35315, 35315, -1000, -1000, 2235, 47585, -1000, 2507, -1000,
	-28, -28, 871, 56581, -1000, 53831, 871, 279, 801, 62658,
	-1000, 2800, -1000, -1000, 676, 266, -1000, -1000, -1000, -1000,
	24902, 2799, 112851, 112851, 92177, 92177, 92177, 3587, 3027, 47585,
	-1000, -1000, 70817, 112851, 92717, -1000, -1000, 3375, 67554, 70277,
	112851, 2828, 69737, 3586, -1000, -1000, -1000, -1000, -1000, 3006,
	3584, 3578, 3577, -1000, 112851, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 214, 3004, -1000, -1000, 95957, 214, 3001, -1000,
	214, 2985, -1000, 95417, -1000, -1000, 2144, 2983, -1000, -1000,
	228, 2981, -1000, -1000, -1000, 224, 2979, -1000, -1000, 265,
	-61, 2978, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 124572, -1000, -1000, -1000, 69190, -1000,
	3166, -1000, -1000, 112851, -1000, 47585, -1000, 3374, 1496, 76917,
	3285, -47, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2433,
	2440, 1127, 2278, -1000, 3041, 1455, -1000, 33007, 3084, -1000,
	-1000, -1000, 262, 24902, -1000, -1000, -1000, -1000, -1000, -1000,
	2195, 2963, 1405, -1000, 2272, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2179, 2954, -1000, 2223, 2952, 2155, -1000,
	-1000, 2335, -1000, 3153, -1000, -1000, 2074, 2948, -27, -1000,
	-1000, 2234, -1000, -1000, -1000, -1000, -1000, 1861, -1000, 979,
	2941, -1000, 86714, 60464, 58793, 73018, -41, -1000, -1000, -1000,
	-1000, -154, -1000, 23227, 124572, -1000, -1000, -1000, -1000, 1649,
	124572, 942, -1000, -1000, 2934, -1000, 124572, 941, -1000, -1000,
	2930, -1000, 2827, -1000, -1000, 2346, -1000, -1000, 3574, -1000,
	-1000, 3571, -1000, 3570, 3569, 3568, -1000, 1623, 1913, 3567,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 86174, 2230,
	-1000, -1000, 85080, 2826, -1000, 2344, 3282, -1000, 85627, 1017,
	-1000, 979, 2343, -1000, 94877, 1008, 2334, -1000, 3564, 3256,
	2585, 979, 2333, -1000, -1000, -1000, -1000, -1000, 1014, -1000,
	64290, -1000, 64290, -1000, 1500, -1000, 117171, -28, 92177, 3411,
	-1000, -58, -1000, -1000, -1000, 975, -1000, 57689, -1000, 57689,
	97591, 76370, 949, 774, 65920, 124572, -1000, -1000, -1000, -1000,
	124572, -1000, -1000, -1000, -157, 2640, -1000, 76370, 59907, 124572,
	-1000, -1000, -1000, -1000, 124572, -1000, -1000, -1000, 76370, 85080,
	-1000, 103573, 84540, -1000, -1000, 1356, 2466, -1000, -1000, -1000,
	76370, 1280, 76370, 76370, 76370, -1000, 103026, -1000, -1000, 1943,
	1248, 3160, 1934, 92177, -1000, 1791, -1000, -1000, -1000, 3185,
	112851, -1000, -1000, 2824, -1000, 68643, 94337, -1000, 93797, -1000,
	93257, -1000, 92177, -1000, 92177, -1000, 3562, 3561, 3558, -1000,
	-1000, 3557, -1000, 3556, 3179, -1000, 3555, 41737, 124572, 3174,
	-1000, 3554, 3276, 2820, 124572, -1000, 2920, 1655, 1650, 112851,
	-1000, -1000, 112851, -1000, 112851, -1000, -1000, -1000, 1414, -1000,
	-1000, 2432, -1000, -1000, -1000, -1000, 92177, 1256, -1000, -1000,
	-1000, -1000, -1000, -1000, 2903, 3551, 1692, -1000, 1782, -1000,
	2798, 3163, -1000, 1314, 1679, -1000, -1000, 239, -1000, -1000,
	-47, -1000, 116631, -1000, 2407, -1000, 112851, -1000, 2425, 2813,
	2818, 1626, 2259, 2535, -1000, 41151, 2479, 51029, 2266, 134,
	-1000, -1000, 134, 134, 32433, -1000, -1000, 67554, 67554, 24902,
	1238, 47585, 47585, 47585, 47585, 47585, 47585, 47585, 47585, 47585,
	47585, 47585, 47585, 47585, 47585, 47585, 47585, 47585, 47585, 47585,
	47585, 47585, 47585, 47585, 47585, 47585, 47585, 47585, 47585, 47585,
	47585, 47585, 47585, 47585, 47585, 47585, 47585, 2141, 47585, 1230,
	47585, 47585, 47585, 47585, 1932, -1000, -1000, 1876, 543, 2007,
	675, -1000, -1000, -1000, 3419, 3419, 3419, 764, 764, 764,
	125000, 125000, 654, 3548, 786, -1000, 47585, -1000, 210, 57128,
	47585, 25461, -1000, 445, 9812, 2326, -1000, 444, 26047, -1000,
	-1000, -1000, 27195, 621, 40565, 47585, 996, 124572, -1000, -1000,
	1366, 3432, 22669, 2841, 2691, 673, 798, 598, 30113, 29527,
	28941, 28355, 581, 47585, 47585, 47585, 47585, 47585, 47585, 47585,
	47585, -1000, -1000, 3443, -1000, 3432, -1000, -1000, -1000, -1000,
	3432, 1237, 1196, 3432, -1000, 3432, 3432, 7848, 7848, 39991,
	39405, 38819, 51603, 38233, 47585, 27769, 37647, 37061, -1000, 112851,
	-36, 3373, 47585, 213, -1000, 122928, -1000, 213, 213, 672,
	-59, 124572, 2586, 2586, 55491, 2336, 2092, 2092, 2092, -1000,
	871, 18176, 871, 101939, 2103, 871, 871, 252, 264, 440,
	53286, 2507, 101939, 767, 671, -16, -18, -19, -1000, -1000,
	-20, -23, -1000, -1000, 92177, 669, 25461, 24902, 219, 1880,
	-80, 2523, 2521, 2517, -1000, 2509, -1000, 1733, -81, 1229,
	92177, 112851, 3547, -67, -1000, 6153, -83, -1000, 1318, 207,
	3432, -1000, -1000, -1000, -1000, -1000, 3546, 3545, -1000, 1010,
	667, 663, 434, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 661, 657, 657, 657, -1000, 305, 653, 261, 651,
	649, 648, -1000, -1000, -1000, -1000, -1000, 2796, 92177, 112851,
	3544, -154, 92717, -79, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 112851, -1000, -1000, -1000, 3543, -1000, 92177, -1000,
	-1000, 92177, 214, 2928, -1000, 92177, -1000, 92177, 211, 2926,
	-1000, -1000, 112851, -1000, 92177, 92177, -1000, 112851, 112851, 112851,
	76370, 76370, 238, -1000, 92177, 881, -88, 1116, -47, -1000,
	-1000, -1000, 1262, -1000, 1928, -1000, -1000, -1000, -1000, -1000,
	-1000, 1370, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	925, -1000, -1000, -1000, -1000, -1000, -1000, 3428, 3425, -38,
	-1000, -1000, 24902, -1000, -48, 1628, 1827, 1228, -1000, 79084,
	2275, 3164, 3542, 2577, 3106, 1485, -1000, 1406, -1000, 3251,
	82906, 3314, 3360, 1302, -1000, 2795, -1000, -1000, 902, 1690,
	1645, 1227, 1224, 82906, 2223, -1000, 67554, -1000, 2545, 3231,
	1377, 1409, 1377, 1377, 1403, -1000, 82906, 1641, 1223, 1219,
	1216, 1840, 1824, -1000, -1000, 1911, -1000, 1215, 1214, 822,
	1815, -1000, -49, 3292, 3320, 1286, -1000, 2794, 1212, -1000,
	-1000, -1000, 3226, 92177, 24902, 1536, 1534, 1529, 1639, 1211,
	-39, -1000, 3305, 1210, 1208, -1000, 4763, -1000, 76370, 2079,
	2924, 2633, 869, 2610, -1000, -1000, -1000, 869, -41, 73018,
	112851, 206, -1000, 210, 47585, 47585, 210, 47585, 210, 3274,
	2923, -1000, -1000, -1000, -1000, -1000, 3541, 1881, 2452, -1000,
	-1000, 647, 2330, 2785, 112851, 2537, -42, 92177, -1000, 68103,
	2919, 71364, 2223, 2327, -1000, -1000, 83993, -1000, 2918, 517,
	2321, -1000, 701, 3540, 2916, -1000, 116091, -1000, 3166, 1249,
	2913, 1076, 399, 3372, -1000, 399, 64830, -1000, 112851, -1000,
	-28, 6557, 78004, -89, -91, 436, -1000, 102486, 112851, 1074,
	78544, 112851, 3073, 976, 58793, -1000, 58793, -94, -157, 2608,
	1402, 949, 949, 869, -1000, 869, -1000, 92177, 2816, -1000,
	-1000, 76370, 949, 949, 949, -1000, -1000, -1000, -1000, 3537,
	3536, 3532, 3531, -1000, -1000, 977, 92177, 112851, 92177, -1000,
	204, -1000, 112851, -1000, 112851, 112851, 92177, -1000, 977, 112851,
	977, 112851, 977, 112851, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 210, -1000, 124572, -1000, 47585, -1000, -1000, 3530, 1560,
	-1000, 2815, -1000, 2814, -1000, 12, -1000, -1000, -1000, -1000,
	-1000, -1000, 1812, -1000, -1000, -1000, -1000, 92177, 92177, 92177,
	92177, 112851, 3061, -1000, 112851, 3056, 92177, -1000, -1000, 82906,
	-1000, 2425, 2813, -1000, -1000, -1000, -1000, -1000, -1000, 1399,
	2199, -1000, 2483, -1000, 1467, -1000, -1000, -1000, 124572, 52160,
	-1000, -1000, 124572, 1730, -1000, 50455, 49881, -1000, -1000, 1557,
	92177, 2546, -1000, 2546, -119, -1000, 122627, 2477, 92177, -1000,
	-1000, -1000, -1000, -1000, 901, 1123, 1123, 1375, 1375, 1375,
	1375, 3273, 5122, 6894, 796, 7411, 7411, 4938, 4938, 4938,
	4938, 4938, 7411, 758, 764, 764, 758, 758, 758, 758,
	758, 764, 764, 764, 7411, 7411, 7411, 764, 125000, 124937,
	11883, 47585, 47585, 1207, 1844, 543, 10261, 47585, 7232, 7232,
	7232, 7232, -1000, 2142, -1000, -1000, -1000, -1000, 2782, 645,
	51603, 51603, -1000, -1000, -1000, -1000, 26621, 47585, -1000, -1000,
	-1000, -1000, 36475, -1000, -1000, 8937, -317, 429, -1000, 198,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 416, -108, 72, -1000, 47585, 47585, 47585,
	415, -1000, 197, 47585, 112851, -1000, 119341, 766, -104, -1000,
	-107, 1424, -1000, 47585, -1000, -1000, 1206, -1000, 1202, 1201,
	1199, -1000, 641, 406, -1000, 196, -1000, 2085, 640, 639,
	47585, -1000, -1000, -1000, -1000, -1000, 121908, -1000, -1000, 121867,
	-1000, -1000, 121487, -1000, -1000, 121446, -1000, -1000, -1000, 124308,
	17470, 16868, 15858, 8748, 13152, 11443, -112, 404, -121, 402,
	894, 893, 401, 397, 396, -123, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -128, 395,
	-1000, 2781, -108, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 392, -1000, 389, -1000, 124201, -108, 387, 7663, -1000,
	51603, 51603, 51603, 51603, -1000, 377, -1000, 122499, -1000, 123937,
	35901, 35901, 35901, 372, 123572, 47585, -108, -129, -1000, -130,
	-1000, -1000, 508, -131, 980, 35315, 54396, 24902, -1000, 980,
	980, 47585, -1000, 47585, 2498, -1000, -1000, -1000, -1000, 2497,
	2254, 2586, 55491, -1000, -1000, -1000, -1000, 101939, -1000, 3411,
	2625, -1000, 101939, -1000, -1000, 112851, 517, -1000, 101939, 101939,
	24902, 871, -1000, 871, 101939, 691, -1000, -1000, -1000, -1000,
	-1000, 363, 61566, 72, 193, 24902, 979, -1000, -1000, 2611,
	2611, 2611, 2611, -1000, -1000, 112851, 1197, -45, -163, -1000,
	3390, -1000, 1942, -1000, 67554, -1000, 782, 1142, 24902, -1000,
	-1000, -1000, 638, -1000, 3432, 3432, -1000, 3432, 112851, 2774,
	141, -1000, 128, 71364, 71364, 3529, -1000, -1000, 214, -1000,
	92177, 214, 214, -1000, 92177, 92177, 2144, -1000, 228, -1000,
	224, -1000, -1000, -61, -1000, 990, 33007, -1000, 1262, -1000,
	-1000, 1538, -1000, 1883, -1000, 1172, -1000, -1000, -1000, -1000,
	33007, -1000, 1914, 112851, 112851, 92177, -1000, 112851, -1000, 2053,
	71364, -1000, 2313, 115551, 2306, 67554, 112851, -1000, -1000, 636,
	916, 2474, 2473, 1069, 112851, 112851, 2472, 115011, 114471, -1000,
	3528, 112851, 1950, 47585, 3221, 2089, 2097, 210, 210, -1000,
	210, 210, 210, -1000, 633, 1304, 92177, 92177, 112851, 71364,
	92177, 1884, -1000, -1000, -1000, -1000, -1000, 83446, -1000, -1000,
	3442, 3439, -1000, 1377, -1000, -1000, -1000, 1377, 2223, 1837,
	112851, 71364, 92177, 71364, 112851, 112851, -1000, 1636, 112851, 1483,
	-1000, 822, 1953, 210, 210, -1000, 210, 210, 210, 627,
	24902, 1846, -1000, 2869, 112851, 3471, 113931, 3470, 112851, 112851,
	112851, 71364, 3136, 112851, 112851, 71364, 4763, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 72478, 1081,
	979, 1633, 1191, 1189, 82906, 58793, 960, 58793, 2590, -1000,
	-1000, 22111, -1000, 124572, 124572, -1000, 124572, -1000, 68103, 112851,
	-1000, 1016, 112851, 78544, 937, 2912, 63750, -154, 949, 76370,
	92177, -42, 2537, 112851, -1000, -1000, 2223, 2910, 517, 2312,
	-1000, 76370, 3371, 2908, 626, 3527, 3526, -1000, 92177, 2227,
	2307, -1000, -1000, 113391, 2915, 822, 112851, 980, 55491, 1870,
	-1000, 62113, 1034, 112851, 1749, 111, -1000, -1000, -1000, -5,
	112851, -1000, 800, -1000, -1000, 6557, 6557, 949, -181, 624,
	-1000, 862, 856, 59350, 76370, -137, -1000, -1000, -1000, -1000,
	2306, 92177, 112851, 1263, 2583, 112851, -139, -1000, 192, 623,
	-1000, 3165, -1000, -157, -1000, 976, 58793, 2772, 2770, -1000,
	-1000, 989, -1000, 1265, 949, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -29, 112851, -154, -154,
	-44, -45, -1000, 977, -1000, 977, -1000, 977, -1000, 124572,
	-1000, -1000, 1497, 1486, 112851, -1000, 24902, 112851, 92177, 24902,
	92177, 2812, 2810, -1000, -1000, -1000, 112851, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1085, -1000, 1730, 2190, -1000, 621,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2414,
	-1000, -46, 32433, 877, -1000, -1000, 92177, -30, 47585, 47585,
	10080, 6053, 47585, 51603, 51603, -1000, 47585, 5591, -1000, -1000,
	-1000, -1000, -1000, 2756, 620, 47585, 67554, 7600, 6979, -1000,
	353, 11142, 758, -1000, 47585, -1000, 500, -1000, 351, 34741,
	-1000, 123201, -54, -142, -1000, 18747, -108, -145, -1000, -1000,
	779, -1000, 2966, -1000, 47585, 123308, 2367, 1854, 1740, 1579,
	3432, 3467, 21553, -1000, 65375, 994, 2109, 121066, -1000, -1000,
	-1000, -1000, 67554, 67554, 47585, 47585, -1000, 47585, 47585, 47585,
	-1000, -1000, -1000, 3432, 879, -1000, -1000, -1000, 879, -1000,
	-1000, 1377, -1000, 1377, -1000, 47585, -1000, -1000, 2747, 47585,
	-1000, 67554, 67554, 51603, 51603, 51603, 51603, 51603, 51603, 51603,
	51603, 51603, 51603, 51603, 51603, 51603, 51603, 51603, 51603, 51603,
	51603, 51603, 51603, 2457, 51603, 3413, 3413, 3413, 940, -1000,
	2775, 2747, 47585, 47585, 67554, 350, 349, 348, -1000, 47585,
	-108, -1000, -1000, 6316, 613, -1000, 2400, -1000, 2690, -1000,
	47585, -1000, -138, -1000, 2507, -1000, -1000, 2690, 2690, -151,
	124572, 55491, 55491, -1000, 611, 47585, 2493, -1000, -1000, 762,
	-318, -1000, 853, -1000, -1000, -1000, -1000, -1000, 517, -1000,
	-1000, -1000, 190, 101939, 101939, 745, -1000, -152, -1000, -1000,
	-158, -1000, 3370, 347, 24902, -1000, 980, 2558, -1000, -1000,
	-1000, -1000, -1000, -1000, -154, 112851, 112851, 2154, 3466, -1000,
	3437, 778, 744, 187, 3432, 346, 342, 340, -154, 112851,
	112851, 112851, -1000, -1000, -1000, -1000, 214, -1000, -1000, -1000,
	211, -1000, -1000, -1000, -1000, 2570, -1000, -47, -1000, -1000,
	-1000, 47585, -1000, -1000, 3161, 1185, 1184, -1000, -1000, -1000,
	-1000, 2757, -1000, 2907, -1000, 2303, -1000, 1041, -1000, 1566,
	-1000, 47585, 609, 2581, 608, 607, 3521, 2088, 3520, 1070,
	2905, 2144, 2904, 2144, -1000, -1000, -1000, 918, -1000, 124572,
	2089, -1000, 606, 605, -1000, -48, 1589, 1811, 1181, 988,
	-1000, -1000, -1000, -1000, 47585, 47585, 101399, -1000, 466, 3153,
	-31, -1000, -1000, -1000, 1625, 1175, 1173, -1000, -1000, -1000,
	-1000, 2223, 1606, 1171, 1169, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 987, -1000, 2864, 2862, 892, 112851, -1000, 985,
	-1000, -1000, -1000, -1000, 47585, -1000, -49, 1167, 3291, 2302,
	92177, -1000, 2144, 2898, 1166, -1000, 1165, -1000, -1000, -1000,
	3304, 3299, 1168, -1000, -1000, -1000, -1000, -1000, 71921, -1000,
	112851, 71364, 92177, 1642, 869, -1000, 2554, 869, 960, 2744,
	-1000, 2533, 984, 92177, 3519, 336, -168, -50, 67554, 3368,
	-1000, 2253, 584, 92177, 882, -1000, 3411, -1000, -1000, -1000,
	983, -1000, 3280, 92177, 3367, 2897, 979, 210, 92177, 3450,
	-1000, -1000, 3366, 92177, 2894, 2225, 2301, 2441, 822, 77464,
	979, 2107, -60, -1000, 1749, 34155, 3140, -169, -1000, -1000,
	-1000, 980, 64830, 55491, 47585, 3516, -174, -1000, -1000, -1000,
	-1000, -1000, 99232, 99232, 76370, 76370, 76370, 949, 112851, 112851,
	78544, -1000, -1000, 603, 112851, 112851, 602, -1000, 112851, 112851,
	3515, 76370, -51, 600, -1000, 847, 846, 845, -1000, -1000,
	-1000, -1000, -1000, -1000, 976, -1000, -157, 58793, 210, -1000,
	2150, 92177, -1000, 20995, -1000, -1000, -1000, -1000, -1000, -1000,
	977, -1000, -1000, 1970, 2265, 1970, 1742, 1738, -1000, -1000,
	2184, -1000, -1000, -1000, -1000, 2536, 3133, 24902, 3278, 7232,
	47585, 47585, 5202, 5408, 565, 7232, 47585, 47585, 67554, 6178,
	-176, 47585, 47585, -1000, 47585, 743, 124572, -1000, 3464, 47585,
	335, 334, -1000, -1000, -1000, 3430, -1000, -1000, -1000, 124572,
	47585, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 331, -1000,
	129, -1000, -1000, -1000, 118791, -1000, 47585, 329, 3214, -1000,
	327, 326, 10537, 6783, 121025, 120645, 120604, 325, -1000, -1000,
	317, 314, 124572, 2775, 124572, -1000, -1000, 944, 944, 1386,
	1386, 1386, 1386, 3413, 473, 1006, 391, 601, 601, 601,
	431, 940, 940, 601, 601, 601, 940, 2743, 2462, 588,
	461, -1000, -1000, 124572, 124572, 313, -1000, -1000, -1000, -108,
	311, 6316, -1000, 2679, 3213, 124572, -1000, 55491, 2679, 2679,
	-1000, -1000, 2254, 112851, 124572, 55491, -1000, 2625, -1000, 19316,
	-1000, 24902, -1000, -1000, -1000, -1000, 3411, -1000, 61566, -1000,
	586, -1000, 73, -1000, 2558, -1000, 842, -1000, -1000, 76370,
	76370, -154, -166, -1000, -1000, 741, 3513, 770, 24902, 307,
	-1000, -1000, -1000, -154, -154, -154, -1000, -1000, -1000, 3071,
	124572, 112851, 112851, 1425, 100859, 112851, 2892, -1000, 1848, -1000,
	1069, 120224, 56036, -1000, 56036, 112851, -1000, -1000, -1000, 1900,
	1429, 3511, 1102, -1000, 3189, 112851, -1000, 112851, -1000, -1000,
	-1000, 112851, 112851, 92177, 112851, -1000, 71364, 2876, -182, 124572,
	-52, -1000, 841, -1000, 1394, -1000, 20437, 112851, 71364, 92177,
	112851, 71364, 92177, 2070, -1000, -1000, 2855, -1000, 2874, -185,
	24902, -1000, 3463, 3456, 2890, 3193, -1000, 112851, 3455, 112851,
	92177, 3070, -1000, -1000, -1000, -1000, -1000, 1599, 1162, 1160,
	960, -53, 585, -1000, 840, -1000, -1000, 836, -1000, 960,
	-1000, 76370, 58793, 3507, 517, -1000, 2557, -1000, 97044, 2128,
	210, -1000, 3506, 99779, 578, -1000, 2146, -1000, 738, -1000,
	2385, 71364, 2223, 210, 92177, -1000, -1000, 517, 303, -55,
	-1000, 2953, 1063, 24902, 92177, 2887, 2445, 822, 77464, -1000,
	1249, 2535, -1000, -57, -1000, 583, 210, 2107, -1000, -60,
	124572, -1000, 835, -1000, -190, -1000, -1000, 297, -1000, 3067,
	3066, -1000, 2687, 56036, 577, 575, 112851, 3065, -1000, -1000,
	-195, 2393, 2393, 76370, 58793, 76370, -1000, 976, 869, -1000,
	2246, -1000, -1000, -1000, -1000, -1000, 24902, 1647, -1000, 574,
	573, -1000, -1000, -1000, -1000, 3133, 7232, 7232, 47585, 47585,
	47585, 7232, 6178, -196, -1000, 7232, 7232, -108, -1000, -1000,
	123201, -1000, -1000, -1000, 124572, -1000, 19879, 1985, -1000, 120183,
	-1000, 32433, -1000, -1000, 47585, 47585, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 51603, 2734, 572, 67554, -1000, -1000,
	294, 992, 47585, 49307, 2507, 992, 992, -1000, -201, -1000,
	-1000, -1000, 3411, 73, -1000, -1000, 3505, 24902, -1000, 76370,
	-1000, -1000, 3504, 769, -1000, 3503, -1000, -1000, -1000, -1000,
	-1000, 2607, 3362, -1000, 1779, -1000, 112851, -1000, 112851, -1000,
	24902, 112851, 2739, 1275, -1000, 916, 2465, 571, 51603, 92177,
	795, -1000, 3328, 2669, -203, -1000, 112851, 47585, 112851, -204,
	-206, 2285, -1000, -1000, 1259, 47585, -1000, -1000, -1000, 67554,
	570, 2144, 2144, -209, -211, -1000, -1000, -1000, 47585, 1141,
	112851, 33581, -1000, 3500, 3153, -1000, -1000, -1000, -1000, -1000,
	-1000, 112851, -1000, 47585, 1136, -1000, -1000, -1000, 3453, 2144,
	24902, 2144, -1000, 2144, 3193, 1098, 112851, 71364, 92177, -1000,
	2501, 2501, 76370, 58793, -1000, -61, 960, -1000, 3361, 2562,
	3498, -1000, -1000, -1000, -1000, 2464, -1000, -1000, 112851, 2460,
	951, -1000, -212, -1000, 833, 831, 78544, 937, 922, -1000,
	-69, 567, -1000, 825, -1000, -1000, -1000, -1000, 517, 3356,
	-1000, 3451, 562, 552, 112851, 2221, 545, 24902, 3109, 822,
	77464, -1000, 2915, 1749, -1000, 2291, 112851, 3105, -1000, 2535,
	543, -1000, 949, 542, 540, 2257, 2257, -214, 56036, 56036,
	-220, 538, 949, -1000, -222, -1000, -1000, -1000, -1000, -1000,
	-77, -1000, 858, 838, -1000, -1000, 92177, 92177, 47585, 47585,
	-1000, 7232, 7232, 7232, -1000, 289, -1000, -1000, 2107, 3212,
	-1000, -78, 119803, 119762, 5320, 51603, 67554, -223, -1000, -1000,
	112851, 124572, -90, -1000, 124572, 536, 534, 412, -1000, -1000,
	-1000, 599, -1000, -1000, -1000, 3497, -1000, 100319, 112851, -1000,
	-1000, 1974, -1000, -1000, -1000, 112851, 2300, -1000, -1000, -1000,
	1068, 47585, 461, 532, 47585, -1000, 3355, -1000, 2555, 2737,
	1903, 56036, -1000, 3133, -1000, 119382, -1000, 1023, 1794, -1000,
	-1000, -1000, 124572, 3193, 56036, -1000, -1000, 530, 529, 124572,
	528, 823, 2726, -1000, -1000, -1000, -1000, 124572, 527, 3291,
	-1000, -1000, -1000, -1000, 2144, 92177, -1000, -1000, -1000, -1000,
	-225, -1000, -1000, 1872, 210, 1966, 2602, -1000, 2128, 525,
	-1000, -1000, 2211, 2563, -1000, 99779, 33007, 33007, 287, 3352,
	922, -1000, 3408, -1000, 3052, 3052, 47585, 3325, 210, -1000,
	3450, 56036, -1000, 92177, 56036, 2218, 1911, 2428, 77464, -1000,
	2441, -1000, -1000, -228, 112851, 1749, -1000, -1000, 76370, 76370,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1023, -230, -231, -1000, 76370, -1000, -1000, 2246, -1000,
	112851, -1000, 112851, -1000, -1000, -233, -236, -1000, 1980, 47585,
	32433, -1000, -1000, 5320, -238, -1000, -101, -1000, 3318, 49307,
	3495, 3493, 3490, -1000, -1000, -1000, 1776, -1000, -1000, -1000,
	2886, 2670, 14420, 2390, 112851, 12262, -1000, 2736, -1000, -1000,
	2562, 522, -1000, -1000, -1000, -1000, 877, 112851, 2562, 2664,
	92177, 1064, -243, 1970, 1970, 47585, 31859, 2069, 47585, -1000,
	-1000, 3193, -1000, 2717, 3422, -1000, 937, -1000, 2064, 112851,
	-1000, 3170, -1000, 3063, -1000, -1000, -1000, 2557, 210, -1000,
	-1000, -1000, -246, 124572, 210, -1000, 285, -249, 1063, -251,
	92177, 1940, -1000, 822, -1000, 2445, 980, -1000, -1000, -252,
	-254, 1903, 1023, 1953, -257, -1000, -260, -262, -1000, -1000,
	283, 48733, 48733, 48733, -108, -119, -1000, 112851, 520, -1000,
	-1000, -1000, -1000, -1000, 2852, 959, -1000, 2212, 1741, 212,
	1048, -1000, -1000, 1953, 112851, -1000, -1000, -1000, 958, 517,
	-1000, 47585, 1023, -265, -1000, 1031, -267, -1000, 1028, -273,
	-1000, 2723, -1000, -274, 2144, 957, 3272, -1000, -1000, -1000,
	2211, 92177, -279, -1000, -1000, 2328, -1000, 2562, 951, -1000,
	-1000, -1000, 1023, 516, 1903, 514, 1390, 822, -1000, -1000,
	1377, 3109, 2986, 949, 949, 2562, 1903, 948, -1000, 949,
	-1000, -1000, -1000, 2927, -1000, 52717, 2226, 1719, 122326, 2927,
	2927, -1000, -1000, 112851, 3261, -1000, 2217, 2215, 1484, -1000,
	-1000, -1000, -1000, -1000, -1000, 2669, -280, 3257, 2390, 124572,
	2562, -1000, 1970, 2600, -1000, 1970, 2720, -1000, 1991, -1000,
	-1000, -1000, 1666, 3418, 2419, 513, -1000, 112851, 1732, 1703,
	3482, 1966, 2211, 1903, 56036, 2562, 56036, -1000, -1000, 112851,
	-1000, 1911, 1308, -1000, -1000, 1953, 2562, 980, 512, -1000,
	-1000, 1892, 3381, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 820, -1000, 3036, -1000, 1084, 2180, 2180, 980, -1000,
	815, 2212, -1000, -1000, 506, -1000, 503, -1000, 2138, -1000,
	-1000, -1000, -1000, 112851, -1000, -1000, 3481, -1000, 937, -1000,
	2562, -281, 1953, -282, -1000, -154, 1940, -1000, 1475, 948,
	1953, -1000, 1652, -1000, -1000, 2095, 48159, 47585, -1000, 3393,
	-1000, -1000, 2489, -1000, -1000, 47585, 2669, 47585, 47585, 63205,
	-291, -1000, 2211, 1953, 1023, 948, 1903, 1390, 64830, 980,
	948, -1000, -1000, -1000, 124572, -1000, -1000, -1000, 124572, -1000,
	-297, -304, -181, 99232, 2112, 2419, 948, 1903, 980, 2562,
	-1000, -268, -1000, 980, 1953, 1124, -305, -1000, -1000, -1000,
	-1000, 980, 2562, -1000, 1953, -1000, -1000, -1000, -1000, 499,
	-1000, -1000, 1953, 948, 47585, 948, 980, -307, 980, -1000,
	1953, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4273, 4271, 4270, 4269, 4268, 4267, 4266, 4264, 4263,
	4262, 4260, 4259, 4255, 4254, 4253, 4251, 4250, 4249, 4248,
	4247, 4246, 4244, 4243, 4239, 4236, 4235, 4233, 4230, 4229,
	4228, 4227, 4226, 4224, 4223, 4220, 4216, 4215, 4211, 4210,
	4208, 4205, 4204, 4203, 4201, 4199, 4196, 4194, 4188, 4184,
	4183, 4181, 4180, 4178, 4177, 4176, 4175, 4174, 4173, 4172,
	4168, 4167, 4166, 59, 4164, 4163, 4160, 4157, 4156, 4153,
	4152, 4150, 4149, 4147, 4145, 4144, 4142, 4141, 4140, 4139,
	4138, 4136, 4135, 4134, 64, 4133, 265, 4132, 4130, 4129,
	4121, 4117, 4115, 4114, 4113, 4112, 4111, 4109, 4108, 264,
	4107, 113, 152, 4106, 4105, 3691, 4102, 4101, 263, 4100,
	4097, 4096, 4094, 270, 4092, 4090, 4087, 4082, 4081, 4080,
	4079, 4075, 4071, 4070, 4068, 118, 205, 4067, 4065, 1245,
	4062, 4059, 4058, 4057, 4054, 4053, 4052, 4051, 4050, 4047,
	238, 4046, 262, 4045, 4044, 4041, 4035, 4034, 4029, 4027,
	4026, 4023, 4022, 4021, 4020, 4019, 4018, 4013, 4012, 4011,
	4009, 4007, 4006, 4005, 4003, 4002, 3999, 3998, 3996, 3995,
	3992, 3991, 3987, 3984, 3983, 3982, 3980, 3974, 3966, 3964,
	236, 266, 176, 3962, 3961, 261, 260, 3960, 3959, 3954,
	3953, 3952, 130, 6, 39, 3948, 3946, 86, 85, 80,
	97, 95, 93, 3945, 104, 3944, 135, 72, 3943, 15,
	2, 259, 243, 12966, 237, 3940, 3939, 3938, 235, 183,
	3935, 227, 3934, 3931, 3929, 3928, 3923, 69, 52, 171,
	164, 162, 159, 711, 3921, 141, 99, 78, 56, 43,
	9, 70, 202, 22, 3919, 246, 8, 126, 1, 45,
	3917, 3916, 3915, 3913, 3605, 131, 3911, 252, 231, 158,
	3907, 3906, 3904, 1149, 3903, 3902, 66, 3901, 193, 84,
	124, 31, 115, 3899, 138, 36, 3898, 167, 57, 3897,
	163, 96, 100, 11996, 11468, 3896, 109, 60, 122, 724,
	179, 157, 186, 229, 154, 150, 189, 200, 198, 169,
	204, 3894, 244, 3893, 3313, 73, 175, 143, 5924, 3892,
	3888, 3887, 82, 190, 105, 3886, 3885, 71, 11, 14,
	4, 7, 123, 23, 20, 16, 3883, 25, 110, 48,
	27, 3882, 26, 3881, 3878, 3877, 3876, 3874, 40, 148,
	3873, 268, 3871, 102, 51, 44, 3870, 30, 212, 3869,
	214, 120, 3868, 3867, 242, 201, 173, 3866, 68, 223,
	3865, 3864, 3863, 3860, 3858, 121, 3, 119, 3857, 3854,
	139, 3851, 49, 228, 185, 3850, 63, 3849, 3846, 166,
	108, 129, 256, 170, 225, 112, 213, 177, 216, 3843,
	3842, 3841, 199, 3837, 3836, 209, 134, 3829, 3828, 194,
	273, 91, 46, 77, 226, 81, 181, 151, 3820, 191,
	3818, 3814, 269, 172, 208, 12, 17, 89, 116, 3813,
	5, 222, 147, 220, 106, 3811, 6835, 1822, 2891, 3810,
	3808, 127, 103, 79, 117, 149, 249, 67, 3805, 3802,
	161, 3800, 3799, 3798, 3796, 174, 3792, 3791, 3790, 142,
	144, 211, 3789, 94, 76, 50, 21, 140, 247, 253,
	111, 210, 168, 241, 3788, 3787, 3786, 182, 3785, 90,
	132, 153, 187, 240, 55, 3784, 218, 3783, 133, 2197,
	62, 155, 3782, 219, 3780, 3779, 3778, 3777, 3776, 3774,
	3772, 706, 224, 3771, 3769, 3768, 35, 178, 3766, 248,
	137, 184, 107, 54, 3765, 88, 2783, 3764, 291, 2034,
	74, 250, 192, 251, 3763, 1696, 58, 3762, 0, 13854,
	8058, 10599, 13795, 3761, 4125, 3760, 3759, 3758, 203, 136,
	3756, 3755, 3754, 98, 3753, 83, 3752, 3750, 65, 3746,
	34, 18, 19, 32, 29, 320, 257, 3745, 3743, 28,
	125, 145, 3742, 255, 215, 3739, 3738, 3737, 3736, 92,
	3735, 41, 3734, 38, 3733, 3732, 47, 13, 33, 3731,
	3730, 195, 3727, 207, 230, 3726, 156, 3725, 3332, 128,
	3724, 3723, 3721, 53, 61, 245, 87, 3719, 277, 3718,
	3250, 3717, 3715, 24, 3714, 3713, 234, 196, 165, 206,
	3712, 3711, 160, 3710, 3709, 3707, 271, 3705, 3704, 3703,
	37, 3702, 10, 3701, 3698, 197, 3091, 3695, 3694, 42,
	3689, 180,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 585, 585, 597, 597, 22, 22, 42, 42,
	23, 43, 16, 586, 586, 586, 586, 35, 24, 44,
	28, 28, 28, 28, 28, 195, 195, 195, 195, 21,
	21, 38, 38, 230, 230, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 581, 581, 232, 232, 231, 225, 225, 226, 226,
	587, 587, 233, 233, 233, 235, 235, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 480, 480, 480,
	513, 513, 512, 512, 512, 511, 511, 601, 601, 602,
	602, 602, 602, 602, 128, 128, 378, 378, 378, 52,
	52, 52, 52, 52, 576, 576, 197, 197, 197, 199,
	199, 198, 198, 198, 198, 198, 75, 75, 592, 592,
	593, 593, 591, 594, 594, 594, 196, 196, 196, 124,
	124, 124, 124, 124, 124, 125, 125, 126, 126, 200,
	200, 200, 202, 202, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 206, 15, 15, 15, 15, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 104, 104, 515,
	515, 516, 516, 191, 191, 192, 192, 192, 192, 193,
	193, 194, 194, 194, 66, 66, 203, 203, 205, 205,
	204, 204, 204, 204, 204, 54, 54, 54, 54, 54,
	54, 54, 55, 55, 55, 55, 55, 56, 56, 56,
	56, 56, 56, 57, 57, 57, 57, 57, 57, 64,
	64, 64, 64, 64, 182, 182, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 72,
	72, 72, 72, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 604, 604, 605, 605, 606, 606, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 81, 81, 340, 340, 303, 303,
	82, 82, 82, 83, 83, 84, 84, 68, 68, 574,
	574, 355, 355, 471, 471, 69, 582, 582, 582, 584,
	584, 583, 583, 86, 86, 377, 377, 87, 87, 87,
	87, 87, 87, 88, 88, 88, 88, 88, 88, 88,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 96, 96, 96, 96, 96, 97,
	97, 97, 94, 94, 94, 91, 91, 91, 90, 90,
	90, 95, 95, 95, 573, 292, 292, 93, 93, 93,
	92, 92, 92, 356, 356, 98, 98, 98, 98, 304,
	99, 99, 99, 99, 99, 99, 99, 99, 102, 102,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 473, 473, 100, 100, 100, 438, 438,
	105, 105, 105, 393, 393, 106, 106, 106, 106, 106,
	107, 107, 107, 107, 107, 107, 107, 107, 127, 127,
	127, 127, 127, 127, 127, 578, 578, 348, 348, 257,
	257, 257, 257, 117, 117, 117, 117, 118, 118, 118,
	119, 119, 187, 187, 134, 134, 134, 134, 134, 133,
	133, 133, 133, 133, 133, 58, 58, 58, 59, 59,
	60, 60, 61, 61, 62, 62, 63, 63, 63, 63,
	63, 136, 136, 598, 598, 138, 135, 135, 135, 137,
	137, 137, 137, 139, 140, 140, 140, 140, 140, 140,
	140, 140, 141, 141, 505, 505, 364, 364, 503, 503,
	525, 525, 504, 504, 310, 310, 310, 310, 310, 311,
	311, 311, 514, 514, 514, 514, 514, 514, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 188, 188, 189,
	190, 190, 190, 190, 190, 165, 165, 165, 181, 181,
	181, 181, 181, 181, 181, 168, 168, 168, 152, 152,
	143, 143, 143, 143, 143, 143, 143, 147, 147, 147,
	147, 147, 147, 147, 147, 144, 144, 154, 154, 154,
	154, 154, 148, 148, 149, 149, 149, 149, 175, 175,
	151, 151, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 145, 145, 145, 145, 156, 156, 156, 156, 400,
	400, 400, 180, 180, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 178,
	178, 178, 178, 178, 178, 595, 595, 596, 596, 172,
	172, 172, 172, 172, 172, 452, 452, 166, 166, 166,
	166, 171, 171, 171, 171, 174, 174, 174, 174, 383,
	383, 163, 163, 163, 164, 164, 164, 169, 169, 170,
	167, 167, 173, 173, 173, 173, 146, 146, 146, 146,
	608, 608, 608, 176, 176, 162, 162, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 609, 609,
	158, 158, 158, 157, 157, 157, 157, 160, 160, 161,
	161, 161, 161, 161, 161, 159, 150, 179, 575, 575,
	571, 571, 571, 571, 571, 571, 571, 571, 572, 572,
	572, 572, 577, 577, 110, 110, 110, 110, 110, 120,
	120, 120, 120, 120, 111, 111, 111, 111, 111, 113,
	113, 112, 112, 112, 112, 76, 76, 76, 76, 76,
	14, 14, 14, 77, 77, 248, 248, 209, 209, 209,
	329, 329, 210, 210, 318, 318, 318, 318, 207, 207,
	208, 208, 78, 78, 610, 610, 610, 588, 588, 588,
	589, 589, 589, 589, 589, 589, 312, 312, 313, 313,
	418, 418, 418, 418, 418, 316, 316, 316, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 319, 319, 234,
	234, 234, 327, 328, 328, 320, 320, 326, 325, 325,
	324, 324, 323, 323, 321, 322, 322, 322, 331, 331,
	330, 333, 333, 332, 417, 534, 534, 536, 536, 536,
	536, 536, 536, 536, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 401, 401, 611, 611,
	532, 532, 532, 533, 528, 528, 529, 529, 529, 529,
	529, 314, 314, 315, 315, 315, 315, 530, 531, 346,
	346, 456, 535, 535, 537, 537, 539, 612, 612, 612,
	612, 612, 612, 613, 613, 613, 416, 416, 415, 415,
	338, 338, 540, 540, 540, 540, 541, 541, 541, 541,
	541, 544, 543, 542, 542, 542, 542, 542, 80, 80,
	80, 380, 380, 379, 379, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	184, 184, 260, 260, 74, 74, 74, 12, 12, 12,
	590, 590, 590, 79, 79, 79, 79, 79, 79, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 580,
	580, 579, 579, 261, 261, 615, 615, 85, 85, 85,
	85, 85, 85, 85, 85, 474, 474, 475, 475, 73,
	73, 73, 73, 73, 402, 402, 399, 399, 398, 398,
	345, 345, 454, 454, 454, 455, 265, 265, 266, 266,
	227, 227, 227, 30, 29, 20, 20, 25, 25, 26,
	26, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	27, 27, 46, 46, 46, 46, 47, 47, 47, 47,
	50, 50, 51, 51, 45, 45, 45, 45, 48, 48,
	41, 41, 599, 599, 600, 600, 116, 116, 121, 121,
	121, 121, 121, 122, 122, 122, 122, 123, 123, 123,
	123, 132, 132, 183, 183, 183, 183, 183, 183, 183,
	53, 53, 53, 53, 65, 65, 65, 65, 130, 617,
	617, 617, 131, 131, 131, 616, 616, 258, 258, 412,
	412, 413, 413, 618, 618, 414, 414, 414, 414, 414,
	251, 250, 252, 252, 253, 253, 71, 71, 71, 243,
	243, 242, 240, 240, 517, 517, 245, 245, 245, 246,
	246, 236, 236, 237, 237, 238, 238, 239, 239, 249,
	249, 619, 619, 108, 108, 108, 186, 186, 302, 302,
	302, 409, 409, 409, 339, 339, 272, 272, 411, 411,
	411, 411, 376, 376, 376, 185, 185, 353, 353, 366,
	366, 367, 367, 468, 468, 368, 114, 114, 115, 115,
	129, 129, 213, 213, 211, 211, 211, 211, 211, 211,
	211, 211, 218, 218, 219, 219, 220, 220, 221, 222,
	222, 222, 222, 357, 357, 223, 223, 223, 212, 212,
	212, 214, 214, 214, 214, 214, 214, 214, 217, 217,
	217, 217, 224, 224, 224, 216, 216, 551, 551, 551,
	553, 553, 555, 555, 554, 554, 550, 550, 552, 552,
	614, 614, 382, 382, 382, 336, 337, 334, 334, 335,
	335, 343, 343, 341, 342, 342, 344, 344, 453, 453,
	453, 228, 228, 228, 373, 373, 373, 373, 374, 374,
	405, 405, 403, 403, 403, 403, 404, 404, 406, 406,
	406, 407, 407, 408, 408, 370, 370, 371, 371, 372,
	372, 372, 372, 434, 434, 215, 215, 215, 350, 350,
	350, 351, 351, 424, 424, 424, 424, 424, 424, 425,
	425, 423, 423, 423, 423, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 458, 459, 459, 352, 352, 460,
	410, 410, 569, 569, 569, 570, 570, 451, 451, 461,
	461, 461, 461, 461, 461, 449, 449, 450, 450, 469,
	470, 470, 386, 386, 386, 386, 384, 384, 387, 387,
	387, 387, 387, 385, 385, 462, 462, 462, 462, 375,
	375, 463, 463, 463, 463, 464, 465, 465, 466, 466,
	419, 420, 420, 476, 476, 476, 476, 478, 349, 349,
	349, 349, 349, 527, 526, 526, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 493, 493, 493,
	493, 493, 493, 493, 479, 479, 479, 479, 479, 483,
	483, 483, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 484, 484, 489, 489, 490, 490, 490,
	485, 486, 491, 491, 491, 491, 620, 620, 495, 495,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 481,
	481, 481, 488, 488, 488, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 394, 394,
	396, 396, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 428, 428, 428, 428, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 545, 545, 545, 545, 545, 545, 545, 545,
	430, 430, 548, 548, 549, 549, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 547, 547, 547, 547, 547,
	547, 547, 547, 547, 547, 556, 556, 557, 557, 559,
	559, 560, 560, 561, 562, 562, 562, 563, 564, 564,
	558, 558, 565, 565, 565, 565, 566, 566, 567, 567,
	567, 567, 567, 568, 568, 568, 568, 568, 440, 440,
	441, 441, 447, 447, 447, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	309, 309, 308, 262, 262, 262, 262, 262, 262, 362,
	362, 360, 360, 360, 363, 363, 361, 361, 359, 359,
	358, 358, 437, 437, 435, 435, 439, 439, 388, 388,
	494, 494, 494, 494, 494, 494, 494, 494, 389, 389,
	389, 397, 390, 390, 391, 391, 391, 391, 391, 431,
	432, 392, 392, 392, 433, 433, 442, 446, 446, 445,
	444, 444, 443, 443, 421, 421, 422, 422, 369, 369,
	621, 621, 365, 365, 467, 467, 467, 467, 306, 306,
	354, 354, 305, 305, 297, 297, 298, 298, 298, 298,
	347, 347, 448, 448, 496, 496, 497, 497, 498, 498,
	499, 499, 500, 501, 502, 436, 436, 282, 281, 269,
	270, 280, 279, 278, 268, 271, 275, 276, 277, 273,
	274, 288, 287, 286, 241, 244, 293, 294, 294, 296,
	296, 295, 295, 284, 285, 472, 267, 299, 299, 300,
	300, 300, 301, 301, 301, 301, 263, 263, 264, 264,
	289, 289, 290, 291, 291, 283, 283, 283, 254, 254,
	254, 255, 255, 256, 256, 510, 510, 507, 507, 507,
	508, 508, 508, 509, 509, 509, 509, 506, 506, 506,
	506, 506, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 519, 519, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 521, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 523, 523, 523, 524, 524,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 0, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 4, 2, 3, 10, 3, 6, 4, 3, 1,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 3,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 6,
	8, 6, 6, 6, 9, 4, 3, 2, 2, 0,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 1, 12, 3, 1, 0,
	1, 1, 2, 3, 3, 0, 4, 6, 0, 5,
	7, 6, 8, 8, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 5, 2, 0, 1, 2,
	3, 1, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 4, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 6,
	3, 8, 3, 4, 3, 3, 4, 3, 4, 4,
	4, 3, 5, 7, 3, 3, 4, 3, 3, 3,
	3, 3, 2, 0, 1, 0, 1, 0, 4, 3,
	3, 3, 3, 3, 6, 4, 4, 4, 3, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 7, 3, 2, 0, 1, 3,
	3, 1, 0, 1, 2, 2, 1, 6, 5, 1,
	2, 1, 3, 2, 0, 7, 2, 5, 0, 1,
	3, 3, 1, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 6, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 1, 1, 3, 4, 6, 3,
	3, 5, 3, 1, 3, 2, 2, 2, 2, 1,
	2, 2, 5, 3, 3, 6, 6, 3, 1, 1,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	6, 4, 7, 7, 7, 9, 5, 2, 6, 4,
	7, 7, 7, 5, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 2, 6, 3,
	3, 4, 4, 3, 1, 3, 2, 3, 3, 1,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 6, 4, 3, 2, 3,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 4, 3, 4, 3, 3, 4, 4, 5, 0,
	1, 1, 1, 1, 3, 2, 3, 4, 3, 4,
	3, 5, 3, 4, 3, 4, 5, 3, 4, 3,
	4, 4, 5, 3, 3, 1, 1, 0, 2, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 4, 4, 3,
	1, 1, 1, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 4, 3, 4, 4, 5, 1, 1,
	10, 10, 3, 5, 5, 5, 3, 5, 6, 4,
	4, 5, 5, 2, 3, 2, 5, 4, 2, 0,
	1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 1, 2, 0, 1, 2, 1, 2, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 6, 5, 8, 3,
	6, 6, 3, 13, 16, 1, 0, 1, 2, 3,
	0, 2, 0, 4, 0, 4, 5, 4, 3, 3,
	1, 3, 10, 13, 0, 2, 3, 1, 1, 0,
	1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
	1, 1, 1, 2, 3, 3, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 8, 0, 1,
	1, 0, 2, 1, 0, 1, 0, 1, 1, 0,
	1, 4, 1, 0, 3, 7, 7, 1, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 2, 2, 2, 8,
	4, 2, 5, 5, 5, 2, 2, 0, 1, 3,
	11, 12, 9, 5, 3, 1, 5, 10, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 2, 2, 4, 7, 3, 4, 6, 3,
	1, 1, 1, 8, 10, 11, 7, 10, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 5, 2, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 12, 15, 3, 1,
	0, 4, 3, 0, 1, 1, 4, 4, 5, 1,
	0, 3, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 4, 8,
	11, 5, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 6, 4, 5, 4,
	1, 1, 3, 3, 1, 2, 4, 4, 2, 3,
	5, 5, 1, 3, 1, 0, 1, 2, 3, 2,
	4, 2, 3, 0, 2, 0, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 8, 8,
	8, 2, 4, 4, 4, 2, 2, 2, 2, 3,
	1, 3, 1, 2, 6, 7, 1, 0, 1, 0,
	1, 0, 1, 1, 0, 1, 5, 1, 0, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 3, 1,
	3, 3, 3, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 588, -101, -98, -66, -64, -105, -106,
	-87, -107, -100, -127, -132, -114, -115, -116, -128, -134,
	-183, -188, -189, -190, -3, -52, -54, -67, -86, -88,
	-99, -109, -108, -110, -117, -124, -120, -104, -58, -129,
	-133, -142, -184, -185, -186, 32, 31, 100, 80, 154,
	128, 137, 201, 381, 423, 434, 395, 142, 415, 400,
	-137, -138, 452, -53, -65, -131, -130, 73, 129, 409,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -603, 102, -552, -89,
	-92, -123, -607, 161, 219, -111, -112, 364, -118, -119,
	417, -121, -122, 419, 162, -60, -59, 156, -211, -213,
	-135, -136, -187, -143, -144, -145, -146, -147, -148, -149,
	-175, -150, -151, -152, -153, -154, -155, -159, -178, -156,
	-157, -158, -161, -160, -162, -167, -163, -164, -165, -166,
	-168, -169, -171, -172, -173, -174, -176, -177, 457, -170,
	-179, 518, 49, 472, 82, 146, 427, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -71, -73, -76,
	-77, -78, -85, -79, -80, -551, -90, -91, -94, -96,
	-97, -93, -95, 416, -214, -212, 585, 533, -17, -22,
	-23, -18, -19, -21, -24, -20, -25, -26, -27, -37,
	-42, -43, -39, -40, -38, -41, -44, -45, -46, -47,
	-48, -49, -50, -51, -29, -35, -36, -30, -31, -32,
	-33, -34, -16, -28, 554, 563, -217, -215, -216, -224,
	444, 541, 492, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, -304, 2, -284, -289, -290,
	-291, -283, -254, -521, -524, 4, -518, -522, 168, 229,
	328, 21, 23, 22, 24, 25, 26, 27, 29, 30,
	41, 42, 44, 45, 46, 47, 48, 49, 53, 55,
	59, 60, 61, 62, 63, 64, 68, 73, 74, 79,
	80, 81, 82, 83, 84, 85, 91, 88, 89, 90,
	92, 94, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 107, 108, 109, 117, 118, 119, 120, 121, 123,
	128, 129, 132, 127, 131, 133, 135, 136, 137, 140,
	141, 142, 144, 145, 147, 148, 149, 151, 152, 154,
	155, 156, 159, 157, 500, 158, 160, 161, 162, 163,
	166, 174, 175, 176, 181, 183, 184, 188, 189, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 202, 206,
	208, 209, 210, 211, 212, 218, 219, 221, 222, 223,
	224, 225, 230, 231, 232, 236, 233, 242, 243, 247,
	248, 249, 251, 255, 256, 257, 258, 259, 260, 262,
	264, 263, 266, 269, 270, 273, 277, 278, 282, 283,
	279, 284, 285, 287, 288, 291, 289, 292, 293, 290,
	294, 296, 297, 298, 299, 300, 301, 302, 303, 304,
	305, 306, 307, 295, 310, 308, 312, 313, 314, 326,
	323, 318, 319, 315, 320, 316, 317, 321, 322, 325,
	330, 331, 334, 216, 336, 337, 340, 358, 344, 345,
	346, 349, 350, 353, 356, 357, 359, 360, 361, 362,
	363, 364, 365, 366, 368, 369, 371, 372, 373, 375,
	376, 377, 379, 381, 382, 384, 385, 387, 388, 389,
	390, 391, 392, 393, 395, 397, 396, 398, 400, 402,
	403, 404, 409, 415, 411, 412, 413, 414, 416, 417,
	418, 419, 421, 422, 423, 425, 426, 427, 428, 430,
	432, 433, 437, 438, 454, 455, 474, 434, 435, 436,
	439, 440, 441, 442, 443, 447, 445, 446, 448, 449,
	450, 452, 453, 456, 457, 459, 460, 461, 462, 463,
	464, 465, 468, 470, 471, 472, 491, 473, 475, 479,
	480, 481, 482, 476, 477, 490, 484, 485, 487, 488,
	493, 494, 495, 496, 497, 498, 499, 501, 503, 511,
	512, 513, 515, 518, 519, 520, 521, 509, 523, 524,
	527, 528, 529, 532, 530, 531, 533, 535, 538, 539,
	540, 546, 545, 547, 550, 555, 556, 558, 559, 560,
	36, 50, 51, 54, 56, 58, 69, 70, 71, 75,
	124, 125, 153, 164, 165, 177, 190, 191, 203, 205,
	213, 214, 215, 237, 238, 240, 245, 267, 333, 335,
	351, 355, 370, 374, 378, 380, 394, 429, 466, 478,
	483, 504, 505, 506, 507, 514, 516, 541, 542, 543,
	548, 557, -304, 2, -284, 342, -277, 2, -254, -254,
	381, 28, 2, 28, 369, 446, 495, 497, 2, -578,
	-348, 2, 28, -257, -254, 102, 201, 444, -277, 2,
	-578, -348, 25, 2, -254, 2, 356, 22, 27, 66,
	77, 98, 140, 163, 185, 188, -606, 358, 388, 432,
	448, 490, 501, 515, 2, 545, 288, 445, 492, 229,
	120, 520, 439, -590, 437, 438, 356, 386, 425, 204,
	534, -258, 2, 434, -254, 288, 2, 588, 94, 278,
	74, 429, 449, -140, 512, -139, 504, 439, -141, -505,
	2, 310, -254, 588, 588, 588, 28, -267, -254, 492,
	229, 439, 120, 488, 588, 2, 492, 361, 545, 445,
	120, 391, 229, 520, 188, 140, 27, 126, 439, -590,
	288, -576, 2, -571, 4, -522, -518, -298, -297, 492,
	498, 120, -291, -283, 578, -290, 588, 588, 588, 2,
	248, 249, 390, 389, 449, 450, 588, 588, 588, 588,
	437, 2, 163, 22, 27, 66, 93, 98, 126, 185,
	188, 347, -604, 358, 388, 448, 490, 494, 501, 515,
	-589, 473, 68, 414, 439, -588, -590, 288, 520, 140,
	-398, 120, 278, 199, 528, 497, 495, 526, 132, 236,
	531, 530, 588, 588, -102, 2, 585, 32, 31, -101,
	-105, 142, 452, -206, 492, 241, 2, -254, 588, 588,
	2, 248, 249, 437, 438, 588, 588, 186, -571, 2,
	588, 588, 2, 248, 249, 437, 438, 241, 2, 68,
	441, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 2, -181, 449, 473, 210,
	47, 46, 74, 28, 387, 79, 362, 121, 148, 521,
	202, 229, 230, 256, 93, 94, -400, 44, 249, 68,
	248, 438, -595, 437, -452, 493, 440, 446, 487, 260,
	434, 512, 102, 535, 426, 560, 391, 392, 485, 404,
	279, 157, 187, 4, 120, 310, 451, 504, 278, 433,
	365, 84, -614, 2, 492, -616, 2, 512, 512, 2,
	-616, 2, -616, 2, -616, 2, -617, 512, 557, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, -212, -214, -213, 588,
	588, 588, 588, 588, 588, 588, -181, 449, 2, 74,
	28, -341, -343, 525, 239, 150, 348, -211, -213, 2,
	-551, -503, 2, -426, -525, -428, 576, 577, 569, 489,
	67, -308, 327, 561, -440, 126, 526, 342, -524, -429,
	-442, 153, 358, 429, -363, 8, 9, 5, 6, 7,
	-263, -430, -436, 517, 167, 332, -301, 589, 10, 585,
	-548, -213, -441, 37, 205, 65, -507, -300, -264, -479,
	240, -299, -283, -545, -546, 4, -518, -519, -508, -482,
	-490, -486, -487, -493, -254, -521, 77, 111, 112, 110,
	115, 114, 281, 280, 116, 113, 451, 534, 66, 36,
	213, 214, 245, 333, 215, 75, -547, 141, -520, 237,
	238, 466, 51, 394, 177, 125, 124, 335, 56, 54,
	542, -491, 122, 504, 505, 506, 507, 190, 191, 58,
	164, 165, 355, 378, 483, 514, 516, 203, 267, 43,
	106, 187, 235, 217, 244, 246, 250, 268, 271, 311,
	324, 329, 352, 354, 424, 458, -620, 543, 478, 69,
	70, -553, 396, -554, -277, -553, 588, 588, 590, 588,
	-334, -336, -337, 2, 28, 138, 585, 2, -457, 2,
	-458, -462, -213, 261, -461, 585, -459, 583, -284, 343,
	-549, 430, -545, -546, -263, -283, -300, 4, -518, -520,
	587, -338, 585, 120, 492, 78, 229, 163, -393, 585,
	-254, 28, 342, 508, 590, -335, 385, -438, 585, 342,
	186, 345, 60, 292, 2, 2, 2, 2, 2, 213,
	-254, 492, 119, 2, 259, 2, 2, 2, 2, 2,
	2, 2, -356, 213, 2, -284, 545, -356, 213, 2,
	-356, 213, 2, -399, 2, 87, -268, 213, 2, -254,
	-292, 213, 2, -287, -289, -296, 213, 2, -294, -254,
	-516, 213, 2, -515, -510, 10, -509, 5, 4, -518,
	-522, -519, -521, 77, -426, 2, -129, 2, 60, -254,
	545, 2, 2, 454, 2, 585, -140, 71, 512, 43,
	449, -413, 2, -414, -250, -251, -252, -469, -253, 247,
	384, 393, 564, 130, 327, 560, -503, -598, 186, 568,
	508, -503, -364, 587, 2, 2, 2, 2, 2, 2,
	-462, 213, -284, 2, -281, -506, 4, -518, -522, -519,
	-523, 28, 31, 32, 33, 35, 37, 38, 39, 40,
	57, 65, 66, 72, 76, 78, 87, 93, 102, 110,
	111, 113, 112, 114, 115, 116, 126, 130, 134, 138,
	139, 143, 146, 150, 167, 169, 182, 185, 186, 201,
	204, 207, 220, 234, 239, 241, 261, 265, 272, 280,
	281, 327, 332, 338, 342, 343, 347, 348, 367, 383,
	399, 420, 444, 451, 469, 486, 492, 502, 508, 510,
	517, 525, 526, 534, 536, 544, 549, 551, 552, 553,
	554, -524, 2, -462, 213, 2, -286, 213, -462, -289,
	2, -268, 2, -280, -506, 2, -305, 213, -284, -285,
	-289, -287, 2, 2, 2, 2, 2, -294, 2, -515,
	213, 2, 545, 241, 508, 590, -354, -297, -298, -502,
	8, -347, -254, 587, -426, 2, -129, -113, 2, 182,
	-426, 213, 2, -129, 213, 2, -426, 213, 2, -129,
	213, 2, -592, 2, -515, 213, -254, 2, 292, 2,
	2, 515, 2, 98, 492, 119, 2, 413, -605, 432,
	519, 2, 2, 2, 2, 2, 2, 2, 492, -273,
	2, -254, 182, 476, -294, 213, -295, 2, 445, -615,
	396, -515, 213, 2, 545, -287, 213, 2, -287, 229,
	243, -268, 213, 2, 497, 495, 497, 495, 186, 2,
	241, 2, 241, 2, -463, 2, -464, -458, -465, 583,
	343, -473, 2, -472, -509, 541, -102, 585, -102, 585,
	449, 585, -515, -284, -284, -426, 2, -129, -113, 2,
	-426, 2, -129, 2, -126, -515, -125, 585, 186, -426,
	2, -129, -113, 2, -426, 2, -129, 2, -206, 182,
	2, 120, 492, -181, 2, 182, 536, 2, 8, 2,
	220, -515, 440, 392, 174, 2, 454, 2, 455, 74,
	-400, 560, 74, 186, 2, 186, 2, -383, 2, 554,
	186, 2, 2, -575, 2, 342, 186, 2, 186, 2,
	186, 2, 186, 2, 186, 2, -180, 450, 513, 491,
	389, 249, 2, -129, 551, -113, 249, 248, -426, 551,
	2, -596, 182, 438, -426, 2, 511, 258, 158, 186,
	-383, 2, 186, 2, 186, 2, 5, 2, 390, 474,
	2, 247, 384, 474, 2, -284, -608, 28, 2, 492,
	545, 445, 2, 2, 88, 89, 186, 2, 186, 2,
	200, 186, 2, 186, 492, 560, 2, -375, -462, -412,
	-413, -412, 508, -341, -343, -181, 454, 2, -218, -373,
	-220, 182, -403, -404, -221, 272, 169, 338, -222, -382,
	28, 138, -382, -382, 60, 586, 586, 11, 12, 76,
	41, 576, 577, 578, 579, 180, 580, 581, 574, 575,
	573, 566, 567, 571, 253, 254, 95, 570, 568, 86,
	286, 431, 170, 171, 172, 173, 410, 227, 34, 228,
	14, 15, 16, -308, 33, 347, 271, 561, 217, 458,
	569, 17, 18, 19, 244, 246, 329, 50, 220, -262,
	358, -307, 489, 67, -426, -426, -426, -426, -426, -426,
	-426, -426, 354, 585, -369, -421, 583, -213, 585, 585,
	585, 585, -502, -213, -426, -440, 586, -361, 585, -213,
	-440, -435, 585, 429, 583, 585, -443, -426, 5, 5,
	5, 585, 587, -556, 555, 182, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	585, 380, -484, 585, -483, 585, -483, -483, 546, -481,
	585, 563, 556, 585, -481, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 546, 590,
	-553, -338, 585, -365, -467, -426, 578, -365, -365, 342,
	-358, -426, 106, -386, 250, 311, 187, 268, 424, 235,
	-423, 589, -423, -451, 563, -213, -459, -283, -213, -461,
	585, -457, -451, -103, -502, -86, -99, -108, -129, -142,
	-185, -186, 578, -284, 585, 186, 585, 587, -506, 186,
	-347, -268, -284, -299, -300, -305, 2, 137, -358, -571,
	520, 439, 445, -347, -257, 38, -437, -476, -477, -527,
	589, -526, -479, -489, -485, -488, 370, 374, -508, 54,
	542, -491, 240, 4, -518, -520, 237, 238, 466, 51,
	394, 177, 125, 124, 335, 56, 504, 505, 506, 507,
	190, 191, 58, 543, 478, 69, 70, -571, 520, 439,
	445, -347, 182, -513, 2, -512, -511, 116, 451, -509,
	5, 2, 153, 2, 2, 2, -254, -233, 590, 64,
	418, 153, -356, 213, -233, 153, -233, 153, -306, 213,
	-305, -233, 153, -233, 590, 153, -233, 590, 153, 587,
	590, 153, -513, 2, -399, -505, -358, 38, -413, 2,
	126, -511, -618, 590, 270, -311, 285, 326, 209, 343,
	558, 336, 130, -514, 5, 4, -436, -448, 126, 278,
	240, -496, -498, 8, -497, 9, -499, 576, 577, -504,
	-503, 109, 587, -506, -230, 411, 452, 357, -229, 24,
	29, 142, 231, 314, 539, 159, -324, 232, -321, 361,
	153, 470, 529, -585, -586, 436, 499, 500, 90, 336,
	452, 357, 411, 153, -379, -381, 38, 118, 314, 356,
	61, 224, 290, 291, 472, 548, 153, 452, 357, 411,
	357, 24, 142, -245, -242, 452, -586, 99, 411, 484,
	383, -586, -232, 470, 529, -585, -586, 436, 411, -231,
	-326, -321, 361, 153, 589, 24, 142, 411, 452, 357,
	-601, -602, 29, 411, 357, -579, -550, 554, 153, -462,
	213, -593, -125, 262, 5, 10, -515, -125, -354, 590,
	590, -506, 578, 438, 437, 153, 153, 153, 153, 182,
	327, 2, 2, 2, 2, 2, 188, -588, -606, 2,
	2, -284, 213, -340, 342, -574, -355, 492, -284, 182,
	327, 43, -286, 213, 2, -289, 545, -579, 327, -288,
	213, -284, 38, 585, 327, 2, -399, 2, 229, -550,
	327, -463, -302, -284, -458, -302, 452, -277, 38, -423,
	-284, 586, 590, -473, -473, -515, -194, 554, 186, 102,
	585, 585, -206, -470, 590, -469, 220, -516, -126, -515,
	414, -515, -574, -268, 2, -284, 2, 492, 251, -515,
	-194, 220, -515, -515, -515, -505, 28, 455, 2, -180,
	450, 513, 89, 455, 2, -284, 492, 120, 229, 80,
	-254, -577, 182, -572, 425, 439, 520, -571, -284, 120,
	-284, 120, -284, 120, -284, -284, 2, 2, 2, 2,
	2, 85, 2, -426, 2, 85, 2, 46, -596, 182,
	2, 511, 2, 511, 2, -254, -254, -254, 473, 270,
	-284, 493, -609, 2, 186, 182, 2, 492, 229, 492,
	229, 120, 186, 74, 120, 28, 492, 435, -233, 590,
	-258, -218, -373, -505, -374, -373, -219, -218, -221, 182,
	393, 530, 314, 456, 255, -404, -403, 28, -426, -408,
	176, 313, -426, -406, -428, 576, 577, -497, -499, -357,
	336, -212, -212, -212, -344, -453, -426, 383, 229, -478,
	-476, -476, -282, -506, 504, -426, -426, -426, -426, -426,
	-426, -426, -426, -426, -426, -426, -426, -426, -426, -426,
	-426, -426, -426, -426, -426, -426, -426, -426, -426, -426,
	-426, -426, -426, -426, -426, -426, -426, -426, -426, -426,
	-426, 271, 217, 458, 50, 220, -426, 508, -426, -426,
	-426, -426, 308, 327, 332, 517, 167, 527, 138, 336,
	-621, 486, 40, -433, -213, -362, 585, -447, 35, 469,
	28, -440, 585, 2, -421, -426, -422, -309, -307, -254,
	576, 577, 578, 579, 580, 581, 566, 567, 568, 14,
	15, 16, 571, 575, 573, 574, 180, 95, 570, 286,
	431, 86, 170, 171, 172, 173, 253, 254, 17, 18,
	19, 34, 569, -359, -358, -358, 586, 544, 28, 138,
	578, 2, 586, 590, 38, 586, -426, -359, -439, -435,
	-358, -446, -445, 551, -394, -395, 559, 295, 123, 211,
	293, -396, 443, -500, 8, -506, 578, -557, 175, 204,
	585, 586, 2, 586, 2, 586, -426, 2, 586, -426,
	2, 586, -426, 2, 586, -426, 2, 586, 2, -426,
	-426, -426, -426, -426, -426, -426, -358, 8, -500, -500,
	504, 504, -500, -500, -500, -492, 370, 371, 372, 373,
	273, 274, 275, 276, 374, 375, 376, 377, 300, 301,
	302, 303, 296, 297, 298, 299, 304, 305, 306, 307,
	195, 196, 197, 198, 191, 192, 193, 194, -492, -388,
	2, -494, -358, 4, 559, 295, 123, 211, 293, 443,
	5, -388, 2, -389, 2, -426, -358, -390, -427, -428,
	576, 577, 569, -308, -440, -391, 2, -426, -359, -426,
	57, 265, 510, -392, -426, 186, -358, -358, 2, -358,
	2, -554, 38, -358, -350, 590, 186, 38, 4, -350,
	-350, 585, 586, 590, -387, 208, 289, 284, 243, -387,
	-457, -386, 250, -384, 352, -384, -384, -451, -269, 583,
	591, -506, -451, -450, -449, 38, -277, 349, -451, -451,
	587, 586, -450, 584, -569, 585, 588, 588, 588, 588,
	588, -284, 585, -358, -506, 587, 475, 2, 586, 244,
	244, 244, 244, 430, 586, 508, -573, -292, -296, 2,
	554, -101, 344, 586, 590, -349, 37, 583, 587, -500,
	2, 2, -495, 546, 585, 585, -395, 585, 186, -573,
	-296, 2, -348, 590, 508, -254, 2, -284, -356, -233,
	153, -356, -356, -233, 590, 153, -268, -287, -292, -294,
	-296, -254, -515, -516, -233, -288, -598, 586, 512, -414,
	-310, 393, 468, 412, 447, 488, 8, 9, 8, 9,
	590, -506, 590, -599, 93, 508, 78, 439, -247, 279,
	508, -417, 213, 78, -528, -271, 93, -529, -254, 72,
	526, 383, 185, 151, -599, 93, 383, -599, 93, 2,
	231, 93, 452, 473, 28, 60, -462, 41, 41, 28,
	-597, 325, 266, 550, 186, 560, 492, 229, 439, 508,
	508, -462, -381, -476, 118, 290, 291, 60, -501, -496,
	576, 577, -501, 60, -501, -501, -501, 554, -286, -462,
	439, 508, 508, 508, 402, 402, -242, 508, 508, -619,
	568, 402, 590, 41, 41, 28, -597, 325, 266, 186,
	508, -305, -269, 540, 42, 540, 42, 540, 508, 42,
	439, 508, 590, 42, 508, 508, -580, -259, 105, 320,
	283, 321, 97, 317, 96, 316, 103, 318, 104, 319,
	547, 330, 63, 315, 294, 322, -260, -261, 363, 538,
	-515, 452, 357, 411, 153, 220, -470, 220, -470, -297,
	-254, 587, -129, -426, -426, -129, -426, -129, 46, 153,
	2, -615, 259, 585, -314, 327, 186, -347, -471, 241,
	590, -355, -571, 153, -512, -380, -379, 327, -288, 213,
	2, 153, -338, 327, 147, 585, 391, 2, 153, -270,
	213, -255, -254, -399, -236, 496, 153, -377, 536, -409,
	-129, 585, 126, 38, -409, -366, -367, -468, -368, -271,
	585, -277, -423, -102, -472, 586, 586, 586, -193, 346,
	-192, -254, 5, -206, 536, -313, -418, -417, -532, -533,
	-528, 271, 229, 526, 243, 168, -339, -272, -271, 119,
	-200, 554, -125, -126, 586, -470, 220, 476, -194, -194,
	-470, -470, -284, 182, -515, -194, -194, -194, 2, 2,
	2, 2, -383, -284, -268, -305, -284, 587, -347, -347,
	-296, -292, -383, -268, -383, -268, -383, -268, -129, -426,
	2, 449, 182, 182, 587, -383, 391, 120, 492, 361,
	229, -284, -305, -284, -305, -268, 120, -268, 121, -284,
	-462, -374, -219, 343, 255, 456, -406, -407, -428, 429,
	430, -407, 429, 430, 8, 9, 8, 9, -223, 460,
	331, -356, 590, -227, 39, 134, 255, -284, 560, 149,
	-426, -426, 508, -621, 486, -433, 149, -426, 308, 332,
	517, 167, 527, 138, 336, 186, 585, -427, -427, 586,
	-360, -426, -426, 584, 593, 586, 587, 586, -343, 590,
	-341, -426, -358, -358, 586, 587, -358, -347, 584, 584,
	590, 586, -444, -445, 143, -426, 508, 508, 508, 508,
	585, 586, 587, -562, 353, 585, 585, -426, 586, 586,
	586, 586, 38, 590, 590, 590, 586, 590, 590, 590,
	586, 586, 586, 590, 586, 560, 560, 586, 586, 586,
	586, 590, 586, 590, 586, 186, 586, 586, -397, 367,
	586, 11, 12, 576, 577, 578, 579, 180, 580, 581,
	574, 575, 573, 566, 567, 568, 86, 286, 431, 14,
	15, 16, -308, 244, 220, -427, -427, -427, -427, 586,
	-431, -432, 186, 182, 38, -392, -392, -392, 586, 186,
	-358, 586, 586, 585, -555, 288, 327, 586, -420, -419,
	552, -467, -351, 2, -457, -279, -506, -420, -420, -358,
	-426, 250, 250, -385, 536, 342, -387, -457, -450, -502,
	-425, -424, 184, 39, 134, 323, 216, -450, -277, -338,
	-450, -450, -506, -451, -451, -449, 586, -570, -502, 586,
	-352, -460, -549, -343, 587, -506, -203, -550, -182, 5,
	332, -182, -182, -182, -347, 508, 508, 25, 368, -476,
	583, 584, 8, -506, 585, -500, -500, -500, -347, 186,
	186, 186, -512, -512, 2, -233, -356, -233, -233, -305,
	-306, -233, -233, -233, -378, 554, -503, -413, 524, 83,
	393, 504, -503, -229, 411, -271, -271, -284, -293, -254,
	199, 403, -512, 327, -417, 213, -235, 327, -476, -278,
	-254, 585, -401, 556, 255, 255, 536, -271, -278, 255,
	213, -271, 213, -278, 2, -278, -581, 393, 337, -426,
	60, -322, 277, 391, 328, -230, 411, 452, 357, -129,
	-129, -129, -129, -129, 585, -598, 536, 137, -284, -305,
	-284, -293, -512, -288, 452, 357, 411, 324, -299, -501,
	-501, -379, 452, 357, 411, -293, -512, -286, -512, -241,
	-254, -241, 439, -268, 402, 560, 45, -619, -231, -129,
	-129, -129, -129, -129, 585, -269, -232, 411, 5, 213,
	-271, 5, -271, 213, 5, -254, -271, -293, -512, -602,
	24, 142, -271, -293, -512, -259, -515, 332, 532, -579,
	439, 508, 508, -462, -125, -197, 554, -125, -191, 225,
	578, -576, -254, 545, -254, -312, -315, -313, -271, -209,
	-210, 556, 554, 153, -303, -284, 583, -194, -515, -284,
	-471, -294, -295, 153, -338, 327, -515, 38, 153, 585,
	2, 2, -287, 342, 327, -270, 213, -237, 144, -619,
	-268, -420, -351, -376, -411, 420, 342, -339, 541, -277,
	-376, -353, 590, 186, 568, 587, -339, -466, 578, -102,
	-102, -194, 590, 585, 568, 568, 585, -515, -515, 586,
	590, -235, -284, -270, 229, 229, -276, -255, 586, 590,
	587, 585, -202, 346, -201, 145, 257, 242, 462, 463,
	464, 465, 136, 461, -470, -200, -126, 186, 186, -61,
	554, 492, -194, 589, -254, -383, -383, -383, 449, 449,
	-254, -280, -268, -284, -281, -305, 182, 182, -268, 530,
	-407, 343, 282, -453, -228, 562, -284, 589, -426, -426,
	149, 149, -426, -427, -427, -426, 149, 186, 585, -426,
	-437, 33, 33, 586, 590, -422, -426, -307, 586, 544,
	-343, -343, 586, 578, -506, 589, 586, -435, 146, -426,
	502, 295, 211, 293, -396, 293, -396, -396, -500, 5,
	-506, 578, -563, -274, 585, -254, 552, -342, 348, 586,
	-478, -476, -426, -426, -426, -426, -426, -500, -481, -481,
	-496, -496, -426, -431, -426, -478, -476, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, -427, -427, -427,
	-427, -427, -427, -427, -427, -427, -427, 138, 327, 336,
	-427, -432, -431, -426, -426, -476, 586, 586, 586, -358,
	-101, 585, 288, -370, 204, -426, -470, 590, -370, -370,
	586, -457, -457, 585, -426, 250, 584, 590, 592, 568,
	-338, 587, -449, -450, 584, 586, 590, 586, 590, -410,
	38, 586, -506, -420, -205, -204, 135, 53, 107, 133,
	332, -347, -347, 345, 5, 8, 583, 584, 587, -500,
	586, 586, 586, -347, -347, -347, -233, -233, 119, 314,
	-426, 508, 508, 60, 220, 153, 327, 538, -534, -529,
	151, -426, 585, 229, 585, 585, 2, -225, -226, 142,
	452, 24, -600, 2, 536, 153, -233, 153, -233, 558,
	-322, 585, 585, 508, 439, -247, 508, 554, -358, -426,
	-195, 126, -505, -586, 589, -586, 589, 439, 508, 508,
	439, 508, 508, 554, 166, 166, 560, -241, 554, -358,
	508, -480, 48, 26, 327, -287, -233, 153, 508, 508,
	520, 452, -515, 332, -293, -512, -288, 452, 357, 411,
	-470, -199, 346, -198, 145, 422, 136, 257, 222, -470,
	-197, 186, 241, 554, -288, 2, 586, 586, 590, -535,
	38, 340, 340, 585, -284, -82, 554, -469, -502, -582,
	554, 43, -286, 38, 153, -579, -129, -288, -474, -475,
	5, 38, -284, 153, 342, 327, -238, 264, -619, -510,
	-550, -343, -376, -365, 328, 91, 586, -420, -367, -351,
	-426, 2, 586, -192, -193, -515, -515, -515, -194, -206,
	-206, -418, -316, 585, -270, -255, 585, -206, -272, 2,
	-516, 590, 585, 568, 568, 568, -200, -470, -125, -129,
	346, -284, 578, -383, -328, -327, 361, 336, -328, 429,
	429, 343, 176, 260, -227, -269, -426, -426, 149, 33,
	33, -426, -426, -437, 586, -426, -426, -358, 584, 5,
	-426, 586, 586, 8, -426, 586, 587, -564, -254, -426,
	586, 60, 586, 586, 590, 590, 586, 586, 586, 586,
	586, 586, 586, -432, 186, 138, 336, 585, 586, 586,
	-101, -434, 207, 60, -457, -434, -434, -385, -347, -457,
	-424, -269, 583, -506, -502, -460, 585, 587, -204, 568,
	-515, -515, 554, 584, 2, 583, -506, 586, 119, -271,
	-271, 492, 429, -241, 383, -417, 153, -536, 93, -538,
	76, 168, 102, 327, 332, 526, 383, 72, 126, 399,
	-611, 38, 565, 586, -345, -454, -549, 585, -254, -345,
	-347, 327, 481, 126, 327, 126, 549, 119, 2, 520,
	79, -271, -278, -347, -347, -284, -293, -512, 160, 586,
	590, 568, 2, 578, 578, -293, -512, -288, -293, -512,
	-286, 359, 166, 160, 586, -269, 5, 5, 153, -266,
	76, -271, 5, -271, -287, 119, 439, 508, 508, -197,
	590, 585, 568, 568, -197, -516, -125, 2, -338, -329,
	231, -271, -533, -530, -531, 383, -537, -539, 168, 383,
	-129, 2, -208, -207, -254, 5, 585, -314, 346, 584,
	-584, 346, -583, 117, 136, -512, -380, -129, -288, -338,
	586, 590, 147, -402, 536, -269, -284, 153, -239, 263,
	-619, -510, -236, -405, -403, 139, 585, 342, -129, -343,
	568, 586, 586, 119, 119, 223, 152, -345, 585, 585,
	-347, 119, 586, -201, -202, -515, -125, -515, -200, -470,
	-62, -63, 229, 93, 366, -281, 492, 229, 585, 585,
	-227, -426, -426, -426, 586, -343, -506, 578, -558, 361,
	586, -453, -426, -426, -427, 186, 585, -437, 586, -559,
	553, -426, -371, -372, -426, 428, 108, 205, -559, -559,
	586, -502, 2, -515, 2, 583, 2, 220, 38, 402,
	-417, -278, -282, -275, -254, 168, 213, 332, 549, -401,
	255, 585, -427, -284, 585, 2, 30, -612, 130, 234,
	586, 590, -455, -265, -254, -426, -455, 586, 586, 332,
	332, 549, -426, -476, 585, -233, -233, 586, 586, -426,
	508, -505, 100, -503, 2, -586, -268, -426, 508, 5,
	-233, -282, -233, -233, -266, 520, -293, -512, -288, -198,
	-199, -515, -125, -197, 38, -319, 233, 2, -535, 255,
	-275, 255, -610, 554, 586, 590, 568, 568, -312, -209,
	-83, -84, 509, -469, 590, 585, 568, -338, 38, 5,
	585, 585, -254, 342, 585, -269, -249, 92, -619, -510,
	-237, -376, 328, -347, 93, -405, -433, -194, 585, 585,
	-317, 81, 94, 127, 212, 189, 230, 473, 479, 28,
	-317, 586, -345, -345, 586, 585, -194, 586, 590, 28,
	585, 28, 585, -284, -305, -358, -358, 586, -343, 60,
	590, 586, 586, -427, -437, 586, -560, -561, -274, 590,
	585, 585, 453, 584, 2, -241, 383, -254, -538, -275,
	327, 536, -426, -256, 585, -426, 38, 234, 131, 218,
	-416, -613, 101, 482, 221, -454, -227, 586, -415, 536,
	399, -266, -345, 585, 585, 585, 568, 186, 585, -480,
	-233, -287, 586, -591, 397, -129, -323, -324, 220, 585,
	-318, 342, 119, 314, -207, -503, -503, 586, 38, -84,
	9, -583, -584, -426, 38, -129, -474, -345, -284, -345,
	342, -243, -242, 272, -510, -238, 586, -278, -376, -516,
	-516, -415, 586, 586, -516, -63, -347, -347, 586, 586,
	-565, 391, 430, 206, -358, -344, 586, 590, 38, -372,
	2, 2, 2, 402, 153, 208, 586, -540, 287, -254,
	586, 131, 218, -319, 585, -228, -455, -319, 208, -284,
	-587, 536, 586, -331, -330, -327, -333, -332, -327, -358,
	-503, 100, 359, -358, -266, -594, 187, -593, 5, 10,
	-209, 359, -346, -456, -271, 82, 119, -329, -129, 586,
	-129, 586, 586, -402, 586, -284, -240, -517, 402, 404,
	-619, -239, -420, 586, 586, -416, -415, -325, -321, 586,
	586, 586, 586, -566, -567, 50, 523, 109, -426, -566,
	-566, -561, -563, 168, 554, -541, -544, -543, 342, 459,
	187, 360, 586, 481, 548, -325, -347, 554, -338, -426,
	-415, 586, 590, 541, 586, 590, 541, 586, 186, 586,
	-233, -196, 554, 46, -318, -284, 586, 590, 382, 132,
	142, -319, -610, -415, 585, -416, 585, -246, -245, -619,
	-496, -249, 139, -194, -194, -319, -416, -210, 554, -194,
	-568, 151, -567, 379, 181, 429, 379, 181, -568, -568,
	-275, 55, -543, 342, -544, 342, 530, 132, -612, 586,
	55, -540, -319, -330, 220, -332, 186, 359, 437, -593,
	30, -248, -247, 585, -456, 430, 430, 2, -323, -318,
	-416, -345, -319, -345, -244, -347, -243, 328, 530, -325,
	-319, -420, 109, 204, 503, 314, 33, 568, -542, 314,
	418, 64, 452, -542, -420, 568, -541, 585, 585, 346,
	-347, 2, -209, -319, 586, -325, 586, -240, 452, -210,
	-325, 429, 350, -567, -426, 23, 332, 126, -426, -612,
	-358, -358, -193, 585, 586, -318, -325, -415, -210, -416,
	-246, -366, -420, -210, 586, 586, -193, -234, 64, 418,
	-248, -210, -416, -420, -319, -420, -420, -320, -321, 508,
	586, -420, -319, -325, 585, -325, -210, -358, -210, -420,
	586, -420, -320,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 540, 541, 543, 544, 545, 547,
	548, 550, 552, 554, 555, 556, 558, 559, 561, 562,
	563, 564, 565, 567, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	634, 636, 0, 1333, 1335, 1337, 1339, 0, 779, 0,
	36, 37, 39, 0, -2, 325, 327, 329, 0, 356,
	358, 359, 361, 363, 364, 365, 367, -2, 0, 473,
	474, 476, 478, -2, 0, 974, 976, 0, 623, 625,
	0, 979, 981, 0, 0, 645, 646, 0, 1440, -2,
	639, 641, 643, 708, 710, 712, 714, 716, 718, 720,
	722, 724, 725, 727, 729, 731, 733, 735, 736, 738,
	740, 742, 743, 745, 746, 748, 750, 752, 754, 756,
	758, 760, 762, 764, 766, 768, 770, 772, -2, 775,
	776, -2, -2, 0, -2, -2, -2, 1351, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 417, 419, 421,
	423, 425, 428, 430, 432, 1498, 480, 482, 484, 486,
	488, 490, 492, 0, -2, 1512, 0, 0, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 101,
	102, 103, 104, 105, 106, 107, 108, 73, 74, 75,
	77, 78, 79, 80, 84, 85, 86, 87, 88, 89,
	90, 91, 99, 71, 0, 0, 1471, 1473, 1475, 1477,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 27, 29, 542, 546, 549, 551, 553,
	557, 560, 566, 568, 570, 525, 526, 529, 2203, 2220,
	2221, 2222, 2225, 2226, 2227, 2228, 2229, 2230, 2673, 2755,
	2756, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330,
	2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340,
	2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 527, 528, 1151, 0, 594, 592, 2188, 595,
	2474, 597, 599, 467, 468, 469, 470, 471, 472, 0,
	616, 607, 1510, 617, 619, 620, 621, 622, 589, 587,
	0, 616, 2256, 614, 1331, 1332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 396, 1200, 1201,
	1202, 1316, 1317, 2518, 1358, 0, 225, 635, -2, -2,
	-2, 2638, -2, 667, -2, 674, 2642, 2521, 679, 0,
	681, -2, 684, 1334, 1336, 1338, 777, 778, 2206, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 235, -2, -2, -2, -2, 0, 0,
	2566, 2308, 2156, 2222, 2159, 2154, 326, 328, 330, 331,
	0, 0, 0, 0, 0, 0, 357, 360, 362, 366,
	-2, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 1035, 1027, 1028, 1258, 0, 0,
	0, -2, 475, 477, 530, 531, 0, 1499, 1499, 538,
	539, -2, 0, 0, 0, 0, 296, 283, 975, 977,
	978, 0, 0, 0, 0, 624, 626, 0, 0, 264,
	980, 982, 983, 0, 0, 0, 0, 0, 298, 0,
	0, 640, 642, 644, 709, 711, 713, 715, 717, 719,
	721, 723, 726, 728, 730, 732, 734, 737, 739, 741,
	744, 747, 749, 751, 753, 755, 757, 759, 761, 763,
	765, 767, 769, 771, 773, 774, 785, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 877, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	955, 0, 0, 788, 790, 791, 792, 0, 851, 875,
	876, 885, 0, 1191, 1500, 1360, 1341, 1355, 1360, 1343,
	1344, 1345, 1346, 1347, 1352, 1354, 1348, 1349, 1350, 42,
	44, 46, 48, 50, 52, 54, 56, 58, 418, 420,
	422, 424, 426, 429, 431, 433, -2, 1469, 1470, 481,
	483, 485, 487, 489, 491, 493, 627, 0, 629, 0,
	789, -2, 0, 1504, 1504, 1504, 0, 0, 1470, 1468,
	0, 632, 633, 688, 689, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 1860, 0, 690, -2, 1893,
	1895, 2613, 2448, 2638, 2029, 1897, 1898, 1899, 1900, 1901,
	0, 1903, 1904, 1905, 1906, 1907, 1908, 0, 1910, 0,
	1915, 1916, 1917, 0, 2620, 2133, 2216, -2, 0, 0,
	2626, 2212, 0, 1996, 1933, -2, -2, 2239, 2218, 1704,
	1705, 1706, 1707, 1708, -2, -2, 2656, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 0, 2601,
	2621, 2622, 2627, 2629, 2623, 2610, 1958, 2321, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1731, 1740, -2, -2, -2, -2, -2, -2, -2,
	2614, 2615, 2632, 2635, 2641, 2646, 2647, 2619, 2628, 2655,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 1732, -2, -2, -2,
	-2, 1487, 2487, 1490, 1151, 1488, 1472, 1474, 0, 1476,
	0, 0, 0, 1481, 1507, 1505, 0, 1556, 1485, 1486,
	1574, 1574, 1598, 0, 1579, 0, 1598, 1499, 1625, 0,
	1585, 2510, 1934, 1935, 0, 2222, 2217, -2, -2, 2653,
	0, 0, 0, 0, 0, 0, 0, 0, 590, 0,
	596, 598, 0, 0, 0, 615, 1509, 0, 0, 0,
	0, 0, 0, 0, 399, 400, 401, 402, 403, 2621,
	0, 0, 0, 408, 0, 410, 411, 412, 413, 414,
	415, 416, 194, 2621, 498, 523, 0, 194, 2621, 501,
	194, 2621, 504, 0, 507, 1256, 194, 2621, 510, 2184,
	194, 2621, 513, 515, 2192, 194, 2621, 519, 2199, 2197,
	520, 2621, 522, 301, 299, 300, 2235, 2236, 2243, 2244,
	2245, 2246, 2654, 2656, 1327, 1328, 1329, 1330, 0, 1357,
	1257, 637, 638, 0, 662, 0, 666, 2609, -2, 0,
	2530, -2, 670, 1361, 1365, 1366, 1367, 1368, 1369, 0,
	0, 0, 0, 1374, 0, 0, 676, 0, 0, 663,
	664, 682, 685, 0, 780, 781, 782, 783, 784, 70,
	0, 2621, 1625, 72, 0, 2178, 2247, 2248, 2249, 2250,
	2251, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
	2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722,
	2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732,
	2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742,
	2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752,
	2753, 2754, 76, 0, 2621, 81, 0, 2621, 0, -2,
	92, 0, 100, 0, 2181, 109, 0, 2621, 0, 2153,
	-2, 0, 206, 284, 285, 286, 287, 0, 1002, -2,
	2621, 1199, 0, 0, 0, 0, 965, 2150, 2155, 966,
	2174, 967, 2160, 0, 332, 333, 334, 335, 336, 0,
	337, 2621, 339, 340, 0, 342, 343, 2621, 345, 346,
	0, 348, 0, 247, 248, 2621, 370, 372, 0, 374,
	375, 0, 377, 0, 0, 0, 381, -2, 397, 0,
	394, 384, 385, 387, 388, 389, 390, 391, 0, 437,
	435, 2189, 0, 0, -2, 2621, 0, 999, 0, 0,
	1236, -2, 2621, 1196, 0, 1243, 2621, 1239, 0, -2,
	0, 1497, 2621, 1378, 1031, 1032, 1033, 1034, 1637, 464,
	0, 1405, 0, 1407, 0, 1426, 1631, 1574, 0, 0,
	1636, 0, -2, 583, 2205, -2, 533, 0, 534, 0,
	-2, 0, 313, 0, 0, 984, 985, 986, 987, 988,
	991, 992, 993, 994, 1611, 265, 267, 0, 0, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 0, 0,
	647, 0, 0, 786, 787, 0, 0, 797, 798, 799,
	0, 313, 2522, 2483, 2342, 806, 0, 809, 812, -2,
	0, 0, 0, 0, 816, 0, 821, 822, 823, 0,
	0, 827, 829, 973, 831, 0, 0, 833, 0, 837,
	0, 840, 0, 842, 0, 844, -2, -2, -2, 852,
	853, -2, 858, -2, 0, 862, -2, 0, 864, 0,
	867, -2, 0, 877, 873, 874, 0, 0, 0, 0,
	893, 894, 0, 903, 0, 906, 907, 908, 0, 910,
	911, 0, 913, 914, 915, 916, 0, 0, 919, 920,
	-2, -2, 924, 926, 0, -2, 0, 942, 0, 946,
	0, 0, 954, 0, 0, 793, 794, 194, 1629, 1340,
	-2, 1342, 0, -2, 0, 628, 0, 631, 1529, 1455,
	1452, 0, 1526, 1527, 1456, 0, 0, 0, 1463, 0,
	1502, 1503, 0, 0, 0, 1442, 1443, 0, 0, 0,
	0, 2035, 2036, 2037, 2038, 2051, 2039, 2040, 2050, 2048,
	2049, 2041, 2042, 2047, 2061, 2062, 2052, 2053, 2043, 2056,
	2054, 2055, 2057, 2058, 2059, 2060, 0, 0, 2066, 0,
	2044, 2045, 2046, 2074, 0, 0, 2075, 0, 2077, 0,
	2067, 2063, 2064, 2065, 0, 1839, 1841, 2141, 0, 0,
	0, 2073, 2068, 2069, 1777, 1778, 1779, 1780, 1781, 1814,
	1818, 1819, 0, 0, 1894, 2138, 2137, 1896, 0, 0,
	2089, 0, 1909, -2, 0, 2030, 2084, 0, 0, 1918,
	1919, 1920, 0, 0, 2089, 0, 0, 2132, 1930, 1931,
	1769, 0, 0, 1998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1718, 1717, 0, 1719, 0, 1720, 1721, 1728, 1741,
	0, 0, 0, 0, 1745, 0, 0, 0, 0, 0,
	0, 0, 2113, -2, 0, 0, 0, 0, 1733, 0,
	1489, 0, 0, 1560, 2142, 2146, 2147, 1560, 1560, 0,
	0, 2090, 1622, 1622, 0, 0, 1617, 1617, 1617, 1615,
	1598, 0, 1598, 1608, 0, 1598, 1598, 0, -2, 1579,
	0, 0, 1608, 0, 1592, 571, 573, 575, 577, 578,
	579, 581, 1626, 1627, 0, 0, 0, 0, 2223, 0,
	0, 0, 0, 0, 2208, 0, 353, 0, 0, 0,
	2576, 2521, -2, 601, 618, 1499, 0, 2092, 1652, 1656,
	0, 1658, 1659, 1660, 1661, 1662, 0, 0, 1653, -2,
	1729, 1731, 1752, 2240, 2241, 2242, 1712, 1713, 1714, 1715,
	1716, 1724, 1711, 1711, 1711, 1722, 1751, 1743, 1751, 1747,
	1697, 1698, 1699, 1734, 1735, 1736, 1737, 0, 2576, 2521,
	-2, 609, 0, 0, 1437, 210, 212, 213, 214, 215,
	216, 398, 0, 405, 406, 407, 0, 494, 0, 192,
	193, 0, 194, 2621, 499, 0, 502, 0, 194, 2621,
	2148, 508, 0, 511, 0, 0, 517, 0, 0, 0,
	0, 0, 194, 1439, 0, 0, 0, 0, -2, 672,
	677, 678, 0, 1363, 0, 1370, 699, 700, 701, 1372,
	1373, 0, 1375, 675, 702, 703, 704, 705, 706, 707,
	0, 2162, 2163, 2164, 2165, 2168, 2169, 0, 0, 673,
	692, 680, 0, 686, 110, 1313, 0, 0, 153, 0,
	1313, 1313, 0, 0, 0, 0, 179, 0, 1070, 0,
	0, 0, 0, 125, 138, 149, 122, 123, 0, 0,
	0, 0, 0, 0, 82, 1173, 0, 1176, 0, 0,
	0, 0, 0, 0, 0, 1189, 0, 0, 0, 0,
	0, 0, 0, 96, 97, 0, 137, 0, 0, 1402,
	0, 132, 112, 0, 0, 125, 139, 151, 0, 183,
	185, 1067, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 217, 0, 0, 0, 1197, 0, 1496, 0, 0,
	2621, 0, 1611, 2390, -2, -2, 265, 1611, 964, 0,
	0, 2223, 2158, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 376, 378, 379, 380, 0, 1235, 0, 386,
	427, 1122, 2621, 0, 0, 454, 449, 0, 451, 0,
	0, 0, 1172, 2621, 1170, 2193, 0, 1194, 0, 1151,
	2621, 2191, 0, 0, 0, 1244, 2232, 1253, 1257, 1392,
	0, 466, 0, 1408, 1410, 0, 0, 1632, 0, 1634,
	1574, 1499, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 271, 0, 1610, 0, 0, 1611, 265,
	2498, 313, 313, 1611, 649, 1611, 651, 0, 0, 800,
	801, 0, 313, 313, 313, 807, 808, 810, 811, -2,
	-2, -2, -2, 813, 814, 900, 0, 0, 0, 899,
	826, 830, 0, 958, 2506, 2521, 2576, 971, 900, 2308,
	900, 2308, 900, 2308, 841, 843, 846, 888, 896, 857,
	863, 0, 859, 865, 868, 0, 870, 878, -2, 0,
	880, 0, 882, 0, 884, 900, 901, 904, 909, 912,
	917, 918, 0, 933, 938, 939, 935, 0, 0, 0,
	0, 0, 0, 949, 950, 0, 0, 957, 1190, 0,
	1353, 1529, 1455, 630, 1446, 1528, 1447, 1454, 1457, 0,
	0, 1459, 0, 1461, 0, 1524, 1525, 1532, 1533, 0,
	1543, 1544, 1536, 0, -2, 0, 0, 1539, 1540, 1465,
	0, 1482, 1483, 1484, 1513, 1516, 1272, 0, 2755, 1773,
	1647, 1774, 1775, 2177, 0, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, -2, -2, -2, -2, -2,
	-2, -2, -2, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, -2, -2, -2, 1815, 1816, 1817,
	-2, 2076, 2078, 0, 2141, 0, -2, 0, -2, -2,
	-2, -2, 1836, 0, 1838, 1843, 1845, 1847, 0, 0,
	0, 0, 2140, 1857, 2124, 2125, 0, 0, 2032, 2033,
	2034, 1842, 0, 1861, 2139, 2136, 0, 0, 2070, 0,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 0, 2088, 1512, 1922, 0, 0, 0,
	0, 1929, 1914, 2086, 0, 2085, 0, 0, 0, 2096,
	0, 2131, 2127, 0, 2175, 1768, 1755, 1756, 1757, 1758,
	1759, 1760, 1770, 0, 2172, 2209, 2215, 2006, 0, 0,
	0, 1959, 1960, 1961, 1962, 1963, 0, 1965, 1966, 0,
	1968, 1969, 0, 1971, 1972, 0, 1974, 1975, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 0, 0,
	1978, 0, 2099, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 1980, 0, 1982, 2090, 2110, 0, 0, 1862,
	0, 0, 0, 0, 2030, 0, 1985, 2090, 2118, 0,
	0, 0, 0, 0, 2090, 0, 2123, 0, 1992, 0,
	1994, 1491, 0, 0, 1642, 0, 0, 0, 2145, 1642,
	1642, 0, 1555, 0, 0, 1618, 1619, 1620, 1621, 0,
	0, 1622, 0, 1612, 1616, 1613, 1614, 1608, 1571, 0,
	0, 2179, 1608, 1577, 1607, 0, 1151, 1597, 1608, 1608,
	0, -2, 1581, 1598, 0, 0, 572, 574, 576, 580,
	582, 0, 0, 1512, -2, 0, -2, 315, 1150, 0,
	0, 0, 0, 591, 593, 0, 0, 514, 0, 606,
	0, 585, 0, 588, 0, 1643, 1646, 0, 0, 1657,
	1663, 1664, 0, -2, 0, 0, 1753, 0, 0, 0,
	0, 613, 0, 0, 0, 0, 409, 524, 194, 496,
	0, 194, 194, 505, 0, 0, 194, 516, 194, 2200,
	194, 2198, 302, 521, 1438, 228, 0, 665, 0, 1362,
	1371, 0, 696, 0, 698, 0, 2166, 2170, 2167, 2171,
	0, 687, 0, 0, 0, 0, 1312, 0, 1279, 0,
	0, 157, 2621, 0, 196, 0, 0, 1115, 2185, 0,
	1107, 0, 0, 2328, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 1175, 1177, 1184, 1186, 0, 1180, 2173,
	0, 0, 1181, 0, 1183, 1185, 1187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 98, 0, 0, 0,
	1401, 1402, 0, 0, 0, 121, 0, 0, 0, 0,
	0, 0, 2152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1231, 1229, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 0, 0,
	-2, 0, 0, 0, 0, 0, 238, 0, 304, 2151,
	2161, 0, 989, 990, 338, 341, 344, 347, 234, 0,
	382, 0, 0, 1037, 1012, 0, 0, 436, 313, 0,
	0, 450, 454, 2202, 997, 1168, 1171, 0, 1151, 2621,
	1208, 0, 0, 0, 0, 0, 0, 1242, 0, 0,
	2621, 2180, 2231, 2232, 1394, 1402, 0, 1642, 0, 1424,
	1411, 0, 0, 0, 1424, 1428, 1429, 1431, 1432, 0,
	0, 1633, 1639, 532, 584, 1499, 1499, 313, 311, 2451,
	309, 306, 308, 0, 0, 0, 1038, 1040, 1041, 1042,
	196, 0, 2232, 1107, 2379, 2232, 0, 1414, 1416, 0,
	259, 0, 268, 1611, 266, 271, 0, 0, 0, 448,
	648, 653, 795, 0, 313, 803, 804, 805, 848, 890,
	898, 937, 815, 817, 818, 819, 0, 0, 972, 968,
	969, 970, 832, 900, 835, 900, 838, 900, 861, 866,
	872, 879, 0, 0, 0, 892, 0, 0, 0, 0,
	0, 0, 0, 943, 944, 945, 947, 952, 951, 956,
	1630, 1450, 1451, 1453, 0, 1462, 0, 0, 1538, -2,
	-2, 1537, 1541, 1542, -2, -2, -2, -2, 1458, 0,
	1467, 1464, 0, 1523, 1270, 1271, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 1858, 0, -2, 1837, 1840,
	1844, 1846, 1848, 0, 0, 0, 0, 0, 0, 2079,
	0, 2081, 1859, 2134, 2137, 2072, 0, 2028, 0, 0,
	1511, 1512, 1512, 0, 1928, 0, 2087, 0, 2094, 2095,
	0, 1921, 0, 2128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 0, 1964, 1967,
	1970, 1973, 0, 0, 0, 0, 1953, 0, 0, 0,
	1957, 1723, 1709, 0, 1751, 1749, 1750, 1744, 1751, 1748,
	1701, 0, 1700, 0, 1977, 0, 1979, 1981, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 1866, 1867, 1887, 1984,
	2116, 2117, 0, 0, 0, 0, 0, 0, 1990, 0,
	2122, 1991, 1993, 1499, 0, 1492, 0, 1557, 1546, 1641,
	0, 2143, 1611, 1559, 1561, 2144, 2182, 1546, 1546, 0,
	2091, 0, 0, 1602, 0, 0, 0, 1604, 1575, 0,
	0, 1569, 0, 1565, 1566, 1567, 1568, 1576, 1151, 1606,
	1578, 1582, 2209, 0, 1608, 0, 1593, 0, 1595, 1628,
	0, 1587, 1590, 0, 0, 2224, 1642, 0, 349, 354,
	355, 350, 351, 352, 600, 0, 0, 0, 0, 2093,
	0, 1648, 0, 1654, 0, 0, 0, 0, 608, 0,
	0, 0, 211, 1436, 404, 495, 194, 500, 503, 2149,
	194, 509, 512, 518, 224, 0, 661, -2, 694, 695,
	697, 0, 693, 154, 1313, 0, 0, 1275, 1277, 2196,
	1281, 1287, 1290, 0, 159, 2621, 170, 0, 1086, 0,
	2183, 0, 0, 0, 0, 0, 0, 1315, 0, 0,
	2621, 194, 2621, 194, 173, 175, 178, 0, 182, 180,
	0, 1074, 0, 0, 1077, 111, 1313, 0, 0, 114,
	118, 126, 127, 130, 0, 0, 0, 136, 0, 0,
	0, 1292, 1296, 1304, 0, 0, 0, 1178, 1179, 1182,
	1188, 83, 0, 0, 0, 1300, 1302, 1308, 93, 94,
	2194, 95, 0, 1274, 0, 0, 0, 0, 184, 116,
	120, 128, 129, 131, 0, 1310, 113, 0, 209, 0,
	0, 199, 194, 2621, 0, 201, 0, 202, 203, 218,
	0, 0, 0, 1000, 1001, 1230, 1192, 1193, 0, 1198,
	0, 0, 0, 0, 1611, 230, 0, 1611, 238, 0,
	2157, 0, 369, 0, 0, 0, 0, 1036, 1133, 0,
	1007, 0, 0, 0, 442, 438, 0, 447, 453, 452,
	458, -2, 0, 0, 0, 0, -2, 0, 0, 1246,
	1240, 1241, 0, 0, 0, 0, 2621, 1396, 1402, 0,
	1497, 1512, 465, 1403, 1424, 0, 0, 0, 1413, 1409,
	1406, 1642, 0, 0, 0, 0, 0, 1635, 1638, 535,
	536, 288, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 1043, 1047, 0, 2232, 2232, 0, 2187, 0, 0,
	0, 0, 269, 0, 272, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 271, 261, 1611, 0, 0, 650,
	0, 0, 802, 0, 825, 834, 836, 839, 881, 883,
	900, 927, 928, 1064, 0, 1064, 0, 0, 948, 1460,
	0, 1535, 1466, 1517, 1518, 0, 1272, 0, 1776, 1821,
	0, 0, -2, 0, 0, 1825, 0, 0, 0, -2,
	0, 0, 0, 2080, 2082, 0, 2136, 2071, 1923, 0,
	0, 0, 1927, 1911, 1912, 0, 2031, 2097, 2126, 2130,
	0, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 0, 2176,
	2210, 2214, 2004, 2005, 2009, 2190, 0, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 1742, 1746,
	0, 0, 2098, 2109, 2111, 1863, 1864, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, -2, -2, -2,
	1881, 1882, 1883, -2, -2, -2, 1888, 0, 0, 0,
	2112, 2114, 2115, 2119, 2120, 0, 1987, 1988, 1989, 2121,
	0, 1499, 1493, 1554, 0, 1640, 1558, 0, 1554, 1554,
	1506, 1600, 0, 0, 1624, 0, 1572, 0, 1573, 0,
	1605, 0, 1580, 1583, 1584, 1594, 0, 1586, 0, 1589,
	0, 1923, -2, 314, 316, 318, 0, 321, 322, 0,
	0, 603, 604, 602, 586, 0, 0, 1650, 0, 0,
	1726, 1730, 1754, 611, 612, 610, 497, 506, 226, 0,
	1609, 0, 0, 0, 0, 0, 0, 195, 1084, 1114,
	0, 0, 0, 1106, 0, 0, 1120, 161, 162, 0,
	0, 0, 0, 171, 0, 0, 168, 0, 177, 181,
	1071, 0, 0, 0, 0, 1280, 0, 0, 0, 133,
	134, 135, 0, 140, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 1386, 1387, 0, 1381, 0, 0,
	0, 197, 0, 0, 0, 1269, 220, 0, 0, 0,
	0, 0, 1233, 1234, 1293, 1297, 1305, 0, 0, 0,
	238, 236, 0, 239, 0, 242, 243, 0, 245, 238,
	232, 0, 0, 0, 1151, 383, 1010, 1121, 0, 1123,
	0, 1008, 0, 0, 1122, 434, 0, 441, 0, 455,
	0, 0, 1172, 0, 0, 1195, 1206, 1151, 0, 1245,
	1247, 0, 1255, 0, 0, 0, 1398, 1402, 0, 1391,
	1392, 1531, 1404, 1422, -2, 0, 0, 1512, 1430, 1427,
	1433, 1434, 0, 310, 0, 305, 307, 0, 291, 0,
	0, 1039, 1044, 0, 0, 0, 0, 0, 1415, 1417,
	0, 0, 0, 0, 0, 0, 260, 271, 1611, 297,
	0, 796, 820, 891, 929, 1063, 0, 0, 931, 0,
	0, 1534, 1521, 1522, 1519, 1272, 1823, 1827, 0, 0,
	0, 1829, -2, 0, 1851, -2, -2, 2083, 2135, 1902,
	1512, 1924, 1926, 1913, 2129, 1771, 0, 2011, 2008, 0,
	1995, 0, 1948, 1949, 0, 0, 1952, 1954, 1955, 1956,
	1710, 1703, 1702, 2108, 0, 0, 0, 0, 1986, 1494,
	0, 2000, 0, 0, 1562, 2000, 2000, 1601, 0, 1603,
	1570, 1563, 0, 2210, 1596, 1588, 0, 0, 319, 0,
	323, 324, 0, 1644, 1649, 0, 1655, 1725, 227, 155,
	156, 1284, 1288, 1285, 0, 158, 0, 1085, 0, 1088,
	0, 0, 0, 0, 1095, 1107, 0, 0, 0, 0,
	0, 1108, 0, 1137, 0, 1260, 1267, 0, -2, 0,
	0, 0, 164, 187, 0, 0, 188, 1314, 166, 0,
	0, 194, 194, 0, 0, 1276, 1278, 1291, 0, 0,
	0, 0, 143, 0, 0, 1294, 1298, 1306, 1301, 1303,
	1309, 0, 1388, 0, 0, 1311, 207, 208, 0, 194,
	0, 194, 200, 194, 1269, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 231, 303, 238, 371, 0, 1058,
	0, 1133, 1125, 1126, 1127, 0, 1132, 1134, 0, 0,
	1024, 1009, 0, 1020, 0, 0, 1037, 1012, 0, 439,
	456, 0, 459, 0, 462, 998, 1169, 1203, 1151, 0,
	1237, 0, 0, 0, 0, 0, 0, 0, 1400, 1402,
	0, 1393, 1394, 1424, 1530, 0, 0, 0, 1412, 1531,
	0, 312, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 273, 0, 274, 275, 276, 262, 263,
	652, 654, 0, 0, 660, 1062, 0, 0, 0, 0,
	1520, 1831, -2, -2, 1852, 0, 2211, 2213, 1512, 0,
	1997, 1514, 0, 0, -2, 0, 0, 0, 1495, 1478,
	0, 1553, 1545, 1547, 1549, 2509, 2303, 2620, 1479, 1480,
	1623, 0, 1591, 320, 605, 0, 1651, 0, 0, 1286,
	160, 0, 1089, 1090, 2186, 1092, 0, 1094, 1096, 1097,
	1098, 0, 1101, 2234, 0, 1105, 0, 1116, 1138, 0,
	1147, 0, 1262, 1272, 1266, 0, 1264, 1149, 0, 163,
	165, 189, 186, 1269, 0, 167, 176, 0, 0, 115,
	0, 0, 2297, 146, 144, 142, 1273, 117, 0, 209,
	219, 1268, 221, 204, 194, 0, 1295, 1299, 1307, 240,
	0, 241, 244, 0, 0, 1073, 0, 1011, 1124, 0,
	1135, 1136, 1014, 0, 1013, 0, 0, 0, 0, 0,
	440, 443, 0, 446, 0, 0, 0, 0, 0, 1248,
	1246, 0, 1254, 0, 0, 0, 1380, 0, 0, 1395,
	1396, 463, 1418, 0, 0, 1424, 1435, 290, 0, 0,
	1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1046, 1149, 0, 0, 1113, 0, 295, 270, 0, 656,
	0, 658, 0, 930, 932, 0, 0, 1925, 2015, 0,
	0, 1950, 1951, -2, 0, 1891, 1999, 2001, 0, 0,
	0, 0, 0, 1564, 1645, 1282, 0, 1289, 1087, 1091,
	0, 0, 0, 1155, 0, 0, 1109, 0, 1141, 1142,
	1058, 0, 1143, 1144, 1145, 1261, 1523, 1267, 1058, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 198,
	222, 1269, 237, 255, 0, 1204, 1012, 1072, 0, 0,
	1022, 0, 1025, 0, 1021, 1018, 1019, 1010, 0, 444,
	445, 460, 0, 461, 0, 1207, 0, 0, 1255, 0,
	0, 1383, 1379, 1402, 1397, 1398, 1642, 1421, 1425, 0,
	0, 1147, 1149, 1069, 0, 655, 0, 0, 940, 941,
	0, 0, 0, 0, 2010, 1515, 1892, 0, 0, 1548,
	1550, 1551, 1552, 1283, 0, 0, 1100, 1160, 0, 0,
	0, 1139, 1140, 1069, 0, 1265, 1263, 1118, 0, 1151,
	169, 0, 1149, 0, 1078, 0, 0, 1081, 0, 0,
	147, 2297, 145, 0, 194, 258, 0, 252, 250, 251,
	1014, 0, 0, 1129, 1131, 0, 1026, 1058, 1024, 457,
	1205, 1238, 1149, 0, 1147, 0, 1390, 1402, 1384, 1385,
	0, 1400, 0, 313, 313, 1058, 1147, 1012, 1068, 313,
	657, 659, 2007, 2027, 2016, -2, 2579, 2304, 0, 2027,
	2027, 2002, 2003, 0, 0, 1102, 1156, 1157, 0, 1152,
	1153, 1154, 2233, 1103, 1104, 1137, 0, 0, 1155, 190,
	1058, 1075, 0, 0, 1076, 0, 0, 150, 0, 152,
	223, 246, 0, 0, 1006, 0, 1128, 0, 0, 0,
	0, 1073, 1014, 1147, 0, 1058, 0, 1376, 1389, 0,
	1399, 1380, 0, 292, 293, 1069, 1058, 1642, 0, 294,
	2012, 0, 0, 2018, 2019, 2020, 2021, 2022, 2013, 2014,
	1093, 0, 1158, 0, 1159, 0, 0, 0, 1642, 1146,
	0, 1160, 174, 1079, 0, 1082, 0, 148, 0, 253,
	254, 1003, 1005, 0, 1130, 1015, 0, 1017, 1012, 1023,
	1058, 0, 1069, 0, 1382, 2195, 1383, 1419, 0, 1012,
	1069, 1112, 0, 2024, 2025, 0, 0, 0, 1161, 0,
	1164, 1165, 0, 1162, 1117, 0, 1137, 0, 0, 0,
	0, 1016, 1014, 1069, 1149, 1012, 1147, 1390, 0, 1642,
	1012, 2023, 2026, 2017, 1099, 1163, 1166, 1167, 1148, 1119,
	0, 0, 256, 0, 1061, 1006, 1012, 1147, 1642, 1058,
	1377, 1642, 1110, 1642, 1066, 0, 0, 1057, 1059, 1060,
	1004, 1642, 1058, 1251, 1069, 1420, 1111, 1080, 1065, 0,
	257, 1249, 1069, 1012, 0, 1012, 1642, 0, 1642, 1252,
	1066, 1250, 1083,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 574, 3, 580, 575, 3,
	585, 586, 578, 576, 590, 577, 587, 579, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 593, 3,
	566, 568, 567, 571, 589, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 583, 3, 584, 581, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 591, 573, 592, 569,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 570, 57909, 572,
	57910, 582, 57911, 588, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1364
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1369
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1371
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1374
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1375
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1376
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1377
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1378
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1379
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1380
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1381
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1382
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1383
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1384
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1391
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1400
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1402
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1405
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1406
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1407
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1408
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1409
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1410
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1411
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1412
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1413
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1472
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1534
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1538
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1564
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1568
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1574
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1583
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1592
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1601
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1608
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1633
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1665
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1669
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1673
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1683
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1689
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1698
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1709
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1719
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1727
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1750
		{
		}
	case 125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1751
		{
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1755
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1764
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1776
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1781
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1788
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1800
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1807
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1815
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1824
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1835
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1843
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1854
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1864
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1874
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1883
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1894
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1900
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1916
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1926
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1931
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1942
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1952
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1988
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1998
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2003
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2013
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2017
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2053
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2060
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2063
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2069
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2076
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2084
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2121
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2138
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2156
		{
			sqlVAL.union.val = nil
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = true
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = false
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = nil
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2183
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2187
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2237
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2257
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2267
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2285
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2294
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2298
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2336
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2341
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2348
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2387
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2429
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2451
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2471
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2479
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2502
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2506
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2623
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2640
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2666
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2721
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2740
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2757
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2801
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2854
		{
			return unimplemented(sqllex, "alter function")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2858
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2862
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2866
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2904
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2913
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2919
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2924
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2929
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2934
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2939
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2943
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2962
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2970
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = nil
		}
	case 314:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3046
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3060
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3076
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3080
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3112
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3113
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3114
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3205
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3226
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3242
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3251
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3265
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3266
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3269
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3270
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3271
		{
			return helpWith(sqllex, "CREATE")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3281
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3284
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3285
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3288
		{
			return unimplemented(sqllex, "create access method")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3290
		{
			return unimplemented(sqllex, "create cast")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3291
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3292
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3293
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3294
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3295
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3296
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3297
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3298
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3300
		{
			return unimplemented(sqllex, "create publication")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3301
		{
			return unimplemented(sqllex, "create rule")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			return unimplemented(sqllex, "create server")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3306
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3309
		{
		}
	case 393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3310
		{
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3313
		{
		}
	case 395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3314
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3317
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3318
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3321
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3322
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3323
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3324
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3325
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3327
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3328
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3329
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3330
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3331
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3332
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3333
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3334
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3335
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			return unimplemented(sqllex, "drop server")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3337
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3338
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3339
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3343
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3344
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3345
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3346
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3348
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3350
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3351
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3387
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3396
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3419
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3430
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3465
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3485
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3500
		{

			sqlVAL.union.val = nil
		}
	case 455:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			return helpWith(sqllex, "DELETE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3587
		{
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3598
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3599
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3601
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3602
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3611
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3612
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3613
		{
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3614
		{
			return helpWith(sqllex, "DROP")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3617
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3618
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3619
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3620
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3621
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3623
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3703
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3711
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3727
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3741
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3749
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3756
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3779
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3794
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3813
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3818
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3836
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3843
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3870
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3877
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3879
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3895
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3903
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3911
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3922
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3930
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3933
		{
			return helpWith(sqllex, "DELETE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "INSERT")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3940
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3957
		{
			return helpWith(sqllex, "DELETE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3958
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3959
		{
			return helpWith(sqllex, "INSERT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3966
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3974
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3992
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4000
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4004
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4025
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4033
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4088
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4104
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4114
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4118
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "GRANT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4147
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4151
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4169
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4172
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4181
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4191
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "RESET")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "RESET")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			return helpWith(sqllex, "USE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4255
		{
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4256
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4257
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4261
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "USE")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4279
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4297
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4323
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4377
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4434
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4439
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4443
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4462
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4469
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4474
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4479
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4484
		{
			return unimplemented(sqllex, "set from current")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4485
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4498
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = tree.Low
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = tree.Normal
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = tree.High
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4631
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4637
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4639
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4640
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4641
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4642
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4649
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4652
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4654
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4655
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4656
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4657
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4658
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4659
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4660
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4661
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4662
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4663
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4664
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4665
		{
			return helpWith(sqllex, "SHOW")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4672
		{
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4673
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4676
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4680
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4685
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4695
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4700
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4712
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.str = "client_encoding"
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.str = "timezone"
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4727
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4745
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4749
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4760
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4768
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4808
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4817
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4847
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4856
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4941
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4954
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4962
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4970
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4973
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4986
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4995
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5006
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5027
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5031
		{
			sqlVAL.union.val = true
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = true
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5035
		{
			sqlVAL.union.val = false
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5063
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5065
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5067
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5078
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5104
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5121
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5129
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5131
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5169
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5174
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5176
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5180
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = true
		}
	case 886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = false
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5195
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5241
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = true
		}
	case 900:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = false
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5264
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5278
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5285
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5289
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5293
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5314
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5319
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5324
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5342
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5350
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5366
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5377
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5395
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5403
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5424
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5429
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5434
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5438
		{
		}
	case 940:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5447
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5461
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5470
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5482
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5517
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5541
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5551
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5558
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5565
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5698
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5741
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5750
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5786
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5799
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5800
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5801
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5811
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5812
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5813
		{
			return helpWith(sqllex, "RESUME")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5831
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5840
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5872
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5880
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5888
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5915
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5943
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5982
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5998
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6027
		{

			sqlVAL.union.val = nil
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6033
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.str = ""
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6043
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = nil
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6066
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6070
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6096
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6110
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6125
		{
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6127
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6182
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6208
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6219
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6222
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6225
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6226
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6232
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6248
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6253
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.str = ""
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6396
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6429
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6496
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6521
		{

			sqlVAL.union.val = true
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = false
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6532
		{
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6533
		{
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6634
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6645
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6662
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6672
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6687
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6752
		{
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6753
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6754
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6755
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6756
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6757
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6829
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6913
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6922
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6930
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6946
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6956
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6958
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6960
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6962
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6965
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6968
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6970
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6983
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7008
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7023
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = true
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7033
		{

			sqlVAL.union.val = true
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = false
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7048
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7062
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7074
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7086
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7096
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7106
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = nil
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7216
		{
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7217
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7242
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7244
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7246
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7248
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7250
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7252
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7290
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7308
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7327
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7344
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7361
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7365
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = false
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = true
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = false
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = true
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = false
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7419
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7425
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7431
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7439
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.str = ""
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.str = ""
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7498
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7504
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7729
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7735
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7747
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7753
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7767
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7773
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7790
		{
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7791
		{
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7794
		{
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7795
		{
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7806
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7824
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7833
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7854
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7862
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7883
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7891
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7902
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7906
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7907
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7908
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7932
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7945
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7950
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7959
		{
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7960
		{
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7961
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7978
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7981
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7982
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8010
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8023
		{
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8025
		{
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8029
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8116
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.str = ""
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8142
		{

		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8157
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.str = ""
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.str = ""
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.str = ""
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.str = ""
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8212
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8225
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8226
		{
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8255
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8273
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8277
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8286
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8335
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8362
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8366
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8436
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8457
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8472
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8651
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8652
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8653
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8714
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8758
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8774
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = true
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = false
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8827
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8828
		{
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = nil
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8841
		{
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8842
		{
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = true
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = false
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = false
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = true
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8871
		{
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8872
		{
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8875
		{
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8876
		{
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8917
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8938
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8943
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8969
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9002
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9057
		{
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9058
		{
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9061
		{
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9062
		{
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9096
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9097
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9098
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9128
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9130
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9145
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9167
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9172
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9177
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9188
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9200
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9219
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9258
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9268
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9303
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9314
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9344
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9377
		{
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9379
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = nil
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = true
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = false
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.str = tree.AstFull
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.str = tree.AstRight
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.str = tree.AstInner
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9497
		{
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.str = tree.AstHash
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.str = ""
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9566
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9571
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9589
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9595
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9601
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9611
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = true
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = false
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = true
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = false
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9660
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9673
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9681
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9682
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9700
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9702
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9710
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9723
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9730
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9739
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9779
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9791
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9792
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = types.Geography
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9841
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9849
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9875
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9883
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = nil
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = types.Int2
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = types.Int
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = types.Float4
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = types.Float
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9926
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9934
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9942
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = types.Bool
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9956
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = types.Float
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9975
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9981
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10003
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = types.String
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = true
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = false
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = types.Date
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10052
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10060
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10074
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10083
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10091
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10108
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = true
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = false
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = false
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = types.Interval
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10132
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10216
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10231
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = nil
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10261
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10321
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10470
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10478
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10591
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10657
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10679
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10787
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10891
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10896
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10922
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10931
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10946
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10976
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10987
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10988
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11012
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11078
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11203
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11208
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11217
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11226
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11235
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11244
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11249
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11254
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11259
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11264
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11274
		{
			return unimplemented(sqllex, "treat")
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11295
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11300
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11347
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.str = ""
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11436
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11449
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11517
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11546
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = tree.Any
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = tree.Some
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = tree.All
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = tree.Div
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = tree.LT
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = tree.GT
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = tree.LE
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = tree.GE
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = tree.NE
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = tree.JSONExists
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11596
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = tree.Contains
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = tree.ContainedBy
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = tree.LShift
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = tree.RShift
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = tree.Concat
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = tree.JSONFetchVal
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = tree.JSONFetchText
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = tree.JSONFetchValPath
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = tree.JSONFetchTextPath
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = tree.JSONSomeExists
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = tree.JSONAllExists
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = tree.NotRegMatch
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = tree.RegIMatch
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = tree.NotRegIMatch
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = tree.Overlaps
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11622
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = tree.Like
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11903
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11907
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11923
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11962
		{
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11963
		{
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12035
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12043
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12116
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12132
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12141
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12152
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12161
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12169
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12181
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12262
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12274
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12292
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12394
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12407
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12414
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.str = ""
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
