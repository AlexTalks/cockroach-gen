// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return expr, 0
		case tree.Minus:
			return unaryNegation(expr), 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: expr}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:156

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}

//line sql-gen.y:849
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13317

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1523,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 400,
	-2, 0,
	-1, 74,
	242, 238,
	510, 238,
	-2, 0,
	-1, 87,
	230, 1265,
	244, 1265,
	260, 396,
	387, 396,
	397, 1035,
	434, 396,
	447, 1035,
	494, 1035,
	521, 396,
	547, 1035,
	-2, 0,
	-1, 93,
	132, 1523,
	237, 1523,
	532, 1523,
	533, 1523,
	-2, 0,
	-1, 109,
	150, 1494,
	169, 1494,
	182, 1494,
	240, 1494,
	273, 1494,
	339, 1494,
	349, 1494,
	527, 1494,
	-2, 1465,
	-1, 148,
	158, 892,
	259, 892,
	390, 854,
	452, 854,
	493, 854,
	513, 892,
	515, 854,
	-2, 0,
	-1, 151,
	4, 1525,
	21, 1525,
	22, 1525,
	23, 1525,
	24, 1525,
	25, 1525,
	26, 1525,
	27, 1525,
	29, 1525,
	30, 1525,
	36, 1525,
	41, 1525,
	42, 1525,
	44, 1525,
	45, 1525,
	46, 1525,
	47, 1525,
	48, 1525,
	49, 1525,
	50, 1525,
	51, 1525,
	53, 1525,
	54, 1525,
	55, 1525,
	56, 1525,
	58, 1525,
	59, 1525,
	60, 1525,
	61, 1525,
	62, 1525,
	63, 1525,
	64, 1525,
	68, 1525,
	69, 1525,
	70, 1525,
	71, 1525,
	73, 1525,
	74, 1525,
	75, 1525,
	79, 1525,
	80, 1525,
	81, 1525,
	82, 1525,
	83, 1525,
	84, 1525,
	85, 1525,
	88, 1525,
	89, 1525,
	90, 1525,
	91, 1525,
	92, 1525,
	94, 1525,
	96, 1525,
	97, 1525,
	98, 1525,
	99, 1525,
	100, 1525,
	101, 1525,
	103, 1525,
	104, 1525,
	105, 1525,
	107, 1525,
	108, 1525,
	109, 1525,
	117, 1525,
	118, 1525,
	119, 1525,
	120, 1525,
	121, 1525,
	123, 1525,
	124, 1525,
	125, 1525,
	127, 1525,
	128, 1525,
	129, 1525,
	131, 1525,
	132, 1525,
	133, 1525,
	135, 1525,
	136, 1525,
	137, 1525,
	140, 1525,
	141, 1525,
	142, 1525,
	144, 1525,
	145, 1525,
	147, 1525,
	148, 1525,
	149, 1525,
	151, 1525,
	152, 1525,
	153, 1525,
	154, 1525,
	155, 1525,
	156, 1525,
	157, 1525,
	158, 1525,
	159, 1525,
	160, 1525,
	161, 1525,
	162, 1525,
	163, 1525,
	164, 1525,
	165, 1525,
	166, 1525,
	168, 1525,
	174, 1525,
	175, 1525,
	176, 1525,
	177, 1525,
	181, 1525,
	183, 1525,
	184, 1525,
	188, 1525,
	189, 1525,
	190, 1525,
	191, 1525,
	192, 1525,
	193, 1525,
	194, 1525,
	195, 1525,
	196, 1525,
	197, 1525,
	198, 1525,
	199, 1525,
	200, 1525,
	201, 1525,
	203, 1525,
	204, 1525,
	206, 1525,
	207, 1525,
	209, 1525,
	210, 1525,
	211, 1525,
	212, 1525,
	213, 1525,
	214, 1525,
	215, 1525,
	216, 1525,
	217, 1525,
	219, 1525,
	220, 1525,
	222, 1525,
	223, 1525,
	224, 1525,
	225, 1525,
	226, 1525,
	230, 1525,
	231, 1525,
	232, 1525,
	233, 1525,
	234, 1525,
	237, 1525,
	238, 1525,
	239, 1525,
	241, 1525,
	243, 1525,
	244, 1525,
	246, 1525,
	248, 1525,
	249, 1525,
	250, 1525,
	252, 1525,
	256, 1525,
	257, 1525,
	258, 1525,
	259, 1525,
	260, 1525,
	261, 1525,
	263, 1525,
	264, 1525,
	265, 1525,
	267, 1525,
	268, 1525,
	270, 1525,
	271, 1525,
	274, 1525,
	278, 1525,
	279, 1525,
	280, 1525,
	283, 1525,
	284, 1525,
	285, 1525,
	286, 1525,
	288, 1525,
	289, 1525,
	290, 1525,
	291, 1525,
	292, 1525,
	293, 1525,
	294, 1525,
	295, 1525,
	296, 1525,
	297, 1525,
	298, 1525,
	299, 1525,
	300, 1525,
	301, 1525,
	302, 1525,
	303, 1525,
	304, 1525,
	305, 1525,
	306, 1525,
	307, 1525,
	308, 1525,
	309, 1525,
	311, 1525,
	313, 1525,
	314, 1525,
	315, 1525,
	316, 1525,
	317, 1525,
	318, 1525,
	319, 1525,
	320, 1525,
	321, 1525,
	322, 1525,
	323, 1525,
	324, 1525,
	326, 1525,
	327, 1525,
	329, 1525,
	331, 1525,
	332, 1525,
	334, 1525,
	335, 1525,
	336, 1525,
	337, 1525,
	338, 1525,
	341, 1525,
	344, 1525,
	345, 1525,
	346, 1525,
	347, 1525,
	350, 1525,
	351, 1525,
	352, 1525,
	354, 1525,
	356, 1525,
	357, 1525,
	358, 1525,
	359, 1525,
	360, 1525,
	361, 1525,
	362, 1525,
	363, 1525,
	364, 1525,
	365, 1525,
	366, 1525,
	367, 1525,
	369, 1525,
	370, 1525,
	371, 1525,
	372, 1525,
	373, 1525,
	374, 1525,
	375, 1525,
	376, 1525,
	377, 1525,
	378, 1525,
	379, 1525,
	380, 1525,
	381, 1525,
	382, 1525,
	383, 1525,
	385, 1525,
	386, 1525,
	388, 1525,
	389, 1525,
	390, 1525,
	391, 1525,
	392, 1525,
	393, 1525,
	394, 1525,
	395, 1525,
	396, 1525,
	397, 1525,
	398, 1525,
	399, 1525,
	401, 1525,
	403, 1525,
	404, 1525,
	405, 1525,
	410, 1525,
	412, 1525,
	413, 1525,
	414, 1525,
	415, 1525,
	416, 1525,
	417, 1525,
	418, 1525,
	419, 1525,
	420, 1525,
	422, 1525,
	423, 1525,
	424, 1525,
	426, 1525,
	427, 1525,
	428, 1525,
	429, 1525,
	430, 1525,
	431, 1525,
	432, 1525,
	434, 1525,
	435, 1525,
	436, 1525,
	437, 1525,
	438, 1525,
	439, 1525,
	440, 1525,
	441, 1525,
	442, 1525,
	443, 1525,
	444, 1525,
	445, 1525,
	447, 1525,
	448, 1525,
	449, 1525,
	450, 1525,
	451, 1525,
	452, 1525,
	454, 1525,
	455, 1525,
	456, 1525,
	457, 1525,
	458, 1525,
	459, 1525,
	461, 1525,
	462, 1525,
	463, 1525,
	464, 1525,
	465, 1525,
	466, 1525,
	467, 1525,
	468, 1525,
	470, 1525,
	472, 1525,
	473, 1525,
	474, 1525,
	475, 1525,
	476, 1525,
	477, 1525,
	478, 1525,
	479, 1525,
	480, 1525,
	481, 1525,
	482, 1525,
	483, 1525,
	484, 1525,
	485, 1525,
	486, 1525,
	487, 1525,
	489, 1525,
	490, 1525,
	492, 1525,
	493, 1525,
	495, 1525,
	496, 1525,
	497, 1525,
	498, 1525,
	499, 1525,
	500, 1525,
	501, 1525,
	502, 1525,
	503, 1525,
	505, 1525,
	506, 1525,
	507, 1525,
	508, 1525,
	509, 1525,
	511, 1525,
	513, 1525,
	514, 1525,
	515, 1525,
	516, 1525,
	517, 1525,
	518, 1525,
	520, 1525,
	521, 1525,
	522, 1525,
	523, 1525,
	525, 1525,
	526, 1525,
	529, 1525,
	530, 1525,
	531, 1525,
	532, 1525,
	533, 1525,
	534, 1525,
	535, 1525,
	537, 1525,
	540, 1525,
	541, 1525,
	542, 1525,
	543, 1525,
	544, 1525,
	545, 1525,
	547, 1525,
	548, 1525,
	549, 1525,
	550, 1525,
	552, 1525,
	557, 1525,
	558, 1525,
	559, 1525,
	560, 1525,
	561, 1525,
	562, 1525,
	-2, 0,
	-1, 152,
	1, 1380,
	130, 1380,
	248, 1380,
	328, 1380,
	385, 1380,
	394, 1380,
	566, 1380,
	590, 1380,
	-2, 0,
	-1, 154,
	1, 1380,
	590, 1380,
	-2, 0,
	-1, 155,
	1, 1380,
	590, 1380,
	-2, 0,
	-1, 156,
	1, 1380,
	510, 1380,
	590, 1380,
	-2, 0,
	-1, 185,
	150, 1493,
	169, 1493,
	182, 1493,
	240, 1493,
	273, 1493,
	339, 1493,
	349, 1493,
	527, 1493,
	-2, 1468,
	-1, 231,
	4, 1532,
	5, 1532,
	6, 1532,
	7, 1532,
	8, 1532,
	9, 1532,
	10, 1532,
	21, 1532,
	22, 1532,
	23, 1532,
	24, 1532,
	25, 1532,
	26, 1532,
	27, 1532,
	29, 1532,
	30, 1532,
	36, 1532,
	37, 1532,
	41, 1532,
	42, 1532,
	43, 1532,
	44, 1532,
	45, 1532,
	46, 1532,
	47, 1532,
	48, 1532,
	49, 1532,
	50, 1532,
	51, 1532,
	53, 1532,
	54, 1532,
	55, 1532,
	56, 1532,
	58, 1532,
	59, 1532,
	60, 1532,
	61, 1532,
	62, 1532,
	63, 1532,
	64, 1532,
	65, 1532,
	66, 1532,
	67, 1532,
	68, 1532,
	69, 1532,
	70, 1532,
	71, 1532,
	73, 1532,
	74, 1532,
	75, 1532,
	77, 1532,
	79, 1532,
	80, 1532,
	81, 1532,
	82, 1532,
	83, 1532,
	84, 1532,
	85, 1532,
	88, 1532,
	89, 1532,
	90, 1532,
	91, 1532,
	92, 1532,
	94, 1532,
	96, 1532,
	97, 1532,
	98, 1532,
	99, 1532,
	100, 1532,
	101, 1532,
	103, 1532,
	104, 1532,
	105, 1532,
	106, 1532,
	107, 1532,
	108, 1532,
	109, 1532,
	110, 1532,
	111, 1532,
	112, 1532,
	113, 1532,
	114, 1532,
	115, 1532,
	116, 1532,
	117, 1532,
	118, 1532,
	119, 1532,
	120, 1532,
	121, 1532,
	122, 1532,
	123, 1532,
	124, 1532,
	125, 1532,
	126, 1532,
	127, 1532,
	128, 1532,
	129, 1532,
	131, 1532,
	132, 1532,
	133, 1532,
	135, 1532,
	136, 1532,
	137, 1532,
	140, 1532,
	141, 1532,
	142, 1532,
	144, 1532,
	145, 1532,
	147, 1532,
	148, 1532,
	149, 1532,
	151, 1532,
	152, 1532,
	153, 1532,
	154, 1532,
	155, 1532,
	156, 1532,
	157, 1532,
	158, 1532,
	159, 1532,
	160, 1532,
	161, 1532,
	162, 1532,
	163, 1532,
	164, 1532,
	165, 1532,
	166, 1532,
	167, 1532,
	168, 1532,
	174, 1532,
	175, 1532,
	176, 1532,
	177, 1532,
	181, 1532,
	183, 1532,
	184, 1532,
	187, 1532,
	188, 1532,
	189, 1532,
	190, 1532,
	191, 1532,
	192, 1532,
	193, 1532,
	194, 1532,
	195, 1532,
	196, 1532,
	197, 1532,
	198, 1532,
	199, 1532,
	200, 1532,
	201, 1532,
	203, 1532,
	204, 1532,
	206, 1532,
	207, 1532,
	209, 1532,
	210, 1532,
	211, 1532,
	212, 1532,
	213, 1532,
	214, 1532,
	215, 1532,
	216, 1532,
	217, 1532,
	218, 1532,
	219, 1532,
	220, 1532,
	222, 1532,
	223, 1532,
	224, 1532,
	225, 1532,
	226, 1532,
	230, 1532,
	231, 1532,
	232, 1532,
	233, 1532,
	234, 1532,
	236, 1532,
	237, 1532,
	238, 1532,
	239, 1532,
	241, 1532,
	243, 1532,
	244, 1532,
	245, 1532,
	246, 1532,
	247, 1532,
	248, 1532,
	249, 1532,
	250, 1532,
	251, 1532,
	252, 1532,
	256, 1532,
	257, 1532,
	258, 1532,
	259, 1532,
	260, 1532,
	261, 1532,
	263, 1532,
	264, 1532,
	265, 1532,
	267, 1532,
	268, 1532,
	269, 1532,
	270, 1532,
	271, 1532,
	272, 1532,
	274, 1532,
	278, 1532,
	279, 1532,
	280, 1532,
	281, 1532,
	282, 1532,
	283, 1532,
	284, 1532,
	285, 1532,
	286, 1532,
	288, 1532,
	289, 1532,
	290, 1532,
	291, 1532,
	292, 1532,
	293, 1532,
	294, 1532,
	295, 1532,
	296, 1532,
	297, 1532,
	298, 1532,
	299, 1532,
	300, 1532,
	301, 1532,
	302, 1532,
	303, 1532,
	304, 1532,
	305, 1532,
	306, 1532,
	307, 1532,
	308, 1532,
	309, 1532,
	311, 1532,
	312, 1532,
	313, 1532,
	314, 1532,
	315, 1532,
	316, 1532,
	317, 1532,
	318, 1532,
	319, 1532,
	320, 1532,
	321, 1532,
	322, 1532,
	323, 1532,
	324, 1532,
	325, 1532,
	326, 1532,
	327, 1532,
	328, 1532,
	329, 1532,
	330, 1532,
	331, 1532,
	332, 1532,
	333, 1532,
	334, 1532,
	335, 1532,
	336, 1532,
	337, 1532,
	338, 1532,
	341, 1532,
	345, 1532,
	346, 1532,
	347, 1532,
	350, 1532,
	351, 1532,
	352, 1532,
	353, 1532,
	354, 1532,
	355, 1532,
	356, 1532,
	357, 1532,
	358, 1532,
	359, 1532,
	360, 1532,
	361, 1532,
	362, 1532,
	363, 1532,
	364, 1532,
	365, 1532,
	366, 1532,
	367, 1532,
	369, 1532,
	370, 1532,
	371, 1532,
	372, 1532,
	373, 1532,
	374, 1532,
	375, 1532,
	376, 1532,
	377, 1532,
	378, 1532,
	379, 1532,
	380, 1532,
	381, 1532,
	382, 1532,
	383, 1532,
	385, 1532,
	386, 1532,
	388, 1532,
	389, 1532,
	390, 1532,
	391, 1532,
	392, 1532,
	393, 1532,
	394, 1532,
	395, 1532,
	396, 1532,
	397, 1532,
	398, 1532,
	399, 1532,
	401, 1532,
	403, 1532,
	404, 1532,
	405, 1532,
	410, 1532,
	412, 1532,
	413, 1532,
	414, 1532,
	415, 1532,
	416, 1532,
	417, 1532,
	418, 1532,
	419, 1532,
	420, 1532,
	422, 1532,
	423, 1532,
	424, 1532,
	425, 1532,
	426, 1532,
	427, 1532,
	428, 1532,
	429, 1532,
	430, 1532,
	431, 1532,
	432, 1532,
	434, 1532,
	435, 1532,
	436, 1532,
	437, 1532,
	438, 1532,
	439, 1532,
	440, 1532,
	441, 1532,
	442, 1532,
	443, 1532,
	444, 1532,
	445, 1532,
	447, 1532,
	448, 1532,
	449, 1532,
	450, 1532,
	451, 1532,
	452, 1532,
	453, 1532,
	454, 1532,
	455, 1532,
	456, 1532,
	457, 1532,
	458, 1532,
	459, 1532,
	460, 1532,
	461, 1532,
	462, 1532,
	463, 1532,
	464, 1532,
	465, 1532,
	466, 1532,
	467, 1532,
	468, 1532,
	470, 1532,
	472, 1532,
	473, 1532,
	474, 1532,
	475, 1532,
	476, 1532,
	477, 1532,
	478, 1532,
	479, 1532,
	480, 1532,
	481, 1532,
	482, 1532,
	483, 1532,
	484, 1532,
	485, 1532,
	486, 1532,
	487, 1532,
	489, 1532,
	490, 1532,
	491, 1532,
	492, 1532,
	493, 1532,
	495, 1532,
	496, 1532,
	497, 1532,
	498, 1532,
	499, 1532,
	500, 1532,
	501, 1532,
	502, 1532,
	503, 1532,
	505, 1532,
	506, 1532,
	507, 1532,
	508, 1532,
	509, 1532,
	511, 1532,
	513, 1532,
	514, 1532,
	515, 1532,
	516, 1532,
	517, 1532,
	518, 1532,
	519, 1532,
	520, 1532,
	521, 1532,
	522, 1532,
	523, 1532,
	525, 1532,
	526, 1532,
	528, 1532,
	529, 1532,
	530, 1532,
	531, 1532,
	532, 1532,
	533, 1532,
	534, 1532,
	535, 1532,
	536, 1532,
	537, 1532,
	540, 1532,
	541, 1532,
	542, 1532,
	543, 1532,
	544, 1532,
	545, 1532,
	547, 1532,
	548, 1532,
	549, 1532,
	550, 1532,
	552, 1532,
	557, 1532,
	558, 1532,
	559, 1532,
	560, 1532,
	561, 1532,
	562, 1532,
	563, 1532,
	571, 1532,
	578, 1532,
	579, 1532,
	580, 1532,
	587, 1532,
	591, 1532,
	-2, 0,
	-1, 732,
	4, 1263,
	21, 1263,
	22, 1263,
	23, 1263,
	24, 1263,
	25, 1263,
	26, 1263,
	27, 1263,
	29, 1263,
	30, 1263,
	36, 1263,
	41, 1263,
	42, 1263,
	44, 1263,
	45, 1263,
	46, 1263,
	47, 1263,
	48, 1263,
	49, 1263,
	50, 1263,
	51, 1263,
	53, 1263,
	54, 1263,
	55, 1263,
	56, 1263,
	58, 1263,
	59, 1263,
	60, 1263,
	61, 1263,
	62, 1263,
	63, 1263,
	64, 1263,
	68, 1263,
	69, 1263,
	70, 1263,
	71, 1263,
	73, 1263,
	74, 1263,
	75, 1263,
	79, 1263,
	80, 1263,
	81, 1263,
	82, 1263,
	83, 1263,
	84, 1263,
	85, 1263,
	88, 1263,
	89, 1263,
	90, 1263,
	91, 1263,
	92, 1263,
	94, 1263,
	96, 1263,
	97, 1263,
	98, 1263,
	99, 1263,
	100, 1263,
	101, 1263,
	103, 1263,
	104, 1263,
	105, 1263,
	107, 1263,
	108, 1263,
	109, 1263,
	117, 1263,
	118, 1263,
	119, 1263,
	120, 1263,
	121, 1263,
	123, 1263,
	124, 1263,
	125, 1263,
	127, 1263,
	128, 1263,
	129, 1263,
	131, 1263,
	132, 1263,
	133, 1263,
	135, 1263,
	136, 1263,
	137, 1263,
	140, 1263,
	141, 1263,
	142, 1263,
	144, 1263,
	145, 1263,
	147, 1263,
	148, 1263,
	149, 1263,
	151, 1263,
	152, 1263,
	153, 1263,
	154, 1263,
	155, 1263,
	156, 1263,
	157, 1263,
	158, 1263,
	159, 1263,
	160, 1263,
	161, 1263,
	162, 1263,
	163, 1263,
	164, 1263,
	165, 1263,
	166, 1263,
	168, 1263,
	174, 1263,
	175, 1263,
	176, 1263,
	177, 1263,
	181, 1263,
	183, 1263,
	184, 1263,
	188, 1263,
	189, 1263,
	190, 1263,
	191, 1263,
	192, 1263,
	193, 1263,
	194, 1263,
	195, 1263,
	196, 1263,
	197, 1263,
	198, 1263,
	199, 1263,
	200, 1263,
	201, 1263,
	203, 1263,
	204, 1263,
	206, 1263,
	207, 1263,
	209, 1263,
	210, 1263,
	211, 1263,
	212, 1263,
	213, 1263,
	214, 1263,
	215, 1263,
	216, 1263,
	217, 1263,
	219, 1263,
	220, 1263,
	222, 1263,
	223, 1263,
	224, 1263,
	225, 1263,
	226, 1263,
	230, 1263,
	231, 1263,
	232, 1263,
	233, 1263,
	234, 1263,
	237, 1263,
	238, 1263,
	239, 1263,
	241, 1263,
	243, 1263,
	244, 1263,
	246, 1263,
	248, 1263,
	249, 1263,
	250, 1263,
	252, 1263,
	256, 1263,
	257, 1263,
	258, 1263,
	259, 1263,
	260, 1263,
	261, 1263,
	263, 1263,
	264, 1263,
	265, 1263,
	267, 1263,
	268, 1263,
	270, 1263,
	271, 1263,
	274, 1263,
	278, 1263,
	279, 1263,
	280, 1263,
	283, 1263,
	284, 1263,
	285, 1263,
	286, 1263,
	288, 1263,
	289, 1263,
	290, 1263,
	291, 1263,
	292, 1263,
	293, 1263,
	294, 1263,
	295, 1263,
	296, 1263,
	297, 1263,
	298, 1263,
	299, 1263,
	300, 1263,
	301, 1263,
	302, 1263,
	303, 1263,
	304, 1263,
	305, 1263,
	306, 1263,
	307, 1263,
	308, 1263,
	309, 1263,
	311, 1263,
	313, 1263,
	314, 1263,
	315, 1263,
	316, 1263,
	317, 1263,
	318, 1263,
	319, 1263,
	320, 1263,
	321, 1263,
	322, 1263,
	323, 1263,
	324, 1263,
	326, 1263,
	327, 1263,
	329, 1263,
	331, 1263,
	332, 1263,
	334, 1263,
	335, 1263,
	336, 1263,
	337, 1263,
	338, 1263,
	341, 1263,
	345, 1263,
	346, 1263,
	347, 1263,
	350, 1263,
	351, 1263,
	352, 1263,
	354, 1263,
	356, 1263,
	357, 1263,
	358, 1263,
	359, 1263,
	360, 1263,
	361, 1263,
	362, 1263,
	363, 1263,
	364, 1263,
	365, 1263,
	366, 1263,
	367, 1263,
	369, 1263,
	370, 1263,
	371, 1263,
	372, 1263,
	373, 1263,
	374, 1263,
	375, 1263,
	376, 1263,
	377, 1263,
	378, 1263,
	379, 1263,
	380, 1263,
	381, 1263,
	382, 1263,
	383, 1263,
	385, 1263,
	386, 1263,
	388, 1263,
	389, 1263,
	390, 1263,
	391, 1263,
	392, 1263,
	393, 1263,
	394, 1263,
	395, 1263,
	396, 1263,
	397, 1263,
	398, 1263,
	399, 1263,
	401, 1263,
	403, 1263,
	404, 1263,
	405, 1263,
	410, 1263,
	412, 1263,
	413, 1263,
	414, 1263,
	415, 1263,
	416, 1263,
	417, 1263,
	418, 1263,
	419, 1263,
	420, 1263,
	422, 1263,
	423, 1263,
	424, 1263,
	426, 1263,
	427, 1263,
	428, 1263,
	429, 1263,
	430, 1263,
	431, 1263,
	432, 1263,
	434, 1263,
	435, 1263,
	436, 1263,
	437, 1263,
	438, 1263,
	439, 1263,
	440, 1263,
	441, 1263,
	442, 1263,
	443, 1263,
	444, 1263,
	445, 1263,
	447, 1263,
	448, 1263,
	449, 1263,
	450, 1263,
	451, 1263,
	452, 1263,
	454, 1263,
	455, 1263,
	456, 1263,
	457, 1263,
	458, 1263,
	459, 1263,
	461, 1263,
	462, 1263,
	463, 1263,
	464, 1263,
	465, 1263,
	466, 1263,
	467, 1263,
	468, 1263,
	470, 1263,
	472, 1263,
	473, 1263,
	474, 1263,
	475, 1263,
	476, 1263,
	477, 1263,
	478, 1263,
	479, 1263,
	480, 1263,
	481, 1263,
	482, 1263,
	483, 1263,
	484, 1263,
	485, 1263,
	486, 1263,
	487, 1263,
	489, 1263,
	490, 1263,
	492, 1263,
	493, 1263,
	495, 1263,
	496, 1263,
	497, 1263,
	498, 1263,
	499, 1263,
	500, 1263,
	501, 1263,
	502, 1263,
	503, 1263,
	505, 1263,
	506, 1263,
	507, 1263,
	508, 1263,
	509, 1263,
	511, 1263,
	513, 1263,
	514, 1263,
	515, 1263,
	516, 1263,
	517, 1263,
	518, 1263,
	520, 1263,
	521, 1263,
	522, 1263,
	523, 1263,
	525, 1263,
	526, 1263,
	529, 1263,
	530, 1263,
	531, 1263,
	532, 1263,
	533, 1263,
	534, 1263,
	535, 1263,
	537, 1263,
	540, 1263,
	541, 1263,
	542, 1263,
	543, 1263,
	544, 1263,
	545, 1263,
	547, 1263,
	548, 1263,
	549, 1263,
	550, 1263,
	552, 1263,
	557, 1263,
	558, 1263,
	559, 1263,
	560, 1263,
	561, 1263,
	562, 1263,
	-2, 0,
	-1, 751,
	186, 2317,
	510, 2317,
	570, 2317,
	589, 2317,
	-2, 0,
	-1, 752,
	186, 2424,
	510, 2424,
	570, 2424,
	589, 2424,
	-2, 0,
	-1, 753,
	186, 2304,
	510, 2304,
	570, 2304,
	589, 2304,
	-2, 0,
	-1, 755,
	186, 2557,
	510, 2557,
	570, 2557,
	589, 2557,
	-2, 0,
	-1, 757,
	186, 2598,
	510, 2598,
	570, 2598,
	589, 2598,
	-2, 0,
	-1, 764,
	186, 2451,
	510, 2451,
	570, 2451,
	589, 2451,
	-2, 688,
	-1, 797,
	589, 2253,
	592, 2253,
	-2, 966,
	-1, 798,
	589, 2255,
	592, 2255,
	-2, 967,
	-1, 799,
	589, 2254,
	592, 2254,
	-2, 968,
	-1, 800,
	592, 2179,
	-2, 969,
	-1, 823,
	182, 253,
	-2, 0,
	-1, 847,
	43, 2226,
	-2, 0,
	-1, 848,
	547, 1241,
	-2, 1036,
	-1, 864,
	4, 1661,
	21, 1661,
	22, 1661,
	23, 1661,
	24, 1661,
	25, 1661,
	26, 1661,
	27, 1661,
	29, 1661,
	30, 1661,
	36, 1661,
	41, 1661,
	42, 1661,
	44, 1661,
	45, 1661,
	46, 1661,
	47, 1661,
	48, 1661,
	49, 1661,
	50, 1661,
	51, 1661,
	53, 1661,
	54, 1661,
	55, 1661,
	56, 1661,
	58, 1661,
	59, 1661,
	60, 1661,
	61, 1661,
	62, 1661,
	63, 1661,
	64, 1661,
	68, 1661,
	69, 1661,
	70, 1661,
	71, 1661,
	73, 1661,
	74, 1661,
	75, 1661,
	79, 1661,
	80, 1661,
	81, 1661,
	82, 1661,
	83, 1661,
	84, 1661,
	85, 1661,
	88, 1661,
	89, 1661,
	90, 1661,
	91, 1661,
	92, 1661,
	94, 1661,
	96, 1661,
	97, 1661,
	98, 1661,
	99, 1661,
	100, 1661,
	101, 1661,
	103, 1661,
	104, 1661,
	105, 1661,
	107, 1661,
	108, 1661,
	109, 1661,
	117, 1661,
	118, 1661,
	119, 1661,
	120, 1661,
	121, 1661,
	123, 1661,
	124, 1661,
	125, 1661,
	127, 1661,
	128, 1661,
	129, 1661,
	131, 1661,
	132, 1661,
	133, 1661,
	135, 1661,
	136, 1661,
	137, 1661,
	140, 1661,
	141, 1661,
	142, 1661,
	144, 1661,
	145, 1661,
	147, 1661,
	148, 1661,
	149, 1661,
	151, 1661,
	152, 1661,
	153, 1661,
	154, 1661,
	155, 1661,
	156, 1661,
	157, 1661,
	158, 1661,
	159, 1661,
	160, 1661,
	161, 1661,
	162, 1661,
	163, 1661,
	164, 1661,
	165, 1661,
	166, 1661,
	168, 1661,
	174, 1661,
	175, 1661,
	176, 1661,
	177, 1661,
	181, 1661,
	183, 1661,
	184, 1661,
	188, 1661,
	189, 1661,
	190, 1661,
	191, 1661,
	192, 1661,
	193, 1661,
	194, 1661,
	195, 1661,
	196, 1661,
	197, 1661,
	198, 1661,
	199, 1661,
	200, 1661,
	201, 1661,
	203, 1661,
	204, 1661,
	206, 1661,
	207, 1661,
	209, 1661,
	210, 1661,
	211, 1661,
	212, 1661,
	213, 1661,
	214, 1661,
	215, 1661,
	216, 1661,
	217, 1661,
	219, 1661,
	220, 1661,
	222, 1661,
	223, 1661,
	224, 1661,
	225, 1661,
	226, 1661,
	230, 1661,
	231, 1661,
	232, 1661,
	233, 1661,
	234, 1661,
	237, 1661,
	238, 1661,
	239, 1661,
	241, 1661,
	243, 1661,
	244, 1661,
	246, 1661,
	248, 1661,
	249, 1661,
	250, 1661,
	252, 1661,
	256, 1661,
	257, 1661,
	258, 1661,
	259, 1661,
	260, 1661,
	261, 1661,
	263, 1661,
	264, 1661,
	265, 1661,
	267, 1661,
	268, 1661,
	270, 1661,
	271, 1661,
	274, 1661,
	278, 1661,
	279, 1661,
	280, 1661,
	283, 1661,
	284, 1661,
	285, 1661,
	286, 1661,
	288, 1661,
	289, 1661,
	290, 1661,
	291, 1661,
	292, 1661,
	293, 1661,
	294, 1661,
	295, 1661,
	296, 1661,
	297, 1661,
	298, 1661,
	299, 1661,
	300, 1661,
	301, 1661,
	302, 1661,
	303, 1661,
	304, 1661,
	305, 1661,
	306, 1661,
	307, 1661,
	308, 1661,
	309, 1661,
	311, 1661,
	313, 1661,
	314, 1661,
	315, 1661,
	316, 1661,
	317, 1661,
	318, 1661,
	319, 1661,
	320, 1661,
	321, 1661,
	322, 1661,
	323, 1661,
	324, 1661,
	326, 1661,
	327, 1661,
	329, 1661,
	331, 1661,
	332, 1661,
	334, 1661,
	335, 1661,
	336, 1661,
	337, 1661,
	338, 1661,
	341, 1661,
	345, 1661,
	346, 1661,
	347, 1661,
	350, 1661,
	351, 1661,
	352, 1661,
	354, 1661,
	356, 1661,
	357, 1661,
	358, 1661,
	359, 1661,
	360, 1661,
	361, 1661,
	362, 1661,
	363, 1661,
	364, 1661,
	365, 1661,
	366, 1661,
	367, 1661,
	369, 1661,
	370, 1661,
	371, 1661,
	372, 1661,
	373, 1661,
	374, 1661,
	375, 1661,
	376, 1661,
	377, 1661,
	378, 1661,
	379, 1661,
	380, 1661,
	381, 1661,
	382, 1661,
	383, 1661,
	385, 1661,
	386, 1661,
	388, 1661,
	389, 1661,
	390, 1661,
	391, 1661,
	392, 1661,
	393, 1661,
	394, 1661,
	395, 1661,
	396, 1661,
	397, 1661,
	398, 1661,
	399, 1661,
	401, 1661,
	403, 1661,
	404, 1661,
	405, 1661,
	410, 1661,
	412, 1661,
	413, 1661,
	414, 1661,
	415, 1661,
	416, 1661,
	417, 1661,
	418, 1661,
	419, 1661,
	420, 1661,
	422, 1661,
	423, 1661,
	424, 1661,
	426, 1661,
	427, 1661,
	428, 1661,
	429, 1661,
	430, 1661,
	431, 1661,
	432, 1661,
	434, 1661,
	435, 1661,
	436, 1661,
	437, 1661,
	438, 1661,
	439, 1661,
	440, 1661,
	441, 1661,
	442, 1661,
	443, 1661,
	444, 1661,
	445, 1661,
	447, 1661,
	448, 1661,
	449, 1661,
	450, 1661,
	451, 1661,
	452, 1661,
	454, 1661,
	455, 1661,
	456, 1661,
	457, 1661,
	458, 1661,
	459, 1661,
	461, 1661,
	462, 1661,
	463, 1661,
	464, 1661,
	465, 1661,
	466, 1661,
	467, 1661,
	468, 1661,
	470, 1661,
	472, 1661,
	473, 1661,
	474, 1661,
	475, 1661,
	476, 1661,
	477, 1661,
	478, 1661,
	479, 1661,
	480, 1661,
	481, 1661,
	482, 1661,
	483, 1661,
	484, 1661,
	485, 1661,
	486, 1661,
	487, 1661,
	489, 1661,
	490, 1661,
	492, 1661,
	493, 1661,
	495, 1661,
	496, 1661,
	497, 1661,
	498, 1661,
	499, 1661,
	500, 1661,
	501, 1661,
	502, 1661,
	503, 1661,
	505, 1661,
	506, 1661,
	507, 1661,
	508, 1661,
	509, 1661,
	511, 1661,
	513, 1661,
	514, 1661,
	515, 1661,
	516, 1661,
	517, 1661,
	518, 1661,
	520, 1661,
	521, 1661,
	522, 1661,
	523, 1661,
	525, 1661,
	526, 1661,
	529, 1661,
	530, 1661,
	531, 1661,
	532, 1661,
	533, 1661,
	534, 1661,
	535, 1661,
	537, 1661,
	540, 1661,
	541, 1661,
	542, 1661,
	543, 1661,
	544, 1661,
	545, 1661,
	547, 1661,
	548, 1661,
	549, 1661,
	550, 1661,
	552, 1661,
	557, 1661,
	558, 1661,
	559, 1661,
	560, 1661,
	561, 1661,
	562, 1661,
	-2, 0,
	-1, 874,
	260, 400,
	-2, 0,
	-1, 945,
	390, 855,
	452, 855,
	493, 855,
	515, 855,
	-2, 0,
	-1, 946,
	390, 854,
	452, 854,
	493, 854,
	515, 854,
	-2, 794,
	-1, 950,
	1, 906,
	586, 906,
	588, 906,
	590, 906,
	-2, 0,
	-1, 951,
	1, 829,
	586, 829,
	588, 829,
	590, 829,
	-2, 0,
	-1, 952,
	1, 833,
	586, 833,
	588, 833,
	590, 833,
	-2, 0,
	-1, 953,
	1, 965,
	182, 965,
	586, 965,
	588, 965,
	590, 965,
	-2, 0,
	-1, 961,
	1, 860,
	586, 860,
	588, 860,
	590, 860,
	-2, 0,
	-1, 968,
	1, 906,
	586, 906,
	588, 906,
	590, 906,
	-2, 0,
	-1, 969,
	1, 908,
	586, 908,
	588, 908,
	590, 908,
	-2, 0,
	-1, 970,
	1, 911,
	586, 911,
	588, 911,
	590, 911,
	-2, 0,
	-1, 976,
	1, 929,
	586, 929,
	588, 929,
	590, 929,
	-2, 0,
	-1, 977,
	1, 931,
	586, 931,
	588, 931,
	590, 931,
	-2, 0,
	-1, 982,
	1, 959,
	586, 959,
	588, 959,
	590, 959,
	-2, 0,
	-1, 1030,
	169, 1536,
	182, 1536,
	273, 1536,
	339, 1536,
	-2, 1472,
	-1, 1045,
	169, 1535,
	182, 1535,
	273, 1535,
	339, 1535,
	-2, 1469,
	-1, 1072,
	589, 2252,
	-2, 696,
	-1, 1101,
	5, 2244,
	587, 2242,
	-2, 2233,
	-1, 1109,
	5, 2265,
	587, 2262,
	-2, 2253,
	-1, 1110,
	5, 2266,
	587, 2263,
	-2, 2254,
	-1, 1118,
	589, 2250,
	-2, 2232,
	-1, 1119,
	587, 2681,
	-2, 2251,
	-1, 1142,
	587, 2680,
	-2, 2267,
	-1, 1143,
	5, 1736,
	-2, 2651,
	-1, 1144,
	5, 1737,
	-2, 2652,
	-1, 1145,
	5, 1738,
	-2, 2666,
	-1, 1146,
	5, 1739,
	-2, 2630,
	-1, 1147,
	5, 1740,
	-2, 2664,
	-1, 1148,
	5, 1748,
	-2, 2643,
	-1, 1149,
	5, 1735,
	-2, 2639,
	-1, 1150,
	5, 1735,
	-2, 2638,
	-1, 1151,
	5, 1735,
	-2, 2657,
	-1, 1152,
	5, 1746,
	-2, 2632,
	-1, 1153,
	5, 1751,
	-2, 2631,
	-1, 1154,
	5, 1753,
	-2, 2676,
	-1, 1157,
	5, 1775,
	-2, 2669,
	-1, 1158,
	5, 1767,
	-2, 2670,
	-1, 1159,
	5, 1775,
	-2, 2671,
	-1, 1160,
	5, 1771,
	-2, 2672,
	-1, 1161,
	5, 1721,
	-2, 2644,
	-1, 1162,
	5, 1722,
	-2, 2645,
	-1, 1163,
	5, 1723,
	-2, 2633,
	-1, 1191,
	5, 1758,
	-2, 2677,
	-1, 1192,
	5, 1759,
	-2, 2667,
	-1, 1193,
	5, 1760,
	548, 1760,
	-2, 2634,
	-1, 1194,
	5, 1761,
	548, 1761,
	-2, 2635,
	-1, 1231,
	587, 2262,
	-2, 2253,
	-1, 1232,
	587, 2263,
	-2, 2254,
	-1, 1332,
	186, 2598,
	510, 2598,
	570, 2598,
	589, 2598,
	-2, 0,
	-1, 1335,
	1, 674,
	590, 674,
	-2, 1388,
	-1, 1463,
	358, 2227,
	412, 2227,
	454, 2227,
	580, 2227,
	-2, 2217,
	-1, 1474,
	591, 2227,
	-2, 2229,
	-1, 1482,
	1, 1238,
	586, 1238,
	588, 1238,
	590, 1238,
	-2, 1521,
	-1, 1486,
	202, 1333,
	221, 1333,
	424, 1333,
	-2, 0,
	-1, 1531,
	397, 1035,
	547, 1035,
	-2, 395,
	-1, 1548,
	43, 2225,
	-2, 1001,
	-1, 1555,
	1, 1238,
	586, 1238,
	588, 1238,
	590, 1238,
	-2, 1521,
	-1, 1563,
	4, 1263,
	21, 1263,
	22, 1263,
	23, 1263,
	24, 1263,
	25, 1263,
	26, 1263,
	27, 1263,
	29, 1263,
	30, 1263,
	36, 1263,
	41, 1263,
	42, 1263,
	44, 1263,
	45, 1263,
	46, 1263,
	47, 1263,
	48, 1263,
	49, 1263,
	50, 1263,
	51, 1263,
	53, 1263,
	54, 1263,
	55, 1263,
	56, 1263,
	58, 1263,
	59, 1263,
	60, 1263,
	61, 1263,
	62, 1263,
	63, 1263,
	64, 1263,
	68, 1263,
	69, 1263,
	70, 1263,
	71, 1263,
	73, 1263,
	74, 1263,
	75, 1263,
	79, 1263,
	80, 1263,
	81, 1263,
	82, 1263,
	83, 1263,
	84, 1263,
	85, 1263,
	88, 1263,
	89, 1263,
	90, 1263,
	91, 1263,
	92, 1263,
	94, 1263,
	96, 1263,
	97, 1263,
	98, 1263,
	99, 1263,
	100, 1263,
	101, 1263,
	103, 1263,
	104, 1263,
	105, 1263,
	107, 1263,
	108, 1263,
	109, 1263,
	117, 1263,
	118, 1263,
	119, 1263,
	120, 1263,
	121, 1263,
	123, 1263,
	124, 1263,
	125, 1263,
	127, 1263,
	128, 1263,
	129, 1263,
	131, 1263,
	132, 1263,
	133, 1263,
	135, 1263,
	136, 1263,
	137, 1263,
	140, 1263,
	141, 1263,
	142, 1263,
	144, 1263,
	145, 1263,
	147, 1263,
	148, 1263,
	149, 1263,
	151, 1263,
	152, 1263,
	153, 1263,
	154, 1263,
	155, 1263,
	156, 1263,
	157, 1263,
	158, 1263,
	159, 1263,
	160, 1263,
	161, 1263,
	162, 1263,
	163, 1263,
	164, 1263,
	165, 1263,
	166, 1263,
	174, 1263,
	175, 1263,
	176, 1263,
	177, 1263,
	181, 1263,
	183, 1263,
	184, 1263,
	188, 1263,
	189, 1263,
	190, 1263,
	191, 1263,
	192, 1263,
	193, 1263,
	194, 1263,
	195, 1263,
	196, 1263,
	197, 1263,
	198, 1263,
	199, 1263,
	200, 1263,
	201, 1263,
	203, 1263,
	204, 1263,
	206, 1263,
	207, 1263,
	209, 1263,
	210, 1263,
	211, 1263,
	212, 1263,
	213, 1263,
	214, 1263,
	215, 1263,
	216, 1263,
	217, 1263,
	219, 1263,
	220, 1263,
	222, 1263,
	223, 1263,
	224, 1263,
	225, 1263,
	226, 1263,
	231, 1263,
	232, 1263,
	233, 1263,
	234, 1263,
	237, 1263,
	238, 1263,
	239, 1263,
	241, 1263,
	243, 1263,
	244, 1263,
	246, 1263,
	248, 1263,
	249, 1263,
	250, 1263,
	252, 1263,
	256, 1263,
	257, 1263,
	258, 1263,
	259, 1263,
	260, 1263,
	261, 1263,
	263, 1263,
	264, 1263,
	265, 1263,
	267, 1263,
	268, 1263,
	270, 1263,
	271, 1263,
	274, 1263,
	278, 1263,
	279, 1263,
	280, 1263,
	283, 1263,
	284, 1263,
	285, 1263,
	286, 1263,
	288, 1263,
	289, 1263,
	290, 1263,
	291, 1263,
	292, 1263,
	293, 1263,
	294, 1263,
	295, 1263,
	296, 1263,
	297, 1263,
	298, 1263,
	299, 1263,
	300, 1263,
	301, 1263,
	302, 1263,
	303, 1263,
	304, 1263,
	305, 1263,
	306, 1263,
	307, 1263,
	308, 1263,
	309, 1263,
	311, 1263,
	313, 1263,
	314, 1263,
	315, 1263,
	316, 1263,
	317, 1263,
	318, 1263,
	319, 1263,
	320, 1263,
	321, 1263,
	322, 1263,
	323, 1263,
	324, 1263,
	326, 1263,
	327, 1263,
	331, 1263,
	332, 1263,
	334, 1263,
	335, 1263,
	336, 1263,
	337, 1263,
	338, 1263,
	341, 1263,
	343, 1263,
	345, 1263,
	346, 1263,
	347, 1263,
	350, 1263,
	351, 1263,
	352, 1263,
	354, 1263,
	356, 1263,
	357, 1263,
	358, 1263,
	359, 1263,
	360, 1263,
	361, 1263,
	362, 1263,
	363, 1263,
	364, 1263,
	365, 1263,
	366, 1263,
	367, 1263,
	369, 1263,
	370, 1263,
	371, 1263,
	372, 1263,
	373, 1263,
	374, 1263,
	375, 1263,
	376, 1263,
	377, 1263,
	378, 1263,
	379, 1263,
	380, 1263,
	381, 1263,
	382, 1263,
	383, 1263,
	385, 1263,
	386, 1263,
	388, 1263,
	389, 1263,
	390, 1263,
	391, 1263,
	392, 1263,
	393, 1263,
	394, 1263,
	395, 1263,
	396, 1263,
	397, 1263,
	398, 1263,
	399, 1263,
	401, 1263,
	403, 1263,
	404, 1263,
	405, 1263,
	410, 1263,
	412, 1263,
	413, 1263,
	414, 1263,
	415, 1263,
	416, 1263,
	417, 1263,
	418, 1263,
	419, 1263,
	420, 1263,
	422, 1263,
	423, 1263,
	424, 1263,
	426, 1263,
	427, 1263,
	428, 1263,
	429, 1263,
	430, 1263,
	431, 1263,
	432, 1263,
	434, 1263,
	435, 1263,
	436, 1263,
	437, 1263,
	438, 1263,
	439, 1263,
	440, 1263,
	441, 1263,
	442, 1263,
	443, 1263,
	444, 1263,
	445, 1263,
	447, 1263,
	448, 1263,
	449, 1263,
	450, 1263,
	451, 1263,
	452, 1263,
	454, 1263,
	455, 1263,
	456, 1263,
	457, 1263,
	458, 1263,
	459, 1263,
	461, 1263,
	462, 1263,
	463, 1263,
	464, 1263,
	465, 1263,
	466, 1263,
	467, 1263,
	468, 1263,
	470, 1263,
	472, 1263,
	473, 1263,
	474, 1263,
	475, 1263,
	476, 1263,
	477, 1263,
	478, 1263,
	479, 1263,
	480, 1263,
	481, 1263,
	482, 1263,
	483, 1263,
	484, 1263,
	485, 1263,
	486, 1263,
	487, 1263,
	489, 1263,
	490, 1263,
	492, 1263,
	493, 1263,
	495, 1263,
	496, 1263,
	497, 1263,
	498, 1263,
	499, 1263,
	500, 1263,
	501, 1263,
	502, 1263,
	503, 1263,
	505, 1263,
	506, 1263,
	507, 1263,
	508, 1263,
	509, 1263,
	511, 1263,
	513, 1263,
	514, 1263,
	515, 1263,
	516, 1263,
	517, 1263,
	518, 1263,
	520, 1263,
	521, 1263,
	522, 1263,
	523, 1263,
	525, 1263,
	526, 1263,
	529, 1263,
	530, 1263,
	531, 1263,
	532, 1263,
	533, 1263,
	534, 1263,
	535, 1263,
	537, 1263,
	540, 1263,
	541, 1263,
	542, 1263,
	543, 1263,
	544, 1263,
	545, 1263,
	547, 1263,
	548, 1263,
	549, 1263,
	550, 1263,
	552, 1263,
	557, 1263,
	558, 1263,
	559, 1263,
	560, 1263,
	561, 1263,
	562, 1263,
	-2, 0,
	-1, 1586,
	1, 540,
	586, 540,
	588, 540,
	590, 540,
	-2, 1492,
	-1, 1589,
	4, 2675,
	11, 2675,
	12, 2675,
	14, 2675,
	15, 2675,
	16, 2675,
	17, 2675,
	18, 2675,
	19, 2675,
	21, 2675,
	22, 2675,
	23, 2675,
	24, 2675,
	25, 2675,
	26, 2675,
	27, 2675,
	29, 2675,
	30, 2675,
	33, 2675,
	34, 2675,
	36, 2675,
	38, 2675,
	41, 2675,
	42, 2675,
	44, 2675,
	45, 2675,
	46, 2675,
	47, 2675,
	48, 2675,
	49, 2675,
	50, 2675,
	51, 2675,
	53, 2675,
	54, 2675,
	55, 2675,
	56, 2675,
	58, 2675,
	59, 2675,
	60, 2675,
	61, 2675,
	62, 2675,
	63, 2675,
	64, 2675,
	67, 2675,
	68, 2675,
	69, 2675,
	70, 2675,
	71, 2675,
	73, 2675,
	74, 2675,
	75, 2675,
	76, 2675,
	79, 2675,
	80, 2675,
	81, 2675,
	82, 2675,
	83, 2675,
	84, 2675,
	85, 2675,
	86, 2675,
	88, 2675,
	89, 2675,
	90, 2675,
	91, 2675,
	92, 2675,
	94, 2675,
	95, 2675,
	96, 2675,
	97, 2675,
	98, 2675,
	99, 2675,
	100, 2675,
	101, 2675,
	103, 2675,
	104, 2675,
	105, 2675,
	106, 2675,
	107, 2675,
	108, 2675,
	109, 2675,
	117, 2675,
	118, 2675,
	119, 2675,
	120, 2675,
	121, 2675,
	123, 2675,
	124, 2675,
	125, 2675,
	127, 2675,
	128, 2675,
	129, 2675,
	131, 2675,
	132, 2675,
	133, 2675,
	135, 2675,
	136, 2675,
	137, 2675,
	140, 2675,
	141, 2675,
	142, 2675,
	144, 2675,
	145, 2675,
	147, 2675,
	148, 2675,
	149, 2675,
	151, 2675,
	152, 2675,
	153, 2675,
	154, 2675,
	155, 2675,
	156, 2675,
	157, 2675,
	158, 2675,
	159, 2675,
	160, 2675,
	161, 2675,
	162, 2675,
	163, 2675,
	164, 2675,
	165, 2675,
	166, 2675,
	170, 2675,
	171, 2675,
	172, 2675,
	173, 2675,
	174, 2675,
	175, 2675,
	176, 2675,
	177, 2675,
	180, 2675,
	181, 2675,
	183, 2675,
	184, 2675,
	187, 2675,
	188, 2675,
	189, 2675,
	190, 2675,
	191, 2675,
	192, 2675,
	193, 2675,
	194, 2675,
	195, 2675,
	196, 2675,
	197, 2675,
	198, 2675,
	199, 2675,
	200, 2675,
	201, 2675,
	203, 2675,
	204, 2675,
	206, 2675,
	207, 2675,
	209, 2675,
	210, 2675,
	211, 2675,
	212, 2675,
	213, 2675,
	214, 2675,
	215, 2675,
	216, 2675,
	217, 2675,
	218, 2675,
	219, 2675,
	220, 2675,
	221, 2675,
	222, 2675,
	223, 2675,
	224, 2675,
	225, 2675,
	226, 2675,
	228, 2675,
	229, 2675,
	231, 2675,
	232, 2675,
	233, 2675,
	234, 2675,
	236, 2675,
	237, 2675,
	238, 2675,
	239, 2675,
	241, 2675,
	243, 2675,
	244, 2675,
	245, 2675,
	246, 2675,
	247, 2675,
	248, 2675,
	249, 2675,
	250, 2675,
	251, 2675,
	252, 2675,
	254, 2675,
	255, 2675,
	256, 2675,
	257, 2675,
	258, 2675,
	259, 2675,
	260, 2675,
	261, 2675,
	263, 2675,
	264, 2675,
	265, 2675,
	267, 2675,
	268, 2675,
	269, 2675,
	270, 2675,
	271, 2675,
	272, 2675,
	274, 2675,
	278, 2675,
	279, 2675,
	280, 2675,
	283, 2675,
	284, 2675,
	285, 2675,
	286, 2675,
	287, 2675,
	288, 2675,
	289, 2675,
	290, 2675,
	291, 2675,
	292, 2675,
	293, 2675,
	294, 2675,
	295, 2675,
	296, 2675,
	297, 2675,
	298, 2675,
	299, 2675,
	300, 2675,
	301, 2675,
	302, 2675,
	303, 2675,
	304, 2675,
	305, 2675,
	306, 2675,
	307, 2675,
	308, 2675,
	309, 2675,
	311, 2675,
	312, 2675,
	313, 2675,
	314, 2675,
	315, 2675,
	316, 2675,
	317, 2675,
	318, 2675,
	319, 2675,
	320, 2675,
	321, 2675,
	322, 2675,
	323, 2675,
	324, 2675,
	326, 2675,
	327, 2675,
	330, 2675,
	331, 2675,
	332, 2675,
	334, 2675,
	335, 2675,
	336, 2675,
	337, 2675,
	338, 2675,
	341, 2675,
	345, 2675,
	346, 2675,
	347, 2675,
	348, 2675,
	350, 2675,
	351, 2675,
	352, 2675,
	354, 2675,
	356, 2675,
	357, 2675,
	358, 2675,
	359, 2675,
	360, 2675,
	361, 2675,
	362, 2675,
	363, 2675,
	364, 2675,
	365, 2675,
	366, 2675,
	367, 2675,
	369, 2675,
	370, 2675,
	371, 2675,
	372, 2675,
	373, 2675,
	374, 2675,
	375, 2675,
	376, 2675,
	377, 2675,
	378, 2675,
	379, 2675,
	380, 2675,
	381, 2675,
	382, 2675,
	383, 2675,
	385, 2675,
	386, 2675,
	388, 2675,
	389, 2675,
	390, 2675,
	391, 2675,
	392, 2675,
	393, 2675,
	394, 2675,
	395, 2675,
	396, 2675,
	397, 2675,
	398, 2675,
	399, 2675,
	401, 2675,
	403, 2675,
	404, 2675,
	405, 2675,
	410, 2675,
	411, 2675,
	412, 2675,
	413, 2675,
	414, 2675,
	415, 2675,
	416, 2675,
	417, 2675,
	418, 2675,
	419, 2675,
	420, 2675,
	422, 2675,
	423, 2675,
	424, 2675,
	425, 2675,
	426, 2675,
	427, 2675,
	428, 2675,
	429, 2675,
	430, 2675,
	431, 2675,
	432, 2675,
	433, 2675,
	434, 2675,
	435, 2675,
	436, 2675,
	437, 2675,
	438, 2675,
	439, 2675,
	440, 2675,
	441, 2675,
	442, 2675,
	443, 2675,
	444, 2675,
	445, 2675,
	447, 2675,
	448, 2675,
	449, 2675,
	450, 2675,
	451, 2675,
	452, 2675,
	454, 2675,
	455, 2675,
	456, 2675,
	457, 2675,
	458, 2675,
	459, 2675,
	460, 2675,
	461, 2675,
	462, 2675,
	463, 2675,
	464, 2675,
	465, 2675,
	466, 2675,
	467, 2675,
	468, 2675,
	470, 2675,
	472, 2675,
	473, 2675,
	474, 2675,
	475, 2675,
	476, 2675,
	477, 2675,
	478, 2675,
	479, 2675,
	480, 2675,
	481, 2675,
	482, 2675,
	483, 2675,
	484, 2675,
	485, 2675,
	486, 2675,
	487, 2675,
	489, 2675,
	490, 2675,
	491, 2675,
	492, 2675,
	493, 2675,
	495, 2675,
	496, 2675,
	497, 2675,
	498, 2675,
	499, 2675,
	500, 2675,
	501, 2675,
	502, 2675,
	503, 2675,
	505, 2675,
	506, 2675,
	507, 2675,
	508, 2675,
	509, 2675,
	511, 2675,
	513, 2675,
	514, 2675,
	515, 2675,
	516, 2675,
	517, 2675,
	518, 2675,
	520, 2675,
	521, 2675,
	522, 2675,
	523, 2675,
	525, 2675,
	526, 2675,
	529, 2675,
	530, 2675,
	531, 2675,
	532, 2675,
	533, 2675,
	534, 2675,
	535, 2675,
	537, 2675,
	540, 2675,
	541, 2675,
	542, 2675,
	543, 2675,
	544, 2675,
	545, 2675,
	547, 2675,
	548, 2675,
	549, 2675,
	550, 2675,
	552, 2675,
	557, 2675,
	558, 2675,
	559, 2675,
	560, 2675,
	561, 2675,
	562, 2675,
	563, 2675,
	565, 2675,
	568, 2675,
	569, 2675,
	570, 2675,
	571, 2675,
	572, 2675,
	573, 2675,
	575, 2675,
	576, 2675,
	577, 2675,
	578, 2675,
	579, 2675,
	580, 2675,
	581, 2675,
	582, 2675,
	583, 2675,
	585, 2675,
	588, 2675,
	589, 2675,
	591, 2675,
	592, 2675,
	-2, 0,
	-1, 1594,
	186, 2557,
	510, 2557,
	570, 2557,
	589, 2557,
	-2, 0,
	-1, 1643,
	390, 855,
	452, 855,
	493, 855,
	515, 855,
	-2, 0,
	-1, 1670,
	1, 850,
	586, 850,
	588, 850,
	590, 850,
	-2, 0,
	-1, 1671,
	1, 893,
	586, 893,
	588, 893,
	590, 893,
	-2, 0,
	-1, 1672,
	1, 901,
	586, 901,
	588, 901,
	590, 901,
	-2, 0,
	-1, 1675,
	1, 859,
	586, 859,
	588, 859,
	590, 859,
	-2, 0,
	-1, 1677,
	1, 865,
	586, 865,
	588, 865,
	590, 865,
	-2, 0,
	-1, 1680,
	1, 861,
	586, 861,
	588, 861,
	590, 861,
	-2, 0,
	-1, 1685,
	1, 875,
	586, 875,
	588, 875,
	590, 875,
	-2, 0,
	-1, 1719,
	1, 940,
	586, 940,
	588, 940,
	590, 940,
	-2, 0,
	-1, 1734,
	1, 1383,
	590, 1383,
	-2, 1388,
	-1, 1737,
	169, 1535,
	182, 1535,
	273, 1535,
	339, 1535,
	-2, 1473,
	-1, 1837,
	150, 1494,
	169, 1494,
	182, 1494,
	240, 1494,
	273, 1494,
	339, 1494,
	349, 1494,
	527, 1494,
	-2, 1940,
	-1, 1897,
	588, 2113,
	-2, 0,
	-1, 1932,
	150, 1494,
	169, 1494,
	182, 1494,
	240, 1494,
	273, 1494,
	339, 1494,
	349, 1494,
	527, 1494,
	-2, 1622,
	-1, 1967,
	510, 2554,
	589, 2554,
	592, 2554,
	-2, 0,
	-1, 1984,
	587, 1763,
	-2, 1751,
	-1, 2016,
	186, 2554,
	589, 2554,
	592, 2554,
	-2, 0,
	-1, 2064,
	1, 676,
	590, 676,
	-2, 1388,
	-1, 2193,
	221, 254,
	-2, 2261,
	-1, 2194,
	221, 255,
	-2, 303,
	-1, 2298,
	1, 852,
	586, 852,
	588, 852,
	590, 852,
	-2, 0,
	-1, 2299,
	1, 895,
	586, 895,
	588, 895,
	590, 895,
	-2, 0,
	-1, 2300,
	1, 903,
	586, 903,
	588, 903,
	590, 903,
	-2, 0,
	-1, 2301,
	1, 942,
	586, 942,
	588, 942,
	590, 942,
	-2, 0,
	-1, 2338,
	1, 877,
	586, 877,
	588, 877,
	590, 877,
	-2, 0,
	-1, 2398,
	431, 1562,
	432, 1562,
	-2, 1796,
	-1, 2429,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1816,
	-1, 2430,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1817,
	-1, 2431,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1818,
	-1, 2432,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1819,
	-1, 2433,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1820,
	-1, 2434,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1821,
	-1, 2435,
	95, 0,
	254, 0,
	255, 0,
	572, 0,
	573, 0,
	-2, 1822,
	-1, 2436,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1823,
	-1, 2448,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1835,
	-1, 2449,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1836,
	-1, 2450,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1837,
	-1, 2454,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1844,
	-1, 2460,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1848,
	-1, 2462,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1856,
	-1, 2463,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1857,
	-1, 2464,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1858,
	-1, 2465,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1859,
	-1, 2637,
	5, 2265,
	186, 2124,
	587, 2262,
	-2, 2253,
	-1, 2638,
	186, 2125,
	-2, 2626,
	-1, 2639,
	186, 2126,
	-2, 2450,
	-1, 2640,
	186, 2127,
	-2, 2335,
	-1, 2641,
	186, 2128,
	-2, 2390,
	-1, 2642,
	186, 2129,
	-2, 2435,
	-1, 2643,
	186, 2130,
	-2, 2552,
	-1, 2644,
	186, 2131,
	-2, 1923,
	-1, 2715,
	1, 1623,
	2, 1623,
	106, 1623,
	150, 1623,
	169, 1623,
	182, 1623,
	187, 1623,
	205, 1623,
	208, 1623,
	236, 1623,
	240, 1623,
	251, 1623,
	269, 1623,
	273, 1623,
	312, 1623,
	339, 1623,
	343, 1623,
	349, 1623,
	421, 1623,
	425, 1623,
	527, 1623,
	538, 1623,
	554, 1623,
	555, 1623,
	556, 1623,
	566, 1623,
	586, 1623,
	588, 1623,
	590, 1623,
	592, 1623,
	-2, 1622,
	-1, 2728,
	587, 2234,
	-2, 2248,
	-1, 2730,
	1, 320,
	554, 320,
	-2, 1521,
	-1, 2758,
	587, 1762,
	-2, 1752,
	-1, 2936,
	1, 1238,
	586, 1238,
	588, 1238,
	590, 1238,
	-2, 1521,
	-1, 3108,
	344, 1565,
	-2, 2665,
	-1, 3109,
	344, 1566,
	-2, 2537,
	-1, 3113,
	431, 2190,
	432, 2190,
	-2, 1921,
	-1, 3114,
	431, 2194,
	432, 2194,
	-2, 1922,
	-1, 3115,
	431, 2191,
	432, 2191,
	-2, 1921,
	-1, 3116,
	431, 2195,
	432, 2195,
	-2, 1922,
	-1, 3129,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1846,
	-1, 3130,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1850,
	-1, 3136,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1852,
	-1, 3358,
	1, 673,
	586, 673,
	588, 673,
	590, 673,
	-2, 1388,
	-1, 3520,
	43, 2225,
	-2, 1002,
	-1, 3525,
	1, 1238,
	586, 1238,
	588, 1238,
	590, 1238,
	-2, 1521,
	-1, 3631,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1854,
	-1, 3638,
	245, 0,
	247, 0,
	330, 0,
	-2, 1873,
	-1, 3706,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1902,
	-1, 3707,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1903,
	-1, 3708,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1904,
	-1, 3712,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1908,
	-1, 3713,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1909,
	-1, 3714,
	14, 0,
	15, 0,
	16, 0,
	568, 0,
	569, 0,
	570, 0,
	-2, 1910,
	-1, 3761,
	587, 2235,
	-2, 2249,
	-1, 3932,
	589, 2783,
	-2, 1447,
	-1, 3990,
	245, 0,
	247, 0,
	330, 0,
	-2, 1874,
	-1, 3993,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1877,
	-1, 3994,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1879,
	-1, 4088,
	589, 2250,
	-2, 1273,
	-1, 4237,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1878,
	-1, 4238,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 1880,
	-1, 4249,
	245, 0,
	-2, 1913,
	-1, 4430,
	245, 0,
	-2, 1914,
	-1, 4622,
	50, 0,
	218, 0,
	272, 0,
	460, 0,
	563, 0,
	571, 0,
	-2, 2629,
}

const sqlPrivate = 57344

const sqlLast = 127928

var sqlAct = [...]int{
	267, 4813, 3509, 3004, 4459, 4724, 3017, 3267, 4678, 4294,
	4621, 3508, 4494, 4603, 4352, 4615, 2821, 4751, 4632, 4490,
	4590, 4515, 4614, 4633, 4467, 1224, 4634, 2112, 4551, 2190,
	3973, 3671, 2865, 4280, 4571, 4383, 4359, 4337, 2265, 4691,
	4568, 2885, 4193, 4188, 4434, 4620, 4154, 4299, 4258, 2408,
	1055, 1304, 4131, 3623, 4226, 4368, 3924, 1308, 3916, 4175,
	1101, 3380, 4177, 3854, 1235, 692, 3122, 4168, 3542, 1297,
	4085, 4069, 4397, 2274, 2670, 799, 2477, 2898, 2046, 3536,
	4198, 1746, 3879, 2416, 3897, 2120, 3440, 3881, 1046, 3383,
	3494, 3504, 762, 3581, 1368, 2409, 2033, 3039, 3583, 2963,
	1290, 799, 3310, 3026, 4254, 1971, 2993, 2272, 2974, 3764,
	1299, 3028, 1460, 3273, 3290, 3282, 3972, 1972, 872, 4,
	703, 876, 3250, 2988, 4029, 2990, 3036, 3271, 3025, 3005,
	1610, 1938, 3019, 4084, 1907, 4725, 2181, 1054, 176, 3402,
	2238, 4435, 2182, 2823, 2131, 3732, 2708, 2707, 3249, 1845,
	2555, 1815, 2413, 1550, 2490, 3106, 1883, 3035, 3377, 2710,
	1467, 867, 2177, 2967, 2158, 1112, 794, 2913, 2975, 1105,
	2165, 1302, 2100, 1351, 2864, 2104, 1276, 2044, 1215, 261,
	1734, 2557, 260, 1651, 1908, 2546, 2688, 1927, 2474, 1110,
	2090, 2397, 2380, 2741, 2378, 3506, 1587, 2998, 796, 3369,
	800, 3317, 1608, 2225, 801, 736, 2846, 1553, 1337, 679,
	4516, 3029, 1878, 701, 3874, 2809, 2740, 108, 2549, 2667,
	1917, 1218, 2697, 1197, 2678, 2527, 2633, 1829, 2379, 2599,
	1747, 176, 185, 1748, 1232, 1924, 1670, 744, 1287, 186,
	1585, 2381, 1685, 2224, 1490, 756, 1155, 2251, 1214, 1578,
	2119, 4679, 2402, 1086, 805, 2022, 2019, 808, 696, 259,
	44, 1310, 43, 41, 1195, 32, 1733, 693, 30, 704,
	28, 719, 1753, 1220, 3159, 939, 3153, 1501, 848, 791,
	805, 959, 3746, 808, 3747, 4826, 4816, 3269, 4659, 2687,
	3561, 1108, 1494, 849, 1230, 4273, 4801, 1050, 2035, 891,
	2687, 2035, 1107, 1676, 4800, 2035, 2035, 2035, 2687, 4790,
	2035, 4771, 4769, 2199, 2035, 4298, 4298, 4710, 4667, 4656,
	3552, 2199, 4668, 2687, 2199, 3551, 4654, 4651, 4648, 4618,
	2687, 4652, 4649, 2199, 4617, 4616, 4611, 4610, 2199, 2056,
	2056, 2056, 4601, 4270, 3342, 3340, 4298, 1212, 1761, 1762,
	4599, 4596, 4566, 4540, 4298, 4371, 4298, 2749, 1050, 3561,
	4533, 4532, 3220, 3221, 2687, 2687, 2680, 3325, 3168, 1254,
	1084, 1792, 1761, 1762, 3169, 4527, 4526, 4520, 1764, 4298,
	4298, 2199, 2199, 4486, 4432, 1198, 1198, 4145, 2749, 4414,
	4411, 4408, 4361, 3959, 2199, 4298, 4362, 4315, 3121, 4314,
	4050, 2199, 1764, 2199, 1817, 1051, 4305, 2687, 4304, 1031,
	2199, 1515, 4298, 1763, 4297, 4265, 1030, 1346, 4298, 2199,
	4239, 3220, 3221, 1783, 2749, 2053, 4217, 4206, 4541, 4126,
	2056, 3561, 1780, 2687, 4109, 3992, 2199, 1763, 2687, 2749,
	3940, 1346, 2770, 2273, 3578, 93, 1761, 1762, 3934, 2053,
	3895, 3756, 3578, 1103, 3896, 3757, 1247, 4436, 3754, 3739,
	1040, 1045, 3755, 2687, 3655, 4427, 3651, 3736, 2199, 1792,
	2687, 3577, 4415, 3568, 3266, 3578, 1764, 3569, 2687, 4371,
	3261, 3260, 2056, 1503, 2687, 2687, 3986, 2745, 3211, 3209,
	3201, 1199, 3212, 3210, 3202, 3199, 3170, 3043, 3736, 2687,
	2687, 2056, 1817, 1201, 2679, 1202, 1617, 1786, 1787, 1788,
	1789, 1763, 3015, 4186, 3014, 2793, 2261, 1769, 2261, 2687,
	4145, 2053, 2748, 2199, 2769, 1227, 2749, 1248, 2738, 1603,
	2732, 3226, 2687, 2686, 2199, 2260, 1226, 2687, 1248, 2261,
	2687, 1769, 4110, 3959, 3569, 2888, 2808, 2124, 231, 2069,
	2034, 2050, 2969, 2198, 2908, 2806, 1761, 1762, 1903, 1489,
	3837, 3626, 1805, 1806, 1807, 1791, 1793, 3602, 1925, 2170,
	1653, 2724, 2723, 2722, 3553, 3220, 3221, 2721, 2720, 1792,
	1203, 1200, 1039, 1038, 1037, 1036, 1764, 1035, 1034, 2552,
	3226, 1778, 1779, 3554, 4045, 1811, 233, 1033, 3220, 3221,
	1029, 3158, 1028, 3083, 1228, 1027, 1026, 1025, 1024, 1023,
	1022, 1021, 1817, 1020, 1019, 1769, 1018, 1017, 1016, 1015,
	1014, 1763, 1013, 1514, 1784, 1012, 937, 231, 936, 1761,
	1762, 1783, 1794, 1795, 1796, 1805, 1806, 1807, 3236, 935,
	1780, 934, 933, 1761, 1762, 232, 932, 931, 930, 929,
	3235, 1798, 1792, 2036, 928, 927, 2036, 926, 225, 1764,
	2036, 2036, 2036, 1791, 1793, 2036, 1495, 226, 1811, 2036,
	925, 924, 923, 1764, 922, 233, 921, 920, 2553, 919,
	918, 917, 916, 915, 914, 1817, 1503, 913, 1509, 187,
	912, 911, 2331, 910, 1763, 909, 1814, 3236, 908, 1494,
	907, 2053, 906, 905, 1783, 904, 894, 893, 1763, 1503,
	1814, 889, 888, 1780, 882, 1786, 1787, 1788, 1789, 881,
	1814, 866, 1784, 865, 232, 1769, 3551, 822, 821, 1621,
	231, 820, 819, 811, 810, 1607, 809, 1313, 1110, 777,
	768, 767, 766, 148, 3226, 750, 255, 231, 1790, 4004,
	1248, 2053, 254, 253, 252, 251, 250, 249, 248, 247,
	2554, 1110, 2551, 1802, 246, 1110, 1812, 3226, 187, 1814,
	1785, 3778, 2679, 1791, 1793, 1248, 245, 244, 233, 243,
	242, 1371, 241, 240, 3237, 1371, 239, 3001, 1786, 1787,
	1788, 1789, 1313, 238, 1814, 233, 237, 236, 1769, 1778,
	1779, 235, 234, 3220, 3221, 3750, 3238, 3239, 3240, 3579,
	3313, 1350, 1769, 3181, 1110, 1355, 1110, 1800, 1110, 4200,
	3164, 3155, 3066, 1886, 1313, 3988, 2199, 232, 1816, 2780,
	1885, 1341, 1784, 2034, 2053, 2050, 1802, 3264, 2769, 1812,
	225, 2983, 2373, 3237, 232, 2950, 1791, 1793, 2753, 226,
	1313, 3236, 1889, 1321, 1678, 231, 1475, 225, 1502, 1053,
	1886, 2729, 2714, 1808, 1470, 1809, 226, 1885, 1785, 1928,
	1313, 187, 1778, 1779, 3236, 2098, 3265, 1313, 3235, 2582,
	2568, 2566, 2055, 1951, 1465, 1110, 1856, 1110, 187, 1884,
	1800, 1313, 1760, 4439, 1497, 1357, 1847, 1110, 1234, 1110,
	1508, 4639, 4619, 233, 1814, 1784, 4598, 1281, 1284, 1781,
	1777, 2556, 1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770,
	1771, 1559, 1562, 1814, 4501, 4292, 1816, 4424, 1294, 3222,
	3223, 3224, 3225, 3227, 3228, 1493, 4418, 4416, 1335, 1765,
	1766, 1767, 1768, 1770, 1771, 1313, 1814, 2268, 1810, 1854,
	231, 4253, 232, 4207, 4185, 1565, 1790, 4056, 1364, 4027,
	1457, 1462, 1480, 4026, 1110, 225, 1799, 1110, 3220, 3221,
	4020, 4019, 3226, 231, 226, 4018, 4011, 1814, 1785, 4010,
	4008, 4003, 805, 4000, 3999, 808, 3229, 3230, 3222, 3223,
	3224, 3225, 3227, 3228, 1298, 3900, 187, 3237, 233, 3894,
	3782, 1330, 3781, 1492, 3780, 1803, 3760, 1491, 176, 176,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 1548,
	3237, 233, 1622, 4202, 3727, 1849, 1847, 2550, 3726, 1790,
	3725, 2267, 1590, 1592, 3647, 3642, 1816, 3242, 1503, 3308,
	3257, 3248, 1463, 3219, 3216, 1474, 1298, 232, 3835, 3215,
	1848, 1785, 1846, 2762, 3332, 3213, 3208, 3207, 3206, 3203,
	225, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 226,
	232, 3200, 1341, 3180, 3163, 1341, 3220, 3221, 1803, 3236,
	3156, 3154, 3016, 225, 2715, 2539, 2985, 1051, 1760, 2206,
	1211, 187, 226, 2241, 1110, 2204, 1759, 4820, 4761, 4760,
	1110, 3901, 4726, 4677, 4675, 1236, 3673, 231, 1801, 1816,
	4558, 1298, 1298, 1581, 187, 4493, 1804, 1781, 1777, 1738,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 4477,
	4474, 1588, 231, 4473, 4472, 3262, 231, 3226, 4453, 3231,
	3229, 3230, 3222, 3223, 3224, 3225, 3227, 3228, 4438, 4437,
	4412, 1814, 1694, 4396, 4395, 233, 2480, 4381, 4378, 4377,
	4372, 4311, 4288, 1602, 3230, 3222, 3223, 3224, 3225, 3227,
	3228, 4251, 4234, 231, 1732, 1616, 4233, 4214, 4213, 231,
	233, 1801, 2486, 4171, 233, 4146, 1775, 1776, 1782, 1804,
	1781, 1777, 4044, 1774, 1772, 1773, 1765, 1766, 1767, 1768,
	1770, 1771, 4025, 3960, 232, 1110, 1110, 1110, 3954, 3951,
	4012, 1110, 1767, 1768, 1770, 1771, 1627, 225, 1232, 4440,
	1232, 233, 3823, 1836, 3822, 3237, 226, 233, 1644, 232,
	3806, 3805, 3803, 232, 3742, 1371, 3730, 3637, 1834, 1679,
	3580, 3901, 225, 3562, 1110, 3226, 225, 799, 3000, 3528,
	3457, 226, 3415, 1989, 799, 226, 3382, 1313, 3334, 3185,
	3184, 3179, 3145, 1905, 2962, 1892, 1891, 4201, 1735, 1890,
	232, 1887, 1879, 187, 1877, 1743, 232, 187, 1230, 3305,
	1230, 2984, 2760, 225, 2759, 1914, 2726, 1031, 1742, 225,
	2719, 2685, 226, 2564, 1030, 1833, 1950, 231, 226, 1906,
	1958, 1901, 231, 231, 1900, 1737, 1899, 1898, 1897, 1896,
	1895, 1051, 1761, 1762, 187, 1894, 1888, 1739, 1962, 1959,
	187, 1756, 1757, 1313, 1893, 1874, 1873, 1872, 1871, 1870,
	1110, 2081, 2080, 1935, 1313, 2089, 2091, 1869, 1955, 1868,
	1911, 1912, 1764, 1867, 1866, 233, 1865, 1864, 1863, 1862,
	233, 233, 1110, 1861, 1860, 1849, 1198, 1835, 1371, 176,
	3232, 3233, 3234, 1880, 1881, 1832, 1827, 3231, 3229, 3230,
	3222, 3223, 3224, 3225, 3227, 3228, 1579, 1763, 2040, 4174,
	2114, 2042, 2087, 1329, 1252, 1243, 4052, 2047, 3996, 3777,
	3753, 2049, 3745, 3167, 232, 2751, 2052, 2717, 4271, 232,
	232, 4054, 2096, 3776, 2062, 1848, 1341, 225, 1936, 1957,
	1584, 3330, 225, 225, 1830, 3557, 226, 2089, 1983, 1946,
	2061, 226, 226, 1347, 1814, 4758, 805, 3220, 3221, 808,
	1352, 2089, 2269, 805, 2089, 4112, 808, 1051, 187, 4750,
	2886, 1933, 1354, 187, 187, 1963, 4475, 1346, 1928, 1643,
	4373, 1926, 2012, 2084, 4364, 4363, 4205, 2038, 4148, 4147,
	4111, 1904, 4047, 3963, 3962, 2581, 2567, 2565, 3961, 3748,
	3564, 3220, 3221, 3563, 3238, 3239, 3240, 4369, 3624, 3849,
	3205, 3204, 1945, 2869, 1944, 1943, 2167, 1941, 1313, 1313,
	1940, 1930, 1939, 3987, 1730, 4419, 4417, 3127, 1371, 1986,
	1474, 1886, 1353, 3418, 2124, 3904, 2075, 1969, 1885, 1227,
	4291, 1227, 2851, 2064, 1349, 1346, 3820, 1010, 2025, 3511,
	1226, 3510, 1226, 1869, 1652, 3384, 2552, 3449, 3573, 1869,
	1858, 1855, 1346, 4689, 2266, 4360, 4663, 3224, 3225, 3227,
	3228, 1343, 2290, 4644, 1695, 4631, 3235, 1474, 3495, 3040,
	1653, 2152, 2183, 2157, 3908, 3891, 2162, 3851, 3846, 2547,
	3828, 3599, 1011, 2060, 3356, 4255, 3269, 3675, 2086, 2894,
	2758, 1902, 1882, 3173, 4640, 2848, 3502, 2235, 1558, 2058,
	1485, 1324, 1280, 4653, 2025, 4650, 3547, 2905, 1228, 2067,
	1228, 2902, 1313, 2900, 1313, 2025, 1313, 3798, 4307, 2065,
	4284, 4468, 2092, 2082, 3360, 4189, 2085, 4565, 4450, 3387,
	3815, 3023, 1313, 1313, 2997, 2553, 742, 4097, 2191, 2196,
	861, 1348, 4708, 1313, 4095, 4707, 3481, 3618, 2893, 2130,
	3864, 4333, 3331, 1631, 2847, 1313, 2388, 1313, 1313, 1313,
	3226, 4641, 2242, 3222, 3223, 3224, 3225, 3227, 3228, 4099,
	1533, 1583, 1525, 2794, 991, 1692, 1008, 4815, 4740, 2344,
	799, 1006, 2812, 2276, 2185, 2231, 1004, 1002, 999, 805,
	2342, 2812, 808, 4481, 2289, 1210, 2150, 2810, 1344, 4326,
	1487, 4317, 1110, 4140, 4139, 2652, 2810, 1345, 3862, 3861,
	1492, 3853, 2236, 3843, 1491, 2386, 3842, 2554, 3863, 2551,
	3840, 3839, 3827, 3793, 3792, 3242, 1977, 3485, 2248, 3484,
	3324, 3178, 3177, 3176, 3175, 3131, 2911, 2149, 1584, 2910,
	2271, 2161, 2076, 2907, 2896, 862, 2282, 1347, 1693, 2884,
	1049, 2883, 2879, 2294, 2197, 2878, 2877, 1534, 2856, 2855,
	2256, 2816, 2739, 2461, 1736, 3362, 2595, 3236, 2594, 2418,
	1110, 2021, 1110, 1571, 1354, 1570, 1691, 2994, 1569, 1110,
	1568, 2766, 1989, 1989, 1371, 1624, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 2245, 1110, 2217, 1110, 1110, 1110, 1110, 1051,
	2216, 1051, 2234, 1629, 1353, 2277, 4308, 2258, 4285, 1814,
	1048, 1581, 2250, 2253, 2254, 2253, 4094, 4062, 2372, 2390,
	2743, 1110, 2262, 2377, 2263, 1110, 1110, 741, 2387, 805,
	1330, 2825, 808, 1110, 2355, 1343, 4232, 1110, 2556, 1110,
	1110, 2853, 2121, 1588, 2849, 1588, 3384, 1371, 2316, 1346,
	2849, 4741, 4745, 1110, 1110, 1110, 1110, 2281, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1354, 2266, 2215, 2414,
	2415, 2298, 3086, 1625, 1771, 3447, 2117, 3600, 996, 2370,
	4061, 1529, 2286, 3237, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1954, 3417, 2093, 2094, 1110, 2362, 2528,
	2529, 1728, 2385, 1266, 1968, 2122, 2123, 2801, 1542, 1232,
	3801, 2017, 2476, 2528, 2544, 1348, 1371, 1983, 1983, 1050,
	2338, 2155, 3046, 4342, 2476, 1232, 1353, 1645, 2839, 2731,
	1547, 2388, 2401, 2752, 4093, 2118, 2348, 743, 1488, 2590,
	1674, 1110, 1371, 3104, 2828, 2365, 1674, 1704, 4746, 1583,
	2306, 4461, 3119, 2303, 2550, 2873, 4773, 2376, 2636, 2636,
	2650, 2297, 2528, 2354, 2374, 2671, 2673, 2389, 2382, 1230,
	2375, 2677, 1344, 2547, 2838, 2492, 1031, 2866, 2867, 1031,
	1031, 1345, 3089, 2405, 1946, 1230, 2406, 2407, 2543, 3228,
	2386, 2866, 2867, 2702, 2866, 2867, 1641, 2484, 1986, 1986,
	1690, 2255, 2299, 4113, 2482, 3608, 3607, 1554, 1671, 3080,
	864, 863, 4707, 1336, 2556, 2727, 3220, 3221, 3232, 3233,
	3234, 1741, 2694, 1708, 3871, 3231, 3229, 3230, 3222, 3223,
	3224, 3225, 3227, 3228, 3448, 1916, 1328, 3359, 1935, 4096,
	1051, 4081, 3434, 1673, 1729, 2904, 2488, 1313, 1313, 1673,
	1051, 2592, 2815, 1198, 1051, 2364, 2593, 1552, 4748, 2596,
	2307, 2597, 2598, 2815, 2541, 2300, 2742, 4138, 1653, 2384,
	4637, 1672, 4463, 2797, 2716, 4077, 3841, 2903, 3872, 2746,
	3838, 2901, 3118, 2899, 3824, 3812, 902, 3785, 1653, 1371,
	4721, 3772, 2799, 2811, 2693, 4729, 3435, 1047, 176, 2789,
	4231, 3491, 2701, 3483, 2706, 2852, 2124, 2712, 2713, 3664,
	2783, 2645, 2632, 2662, 3088, 2765, 1920, 2675, 3445, 2105,
	3870, 4537, 2906, 1989, 2106, 2775, 2683, 2684, 2800, 4078,
	2695, 2779, 1341, 2387, 2699, 2700, 4091, 2876, 3433, 2782,
	2854, 1347, 1051, 2827, 3085, 2790, 1933, 2754, 1687, 2798,
	1888, 2203, 2202, 1346, 4081, 2786, 2371, 691, 1000, 1630,
	2343, 1371, 2361, 1000, 4343, 1923, 986, 4728, 1000, 1001,
	1000, 2341, 4754, 3111, 3112, 1313, 4341, 859, 2737, 858,
	1918, 4776, 4339, 686, 3544, 3226, 4696, 3978, 4077, 1239,
	1044, 2791, 4070, 1531, 1110, 1110, 2761, 1110, 1921, 2817,
	1227, 1880, 1881, 3810, 2774, 1977, 1977, 2385, 2777, 4068,
	2778, 1226, 3977, 3825, 1298, 2785, 1227, 3489, 4072, 799,
	2764, 1313, 1068, 2768, 2813, 2792, 3371, 1226, 2814, 4338,
	775, 1237, 2180, 2168, 4804, 2784, 3426, 2107, 2897, 3545,
	2859, 1919, 4078, 4547, 4638, 2874, 3087, 1626, 4747, 1628,
	4276, 986, 1313, 3661, 2111, 2887, 1528, 4340, 895, 1343,
	2556, 2938, 3008, 1298, 1313, 2858, 1313, 2795, 4605, 1705,
	4606, 2881, 3284, 883, 1241, 1044, 2132, 3037, 1265, 1228,
	2035, 1313, 987, 3460, 4071, 2842, 2179, 2826, 1983, 2945,
	3427, 4092, 3236, 2981, 2947, 1228, 2880, 4469, 2857, 2136,
	1298, 1298, 2868, 2870, 2871, 2872, 4535, 2820, 4488, 3047,
	3048, 2875, 2830, 2833, 1554, 2939, 3361, 3544, 3399, 2363,
	3054, 3055, 3056, 1702, 2305, 2105, 1110, 2108, 2113, 2144,
	2106, 4073, 3425, 740, 4462, 3662, 4074, 2156, 1486, 1348,
	773, 1240, 3884, 1250, 4636, 2127, 4536, 2812, 4163, 1875,
	3328, 3882, 2882, 4695, 1922, 4670, 2133, 2937, 2892, 2168,
	3133, 2115, 2831, 3974, 1814, 4671, 2977, 987, 805, 1986,
	997, 808, 2475, 2472, 3398, 3044, 3064, 2458, 2168, 3022,
	3049, 709, 3050, 2145, 1110, 2943, 812, 4076, 176, 1492,
	1110, 1110, 1463, 2948, 3041, 3142, 1344, 3063, 805, 2128,
	4228, 808, 2470, 4079, 2730, 1345, 1706, 3010, 2302, 3072,
	2109, 3074, 3012, 3076, 2960, 3069, 2296, 2971, 4244, 1474,
	2970, 1703, 2171, 4752, 3140, 2143, 4718, 2178, 2164, 3886,
	3372, 3091, 3403, 3093, 4588, 4576, 4123, 1826, 3237, 3490,
	2483, 2126, 3003, 2107, 4073, 2538, 1110, 1110, 3013, 4074,
	1640, 1642, 1110, 3409, 2163, 3024, 3094, 2115, 3183, 3096,
	2111, 903, 2698, 2137, 3885, 1110, 1110, 3283, 3042, 2928,
	4777, 1110, 1110, 988, 2711, 1740, 2992, 1110, 3061, 1050,
	1916, 3677, 2025, 3405, 4764, 3011, 2556, 4173, 2159, 2105,
	1327, 3071, 3968, 3073, 2106, 3075, 4762, 1707, 4143, 3070,
	4076, 3979, 2920, 2918, 3773, 896, 897, 3407, 3620, 2922,
	2924, 2914, 1255, 1588, 4495, 3811, 4079, 2122, 2123, 3084,
	884, 885, 1110, 1110, 1110, 687, 3134, 4753, 1110, 2138,
	2139, 4075, 3102, 2108, 2113, 4635, 4706, 4227, 1110, 4704,
	2172, 1658, 3099, 3110, 2466, 2456, 3404, 2160, 2459, 3408,
	4581, 774, 4694, 2134, 4178, 1110, 4514, 1474, 988, 3101,
	3100, 1920, 4755, 2467, 4164, 1298, 3137, 4380, 2468, 4142,
	4082, 3120, 2473, 4179, 2401, 3105, 1977, 1346, 3899, 4141,
	3231, 3229, 3230, 3222, 3223, 3224, 3225, 3227, 3228, 4805,
	3138, 3922, 3532, 2223, 3143, 2135, 1913, 3161, 3162, 2455,
	776, 1253, 3165, 688, 772, 1238, 4669, 2107, 3157, 1246,
	1923, 678, 1474, 1751, 1474, 989, 2109, 3884, 3975, 2404,
	4023, 3716, 1059, 3591, 2111, 1918, 3882, 2125, 2077, 3883,
	4306, 1750, 3584, 813, 814, 2036, 2110, 3132, 4782, 3318,
	4389, 4449, 2074, 1921, 4075, 1110, 1110, 1110, 1110, 3923,
	1920, 3857, 689, 2832, 690, 1110, 1110, 1110, 3844, 2103,
	1110, 3797, 1750, 2115, 3378, 3533, 3524, 3374, 990, 2982,
	1110, 1232, 1371, 2976, 4229, 1745, 1110, 2964, 1110, 2249,
	2243, 3276, 3277, 4082, 39, 2237, 1919, 1232, 1051, 2229,
	2916, 2209, 3660, 1522, 4496, 898, 899, 2108, 2113, 1923,
	989, 2930, 1257, 3789, 3886, 1371, 749, 3731, 4552, 3621,
	886, 887, 2140, 2101, 2696, 2815, 4517, 1232, 2072, 1750,
	1371, 3172, 2929, 2921, 2919, 2923, 2925, 2915, 2917, 2931,
	3586, 1230, 1921, 3925, 3259, 1749, 3980, 2927, 2349, 3885,
	1989, 2394, 3311, 2070, 1371, 3585, 2961, 1230, 4194, 3766,
	3278, 1268, 4358, 990, 2469, 2102, 2175, 4356, 4287, 2073,
	1313, 1313, 1826, 3390, 2471, 3298, 1749, 3386, 1675, 3385,
	2934, 2860, 3125, 3103, 816, 815, 3139, 1230, 2287, 3744,
	2109, 3281, 3280, 1110, 4176, 1577, 3141, 2457, 2141, 1681,
	1680, 2736, 2735, 2734, 2733, 1575, 3890, 1110, 2968, 1922,
	3286, 1751, 901, 3767, 1563, 4295, 3312, 1313, 1048, 4155,
	2173, 3717, 1989, 4456, 2114, 4353, 3366, 3367, 1564, 4024,
	3718, 3981, 2836, 1749, 3804, 3288, 3574, 2115, 3880, 3768,
	1110, 3765, 1751, 3357, 3582, 817, 818, 3388, 2247, 3287,
	3392, 3307, 2110, 3498, 3296, 4781, 1313, 3363, 2114, 3350,
	3299, 3300, 2174, 4715, 3270, 3304, 3794, 3329, 1341, 3297,
	4492, 3346, 4274, 3316, 3348, 3349, 2689, 4211, 1313, 3352,
	1313, 3353, 3285, 3354, 3254, 3255, 3256, 3365, 4555, 2395,
	2966, 3341, 1659, 3389, 3326, 3045, 3394, 1371, 1922, 3396,
	4497, 2946, 2944, 3302, 2167, 3303, 4457, 2942, 1313, 3790,
	2275, 2692, 1313, 2167, 3883, 1983, 3292, 3463, 1634, 3465,
	4296, 4282, 3469, 3375, 1958, 4562, 3475, 4549, 4030, 3450,
	1724, 3733, 3420, 2563, 3461, 1313, 3320, 3321, 3322, 3379,
	4719, 3335, 3336, 2357, 3337, 1313, 4583, 1313, 4720, 4210,
	4717, 1371, 2691, 3347, 2861, 2862, 2935, 2690, 799, 3351,
	3592, 3587, 3588, 3589, 3590, 2926, 4655, 4283, 3443, 1313,
	4484, 4476, 1227, 1726, 3458, 3358, 4556, 3319, 3067, 3507,
	3068, 1313, 1723, 1226, 3364, 3446, 1721, 1983, 1227, 2562,
	2147, 3438, 2340, 4250, 4458, 1699, 1986, 3424, 1232, 1226,
	1697, 1669, 1667, 748, 3540, 4022, 3516, 1665, 3889, 3251,
	3636, 3293, 3597, 3596, 3339, 3406, 2110, 3037, 1227, 3214,
	3144, 2965, 1663, 1313, 1313, 3416, 3037, 3795, 1661, 1226,
	1655, 2025, 2025, 3429, 2895, 1576, 3538, 2850, 2763, 3769,
	1474, 1474, 3523, 3432, 3430, 1574, 1313, 2366, 3431, 1953,
	1949, 1228, 900, 1727, 3422, 3560, 2124, 3531, 1230, 3451,
	1612, 3291, 3459, 4345, 3252, 2153, 3616, 1228, 1986, 3615,
	1745, 3472, 3549, 3482, 3082, 3493, 3436, 3496, 2025, 1650,
	3478, 1648, 3591, 1573, 3081, 3052, 1371, 2383, 2188, 1371,
	1686, 3584, 3601, 2311, 3295, 2228, 3539, 1228, 2208, 2018,
	1859, 1623, 1546, 4630, 4124, 3848, 3470, 4125, 2148, 3847,
	3476, 4108, 4548, 1474, 4192, 4130, 3534, 2025, 4121, 3486,
	2858, 998, 1110, 2359, 3500, 3541, 3521, 2358, 1110, 1110,
	4066, 3921, 1110, 1110, 1110, 3519, 1110, 805, 2234, 2025,
	808, 2025, 3594, 3462, 3520, 1110, 1989, 3912, 3860, 3845,
	3593, 4187, 176, 176, 1110, 3572, 3818, 1725, 3546, 1110,
	3576, 3816, 3548, 3796, 3527, 1371, 1722, 3555, 3614, 2025,
	1720, 3522, 2339, 2025, 1110, 3512, 3558, 3559, 2995, 1698,
	2987, 4692, 1371, 3613, 1696, 1668, 1666, 3611, 3570, 3586,
	2980, 1664, 1989, 1989, 1110, 1110, 3617, 1110, 1110, 1110,
	2972, 3294, 2958, 1977, 3585, 3166, 1662, 2940, 2781, 2776,
	2207, 2205, 1660, 2184, 1654, 1110, 2169, 3622, 1051, 1110,
	2142, 1989, 1989, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 3689, 1110, 3690, 3610, 1298, 3595, 3649,
	3650, 3639, 1110, 1110, 1989, 2129, 3604, 2116, 3605, 1110,
	3606, 3619, 1042, 1649, 986, 1647, 2057, 1572, 2189, 2054,
	1110, 2051, 2048, 2043, 2041, 1977, 1003, 1005, 1007, 2037,
	2028, 1232, 1232, 3657, 3537, 1110, 3473, 4683, 1044, 1227,
	1207, 2178, 1754, 4178, 1961, 3123, 4708, 2078, 3097, 2369,
	1226, 3095, 4593, 4216, 4209, 4208, 4137, 3646, 3644, 2414,
	3680, 1983, 4179, 4058, 1371, 3038, 1208, 2097, 1527, 3656,
	2812, 2812, 4391, 3762, 2146, 3672, 1839, 3663, 3665, 3666,
	1844, 2837, 4384, 3728, 1043, 2810, 2834, 3933, 2414, 3695,
	2124, 1230, 1230, 2301, 3679, 2367, 1718, 1719, 1289, 1474,
	2156, 2246, 1288, 2335, 2330, 4592, 2308, 1983, 1983, 4100,
	3687, 3667, 3749, 1110, 3688, 4132, 3692, 1646, 1228, 1761,
	1762, 3724, 3720, 3694, 4426, 1761, 1762, 4031, 2154, 3735,
	987, 3729, 2840, 1110, 3686, 4009, 1983, 1983, 3401, 2841,
	3124, 2368, 1986, 2863, 3740, 3741, 1758, 1322, 1256, 3721,
	176, 4711, 1755, 4702, 3474, 1764, 3323, 3856, 256, 3592,
	3587, 3588, 3589, 3590, 2841, 4664, 1110, 1110, 2957, 1983,
	2151, 2337, 3737, 3738, 2889, 3909, 1209, 2230, 1333, 3855,
	3338, 2902, 2900, 1320, 1763, 2909, 1289, 1289, 1986, 1986,
	1763, 2891, 2843, 2845, 3787, 4542, 4508, 4502, 3788, 3751,
	4455, 3752, 2155, 4749, 2890, 675, 2844, 4375, 1110, 4351,
	4275, 3919, 3911, 3898, 3759, 3526, 3002, 1986, 1986, 2676,
	2063, 1970, 4585, 4293, 3327, 1118, 4780, 4586, 4504, 3220,
	3221, 4585, 1313, 1761, 1762, 1313, 4586, 2804, 2805, 3817,
	3829, 3819, 2802, 2803, 1494, 1633, 4001, 4723, 2558, 3775,
	1986, 1632, 2804, 2802, 2591, 3834, 3836, 3918, 1989, 1500,
	3833, 1507, 1701, 1513, 4376, 1700, 3779, 4327, 4134, 4129,
	4128, 263, 263, 263, 3800, 681, 682, 3997, 697, 681,
	697, 707, 3852, 3858, 747, 3774, 3668, 3850, 765, 1313,
	3467, 3821, 3464, 771, 3826, 1110, 1853, 1852, 4766, 4730,
	263, 4546, 4545, 1232, 1110, 3873, 3875, 4544, 3935, 4483,
	4482, 4442, 3859, 4354, 1313, 1313, 1313, 4321, 3008, 3942,
	880, 988, 1227, 1227, 4272, 4269, 263, 2858, 4267, 3926,
	1601, 1313, 1606, 1226, 1226, 4166, 4152, 3905, 3888, 4098,
	4053, 3957, 1615, 3939, 1620, 3037, 3927, 1313, 3893, 1977,
	3814, 3878, 3877, 1371, 3887, 3946, 3807, 3530, 3529, 3395,
	3492, 3345, 3930, 1230, 3079, 3060, 3059, 3058, 3057, 2986,
	2959, 2835, 2772, 2767, 2756, 3379, 3869, 1371, 2755, 3929,
	1110, 1110, 3958, 2744, 2195, 3910, 1110, 1110, 1989, 2487,
	2360, 1110, 1110, 3892, 1110, 1977, 1977, 3906, 2336, 1110,
	2329, 1228, 1228, 2328, 2327, 2326, 1677, 2325, 2244, 2218,
	1110, 2214, 3913, 2213, 2212, 2211, 2210, 2031, 3915, 2030,
	2029, 2027, 1960, 1983, 1977, 1977, 1110, 1717, 1716, 3931,
	3937, 3936, 3928, 3867, 1656, 1541, 1540, 1539, 1538, 3947,
	3948, 3964, 3982, 1537, 3941, 1536, 1535, 3952, 3949, 3955,
	3953, 681, 681, 3965, 3983, 3956, 1530, 1977, 1526, 263,
	1524, 1041, 1523, 989, 1479, 1478, 1477, 1362, 3995, 1361,
	1360, 1359, 1358, 1298, 1326, 1325, 1275, 3966, 1274, 1273,
	1272, 3976, 1271, 1270, 1269, 1267, 1262, 1232, 1261, 1260,
	1259, 1258, 1190, 3991, 2068, 1232, 2025, 873, 8, 1371,
	1009, 1371, 995, 4460, 1986, 4080, 2356, 92, 1232, 1532,
	835, 86, 2176, 3813, 2941, 2187, 990, 4658, 3488, 1313,
	1313, 3487, 965, 4582, 1516, 4487, 843, 4564, 3907, 1371,
	3397, 2912, 2234, 3311, 2310, 1657, 2312, 3306, 2718, 4534,
	4005, 3182, 4433, 3971, 4243, 2561, 1857, 1230, 3263, 88,
	1094, 1140, 4162, 1983, 1232, 1230, 1232, 4161, 4067, 4059,
	4060, 3799, 3027, 4159, 4158, 4021, 1974, 1976, 1230, 1058,
	1374, 4604, 2079, 1100, 2095, 2088, 4039, 2757, 1313, 4086,
	2635, 4086, 1117, 4101, 1114, 1978, 1980, 1116, 1371, 1115,
	1313, 1979, 1876, 1313, 1227, 1113, 1973, 3917, 3006, 4028,
	4032, 3556, 1582, 1580, 1371, 1226, 967, 4035, 4037, 2083,
	4043, 4038, 4033, 4034, 1230, 2481, 1230, 2545, 176, 3171,
	1850, 1074, 1096, 4046, 2542, 1251, 1085, 4133, 1073, 4135,
	4102, 3289, 4063, 4051, 1986, 3268, 3543, 4042, 3758, 2393,
	1313, 1313, 853, 3217, 2548, 1242, 4057, 2659, 2651, 2647,
	4065, 3355, 2996, 1731, 4257, 1828, 3007, 1356, 1078, 2479,
	1313, 1841, 3149, 4156, 2403, 3550, 1942, 3309, 2750, 4589,
	3676, 2222, 1371, 1228, 1206, 1205, 1249, 1313, 1204, 4570,
	4567, 4127, 4122, 4136, 2166, 3950, 3505, 2071, 2796, 4089,
	2491, 4150, 3513, 1090, 1473, 2353, 3274, 3575, 1543, 770,
	4300, 1102, 1232, 1813, 2933, 2932, 4120, 4153, 4452, 1342,
	1340, 1977, 1313, 1313, 1313, 1339, 1338, 4195, 4737, 4144,
	4803, 3809, 3808, 230, 3117, 1371, 1752, 4086, 4149, 1744,
	4184, 4117, 2973, 227, 4196, 229, 228, 1110, 1110, 1110,
	4167, 3770, 3771, 3763, 3315, 4662, 3831, 3497, 23, 4190,
	22, 21, 4172, 112, 42, 1371, 3783, 3784, 4157, 3786,
	1110, 4199, 1230, 1110, 1110, 20, 150, 128, 147, 4181,
	146, 4151, 120, 1110, 4204, 4106, 1989, 145, 1227, 144,
	143, 1110, 1110, 142, 149, 4197, 1227, 141, 4115, 1226,
	140, 4118, 135, 139, 138, 137, 1371, 1226, 1313, 1227,
	4235, 136, 134, 4183, 4219, 132, 133, 127, 4218, 2485,
	1226, 131, 130, 4223, 129, 126, 125, 124, 123, 4230,
	122, 1371, 121, 119, 4224, 1839, 118, 117, 116, 1110,
	115, 114, 113, 761, 758, 4212, 61, 4240, 1110, 2025,
	60, 1977, 111, 4221, 110, 1227, 1110, 1227, 19, 40,
	1989, 2025, 14, 2234, 2025, 4246, 1226, 1228, 1226, 1110,
	65, 66, 1110, 18, 13, 1228, 35, 91, 102, 101,
	36, 99, 98, 1298, 34, 17, 1110, 16, 1228, 2658,
	4278, 4252, 15, 1371, 96, 95, 4303, 33, 4263, 4264,
	1313, 31, 11, 9, 37, 1937, 12, 5, 1313, 1313,
	181, 180, 183, 179, 4279, 182, 90, 178, 177, 1244,
	3146, 3147, 4320, 89, 29, 4286, 10, 173, 4367, 3903,
	4277, 2025, 4266, 81, 1228, 175, 1228, 174, 172, 171,
	4344, 170, 82, 79, 4366, 169, 85, 168, 3507, 4332,
	80, 1983, 1264, 1371, 84, 83, 1313, 4357, 4312, 4313,
	4322, 27, 6, 4318, 263, 64, 263, 263, 4323, 1293,
	263, 1303, 7, 4225, 1232, 1232, 4329, 4310, 3598, 105,
	106, 38, 1323, 77, 4324, 76, 75, 26, 4328, 4347,
	4330, 765, 4331, 4346, 1110, 1110, 4385, 63, 25, 4086,
	4086, 4355, 4350, 1227, 167, 214, 4394, 4370, 4374, 213,
	212, 1110, 1989, 4386, 1226, 263, 4413, 263, 263, 1293,
	211, 263, 263, 4365, 210, 1983, 1303, 4388, 209, 208,
	4382, 207, 1986, 202, 1230, 1230, 201, 4387, 263, 4349,
	1496, 4336, 4393, 206, 4407, 4392, 4199, 204, 203, 1110,
	205, 200, 1110, 217, 216, 222, 221, 220, 219, 1232,
	218, 1520, 215, 224, 199, 198, 197, 195, 4422, 4423,
	191, 4421, 1232, 190, 194, 196, 4448, 193, 192, 189,
	1545, 223, 1228, 1303, 4086, 72, 165, 263, 263, 166,
	1293, 71, 4425, 164, 163, 162, 161, 4086, 4334, 160,
	3244, 3245, 3246, 3247, 159, 158, 1986, 4409, 4410, 70,
	4447, 765, 24, 263, 263, 2, 1, 4431, 0, 1230,
	0, 4444, 0, 4470, 1110, 1110, 0, 4465, 2114, 4464,
	0, 1307, 1230, 0, 1110, 2332, 880, 0, 0, 1232,
	4491, 0, 1232, 0, 2398, 0, 1313, 0, 0, 0,
	0, 4478, 0, 0, 0, 0, 1313, 1313, 0, 0,
	0, 2025, 0, 4480, 4086, 0, 0, 4086, 0, 4036,
	0, 4485, 0, 1313, 4499, 4500, 0, 1983, 0, 0,
	0, 0, 0, 4503, 0, 0, 1482, 1110, 1110, 4479,
	4498, 0, 4506, 4525, 4505, 0, 4510, 1110, 0, 1230,
	0, 4370, 1230, 4518, 4519, 4471, 0, 4523, 4524, 0,
	0, 263, 0, 4521, 0, 0, 0, 0, 1518, 0,
	0, 4522, 0, 0, 4528, 0, 0, 0, 0, 0,
	4529, 263, 0, 4090, 4557, 1110, 1110, 4539, 1110, 1977,
	0, 0, 4561, 0, 1555, 4543, 0, 0, 0, 4103,
	4104, 0, 1474, 0, 0, 0, 0, 0, 1986, 0,
	0, 4538, 4587, 4569, 4572, 1227, 1227, 0, 0, 0,
	4591, 1596, 4511, 0, 4560, 4513, 1226, 1226, 4584, 4559,
	0, 3343, 3344, 0, 0, 1609, 4574, 0, 4609, 2653,
	4612, 0, 0, 4578, 0, 0, 1110, 1110, 1110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4594, 4573,
	0, 4613, 4577, 1977, 0, 0, 4600, 0, 0, 4607,
	0, 0, 4608, 0, 0, 0, 1110, 0, 3373, 0,
	0, 0, 0, 0, 4629, 0, 0, 0, 0, 1635,
	4642, 0, 4626, 4627, 1228, 1228, 4628, 0, 0, 0,
	1227, 4647, 0, 1298, 0, 0, 0, 0, 0, 0,
	4665, 1226, 0, 1227, 0, 0, 4676, 3423, 0, 4672,
	0, 0, 0, 0, 1226, 0, 0, 4688, 4687, 4661,
	0, 4215, 0, 1110, 4674, 0, 2658, 4686, 4645, 3437,
	0, 3439, 4673, 4693, 0, 0, 0, 0, 0, 0,
	4681, 0, 0, 0, 4682, 0, 4680, 0, 0, 4684,
	4685, 0, 4709, 0, 0, 4690, 0, 0, 4705, 3471,
	4703, 0, 4713, 3477, 4701, 0, 4699, 4700, 0, 1228,
	1227, 0, 681, 1227, 4712, 4657, 1232, 4660, 1232, 4733,
	4569, 1226, 1228, 4572, 1226, 4591, 4732, 4716, 2114, 4727,
	4714, 4735, 4731, 263, 4722, 263, 4744, 0, 0, 263,
	4491, 4086, 4743, 4086, 4739, 1977, 0, 2658, 2658, 4742,
	0, 0, 1496, 1293, 263, 0, 263, 4757, 0, 0,
	0, 0, 263, 1496, 697, 0, 4756, 0, 0, 263,
	1496, 4759, 0, 0, 0, 0, 1230, 0, 1230, 0,
	0, 0, 0, 4767, 2032, 4774, 0, 0, 4768, 1228,
	1110, 1110, 1228, 4772, 0, 0, 263, 0, 4770, 1110,
	4778, 1110, 1110, 263, 0, 0, 4775, 0, 0, 4784,
	0, 4788, 0, 4794, 4406, 0, 4795, 4797, 4799, 0,
	4791, 4796, 4798, 0, 0, 0, 0, 0, 0, 0,
	3008, 4792, 0, 0, 4793, 4807, 4802, 4806, 4808, 0,
	0, 0, 4809, 765, 0, 4811, 0, 4812, 0, 4734,
	4810, 4736, 0, 0, 0, 4817, 4814, 0, 3632, 3633,
	0, 1110, 4822, 4818, 4824, 0, 0, 4398, 4828, 0,
	4825, 0, 4827, 4819, 0, 4785, 4786, 0, 0, 0,
	4399, 4821, 4814, 0, 0, 0, 0, 0, 0, 0,
	2705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4787, 0, 0, 0, 0, 0, 0, 0, 4390, 0,
	0, 0, 0, 4400, 0, 0, 1761, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2658, 2658, 2658,
	2658, 0, 0, 0, 0, 4823, 0, 2951, 0, 1792,
	2954, 0, 2956, 0, 0, 0, 1764, 0, 3696, 3697,
	3698, 3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706, 3707,
	3708, 3709, 3710, 3711, 3712, 3713, 3714, 3715, 0, 3719,
	0, 0, 1817, 0, 0, 0, 4402, 4441, 0, 0,
	4443, 1763, 0, 0, 0, 0, 2999, 0, 0, 2999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4401,
	0, 263, 0, 0, 0, 263, 0, 1227, 0, 1227,
	0, 0, 0, 0, 0, 0, 0, 4403, 1226, 0,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 263, 1798, 1792, 3077, 3107, 0, 263, 0,
	0, 1764, 0, 0, 263, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 1769, 1228, 1065, 1228, 0,
	263, 0, 263, 0, 0, 0, 681, 1817, 263, 0,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	765, 0, 0, 0, 880, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 4530, 1780, 4531, 0, 0, 0,
	0, 0, 0, 1791, 1793, 0, 0, 0, 0, 263,
	0, 1293, 263, 0, 0, 0, 0, 2653, 2653, 0,
	0, 0, 0, 0, 0, 0, 765, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	2309, 0, 0, 0, 0, 263, 263, 0, 263, 0,
	263, 0, 263, 0, 263, 0, 0, 0, 4579, 0,
	0, 4580, 1784, 0, 0, 0, 0, 0, 0, 0,
	1786, 1787, 1788, 1789, 0, 0, 0, 0, 0, 2345,
	1769, 0, 2346, 0, 2347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 263, 263, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 0,
	0, 1812, 747, 0, 0, 0, 765, 0, 1791, 1793,
	0, 4404, 0, 0, 1814, 4643, 0, 4405, 0, 0,
	2264, 0, 0, 0, 0, 1808, 3868, 1809, 0, 0,
	0, 73, 0, 0, 1778, 1779, 1307, 2278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2280, 74, 0,
	0, 0, 1800, 0, 0, 265, 0, 0, 0, 2288,
	0, 2291, 2292, 2293, 78, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2653, 2653, 2653,
	2653, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2493,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 1762, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 4738, 0, 1814,
	0, 0, 0, 1792, 874, 0, 1816, 0, 0, 0,
	1764, 0, 0, 0, 0, 2658, 2658, 0, 107, 0,
	0, 0, 0, 93, 104, 0, 0, 0, 0, 681,
	0, 0, 0, 0, 0, 0, 1817, 4763, 0, 0,
	0, 0, 0, 4765, 263, 1763, 0, 0, 0, 0,
	0, 1790, 0, 681, 0, 0, 0, 0, 0, 0,
	263, 0, 681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 263, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	263, 1303, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0,
	1803, 0, 0, 0, 1072, 2658, 2658, 2658, 2658, 2658,
	2658, 2658, 2658, 2658, 2658, 2658, 2658, 2658, 2658, 2658,
	2658, 2658, 2658, 2658, 2658, 0, 2658, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 263,
	1303, 0, 0, 0, 697, 0, 0, 0, 0, 1769,
	0, 0, 0, 0, 2771, 0, 0, 0, 0, 0,
	263, 0, 0, 263, 0, 0, 0, 263, 0, 263,
	0, 0, 0, 0, 1293, 0, 263, 263, 0, 1303,
	1303, 2787, 0, 0, 0, 0, 263, 0, 3410, 3411,
	0, 3412, 3413, 3414, 0, 0, 0, 1791, 1793, 0,
	0, 0, 0, 1801, 0, 0, 0, 2747, 1775, 1776,
	1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766,
	1767, 1768, 1770, 1771, 0, 0, 0, 97, 4014, 4107,
	73, 2824, 4013, 0, 3452, 3453, 0, 3454, 3455, 3456,
	0, 4116, 263, 0, 4119, 0, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 263, 1784, 0, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	100, 1369, 103, 0, 0, 1468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 868, 231, 0,
	0, 4180, 0, 0, 0, 0, 875, 0, 0, 0,
	0, 148, 0, 0, 263, 2949, 0, 0, 1814, 0,
	0, 0, 0, 0, 73, 0, 871, 870, 0, 0,
	0, 2788, 1307, 874, 0, 0, 0, 0, 0, 1496,
	0, 74, 263, 0, 263, 49, 233, 107, 4249, 0,
	0, 263, 93, 104, 0, 0, 0, 78, 0, 0,
	0, 2991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2824, 151, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 3020, 880, 0, 2824, 2824, 188, 0, 0,
	0, 0, 1785, 0, 0, 232, 0, 87, 0, 0,
	0, 0, 263, 0, 4289, 2653, 2653, 0, 225, 0,
	0, 94, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 263, 1293, 263, 0, 0, 0, 1496, 0, 1496,
	1303, 263, 0, 0, 1293, 0, 1293, 874, 1293, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	1816, 107, 0, 0, 0, 0, 93, 104, 0, 2936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 263, 263,
	263, 1293, 0, 0, 1293, 0, 263, 0, 0, 263,
	0, 0, 0, 0, 0, 2653, 2653, 2653, 2653, 2653,
	2653, 2653, 2653, 2653, 2653, 2653, 2653, 2653, 2653, 2653,
	2653, 2653, 2653, 2653, 2653, 94, 2653, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 4335, 0, 0, 0, 1772, 1773, 1765, 1766, 1767,
	1768, 1770, 1771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 1761, 1762, 3053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4430, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 100,
	0, 103, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 0, 0,
	148, 0, 0, 0, 1496, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 1072, 0, 0, 157,
	1072, 0, 0, 0, 0, 0, 0, 73, 0, 46,
	45, 0, 0, 0, 0, 233, 1455, 0, 0, 0,
	1455, 0, 0, 0, 74, 0, 0, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 151, 184, 100, 0, 103, 0, 0, 0, 0,
	0, 67, 0, 0, 0, 1952, 188, 0, 48, 0,
	154, 0, 1769, 0, 232, 0, 0, 0, 0, 0,
	0, 231, 0, 1761, 1762, 1797, 0, 225, 47, 875,
	87, 0, 0, 0, 148, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 50, 68, 187, 0,
	1791, 1793, 0, 0, 0, 51, 0, 0, 0, 233,
	57, 0, 0, 0, 155, 0, 263, 0, 0, 1817,
	0, 0, 49, 0, 107, 0, 0, 0, 1763, 93,
	104, 0, 263, 0, 0, 151, 0, 681, 1783, 0,
	0, 0, 681, 0, 0, 681, 0, 1780, 681, 681,
	188, 0, 0, 0, 681, 0, 0, 0, 232, 1784,
	0, 0, 263, 0, 0, 0, 0, 0, 2099, 0,
	52, 225, 0, 0, 0, 1496, 0, 0, 0, 0,
	226, 3914, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1496,
	0, 3635, 869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 2658, 263, 263, 0, 0,
	0, 0, 1786, 1787, 1788, 1789, 0, 0, 0, 0,
	0, 1814, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2824, 2824, 263, 0, 3370,
	0, 0, 3967, 0, 0, 2824, 0, 0, 3381, 0,
	0, 0, 0, 0, 0, 0, 2824, 3381, 0, 2824,
	3381, 2658, 0, 3381, 0, 0, 0, 0, 0, 0,
	1791, 1793, 0, 0, 0, 0, 0, 0, 263, 263,
	3370, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 1778, 1779, 2200, 0,
	0, 0, 3370, 0, 263, 0, 3442, 3442, 0, 0,
	1293, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 2824, 0, 2824, 1784,
	3468, 2824, 3370, 0, 0, 2824, 3370, 0, 0, 0,
	53, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 56, 0, 0, 0, 0, 59,
	0, 0, 0, 0, 0, 0, 263, 0, 69, 1496,
	0, 0, 0, 0, 58, 184, 100, 0, 103, 0,
	0, 0, 54, 263, 3501, 0, 156, 3503, 2824, 0,
	0, 263, 0, 0, 55, 263, 0, 0, 1303, 0,
	0, 1814, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 62, 263, 0, 0, 0, 148, 2991, 0,
	0, 1293, 0, 263, 0, 0, 2824, 0, 681, 0,
	0, 0, 153, 2658, 0, 2824, 0, 0, 0, 0,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0, 73,
	1455, 0, 233, 1790, 0, 0, 263, 2991, 0, 0,
	2991, 0, 0, 0, 0, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 151, 0,
	0, 0, 78, 0, 0, 2503, 2504, 2505, 2522, 2523,
	2524, 0, 3603, 188, 0, 0, 1797, 0, 0, 0,
	0, 232, 1797, 0, 0, 2525, 0, 0, 1797, 3609,
	0, 0, 1293, 263, 225, 263, 0, 0, 0, 3479,
	0, 1293, 87, 226, 0, 3220, 3221, 0, 3238, 3239,
	3240, 0, 0, 1816, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 4165, 0, 187, 0, 3641, 3, 0,
	0, 263, 0, 3517, 0, 0, 4182, 2515, 0, 0,
	0, 0, 874, 0, 2417, 3525, 2511, 1072, 0, 0,
	0, 0, 0, 1455, 49, 0, 107, 0, 0, 4203,
	0, 93, 104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	3235, 0, 1797, 0, 0, 2653, 0, 3566, 3567, 3674,
	0, 1797, 0, 0, 1781, 1777, 1797, 1774, 1772, 1773,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 1762, 0, 0,
	94, 2516, 2517, 2518, 2519, 0, 0, 0, 0, 0,
	0, 2510, 0, 0, 0, 0, 0, 2559, 0, 1792,
	0, 2653, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 1817, 0, 3226, 0, 0, 0, 0, 0,
	0, 1763, 0, 0, 0, 0, 263, 263, 0, 0,
	0, 1783, 0, 1455, 0, 0, 0, 0, 0, 1915,
	0, 0, 0, 0, 0, 2520, 2521, 0, 681, 681,
	0, 0, 0, 3220, 3221, 0, 3238, 3239, 3240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 1496, 2728, 0, 0, 3640, 0, 0, 2513, 3242,
	0, 0, 0, 0, 0, 1496, 1496, 0, 1496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 1787, 1788, 1789, 0,
	0, 3236, 0, 0, 0, 1769, 0, 0, 3235, 0,
	0, 0, 0, 0, 0, 0, 1797, 1797, 1797, 1797,
	1797, 1797, 1797, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2653, 0, 0, 1797, 184, 100, 0,
	103, 0, 0, 765, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 1791, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 1814, 875, 0, 3442, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 2657, 0, 0, 0, 0, 2807,
	0, 0, 3226, 0, 2514, 0, 0, 1797, 1057, 3370,
	0, 263, 1784, 1797, 233, 697, 697, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	151, 0, 0, 0, 0, 0, 0, 3237, 263, 0,
	0, 0, 0, 263, 0, 188, 0, 0, 263, 0,
	0, 0, 1816, 232, 0, 0, 0, 3242, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 2824, 263, 1455,
	0, 0, 0, 0, 1814, 226, 0, 3020, 3020, 0,
	0, 0, 0, 880, 880, 2824, 4489, 0, 0, 2991,
	2991, 0, 0, 880, 2824, 0, 0, 1593, 0, 3236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4509, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 2500,
	2501, 2502, 2526, 2512, 2506, 0, 2508, 2509, 2507, 2494,
	2495, 2496, 2497, 2498, 2499, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 3865, 0, 0, 0,
	0, 0, 1455, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 3232, 3233, 3234, 0, 0, 0, 0, 3231,
	3229, 3230, 3222, 3223, 3224, 3225, 3227, 3228, 0, 4006,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1455, 0, 0, 0, 0, 0, 4595, 3943, 3944,
	3945, 0, 0, 4597, 0, 3237, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 1307, 0, 1455, 1496, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1303, 0,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0,
	0, 1303, 0, 0, 0, 0, 0, 0, 2824, 2824,
	0, 3442, 2824, 0, 0, 0, 0, 0, 0, 4088,
	0, 4088, 1496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2824, 0, 3381, 0, 0, 0, 1496, 1496,
	263, 3370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3370, 0, 263, 3370, 0, 263,
	0, 3442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2824, 0, 2824, 263,
	3232, 3233, 3234, 0, 0, 0, 0, 3231, 3229, 3230,
	3222, 3223, 3224, 3225, 3227, 3228, 0, 0, 0, 0,
	0, 0, 0, 0, 1455, 0, 0, 0, 0, 0,
	0, 0, 2824, 0, 0, 0, 0, 4169, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 4048, 4049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4088, 0, 0,
	1496, 0, 0, 0, 0, 0, 1455, 0, 0, 0,
	1797, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 1797, 1797,
	1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797,
	1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797,
	1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797,
	1797, 1797, 1797, 0, 0, 0, 0, 1318, 1797, 0,
	1797, 1797, 1797, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 2657, 2657, 1307, 0, 0, 0, 0, 0,
	1057, 0, 3275, 0, 1057, 0, 0, 1797, 0, 0,
	0, 0, 2824, 0, 3381, 0, 0, 4281, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 4301, 0, 4301, 3301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3314, 0, 0, 1498, 0, 1504, 765, 1510, 1797, 0,
	0, 0, 0, 0, 0, 0, 4220, 3442, 4222, 1293,
	0, 0, 0, 0, 3333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3370, 0, 263, 0, 1797, 0,
	0, 1797, 0, 0, 1797, 0, 0, 1797, 0, 0,
	0, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 0, 4281,
	0, 0, 0, 0, 0, 0, 0, 2824, 0, 0,
	0, 0, 73, 0, 1599, 0, 1604, 0, 0, 0,
	0, 0, 0, 0, 0, 4379, 1613, 0, 1618, 74,
	0, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 4268, 0, 0, 78, 0, 0, 0, 4088,
	4088, 1761, 1762, 0, 0, 0, 0, 1797, 0, 0,
	3241, 0, 2657, 2657, 2657, 2657, 0, 263, 263, 1797,
	0, 1797, 0, 0, 1792, 0, 1797, 0, 0, 0,
	0, 1764, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 3674, 0, 1682, 0, 0, 1688, 0, 1761, 1762,
	0, 0, 0, 0, 0, 0, 1496, 1817, 0, 1496,
	3442, 4446, 0, 0, 0, 0, 1763, 0, 4281, 0,
	0, 1792, 0, 0, 0, 874, 1783, 0, 1764, 0,
	0, 0, 0, 0, 4088, 1780, 0, 49, 0, 107,
	0, 0, 4348, 0, 93, 104, 0, 4088, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 3314, 0, 1763, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 697, 1780, 0, 0, 0, 0, 0, 0, 3630,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 4169, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	1786, 1787, 1788, 1789, 4088, 0, 263, 4088, 0, 0,
	1769, 0, 0, 1838, 0, 0, 0, 3381, 0, 1851,
	0, 0, 0, 0, 0, 0, 3629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 1496, 0, 1786, 1787, 1788,
	1789, 0, 0, 0, 0, 0, 0, 1769, 1791, 1793,
	0, 0, 0, 0, 0, 0, 3220, 3221, 0, 3238,
	3239, 3240, 0, 0, 0, 0, 0, 0, 0, 4553,
	0, 0, 0, 0, 1778, 1779, 1468, 0, 0, 1369,
	0, 0, 4301, 0, 0, 263, 0, 1455, 0, 0,
	0, 0, 0, 0, 0, 1791, 1793, 1496, 0, 0,
	1496, 0, 0, 0, 0, 0, 0, 1784, 0, 2824,
	0, 0, 0, 0, 1909, 1909, 1909, 0, 0, 0,
	1455, 1778, 1779, 0, 0, 0, 0, 0, 97, 0,
	263, 3235, 0, 0, 0, 1455, 0, 0, 0, 0,
	1797, 1797, 0, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 3653, 0, 3674, 0, 1455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1307, 1307, 3669, 0, 1496, 0, 0, 0, 0, 1814,
	184, 100, 0, 103, 0, 0, 0, 1307, 0, 0,
	0, 0, 0, 0, 0, 0, 3220, 3221, 1072, 3238,
	3239, 3240, 0, 0, 263, 0, 0, 0, 0, 231,
	0, 0, 1072, 0, 0, 0, 0, 875, 0, 0,
	0, 0, 148, 0, 0, 3226, 1814, 0, 0, 0,
	1142, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4281, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 233, 0, 0,
	0, 1057, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 3235, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 151, 2824, 0, 0, 0, 0, 0,
	3242, 4088, 0, 4088, 0, 0, 1496, 0, 188, 0,
	1785, 0, 1455, 0, 3761, 0, 232, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 1797, 1797, 225,
	2657, 2657, 0, 0, 1797, 0, 0, 0, 226, 0,
	0, 0, 3236, 0, 3241, 3241, 1496, 0, 1797, 1797,
	0, 0, 1496, 0, 0, 0, 0, 0, 1797, 0,
	1591, 0, 0, 0, 0, 0, 1455, 0, 1816, 0,
	0, 0, 1797, 0, 0, 3226, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	3020, 0, 0, 0, 0, 0, 0, 0, 0, 2824,
	0, 0, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766,
	1767, 1768, 1770, 1771, 1814, 3020, 3243, 0, 0, 0,
	2657, 2657, 2657, 2657, 2657, 2657, 2657, 2657, 2657, 2657,
	2657, 2657, 2657, 2657, 2657, 2657, 2657, 2657, 2657, 2657,
	3242, 2657, 3241, 3241, 3241, 3241, 0, 0, 0, 1781,
	1777, 0, 1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770,
	1771, 2628, 2629, 2630, 2631, 2624, 2625, 2626, 2627, 0,
	0, 0, 0, 0, 1233, 0, 0, 1797, 0, 0,
	0, 0, 3236, 0, 0, 0, 0, 0, 3237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1455, 0, 0, 1455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2604, 2605, 2606, 2607, 0, 73, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 74, 2616, 2617, 2618, 2619,
	2612, 2613, 2614, 2615, 2620, 2621, 2622, 2623, 0, 0,
	1455, 78, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1455, 1797, 0,
	0, 2333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 3232, 3233, 3234, 0, 0, 3237, 0,
	3231, 3229, 3230, 3222, 3223, 3224, 3225, 3227, 3228, 0,
	2600, 2601, 2602, 2603, 2608, 2609, 2610, 2611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 0, 2392,
	0, 2396, 0, 0, 0, 107, 0, 0, 2410, 0,
	93, 104, 0, 0, 0, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
	2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453,
	2454, 0, 2460, 0, 2462, 2463, 2464, 2465, 0, 1455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2489, 4041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 3232, 3233, 3234, 2540, 0, 0, 0,
	3231, 3229, 3230, 3222, 3223, 3224, 3225, 3227, 3228, 4055,
	0, 0, 2570, 2573, 2576, 2579, 0, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 3220, 3221, 0, 3238, 3239, 3240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2649, 0, 2661, 2663, 2668,
	0, 0, 0, 0, 0, 1797, 1797, 0, 0, 1797,
	3241, 3241, 1797, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 0, 1095, 109, 0, 0, 0, 3235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1797, 1797, 1797, 1797, 97, 0, 0, 0, 0, 1797,
	0, 1797, 0, 0, 3241, 3241, 3241, 3241, 3241, 3241,
	3241, 3241, 3241, 3241, 3241, 3241, 3241, 3241, 3241, 3241,
	3241, 3241, 3241, 3241, 0, 0, 0, 3241, 0, 0,
	1797, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 184, 100, 0, 103,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 3226, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 875, 0, 1369, 0, 1233, 148, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 0, 4241, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 1455, 0,
	0, 1233, 0, 0, 0, 1233, 0, 0, 1797, 0,
	0, 0, 1233, 0, 0, 0, 0, 0, 778, 151,
	0, 1032, 1455, 0, 0, 0, 4241, 0, 0, 0,
	0, 0, 1052, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 232, 789, 1233, 0, 0, 0, 0, 0,
	3236, 2417, 0, 1761, 1762, 225, 1794, 1795, 1796, 1805,
	1806, 1807, 0, 0, 226, 0, 0, 0, 0, 0,
	1233, 0, 0, 0, 0, 1798, 1792, 0, 1216, 0,
	0, 0, 0, 1764, 0, 0, 187, 0, 0, 0,
	1233, 0, 1811, 0, 0, 0, 0, 1233, 0, 0,
	0, 0, 0, 2952, 2953, 0, 2955, 0, 0, 1817,
	0, 1233, 0, 2417, 0, 0, 1797, 0, 1763, 0,
	0, 0, 1814, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 783, 1780, 0, 0,
	0, 0, 793, 0, 1455, 0, 1455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 788, 0, 0, 0,
	0, 0, 1797, 1797, 0, 1233, 0, 1797, 1797, 0,
	0, 1797, 1797, 0, 1455, 0, 1797, 0, 0, 0,
	1797, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3237, 0, 0, 0,
	2657, 0, 0, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 1786, 1787, 1788, 1789, 0, 0, 0, 0,
	0, 742, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1455, 0, 3078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 785, 0, 0, 1455,
	0, 0, 0, 0, 0, 0, 2657, 0, 0, 0,
	1802, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	1791, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 0, 1809,
	0, 0, 0, 0, 0, 0, 1778, 1779, 0, 1818,
	1819, 0, 0, 0, 0, 792, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 1455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 3232, 3233, 3234, 0, 0, 0, 0, 3231, 3229,
	3230, 3222, 3223, 3224, 3225, 3227, 3228, 0, 0, 0,
	0, 0, 0, 0, 0, 3129, 3130, 0, 0, 0,
	0, 3136, 0, 0, 0, 0, 0, 0, 0, 0,
	1455, 0, 1810, 0, 0, 0, 0, 0, 780, 0,
	3150, 3151, 0, 0, 0, 0, 2540, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1455, 1814, 0, 0, 0, 0, 0, 0, 784, 0,
	0, 0, 0, 0, 1797, 1797, 1797, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 1797, 3241, 2657, 0,
	0, 3160, 0, 0, 1797, 0, 0, 1797, 1233, 0,
	1233, 1455, 741, 0, 0, 0, 0, 3174, 0, 0,
	0, 0, 0, 1790, 0, 1233, 0, 790, 0, 0,
	0, 0, 0, 782, 3186, 0, 1455, 3241, 0, 0,
	0, 0, 0, 1990, 0, 1785, 0, 1233, 0, 0,
	1797, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 0, 1803, 1797, 0, 0, 0, 1072, 0, 0,
	779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1455, 0,
	0, 0, 0, 1816, 0, 0, 0, 0, 786, 0,
	0, 0, 0, 1233, 0, 0, 0, 0, 0, 0,
	0, 0, 743, 0, 1233, 0, 0, 0, 0, 0,
	0, 0, 0, 781, 2668, 2668, 2668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1233, 1909,
	0, 0, 0, 109, 0, 0, 0, 3279, 1455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 3241, 0,
	1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0, 1797,
	3195, 0, 1797, 0, 3196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 109, 0, 109, 0, 0, 0, 0, 1761, 1762,
	0, 1794, 1795, 1796, 1805, 1806, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 0, 0,
	1798, 1792, 1057, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 1057, 1811, 1233, 1233,
	0, 0, 0, 0, 1052, 109, 109, 0, 1233, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	109, 0, 109, 1763, 0, 0, 0, 0, 0, 3400,
	0, 0, 109, 1783, 109, 0, 0, 0, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 1072,
	1072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 109, 0, 0, 0,
	0, 0, 1233, 0, 1233, 0, 1233, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 1786, 1787, 1788,
	1789, 0, 1233, 1233, 0, 0, 0, 1769, 0, 0,
	0, 0, 0, 1233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1233, 0, 1233, 1233, 1233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1072, 0, 0, 0, 1802, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 1791, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1032,
	0, 0, 1808, 0, 1809, 0, 0, 0, 0, 0,
	0, 1778, 1779, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 0, 1843, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 1990, 1233, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 2410, 0, 0, 0, 0, 0, 3627, 3628, 0,
	0, 3631, 0, 0, 0, 3634, 0, 0, 0, 0,
	0, 0, 0, 0, 3638, 0, 0, 0, 0, 0,
	0, 0, 0, 3645, 0, 0, 0, 0, 3279, 0,
	0, 0, 1929, 0, 1932, 0, 109, 0, 1790, 0,
	0, 0, 0, 3658, 0, 0, 0, 1233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 3681, 3682, 0, 3683, 3684, 3685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3691, 0, 0, 1803, 3693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1233,
	0, 0, 0, 0, 0, 0, 1233, 0, 1816, 0,
	0, 3722, 3723, 0, 0, 1233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3734,
	0, 0, 1233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 710, 0, 0, 0,
	1801, 711, 0, 0, 0, 1775, 1776, 1782, 1804, 1781,
	1777, 0, 1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770,
	1771, 0, 0, 0, 0, 2536, 0, 0, 0, 2537,
	0, 0, 0, 0, 0, 0, 1761, 1762, 0, 0,
	712, 0, 3791, 0, 0, 0, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 0, 0, 1233, 1233, 1792,
	0, 0, 3802, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805,
	1806, 1807, 1817, 0, 733, 0, 3830, 0, 0, 1233,
	0, 1763, 0, 0, 0, 1798, 1792, 0, 0, 0,
	0, 1783, 0, 1764, 715, 0, 0, 0, 0, 0,
	1780, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 1222, 716, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 717,
	0, 0, 718, 0, 0, 0, 0, 1780, 0, 0,
	0, 1233, 0, 0, 3135, 0, 0, 0, 0, 742,
	0, 0, 258, 258, 677, 1233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 1787, 1788, 1789, 0,
	0, 0, 0, 0, 732, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1052, 0, 1052, 0,
	0, 0, 0, 0, 1909, 0, 0, 0, 0, 0,
	0, 1233, 0, 3938, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 1787, 1788, 1789, 0, 0, 0, 0,
	0, 0, 1769, 1791, 1793, 0, 0, 0, 0, 0,
	0, 0, 1233, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1233, 0, 1233, 0, 0, 1778,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 1233, 0, 1812, 0, 0, 0, 0, 0, 0,
	1791, 1793, 0, 0, 0, 109, 0, 0, 0, 3984,
	3985, 0, 1784, 0, 0, 3989, 3990, 1808, 0, 1809,
	3993, 3994, 0, 0, 0, 0, 1778, 1779, 3998, 0,
	0, 739, 0, 720, 0, 0, 0, 0, 0, 4002,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4007, 0, 0, 0, 1784,
	0, 740, 0, 721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1032, 0,
	0, 1032, 1032, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1106, 0, 0, 0, 0, 0,
	741, 0, 1810, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 737, 738, 735, 0, 0, 0, 0,
	1799, 730, 0, 0, 723, 0, 0, 0, 0, 0,
	0, 1814, 0, 0, 0, 0, 1790, 2478, 0, 0,
	262, 262, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1052, 1785, 0,
	0, 0, 0, 0, 0, 0, 724, 1837, 731, 806,
	0, 1837, 0, 0, 0, 0, 0, 725, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 726, 0, 0, 0, 806, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	743, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1932,
	0, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 1781, 1777, 0,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 3643, 0, 4236, 4237, 4238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1233, 1233, 0, 0, 0, 0, 0, 0, 2410,
	0, 0, 4247, 4248, 0, 0, 0, 1233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4256, 4259, 0, 0, 0, 1233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1233, 0, 0,
	1233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 1233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4302, 0, 0,
	1233, 1233, 0, 0, 0, 4309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4316, 0,
	0, 1057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1233, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 109, 0, 0,
	109, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1233, 0, 0, 0,
	0, 0, 0, 0, 0, 1279, 0, 1279, 1279, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 1233, 109,
	1233, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1233, 0, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 1233, 0,
	0, 0, 1233, 0, 0, 0, 1366, 0, 0, 710,
	0, 0, 1472, 0, 711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1233, 0, 1233, 0, 0,
	0, 1233, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 712, 0, 0, 0, 0, 4451, 1233,
	0, 4454, 0, 0, 713, 0, 0, 0, 0, 0,
	0, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 714, 0, 0, 1233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 1598, 0, 733, 0, 0,
	0, 0, 0, 1233, 1233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 0, 0, 1057, 1057, 0, 1233, 0, 0, 0,
	0, 0, 0, 4507, 0, 0, 0, 0, 0, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 717, 0, 2478, 718, 1233, 0, 0, 1233,
	0, 1761, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 742, 0, 0, 1837, 0, 2410, 0, 0,
	0, 0, 1709, 0, 1792, 0, 4259, 0, 0, 0,
	0, 1764, 0, 262, 0, 262, 262, 732, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 1817, 0, 0,
	0, 0, 0, 0, 0, 1057, 1763, 0, 0, 0,
	0, 0, 0, 0, 0, 1233, 1783, 0, 0, 0,
	0, 0, 0, 0, 262, 1780, 262, 262, 0, 0,
	262, 262, 1233, 0, 0, 0, 729, 0, 0, 0,
	0, 0, 1990, 1990, 0, 0, 0, 806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4625, 4625, 4625, 0, 0,
	0, 1990, 1990, 0, 0, 0, 0, 0, 0, 3128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4646, 262, 262, 0, 0,
	1786, 1787, 1788, 1789, 1990, 0, 720, 0, 0, 0,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 262, 0, 0, 0, 0, 0, 0,
	0, 1233, 1233, 0, 740, 0, 721, 0, 0, 0,
	0, 0, 0, 0, 1761, 1762, 0, 0, 0, 0,
	0, 0, 4625, 0, 0, 1216, 0, 0, 1791, 1793,
	0, 0, 0, 0, 1233, 0, 0, 1792, 0, 0,
	0, 1216, 0, 741, 1764, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 1778, 1779, 737, 738, 735, 0,
	0, 0, 0, 0, 730, 0, 0, 723, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	1947, 0, 0, 0, 0, 0, 0, 1784, 0, 1783,
	262, 0, 0, 0, 0, 1956, 0, 1472, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 724,
	262, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 0, 1279, 0, 734,
	0, 0, 0, 0, 1472, 0, 0, 0, 0, 4625,
	4779, 0, 0, 743, 0, 0, 0, 0, 4783, 1814,
	0, 0, 0, 0, 728, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 1787, 1788, 1789, 0, 0, 0,
	0, 0, 0, 1769, 0, 0, 0, 0, 109, 109,
	0, 109, 109, 109, 1119, 0, 0, 0, 0, 0,
	0, 0, 1233, 0, 0, 1233, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 1791, 1793, 1785, 109, 109, 0, 109, 109, 109,
	264, 264, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 1779, 1233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 1233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1233, 1233, 1233, 0, 0, 0,
	1784, 1816, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1233, 0, 0,
	0, 0, 0, 1233, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 0, 1229, 0, 0, 0, 262, 0,
	0, 0, 1216, 0, 0, 1052, 0, 1233, 0, 0,
	0, 0, 0, 262, 1931, 262, 0, 0, 1990, 109,
	109, 806, 1814, 0, 0, 0, 0, 0, 806, 0,
	0, 0, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766,
	1767, 1768, 1770, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 2220,
	0, 0, 262, 2227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 2240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2252, 0, 2252, 0, 0, 1785, 0, 0, 2259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1233, 0, 0,
	0, 0, 0, 0, 0, 1233, 0, 0, 0, 1233,
	0, 1233, 0, 0, 0, 0, 0, 0, 1233, 0,
	2227, 0, 0, 2284, 0, 0, 0, 0, 0, 1233,
	1233, 0, 0, 0, 1816, 0, 0, 0, 0, 1233,
	0, 0, 0, 0, 2304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2317, 0, 2319,
	0, 2321, 0, 2323, 1233, 2324, 1233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1233, 0,
	1233, 0, 0, 1233, 0, 0, 0, 2350, 2351, 2352,
	0, 0, 0, 0, 1233, 1781, 1777, 0, 1774, 1772,
	1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 806, 0, 0, 109, 0, 0,
	1233, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1216, 1216, 0, 0, 0,
	1233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1233, 0, 0, 0, 0, 1233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 1233, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 1233, 1233, 1233, 0, 0, 0, 0, 262,
	0, 262, 0, 0, 0, 1233, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 262, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 1233, 0, 1233, 0,
	0, 0, 0, 0, 806, 262, 0, 262, 0, 262,
	0, 262, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 262, 262, 262, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1233, 0, 0, 0, 0, 0, 0,
	1233, 0, 0, 0, 0, 0, 0, 0, 1233, 1233,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2773, 0, 0, 1279, 0, 0, 1216, 1279, 0,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1233, 0, 0, 1233, 2240, 0, 0,
	0, 0, 0, 264, 0, 264, 264, 0, 0, 264,
	0, 1316, 0, 0, 1233, 1233, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 264, 1316, 264, 264, 0, 1316,
	264, 264, 0, 0, 0, 0, 1316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1316, 1233,
	0, 0, 0, 0, 0, 0, 1472, 0, 0, 0,
	0, 0, 1233, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1316, 0, 264, 264, 0, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 1316, 0, 0, 0, 0, 0,
	0, 1316, 264, 264, 0, 109, 0, 0, 0, 262,
	0, 1216, 0, 2227, 0, 1316, 0, 0, 0, 1216,
	0, 0, 2240, 0, 0, 0, 0, 0, 0, 1233,
	0, 0, 1233, 0, 0, 0, 1233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1233, 1233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 1233, 0, 0, 0, 0, 0, 1316,
	0, 0, 0, 3051, 0, 0, 0, 0, 0, 262,
	0, 0, 262, 0, 0, 0, 262, 0, 262, 0,
	0, 0, 3062, 0, 3065, 262, 262, 0, 0, 0,
	264, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3090, 1472,
	3092, 1472, 0, 0, 0, 0, 0, 3098, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 262, 0, 0,
	0, 1279, 0, 0, 0, 0, 0, 0, 0, 3126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 806, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805,
	1806, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 1233, 0, 1233, 0,
	0, 262, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 1817,
	262, 0, 262, 0, 0, 0, 0, 0, 1763, 1316,
	262, 0, 0, 264, 264, 264, 0, 0, 1783, 0,
	0, 264, 0, 0, 0, 0, 0, 1780, 264, 0,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 262, 262, 262, 262,
	0, 0, 264, 0, 0, 262, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1316, 0, 262,
	0, 0, 1786, 1787, 1788, 1789, 0, 262, 1316, 0,
	0, 0, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2478, 0, 1316, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	1791, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1778, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 798,
	0, 0, 0, 1279, 0, 0, 0, 1472, 1472, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 1316, 1316, 264, 0, 0, 0, 0, 0,
	0, 0, 1316, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3419,
	3421, 1814, 0, 2240, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 264,
	0, 264, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 1785, 1316, 0, 1316, 0,
	1316, 0, 0, 0, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1316, 1316, 0, 0,
	0, 1229, 1803, 0, 0, 0, 0, 1316, 264, 0,
	0, 264, 3514, 0, 0, 0, 3518, 0, 0, 1316,
	0, 1316, 1316, 1316, 0, 0, 0, 0, 0, 0,
	0, 1931, 264, 1816, 0, 0, 824, 109, 0, 0,
	0, 0, 0, 109, 264, 264, 0, 264, 0, 264,
	0, 264, 0, 264, 0, 0, 826, 0, 0, 0,
	0, 827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3571, 0, 0,
	0, 262, 0, 0, 0, 262, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 264, 264, 264, 0,
	828, 0, 845, 0, 0, 1801, 0, 0, 0, 0,
	1775, 1776, 1782, 1804, 1781, 1777, 262, 1774, 1772, 1773,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 829, 0, 0,
	0, 0, 830, 0, 3612, 0, 1472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1316, 0,
	0, 0, 0, 0, 854, 0, 0, 262, 262, 0,
	831, 262, 0, 0, 0, 0, 0, 0, 1931, 0,
	0, 0, 3625, 0, 852, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 832,
	0, 0, 833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 856, 0, 0, 0, 0, 742,
	0, 1316, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 806, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	1316, 0, 0, 855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 262, 1316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 836, 262, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 264, 837, 0, 0, 264, 0, 264, 0,
	262, 0, 0, 0, 0, 264, 264, 0, 0, 0,
	0, 1316, 1316, 0, 0, 264, 0, 0, 0, 846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	741, 0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805,
	1806, 1807, 0, 823, 0, 847, 0, 0, 0, 0,
	0, 1314, 0, 1316, 838, 1798, 1792, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 264, 1811, 0, 0, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 1372, 839, 264, 1763, 1372,
	840, 859, 2240, 858, 0, 0, 1314, 841, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 2240,
	0, 842, 0, 0, 264, 1316, 851, 0, 0, 3902,
	0, 0, 860, 0, 857, 0, 0, 0, 1314, 1316,
	743, 0, 0, 0, 2240, 0, 0, 0, 0, 3920,
	0, 0, 0, 264, 0, 1229, 1229, 0, 0, 0,
	0, 0, 0, 0, 1314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 264, 1314, 1316, 0, 0, 0, 0,
	264, 1314, 1786, 1787, 1788, 1789, 0, 0, 0, 0,
	0, 0, 1769, 0, 0, 1314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1316, 3969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1316, 0,
	1316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 264, 0, 1812, 0, 1316, 0, 0, 0, 0,
	1791, 1793, 0, 0, 0, 0, 0, 0, 0, 1314,
	264, 0, 264, 0, 0, 0, 0, 1808, 0, 1809,
	264, 0, 0, 0, 0, 0, 1778, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 264, 264, 264, 264,
	0, 0, 0, 0, 0, 264, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 264,
	262, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 1814, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 4105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 2240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1372,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 798, 0, 0, 0, 0, 0, 0, 798, 0,
	0, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0,
	0, 1229, 0, 0, 3198, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 0, 0, 0, 1316, 1314, 0, 0,
	1111, 0, 0, 0, 0, 0, 0, 0, 1314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1316,
	0, 0, 1372, 0, 0, 0, 0, 0, 1931, 0,
	1931, 0, 0, 0, 1316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4290, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 1316, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 262, 0,
	0, 0, 0, 0, 1316, 1316, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 264, 264, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2240, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 1314, 1314, 0, 0, 0, 264, 264, 0,
	1316, 264, 1372, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 1931, 0, 0, 0,
	0, 0, 1316, 264, 1316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4420, 1472,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1316, 0, 0, 0, 1316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1316,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 1316,
	0, 1316, 0, 0, 0, 1316, 1314, 0, 1314, 0,
	1314, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 1316, 264, 0, 1314, 1314, 0, 0,
	0, 0, 0, 0, 0, 1316, 0, 1314, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 1314,
	0, 1314, 1314, 1314, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 798, 0, 0, 1316, 1316, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4512, 0, 0,
	1316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1316, 0, 264, 1316, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806,
	1807, 0, 0, 0, 0, 0, 0, 0, 1372, 0,
	264, 0, 0, 0, 1798, 1792, 4563, 0, 1931, 1931,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 262, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 1316,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 4602, 0, 0, 0, 0, 1316, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1372, 0, 1931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4666, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 1787, 1788, 1789, 0, 0, 0, 0, 0,
	0, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	1372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1931, 0, 262, 1931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1372, 0, 1316, 1802,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 1791,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1808, 0, 1809, 0,
	0, 0, 0, 0, 0, 1778, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1314, 1314, 0, 0, 0, 0, 1315, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 1372, 0, 0, 0, 0, 264, 0,
	0, 1373, 0, 0, 0, 1373, 0, 0, 0, 0,
	0, 0, 1315, 0, 0, 0, 1316, 0, 0, 1316,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 1790, 262, 1315, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 264, 0, 1785, 1372, 0, 264, 0, 0,
	1315, 0, 0, 1316, 0, 0, 0, 0, 0, 1314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1315, 1803, 0, 0, 0, 0, 0, 1315, 1316, 1316,
	1316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1315, 0, 0, 0, 1316, 0, 0, 0, 0,
	0, 0, 1816, 798, 0, 1314, 0, 0, 0, 0,
	1931, 1316, 1931, 0, 0, 264, 0, 1316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1314, 0, 0, 0,
	0, 1316, 0, 0, 0, 1315, 0, 0, 1314, 0,
	1314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1314, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 1775,
	1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765,
	1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0, 0,
	0, 0, 0, 3197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1316, 0, 1316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1316, 1316, 0, 0, 0, 0, 0,
	0, 0, 0, 1316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796,
	1805, 1806, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 1792, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 264,
	0, 0, 1316, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 1316, 0, 1316, 264, 0, 1316, 264, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 1316, 1763,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1316, 1316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1316, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 1373, 1316, 264, 0, 0,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1315, 0, 0,
	0, 0, 0, 1786, 1787, 1788, 1789, 0, 0, 0,
	0, 0, 0, 1769, 0, 0, 1316, 1316, 1316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 1812, 0, 0, 0, 0, 1316,
	0, 1791, 1793, 1315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1315, 0, 0, 0, 1808, 0,
	1809, 0, 0, 0, 0, 0, 0, 1778, 1779, 0,
	0, 0, 0, 0, 0, 0, 1372, 0, 1373, 0,
	1316, 0, 1316, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 1316, 0, 0, 0, 1372,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 0, 0, 0, 1372, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 1314, 1314, 0, 1316, 0, 0,
	0, 0, 1814, 0, 1316, 264, 0, 0, 0, 0,
	0, 0, 1316, 1316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1315, 1315,
	0, 1314, 0, 0, 0, 0, 0, 0, 1373, 0,
	0, 0, 0, 0, 1790, 0, 0, 1316, 0, 0,
	1316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	1314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 264, 0, 0,
	0, 0, 1314, 1803, 1314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1372, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1314, 0, 1816, 0, 1314, 0, 0, 0,
	0, 0, 1315, 0, 1315, 0, 1315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1314,
	0, 0, 1315, 1315, 0, 0, 0, 0, 0, 1314,
	0, 1314, 0, 1315, 0, 1372, 0, 0, 0, 0,
	0, 0, 798, 0, 0, 1315, 0, 1315, 1315, 1315,
	0, 0, 0, 1314, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 1314, 1801, 0, 0, 0,
	0, 1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772,
	1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 3194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 1314, 1314, 0,
	1316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1316, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	1314, 0, 0, 0, 0, 0, 0, 1316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 1762, 0, 1794,
	1795, 1796, 1805, 1806, 1807, 0, 0, 0, 0, 0,
	1372, 0, 0, 1372, 1373, 0, 0, 0, 1798, 1792,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 264, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 264,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 1372,
	0, 0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796,
	1805, 1806, 1807, 0, 0, 0, 1372, 1373, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 1792, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 264, 0, 1786, 1787, 1788, 1789, 1763,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 1373, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1373, 1802, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 1791, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 0, 1809, 0, 0, 0, 0, 0, 1372, 1778,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 1787, 1788, 1789, 1800, 0, 0,
	0, 0, 0, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 1812, 0, 0, 1315, 1315, 0,
	0, 1791, 1793, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 0,
	1809, 0, 0, 1799, 0, 0, 0, 1778, 1779, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 1373,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1314, 0, 0, 1314,
	0, 0, 0, 1810, 0, 0, 0, 0, 1785, 0,
	0, 1373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 1315, 0, 0, 0, 0,
	0, 0, 1814, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 1315, 0, 0, 0, 0, 0, 0, 1314, 1314,
	1314, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1314, 0, 0, 0, 0,
	0, 0, 1315, 0, 0, 0, 1785, 0, 0, 0,
	0, 1314, 0, 0, 1315, 0, 1315, 1372, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1315, 0, 1803, 0, 0, 0, 0, 1801, 0,
	0, 1372, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0,
	0, 0, 0, 0, 1816, 0, 0, 3193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772,
	1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0,
	0, 4554, 0, 1372, 0, 1372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1314, 1314, 0, 0, 0, 0, 0,
	0, 0, 0, 1372, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805,
	1806, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1314, 0, 0, 1798, 1792, 0, 0, 0,
	0, 0, 1372, 1764, 1314, 0, 0, 1314, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 1372, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 1314, 1314, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1372, 0, 0, 0,
	0, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1314, 1314, 1314, 0,
	0, 0, 1786, 1787, 1788, 1789, 0, 0, 0, 1372,
	0, 0, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1372,
	0, 0, 1373, 0, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	1791, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1373, 0, 1808, 0, 1809,
	1372, 0, 1314, 0, 0, 0, 1778, 1779, 0, 0,
	1373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 1372, 0, 0, 0, 0,
	0, 0, 0, 0, 1373, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1315, 1315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 1372, 0, 0,
	0, 0, 0, 0, 1314, 0, 0, 1315, 0, 0,
	1799, 0, 1314, 1314, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1372, 0, 0,
	1314, 0, 0, 0, 0, 0, 0, 0, 1315, 0,
	1315, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1373, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 1315, 0,
	0, 0, 1315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1803, 0, 0, 1315, 1761, 1762, 0, 1794,
	1795, 1796, 1805, 1806, 1807, 1315, 0, 1315, 0, 0,
	0, 1373, 0, 0, 0, 0, 0, 0, 1798, 1792,
	0, 0, 0, 1816, 0, 0, 1764, 0, 0, 1315,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 1315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 1315, 1315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	1775, 1776, 1782, 1804, 1781, 1777, 1315, 1774, 1772, 1773,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0,
	1314, 0, 0, 0, 3192, 0, 0, 0, 0, 0,
	1314, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1373, 1314, 0, 1373,
	0, 0, 0, 0, 0, 1786, 1787, 1788, 1789, 0,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	1761, 1762, 0, 1794, 1795, 1796, 1805, 1806, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 1792, 0, 0, 0, 0, 0, 0,
	1764, 0, 0, 1802, 0, 0, 1812, 0, 0, 1811,
	0, 0, 0, 1791, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1373, 1817, 0, 0, 0,
	1808, 0, 1809, 0, 0, 1763, 0, 0, 0, 1778,
	1779, 0, 1373, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	1787, 1788, 1789, 1799, 0, 0, 0, 0, 0, 1769,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1373, 0, 0, 1802, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 1791, 1793, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 1808, 0, 1809, 0, 0, 0,
	0, 0, 0, 1778, 1779, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 1761, 1762, 0, 1794,
	1795, 1796, 1805, 1806, 1807, 1803, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 1792,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 1814, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1315, 0, 0, 1315, 0, 0, 1801, 0,
	0, 0, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0,
	1790, 0, 0, 0, 0, 0, 0, 2537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 1786, 1787, 1788, 1789, 1315,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	1761, 1762, 0, 1794, 1795, 1796, 1805, 1806, 1807, 1803,
	0, 0, 0, 0, 1315, 1315, 1315, 0, 0, 0,
	0, 0, 1798, 1792, 0, 0, 0, 0, 0, 0,
	1764, 1315, 0, 1802, 0, 0, 1812, 0, 0, 1811,
	1816, 0, 0, 1791, 1793, 0, 0, 1315, 0, 0,
	0, 0, 0, 1373, 0, 0, 1817, 0, 0, 0,
	1808, 0, 1809, 0, 0, 1763, 0, 0, 0, 1778,
	1779, 0, 0, 0, 0, 1783, 0, 1373, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 1775, 1776, 1782,
	1804, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766, 1767,
	1768, 1770, 1771, 0, 0, 0, 0, 4550, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	1787, 1788, 1789, 1799, 0, 0, 0, 0, 0, 1769,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1373,
	0, 1373, 0, 0, 0, 0, 0, 1802, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 1791, 1793, 1315,
	1315, 0, 0, 0, 0, 0, 1790, 0, 0, 1373,
	0, 0, 0, 0, 1808, 0, 1809, 0, 0, 0,
	0, 0, 0, 1778, 1779, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	1762, 1800, 1794, 1795, 1796, 1805, 1806, 1807, 0, 0,
	0, 0, 0, 0, 0, 1803, 1784, 0, 1315, 0,
	0, 1798, 1792, 0, 0, 0, 0, 0, 1373, 1764,
	1315, 0, 0, 1315, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 1373, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 1810,
	0, 0, 0, 0, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 1799, 0, 0,
	1315, 1315, 0, 1780, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1373, 0, 0, 0, 0, 1315, 1801, 0,
	0, 0, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0,
	1790, 0, 0, 4466, 0, 0, 0, 0, 0, 0,
	0, 0, 1315, 1315, 1315, 0, 0, 0, 1786, 1787,
	1788, 1789, 1785, 0, 0, 1373, 0, 0, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1803,
	0, 0, 0, 0, 0, 1373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 1791, 1793, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 0, 1809, 1373, 0, 1315, 0,
	0, 0, 1778, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 1373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 1775, 1776, 1782,
	1804, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766, 1767,
	1768, 1770, 1771, 0, 0, 0, 0, 4429, 1810, 0,
	0, 0, 0, 1373, 0, 0, 0, 0, 0, 0,
	1315, 0, 0, 0, 0, 0, 1799, 0, 1315, 1315,
	0, 0, 0, 0, 0, 0, 0, 1814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1373, 0, 0, 1315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 1775, 1776, 1782, 1804,
	1781, 1777, 0, 1774, 1772, 1773, 1765, 1766, 1767, 1768,
	1770, 1771, 0, 1370, 3152, 0, 1315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1315, 1315, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 1375, 279, 280,
	1376, 1377, 1378, 1315, 1379, 623, 1380, 1381, 1382, 1383,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 1384, 628, 291, 292,
	293, 294, 295, 296, 1385, 1386, 0, 297, 629, 630,
	631, 1387, 298, 299, 632, 1388, 1317, 1389, 300, 301,
	302, 303, 304, 305, 306, 0, 1390, 308, 309, 310,
	307, 311, 1391, 312, 0, 313, 314, 315, 316, 317,
	318, 1392, 319, 320, 321, 1174, 322, 323, 324, 1393,
	1394, 1396, 1395, 1397, 1398, 1399, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 1400, 334, 331, 332, 1401,
	335, 333, 336, 1402, 337, 338, 339, 1403, 1404, 340,
	341, 342, 1405, 343, 344, 1406, 345, 346, 347, 1407,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 1408, 269, 1409, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 1410, 366, 367, 1411, 1412, 1175, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 1413, 380, 641, 1414, 642, 381, 1415, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 1177, 387, 388,
	1416, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 1417, 1176, 397, 646, 647, 1418,
	648, 1419, 399, 400, 1178, 649, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 1420, 411, 413, 412, 1421, 414, 650, 1181, 415,
	416, 1182, 1422, 417, 0, 0, 0, 418, 419, 422,
	1423, 1424, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 1425, 271, 1185,
	462, 463, 1426, 651, 464, 652, 466, 467, 1427, 0,
	468, 0, 1428, 1429, 470, 471, 472, 1430, 1431, 473,
	474, 653, 1186, 475, 1187, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 1432, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 1433, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 1434,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	1435, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 1436, 549, 550, 548, 551,
	552, 553, 1437, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	1438, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 1439, 581, 582,
	0, 578, 569, 1440, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 1441, 591, 664, 665, 666, 667, 1442,
	600, 1443, 592, 593, 594, 668, 595, 669, 1444, 596,
	597, 598, 599, 0, 601, 602, 1445, 1446, 603, 604,
	605, 607, 608, 606, 609, 1447, 610, 1448, 0, 611,
	612, 613, 670, 671, 672, 1449, 615, 614, 616, 673,
	1450, 617, 1451, 1452, 1453, 1454, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1370, 0, 0, 0,
	0, 0, 0, 0, 2703, 0, 0, 0, 0, 0,
	0, 0, 2704, 272, 274, 273, 275, 276, 277, 278,
	1375, 279, 280, 1376, 1377, 1378, 0, 1379, 623, 1380,
	1381, 1382, 1383, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 1384,
	628, 291, 292, 293, 294, 295, 296, 1385, 1386, 0,
	297, 629, 630, 631, 1387, 298, 299, 632, 1388, 1317,
	1389, 300, 301, 302, 303, 304, 305, 306, 0, 1390,
	308, 309, 310, 307, 311, 1391, 312, 0, 313, 314,
	315, 316, 317, 318, 1392, 319, 320, 321, 1174, 322,
	323, 324, 1393, 1394, 1396, 1395, 1397, 1398, 1399, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 1400, 334,
	331, 332, 1401, 335, 333, 336, 1402, 337, 338, 339,
	1403, 1404, 340, 341, 342, 1405, 343, 344, 1406, 345,
	346, 347, 1407, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 1408,
	269, 1409, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 1410, 366, 367, 1411, 1412, 1175,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 1413, 380, 641, 1414, 642, 381,
	1415, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	1177, 387, 388, 1416, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 1417, 1176, 397,
	646, 647, 1418, 648, 1419, 399, 400, 1178, 649, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 1420, 411, 413, 412, 1421, 414,
	650, 1181, 415, 416, 1182, 1422, 417, 0, 0, 0,
	418, 419, 422, 1423, 1424, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	1425, 271, 1185, 462, 463, 1426, 651, 464, 652, 466,
	467, 1427, 0, 468, 0, 1428, 1429, 470, 471, 472,
	1430, 1431, 473, 474, 653, 1186, 475, 1187, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	1432, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 1433, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 1434, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 1435, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 1436, 549,
	550, 548, 551, 552, 553, 1437, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 1438, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	1439, 581, 582, 0, 578, 569, 1440, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 1441, 591, 664, 665,
	666, 667, 1442, 600, 1443, 592, 593, 594, 668, 595,
	669, 1444, 596, 597, 598, 599, 0, 601, 602, 1445,
	1446, 603, 604, 605, 607, 608, 606, 609, 1447, 610,
	1448, 0, 611, 612, 613, 670, 671, 672, 1449, 615,
	614, 616, 673, 1450, 617, 1451, 1452, 1453, 1454, 618,
	619, 674, 620, 621, 622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1370, 0, 0,
	0, 0, 3652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3654, 272, 274, 273, 275, 276, 277,
	278, 1375, 279, 280, 1376, 1377, 1378, 0, 1379, 623,
	1380, 1381, 1382, 1383, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	1384, 628, 291, 292, 293, 294, 295, 296, 1385, 1386,
	0, 297, 629, 630, 631, 1387, 298, 299, 632, 1388,
	1317, 1389, 300, 301, 302, 303, 304, 305, 306, 0,
	1390, 308, 309, 310, 307, 311, 1391, 312, 0, 313,
	314, 315, 316, 317, 318, 1392, 319, 320, 321, 1174,
	322, 323, 324, 1393, 1394, 1396, 1395, 1397, 1398, 1399,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 1400,
	334, 331, 332, 1401, 335, 333, 336, 1402, 337, 338,
	339, 1403, 1404, 340, 341, 342, 1405, 343, 344, 1406,
	345, 346, 347, 1407, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	1408, 269, 1409, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 1410, 366, 367, 1411, 1412,
	1175, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 1413, 380, 641, 1414, 642,
	381, 1415, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 1177, 387, 388, 1416, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 1417, 1176,
	397, 646, 647, 1418, 648, 1419, 399, 400, 1178, 649,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 1420, 411, 413, 412, 1421,
	414, 650, 1181, 415, 416, 1182, 1422, 417, 0, 0,
	0, 418, 419, 422, 1423, 1424, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 1425, 271, 1185, 462, 463, 1426, 651, 464, 652,
	466, 467, 1427, 0, 468, 0, 1428, 1429, 470, 471,
	472, 1430, 1431, 473, 474, 653, 1186, 475, 1187, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 1432, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 1433, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 1434, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 1435, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 1436,
	549, 550, 548, 551, 552, 553, 1437, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 1438, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 1439, 581, 582, 0, 578, 569, 1440, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 1441, 591, 664,
	665, 666, 667, 1442, 600, 1443, 592, 593, 594, 668,
	595, 669, 1444, 596, 597, 598, 599, 0, 601, 602,
	1445, 1446, 603, 604, 605, 607, 608, 606, 609, 1447,
	610, 1448, 0, 611, 612, 613, 670, 671, 672, 1449,
	615, 614, 616, 673, 1450, 617, 1451, 1452, 1453, 1454,
	618, 619, 674, 620, 621, 622, 0, 0, 0, 0,
	0, 0, 1370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4040, 272,
	274, 273, 275, 276, 277, 278, 1375, 279, 280, 1376,
	1377, 1378, 0, 1379, 623, 1380, 1381, 1382, 1383, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 1384, 628, 291, 292, 293,
	294, 295, 296, 1385, 1386, 0, 297, 629, 630, 631,
	1387, 298, 299, 632, 1388, 1317, 1389, 300, 301, 302,
	303, 304, 305, 306, 0, 1390, 308, 309, 310, 307,
	311, 1391, 312, 0, 313, 314, 315, 316, 317, 318,
	1392, 319, 320, 321, 1174, 322, 323, 324, 1393, 1394,
	1396, 1395, 1397, 1398, 1399, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 1400, 334, 331, 332, 1401, 335,
	333, 336, 1402, 337, 338, 339, 1403, 1404, 340, 341,
	342, 1405, 343, 344, 1406, 345, 346, 347, 1407, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 1408, 269, 1409, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	1410, 366, 367, 1411, 1412, 1175, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1413, 380, 641, 1414, 642, 381, 1415, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 1177, 387, 388, 1416,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 1417, 1176, 397, 646, 647, 1418, 648,
	1419, 399, 400, 1178, 649, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	1420, 411, 413, 412, 1421, 414, 650, 1181, 415, 416,
	1182, 1422, 417, 0, 0, 0, 418, 419, 422, 1423,
	1424, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1425, 271, 1185, 462,
	463, 1426, 651, 464, 652, 466, 467, 1427, 0, 468,
	0, 1428, 1429, 470, 471, 472, 1430, 1431, 473, 474,
	653, 1186, 475, 1187, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 1432, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 1433, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 1434, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 1435,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 1436, 549, 550, 548, 551, 552,
	553, 1437, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 1438,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 1439, 581, 582, 0,
	578, 569, 1440, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 1441, 591, 664, 665, 666, 667, 1442, 600,
	1443, 592, 593, 594, 668, 595, 669, 1444, 596, 597,
	598, 599, 0, 601, 602, 1445, 1446, 603, 604, 605,
	607, 608, 606, 609, 1447, 610, 1448, 0, 611, 612,
	613, 670, 671, 672, 1449, 615, 614, 616, 673, 1450,
	617, 1451, 1452, 1453, 1454, 618, 619, 674, 620, 621,
	622, 0, 1370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4242, 272,
	274, 273, 275, 276, 277, 278, 1375, 279, 280, 1376,
	1377, 1378, 0, 1379, 623, 1380, 1381, 1382, 1383, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 1384, 628, 291, 292, 293,
	294, 295, 296, 1385, 1386, 0, 297, 629, 630, 631,
	1387, 298, 299, 632, 1388, 1317, 1389, 300, 301, 302,
	303, 304, 305, 306, 0, 1390, 308, 309, 310, 307,
	311, 1391, 312, 0, 313, 314, 315, 316, 317, 318,
	1392, 319, 320, 321, 1174, 322, 323, 324, 1393, 1394,
	1396, 1395, 1397, 1398, 1399, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 1400, 334, 331, 332, 1401, 335,
	333, 336, 1402, 337, 338, 339, 1403, 1404, 340, 341,
	342, 1405, 343, 344, 1406, 345, 346, 347, 1407, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 1408, 269, 1409, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	1410, 366, 367, 1411, 1412, 1175, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1413, 380, 641, 1414, 642, 381, 1415, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 1177, 387, 388, 1416,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 1417, 1176, 397, 646, 647, 1418, 648,
	1419, 399, 400, 1178, 649, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	1420, 411, 413, 412, 1421, 414, 650, 1181, 415, 416,
	1182, 1422, 417, 0, 0, 0, 418, 419, 422, 1423,
	1424, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1425, 271, 1185, 462,
	463, 1426, 651, 464, 652, 466, 467, 1427, 0, 468,
	0, 1428, 1429, 470, 471, 472, 1430, 1431, 473, 474,
	653, 1186, 475, 1187, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 1432, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 1433, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 1434, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 1435,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 1436, 549, 550, 548, 551, 552,
	553, 1437, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 1438,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 1439, 581, 582, 0,
	578, 569, 1440, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 1441, 591, 664, 665, 666, 667, 1442, 600,
	1443, 592, 593, 594, 668, 595, 669, 1444, 596, 597,
	598, 599, 0, 601, 602, 1445, 1446, 603, 604, 605,
	607, 608, 606, 609, 1447, 610, 1448, 0, 611, 612,
	613, 670, 671, 672, 1449, 615, 614, 616, 673, 1450,
	617, 1451, 1452, 1453, 1454, 618, 619, 674, 620, 621,
	622, 0, 1370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4114, 272,
	274, 273, 275, 276, 277, 278, 1375, 279, 280, 1376,
	1377, 1378, 0, 1379, 623, 1380, 1381, 1382, 1383, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 1384, 628, 291, 292, 293,
	294, 295, 296, 1385, 1386, 0, 297, 629, 630, 631,
	1387, 298, 299, 632, 1388, 1317, 1389, 300, 301, 302,
	303, 304, 305, 306, 0, 1390, 308, 309, 310, 307,
	311, 1391, 312, 0, 313, 314, 315, 316, 317, 318,
	1392, 319, 320, 321, 1174, 322, 323, 324, 1393, 1394,
	1396, 1395, 1397, 1398, 1399, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 1400, 334, 331, 332, 1401, 335,
	333, 336, 1402, 337, 338, 339, 1403, 1404, 340, 341,
	342, 1405, 343, 344, 1406, 345, 346, 347, 1407, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 1408, 269, 1409, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	1410, 366, 367, 1411, 1412, 1175, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1413, 380, 641, 1414, 642, 381, 1415, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 1177, 387, 388, 1416,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 1417, 1176, 397, 646, 647, 1418, 648,
	1419, 399, 400, 1178, 649, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	1420, 411, 413, 412, 1421, 414, 650, 1181, 415, 416,
	1182, 1422, 417, 0, 0, 0, 418, 419, 422, 1423,
	1424, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1425, 271, 1185, 462,
	463, 1426, 651, 464, 652, 466, 467, 1427, 0, 468,
	0, 1428, 1429, 470, 471, 472, 1430, 1431, 473, 474,
	653, 1186, 475, 1187, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 1432, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 1433, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 1434, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 1435,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 1436, 549, 550, 548, 551, 552,
	553, 1437, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 1438,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 1439, 581, 582, 0,
	578, 569, 1440, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 1441, 591, 664, 665, 666, 667, 1442, 600,
	1443, 592, 593, 594, 668, 595, 669, 1444, 596, 597,
	598, 599, 0, 601, 602, 1445, 1446, 603, 604, 605,
	607, 608, 606, 609, 1447, 610, 1448, 0, 611, 612,
	613, 670, 671, 672, 1449, 615, 614, 616, 673, 1450,
	617, 1451, 1452, 1453, 1454, 618, 619, 674, 620, 621,
	622, 0, 1370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3970, 272,
	274, 273, 275, 276, 277, 278, 1375, 279, 280, 1376,
	1377, 1378, 0, 1379, 623, 1380, 1381, 1382, 1383, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 1384, 628, 291, 292, 293,
	294, 295, 296, 1385, 1386, 0, 297, 629, 630, 631,
	1387, 298, 299, 632, 1388, 1317, 1389, 300, 301, 302,
	303, 304, 305, 306, 0, 1390, 308, 309, 310, 307,
	311, 1391, 312, 0, 313, 314, 315, 316, 317, 318,
	1392, 319, 320, 321, 1174, 322, 323, 324, 1393, 1394,
	1396, 1395, 1397, 1398, 1399, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 1400, 334, 331, 332, 1401, 335,
	333, 336, 1402, 337, 338, 339, 1403, 1404, 340, 341,
	342, 1405, 343, 344, 1406, 345, 346, 347, 1407, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 1408, 269, 1409, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	1410, 366, 367, 1411, 1412, 1175, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1413, 380, 641, 1414, 642, 381, 1415, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 1177, 387, 388, 1416,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 1417, 1176, 397, 646, 647, 1418, 648,
	1419, 399, 400, 1178, 649, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	1420, 411, 413, 412, 1421, 414, 650, 1181, 415, 416,
	1182, 1422, 417, 0, 0, 0, 418, 419, 422, 1423,
	1424, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1425, 271, 1185, 462,
	463, 1426, 651, 464, 652, 466, 467, 1427, 0, 468,
	0, 1428, 1429, 470, 471, 472, 1430, 1431, 473, 474,
	653, 1186, 475, 1187, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 1432, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 1433, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 1434, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 1435,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 1436, 549, 550, 548, 551, 552,
	553, 1437, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 1438,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 1439, 581, 582, 0,
	578, 569, 1440, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 1441, 591, 664, 665, 666, 667, 1442, 600,
	1443, 592, 593, 594, 668, 595, 669, 1444, 596, 597,
	598, 599, 0, 601, 602, 1445, 1446, 603, 604, 605,
	607, 608, 606, 609, 1447, 610, 1448, 0, 611, 612,
	613, 670, 671, 672, 1449, 615, 614, 616, 673, 1450,
	617, 1451, 1452, 1453, 1454, 618, 619, 674, 620, 621,
	622, 0, 1370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3670, 272,
	274, 273, 275, 276, 277, 278, 1375, 279, 280, 1376,
	1377, 1378, 0, 1379, 623, 1380, 1381, 1382, 1383, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 1384, 628, 291, 292, 293,
	294, 295, 296, 1385, 1386, 0, 297, 629, 630, 631,
	1387, 298, 299, 632, 1388, 1317, 1389, 300, 301, 302,
	303, 304, 305, 306, 0, 1390, 308, 309, 310, 307,
	311, 1391, 312, 0, 313, 314, 315, 316, 317, 318,
	1392, 319, 320, 321, 1174, 322, 323, 324, 1393, 1394,
	1396, 1395, 1397, 1398, 1399, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 1400, 334, 331, 332, 1401, 335,
	333, 336, 1402, 337, 338, 339, 1403, 1404, 340, 341,
	342, 1405, 343, 344, 1406, 345, 346, 347, 1407, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 1408, 269, 1409, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	1410, 366, 367, 1411, 1412, 1175, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1413, 380, 641, 1414, 642, 381, 1415, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 1177, 387, 388, 1416,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 1417, 1176, 397, 646, 647, 1418, 648,
	1419, 399, 400, 1178, 649, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	1420, 411, 413, 412, 1421, 414, 650, 1181, 415, 416,
	1182, 1422, 417, 0, 0, 0, 418, 419, 422, 1423,
	1424, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1425, 271, 1185, 462,
	463, 1426, 651, 464, 652, 466, 467, 1427, 0, 468,
	0, 1428, 1429, 470, 471, 472, 1430, 1431, 473, 474,
	653, 1186, 475, 1187, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 1432, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 1433, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 1434, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 1435,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 1436, 549, 550, 548, 551, 552,
	553, 1437, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 1438,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 1439, 581, 582, 0,
	578, 569, 1440, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 1441, 591, 664, 665, 666, 667, 1442, 600,
	1443, 592, 593, 594, 668, 595, 669, 1444, 596, 597,
	598, 599, 0, 601, 602, 1445, 1446, 603, 604, 605,
	607, 608, 606, 609, 1447, 610, 1448, 0, 611, 612,
	613, 670, 671, 672, 1449, 615, 614, 616, 673, 1450,
	617, 1451, 1452, 1453, 1454, 618, 619, 674, 620, 621,
	622, 0, 1370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3499, 272,
	274, 273, 275, 276, 277, 278, 1375, 279, 280, 1376,
	1377, 1378, 0, 1379, 623, 1380, 1381, 1382, 1383, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 1384, 628, 291, 292, 293,
	294, 295, 296, 1385, 1386, 0, 297, 629, 630, 631,
	1387, 298, 299, 632, 1388, 1317, 1389, 300, 301, 302,
	303, 304, 305, 306, 0, 1390, 308, 309, 310, 307,
	311, 1391, 312, 0, 313, 314, 315, 316, 317, 318,
	1392, 319, 320, 321, 1174, 322, 323, 324, 1393, 1394,
	1396, 1395, 1397, 1398, 1399, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 1400, 334, 331, 332, 1401, 335,
	333, 336, 1402, 337, 338, 339, 1403, 1404, 340, 341,
	342, 1405, 343, 344, 1406, 345, 346, 347, 1407, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 1408, 269, 1409, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	1410, 366, 367, 1411, 1412, 1175, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1413, 380, 641, 1414, 642, 381, 1415, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 1177, 387, 388, 1416,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 1417, 1176, 397, 646, 647, 1418, 648,
	1419, 399, 400, 1178, 649, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	1420, 411, 413, 412, 1421, 414, 650, 1181, 415, 416,
	1182, 1422, 417, 0, 0, 0, 418, 419, 422, 1423,
	1424, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1425, 271, 1185, 462,
	463, 1426, 651, 464, 652, 466, 467, 1427, 0, 468,
	0, 1428, 1429, 470, 471, 472, 1430, 1431, 473, 474,
	653, 1186, 475, 1187, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 1432, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 1433, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 1434, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 1435,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 1436, 549, 550, 548, 551, 552,
	553, 1437, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 1438,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 1439, 581, 582, 0,
	578, 569, 1440, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 1441, 591, 664, 665, 666, 667, 1442, 600,
	1443, 592, 593, 594, 668, 595, 669, 1444, 596, 597,
	598, 599, 0, 601, 602, 1445, 1446, 603, 604, 605,
	607, 608, 606, 609, 1447, 610, 1448, 0, 611, 612,
	613, 670, 671, 672, 1449, 615, 614, 616, 673, 1450,
	617, 1451, 1452, 1453, 1454, 618, 619, 674, 620, 621,
	622, 0, 1370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2560, 272,
	274, 273, 275, 276, 277, 278, 1375, 279, 280, 1376,
	1377, 1378, 0, 1379, 623, 1380, 1381, 1382, 1383, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 1384, 628, 291, 292, 293,
	294, 295, 296, 1385, 1386, 0, 297, 629, 630, 631,
	1387, 298, 299, 632, 1388, 1317, 1389, 300, 301, 302,
	303, 304, 305, 306, 0, 1390, 308, 309, 310, 307,
	311, 1391, 312, 0, 313, 314, 315, 316, 317, 318,
	1392, 319, 320, 321, 1174, 322, 323, 324, 1393, 1394,
	1396, 1395, 1397, 1398, 1399, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 1400, 334, 331, 332, 1401, 335,
	333, 336, 1402, 337, 338, 339, 1403, 1404, 340, 341,
	342, 1405, 343, 344, 1406, 345, 346, 347, 1407, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 1408, 269, 1409, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	1410, 366, 367, 1411, 1412, 1175, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	1413, 380, 641, 1414, 642, 381, 1415, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 1177, 387, 388, 1416,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 1417, 1176, 397, 646, 647, 1418, 648,
	1419, 399, 400, 1178, 649, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	1420, 411, 413, 412, 1421, 414, 650, 1181, 415, 416,
	1182, 1422, 417, 0, 0, 0, 418, 419, 422, 1423,
	1424, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1425, 271, 1185, 462,
	463, 1426, 651, 464, 652, 466, 467, 1427, 0, 468,
	0, 1428, 1429, 470, 471, 472, 1430, 1431, 473, 474,
	653, 1186, 475, 1187, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 1432, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 1433, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 1434, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 1435,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 1436, 549, 550, 548, 551, 552,
	553, 1437, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 1438,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 1439, 581, 582, 0,
	578, 569, 1440, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 1441, 591, 664, 665, 666, 667, 1442, 600,
	1443, 592, 593, 594, 668, 595, 669, 1444, 596, 597,
	598, 599, 0, 601, 602, 1445, 1446, 603, 604, 605,
	607, 608, 606, 609, 1447, 610, 1448, 0, 611, 612,
	613, 670, 671, 672, 1449, 615, 614, 616, 673, 1450,
	617, 1451, 1452, 1453, 1454, 618, 619, 674, 620, 621,
	622, 1466, 0, 1370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2201, 0,
	272, 274, 273, 275, 276, 277, 278, 1375, 279, 280,
	1376, 1377, 1378, 0, 1379, 623, 1380, 1381, 1382, 1383,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 1384, 628, 291, 292,
	293, 294, 295, 296, 1385, 1386, 0, 297, 629, 630,
	631, 1387, 298, 299, 632, 1388, 1317, 1389, 300, 301,
	302, 303, 304, 305, 306, 0, 1390, 308, 309, 310,
	307, 311, 1391, 312, 0, 313, 314, 315, 316, 317,
	318, 1392, 319, 320, 321, 1174, 322, 323, 324, 1393,
	1394, 1396, 1395, 1397, 1398, 1399, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 1400, 334, 331, 332, 1401,
	335, 333, 336, 1402, 337, 338, 339, 1403, 1404, 340,
	341, 342, 1405, 343, 344, 1406, 345, 346, 347, 1407,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 1408, 269, 1409, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 1410, 366, 367, 1411, 1412, 1175, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 1413, 380, 641, 1414, 642, 381, 1415, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 1177, 387, 388,
	1416, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 1417, 1176, 397, 646, 647, 1418,
	648, 1419, 399, 400, 1178, 649, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 1420, 411, 413, 412, 1421, 414, 650, 1181, 415,
	416, 1182, 1422, 417, 0, 0, 0, 418, 419, 422,
	1423, 1424, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 1425, 271, 1185,
	462, 463, 1426, 651, 464, 652, 466, 467, 1427, 0,
	468, 0, 1428, 1429, 470, 471, 472, 1430, 1431, 473,
	474, 653, 1186, 475, 1187, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 1432, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 1433, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 1434,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	1435, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 1436, 549, 550, 548, 551,
	552, 553, 1437, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	1438, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 1439, 581, 582,
	0, 578, 569, 1440, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 1441, 591, 664, 665, 666, 667, 1442,
	600, 1443, 592, 593, 594, 668, 595, 669, 1444, 596,
	597, 598, 599, 0, 601, 602, 1445, 1446, 603, 604,
	605, 607, 608, 606, 609, 1447, 610, 1448, 0, 611,
	612, 613, 670, 671, 672, 1449, 615, 614, 616, 673,
	1450, 617, 1451, 1452, 1453, 1454, 618, 619, 674, 620,
	621, 622, 1367, 0, 1370, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 1375, 279,
	280, 1376, 1377, 1378, 0, 1379, 623, 1380, 1381, 1382,
	1383, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 1384, 628, 291,
	292, 293, 294, 295, 296, 1385, 1386, 0, 297, 629,
	630, 631, 1387, 298, 299, 632, 1388, 1317, 1389, 300,
	301, 302, 303, 304, 305, 306, 0, 1390, 308, 309,
	310, 307, 311, 1391, 312, 0, 313, 314, 315, 316,
	317, 318, 1392, 319, 320, 321, 1174, 322, 323, 324,
	1393, 1394, 1396, 1395, 1397, 1398, 1399, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 1400, 334, 331, 332,
	1401, 335, 333, 336, 1402, 337, 338, 339, 1403, 1404,
	340, 341, 342, 1405, 343, 344, 1406, 345, 346, 347,
	1407, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 1408, 269, 1409,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 1410, 366, 367, 1411, 1412, 1175, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 1413, 380, 641, 1414, 642, 381, 1415, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 1177, 387,
	388, 1416, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 1417, 1176, 397, 646, 647,
	1418, 648, 1419, 399, 400, 1178, 649, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 1420, 411, 413, 412, 1421, 414, 650, 1181,
	415, 416, 1182, 1422, 417, 0, 0, 0, 418, 419,
	422, 1423, 1424, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 1425, 271,
	1185, 462, 463, 1426, 651, 464, 652, 466, 467, 1427,
	0, 468, 0, 1428, 1429, 470, 471, 472, 1430, 1431,
	473, 474, 653, 1186, 475, 1187, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 1432, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 1433, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	1434, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 1435, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 1436, 549, 550, 548,
	551, 552, 553, 1437, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 1438, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 1439, 581,
	582, 0, 578, 569, 1440, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 1441, 591, 664, 665, 666, 667,
	1442, 600, 1443, 592, 593, 594, 668, 595, 669, 1444,
	596, 597, 598, 599, 0, 601, 602, 1445, 1446, 603,
	604, 605, 607, 608, 606, 609, 1447, 610, 1448, 0,
	611, 612, 613, 670, 671, 672, 1449, 615, 614, 616,
	673, 1450, 617, 1451, 1452, 1453, 1454, 618, 619, 674,
	620, 621, 622, 1370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 1375, 279, 280,
	1376, 1377, 1378, 0, 1379, 623, 1380, 1381, 1382, 1383,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 1384, 628, 291, 292,
	293, 294, 295, 296, 1385, 1386, 0, 297, 629, 630,
	631, 1387, 298, 299, 632, 1388, 1317, 1389, 300, 301,
	302, 303, 304, 305, 306, 0, 1390, 308, 309, 310,
	307, 311, 1391, 312, 0, 313, 314, 315, 316, 317,
	318, 1392, 319, 320, 321, 1174, 322, 323, 324, 1393,
	1394, 1396, 1395, 1397, 1398, 1399, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 1400, 334, 331, 332, 1401,
	335, 333, 336, 1402, 337, 338, 339, 1403, 1404, 340,
	341, 342, 1405, 343, 344, 1406, 345, 346, 347, 1407,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 1408, 269, 1409, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 1410, 366, 367, 1411, 1412, 1175, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 1413, 380, 641, 1414, 642, 381, 1415, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 1177, 387, 388,
	1416, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 1417, 1176, 397, 646, 647, 1418,
	648, 1419, 399, 400, 1178, 649, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 1420, 411, 413, 412, 1421, 414, 650, 1181, 415,
	416, 1182, 1422, 417, 0, 0, 0, 418, 419, 422,
	1423, 1424, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 1425, 271, 1185,
	462, 463, 1426, 651, 464, 652, 466, 467, 1427, 0,
	468, 0, 1428, 1429, 470, 471, 472, 1430, 1431, 473,
	474, 653, 1186, 475, 1187, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 1432, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 1433, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 1434,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	1435, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 1436, 549, 550, 548, 551,
	552, 553, 1437, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	1438, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 1439, 581, 582,
	0, 578, 569, 1440, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 1441, 591, 664, 665, 666, 667, 1442,
	600, 1443, 592, 593, 594, 668, 595, 669, 1444, 596,
	597, 598, 599, 0, 601, 602, 1445, 1446, 603, 604,
	605, 607, 608, 606, 609, 1447, 610, 1448, 0, 611,
	612, 613, 670, 671, 672, 1449, 615, 614, 616, 673,
	1450, 617, 1451, 1452, 1453, 1454, 618, 619, 674, 620,
	621, 622, 2535, 0, 1109, 1081, 1082, 1083, 1079, 1080,
	1092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 2532, 279,
	280, 0, 0, 0, 0, 0, 1133, 1097, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 1146, 0, 289, 1153, 290, 1152, 0, 1163, 291,
	292, 293, 294, 295, 296, 1099, 1132, 1064, 297, 1193,
	1194, 631, 0, 298, 299, 1139, 0, 1120, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327,
	328, 329, 1156, 330, 1150, 1149, 1069, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 2533, 0,
	340, 1141, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 1075, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 1164, 1165, 361, 1088, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 1148, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 1161, 1162, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 1171, 0, 1098, 381, 0, 382,
	383, 384, 385, 386, 1134, 1135, 1138, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 1176, 397, 1143, 1144,
	0, 1104, 0, 399, 400, 1178, 1136, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 1172, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 1127, 1126, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 1066, 271,
	1185, 462, 463, 1089, 1137, 464, 1151, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 1166, 476, 477, 1076,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 1167,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 1147, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 1077, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 1130, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 1145, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	1192, 572, 573, 574, 575, 1168, 579, 580, 0, 581,
	582, 1063, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 1157, 1158, 1159, 1160,
	0, 600, 0, 592, 593, 594, 1169, 595, 1170, 1087,
	596, 597, 598, 599, 0, 601, 602, 0, 1070, 603,
	604, 605, 607, 608, 606, 609, 1131, 610, 0, 0,
	611, 612, 613, 670, 1154, 1191, 2531, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 1067, 0, 0, 0, 0, 0, 0,
	0, 1062, 0, 0, 0, 0, 0, 0, 1060, 1061,
	2534, 0, 0, 0, 0, 0, 0, 1093, 2530, 0,
	1053, 1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 1133, 1097, 0, 0, 0, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 1146,
	0, 289, 1153, 290, 1152, 0, 1163, 291, 292, 293,
	294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631,
	0, 298, 299, 1139, 0, 1120, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 1174, 322, 323, 324, 1123, 1121,
	1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328, 329,
	1156, 330, 1150, 1149, 1069, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 1141,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 1075, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 1164, 1165, 361, 1088, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 1148, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 1175, 368, 369, 370, 1161,
	1162, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 1171, 0, 1098, 381, 0, 382, 383, 384,
	385, 386, 1134, 1135, 1138, 465, 1177, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 1176, 397, 1143, 1144, 0, 1104,
	0, 399, 400, 1178, 1136, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 1172, 1181, 415, 416,
	1182, 0, 417, 0, 0, 0, 418, 419, 422, 1127,
	1126, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1066, 271, 1185, 462,
	463, 1089, 1137, 464, 1151, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 1186, 475, 1187, 1166, 476, 477, 1076, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 1167, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 1147, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 1077,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 231, 549, 550, 548, 551, 552,
	553, 1130, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 1145, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 1192, 572,
	573, 574, 575, 1168, 579, 580, 0, 581, 582, 1063,
	578, 569, 233, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 1157, 1158, 1159, 1160, 0, 600,
	0, 592, 593, 594, 1169, 595, 1170, 1087, 596, 597,
	598, 599, 0, 601, 602, 0, 1070, 603, 604, 605,
	607, 608, 606, 609, 1131, 610, 0, 0, 611, 612,
	613, 1589, 1154, 1191, 0, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 225, 618, 619, 674, 620, 621,
	622, 1067, 0, 226, 0, 0, 0, 0, 0, 1062,
	0, 0, 0, 0, 0, 0, 1060, 1061, 1109, 1081,
	1082, 1083, 1079, 1080, 1092, 1842, 1840, 0, 0, 1091,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	1133, 1097, 0, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 1146, 0, 289, 1153, 290,
	1152, 0, 1163, 291, 292, 293, 294, 295, 296, 1099,
	1132, 1064, 297, 1193, 1194, 631, 0, 298, 299, 1139,
	0, 1120, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124,
	1128, 325, 326, 327, 328, 329, 1156, 330, 1150, 1149,
	1069, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 1141, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 1075, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 1164, 1165,
	361, 1088, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 1148, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 1161, 1162, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 1171, 0,
	1098, 381, 0, 382, 383, 384, 385, 386, 1134, 1135,
	1138, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	1176, 397, 1143, 1144, 0, 1104, 0, 399, 400, 1178,
	1136, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 1172, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 1127, 1126, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 1066, 271, 1185, 462, 463, 1089, 1137, 464,
	1151, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	1166, 476, 477, 1076, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 1167, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 1147,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 1077, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	231, 549, 550, 548, 551, 552, 553, 1130, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 1145, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 1192, 572, 573, 574, 575, 1168,
	579, 580, 0, 581, 582, 1063, 578, 569, 233, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	1157, 1158, 1159, 1160, 0, 600, 0, 592, 593, 594,
	1169, 595, 1170, 1087, 596, 597, 598, 599, 0, 601,
	602, 0, 1070, 603, 604, 605, 607, 608, 606, 609,
	1131, 610, 0, 0, 611, 612, 613, 1589, 1154, 1191,
	0, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	225, 618, 619, 674, 620, 621, 622, 1067, 0, 226,
	0, 0, 0, 0, 0, 1062, 0, 0, 0, 0,
	0, 0, 1060, 1061, 1109, 1081, 1082, 1083, 1079, 1080,
	1092, 1842, 3148, 0, 0, 1091, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 1133, 1097, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 1146, 0, 289, 1153, 290, 1152, 0, 1163, 291,
	292, 293, 294, 295, 296, 1099, 1132, 1064, 297, 1193,
	1194, 631, 0, 298, 299, 1139, 0, 1120, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327,
	328, 329, 1156, 330, 1150, 1149, 1069, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 1141, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 1075, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 1164, 1165, 361, 1088, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 1148, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 1161, 1162, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 1171, 0, 1098, 381, 0, 382,
	383, 384, 385, 386, 1134, 1135, 1138, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 1176, 397, 1143, 1144,
	0, 1104, 0, 399, 400, 1178, 1136, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 1172, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 1127, 1126, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 1066, 271,
	1185, 462, 463, 1089, 1137, 464, 1151, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 1166, 476, 477, 1076,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 1167,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 1147, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 1077, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 231, 549, 550, 548,
	551, 552, 553, 1130, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 1145, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	1192, 572, 573, 574, 575, 1168, 579, 580, 0, 581,
	582, 1063, 578, 569, 233, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 1157, 1158, 1159, 1160,
	0, 600, 0, 592, 593, 594, 1169, 595, 1170, 1087,
	596, 597, 598, 599, 0, 601, 602, 0, 1070, 603,
	604, 605, 607, 608, 606, 609, 1131, 610, 0, 0,
	611, 612, 613, 1589, 1154, 1191, 0, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 225, 618, 619, 674,
	620, 621, 622, 1067, 0, 226, 0, 0, 0, 0,
	0, 1062, 0, 0, 0, 0, 0, 0, 1060, 1061,
	1109, 1081, 1082, 1083, 1079, 1080, 1092, 1842, 1840, 0,
	0, 1091, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 1133, 1097, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 1146, 0, 289,
	1153, 290, 1152, 2664, 1163, 291, 292, 293, 294, 295,
	296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298,
	299, 1139, 0, 1120, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129,
	1125, 1124, 1128, 325, 326, 327, 328, 329, 1156, 330,
	1150, 1149, 1069, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 1141, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 1075,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	1164, 1165, 361, 1088, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 1148, 0, 0, 0, 365, 0, 366,
	367, 0, 2669, 1175, 368, 369, 370, 1161, 1162, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	1171, 0, 1098, 381, 0, 382, 383, 384, 385, 386,
	1134, 1135, 1138, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 1176, 397, 1143, 1144, 0, 1104, 0, 399,
	400, 1178, 1136, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 2665, 414, 1172, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 1127, 1126, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 1066, 271, 1185, 462, 463, 1089,
	1137, 464, 1151, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 1166, 476, 477, 1076, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 1167, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 1147, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 1077, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 1130,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 1145, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 1192, 572, 573, 574,
	575, 1168, 579, 580, 0, 581, 582, 1063, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 1157, 1158, 1159, 1160, 0, 600, 2666, 592,
	593, 594, 1169, 595, 1170, 1087, 596, 597, 598, 599,
	0, 601, 602, 0, 1070, 603, 604, 605, 607, 608,
	606, 609, 1131, 610, 0, 0, 611, 612, 613, 670,
	1154, 1191, 0, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 1067,
	0, 0, 0, 0, 0, 0, 0, 1062, 0, 0,
	0, 0, 0, 0, 1060, 1061, 0, 0, 0, 0,
	0, 0, 0, 1093, 0, 0, 2580, 1091, 1109, 1081,
	1082, 1083, 1079, 1080, 1092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	1133, 1097, 0, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 1146, 0, 289, 1153, 290,
	1152, 0, 1163, 291, 292, 293, 294, 295, 296, 1099,
	1132, 1064, 297, 1193, 1194, 631, 0, 298, 299, 1139,
	0, 1120, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124,
	1128, 325, 326, 327, 328, 329, 1156, 330, 1150, 1149,
	1069, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 1141, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 1075, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 1164, 1165,
	361, 1088, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 1148, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 1161, 1162, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 1171, 0,
	1098, 381, 0, 382, 383, 384, 385, 386, 1134, 1135,
	1138, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	1176, 397, 1143, 1144, 0, 1104, 0, 399, 400, 1178,
	1136, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 1172, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 1127, 1126, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 1066, 271, 1185, 462, 463, 1089, 1137, 464,
	1151, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	1166, 476, 477, 1076, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 1167, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 1147,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 1077, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 1130, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 1145, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 1192, 572, 573, 574, 575, 1168,
	579, 580, 0, 581, 582, 1063, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	1157, 1158, 1159, 1160, 0, 600, 0, 592, 593, 594,
	1169, 595, 1170, 1087, 596, 597, 598, 599, 0, 601,
	602, 0, 1070, 603, 604, 605, 607, 608, 606, 609,
	1131, 610, 0, 0, 611, 612, 613, 670, 1154, 1191,
	0, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 1067, 0, 0,
	0, 0, 0, 0, 0, 1062, 0, 0, 0, 0,
	0, 0, 1060, 1061, 0, 0, 0, 0, 0, 0,
	0, 1093, 2578, 0, 2577, 1091, 1109, 1081, 1082, 1083,
	1079, 1080, 1092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 1133, 1097,
	0, 0, 0, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 624, 1146, 0, 289, 1153, 290, 1152, 0,
	1163, 291, 292, 293, 294, 295, 296, 1099, 1132, 1064,
	297, 1193, 1194, 631, 0, 298, 299, 1139, 0, 1120,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 1174, 322,
	323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325,
	326, 327, 328, 329, 1156, 330, 1150, 1149, 1069, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 1141, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 1075, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 1164, 1165, 361, 1088,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 1148,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 1175,
	368, 369, 370, 1161, 1162, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 1171, 0, 1098, 381,
	0, 382, 383, 384, 385, 386, 1134, 1135, 1138, 465,
	1177, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 1176, 397,
	1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	1172, 1181, 415, 416, 1182, 0, 417, 0, 0, 0,
	418, 419, 422, 1127, 1126, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 1186, 475, 1187, 1166, 476,
	477, 1076, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 1167, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 1147, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 1077, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 1130, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	1145, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 1192, 572, 573, 574, 575, 1168, 579, 580,
	0, 581, 582, 1063, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 1157, 1158,
	1159, 1160, 0, 600, 0, 592, 593, 594, 1169, 595,
	1170, 1087, 596, 597, 598, 599, 0, 601, 602, 0,
	1070, 603, 604, 605, 607, 608, 606, 609, 1131, 610,
	0, 0, 611, 612, 613, 670, 1154, 1191, 0, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 1067, 0, 0, 0, 0,
	0, 0, 0, 1062, 0, 0, 0, 0, 0, 0,
	1060, 1061, 0, 0, 0, 0, 0, 0, 0, 1093,
	2575, 0, 2574, 1091, 1109, 1081, 1082, 1083, 1079, 1080,
	1092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 1133, 1097, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 1146, 0, 289, 1153, 290, 1152, 0, 1163, 291,
	292, 293, 294, 295, 296, 1099, 1132, 1064, 297, 1193,
	1194, 631, 0, 298, 299, 1139, 0, 1120, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327,
	328, 329, 1156, 330, 1150, 1149, 1069, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 1141, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 1075, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 1164, 1165, 361, 1088, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 1148, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 1161, 1162, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 1171, 0, 1098, 381, 0, 382,
	383, 384, 385, 386, 1134, 1135, 1138, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 1176, 397, 1143, 1144,
	0, 1104, 0, 399, 400, 1178, 1136, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 1172, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 1127, 1126, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 1066, 271,
	1185, 462, 463, 1089, 1137, 464, 1151, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 1166, 476, 477, 1076,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 1167,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 1147, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 1077, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 1130, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 1145, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	1192, 572, 573, 574, 575, 1168, 579, 580, 0, 581,
	582, 1063, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 1157, 1158, 1159, 1160,
	0, 600, 0, 592, 593, 594, 1169, 595, 1170, 1087,
	596, 597, 598, 599, 0, 601, 602, 0, 1070, 603,
	604, 605, 607, 608, 606, 609, 1131, 610, 0, 0,
	611, 612, 613, 670, 1154, 1191, 0, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 1067, 0, 0, 0, 0, 0, 0,
	0, 1062, 0, 0, 0, 0, 0, 0, 1060, 1061,
	0, 0, 0, 0, 0, 0, 0, 1093, 2572, 0,
	2571, 1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 1133, 1097, 0, 0, 0, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 1146,
	0, 289, 1153, 290, 1152, 0, 1163, 291, 292, 293,
	294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631,
	0, 298, 299, 1139, 0, 1120, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 1174, 322, 323, 324, 1123, 1121,
	1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328, 329,
	1156, 330, 1150, 1149, 1069, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 1141,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 1075, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 1164, 1165, 361, 1088, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 1148, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 1175, 368, 369, 370, 1161,
	1162, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 1171, 0, 1098, 381, 0, 382, 383, 384,
	385, 386, 1134, 1135, 1138, 465, 1177, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 1176, 397, 1143, 1144, 0, 1104,
	0, 399, 400, 1178, 1136, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 1172, 1181, 415, 416,
	1182, 0, 417, 0, 0, 0, 418, 419, 422, 1127,
	1126, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1066, 271, 1185, 462,
	463, 1089, 1137, 464, 1151, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 1186, 475, 1187, 1166, 476, 477, 1076, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 1167, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 1147, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 1077,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 1130, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 1145, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 1192, 572,
	573, 574, 575, 1168, 579, 580, 0, 581, 582, 1063,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 1157, 1158, 1159, 1160, 0, 600,
	0, 592, 593, 594, 1169, 595, 1170, 1087, 596, 597,
	598, 599, 0, 601, 602, 0, 1070, 603, 604, 605,
	607, 608, 606, 609, 1131, 610, 0, 0, 611, 612,
	613, 670, 1154, 1191, 0, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 1067, 0, 0, 0, 0, 0, 0, 0, 1062,
	0, 0, 0, 0, 0, 0, 1060, 1061, 0, 0,
	0, 0, 0, 0, 0, 1093, 2569, 0, 1684, 1091,
	1109, 1081, 1082, 1083, 1079, 1080, 1092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 1133, 1097, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 1146, 0, 289,
	1153, 290, 1152, 0, 1163, 291, 292, 293, 294, 295,
	296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298,
	299, 1139, 0, 1120, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129,
	1125, 1124, 1128, 325, 326, 327, 328, 329, 1156, 330,
	1150, 1149, 1069, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 1141, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 1075,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	1164, 1165, 361, 1088, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 1148, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 1161, 1162, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	1171, 0, 1098, 381, 0, 382, 383, 384, 385, 386,
	1134, 1135, 1138, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 1176, 397, 1143, 1144, 0, 1104, 0, 399,
	400, 1178, 1136, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 1172, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 1127, 1126, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 1066, 271, 1185, 462, 463, 1089,
	1137, 464, 1151, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 1166, 476, 477, 1076, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 1167, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 1147, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 1077, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 1130,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 1145, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 1192, 572, 573, 574,
	575, 1168, 579, 580, 0, 581, 582, 1063, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 1157, 1158, 1159, 1160, 0, 600, 0, 592,
	593, 594, 1169, 595, 1170, 1087, 596, 597, 598, 599,
	0, 601, 602, 0, 1070, 603, 604, 605, 607, 608,
	606, 609, 1131, 610, 0, 0, 611, 612, 613, 670,
	1154, 1191, 0, 615, 614, 616, 673, 0, 617, 1683,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 1067,
	0, 0, 0, 0, 0, 0, 0, 1062, 0, 0,
	0, 0, 0, 0, 1060, 1061, 0, 0, 0, 0,
	0, 0, 0, 1093, 0, 0, 1056, 1091, 1109, 1081,
	1082, 1083, 1079, 1080, 1092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	1133, 1097, 0, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 1146, 0, 289, 1153, 290,
	1152, 0, 1163, 291, 292, 293, 294, 295, 296, 1099,
	1132, 1064, 297, 1193, 1194, 631, 0, 298, 299, 1139,
	0, 1120, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124,
	1128, 325, 326, 327, 328, 329, 1156, 330, 1150, 1149,
	1069, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 1141, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 1075, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 1164, 1165,
	361, 1088, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 1148, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 1161, 1162, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 1171, 0,
	1098, 381, 0, 382, 383, 384, 385, 386, 1134, 1135,
	1138, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	1176, 397, 1143, 1144, 0, 1104, 0, 399, 400, 1178,
	1136, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 1172, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 1127, 1126, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 1066, 271, 1185, 462, 463, 1089, 1137, 464,
	1151, 466, 467, 0, 0, 468, 0, 1071, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	1166, 476, 477, 1076, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 1167, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 1147,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 1077, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 1130, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 1145, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 1192, 572, 573, 574, 575, 1168,
	579, 580, 0, 581, 582, 1063, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	1157, 1158, 1159, 1160, 0, 600, 0, 592, 593, 594,
	1169, 595, 1170, 1087, 596, 597, 598, 599, 0, 601,
	602, 0, 1070, 603, 604, 605, 607, 608, 606, 609,
	1131, 610, 0, 0, 611, 612, 613, 670, 1154, 1191,
	0, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 1067, 0, 0,
	0, 0, 0, 0, 0, 1062, 0, 0, 0, 0,
	0, 0, 1060, 1061, 1109, 1081, 1082, 1083, 1079, 1080,
	1092, 1093, 0, 0, 0, 1091, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 1133, 1097, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 1146, 0, 289, 1153, 290, 1152, 0, 1163, 291,
	292, 293, 294, 295, 296, 1099, 1132, 1064, 297, 1193,
	1194, 631, 0, 298, 299, 1139, 0, 1120, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	4575, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327,
	328, 329, 1156, 330, 1150, 1149, 1069, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 1141, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 1075, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 1164, 1165, 361, 1088, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 1148, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 1161, 1162, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 1171, 0, 1098, 381, 0, 382,
	383, 384, 385, 386, 1134, 1135, 1138, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 1176, 397, 1143, 1144,
	0, 1104, 0, 399, 400, 1178, 1136, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 1172, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 1127, 1126, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 1066, 271,
	1185, 462, 463, 1089, 1137, 464, 1151, 466, 467, 0,
	0, 468, 0, 1071, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 1166, 476, 477, 1076,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 1167,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 1147, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 1077, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 1130, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 1145, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	1192, 572, 573, 574, 575, 1168, 579, 580, 0, 581,
	582, 1063, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 1157, 1158, 1159, 1160,
	0, 600, 0, 592, 593, 594, 1169, 595, 1170, 1087,
	596, 597, 598, 599, 0, 601, 602, 0, 1070, 603,
	604, 605, 607, 608, 606, 609, 1131, 610, 0, 0,
	611, 612, 613, 670, 1154, 1191, 0, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 1067, 0, 0, 0, 0, 0, 0,
	0, 1062, 0, 0, 0, 0, 0, 0, 1060, 1061,
	1109, 1081, 1082, 1083, 1079, 1080, 1092, 1093, 0, 0,
	0, 1091, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 1133, 1097, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 1146, 0, 289,
	1153, 290, 1152, 0, 1163, 291, 292, 293, 294, 295,
	296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298,
	299, 1139, 0, 1120, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129,
	1125, 1124, 1128, 325, 326, 327, 328, 329, 1156, 330,
	1150, 1149, 1069, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 1141, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 1075,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	1164, 1165, 361, 1088, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 1148, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 1161, 1162, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	1171, 0, 1098, 381, 0, 382, 383, 384, 385, 386,
	1134, 1135, 1138, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 2412, 394, 395, 396,
	398, 0, 1176, 397, 1143, 1144, 0, 1104, 0, 399,
	400, 1178, 1136, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 1172, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 1127, 1126, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 1066, 271, 1185, 462, 463, 1089,
	1137, 464, 1151, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 1166, 476, 477, 1076, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 1167, 494, 658, 495, 496,
	2411, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 1147, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 1077, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 1130,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 1145, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 1192, 572, 573, 574,
	575, 1168, 579, 580, 0, 581, 582, 1063, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 1157, 1158, 1159, 1160, 0, 600, 0, 592,
	593, 594, 1169, 595, 1170, 1087, 596, 597, 598, 599,
	0, 601, 602, 0, 1070, 603, 604, 605, 607, 608,
	606, 609, 1131, 610, 0, 0, 611, 612, 613, 670,
	1154, 1191, 0, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 1067,
	0, 0, 0, 0, 0, 0, 0, 1062, 0, 0,
	0, 0, 0, 0, 1060, 1061, 1109, 1081, 1082, 1083,
	1079, 1080, 1092, 1093, 0, 0, 0, 1091, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 1133, 1097,
	0, 0, 0, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 624, 1146, 0, 289, 1153, 290, 1152, 0,
	1163, 291, 292, 293, 294, 295, 296, 1099, 1132, 1064,
	297, 1193, 1194, 631, 0, 298, 299, 1139, 0, 1120,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 1174, 322,
	323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325,
	326, 327, 328, 329, 1156, 330, 1150, 1149, 1069, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 1141, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 1075, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 1164, 1165, 361, 1088,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 1148,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 1175,
	368, 369, 370, 1161, 1162, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 1171, 0, 1098, 381,
	0, 382, 383, 384, 385, 386, 1134, 1135, 1138, 465,
	1177, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 1176, 397,
	1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	1172, 1181, 415, 416, 1182, 0, 417, 0, 0, 0,
	418, 419, 422, 1127, 1126, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151, 466,
	467, 0, 0, 468, 0, 1071, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 1186, 475, 1187, 1166, 476,
	477, 1076, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 1167, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 1147, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 1077, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 1130, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	1145, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 1192, 572, 573, 574, 575, 1168, 579, 580,
	0, 581, 582, 1063, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 1157, 1158,
	1159, 1160, 0, 600, 0, 592, 593, 594, 1169, 595,
	1170, 1087, 596, 597, 598, 599, 0, 601, 602, 0,
	1070, 603, 604, 605, 607, 608, 606, 609, 1131, 610,
	0, 0, 611, 612, 613, 670, 1154, 1191, 0, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 1067, 0, 0, 0, 0,
	0, 0, 0, 1062, 0, 0, 0, 0, 0, 0,
	1060, 1061, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 1093,
	0, 0, 0, 1091, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 1133, 1097, 0, 0, 0, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 1146,
	0, 289, 1153, 290, 1152, 0, 1163, 291, 292, 293,
	294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631,
	0, 298, 299, 1139, 0, 1120, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 4319, 318,
	0, 319, 320, 321, 1174, 322, 323, 324, 1123, 1121,
	1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328, 329,
	1156, 330, 1150, 1149, 1069, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 1141,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 1075, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 1164, 1165, 361, 1088, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 1148, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 1175, 368, 369, 370, 1161,
	1162, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 1171, 0, 1098, 381, 0, 382, 383, 384,
	385, 386, 1134, 1135, 1138, 465, 1177, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 1176, 397, 1143, 1144, 0, 1104,
	0, 399, 400, 1178, 1136, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 1172, 1181, 415, 416,
	1182, 0, 417, 0, 0, 0, 418, 419, 422, 1127,
	1126, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1066, 271, 1185, 462,
	463, 1089, 1137, 464, 1151, 466, 467, 0, 0, 468,
	0, 1071, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 1186, 475, 1187, 1166, 476, 477, 1076, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 1167, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 1147, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 1077,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 1130, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 1145, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 1192, 572,
	573, 574, 575, 1168, 579, 580, 0, 581, 582, 1063,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 1157, 1158, 1159, 1160, 0, 600,
	0, 592, 593, 594, 1169, 595, 1170, 1087, 596, 597,
	598, 599, 0, 601, 602, 0, 1070, 603, 604, 605,
	607, 608, 606, 609, 1131, 610, 0, 0, 611, 612,
	613, 670, 1154, 1191, 0, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 1067, 0, 0, 0, 0, 0, 0, 0, 1062,
	0, 0, 0, 0, 0, 0, 1060, 1061, 1109, 1081,
	1082, 1083, 1079, 1080, 1092, 1093, 0, 0, 0, 1091,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	1133, 1097, 0, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 1146, 0, 289, 1153, 290,
	1152, 0, 1163, 291, 292, 293, 294, 295, 296, 1099,
	1132, 1064, 297, 1193, 1194, 631, 0, 298, 299, 1139,
	0, 1120, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124,
	1128, 325, 326, 327, 328, 329, 1156, 330, 1150, 1149,
	1069, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 1141, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 1075, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 1164, 1165,
	361, 1088, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 1148, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 1161, 1162, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 1171, 0,
	1098, 381, 0, 382, 383, 384, 385, 386, 1134, 1135,
	1138, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	1176, 397, 1143, 1144, 0, 1104, 0, 399, 400, 1178,
	1136, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 1172, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 1127, 1126, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 1066, 3932, 1185, 462, 463, 1089, 1137, 464,
	1151, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	1166, 476, 477, 1076, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 1167, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 1147,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 1077, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 1130, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 1145, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 1192, 572, 573, 574, 575, 1168,
	579, 580, 0, 581, 582, 1063, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	1157, 1158, 1159, 1160, 0, 600, 0, 592, 593, 594,
	1169, 595, 1170, 1087, 596, 597, 598, 599, 0, 601,
	602, 0, 1070, 603, 604, 605, 607, 608, 606, 609,
	1131, 610, 0, 0, 611, 612, 613, 670, 1154, 1191,
	0, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 1067, 0, 0,
	0, 0, 0, 0, 0, 1062, 0, 0, 0, 0,
	0, 0, 1060, 1061, 1910, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 0, 1091, 1109, 1081, 1082, 1083,
	1079, 1080, 1092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 1133, 1097,
	0, 0, 0, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 624, 1146, 0, 289, 1153, 290, 1152, 0,
	1163, 291, 292, 293, 294, 295, 296, 1099, 1132, 1064,
	297, 1193, 1194, 631, 0, 298, 299, 1139, 0, 1120,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 1174, 322,
	323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325,
	326, 327, 328, 329, 1156, 330, 1150, 1149, 1069, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 1141, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 1075, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 1164, 1165, 361, 1088,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 1148,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 1175,
	368, 369, 370, 1161, 1162, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 1171, 0, 1098, 381,
	0, 382, 383, 384, 385, 386, 1134, 1135, 1138, 465,
	1177, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 1176, 397,
	1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	1172, 1181, 415, 416, 1182, 0, 417, 0, 0, 0,
	418, 419, 422, 1127, 1126, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 1186, 475, 1187, 1166, 476,
	477, 1076, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 1167, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 1147, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 1077, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 1130, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	1145, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 1192, 572, 573, 574, 575, 1168, 579, 580,
	0, 581, 582, 1063, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 1157, 1158,
	1159, 1160, 0, 600, 0, 592, 593, 594, 1169, 595,
	1170, 1087, 596, 597, 598, 599, 0, 601, 602, 0,
	1070, 603, 604, 605, 607, 608, 606, 609, 1131, 610,
	0, 0, 611, 612, 613, 670, 1154, 1191, 3648, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 1067, 0, 0, 0, 0,
	0, 0, 0, 1062, 0, 0, 0, 0, 0, 0,
	1060, 1061, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 1093,
	0, 0, 0, 1091, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 1133, 1097, 0, 0, 0, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 1146,
	0, 289, 1153, 290, 1152, 0, 1163, 291, 292, 293,
	294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631,
	0, 298, 299, 1139, 0, 1120, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 1174, 322, 323, 324, 1123, 1121,
	1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328, 329,
	1156, 330, 1150, 1149, 1069, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 1141,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 1075, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 1164, 1165, 361, 1088, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 1148, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 1175, 368, 369, 370, 1161,
	1162, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 1171, 0, 1098, 381, 0, 382, 383, 384,
	385, 386, 1134, 1135, 1138, 465, 1177, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 1176, 397, 1143, 1144, 0, 1104,
	0, 399, 400, 1178, 1136, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 1172, 1181, 415, 416,
	1182, 0, 417, 0, 0, 0, 418, 419, 422, 1127,
	1126, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1066, 271, 1185, 462,
	463, 1089, 1137, 464, 1151, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 1186, 475, 1187, 1166, 476, 477, 1076, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 1167, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 1147, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 1077,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 1130, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 1145, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 1192, 572,
	573, 574, 575, 1168, 579, 580, 0, 581, 582, 1063,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 1157, 1158, 1159, 1160, 0, 600,
	0, 592, 593, 594, 1169, 595, 1170, 1087, 596, 597,
	598, 599, 0, 601, 602, 0, 1070, 603, 604, 605,
	607, 608, 606, 609, 1131, 610, 0, 0, 611, 612,
	613, 670, 1154, 1191, 0, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 1067, 0, 0, 0, 0, 0, 0, 0, 1062,
	0, 0, 0, 0, 0, 0, 1060, 1061, 1910, 0,
	0, 0, 0, 0, 0, 1093, 0, 0, 0, 1091,
	1109, 1081, 1082, 1083, 1079, 1080, 1092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 1133, 1097, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 1146, 0, 289,
	1153, 290, 1152, 0, 1163, 291, 292, 293, 294, 295,
	296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298,
	299, 1139, 0, 1120, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129,
	1125, 1124, 1128, 325, 326, 327, 328, 329, 1156, 330,
	1150, 1149, 1069, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 1141, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 1075,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	1164, 1165, 361, 1088, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 1148, 0, 0, 0, 365, 0, 366,
	367, 0, 2669, 1175, 368, 369, 370, 1161, 1162, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	1171, 0, 1098, 381, 0, 382, 383, 384, 385, 386,
	1134, 1135, 1138, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 1176, 397, 1143, 1144, 0, 1104, 0, 399,
	400, 1178, 1136, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 1172, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 1127, 1126, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 1066, 271, 1185, 462, 463, 1089,
	1137, 464, 1151, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 1166, 476, 477, 1076, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 1167, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 1147, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 1077, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 1130,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 1145, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 1192, 572, 573, 574,
	575, 1168, 579, 580, 0, 581, 582, 1063, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 1157, 1158, 1159, 1160, 0, 600, 0, 592,
	593, 594, 1169, 595, 1170, 1087, 596, 597, 598, 599,
	0, 601, 602, 0, 1070, 603, 604, 605, 607, 608,
	606, 609, 1131, 610, 0, 0, 611, 612, 613, 670,
	1154, 1191, 0, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 1067,
	0, 0, 0, 0, 0, 0, 0, 1062, 0, 0,
	0, 0, 0, 0, 1060, 1061, 1109, 1081, 1082, 1083,
	1079, 1080, 1092, 1093, 0, 0, 0, 1091, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 1133, 1097,
	0, 0, 0, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 624, 1146, 0, 289, 1153, 290, 1152, 0,
	1163, 291, 292, 293, 294, 295, 296, 1099, 1132, 1064,
	297, 1193, 1194, 631, 0, 298, 299, 1139, 0, 1120,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 1174, 322,
	323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325,
	326, 327, 328, 329, 1156, 330, 1150, 1149, 1069, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 1141, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 1075, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 1164, 1165, 361, 1088,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 1148,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 1175,
	368, 369, 370, 1161, 1162, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 1171, 0, 1098, 381,
	0, 382, 383, 384, 385, 386, 1134, 1135, 1138, 465,
	1177, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 1176, 397,
	1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	1172, 1181, 415, 416, 1182, 0, 417, 0, 0, 0,
	418, 419, 422, 1127, 1126, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 1186, 475, 1187, 1166, 476,
	477, 1076, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 1167, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 1147, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 1077, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 1130, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	1145, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 1192, 572, 573, 574, 575, 1168, 579, 580,
	0, 581, 582, 1063, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 1157, 1158,
	1159, 1160, 0, 600, 0, 592, 593, 594, 1169, 595,
	1170, 1087, 596, 597, 598, 599, 0, 601, 602, 0,
	1070, 603, 604, 605, 607, 608, 606, 609, 1131, 610,
	0, 0, 611, 612, 613, 670, 1154, 1191, 0, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 1067, 0, 0, 0, 0,
	0, 0, 0, 1062, 0, 0, 0, 0, 0, 0,
	1060, 1061, 0, 0, 0, 0, 0, 0, 0, 1093,
	1840, 0, 2674, 1091, 1109, 1081, 1082, 1083, 1079, 1080,
	1092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 1133, 1097, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 1146, 0, 289, 1153, 290, 1152, 0, 1163, 291,
	292, 293, 294, 295, 296, 1099, 1132, 1064, 297, 1193,
	1194, 631, 0, 298, 299, 1139, 0, 1120, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327,
	328, 329, 1156, 330, 1150, 1149, 1069, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 1141, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 1075, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 1164, 1165, 361, 1088, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 1148, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 1161, 1162, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 1171, 0, 1098, 381, 0, 382,
	383, 384, 385, 386, 1134, 1135, 1138, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 1176, 397, 1143, 1144,
	0, 1104, 0, 399, 400, 1178, 1136, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 1172, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 1127, 1126, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 1066, 271,
	1185, 462, 463, 1089, 1137, 464, 1151, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 1166, 476, 477, 1076,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 1167,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 1147, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 1077, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 1130, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 1145, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	1192, 572, 573, 574, 575, 1168, 579, 580, 0, 581,
	582, 1063, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 1157, 1158, 1159, 1160,
	0, 600, 0, 592, 593, 594, 1169, 595, 1170, 1087,
	596, 597, 598, 599, 0, 601, 602, 0, 1070, 603,
	604, 605, 607, 608, 606, 609, 1131, 610, 0, 0,
	611, 612, 613, 670, 1154, 1191, 0, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 1067, 0, 0, 0, 0, 0, 0,
	0, 1062, 0, 0, 0, 0, 0, 0, 1060, 1061,
	0, 0, 0, 0, 0, 0, 0, 1093, 0, 0,
	2672, 1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 1133, 1097, 0, 0, 0, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 1146,
	0, 289, 1153, 290, 1152, 0, 1163, 291, 292, 293,
	294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631,
	0, 298, 299, 1139, 0, 1120, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 1174, 322, 323, 324, 1123, 1121,
	1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328, 329,
	1156, 330, 1150, 1149, 1069, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 1141,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 1075, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 1164, 1165, 361, 1088, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 1148, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 1175, 368, 369, 370, 1161,
	1162, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 1171, 0, 1098, 381, 0, 382, 383, 384,
	385, 386, 1134, 1135, 1138, 465, 1177, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 1176, 397, 1143, 1144, 0, 1104,
	0, 399, 400, 1178, 1136, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 1172, 1181, 415, 416,
	1182, 0, 417, 0, 0, 0, 418, 419, 422, 1127,
	1126, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1066, 271, 1185, 462,
	463, 1089, 1137, 464, 1151, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 1186, 475, 1187, 1166, 476, 477, 1076, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 1167, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 1147, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 1077,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 1130, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 1145, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 1192, 572,
	573, 574, 575, 1168, 579, 580, 0, 581, 582, 1063,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 1157, 1158, 1159, 1160, 0, 600,
	0, 592, 593, 594, 1169, 595, 1170, 1087, 596, 597,
	598, 599, 0, 601, 602, 0, 1070, 603, 604, 605,
	607, 608, 606, 609, 1131, 610, 0, 0, 611, 612,
	613, 670, 1154, 1191, 0, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 1067, 0, 0, 0, 0, 0, 0, 0, 1062,
	0, 0, 0, 0, 0, 0, 1060, 1061, 0, 0,
	0, 0, 0, 0, 0, 1093, 0, 0, 2660, 1091,
	1109, 1081, 1082, 1083, 1079, 1080, 1092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 1133, 1097, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 1146, 0, 289,
	1153, 290, 1152, 0, 1163, 291, 292, 293, 294, 295,
	296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298,
	299, 1139, 0, 1120, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129,
	1125, 1124, 1128, 325, 326, 327, 328, 329, 1156, 330,
	1150, 1149, 1069, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 1141, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 1075,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	1164, 1165, 361, 1088, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 1148, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 1161, 1162, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	1171, 0, 1098, 381, 0, 382, 383, 384, 385, 386,
	1134, 1135, 1138, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 1176, 397, 1143, 1144, 0, 1104, 0, 399,
	400, 1178, 1136, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 1172, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 1127, 1126, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 1066, 271, 1185, 462, 463, 1089,
	1137, 464, 1151, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 1166, 476, 477, 1076, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 1167, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 1147, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 1077, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 1130,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 1145, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 1192, 572, 573, 574,
	575, 1168, 579, 580, 0, 581, 582, 1063, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 1157, 1158, 1159, 1160, 0, 600, 0, 592,
	593, 594, 1169, 595, 1170, 1087, 596, 597, 598, 599,
	0, 601, 602, 0, 1070, 603, 604, 605, 607, 608,
	606, 609, 1131, 610, 0, 0, 611, 612, 613, 670,
	1154, 1191, 0, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 1067,
	0, 0, 0, 0, 0, 0, 0, 1062, 0, 0,
	0, 0, 0, 0, 1060, 1061, 0, 0, 0, 0,
	0, 0, 0, 1093, 0, 0, 2648, 1091, 1109, 1081,
	1082, 1083, 1079, 1080, 1092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	1133, 1097, 0, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 1146, 0, 289, 1153, 290,
	1152, 0, 1163, 291, 292, 293, 294, 295, 296, 1099,
	1132, 1064, 297, 1193, 1194, 631, 0, 298, 299, 1139,
	0, 1120, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124,
	1128, 325, 326, 327, 328, 329, 1156, 330, 1150, 1149,
	1069, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 1141, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 1075, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 1164, 1165,
	361, 1088, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 1148, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 1161, 1162, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 1171, 0,
	1098, 381, 0, 382, 383, 384, 385, 386, 1134, 1135,
	1138, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	1176, 397, 1143, 1144, 0, 1104, 0, 399, 400, 1178,
	1136, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 1172, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 1127, 1126, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 1066, 271, 1185, 462, 463, 1089, 1137, 464,
	1151, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	1166, 476, 477, 1076, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 1167, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 1147,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 1077, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 1130, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 1145, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 1192, 572, 573, 574, 575, 1168,
	579, 580, 0, 581, 582, 1063, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	1157, 1158, 1159, 1160, 0, 600, 0, 592, 593, 594,
	1169, 595, 1170, 1087, 596, 597, 598, 599, 0, 601,
	602, 0, 1070, 603, 604, 605, 607, 608, 606, 609,
	1131, 610, 0, 0, 611, 612, 613, 670, 1154, 1191,
	0, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 1067, 0, 0,
	0, 0, 0, 0, 0, 1062, 0, 0, 0, 0,
	0, 0, 1060, 1061, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 2646, 1091, 2637, 2644, 1082, 1083,
	1079, 1080, 1092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 1133, 1097,
	0, 0, 0, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 624, 1146, 0, 289, 1153, 290, 1152, 0,
	1163, 291, 292, 293, 294, 295, 296, 1099, 1132, 1064,
	297, 1193, 1194, 631, 0, 298, 299, 1139, 0, 1120,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 1174, 322,
	323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325,
	326, 327, 328, 329, 1156, 2640, 1150, 1149, 1069, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 1141, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 1075, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 1164, 1165, 361, 1088,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 1148,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 1175,
	368, 369, 370, 1161, 1162, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 1171, 0, 1098, 381,
	0, 382, 383, 384, 2641, 386, 1134, 1135, 1138, 465,
	1177, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 1176, 397,
	1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	1172, 1181, 415, 416, 1182, 0, 417, 0, 0, 0,
	418, 419, 422, 1127, 1126, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 2642, 432, 2639, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 1186, 475, 1187, 1166, 476,
	477, 1076, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 1167, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 1147, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 1077, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 2643, 0, 549,
	550, 548, 551, 552, 553, 1130, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	1145, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 1192, 572, 573, 574, 575, 1168, 579, 580,
	0, 581, 582, 1063, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 1157, 1158,
	1159, 1160, 0, 600, 0, 592, 593, 594, 1169, 595,
	1170, 1087, 596, 597, 598, 599, 0, 601, 602, 0,
	1070, 603, 604, 605, 607, 608, 606, 609, 1131, 610,
	0, 0, 611, 612, 613, 670, 1154, 1191, 0, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 2638, 622, 1067, 0, 0, 0, 0,
	0, 0, 0, 1062, 0, 0, 0, 0, 0, 0,
	1060, 1061, 0, 0, 0, 0, 0, 0, 0, 1093,
	0, 0, 2634, 1091, 2637, 2644, 1082, 1083, 1079, 1080,
	1092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 1133, 1097, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 1146, 0, 289, 1153, 290, 1152, 0, 1163, 291,
	292, 293, 294, 295, 296, 1099, 1132, 1064, 297, 1193,
	1194, 631, 0, 298, 299, 1139, 0, 1120, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327,
	328, 329, 1156, 2640, 1150, 1149, 1069, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 1141, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 1075, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 1164, 1165, 361, 1088, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 1148, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 1161, 1162, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 1171, 0, 1098, 381, 0, 382,
	383, 384, 2641, 386, 1134, 1135, 1138, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 1176, 397, 1143, 1144,
	0, 1104, 0, 399, 400, 1178, 1136, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 1172, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 1127, 1126, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 2642, 432, 2639, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 1066, 271,
	1185, 462, 463, 1089, 1137, 464, 1151, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 1166, 476, 477, 1076,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 1167,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 1147, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 1077, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 2643, 0, 549, 550, 548,
	551, 552, 553, 1130, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 1145, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	1192, 572, 573, 574, 575, 1168, 579, 580, 0, 581,
	582, 1063, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 1157, 1158, 1159, 1160,
	0, 600, 0, 592, 593, 594, 1169, 595, 1170, 1087,
	596, 597, 598, 599, 0, 601, 602, 0, 1070, 603,
	604, 605, 607, 608, 606, 609, 1131, 610, 0, 0,
	611, 612, 613, 670, 1154, 1191, 0, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 2638, 622, 1067, 0, 0, 0, 0, 0, 0,
	0, 1062, 0, 0, 0, 0, 0, 0, 1060, 1061,
	1109, 1081, 1082, 1083, 1079, 1080, 1092, 1093, 0, 0,
	0, 1091, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 1133, 1097, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 1146, 0, 289,
	1153, 290, 1152, 0, 1163, 291, 292, 293, 294, 295,
	296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298,
	299, 1139, 0, 1120, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129,
	1125, 1124, 1128, 325, 326, 327, 328, 329, 1156, 330,
	1150, 1149, 1069, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 1141, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 1075,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	1164, 1165, 361, 1088, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 1148, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 1161, 1162, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	1171, 0, 1098, 381, 0, 382, 383, 384, 385, 386,
	1134, 1135, 1138, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 1176, 397, 1143, 1144, 0, 1104, 0, 399,
	400, 1178, 1136, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 1172, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 1127, 1126, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 1066, 271, 1185, 462, 463, 1089,
	1137, 464, 1151, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 1166, 476, 477, 1076, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 1167, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 1147, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 1077, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 1130,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 1145, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 1192, 572, 573, 574,
	575, 1168, 579, 580, 0, 581, 582, 1063, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 1157, 1158, 1159, 1160, 0, 600, 0, 592,
	593, 594, 1169, 595, 1170, 1087, 596, 597, 598, 599,
	0, 601, 602, 0, 1070, 603, 604, 605, 607, 608,
	606, 609, 1131, 610, 0, 0, 611, 612, 613, 670,
	1154, 1191, 0, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 1067,
	0, 0, 0, 0, 0, 0, 0, 1062, 0, 0,
	0, 0, 0, 0, 1060, 1061, 0, 0, 0, 0,
	0, 1848, 0, 1093, 0, 0, 0, 1091, 1109, 1081,
	1082, 1083, 1079, 1080, 1092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 2391, 279, 280, 0, 0, 0, 0, 0,
	1133, 1097, 0, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 1146, 0, 289, 1153, 290,
	1152, 0, 1163, 291, 292, 293, 294, 295, 296, 1099,
	1132, 1064, 297, 1193, 1194, 631, 0, 298, 299, 1139,
	0, 1120, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124,
	1128, 325, 326, 327, 328, 329, 1156, 330, 1150, 1149,
	1069, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 1141, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 1075, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 1164, 1165,
	361, 1088, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 1148, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 1161, 1162, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 1171, 0,
	1098, 381, 0, 382, 383, 384, 385, 386, 1134, 1135,
	1138, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	1176, 397, 1143, 1144, 0, 1104, 0, 399, 400, 1178,
	1136, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 1172, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 1127, 1126, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 1066, 271, 1185, 462, 463, 1089, 1137, 464,
	1151, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	1166, 476, 477, 1076, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 1167, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 1147,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 1077, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 1130, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 1145, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 1192, 572, 573, 574, 575, 1168,
	579, 580, 0, 581, 582, 1063, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	1157, 1158, 1159, 1160, 0, 600, 0, 592, 593, 594,
	1169, 595, 1170, 1087, 596, 597, 598, 599, 0, 601,
	602, 0, 1070, 603, 604, 605, 607, 608, 606, 609,
	1131, 610, 0, 0, 611, 612, 613, 670, 1154, 1191,
	0, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 1067, 0, 0,
	0, 0, 0, 0, 0, 1062, 0, 0, 0, 0,
	0, 0, 1060, 1061, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 2334, 1091, 1109, 1081, 1082, 1083,
	1079, 1080, 1092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 1133, 1097,
	0, 0, 0, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 624, 1146, 0, 289, 1153, 290, 1152, 0,
	1163, 291, 292, 293, 294, 295, 296, 1099, 1132, 1064,
	297, 1193, 1194, 631, 0, 298, 299, 1139, 0, 1120,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 1174, 322,
	323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325,
	326, 327, 328, 329, 1156, 330, 1150, 1149, 1069, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 1141, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 1075, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 1164, 1165, 361, 1088,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 1148,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 1175,
	368, 369, 370, 1161, 1162, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 1171, 0, 1098, 381,
	0, 382, 383, 384, 385, 386, 1134, 1135, 1138, 465,
	1177, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 1176, 397,
	1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	1172, 1181, 415, 416, 1182, 0, 417, 0, 0, 0,
	418, 419, 422, 1127, 1126, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 1186, 475, 1187, 1166, 476,
	477, 1076, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 1167, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 1147, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 1077, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 1130, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	1145, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 1192, 572, 573, 574, 575, 1168, 579, 580,
	0, 581, 582, 1063, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 1157, 1158,
	1159, 1160, 0, 600, 0, 592, 593, 594, 1169, 595,
	1170, 1087, 596, 597, 598, 599, 0, 601, 602, 0,
	1070, 603, 604, 605, 607, 608, 606, 609, 1131, 610,
	0, 0, 611, 612, 613, 670, 1154, 1191, 0, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 1067, 0, 0, 0, 0,
	0, 0, 0, 1062, 0, 0, 0, 0, 0, 0,
	1060, 1061, 0, 0, 0, 0, 0, 0, 0, 1093,
	0, 0, 1689, 1091, 1109, 1081, 1082, 1083, 1079, 1080,
	1092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 1133, 1097, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 1146, 0, 289, 1153, 290, 1152, 0, 1163, 291,
	292, 293, 294, 295, 296, 1099, 1132, 1064, 297, 1193,
	1194, 631, 0, 298, 299, 1139, 0, 1120, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327,
	328, 329, 1156, 330, 1150, 1149, 1069, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 1141, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 1075, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 1164, 1165, 361, 1088, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 1148, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 1161, 1162, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 1171, 0, 1098, 381, 0, 382,
	383, 384, 385, 386, 1134, 1135, 1138, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 1176, 397, 1143, 1144,
	0, 1104, 0, 399, 400, 1178, 1136, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 1172, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 1127, 1126, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 1066, 271,
	1185, 462, 463, 1089, 1137, 464, 1151, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 1166, 476, 477, 1076,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 1167,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 1147, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 1077, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 1130, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 1145, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	1192, 572, 573, 574, 575, 1168, 579, 580, 0, 581,
	582, 1063, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 1157, 1158, 1159, 1160,
	0, 600, 0, 592, 593, 594, 1169, 595, 1170, 1087,
	596, 597, 598, 599, 0, 601, 602, 0, 1070, 603,
	604, 605, 607, 608, 606, 609, 1131, 610, 0, 0,
	611, 612, 613, 670, 1154, 1191, 0, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 1067, 0, 0, 0, 0, 0, 0,
	0, 1062, 0, 0, 0, 0, 0, 0, 1060, 1061,
	0, 0, 0, 0, 0, 0, 0, 1093, 0, 0,
	1619, 1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 1133, 1097, 0, 0, 0, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 1146,
	0, 289, 1153, 290, 1152, 0, 1163, 291, 292, 293,
	294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631,
	0, 298, 299, 1139, 0, 1120, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 1174, 322, 323, 324, 1123, 1121,
	1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328, 329,
	1156, 330, 1150, 1149, 1069, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 1141,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 1075, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 1164, 1165, 361, 1088, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 1148, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 1175, 368, 369, 370, 1161,
	1162, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 1171, 0, 1098, 381, 0, 382, 383, 384,
	385, 386, 1134, 1135, 1138, 465, 1177, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 1176, 397, 1143, 1144, 0, 1104,
	0, 399, 400, 1178, 1136, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 1172, 1181, 415, 416,
	1182, 0, 417, 0, 0, 0, 418, 419, 422, 1127,
	1126, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1066, 271, 1185, 462,
	463, 1089, 1137, 464, 1151, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 1186, 475, 1187, 1166, 476, 477, 1076, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 1167, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 1147, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 1077,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 1130, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 1145, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 1192, 572,
	573, 574, 575, 1168, 579, 580, 0, 581, 582, 1063,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 1157, 1158, 1159, 1160, 0, 600,
	0, 592, 593, 594, 1169, 595, 1170, 1087, 596, 597,
	598, 599, 0, 601, 602, 0, 1070, 603, 604, 605,
	607, 608, 606, 609, 1131, 610, 0, 0, 611, 612,
	613, 670, 1154, 1191, 0, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 1067, 0, 0, 0, 0, 0, 0, 0, 1062,
	0, 0, 0, 0, 0, 0, 1060, 1061, 0, 0,
	0, 0, 0, 0, 0, 1093, 0, 0, 1614, 1091,
	1109, 1081, 1082, 1083, 1079, 1080, 1092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 1133, 1097, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 1146, 0, 289,
	1153, 290, 1152, 0, 1163, 291, 292, 293, 294, 295,
	296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298,
	299, 1139, 0, 1120, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129,
	1125, 1124, 1128, 325, 326, 327, 328, 329, 1156, 330,
	1150, 1149, 1069, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 1141, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 1075,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	1164, 1165, 361, 1088, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 1148, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 1161, 1162, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	1171, 0, 1098, 381, 0, 382, 383, 384, 385, 386,
	1134, 1135, 1138, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 1176, 397, 1143, 1144, 0, 1104, 0, 399,
	400, 1178, 1136, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 1172, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 1127, 1126, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 1066, 271, 1185, 462, 463, 1089,
	1137, 464, 1151, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 1166, 476, 477, 1076, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 1167, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 1147, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 1077, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 1130,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 1145, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 1192, 572, 573, 574,
	575, 1168, 579, 580, 0, 581, 582, 1063, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 1157, 1158, 1159, 1160, 0, 600, 0, 592,
	593, 594, 1169, 595, 1170, 1087, 596, 597, 598, 599,
	0, 601, 602, 0, 1070, 603, 604, 605, 607, 608,
	606, 609, 1131, 610, 0, 0, 611, 612, 613, 670,
	1154, 1191, 0, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 1067,
	0, 0, 0, 0, 0, 0, 0, 1062, 0, 0,
	0, 0, 0, 0, 1060, 1061, 0, 0, 0, 0,
	0, 0, 0, 1093, 0, 0, 1605, 1091, 1109, 1081,
	1082, 1083, 1079, 1080, 1092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	1133, 1097, 0, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 1146, 0, 289, 1153, 290,
	1152, 0, 1163, 291, 292, 293, 294, 295, 296, 1099,
	1132, 1064, 297, 1193, 1194, 631, 0, 298, 299, 1139,
	0, 1120, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124,
	1128, 325, 326, 327, 328, 329, 1156, 330, 1150, 1149,
	1069, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 1141, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 1075, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 1164, 1165,
	361, 1088, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 1148, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 1161, 1162, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 1171, 0,
	1098, 381, 0, 382, 383, 384, 385, 386, 1134, 1135,
	1138, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	1176, 397, 1143, 1144, 0, 1104, 0, 399, 400, 1178,
	1136, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 1172, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 1127, 1126, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 1066, 271, 1185, 462, 463, 1089, 1137, 464,
	1151, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	1166, 476, 477, 1076, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 1167, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 1147,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 1077, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 1130, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 1145, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 1192, 572, 573, 574, 575, 1168,
	579, 580, 0, 581, 582, 1063, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	1157, 1158, 1159, 1160, 0, 600, 0, 592, 593, 594,
	1169, 595, 1170, 1087, 596, 597, 598, 599, 0, 601,
	602, 0, 1070, 603, 604, 605, 607, 608, 606, 609,
	1131, 610, 0, 0, 611, 612, 613, 670, 1154, 1191,
	0, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 1067, 0, 0,
	0, 0, 0, 0, 0, 1062, 0, 0, 0, 0,
	0, 0, 1060, 1061, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 1600, 1091, 1109, 1081, 1082, 1083,
	1079, 1080, 1092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 1133, 1097,
	0, 0, 0, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 624, 1146, 0, 289, 1153, 290, 1152, 0,
	1163, 291, 292, 293, 294, 295, 296, 1099, 1132, 1064,
	297, 1193, 1194, 631, 0, 298, 299, 1139, 0, 1120,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 1174, 322,
	323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325,
	326, 327, 328, 329, 1156, 330, 1150, 1149, 1069, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 1141, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 1075, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 1164, 1165, 361, 1088,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 1148,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 1175,
	368, 369, 370, 1161, 1162, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 1171, 0, 1098, 381,
	0, 382, 383, 384, 385, 386, 1134, 1135, 1138, 465,
	1177, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 1176, 397,
	1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	1172, 1181, 415, 416, 1182, 0, 417, 0, 0, 0,
	418, 419, 422, 1127, 1126, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 1186, 475, 1187, 1166, 476,
	477, 1076, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 1167, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 1147, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 1077, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 1130, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	1145, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 1192, 572, 573, 574, 575, 1168, 579, 580,
	0, 581, 582, 1063, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 1157, 1158,
	1159, 1160, 0, 600, 0, 592, 593, 594, 1169, 595,
	1170, 1087, 596, 597, 598, 599, 0, 601, 602, 0,
	1070, 603, 604, 605, 607, 608, 606, 609, 1131, 610,
	0, 0, 611, 612, 613, 670, 1154, 1191, 0, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 1067, 0, 0, 0, 0,
	0, 0, 0, 1062, 0, 0, 0, 0, 0, 0,
	1060, 1061, 0, 0, 0, 0, 0, 0, 0, 1093,
	0, 0, 1512, 1091, 1109, 1081, 1082, 1083, 1079, 1080,
	1092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 1133, 1097, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 1146, 0, 289, 1153, 290, 1152, 0, 1163, 291,
	292, 293, 294, 295, 296, 1099, 1132, 1064, 297, 1193,
	1194, 631, 0, 298, 299, 1139, 0, 1120, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327,
	328, 329, 1156, 330, 1150, 1149, 1069, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 1141, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 1075, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 1164, 1165, 361, 1088, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 1148, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 1161, 1162, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 1171, 0, 1098, 381, 0, 382,
	383, 384, 385, 386, 1511, 1135, 1138, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 1176, 397, 1143, 1144,
	0, 1104, 0, 399, 400, 1178, 1136, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 1172, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 1127, 1126, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 1066, 271,
	1185, 462, 463, 1089, 1137, 464, 1151, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 1166, 476, 477, 1076,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 1167,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 1147, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 1077, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 1130, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 1145, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	1192, 572, 573, 574, 575, 1168, 579, 580, 0, 581,
	582, 1063, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 1157, 1158, 1159, 1160,
	0, 600, 0, 592, 593, 594, 1169, 595, 1170, 1087,
	596, 597, 598, 599, 0, 601, 602, 0, 1070, 603,
	604, 605, 607, 608, 606, 609, 1131, 610, 0, 0,
	611, 612, 613, 670, 1154, 1191, 0, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 1067, 0, 0, 0, 0, 0, 0,
	0, 1062, 0, 0, 0, 0, 0, 0, 1060, 1061,
	0, 0, 0, 0, 0, 0, 0, 1093, 0, 0,
	1506, 1091, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 1133, 1097, 0, 0, 0, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 1146,
	0, 289, 1153, 290, 1152, 0, 1163, 291, 292, 293,
	294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631,
	0, 298, 299, 1139, 0, 1120, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 1174, 322, 323, 324, 1123, 1121,
	1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328, 329,
	1156, 330, 1150, 1149, 1069, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 1141,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 1075, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 1164, 1165, 361, 1088, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 1148, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 1175, 368, 369, 370, 1161,
	1162, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 1171, 0, 1098, 381, 0, 382, 383, 384,
	385, 386, 1505, 1135, 1138, 465, 1177, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 1176, 397, 1143, 1144, 0, 1104,
	0, 399, 400, 1178, 1136, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 1172, 1181, 415, 416,
	1182, 0, 417, 0, 0, 0, 418, 419, 422, 1127,
	1126, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1066, 271, 1185, 462,
	463, 1089, 1137, 464, 1151, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 1186, 475, 1187, 1166, 476, 477, 1076, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 1167, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 1147, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 1077,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 1130, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 1145, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 1192, 572,
	573, 574, 575, 1168, 579, 580, 0, 581, 582, 1063,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 1157, 1158, 1159, 1160, 0, 600,
	0, 592, 593, 594, 1169, 595, 1170, 1087, 596, 597,
	598, 599, 0, 601, 602, 0, 1070, 603, 604, 605,
	607, 608, 606, 609, 1131, 610, 0, 0, 611, 612,
	613, 670, 1154, 1191, 0, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 1067, 0, 0, 0, 0, 0, 0, 0, 1062,
	0, 0, 0, 0, 0, 0, 1060, 1061, 0, 0,
	0, 0, 0, 0, 0, 1093, 0, 0, 1499, 1091,
	1109, 1081, 1082, 1083, 1079, 1080, 1092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 1133, 1097, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 1146, 0, 289,
	1153, 290, 1152, 0, 1163, 291, 292, 293, 294, 295,
	296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298,
	299, 1139, 0, 1120, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129,
	1125, 1124, 1128, 325, 326, 327, 328, 329, 1156, 330,
	1150, 1149, 1069, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 1141, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 1075,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	1164, 1165, 361, 1088, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 1148, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 1161, 1162, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	1171, 0, 1098, 381, 0, 382, 383, 384, 385, 386,
	1134, 1135, 1138, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 1176, 397, 1143, 1144, 0, 1104, 0, 399,
	400, 1178, 1136, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 1172, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 1127, 1126, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 1066, 271, 1185, 462, 463, 1089,
	1137, 464, 1151, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 1166, 476, 477, 1076, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 1167, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 1147, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 1077, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 1130,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 1145, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 1192, 572, 573, 574,
	575, 1168, 579, 580, 0, 581, 582, 1063, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 1157, 1158, 1159, 1160, 0, 600, 0, 592,
	593, 594, 1169, 595, 1170, 1087, 596, 597, 598, 599,
	0, 601, 602, 0, 1070, 603, 604, 605, 607, 608,
	606, 609, 1131, 610, 0, 0, 611, 612, 613, 670,
	1154, 1191, 0, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 1067,
	0, 0, 0, 0, 0, 0, 0, 1062, 0, 0,
	0, 0, 0, 0, 1060, 1061, 0, 0, 0, 0,
	0, 0, 0, 1093, 0, 0, 1319, 1091, 1109, 1081,
	1082, 1083, 1079, 1080, 1092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	1133, 1097, 0, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 1146, 0, 289, 1153, 290,
	1152, 0, 1163, 291, 292, 293, 294, 295, 296, 1099,
	1132, 1064, 297, 1193, 1194, 631, 0, 298, 299, 1139,
	0, 1120, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124,
	1128, 325, 326, 327, 328, 329, 1156, 330, 1150, 1149,
	1069, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 1141, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 1075, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 1164, 1165,
	361, 1088, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 1148, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 1161, 1162, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 1171, 0,
	1098, 381, 0, 382, 383, 384, 385, 386, 1134, 1135,
	1138, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	1176, 397, 1143, 1144, 0, 1104, 0, 399, 400, 1178,
	1136, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 1172, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 1127, 1126, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 1066, 271, 1185, 462, 463, 1089, 1137, 464,
	1151, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	1166, 476, 477, 1076, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 1167, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 1147,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 1077, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 1130, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 1145, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 1192, 572, 573, 574, 575, 1168,
	579, 580, 0, 581, 582, 1063, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	1157, 1158, 1159, 1160, 0, 600, 0, 592, 593, 594,
	1169, 595, 1170, 1087, 596, 597, 598, 599, 0, 601,
	602, 0, 1070, 603, 604, 605, 607, 608, 606, 609,
	1131, 610, 0, 0, 611, 612, 613, 670, 1154, 1191,
	0, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 1067, 0, 0,
	0, 0, 0, 0, 0, 1062, 0, 0, 0, 0,
	0, 0, 1060, 1061, 1109, 1081, 1082, 1083, 1079, 1080,
	1092, 1093, 0, 0, 0, 1091, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 1133, 1097, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 1146, 0, 289, 1153, 290, 1152, 0, 1163, 291,
	292, 293, 294, 295, 296, 1099, 1132, 1064, 297, 1193,
	1194, 631, 0, 298, 299, 1139, 0, 1120, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327,
	328, 329, 1156, 330, 1150, 1149, 1069, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 1141, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 1075, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 1164, 1165, 361, 1088, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 1148, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 1161, 1162, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 1171, 0, 1098, 381, 0, 382,
	383, 384, 385, 386, 1134, 1135, 1138, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 1176, 397, 1143, 1144,
	0, 1104, 0, 399, 400, 1178, 1136, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 1172, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 1127, 1126, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 1066, 271,
	1185, 462, 463, 1089, 1137, 464, 1151, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 1166, 476, 477, 1076,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 1167,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 1147, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 1077, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 1130, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 1145, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	1192, 572, 573, 574, 575, 1168, 579, 580, 0, 581,
	582, 1063, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 1157, 1158, 1159, 1160,
	0, 600, 0, 592, 593, 594, 1169, 595, 1170, 1087,
	596, 597, 598, 599, 0, 601, 602, 0, 1070, 603,
	604, 605, 607, 608, 606, 609, 1131, 610, 0, 0,
	611, 612, 613, 670, 1154, 1191, 0, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 1067, 0, 0, 0, 0, 0, 0,
	0, 1062, 0, 0, 0, 0, 0, 0, 1060, 1061,
	1109, 1081, 1082, 1083, 1079, 1080, 1092, 1093, 0, 0,
	0, 1091, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 1133, 1097, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 1146, 0, 289,
	1153, 290, 1152, 0, 1163, 291, 292, 293, 294, 295,
	296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298,
	299, 1139, 0, 1120, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 4624, 1123, 1121, 1122, 1129,
	1125, 1124, 1128, 325, 326, 327, 328, 329, 1156, 330,
	1150, 1149, 1069, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 1141, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 1075,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	1164, 1165, 361, 1088, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 1148, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 1161, 1162, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	1171, 0, 1098, 381, 0, 382, 383, 384, 385, 386,
	1134, 1135, 1138, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 1176, 397, 1143, 1144, 0, 1104, 0, 399,
	400, 1178, 1136, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 1172, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 1127, 1126, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 1066, 271, 1185, 462, 463, 1089,
	1137, 464, 1151, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 1166, 476, 477, 1076, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 1167, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 1147, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 1077, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 1130,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 1145, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 1192, 572, 573, 574,
	575, 1168, 579, 580, 0, 581, 582, 1063, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 1157, 1158, 1159, 1160, 0, 600, 0, 592,
	593, 594, 1169, 595, 1170, 1087, 596, 597, 598, 599,
	0, 4623, 602, 0, 1070, 603, 604, 605, 607, 608,
	606, 609, 1131, 610, 0, 0, 611, 612, 613, 670,
	1154, 1191, 0, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 1067,
	0, 0, 0, 0, 0, 0, 0, 1062, 0, 0,
	0, 0, 0, 0, 1060, 1061, 1109, 1081, 1082, 1083,
	1079, 1080, 1092, 1093, 0, 0, 0, 1091, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 1133, 1097,
	0, 0, 0, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 4622, 1146, 0, 289, 1153, 290, 1152, 0,
	1163, 291, 292, 293, 294, 295, 296, 1099, 1132, 1064,
	297, 1193, 1194, 631, 0, 298, 299, 1139, 0, 1120,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 1174, 322,
	323, 4624, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325,
	326, 327, 328, 329, 1156, 330, 1150, 1149, 1069, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 1141, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 1075, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 1164, 1165, 361, 1088,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 1148,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 1175,
	368, 369, 370, 1161, 1162, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 1171, 0, 1098, 381,
	0, 382, 383, 384, 385, 386, 1134, 1135, 1138, 465,
	1177, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 1176, 397,
	1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	1172, 1181, 415, 416, 1182, 0, 417, 0, 0, 0,
	418, 419, 422, 1127, 1126, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	1066, 271, 1185, 462, 463, 1089, 1137, 464, 1151, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 1186, 475, 1187, 1166, 476,
	477, 1076, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 1167, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 1147, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 1077, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 1130, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	1145, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 1192, 572, 573, 574, 575, 1168, 579, 580,
	0, 581, 582, 1063, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 1157, 1158,
	1159, 1160, 0, 600, 0, 592, 593, 594, 1169, 595,
	1170, 1087, 596, 597, 598, 599, 0, 4623, 602, 0,
	1070, 603, 604, 605, 607, 608, 606, 609, 1131, 610,
	0, 0, 611, 612, 613, 670, 1154, 1191, 0, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 1067, 0, 0, 0, 0,
	0, 0, 0, 1062, 0, 0, 0, 0, 0, 0,
	1060, 1061, 1109, 1081, 1082, 1083, 1079, 1080, 1092, 1093,
	0, 0, 0, 1091, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 1133, 1097, 0, 0, 0, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 1146,
	0, 289, 1153, 290, 1152, 0, 1163, 291, 292, 293,
	294, 295, 296, 1099, 1132, 1064, 297, 1193, 1194, 631,
	0, 298, 299, 1139, 0, 1120, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 1174, 322, 4261, 324, 1123, 1121,
	1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328, 329,
	1156, 330, 1150, 1149, 1069, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 1141,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 1075, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 1164, 1165, 361, 1088, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 1148, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 1175, 368, 369, 370, 1161,
	1162, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 1171, 0, 4262, 381, 0, 382, 383, 384,
	385, 386, 1134, 1135, 1138, 465, 1177, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 1176, 397, 1143, 1144, 0, 1104,
	0, 399, 400, 1178, 1136, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 1172, 1181, 415, 416,
	1182, 0, 417, 0, 0, 0, 418, 419, 422, 1127,
	1126, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 1066, 271, 1185, 462,
	463, 1089, 1137, 464, 1151, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 1186, 475, 1187, 1166, 476, 477, 1076, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 1167, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 1147, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 1188, 527, 528, 529, 4260, 531, 1077,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 1130, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 1145, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 1192, 572,
	573, 574, 575, 1168, 579, 580, 0, 581, 582, 1063,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 1157, 1158, 1159, 1160, 0, 600,
	0, 592, 593, 594, 1169, 595, 1170, 1087, 596, 597,
	598, 599, 0, 601, 602, 0, 1070, 603, 604, 605,
	607, 608, 606, 609, 1131, 610, 0, 0, 611, 612,
	613, 670, 1154, 1191, 0, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 1067, 0, 0, 0, 0, 0, 0, 0, 1062,
	0, 0, 0, 0, 0, 0, 1060, 1061, 1109, 1081,
	1082, 1083, 3115, 3116, 1092, 1093, 0, 0, 0, 1091,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	1133, 1097, 0, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 1146, 0, 289, 1153, 290,
	1152, 0, 1163, 291, 292, 293, 294, 295, 296, 1099,
	1132, 1064, 297, 1193, 1194, 631, 0, 298, 299, 1139,
	0, 1120, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124,
	1128, 325, 326, 327, 328, 329, 1156, 330, 1150, 1149,
	1069, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 1141, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 1075, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 1164, 1165,
	361, 1088, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 1148, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 1161, 1162, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 1171, 0,
	1098, 381, 0, 382, 383, 384, 385, 386, 1134, 1135,
	1138, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	1176, 397, 1143, 1144, 0, 1104, 0, 399, 400, 1178,
	1136, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 1172, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 1127, 1126, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 1066, 271, 1185, 462, 463, 1089, 1137, 464,
	1151, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	1166, 476, 477, 1076, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 1167, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 1147,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 1077, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 1130, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 1145, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 1192, 572, 573, 574, 575, 1168,
	579, 580, 0, 581, 582, 1063, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	1157, 1158, 1159, 1160, 0, 600, 0, 592, 593, 594,
	1169, 595, 1170, 1087, 596, 597, 598, 599, 0, 601,
	602, 0, 1070, 603, 604, 605, 607, 608, 606, 609,
	1131, 610, 0, 0, 611, 612, 613, 670, 1154, 1191,
	0, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 1067, 0, 0,
	0, 0, 0, 0, 0, 1062, 0, 0, 0, 0,
	0, 0, 1060, 1061, 1109, 1081, 1082, 1083, 3113, 3114,
	1092, 1093, 0, 0, 0, 1091, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 1133, 1097, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 1146, 0, 289, 1153, 290, 1152, 0, 1163, 291,
	292, 293, 294, 295, 296, 1099, 1132, 1064, 297, 1193,
	1194, 631, 0, 298, 299, 1139, 0, 1120, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327,
	328, 329, 1156, 330, 1150, 1149, 1069, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 1141, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 1075, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 1164, 1165, 361, 1088, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 1148, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 1161, 1162, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 1171, 0, 1098, 381, 0, 382,
	383, 384, 385, 386, 1134, 1135, 1138, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 1176, 397, 1143, 1144,
	0, 1104, 0, 399, 400, 1178, 1136, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 1172, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 1127, 1126, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 1066, 271,
	1185, 462, 463, 1089, 1137, 464, 1151, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 1166, 476, 477, 1076,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 1167,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 1147, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 1077, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 1130, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 1145, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	1192, 572, 573, 574, 575, 1168, 579, 580, 0, 581,
	582, 1063, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 1157, 1158, 1159, 1160,
	0, 600, 0, 592, 593, 594, 1169, 595, 1170, 1087,
	596, 597, 598, 599, 0, 601, 602, 0, 1070, 603,
	604, 605, 607, 608, 606, 609, 1131, 610, 0, 0,
	611, 612, 613, 670, 1154, 1191, 0, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 1067, 0, 0, 0, 0, 0, 0,
	0, 1062, 0, 0, 0, 0, 0, 0, 1060, 1061,
	1109, 1081, 1082, 1083, 1079, 1080, 1092, 1093, 0, 0,
	0, 1091, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 1133, 1097, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 1146, 0, 289,
	1153, 290, 1152, 0, 1163, 291, 292, 293, 294, 295,
	296, 1099, 1132, 1064, 297, 1193, 1194, 631, 0, 298,
	299, 1139, 0, 1120, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129,
	1125, 1124, 1128, 325, 326, 327, 328, 329, 1156, 330,
	1150, 1149, 1069, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 1141, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 1075,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	1164, 1165, 361, 1088, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 1148, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 1161, 1162, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	1171, 0, 1098, 381, 0, 382, 383, 384, 385, 386,
	1134, 1135, 1138, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 1176, 397, 1143, 1144, 0, 1104, 0, 399,
	400, 1178, 1136, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 1172, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 1127, 1126, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 1066, 271, 1185, 462, 463, 1089,
	1137, 464, 1151, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 1166, 476, 477, 1076, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 1167, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 1147, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 1077, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 1130,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 1145, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 1192, 572, 573, 574,
	575, 1168, 579, 580, 0, 581, 582, 1063, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 1157, 1158, 1159, 1160, 0, 600, 0, 592,
	593, 594, 1169, 595, 1170, 1087, 596, 597, 598, 599,
	0, 601, 602, 0, 1070, 603, 604, 605, 607, 608,
	606, 609, 1131, 610, 0, 0, 611, 612, 613, 670,
	1154, 1191, 0, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 1067,
	0, 0, 0, 0, 0, 0, 0, 1062, 0, 0,
	0, 0, 0, 0, 2399, 2400, 1109, 1081, 1082, 1083,
	1079, 1080, 1092, 1093, 0, 0, 0, 1091, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 1133, 1097,
	0, 0, 0, 281, 282, 1173, 283, 284, 285, 286,
	287, 288, 624, 1146, 0, 289, 1153, 290, 1152, 0,
	1163, 291, 292, 293, 294, 295, 296, 1099, 1132, 0,
	297, 1193, 1194, 631, 0, 298, 299, 1139, 0, 1120,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 1174, 322,
	323, 324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325,
	326, 327, 328, 329, 1156, 330, 1150, 1149, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 1141, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 1075, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 1164, 1165, 361, 1088,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 1148,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 1175,
	368, 369, 370, 1161, 1162, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 1171, 0, 1098, 381,
	0, 382, 383, 384, 385, 386, 1134, 1135, 1138, 465,
	1177, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 1176, 397,
	1143, 1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179,
	401, 402, 403, 1180, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	1172, 1181, 415, 416, 1182, 0, 417, 0, 0, 0,
	418, 419, 422, 1127, 1126, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 1183, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 1184, 461, 451,
	0, 271, 1185, 462, 463, 1089, 1137, 464, 1151, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 1186, 475, 1187, 1166, 476,
	477, 1076, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 1167, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 1147, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 1188, 527, 528,
	529, 530, 531, 1077, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 1130, 554, 555, 537, 538,
	556, 557, 1189, 558, 559, 560, 561, 562, 563, 564,
	1145, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 1192, 572, 573, 574, 575, 1168, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 1157, 1158,
	1159, 1160, 0, 600, 0, 592, 593, 594, 1169, 595,
	1170, 1087, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 1131, 610,
	0, 0, 611, 612, 613, 670, 1154, 1191, 0, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 1109, 1081, 1082, 1083, 1079,
	1080, 1092, 0, 2656, 0, 0, 0, 0, 0, 0,
	2654, 2655, 272, 274, 273, 275, 276, 277, 278, 1093,
	279, 280, 0, 1091, 0, 0, 0, 1133, 1097, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 1146, 0, 289, 1153, 290, 1152, 0, 1163,
	291, 292, 293, 294, 295, 296, 1099, 1132, 0, 297,
	1193, 1194, 631, 0, 298, 299, 1139, 0, 1120, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326,
	327, 328, 329, 1156, 330, 1150, 1149, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 1141, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 1075, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 1164, 1165, 361, 1088, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 1148, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 1161, 1162, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 1171, 0, 1098, 381, 0,
	382, 383, 384, 385, 386, 1134, 1135, 1138, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 1176, 397, 1143,
	1144, 0, 1104, 0, 399, 400, 1178, 1136, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 1172,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 1127, 1126, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 0,
	271, 1185, 462, 463, 1089, 1137, 464, 1151, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 1166, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	1167, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 1147, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 3108, 3109, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 1130, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 1145,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 1192, 572, 573, 574, 575, 1168, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 1157, 1158, 1159,
	1160, 0, 600, 0, 592, 593, 594, 1169, 595, 1170,
	1087, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 1131, 610, 0,
	0, 611, 612, 613, 670, 1154, 1191, 0, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 1109, 1081, 1082, 1083, 1079, 1080,
	1092, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	2094, 272, 274, 273, 275, 276, 277, 278, 1093, 279,
	280, 0, 1091, 0, 0, 0, 1133, 1097, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	0, 1146, 0, 289, 1153, 290, 1152, 0, 1163, 291,
	292, 293, 294, 295, 296, 1099, 1132, 1064, 297, 1193,
	1194, 631, 0, 298, 299, 1139, 0, 1120, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 4624,
	1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326, 327,
	328, 329, 1156, 330, 1150, 1149, 1069, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 1141, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 1075, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 1164, 1165, 361, 1088, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 1148, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 1161, 1162, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 1171, 0, 1098, 381, 0, 382,
	383, 384, 385, 386, 1134, 1135, 1138, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 1176, 397, 1143, 1144,
	0, 1104, 0, 399, 400, 0, 1136, 0, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 1172, 1181,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 1127, 1126, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 1066, 271,
	0, 462, 463, 1089, 1137, 464, 1151, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 1166, 476, 477, 1076,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 1167,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 1147, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 1077, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 1130, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 1145, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	1192, 572, 573, 574, 575, 1168, 579, 580, 0, 581,
	582, 1063, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 1157, 1158, 1159, 1160,
	0, 600, 0, 592, 593, 594, 1169, 595, 1170, 1087,
	596, 597, 598, 599, 0, 4623, 602, 0, 1070, 603,
	604, 605, 607, 608, 606, 609, 1131, 610, 0, 0,
	611, 612, 613, 670, 1154, 1191, 0, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 1231, 0, 0, 1060, 1061,
	0, 0, 0, 0, 0, 0, 0, 1093, 0, 0,
	0, 1091, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 1133, 0, 0,
	0, 0, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 1132, 0, 297,
	629, 630, 631, 0, 298, 299, 1139, 0, 1120, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 1164, 1165, 361, 0, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 1171, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 1134, 1135, 1138, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 1176, 397, 646,
	647, 0, 648, 0, 399, 400, 1178, 1136, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 1217, 411, 413, 412, 0, 414, 1172,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 1127, 1126, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 0,
	271, 1185, 462, 463, 0, 1137, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 1223, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 1166, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	1167, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 660, 1225, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 231, 549, 550,
	548, 551, 552, 553, 1130, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 1168, 579, 580, 0,
	581, 582, 0, 578, 569, 233, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 1169, 595, 1170,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 1131, 610, 0,
	0, 611, 612, 613, 1589, 671, 672, 0, 615, 614,
	616, 673, 1231, 617, 0, 0, 0, 225, 618, 619,
	674, 620, 621, 622, 0, 0, 226, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 1133, 0, 1221, 0, 1934, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 1132, 0, 297, 629, 630, 631,
	0, 298, 299, 1139, 0, 1120, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 1174, 322, 323, 324, 1123, 1121,
	1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 1164, 1165, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 1175, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 1171, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 1134, 1135, 1138, 465, 1177, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 1176, 397, 646, 647, 0, 648,
	0, 399, 400, 1178, 1136, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	1217, 411, 413, 412, 0, 414, 1172, 1181, 415, 416,
	1182, 0, 417, 0, 0, 0, 418, 419, 422, 1127,
	1126, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 0, 271, 1185, 462,
	463, 0, 1137, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 1223, 470, 471, 472, 0, 0, 473, 474,
	653, 1186, 475, 1187, 1166, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 1167, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 660,
	1225, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 231, 549, 550, 548, 551, 552,
	553, 1130, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 1168, 579, 580, 0, 581, 582, 0,
	578, 569, 233, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 1169, 595, 1170, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 1131, 610, 0, 0, 611, 612,
	613, 1589, 671, 672, 0, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 225, 618, 619, 674, 620, 621,
	622, 0, 0, 226, 0, 0, 0, 3272, 0, 1231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1221, 0, 1934, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 1133, 0, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 1132, 0, 297, 629, 630, 631, 0, 298, 299,
	1139, 0, 1120, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125,
	1124, 1128, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 1164,
	1165, 361, 0, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 1171,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 1134,
	1135, 1138, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 1176, 397, 646, 647, 0, 648, 0, 399, 400,
	1178, 1136, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 1217, 411, 413,
	412, 0, 414, 1172, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 1127, 1126, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 0, 271, 1185, 462, 463, 0, 1137,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 1223,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 1166, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 1167, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 660, 1225, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 1130, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	1168, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 1169, 595, 1170, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 1131, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 0, 615, 614, 616, 673, 0, 617, 0, 1213,
	0, 1231, 618, 619, 674, 620, 621, 622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	1221, 0, 1219, 1133, 0, 0, 0, 0, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 1132, 0, 297, 629, 630, 631, 0,
	298, 299, 1139, 0, 1120, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 1174, 322, 323, 324, 1123, 1121, 1122,
	1129, 1125, 1124, 1128, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 1164, 1165, 361, 0, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 1175, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 1171, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 1134, 1135, 1138, 465, 1177, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 1176, 397, 646, 647, 0, 648, 0,
	399, 400, 1178, 1136, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 1217,
	411, 413, 412, 0, 414, 1172, 1181, 415, 416, 1182,
	0, 417, 0, 0, 0, 418, 419, 422, 1127, 1126,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 0, 271, 1185, 462, 463,
	0, 1137, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 1223, 470, 471, 472, 0, 0, 473, 474, 653,
	1186, 475, 1187, 1166, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 1167, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 660, 1225,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	1130, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 1168, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 1169, 595, 1170, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 1131, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 615, 614, 616, 673, 1231, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	1133, 0, 1221, 0, 1219, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	1132, 0, 297, 629, 630, 631, 0, 298, 299, 1139,
	0, 1120, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 1123, 1121, 1122, 1129, 1125, 1124,
	1128, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 1164, 1165,
	361, 0, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 1171, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 1134, 1135,
	1138, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	1176, 397, 646, 647, 0, 648, 0, 399, 400, 1178,
	1136, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 1217, 411, 413, 412,
	0, 414, 1172, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 1127, 1126, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 0, 271, 1185, 462, 463, 0, 1137, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 1223, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	1166, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 1167, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 660, 1225, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 1130, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 1168,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	1169, 595, 1170, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	1131, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 1231, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 1133, 0, 1221,
	0, 1219, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 1132, 0, 297,
	629, 630, 631, 0, 298, 299, 1139, 0, 1120, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 1164, 1165, 361, 0, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 1171, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 1134, 1135, 1138, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 1176, 397, 646,
	647, 0, 648, 0, 399, 400, 1178, 1136, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 1172,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 1127, 1126, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 0,
	271, 1185, 462, 463, 0, 1137, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 1166, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	1167, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 1130, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 1168, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 1169, 595, 1170,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 1131, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 0, 615, 614,
	616, 673, 1231, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 1133, 0, 0, 0, 4087, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 1132, 0, 297, 629, 630, 631,
	0, 298, 299, 1139, 0, 1120, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 1174, 322, 323, 324, 1123, 1121,
	1122, 1129, 1125, 1124, 1128, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 1164, 1165, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 1175, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 1171, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 1134, 1135, 1138, 465, 1177, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 1176, 397, 646, 647, 0, 648,
	0, 399, 400, 1178, 1136, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 1172, 1181, 415, 416,
	1182, 0, 417, 0, 0, 0, 418, 419, 422, 1127,
	1126, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 0, 271, 1185, 462,
	463, 0, 1137, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 1186, 475, 1187, 1166, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 1167, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 660,
	1225, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 1130, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 1168, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 1169, 595, 1170, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 1131, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 0, 615, 614, 616, 673, 0,
	617, 266, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 2503, 2504, 2505, 2522, 2523, 2524, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 2525, 0, 623, 0, 1832, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 1817, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 2515, 0, 308, 309, 310, 307, 311,
	0, 312, 2511, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 0, 0, 2516, 2517, 2518,
	2519, 362, 363, 364, 638, 0, 0, 2510, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 2520, 2521, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 2513, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 0, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	2514, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 1816, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	0, 0, 1053, 0, 1312, 2500, 2501, 2502, 2526, 2512,
	2506, 0, 2508, 2509, 2507, 2494, 2495, 2496, 2497, 2498,
	2499, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 1317, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 1176, 397, 646, 647,
	0, 648, 0, 399, 400, 1178, 649, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 0, 0,
	1185, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 231, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 233, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 1589, 671, 672, 0, 615, 614, 616,
	673, 1586, 617, 1312, 0, 0, 225, 618, 619, 674,
	620, 621, 622, 0, 0, 226, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 187, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 1317, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 1176, 397, 646, 647, 0,
	648, 0, 399, 400, 1178, 649, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 0, 0, 1185,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 231, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 233, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 1589, 671, 672, 0, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 225, 618, 619, 674, 620,
	621, 622, 1312, 1311, 226, 0, 0, 0, 1309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 187, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 1317, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 1174, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 1175, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 1177, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 0, 394,
	395, 396, 398, 0, 1176, 397, 646, 647, 0, 648,
	0, 399, 400, 1178, 649, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 1181, 415, 416,
	1182, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 0, 0, 1185, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 1186, 475, 1187, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 0, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 1312, 1311, 0, 0, 0, 0, 1309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 1611, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 1317, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 1174, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 1175, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 1177, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 1176, 397, 646, 647, 0, 648, 0,
	399, 400, 1178, 649, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 1181, 415, 416, 1182,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 0, 0, 1185, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	1186, 475, 1187, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	1312, 1311, 0, 0, 0, 0, 1309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 3565, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 1317, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 1176, 397, 646, 647, 0, 648, 0, 399,
	400, 1178, 649, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 0, 0, 1185, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 2279, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 0, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 1312,
	2193, 0, 0, 0, 0, 2194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 1611, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 1317, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 1176, 397, 646, 647, 0, 648, 0, 399, 400,
	1178, 649, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 2192, 413,
	412, 0, 414, 650, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 0, 0, 1185, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 0, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 1312, 1311,
	0, 0, 0, 0, 1309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 1611, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 1317, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	1176, 397, 646, 647, 0, 648, 0, 399, 400, 1178,
	649, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 0, 0, 1185, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 1231, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 1133, 0, 0,
	0, 1595, 281, 282, 1173, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 1132, 0, 297,
	629, 630, 631, 0, 298, 299, 1139, 0, 1120, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 1174, 322, 323,
	324, 1123, 1121, 1122, 1129, 1125, 1124, 1128, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 1164, 1165, 361, 0, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 1175, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 1171, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 1134, 1135, 1138, 465, 1177,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 1176, 397, 646,
	647, 0, 648, 0, 399, 400, 1178, 1136, 1179, 401,
	402, 403, 1180, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 1172,
	1181, 415, 416, 1182, 0, 417, 0, 0, 0, 418,
	419, 422, 1127, 1126, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 1183, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 1184, 461, 451, 0,
	271, 1185, 462, 463, 0, 1137, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 1186, 475, 1187, 1166, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	1167, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 1188, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 1130, 554, 555, 537, 538, 556,
	557, 1189, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 1168, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 1169, 595, 1170,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 1131, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 0, 615, 614,
	616, 673, 1053, 617, 266, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 0, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 0,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 231, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 233, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 1589, 671, 672, 0, 615, 614, 616,
	673, 266, 617, 0, 0, 0, 225, 618, 619, 674,
	620, 621, 622, 0, 0, 226, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 187, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 271, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 615, 614, 616, 673, 0, 617,
	266, 3021, 0, 0, 618, 619, 674, 620, 621, 622,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 1948, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 0, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 0, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 0, 615, 614, 616, 673, 266, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 4789, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 271, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 266,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 3515, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 271, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 266, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	1583, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 0, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 0, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 615, 614, 616, 673, 266, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 3009, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 0, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 0, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 266, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 3673, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 0,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	0, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 0, 615, 614,
	616, 673, 892, 617, 797, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 2270, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	804, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 890, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 271,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 802, 583, 584, 585, 586, 587,
	803, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 797, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 272, 274, 273, 275, 276, 277, 278,
	2015, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	807, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 804, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 271, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 2014, 544, 545, 546, 547, 0, 2016,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 802, 583, 584, 585,
	586, 587, 803, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 2013, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 797, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 272, 274, 273, 275, 276,
	277, 278, 1966, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 807, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 804, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 271, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 1965, 544, 545, 546, 547,
	0, 1967, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 802, 583,
	584, 585, 586, 587, 803, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 1964, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 795, 617, 797, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 807, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 804, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 271, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 802, 583, 584,
	585, 586, 587, 803, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 1988,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 0, 0, 807, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 0, 1994, 0, 289, 1984,
	290, 2000, 0, 2007, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 2010, 2011, 0, 0, 298, 299,
	0, 0, 1317, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 1156, 330, 1998,
	1997, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 1141, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 0, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 0, 362,
	363, 364, 1996, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 2005, 2006, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 0,
	0, 0, 381, 0, 382, 383, 384, 385, 386, 0,
	0, 0, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 1176, 397, 1991, 1992, 0, 1987, 0, 399, 400,
	1178, 0, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 0, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 0, 0, 1185, 462, 463, 0, 0,
	464, 1999, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 0, 1186, 475,
	1187, 0, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 1981, 488, 489, 490,
	1982, 491, 492, 493, 0, 494, 0, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	1995, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 0, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 1993, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 2009, 572, 573, 574, 575,
	0, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 2001, 2002, 2003, 2004, 0, 600, 0, 592, 593,
	594, 0, 595, 0, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 0, 1985,
	2008, 0, 615, 614, 616, 0, 0, 617, 0, 0,
	797, 0, 618, 619, 0, 620, 621, 622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 1975, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 804, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 271, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	802, 583, 584, 585, 586, 587, 803, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 797, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 807, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 804, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 271, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 2313, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 2314,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 802, 583, 584, 585, 586, 587, 803, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	2315, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 0, 615, 614, 616, 673, 2059,
	617, 1312, 2026, 0, 0, 618, 619, 674, 620, 621,
	622, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 807, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 1317, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 1174, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 2023, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 1175, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 1177, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 1176, 397, 646, 647, 0, 648, 0,
	399, 400, 1178, 649, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 1181, 415, 416, 1182,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 0, 0, 1185, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	1186, 475, 1187, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	2024, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 615, 614, 616, 673, 2020, 617,
	1312, 2026, 0, 0, 618, 619, 674, 620, 621, 622,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 1317, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 2023, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 1176, 397, 646, 647, 0, 648, 0, 399,
	400, 1178, 649, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 0, 0, 1185, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 2024,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 0, 615, 614, 616, 673, 0, 617, 1312,
	2026, 0, 0, 618, 619, 674, 620, 621, 622, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 1173, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 1317, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 1174, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 2023, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 1175, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 1177, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 1176, 397, 646, 647, 0, 648, 0, 399, 400,
	1178, 649, 1179, 401, 402, 403, 1180, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 1181, 415, 416, 1182, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 1183, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	1184, 461, 451, 0, 0, 1185, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 1186, 475,
	1187, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	1188, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 2024, 554,
	555, 537, 538, 556, 557, 1189, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 0, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 1312, 1311,
	0, 0, 0, 0, 1309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 1173, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 1317, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	1174, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 1175, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 1177, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	1176, 397, 646, 647, 0, 648, 0, 399, 400, 1178,
	649, 1179, 401, 402, 403, 1180, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 1181, 415, 416, 1182, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 1183, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 1184,
	461, 451, 0, 0, 1185, 462, 463, 3866, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 1186, 475, 1187,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 1188,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 1189, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 1312, 1311, 0,
	0, 0, 0, 1309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 1173, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	1317, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 1174,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	1175, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 1177, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 0, 394, 395, 396, 398, 0, 1176,
	397, 646, 647, 0, 648, 0, 399, 400, 1178, 649,
	1179, 401, 402, 403, 1180, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 1181, 415, 416, 1182, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 1183, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 1184, 461,
	451, 0, 0, 1185, 462, 463, 3480, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 1186, 475, 1187, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 1188, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 1189, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 266,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 271, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 0, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 1639, 0,
	1312, 1311, 0, 0, 0, 0, 1309, 0, 0, 0,
	0, 0, 0, 0, 0, 807, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 1173,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 1317, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 1174, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 269, 0, 0, 0, 0, 0,
	1638, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 1175, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 1177, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 1176, 397, 646, 647, 0, 648, 0, 399,
	400, 1178, 649, 1179, 401, 402, 403, 1180, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 1181, 415, 416, 1182, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 1183, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 1184, 461, 451, 0, 0, 1185, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 1186,
	475, 1187, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 1637,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 1188, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 1636, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 1189, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 0, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 1557,
	0, 1312, 1311, 0, 0, 0, 0, 1309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 1317, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 1174, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 1175, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 1556, 644, 645, 465, 1177, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 1176, 397, 646, 647, 0, 648, 0,
	399, 400, 1178, 649, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 1181, 415, 416, 1182,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 0, 0, 1185, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	1186, 475, 1187, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	1517, 0, 1312, 1311, 0, 0, 0, 0, 1309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 1317, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 1174, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 1175, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 1177, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 0, 394,
	395, 396, 398, 0, 1176, 397, 646, 647, 0, 648,
	0, 399, 400, 1178, 649, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 1181, 415, 416,
	1182, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 0, 0, 1185, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 1186, 475, 1187, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 0, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 1484, 0, 1312, 1311, 0, 0, 0, 0, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 1317, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 1483, 644, 645, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 1176, 397, 646, 647, 0,
	648, 0, 399, 400, 1178, 649, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 0, 0, 1185,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 1306, 0, 1312, 1311, 0, 0, 0, 0,
	1309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 1173, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 1317, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 1174, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 1175, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 1305, 644, 645, 465, 1177, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 1176, 397, 646, 647,
	0, 648, 0, 399, 400, 1178, 649, 1179, 401, 402,
	403, 1180, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 1181,
	415, 416, 1182, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 1183, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 1184, 461, 451, 0, 0,
	1185, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 1186, 475, 1187, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 1188, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	1189, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 0, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 1312, 1311, 0, 0, 0, 0, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 1317, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 1176, 397, 646, 647, 0,
	648, 0, 399, 400, 1178, 649, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 0, 0, 1185,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	0, 617, 1312, 2026, 0, 0, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 1173, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 1317, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 1174, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 2066, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 1175, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 1177, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 0, 394,
	395, 396, 398, 0, 1176, 397, 646, 647, 0, 648,
	0, 399, 400, 1178, 649, 1179, 401, 402, 403, 1180,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 1181, 415, 416,
	1182, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	1183, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 1184, 461, 451, 0, 0, 1185, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 1186, 475, 1187, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 1188, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 1189, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 0, 615, 614, 616, 673, 0,
	617, 1312, 1311, 0, 0, 618, 619, 674, 620, 621,
	622, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	1173, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 1317, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 1174, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 1175, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 1177, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 1176, 397, 646, 647, 0, 648, 0,
	399, 400, 1178, 649, 1179, 401, 402, 403, 1180, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 1181, 415, 416, 1182,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 1183,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 1184, 461, 451, 0, 0, 1185, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	1186, 475, 1187, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 1188, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 1189, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 1312, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 1173, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 1317, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 1174, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 1175, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 1177, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 1176, 397, 646, 647, 0,
	648, 0, 399, 400, 1178, 649, 1179, 401, 402, 403,
	1180, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 1181, 415,
	416, 1182, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 1183, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 1184, 461, 451, 0, 0, 1185,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 1186, 475, 1187, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 1188, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 1189,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 266, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 2825, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 2822, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 2829, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 3034,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 2828, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 3031, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 3033, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 3030, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	0, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 2827, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 3032,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 266, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 2825, 298, 299, 632, 0,
	0, 2819, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 2822, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 2829, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 0, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 2828, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 2818, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 0, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 0, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 2827, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 2826, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 0,
	615, 614, 616, 673, 1715, 617, 266, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	1714, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 1713, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 271, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 1712,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 1710, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 1711,
	614, 616, 673, 1459, 617, 266, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 1461, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	271, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 1223, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 0, 615, 614,
	616, 673, 1456, 617, 266, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 1458, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 271,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 1223, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 0, 615, 614, 616,
	673, 1363, 617, 266, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 1365, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 271, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 1223, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	706, 617, 266, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 705, 277, 278, 695, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	698, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 0, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	699, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 0, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 0, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 700, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 0, 615, 614, 616, 673, 694,
	617, 266, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 695, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 698,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 0, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 699,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 0, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 700, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 266, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	272, 274, 273, 275, 276, 277, 278, 695, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 698, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 0, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 699, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 0, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 700, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 266, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 272, 274, 273, 275, 276, 277, 278, 695,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 698, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 0,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 3876, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	0, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 700, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 266, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 271, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 1223, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 266,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	3428, 461, 451, 0, 271, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 0, 615, 614, 616, 673, 2979, 617, 266, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 2978, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 271, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 2285, 617, 266, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 271, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 266,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 271, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 2226,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 0, 615, 614, 616, 673, 2233, 617, 266, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 2232, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 271, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 2219, 617, 266, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 2221, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 271, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 266,
	615, 614, 616, 673, 0, 617, 0, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 269, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 2186,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 270, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 271, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 1223,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 0, 615, 614, 616, 673, 1561, 617, 266, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 1560, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 271, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 1476, 617, 266, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 269, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 270, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 271, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 0,
	615, 614, 616, 673, 1469, 617, 266, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 1471, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 271, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 615,
	614, 616, 673, 1296, 617, 266, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 269,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 1295, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 270, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	271, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 0, 615, 614,
	616, 673, 1286, 617, 266, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 1285, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 271,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 0, 615, 614, 616,
	673, 1283, 617, 266, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 269, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 1282, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 270,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 271, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	1278, 617, 266, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 1277, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 271, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 0, 615, 614, 616, 673, 676,
	617, 266, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 269, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 270, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 271, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 615, 614, 616, 673, 257, 617,
	266, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 271, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 266, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 271, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 266, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 698, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 0, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 699, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 0,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 700, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 266, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 2322, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 271, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 266, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 2320, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 269, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 270, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 271, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	266, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 2318, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 269, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 270, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 271, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 266, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 269, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 2239, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 270, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 271, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 266, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 269, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 2045, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	270, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 271,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 266, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	269, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 2039, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 270, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 271, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 615,
	614, 616, 673, 879, 617, 266, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 0,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 878, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	0, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 877, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 266, 615, 614,
	616, 673, 0, 617, 0, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 3034, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 643, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 0, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 0, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 4160, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 0,
	615, 614, 616, 673, 763, 617, 266, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 1333, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 1331, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	0, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 764, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 0, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 760, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 1334, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 759, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 615,
	614, 616, 673, 763, 617, 266, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 1333, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 1331, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 0,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 764, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	0, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 760, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 1334, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 759, 665, 666,
	667, 0, 600, 0, 592, 1332, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 0, 615, 614,
	616, 673, 685, 617, 266, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 684, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 0, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 0,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 683, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 0, 615, 614, 616,
	673, 0, 617, 266, 3021, 0, 0, 618, 619, 674,
	620, 621, 622, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 0, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 0, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	0, 617, 266, 4170, 0, 0, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 0, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 0, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 0, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 266, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 0, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 0,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 4445, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 266, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	0, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 0, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 4064, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 266, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	3832, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 0, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 0, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	266, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 2709, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 0, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 0, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 0, 615, 614, 616, 673, 0, 617, 266,
	3021, 0, 0, 618, 619, 674, 620, 621, 622, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 299,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 0, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 446, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 0, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 3018, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 543, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 552, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 664, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 266, 615, 614, 616, 673, 0, 617, 0, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 272, 274,
	273, 275, 276, 277, 278, 2295, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 0, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 0, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 615, 614, 616, 673, 2283, 617,
	266, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 0, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 0, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 0, 615, 614, 616, 673, 763, 617, 266,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 0,
	0, 0, 0, 0, 0, 0, 272, 274, 273, 275,
	276, 277, 278, 0, 279, 280, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 281, 282, 0, 283,
	284, 285, 286, 287, 288, 624, 625, 0, 289, 626,
	290, 627, 0, 628, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 629, 630, 631, 0, 298, 753,
	632, 0, 0, 0, 300, 301, 302, 303, 304, 305,
	306, 0, 0, 308, 309, 310, 307, 311, 0, 312,
	0, 313, 314, 315, 316, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 0, 325, 326, 327, 328, 329, 0, 330, 633,
	634, 0, 334, 331, 332, 0, 335, 333, 336, 0,
	337, 338, 339, 0, 0, 340, 341, 342, 0, 343,
	344, 0, 345, 346, 347, 0, 348, 349, 635, 350,
	351, 352, 354, 356, 353, 357, 358, 359, 360, 636,
	637, 361, 0, 0, 0, 0, 0, 0, 0, 362,
	363, 364, 638, 0, 0, 0, 365, 0, 366, 367,
	0, 0, 0, 368, 369, 370, 639, 640, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 0, 380, 641,
	0, 642, 381, 0, 382, 383, 384, 385, 386, 643,
	644, 645, 465, 0, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 0, 0, 0, 394, 395, 396, 398,
	0, 0, 397, 646, 647, 0, 648, 0, 399, 400,
	0, 649, 0, 401, 402, 403, 0, 404, 0, 0,
	0, 405, 406, 407, 408, 409, 410, 0, 411, 413,
	412, 0, 414, 650, 0, 415, 416, 0, 0, 417,
	0, 0, 0, 418, 419, 422, 0, 0, 420, 421,
	423, 424, 0, 425, 426, 428, 431, 427, 429, 430,
	432, 445, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 447, 0, 764, 0, 448, 449,
	450, 455, 457, 458, 453, 454, 456, 459, 460, 452,
	0, 461, 451, 0, 0, 0, 462, 463, 0, 651,
	464, 652, 466, 467, 0, 0, 468, 0, 0, 0,
	470, 471, 472, 0, 0, 473, 474, 653, 0, 475,
	0, 654, 476, 477, 469, 478, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 487, 655, 488, 489, 490,
	656, 491, 492, 493, 657, 494, 658, 495, 496, 0,
	497, 498, 0, 499, 500, 501, 502, 503, 504, 505,
	659, 506, 508, 507, 509, 0, 510, 0, 511, 512,
	513, 0, 0, 0, 0, 514, 0, 516, 517, 518,
	519, 515, 520, 521, 522, 523, 0, 524, 525, 526,
	0, 527, 528, 529, 530, 531, 660, 532, 0, 533,
	534, 540, 541, 542, 535, 536, 760, 544, 545, 546,
	547, 0, 549, 550, 548, 551, 1594, 553, 0, 554,
	555, 537, 538, 556, 557, 0, 558, 559, 560, 561,
	562, 563, 564, 661, 0, 565, 0, 566, 567, 568,
	570, 539, 571, 576, 577, 662, 572, 573, 574, 575,
	663, 579, 580, 0, 581, 582, 0, 578, 569, 0,
	583, 584, 585, 586, 587, 588, 589, 355, 590, 0,
	591, 759, 665, 666, 667, 0, 600, 0, 592, 593,
	594, 668, 595, 669, 0, 596, 597, 598, 599, 0,
	601, 602, 0, 0, 603, 604, 605, 607, 608, 606,
	609, 0, 610, 0, 0, 611, 612, 613, 670, 671,
	672, 0, 615, 614, 616, 673, 1567, 617, 266, 0,
	0, 0, 618, 619, 674, 620, 621, 622, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 0, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 1566, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 0, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 1551, 617, 266, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 0, 0, 0,
	0, 0, 0, 0, 272, 274, 273, 275, 276, 277,
	278, 0, 279, 280, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 281, 282, 0, 283, 284, 285,
	286, 287, 288, 624, 625, 0, 289, 626, 290, 627,
	0, 628, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 629, 630, 631, 0, 298, 299, 632, 0,
	0, 0, 300, 301, 302, 303, 304, 305, 306, 0,
	0, 308, 309, 310, 307, 311, 0, 312, 0, 313,
	314, 315, 316, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 0, 330, 633, 634, 0,
	334, 331, 332, 0, 335, 333, 336, 0, 337, 338,
	339, 0, 0, 340, 341, 342, 0, 343, 344, 0,
	345, 346, 347, 0, 348, 349, 635, 350, 351, 352,
	354, 356, 353, 357, 358, 359, 360, 636, 637, 361,
	0, 0, 0, 0, 0, 0, 0, 362, 363, 364,
	638, 0, 0, 0, 365, 0, 366, 367, 0, 0,
	0, 368, 369, 370, 639, 640, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 0, 380, 641, 0, 642,
	381, 0, 382, 383, 384, 385, 386, 1549, 644, 645,
	465, 0, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 0, 0, 0, 394, 395, 396, 398, 0, 0,
	397, 646, 647, 0, 648, 0, 399, 400, 0, 649,
	0, 401, 402, 403, 0, 404, 0, 0, 0, 405,
	406, 407, 408, 409, 410, 0, 411, 413, 412, 0,
	414, 650, 0, 415, 416, 0, 0, 417, 0, 0,
	0, 418, 419, 422, 0, 0, 420, 421, 423, 424,
	0, 425, 426, 428, 431, 427, 429, 430, 432, 445,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 447, 0, 446, 0, 448, 449, 450, 455,
	457, 458, 453, 454, 456, 459, 460, 452, 0, 461,
	451, 0, 0, 0, 462, 463, 0, 651, 464, 652,
	466, 467, 0, 0, 468, 0, 0, 0, 470, 471,
	472, 0, 0, 473, 474, 653, 0, 475, 0, 654,
	476, 477, 469, 478, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 487, 655, 488, 489, 490, 656, 491,
	492, 493, 657, 494, 658, 495, 496, 0, 497, 498,
	0, 499, 500, 501, 502, 503, 504, 505, 659, 506,
	508, 507, 509, 0, 510, 0, 511, 512, 513, 0,
	0, 0, 0, 514, 0, 516, 517, 518, 519, 515,
	520, 521, 522, 523, 0, 524, 525, 526, 0, 527,
	528, 529, 530, 531, 660, 532, 0, 533, 534, 540,
	541, 542, 535, 536, 543, 544, 545, 546, 547, 0,
	549, 550, 548, 551, 552, 553, 0, 554, 555, 537,
	538, 556, 557, 0, 558, 559, 560, 561, 562, 563,
	564, 661, 0, 565, 0, 566, 567, 568, 570, 539,
	571, 576, 577, 662, 572, 573, 574, 575, 663, 579,
	580, 0, 581, 582, 0, 578, 569, 0, 583, 584,
	585, 586, 587, 588, 589, 355, 590, 0, 591, 664,
	665, 666, 667, 0, 600, 0, 592, 593, 594, 668,
	595, 669, 0, 596, 597, 598, 599, 0, 601, 602,
	0, 0, 603, 604, 605, 607, 608, 606, 609, 0,
	610, 0, 0, 611, 612, 613, 670, 671, 672, 0,
	615, 614, 616, 673, 1544, 617, 266, 0, 0, 0,
	618, 619, 674, 620, 621, 622, 0, 0, 0, 0,
	0, 0, 0, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	0, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 0, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 0, 615,
	614, 616, 673, 1521, 617, 266, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 0, 0, 0, 0, 0,
	0, 0, 272, 274, 273, 275, 276, 277, 278, 0,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 0,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 1519, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	0, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 0, 615, 614,
	616, 673, 1481, 617, 266, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 0, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 0,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 0, 615, 614, 616,
	673, 1464, 617, 266, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 0, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 0, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	1301, 617, 266, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 0, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 1300, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 0, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 0, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 0, 615, 614, 616, 673, 1292,
	617, 266, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 0, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 1291, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 0, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 266, 615, 614, 616, 673, 0, 617,
	0, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	272, 274, 273, 275, 276, 277, 278, 1245, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 0, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 0, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 540, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 266, 615, 614, 616, 673,
	0, 617, 0, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 272, 274, 273, 275, 276, 277, 278, 769,
	279, 280, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 281, 282, 0, 283, 284, 285, 286, 287,
	288, 624, 625, 0, 289, 626, 290, 627, 0, 628,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	629, 630, 631, 0, 298, 299, 632, 0, 0, 0,
	300, 301, 302, 303, 304, 305, 306, 0, 0, 308,
	309, 310, 307, 311, 0, 312, 0, 313, 314, 315,
	316, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 328, 329, 0, 330, 633, 634, 0, 334, 331,
	332, 0, 335, 333, 336, 0, 337, 338, 339, 0,
	0, 340, 341, 342, 0, 343, 344, 0, 345, 346,
	347, 0, 348, 349, 635, 350, 351, 352, 354, 356,
	353, 357, 358, 359, 360, 636, 637, 361, 0, 0,
	0, 0, 0, 0, 0, 362, 363, 364, 638, 0,
	0, 0, 365, 0, 366, 367, 0, 0, 0, 368,
	369, 370, 639, 640, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 0, 380, 641, 0, 642, 381, 0,
	382, 383, 384, 385, 386, 643, 644, 645, 465, 0,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 0,
	0, 0, 394, 395, 396, 398, 0, 0, 397, 646,
	647, 0, 648, 0, 399, 400, 0, 649, 0, 401,
	402, 403, 0, 404, 0, 0, 0, 405, 406, 407,
	408, 409, 410, 0, 411, 413, 412, 0, 414, 650,
	0, 415, 416, 0, 0, 417, 0, 0, 0, 418,
	419, 422, 0, 0, 420, 421, 423, 424, 0, 425,
	426, 428, 431, 427, 429, 430, 432, 445, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	447, 0, 446, 0, 448, 449, 450, 455, 457, 458,
	453, 454, 456, 459, 460, 452, 0, 461, 451, 0,
	0, 0, 462, 463, 0, 651, 464, 652, 466, 467,
	0, 0, 468, 0, 0, 0, 470, 471, 472, 0,
	0, 473, 474, 653, 0, 475, 0, 654, 476, 477,
	469, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 487, 655, 488, 489, 490, 656, 491, 492, 493,
	657, 494, 658, 495, 496, 0, 497, 498, 0, 499,
	500, 501, 502, 503, 504, 505, 659, 506, 508, 507,
	509, 0, 510, 0, 511, 512, 513, 0, 0, 0,
	0, 514, 0, 516, 517, 518, 519, 515, 520, 521,
	522, 523, 0, 524, 525, 526, 0, 527, 528, 529,
	530, 531, 660, 532, 0, 533, 534, 540, 541, 542,
	535, 536, 543, 544, 545, 546, 547, 0, 549, 550,
	548, 551, 552, 553, 0, 554, 555, 537, 538, 556,
	557, 0, 558, 559, 560, 561, 562, 563, 564, 661,
	0, 565, 0, 566, 567, 568, 570, 539, 571, 576,
	577, 662, 572, 573, 574, 575, 663, 579, 580, 0,
	581, 582, 0, 578, 569, 0, 583, 584, 585, 586,
	587, 588, 589, 355, 590, 0, 591, 664, 665, 666,
	667, 0, 600, 0, 592, 593, 594, 668, 595, 669,
	0, 596, 597, 598, 599, 0, 601, 602, 0, 0,
	603, 604, 605, 607, 608, 606, 609, 0, 610, 0,
	0, 611, 612, 613, 670, 671, 672, 0, 615, 614,
	616, 673, 763, 617, 266, 0, 0, 0, 618, 619,
	674, 620, 621, 622, 0, 0, 0, 0, 0, 0,
	0, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 753, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 751, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 0, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 643, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 752,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 764, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 0,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 754, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 760, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 755, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 759, 665, 666, 667,
	0, 600, 0, 592, 757, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 0, 615, 614, 616,
	673, 745, 617, 266, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 0, 0, 0, 0, 0, 0, 0,
	272, 274, 273, 275, 276, 277, 278, 0, 279, 280,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	281, 282, 0, 283, 284, 285, 286, 287, 288, 624,
	625, 0, 289, 626, 290, 627, 0, 628, 291, 292,
	293, 294, 295, 296, 0, 0, 0, 297, 629, 630,
	631, 0, 298, 299, 632, 0, 0, 0, 300, 301,
	302, 303, 304, 305, 306, 0, 0, 308, 309, 310,
	307, 311, 0, 312, 0, 313, 314, 315, 316, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 0,
	0, 0, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 0, 330, 633, 634, 0, 334, 331, 332, 0,
	335, 333, 336, 0, 337, 338, 339, 0, 0, 340,
	341, 342, 0, 343, 344, 0, 345, 346, 347, 0,
	348, 349, 635, 350, 351, 352, 354, 356, 353, 357,
	358, 359, 360, 636, 637, 361, 0, 0, 0, 0,
	0, 0, 0, 362, 363, 364, 638, 0, 0, 0,
	365, 0, 366, 367, 0, 0, 0, 368, 369, 370,
	639, 640, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 0, 380, 641, 0, 642, 381, 0, 382, 383,
	384, 385, 386, 643, 644, 645, 465, 0, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 0, 0, 0,
	394, 395, 396, 398, 0, 0, 397, 646, 647, 0,
	648, 0, 399, 400, 0, 649, 0, 401, 402, 403,
	0, 404, 0, 0, 0, 405, 406, 407, 408, 409,
	410, 0, 411, 413, 412, 0, 414, 650, 0, 415,
	416, 0, 0, 417, 0, 0, 0, 418, 419, 422,
	0, 0, 420, 421, 423, 424, 0, 425, 426, 428,
	431, 427, 429, 430, 432, 445, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 447, 0,
	446, 0, 448, 449, 450, 455, 457, 458, 453, 454,
	456, 459, 460, 452, 0, 461, 451, 0, 0, 0,
	462, 463, 0, 651, 464, 652, 466, 467, 0, 0,
	468, 0, 0, 0, 470, 471, 472, 0, 0, 473,
	474, 653, 0, 475, 0, 654, 476, 477, 469, 478,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 487,
	655, 488, 489, 490, 656, 491, 492, 493, 657, 494,
	658, 495, 496, 0, 497, 498, 0, 499, 500, 501,
	502, 503, 504, 505, 659, 506, 508, 507, 509, 0,
	510, 0, 511, 512, 513, 0, 0, 0, 0, 514,
	0, 516, 517, 518, 519, 515, 520, 521, 522, 523,
	0, 524, 525, 526, 0, 527, 528, 529, 530, 531,
	660, 532, 0, 533, 534, 746, 541, 542, 535, 536,
	543, 544, 545, 546, 547, 0, 549, 550, 548, 551,
	552, 553, 0, 554, 555, 537, 538, 556, 557, 0,
	558, 559, 560, 561, 562, 563, 564, 661, 0, 565,
	0, 566, 567, 568, 570, 539, 571, 576, 577, 662,
	572, 573, 574, 575, 663, 579, 580, 0, 581, 582,
	0, 578, 569, 0, 583, 584, 585, 586, 587, 588,
	589, 355, 590, 0, 591, 664, 665, 666, 667, 0,
	600, 0, 592, 593, 594, 668, 595, 669, 0, 596,
	597, 598, 599, 0, 601, 602, 0, 0, 603, 604,
	605, 607, 608, 606, 609, 0, 610, 0, 0, 611,
	612, 613, 670, 671, 672, 0, 615, 614, 616, 673,
	708, 617, 266, 0, 0, 0, 618, 619, 674, 620,
	621, 622, 0, 0, 0, 0, 0, 0, 0, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 0, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 0, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 0, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 0, 615, 614, 616, 673, 702,
	617, 266, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 0, 0, 0, 0, 0, 0, 0, 272, 274,
	273, 275, 276, 277, 278, 0, 279, 280, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 281, 282,
	0, 283, 284, 285, 286, 287, 288, 624, 625, 0,
	289, 626, 290, 627, 0, 628, 291, 292, 293, 294,
	295, 296, 0, 0, 0, 297, 629, 630, 631, 0,
	298, 299, 632, 0, 0, 0, 300, 301, 302, 303,
	304, 305, 306, 0, 0, 308, 309, 310, 307, 311,
	0, 312, 0, 313, 314, 315, 316, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 328, 329, 0,
	330, 633, 634, 0, 334, 331, 332, 0, 335, 333,
	336, 0, 337, 338, 339, 0, 0, 340, 341, 342,
	0, 343, 344, 0, 345, 346, 347, 0, 348, 349,
	635, 350, 351, 352, 354, 356, 353, 357, 358, 359,
	360, 636, 637, 361, 0, 0, 0, 0, 0, 0,
	0, 362, 363, 364, 638, 0, 0, 0, 365, 0,
	366, 367, 0, 0, 0, 368, 369, 370, 639, 640,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 0,
	380, 641, 0, 642, 381, 0, 382, 383, 384, 385,
	386, 643, 644, 645, 465, 0, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 0, 0, 0, 394, 395,
	396, 398, 0, 0, 397, 646, 647, 0, 648, 0,
	399, 400, 0, 649, 0, 401, 402, 403, 0, 404,
	0, 0, 0, 405, 406, 407, 408, 409, 410, 0,
	411, 413, 412, 0, 414, 650, 0, 415, 416, 0,
	0, 417, 0, 0, 0, 418, 419, 422, 0, 0,
	420, 421, 423, 424, 0, 425, 426, 428, 431, 427,
	429, 430, 432, 445, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 447, 0, 446, 0,
	448, 449, 450, 455, 457, 458, 453, 454, 456, 459,
	460, 452, 0, 461, 451, 0, 0, 0, 462, 463,
	0, 651, 464, 652, 466, 467, 0, 0, 468, 0,
	0, 0, 470, 471, 472, 0, 0, 473, 474, 653,
	0, 475, 0, 654, 476, 477, 469, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 487, 655, 488,
	489, 490, 656, 491, 492, 493, 657, 494, 658, 495,
	496, 0, 497, 498, 0, 499, 500, 501, 502, 503,
	504, 505, 659, 506, 508, 507, 509, 0, 510, 0,
	511, 512, 513, 0, 0, 0, 0, 514, 0, 516,
	517, 518, 519, 515, 520, 521, 522, 523, 0, 524,
	525, 526, 0, 527, 528, 529, 530, 531, 660, 532,
	0, 533, 534, 540, 541, 542, 535, 536, 543, 544,
	545, 546, 547, 0, 549, 550, 548, 551, 552, 553,
	0, 554, 555, 537, 538, 556, 557, 0, 558, 559,
	560, 561, 562, 563, 564, 661, 0, 565, 0, 566,
	567, 568, 570, 539, 571, 576, 577, 662, 572, 573,
	574, 575, 663, 579, 580, 0, 581, 582, 0, 578,
	569, 0, 583, 584, 585, 586, 587, 588, 589, 355,
	590, 0, 591, 664, 665, 666, 667, 0, 600, 0,
	592, 593, 594, 668, 595, 669, 0, 596, 597, 598,
	599, 0, 601, 602, 0, 0, 603, 604, 605, 607,
	608, 606, 609, 0, 610, 0, 0, 611, 612, 613,
	670, 671, 672, 0, 615, 614, 616, 673, 680, 617,
	266, 0, 0, 0, 618, 619, 674, 620, 621, 622,
	0, 0, 0, 0, 0, 0, 0, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 0, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 0, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 266, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 0, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 0, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 0, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 266, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 0, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 3535, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 0,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 266, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	0, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 3466, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 0, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 266, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 0, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 3444, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 0, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	266, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 0, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	3441, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 0, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 540, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 266, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 0, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 3393, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 0, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 0, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 554, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 266, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 0, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 3391, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 0,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 266, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	0, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 3376, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 0, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 508,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 266, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 0, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 381, 0, 382, 383, 384, 385, 386, 2989, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 0, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 503, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 532, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	266, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 272, 274, 273,
	275, 276, 277, 278, 0, 279, 280, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 281, 282, 0,
	283, 284, 285, 286, 287, 288, 624, 625, 0, 289,
	626, 290, 627, 0, 628, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 629, 630, 631, 0, 298,
	299, 632, 0, 0, 0, 300, 301, 302, 303, 304,
	305, 306, 0, 0, 308, 309, 310, 307, 311, 0,
	312, 0, 313, 314, 315, 316, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 0, 330,
	633, 634, 0, 334, 331, 332, 0, 335, 333, 336,
	0, 337, 338, 339, 0, 0, 340, 341, 342, 0,
	343, 344, 0, 345, 346, 347, 0, 348, 349, 635,
	350, 351, 352, 354, 356, 353, 357, 358, 359, 360,
	636, 637, 361, 0, 0, 0, 0, 0, 0, 0,
	362, 363, 364, 638, 0, 0, 0, 365, 0, 366,
	367, 0, 0, 0, 368, 369, 370, 639, 640, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 0, 380,
	641, 0, 642, 381, 0, 382, 383, 384, 385, 386,
	643, 644, 645, 465, 0, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 0, 0, 0, 394, 395, 396,
	398, 0, 0, 397, 646, 647, 0, 648, 0, 399,
	400, 0, 649, 0, 401, 402, 403, 0, 404, 0,
	0, 0, 405, 406, 407, 408, 409, 410, 0, 411,
	413, 412, 0, 414, 650, 0, 415, 416, 0, 0,
	417, 0, 0, 0, 418, 419, 422, 0, 0, 420,
	421, 423, 424, 0, 425, 426, 428, 431, 427, 429,
	430, 432, 445, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 447, 0, 446, 0, 448,
	449, 450, 455, 457, 458, 453, 454, 456, 459, 460,
	452, 0, 461, 451, 0, 0, 0, 462, 463, 0,
	651, 464, 652, 466, 467, 0, 0, 468, 0, 0,
	0, 470, 471, 472, 0, 0, 473, 474, 653, 0,
	475, 0, 654, 476, 477, 469, 478, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 487, 655, 488, 489,
	490, 656, 491, 492, 493, 657, 494, 658, 495, 496,
	0, 497, 498, 0, 499, 500, 501, 502, 503, 504,
	505, 659, 506, 508, 507, 509, 0, 510, 0, 511,
	512, 513, 0, 0, 0, 0, 514, 0, 516, 517,
	518, 519, 515, 520, 521, 522, 523, 0, 524, 525,
	526, 0, 527, 528, 529, 530, 531, 660, 532, 0,
	533, 534, 746, 541, 542, 535, 536, 543, 544, 545,
	546, 547, 0, 549, 550, 548, 551, 552, 553, 0,
	554, 555, 537, 538, 556, 557, 0, 558, 559, 560,
	561, 562, 563, 564, 661, 0, 565, 0, 566, 567,
	568, 570, 539, 571, 576, 577, 662, 572, 573, 574,
	575, 663, 579, 580, 0, 581, 582, 0, 578, 569,
	0, 583, 584, 585, 586, 587, 588, 589, 355, 590,
	0, 591, 664, 665, 666, 667, 0, 600, 0, 592,
	593, 594, 668, 595, 669, 0, 596, 597, 598, 599,
	0, 601, 602, 0, 0, 603, 604, 605, 607, 608,
	606, 609, 0, 610, 0, 0, 611, 612, 613, 670,
	671, 672, 266, 615, 614, 616, 673, 0, 617, 0,
	0, 0, 0, 618, 619, 674, 620, 621, 622, 272,
	274, 273, 275, 276, 277, 278, 0, 279, 280, 0,
	0, 0, 0, 0, 623, 0, 2257, 0, 0, 281,
	282, 0, 283, 284, 285, 286, 287, 288, 624, 625,
	0, 289, 626, 290, 627, 0, 628, 291, 292, 293,
	294, 295, 296, 0, 0, 0, 297, 629, 630, 631,
	0, 298, 299, 632, 0, 0, 0, 300, 301, 302,
	303, 304, 305, 306, 0, 0, 308, 309, 310, 307,
	311, 0, 312, 0, 313, 314, 315, 316, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	0, 330, 633, 634, 0, 334, 331, 332, 0, 335,
	333, 336, 0, 337, 338, 339, 0, 0, 340, 341,
	342, 0, 343, 344, 0, 345, 346, 347, 0, 348,
	349, 635, 350, 351, 352, 354, 356, 353, 357, 358,
	359, 360, 636, 637, 361, 0, 0, 0, 0, 0,
	0, 0, 362, 363, 364, 638, 0, 0, 0, 365,
	0, 366, 367, 0, 0, 0, 368, 369, 370, 639,
	640, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	0, 380, 641, 0, 642, 381, 0, 382, 383, 384,
	385, 386, 643, 644, 645, 465, 0, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 0, 0, 0, 394,
	395, 396, 398, 0, 0, 397, 646, 647, 0, 648,
	0, 399, 400, 0, 649, 0, 401, 402, 403, 0,
	404, 0, 0, 0, 405, 406, 407, 408, 409, 410,
	0, 411, 413, 412, 0, 414, 650, 0, 415, 416,
	0, 0, 417, 0, 0, 0, 418, 419, 422, 0,
	0, 420, 421, 423, 424, 0, 425, 426, 428, 431,
	427, 429, 430, 432, 445, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 447, 0, 446,
	0, 448, 449, 450, 455, 457, 458, 453, 454, 456,
	459, 460, 452, 0, 461, 451, 0, 0, 0, 462,
	463, 0, 651, 464, 652, 466, 467, 0, 0, 468,
	0, 0, 0, 470, 471, 472, 0, 0, 473, 474,
	653, 0, 475, 0, 654, 476, 477, 469, 478, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 487, 655,
	488, 489, 490, 656, 491, 492, 493, 657, 494, 658,
	495, 496, 0, 497, 498, 0, 499, 500, 501, 502,
	503, 504, 505, 659, 506, 508, 507, 509, 0, 510,
	0, 511, 512, 513, 0, 0, 0, 0, 514, 0,
	516, 517, 518, 519, 515, 520, 521, 522, 523, 0,
	524, 525, 526, 0, 527, 528, 529, 530, 531, 660,
	532, 0, 533, 534, 540, 541, 542, 535, 536, 543,
	544, 545, 546, 547, 0, 549, 550, 548, 551, 552,
	553, 0, 0, 555, 537, 538, 556, 557, 0, 558,
	559, 560, 561, 562, 563, 564, 661, 0, 565, 0,
	566, 567, 568, 570, 539, 571, 576, 577, 662, 572,
	573, 574, 575, 663, 579, 580, 0, 581, 582, 0,
	578, 569, 0, 583, 584, 585, 586, 587, 588, 589,
	355, 590, 0, 591, 664, 665, 666, 667, 0, 600,
	0, 592, 593, 594, 668, 595, 669, 0, 596, 597,
	598, 599, 0, 601, 602, 0, 0, 603, 604, 605,
	607, 608, 606, 609, 0, 610, 0, 0, 611, 612,
	613, 670, 671, 672, 266, 615, 614, 616, 673, 0,
	617, 0, 0, 0, 0, 618, 619, 674, 620, 621,
	622, 272, 274, 273, 275, 276, 277, 278, 0, 279,
	280, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 281, 282, 0, 283, 284, 285, 286, 287, 288,
	624, 625, 0, 289, 626, 290, 627, 0, 628, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 629,
	630, 631, 0, 298, 299, 632, 0, 0, 0, 300,
	301, 302, 303, 304, 305, 306, 0, 0, 308, 309,
	310, 307, 311, 0, 312, 0, 313, 314, 315, 316,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	0, 0, 0, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 0, 330, 633, 634, 0, 334, 331, 332,
	0, 335, 333, 336, 0, 337, 338, 339, 0, 0,
	340, 341, 342, 0, 343, 344, 0, 345, 346, 347,
	0, 348, 349, 635, 350, 351, 352, 354, 356, 353,
	357, 358, 359, 360, 636, 637, 361, 0, 0, 0,
	0, 0, 0, 0, 362, 363, 364, 638, 0, 0,
	0, 365, 0, 366, 367, 0, 0, 0, 368, 369,
	370, 639, 640, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 380, 641, 0, 642, 381, 0, 382,
	383, 384, 385, 386, 1263, 644, 645, 465, 0, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	0, 394, 395, 396, 398, 0, 0, 397, 646, 647,
	0, 648, 0, 399, 400, 0, 649, 0, 401, 402,
	403, 0, 404, 0, 0, 0, 405, 406, 407, 408,
	409, 410, 0, 411, 413, 412, 0, 414, 650, 0,
	415, 416, 0, 0, 417, 0, 0, 0, 418, 419,
	422, 0, 0, 420, 421, 423, 424, 0, 425, 426,
	428, 431, 427, 429, 430, 432, 445, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 447,
	0, 446, 0, 448, 449, 450, 455, 457, 458, 453,
	454, 456, 459, 460, 452, 0, 461, 451, 0, 0,
	0, 462, 463, 0, 651, 464, 652, 466, 467, 0,
	0, 468, 0, 0, 0, 470, 471, 472, 0, 0,
	473, 474, 653, 0, 475, 0, 654, 476, 477, 469,
	478, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	487, 655, 488, 489, 490, 656, 491, 492, 493, 657,
	494, 658, 495, 496, 0, 497, 498, 0, 499, 500,
	501, 502, 503, 504, 505, 659, 506, 508, 507, 509,
	0, 510, 0, 511, 512, 513, 0, 0, 0, 0,
	514, 0, 516, 517, 518, 519, 515, 520, 521, 522,
	523, 0, 524, 525, 526, 0, 527, 528, 529, 530,
	531, 660, 532, 0, 533, 534, 540, 541, 542, 535,
	536, 543, 544, 545, 546, 547, 0, 549, 550, 548,
	551, 552, 553, 0, 554, 555, 537, 538, 556, 557,
	0, 558, 559, 560, 561, 562, 563, 564, 661, 0,
	565, 0, 566, 567, 568, 570, 539, 571, 576, 577,
	662, 572, 573, 574, 575, 663, 579, 580, 0, 581,
	582, 0, 578, 569, 0, 583, 584, 585, 586, 587,
	588, 589, 355, 590, 0, 591, 664, 665, 666, 667,
	0, 600, 0, 592, 593, 594, 668, 595, 669, 0,
	596, 597, 598, 599, 0, 601, 602, 0, 0, 603,
	604, 605, 607, 608, 606, 609, 0, 610, 0, 0,
	611, 612, 613, 670, 671, 672, 266, 615, 614, 616,
	673, 0, 617, 0, 0, 0, 0, 618, 619, 674,
	620, 621, 622, 272, 274, 273, 275, 276, 277, 278,
	0, 279, 280, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 281, 282, 0, 283, 284, 285, 286,
	287, 288, 624, 625, 0, 289, 626, 290, 627, 0,
	628, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 629, 630, 631, 0, 298, 299, 632, 0, 0,
	0, 300, 301, 302, 303, 304, 305, 306, 0, 0,
	308, 309, 310, 307, 311, 0, 312, 0, 313, 314,
	315, 316, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 0, 330, 633, 634, 0, 334,
	331, 332, 0, 335, 333, 336, 0, 337, 338, 339,
	0, 0, 340, 341, 342, 0, 343, 344, 0, 345,
	346, 347, 0, 348, 349, 635, 350, 351, 352, 354,
	356, 353, 357, 358, 359, 360, 636, 637, 361, 0,
	0, 0, 0, 0, 0, 0, 362, 363, 364, 638,
	0, 0, 0, 365, 0, 366, 367, 0, 0, 0,
	368, 369, 370, 639, 640, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 0, 380, 641, 0, 642, 381,
	0, 382, 383, 384, 385, 386, 643, 644, 645, 465,
	0, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	0, 0, 0, 394, 395, 396, 398, 0, 0, 397,
	646, 647, 0, 648, 0, 399, 400, 0, 649, 0,
	401, 402, 403, 0, 404, 0, 0, 0, 405, 406,
	407, 408, 409, 410, 0, 411, 413, 412, 0, 414,
	650, 0, 415, 416, 0, 0, 417, 0, 0, 0,
	418, 419, 422, 0, 0, 420, 421, 423, 424, 0,
	425, 426, 428, 431, 427, 429, 430, 432, 445, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 447, 0, 446, 0, 448, 449, 450, 455, 457,
	458, 453, 454, 456, 459, 460, 452, 0, 461, 451,
	0, 0, 0, 462, 463, 0, 651, 464, 652, 466,
	467, 0, 0, 468, 0, 0, 0, 470, 471, 472,
	0, 0, 473, 474, 653, 0, 475, 0, 654, 476,
	477, 469, 478, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 487, 655, 488, 489, 490, 656, 491, 492,
	493, 657, 494, 658, 495, 496, 0, 497, 498, 0,
	499, 500, 501, 502, 503, 504, 505, 659, 506, 1196,
	507, 509, 0, 510, 0, 511, 512, 513, 0, 0,
	0, 0, 514, 0, 516, 517, 518, 519, 515, 520,
	521, 522, 523, 0, 524, 525, 526, 0, 527, 528,
	529, 530, 531, 660, 532, 0, 533, 534, 540, 541,
	542, 535, 536, 543, 544, 545, 546, 547, 0, 549,
	550, 548, 551, 552, 553, 0, 554, 555, 537, 538,
	556, 557, 0, 558, 559, 560, 561, 562, 563, 564,
	661, 0, 565, 0, 566, 567, 568, 570, 539, 571,
	576, 577, 662, 572, 573, 574, 575, 663, 579, 580,
	0, 581, 582, 0, 578, 569, 0, 583, 584, 585,
	586, 587, 588, 589, 355, 590, 0, 591, 664, 665,
	666, 667, 0, 600, 0, 592, 593, 594, 668, 595,
	669, 0, 596, 597, 598, 599, 0, 601, 602, 0,
	0, 603, 604, 605, 607, 608, 606, 609, 0, 610,
	0, 0, 611, 612, 613, 670, 671, 672, 266, 615,
	614, 616, 673, 0, 617, 0, 0, 0, 0, 618,
	619, 674, 620, 621, 622, 272, 274, 273, 275, 276,
	277, 278, 0, 279, 280, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 281, 282, 0, 283, 284,
	285, 286, 287, 288, 624, 625, 0, 289, 626, 290,
	627, 0, 628, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 629, 630, 631, 0, 298, 299, 632,
	0, 0, 0, 300, 301, 302, 303, 304, 305, 306,
	0, 0, 308, 309, 310, 307, 311, 0, 312, 0,
	313, 314, 315, 316, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 0, 0, 0, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 0, 330, 633, 634,
	0, 334, 331, 332, 0, 335, 333, 336, 0, 337,
	338, 339, 0, 0, 340, 341, 342, 0, 343, 344,
	0, 345, 346, 347, 0, 348, 349, 635, 350, 351,
	352, 354, 356, 353, 357, 358, 359, 360, 636, 637,
	361, 0, 0, 0, 0, 0, 0, 0, 362, 363,
	364, 638, 0, 0, 0, 365, 0, 366, 367, 0,
	0, 0, 368, 369, 370, 639, 640, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 0, 380, 641, 0,
	642, 0, 0, 382, 383, 384, 385, 386, 643, 644,
	645, 465, 0, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 0, 0, 0, 394, 395, 396, 398, 0,
	0, 397, 646, 647, 0, 648, 0, 399, 400, 0,
	649, 0, 401, 402, 403, 0, 404, 0, 0, 0,
	405, 406, 407, 408, 409, 410, 0, 411, 413, 412,
	0, 414, 650, 0, 415, 416, 0, 0, 417, 0,
	0, 0, 418, 419, 422, 0, 0, 420, 421, 423,
	424, 0, 425, 426, 428, 431, 427, 429, 430, 432,
	445, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 447, 0, 446, 0, 448, 449, 450,
	455, 457, 458, 453, 454, 456, 459, 460, 452, 0,
	461, 451, 0, 0, 0, 462, 463, 0, 651, 464,
	652, 466, 467, 0, 0, 468, 0, 0, 0, 470,
	471, 472, 0, 0, 473, 474, 653, 0, 475, 0,
	654, 476, 477, 469, 478, 479, 0, 481, 482, 483,
	484, 485, 0, 486, 487, 655, 488, 489, 490, 656,
	491, 492, 493, 657, 494, 658, 495, 496, 0, 497,
	498, 0, 499, 500, 501, 502, 0, 504, 505, 659,
	506, 508, 507, 509, 0, 510, 0, 511, 512, 513,
	0, 0, 0, 0, 514, 0, 516, 517, 518, 519,
	515, 520, 521, 522, 523, 0, 524, 525, 526, 0,
	527, 528, 529, 530, 531, 660, 0, 0, 533, 534,
	540, 541, 542, 535, 536, 543, 544, 545, 546, 547,
	0, 549, 550, 548, 551, 552, 553, 0, 554, 555,
	537, 538, 556, 557, 0, 558, 559, 560, 561, 562,
	563, 564, 661, 0, 565, 0, 566, 567, 568, 570,
	539, 571, 576, 577, 662, 572, 573, 574, 575, 663,
	579, 580, 0, 581, 582, 0, 578, 569, 0, 583,
	584, 585, 586, 587, 588, 589, 355, 590, 0, 591,
	664, 665, 666, 667, 0, 600, 0, 592, 593, 594,
	668, 595, 669, 0, 596, 597, 598, 599, 0, 601,
	602, 0, 0, 603, 604, 605, 607, 608, 606, 609,
	0, 610, 0, 0, 611, 612, 613, 670, 671, 672,
	0, 615, 614, 616, 673, 0, 617, 0, 0, 0,
	0, 618, 619, 674, 620, 621, 622, 1761, 1762, 0,
	1794, 1795, 1796, 1805, 1806, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	1792, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 1762, 0, 1794, 1795,
	1796, 1805, 1806, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 1792, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 1786, 1787, 1788, 1789,
	1763, 0, 0, 0, 0, 0, 1769, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 1791, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1808, 0, 1809, 0, 0, 0, 0, 0, 0,
	1778, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 1787, 1788, 1789, 1800, 0,
	0, 0, 0, 0, 1769, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 0, 1761, 1762, 0, 1794,
	1795, 1796, 1805, 1806, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 1792,
	0, 0, 1802, 0, 0, 1812, 1764, 0, 0, 0,
	0, 0, 1791, 1793, 0, 1811, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	0, 1809, 1817, 0, 1799, 0, 0, 0, 1778, 1779,
	0, 1763, 0, 0, 0, 1814, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 1800, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 1786, 1787, 1788, 1789, 0,
	0, 0, 0, 1814, 0, 1769, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 1762, 0,
	1794, 1795, 1796, 1805, 1806, 1807, 0, 1816, 0, 0,
	0, 0, 0, 1802, 0, 0, 1812, 0, 0, 1798,
	1792, 0, 0, 1791, 1793, 1790, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	1808, 0, 1809, 0, 0, 0, 0, 1785, 0, 1778,
	1779, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 1763, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 1783, 0, 1803, 0, 0, 0, 0, 1801,
	0, 1780, 1784, 0, 1775, 1776, 1782, 1804, 1781, 1777,
	0, 1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771,
	0, 0, 0, 0, 4428, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 1786, 1787, 1788, 1789,
	0, 0, 0, 0, 0, 0, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0, 1774,
	1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 0,
	0, 0, 4245, 0, 1802, 0, 1790, 1812, 0, 0,
	0, 0, 0, 0, 1791, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 1808, 0, 1809, 0, 0, 0, 0, 0, 0,
	1778, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 0, 0, 1800, 0,
	0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806,
	1807, 0, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 1792, 1816, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 0, 0, 1799, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 1814, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0,
	0, 0, 0, 4083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	0, 1786, 1787, 1788, 1789, 0, 0, 0, 0, 0,
	0, 1769, 0, 0, 0, 0, 1761, 1762, 0, 1794,
	1795, 1796, 1805, 1806, 1807, 0, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 1792,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 1802,
	0, 0, 1812, 0, 0, 1811, 0, 1816, 0, 1791,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 1808, 0, 1809, 0,
	0, 1763, 0, 0, 0, 1778, 1779, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 1775, 1776, 1782, 1804, 1781, 1777,
	0, 1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771,
	0, 0, 0, 0, 4017, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 1787, 1788, 1789, 1799,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796,
	1805, 1806, 1807, 1802, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 1791, 1793, 0, 1798, 1792, 0, 0,
	0, 0, 1790, 0, 1764, 0, 0, 0, 0, 0,
	1808, 0, 1809, 1811, 0, 0, 0, 0, 0, 1778,
	1779, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 1800, 0, 1763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 1803, 1784, 0, 0, 0, 0, 0, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 1787, 1788, 1789, 0, 0, 0,
	0, 0, 0, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 1775,
	1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765,
	1766, 1767, 1768, 1770, 1771, 0, 1790, 0, 0, 4016,
	0, 1802, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 1791, 1793, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 0,
	1809, 0, 0, 0, 0, 0, 0, 1778, 1779, 0,
	0, 0, 0, 0, 0, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 1761,
	1762, 0, 1794, 1795, 1796, 1805, 1806, 1807, 0, 0,
	1784, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 1798, 1792, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 1763, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 0, 1814, 1780, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0,
	0, 0, 0, 4015, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 1786, 1787,
	1788, 1789, 0, 0, 0, 0, 0, 0, 1769, 0,
	0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805,
	1806, 1807, 0, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 1792, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 1802, 0, 0, 1812,
	0, 0, 1811, 0, 1816, 0, 1791, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 1808, 0, 1809, 0, 0, 1763, 0,
	0, 0, 1778, 1779, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772,
	1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0,
	0, 3678, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 1787, 1788, 1789, 1799, 0, 0, 0,
	0, 0, 1769, 0, 0, 0, 0, 1814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806, 1807,
	1802, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	1791, 1793, 0, 1798, 1792, 0, 0, 0, 0, 1790,
	0, 1764, 0, 0, 0, 0, 0, 1808, 0, 1809,
	1811, 0, 0, 0, 0, 0, 1778, 1779, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 1800, 0, 1763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 1803, 1784,
	0, 0, 0, 0, 0, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 1787, 1788, 1789, 0, 0, 0, 0, 0, 0,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 1775, 1776, 1782, 1804,
	1781, 1777, 0, 1774, 1772, 1773, 1765, 1766, 1767, 1768,
	1770, 1771, 0, 1790, 0, 0, 3190, 0, 1802, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 1791, 1793,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1808, 0, 1809, 0, 0,
	0, 0, 0, 0, 1778, 1779, 0, 0, 0, 0,
	0, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 1761, 1762, 0, 1794,
	1795, 1796, 1805, 1806, 1807, 0, 0, 1784, 0, 0,
	0, 0, 0, 1816, 0, 0, 0, 0, 1798, 1792,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 1814,
	1780, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0,
	3189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 1786, 1787, 1788, 1789, 0,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	1761, 1762, 0, 1794, 1795, 1796, 1805, 1806, 1807, 0,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 1792, 0, 0, 0, 0, 0, 0,
	1764, 0, 0, 1802, 0, 0, 1812, 0, 0, 1811,
	0, 1816, 0, 1791, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	1808, 0, 1809, 0, 0, 1763, 0, 0, 0, 1778,
	1779, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 1780, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 1775, 1776,
	1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766,
	1767, 1768, 1770, 1771, 0, 0, 0, 0, 3188, 0,
	0, 0, 0, 0, 0, 1810, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	1787, 1788, 1789, 1799, 0, 0, 0, 0, 0, 1769,
	4698, 0, 0, 0, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 1791, 1793, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 1808, 0, 1809, 0, 0, 0,
	0, 0, 0, 1778, 1779, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	1762, 1800, 1794, 1795, 1796, 1805, 1806, 1807, 0, 0,
	0, 0, 0, 0, 0, 1803, 1784, 0, 0, 0,
	0, 1798, 1792, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 1810,
	0, 0, 0, 0, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 1799, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4697,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0,
	1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0,
	1790, 0, 0, 3187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 1787,
	1788, 1789, 1785, 0, 0, 0, 0, 0, 1769, 0,
	3252, 0, 0, 0, 3251, 0, 0, 0, 0, 0,
	1761, 1762, 0, 1794, 1795, 1796, 1805, 1806, 1807, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 1792, 0, 0, 1802, 0, 3123, 1812,
	1764, 0, 0, 0, 0, 0, 1791, 1793, 0, 1811,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 0, 1809, 1817, 0, 0, 0,
	0, 0, 1778, 1779, 0, 1763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	1800, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 1775, 1776, 1782,
	1804, 1781, 1777, 3124, 1774, 1772, 1773, 1765, 1766, 1767,
	1768, 1770, 1771, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 1786,
	1787, 1788, 1789, 0, 0, 0, 0, 1814, 0, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2682, 0, 0, 0, 0, 0, 0, 1761, 1762,
	0, 1794, 1795, 1796, 1805, 1806, 1807, 1802, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 1791, 1793, 1790,
	1798, 1792, 0, 0, 0, 2681, 0, 0, 1764, 0,
	0, 0, 0, 0, 1808, 0, 1809, 1811, 0, 0,
	0, 1785, 0, 1778, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 1800, 0, 1763, 0, 0, 0, 0, 1803, 0,
	0, 0, 0, 1783, 0, 0, 1784, 0, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 1787, 1788,
	1789, 0, 0, 0, 0, 0, 0, 1769, 0, 0,
	0, 1801, 0, 0, 0, 0, 1775, 1776, 1782, 1804,
	1781, 1777, 0, 1774, 1772, 1773, 1765, 1766, 1767, 1768,
	1770, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 1802, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 1791, 1793, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 0, 1809, 0, 0, 0, 0, 0,
	0, 1778, 1779, 0, 0, 0, 0, 0, 0, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 1761, 1762, 0, 1794, 1795, 1796, 1805,
	1806, 1807, 0, 0, 1784, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 1798, 1792, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 1814, 1780, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 1775, 1776, 1782,
	1804, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766, 1767,
	1768, 1770, 1771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 1786, 1787, 1788, 1789, 0, 0, 0, 0,
	0, 0, 1769, 0, 0, 0, 0, 1761, 1762, 0,
	1794, 1795, 1796, 1805, 1806, 1807, 0, 1803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	1792, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	1802, 0, 0, 1812, 0, 0, 1811, 0, 1816, 0,
	1791, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 1808, 0, 1809,
	0, 0, 1763, 0, 0, 0, 1778, 1779, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 1775, 1776, 1782, 1804, 1781,
	1777, 0, 1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 1787, 1788, 1789,
	1799, 1050, 0, 0, 0, 0, 1769, 0, 0, 0,
	0, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 1762, 0, 1794, 1795,
	1796, 1805, 1806, 1807, 1802, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 1791, 1793, 0, 1798, 1792, 0,
	0, 0, 0, 1790, 0, 1764, 0, 0, 0, 0,
	0, 1808, 0, 1809, 1811, 0, 0, 0, 0, 0,
	1778, 1779, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 1800, 0,
	1763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 1803, 1784, 0, 0, 0, 0, 0, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 1787, 1788, 1789, 0, 0,
	0, 0, 0, 0, 1769, 0, 0, 0, 0, 0,
	3258, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 1790, 0, 0,
	0, 0, 1802, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 1791, 1793, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	0, 1809, 0, 0, 0, 0, 0, 0, 1778, 1779,
	0, 0, 0, 0, 0, 0, 1803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 1761, 1762, 0, 1794, 1795, 1796, 1805, 1806, 1807,
	0, 1784, 0, 0, 0, 0, 0, 1816, 0, 0,
	0, 0, 0, 1798, 1792, 0, 0, 0, 3253, 0,
	3659, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 1814, 0, 1780, 0, 0, 0, 1801,
	0, 0, 0, 0, 1775, 1776, 1782, 1804, 1781, 1777,
	0, 1774, 1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	1786, 1787, 1788, 1789, 0, 0, 0, 0, 0, 0,
	1769, 0, 0, 0, 0, 1761, 1762, 0, 1794, 1795,
	1796, 1805, 1806, 1807, 1803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 1792, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 1802, 0,
	0, 1812, 0, 0, 1811, 1816, 0, 0, 1791, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 1808, 0, 1809, 0, 0,
	1763, 0, 0, 0, 1778, 1779, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 1780,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 1775, 1776, 1782, 1804, 1781, 1777, 0, 1774,
	1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 1787, 1788, 1789, 1799, 0,
	0, 0, 0, 0, 1769, 0, 0, 0, 0, 1814,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 1761, 1762, 1812, 1794, 1795, 1796, 1805,
	1806, 1807, 1791, 1793, 0, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 1798, 1792, 0, 0, 1808,
	3191, 1809, 0, 1764, 0, 0, 0, 0, 1778, 1779,
	0, 0, 1811, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	1803, 1784, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 3218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 1787, 1788, 1789, 0, 0, 0, 0,
	0, 0, 1769, 1801, 0, 0, 0, 0, 1775, 1776,
	1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765, 1766,
	1767, 1768, 1770, 1771, 0, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 1812, 0, 0, 0, 1785, 0, 0,
	1791, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 0, 1809,
	0, 0, 0, 0, 1803, 0, 1778, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 1762, 1800, 1794, 1795, 1796, 1805, 1806,
	1807, 0, 0, 0, 0, 1816, 0, 0, 0, 1784,
	0, 0, 0, 0, 1798, 1792, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 1810, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	1799, 0, 0, 0, 0, 0, 1780, 1801, 0, 0,
	0, 1814, 1775, 1776, 1782, 1804, 1781, 1777, 0, 1774,
	1772, 1773, 1765, 1766, 1767, 1768, 1770, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 1762, 0, 1794, 1795, 1796, 1805, 1806, 1807, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 1792, 0, 0, 0, 0, 0, 0,
	1764, 1786, 1787, 1788, 1789, 1785, 0, 0, 0, 1811,
	0, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 1803, 0, 0, 1763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 1802,
	0, 0, 1812, 0, 1780, 0, 0, 0, 0, 1791,
	1793, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1808, 0, 1809, 0,
	0, 0, 0, 0, 0, 1778, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	1787, 1788, 1789, 0, 0, 1801, 0, 0, 0, 1769,
	1775, 1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773,
	1765, 1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 0, 1799,
	1812, 0, 0, 0, 0, 0, 0, 1791, 1793, 0,
	1814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1808, 0, 1809, 0, 0, 0,
	0, 0, 0, 1778, 1779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1761,
	1762, 1800, 1794, 1795, 1796, 1805, 1806, 1807, 0, 0,
	0, 0, 1790, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 1785, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 1810,
	0, 1803, 0, 0, 1763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 1814, 0,
	0, 0, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 1787,
	1788, 1789, 1785, 0, 1801, 0, 0, 0, 1769, 1775,
	1776, 1782, 1804, 1781, 1777, 0, 1774, 1772, 1773, 1765,
	1766, 1767, 1768, 1770, 1771, 0, 0, 0, 0, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 1791, 1793, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 0, 1809, 0, 0, 0, 0,
	0, 0, 1778, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 938, 0, 986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 1775, 1776, 1782,
	1804, 1781, 1777, 946, 1774, 1772, 1773, 1765, 1766, 1767,
	1768, 1770, 1771, 0, 0, 0, 0, 0, 1810, 960,
	0, 944, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 962, 0, 0, 0, 1814, 0, 945,
	0, 0, 0, 0, 948, 0, 0, 0, 0, 994,
	0, 0, 0, 0, 0, 0, 0, 0, 957, 958,
	0, 0, 0, 0, 0, 0, 0, 975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 987, 950, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 0, 951, 0, 0, 0, 0, 0, 0,
	0, 0, 984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 953, 1816,
	0, 0, 0, 0, 0, 0, 942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 954, 955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 963, 961, 0, 0, 0, 0,
	0, 0, 956, 0, 0, 0, 972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 991, 983, 1775, 1776, 1782, 1804,
	1781, 1777, 0, 1774, 1772, 1773, 1765, 1766, 1767, 1768,
	1770, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 949, 0,
	0, 993, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 947, 0, 0, 0, 979, 980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	982, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 977, 0, 0, 0, 0, 0, 0, 0,
	992, 973, 0, 0, 966, 964, 0, 969, 0, 0,
	0, 0, 0, 970, 0, 0, 940, 0, 989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 981, 0, 971, 0, 0, 0, 0, 0,
	968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 990, 0, 0, 0, 0, 0, 0, 0, 974,
	0, 0, 0, 0, 0, 0, 0, 0, 952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 978,
}

var sqlPact = [...]int{
	6008, -1000, -1000, -1000, -1000, 212, -1000, -1000, 211, 207,
	206, 203, 196, 193, 192, 190, 189, 187, 186, -1000,
	-1000, -1000, -1000, -1000, -1000, 174, -1000, -1000, 169, -1000,
	168, 167, 166, -1000, -1000, 165, -1000, 164, -1000, -1000,
	-1000, -1000, 163, 162, 156, 93436, 92887, 93978, 2278, 114186,
	100510, 2165, 83047, 113637, 82498, 113088, 2034, 10064, 112539, 2714,
	155, -1000, 111990, 152, 151, 150, -1000, 111441, -1000, 2120,
	-1000, 149, -1000, 8886, 68723, 146, 144, 143, 2394, 142,
	-1000, 141, 138, -1000, -1000, 137, -1000, 13214, 1488, -1000,
	133, 131, -1000, 5655, 98321, 129, 124, 2281, 122, 121,
	67090, 117, 116, 2266, 2810, -1000, -1000, 2028, -1000, -1000,
	115, 113, 112, 110, 108, 105, 103, 101, 100, 97,
	94, -1000, 93, 92, 91, 90, 89, -1000, 87, 86,
	84, -1000, 82, -1000, 81, 80, 67, 65, 64, 59,
	58, 57, 56, 52, 51, 49, 38, 36, 127365, -1000,
	-1000, 1886, 1666, 1665, 1664, 1659, 1654, 1003, 35, 32,
	30, 29, 28, 27, 26, 24, 23, 21, 20, 19,
	18, 17, 16, 15, 12, 10, 181, 7, -2, -3,
	-5, -6, -7, -8, 3260, -1000, 1580, 857, 31784, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 121232, 114728, -9, -87, -10,
	-1000, 3288, 1088, 55527, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 309, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 518, 2121, 798,
	-1000, -1000, -1000, 110899, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2276, -54, -1000, 1967, -1000, -1000, -1000, -1000,
	-1000, 797, -1000, 2268, 183, 2176, -1000, -1000, -1000, 3338,
	2419, 3739, 3738, 3737, 3736, 3734, 120690, 1794, 3733, 2501,
	3732, 3731, 3730, 3728, 3727, 3726, 3724, -1000, 92338, 1035,
	91789, 91240, 3350, 110357, 90691, 109808, 76470, 47564, 851, 3337,
	-1000, -1000, -1000, -1000, -1000, -1000, 114728, -1000, 1034, -1000,
	-1000, 3723, 3722, 2044, 796, 99961, -1000, 2021, -1000, 952,
	33512, -1000, 1244, -1000, 33512, 306, -1000, -1000, -1000, -1000,
	-1000, -1000, 3720, 3719, 3718, 3717, 3715, -1000, -1000, 81949,
	24820, 81400, 80851, 109259, 24259, 90142, 89593, 3714, 3713, 3712,
	108710, 75909, 1033, 1962, 1438, -1000, -1000, -1000, -1000, -1000,
	-1000, -33, 73665, 3486, 114728, -1000, 305, -1000, -1000, -1000,
	-1000, -1000, -1000, 46976, 856, 46388, 686, 45800, 409, -1000,
	-1000, -1000, -1000, 75348, -1000, 108161, 2410, 3710, 3708, 1135,
	3706, 3220, 1772, 3704, 1789, 1216, 3694, 3693, 3691, 3686,
	3685, 3684, 3683, 1424, 107612, 2920, 1462, 107063, 1620, 74787,
	1031, 89044, 93978, 2584, 106514, 1261, 1256, -1000, -1000, -1000,
	-1000, 3081, 2803, 2793, 1374, -1000, -1000, -1000, -1000, 58829,
	7623, 6470, -1000, -1000, 10987, 105965, 61624, 93978, 93978, -1000,
	-1000, -1000, -1000, -1000, 45212, 527, 44624, 733, -1000, -1000,
	59388, 2874, -1000, -1000, -1000, -1000, 44036, 504, 43448, 727,
	114728, -1000, 2919, 1763, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2257, 1631, 3493, 2697, 74226, 2004, 1375, 3293, 3079, 3077,
	1522, 3028, 3682, 2549, 3026, 3020, 3005, 3000, 2999, 1566,
	2528, 301, 2550, 31196, 2908, 1718, 42860, 1497, 1542, 2998,
	2993, 3510, 1942, 1955, 2031, 80302, 3676, 3675, 3258, 2984,
	2980, 2729, 2971, -1000, 2867, 1417, -1000, -1000, -1000, -1000,
	1492, -1000, -1000, -1000, -1000, 84673, -1000, -1000, 1293, -1000,
	-1000, 1293, -1000, -1000, -1000, -1000, -1000, 1234, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1580, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2172, -1000, 2029, -1000, -1000, 2503, 3264, 3264, 3264,
	3336, 508, 500, -1000, 181, -1000, -1000, 126691, -1000, -1000,
	48140, 48140, 48140, 48140, 48140, 48140, 48140, 48140, 2092, -1000,
	779, -1000, -1000, 829, -1000, 778, 708, 651, -1000, -1000,
	-1000, -1000, -1000, -1000, 770, -1000, -1000, -1000, -1000, -1000,
	-1000, 3486, -1000, 27680, -1000, -1000, -1000, 465, 768, 48140,
	-1000, -1000, 3542, 3541, 944, -1000, 297, 973, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2918, 767, 766, -1000, 762, 761, 760, 759, 757, -1000,
	-1000, -1000, 756, 752, 750, 742, 741, 740, 739, 738,
	-1000, 1978, -1000, -1000, -1000, -1000, -1000, -1000, 687, 685,
	685, 685, -1000, 1024, -1000, -1000, -1000, 302, 684, 265,
	682, 679, 678, -1000, 737, 728, 723, 722, 721, 720,
	719, 717, 714, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1023, -1000, -1000, -1000, -1000, -34, 114728, -1000, 518, -34,
	-1000, -1000, 712, -1000, 35828, 35828, 35828, -1000, -1000, 2263,
	48140, -1000, 2384, -1000, -23, -23, 883, 57168, -1000, 54408,
	883, 284, 839, 63267, -1000, 2864, -1000, -1000, 709, 294,
	-1000, -1000, -1000, -1000, 25379, 2863, 114728, 114728, 93978, 93978,
	93978, 3670, 3157, 48140, -1000, -1000, 68174, 114728, 94520, -1000,
	-1000, 3433, 69265, 67632, 114728, 2917, 71456, 3669, -1000, -1000,
	-1000, -1000, -1000, 3127, 3668, 3667, 3665, -1000, 114728, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 241, 3126, -1000, -1000,
	97772, 241, 3121, -1000, 241, 3120, -1000, 97230, -1000, -1000,
	2226, 3119, -1000, -1000, 243, 3118, -1000, -1000, -1000, 242,
	3116, -1000, -1000, 293, -110, 3113, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 126691, -1000,
	-1000, -1000, 70907, -1000, 3261, -1000, -1000, 114728, -1000, 48140,
	-1000, 3432, 1597, 77578, 3385, -43, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2482, 2442, 1162, 2301, -1000, 3167, 1327,
	-1000, 33512, 3208, -1000, -1000, -1000, 286, 25379, -1000, -1000,
	-1000, -1000, -1000, -1000, 2311, 3104, 1414, -1000, 2300, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1997, 3102, -1000,
	2248, 3067, 1981, -1000, -1000, 2966, -1000, 3250, -1000, -1000,
	2026, 3063, -22, -1000, -1000, 2408, -1000, -1000, -1000, -1000,
	1884, -1000, 996, 3060, -1000, 88495, 3086, 61065, 59388, 73665,
	-39, -1000, -1000, -1000, -1000, -210, -1000, 23698, 126691, -1000,
	-1000, -1000, -1000, 1722, 126691, 942, -1000, -1000, 3058, -1000,
	126691, 936, -1000, -1000, 3057, -1000, 2916, -1000, -1000, 2373,
	-1000, -1000, 3664, -1000, -1000, 3663, -1000, 3662, 3661, 3659,
	-1000, 1690, 1956, 3657, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 87953, 2260, -1000, -1000, 86855, 2913, -1000, 2371,
	3384, -1000, 87404, 1030, -1000, 996, 2367, -1000, 96688, 1055,
	2362, -1000, 3656, 3349, 2618, 996, 2361, -1000, -1000, -1000,
	-1000, -1000, 1066, -1000, 64905, -1000, 64905, -1000, 1557, -1000,
	120148, -23, 93978, 3486, -1000, -53, -1000, -1000, -1000, 1088,
	-1000, 58280, -1000, 58280, 99412, 77029, 978, 845, 66541, 126691,
	-1000, -1000, -1000, -1000, 126691, -1000, -1000, -1000, -149, 2689,
	-1000, 77029, 60506, 126691, -1000, -1000, -1000, -1000, 126691, -1000,
	-1000, -1000, 77029, 86855, -1000, 105416, 86313, -1000, -1000, 1398,
	2536, -1000, -1000, -1000, 77029, 1321, 77029, 77029, 77029, -1000,
	104867, -1000, -1000, 1969, 1560, 3254, 1961, 93978, -1000, 1840,
	-1000, -1000, -1000, 3276, 114728, -1000, -1000, 2911, -1000, 70358,
	96146, -1000, 95604, -1000, 95062, -1000, 93978, -1000, 93978, -1000,
	3655, 3653, 3652, -1000, -1000, 3651, -1000, 3648, 3269, -1000,
	690, 42272, 126691, 3268, -1000, 3646, 3375, 2908, 126691, -1000,
	2990, 1668, 1657, 114728, -1000, -1000, 114728, -1000, 114728, -1000,
	-1000, -1000, 1471, -1000, -1000, 2477, -1000, -1000, -1000, -1000,
	93978, 93978, 93978, 93978, 1349, -1000, -1000, -1000, 2941, 3638,
	1678, -1000, 1835, -1000, 2861, 3271, -1000, 1395, 1729, -1000,
	-1000, 250, -1000, -1000, -43, -1000, 119606, -1000, 2503, -1000,
	114728, -1000, 2472, 2888, 2905, 1685, 2284, 2560, -1000, 41684,
	2575, 51596, 2292, 181, -1000, -1000, 181, 181, 32936, -1000,
	-1000, 69265, 69265, 25379, 1243, 48140, 48140, 48140, 48140, 48140,
	48140, 48140, 48140, 48140, 48140, 48140, 48140, 48140, 48140, 48140,
	48140, 48140, 48140, 48140, 48140, 48140, 48140, 48140, 48140, 48140,
	48140, 48140, 48140, 48140, 48140, 48140, 48140, 48140, 48140, 48140,
	48140, 2337, 48140, 1233, 48140, 48140, 48140, 48140, 2245, -1000,
	-1000, 1894, 569, 1979, 708, -1000, -1000, -1000, 3472, 3472,
	3472, 361, 361, 361, 127078, 127078, 595, 3637, 829, -1000,
	48140, -1000, 102, 57717, 48140, 25940, -1000, 500, 9527, 2417,
	-1000, 497, 26528, -1000, -1000, -1000, 27680, 651, 41096, 48140,
	1006, 126691, -1000, -1000, 1403, 3490, 23138, 2814, 2728, 706,
	879, 878, 30608, 30020, 29432, 28844, 877, 48140, 48140, 48140,
	48140, 48140, 48140, 48140, 48140, -1000, -1000, 3496, -1000, 3490,
	-1000, -1000, -1000, -1000, 3490, 1242, 1240, 3490, -1000, 3490,
	3490, 8119, 8119, 40520, 39932, 39344, 52172, 38756, 48140, 28256,
	38168, 37580, -1000, 114728, -34, 3431, 48140, 180, -1000, 125147,
	-1000, 180, 180, 704, -55, 126691, 2667, 2667, 56074, 2473,
	2119, 2119, 2119, -1000, 883, 18629, 883, 103776, 2134, 883,
	883, 273, 304, 496, 53861, 2384, 103776, 811, 703, -12,
	-13, -17, -1000, -1000, -18, -19, -1000, -1000, 93978, 699,
	25940, 25379, 272, 1937, -58, 2559, 2558, 2557, -1000, 2556,
	-1000, 1756, -60, 1232, 93978, 114728, 1335, 3631, -69, -1000,
	5212, -66, -1000, 1358, 259, 3490, -1000, -1000, -1000, -1000,
	-1000, 3626, 3622, -1000, 1022, 697, 695, 466, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 687, 685, 685, 685,
	-1000, 302, 684, 265, 682, 679, 678, -1000, -1000, -1000,
	-1000, -1000, 2852, 93978, 114728, 1266, 3621, -210, 94520, -68,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 114728, -1000,
	-1000, -1000, 3620, -1000, 93978, -1000, -1000, 93978, 241, 3056,
	-1000, 93978, -1000, 93978, 237, 3055, -1000, -1000, 114728, -1000,
	93978, 93978, -1000, 114728, 114728, 114728, 77029, 77029, 246, -1000,
	93978, 932, -73, 1139, -43, -1000, -1000, -1000, 1293, -1000,
	1689, -1000, -1000, -1000, -1000, -1000, -1000, 1427, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 944, -1000, -1000, -1000,
	-1000, -1000, -1000, 3484, 3479, -37, -1000, -1000, 25379, -1000,
	-46, 1593, 1793, 1231, -1000, 79753, 2279, 3243, 3619, 2600,
	3238, 1530, -1000, 1463, -1000, 3354, 84673, 3401, 3415, 1308,
	-1000, 2851, -1000, -1000, 950, 1621, 1709, 1229, 1228, 84673,
	2248, -1000, 69265, -1000, 2663, 3333, 1426, 1423, 1426, 1426,
	1409, -1000, 84673, 1706, 1226, 1225, 1222, 1903, 1878, -1000,
	-1000, 1963, -1000, 1221, 1219, 870, 1862, -1000, -47, 3383,
	3413, 1302, -1000, 2848, 1214, -1000, -1000, -1000, 3329, 93978,
	25379, 1551, 1549, 1545, 1691, 1213, -38, -1000, 3393, 1209,
	1206, -1000, 2416, -1000, 77029, 1913, 3054, 2686, -1000, 1411,
	2681, 881, 2680, -1000, -1000, -1000, 881, -39, 73665, 114728,
	256, -1000, 102, 48140, 48140, 102, 48140, 102, 3372, 3049,
	-1000, -1000, -1000, -1000, -1000, 3618, 1927, 2496, -1000, -1000,
	677, 2359, 2835, 114728, 2566, -40, 93978, -1000, 69816, 3047,
	72005, 2248, 2355, -1000, -1000, 85764, -1000, 3037, 518, 2351,
	-1000, 694, 3617, 3027, -1000, 119064, -1000, 3261, 1259, 3025,
	1076, 661, 3428, -1000, 661, 65447, -1000, 114728, -1000, -23,
	5551, 78669, -74, -76, 494, -1000, 104325, 114728, 1073, 79211,
	114728, 3196, 993, 59388, -1000, 59388, -91, -149, 2674, 1454,
	978, 978, 881, -1000, 881, -1000, 93978, 2903, -1000, -1000,
	77029, 978, 978, 978, -1000, -1000, -1000, -1000, 3616, 3615,
	3614, 3613, -1000, -1000, 994, 93978, 114728, 93978, -1000, 233,
	-1000, 114728, -1000, 114728, 114728, 93978, -1000, 994, 114728, 994,
	114728, 994, 114728, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	102, -1000, -1000, 126691, -1000, 48140, -1000, -1000, 3612, 1568,
	-1000, 2902, -1000, 2892, -1000, 14, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1762, -1000, -1000, -1000,
	-1000, 93978, 93978, 93978, 93978, 114728, 3181, -1000, 114728, 3177,
	93978, -1000, -1000, 84673, -1000, 2472, 2888, -1000, -1000, -1000,
	-1000, -1000, -1000, 1380, 2198, -1000, 2527, -1000, 1495, -1000,
	-1000, -1000, 126691, 52731, -1000, -1000, 126691, 1752, -1000, 51020,
	50444, -1000, -1000, 1630, 93978, 2578, -1000, 2578, -194, -1000,
	124949, 2526, 93978, -1000, -1000, -1000, -1000, -1000, 935, 632,
	632, 1301, 1301, 1301, 1301, 3364, 4865, 5912, 5319, 545,
	545, 6675, 6675, 6675, 6675, 6675, 545, 435, 361, 361,
	435, 435, 435, 435, 435, 361, 361, 361, 545, 545,
	545, 361, 127078, 126819, 11170, 48140, 48140, 1205, 1882, 569,
	10115, 48140, 11373, 11373, 11373, 11373, -1000, 2267, -1000, -1000,
	-1000, -1000, 2834, 675, 52172, 52172, -1000, -1000, -1000, -1000,
	27104, 48140, -1000, -1000, -1000, -1000, 36992, -1000, -1000, 18048,
	-319, 493, -1000, 232, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 492, -185, 9,
	-1000, 48140, 48140, 48140, 486, -1000, 231, 48140, 114728, -1000,
	17175, 807, -218, -1000, -92, 1430, -1000, 48140, -1000, -1000,
	1204, -1000, 1203, 1202, 1201, -1000, 674, 485, -1000, 224,
	-1000, 2114, 673, 672, 48140, -1000, -1000, -1000, -1000, -1000,
	124335, -1000, -1000, 124070, -1000, -1000, 123872, -1000, -1000, 123698,
	-1000, -1000, -1000, 126432, 16722, 15985, 15343, 8912, 14661, 13632,
	-93, 483, -98, 471, 919, 918, 470, 469, 468, -99,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -100, 467, -1000, 2833, -185, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 461, -1000, 456, -1000, 126224,
	-185, 455, 8045, -1000, 52172, 52172, 52172, 52172, -1000, 453,
	-1000, 124768, -1000, 126050, 36416, 36416, 36416, 452, 125784, 48140,
	-185, -107, -1000, -108, -1000, -1000, 548, -114, 1012, 35828,
	54975, 25379, -1000, 1012, 1012, 48140, -1000, 48140, 2541, -1000,
	-1000, -1000, -1000, 2540, 1939, 2667, 56074, -1000, -1000, -1000,
	-1000, 103776, -1000, 3486, 2877, -1000, 103776, -1000, -1000, 114728,
	518, -1000, 103776, 103776, 25379, 883, -1000, 883, 103776, 691,
	-1000, -1000, -1000, -1000, -1000, 451, 62171, 9, 221, 25379,
	996, -1000, -1000, 2644, 2644, 2644, 2644, -1000, -1000, 114728,
	1200, -41, -143, 2673, -1000, 3449, -1000, 1991, -1000, 69265,
	-1000, 826, 1046, 25379, -1000, -1000, -1000, 671, -1000, 3490,
	3490, -1000, 3490, 114728, 2828, 159, 2670, -1000, 158, 72005,
	72005, 3609, -1000, -1000, 241, -1000, 93978, 241, 241, -1000,
	93978, 93978, 2226, -1000, 243, -1000, 242, -1000, -1000, -110,
	-1000, 1008, 33512, -1000, 1293, -1000, -1000, 1521, -1000, 1932,
	-1000, 1239, -1000, -1000, -1000, -1000, 33512, -1000, 2475, 114728,
	114728, 93978, -1000, 114728, -1000, 2036, 72005, -1000, 2349, 118522,
	2346, 69265, 114728, -1000, -1000, 669, 967, 2523, 2521, 1071,
	114728, 114728, 2517, 117980, 117438, -1000, 3607, 114728, 1990, 48140,
	3328, 2164, 2105, 102, 102, -1000, 102, 102, 102, -1000,
	665, 1366, 93978, 93978, 114728, 72005, 93978, 1888, -1000, -1000,
	-1000, -1000, -1000, 85215, -1000, -1000, 3495, 3494, -1000, 1426,
	-1000, -1000, -1000, 1426, 2248, 1694, 114728, 72005, 93978, 72005,
	116896, 116354, -1000, 1687, 114728, 1482, -1000, 870, 2007, 102,
	102, -1000, 102, 102, 102, 663, 25379, 1881, -1000, 2929,
	114728, 3537, 115812, 3535, 114728, 114728, 114728, 72005, 3262, 114728,
	114728, 72005, 2416, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 73123, 1092, 996, 1672, 1199, 1197,
	84673, 2025, 1670, 114728, 59388, 992, 59388, 2627, -1000, -1000,
	22578, -1000, 126691, 126691, -1000, 126691, -1000, 69816, 114728, -1000,
	1029, 114728, 79211, 963, 3022, 64363, -210, 978, 77029, 93978,
	-40, 2566, 114728, -1000, -1000, 2248, 3018, 518, 2348, -1000,
	77029, 3427, 3011, 662, 3606, 3605, -1000, 93978, 2259, 2347,
	-1000, -1000, 115270, 3140, 870, 114728, 1012, 56074, 1906, -1000,
	62720, 1043, 114728, 1773, 134, -1000, -1000, -1000, 4, 114728,
	-1000, 835, -1000, -1000, 5551, 5551, 978, -233, 656, -1000,
	903, 900, 59947, 77029, -115, -1000, -1000, -1000, -1000, 2346,
	93978, 114728, 1298, 2606, 114728, -117, -1000, 220, 653, -1000,
	2497, -1000, -149, -1000, 993, 59388, 2827, 2826, -1000, -1000,
	1005, -1000, 1393, 978, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -24, 114728, -210, -210, -71,
	-41, -1000, 994, -1000, 994, -1000, 994, -1000, 126691, -1000,
	-1000, 1565, 1564, 114728, -1000, 25379, 114728, 93978, 25379, 93978,
	2887, 2884, -1000, -1000, -1000, 114728, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1095, -1000, 1752, 2174, -1000, 651, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2436, -1000,
	-42, 32936, 914, -1000, -1000, 93978, -30, 48140, 48140, 7727,
	7680, 48140, 52172, 52172, -1000, 48140, 6092, -1000, -1000, -1000,
	-1000, -1000, 2824, 650, 48140, 69265, 6772, 6564, -1000, 447,
	10162, 435, -1000, 48140, -1000, 6521, -1000, 446, 35252, -1000,
	125412, -52, -122, -1000, 19202, -185, -124, -1000, -1000, 820,
	-1000, 3137, -1000, 48140, 125586, 2406, 2051, 1825, 1579, 3490,
	3531, 22018, -1000, 65994, 1013, 2142, 123433, -1000, -1000, -1000,
	-1000, 69265, 69265, 48140, 48140, -1000, 48140, 48140, 48140, -1000,
	-1000, -1000, 3490, 943, -1000, -1000, -1000, 943, -1000, -1000,
	1426, -1000, 1426, -1000, 48140, -1000, -1000, 2823, 48140, -1000,
	69265, 69265, 52172, 52172, 52172, 52172, 52172, 52172, 52172, 52172,
	52172, 52172, 52172, 52172, 52172, 52172, 52172, 52172, 52172, 52172,
	52172, 52172, 2493, 52172, 3468, 3468, 3468, 1065, -1000, 2882,
	2823, 48140, 48140, 69265, 442, 440, 436, -1000, 48140, -185,
	-1000, -1000, 8369, 649, -1000, 2428, -1000, 2726, -1000, 48140,
	-1000, -125, -1000, 2384, -1000, -1000, 2726, 2726, -129, 126691,
	56074, 56074, -1000, 647, 48140, 2538, -1000, -1000, 806, -310,
	-1000, 899, -1000, -1000, -1000, -1000, -1000, 518, -1000, -1000,
	-1000, 216, 103776, 103776, 804, -1000, -130, -1000, -1000, -137,
	-1000, 3426, 418, 25379, -1000, 1012, 2706, -1000, -1000, -1000,
	-1000, -1000, -1000, -210, 114728, 114728, 1660, 2168, 3530, -1000,
	3491, 818, 803, 182, 3490, 416, 414, 412, -210, 114728,
	114728, 1656, 114728, -1000, -1000, -1000, -1000, 241, -1000, -1000,
	-1000, 237, -1000, -1000, -1000, -1000, 2594, -1000, -43, -1000,
	-1000, -1000, 48140, -1000, -1000, 3242, 1194, 1193, -1000, -1000,
	-1000, -1000, 2806, -1000, 3010, -1000, 2343, -1000, 1057, -1000,
	1769, -1000, 48140, 645, 2604, 644, 643, 3604, 2071, 3598,
	1072, 3008, 2226, 3003, 2226, -1000, -1000, -1000, 956, -1000,
	126691, 2164, -1000, 637, 635, -1000, -46, 1584, 1782, 1192,
	1004, -1000, -1000, -1000, -1000, 48140, 48140, 103234, -1000, 457,
	3250, -31, -1000, -1000, -1000, 1649, 1191, 1190, -1000, -1000,
	-1000, -1000, 2248, 1645, 1186, 1183, -1000, -1000, -1000, -1000,
	-1000, 2340, -1000, -1000, 2996, 1002, -1000, 2943, 2939, 917,
	114728, -1000, 1001, -1000, -1000, -1000, -1000, 48140, -1000, -47,
	1181, 3381, 2333, 93978, -1000, 2226, 2995, 1179, -1000, 1178,
	-1000, -1000, -1000, 3390, 3389, 1176, -1000, -1000, -1000, -1000,
	-1000, 72564, -1000, 114728, 72005, 93978, 1676, -1000, -1000, 83589,
	84131, 114728, -210, 881, -1000, 2491, 881, 992, 2822, -1000,
	2564, 999, 93978, 3596, 411, -138, -48, 69265, 3425, -1000,
	2247, 654, 93978, 949, -1000, 3486, -1000, -1000, -1000, 998,
	-1000, 3382, 93978, 3424, 2994, 996, 102, 93978, 3502, -1000,
	-1000, 3423, 93978, 2978, 2258, 2331, 2478, 870, 78127, 996,
	2140, -94, -1000, 1773, 34664, 3246, -140, -1000, -1000, -1000,
	1012, 65447, 56074, 48140, 3591, -148, -1000, -1000, -1000, -1000,
	-1000, 101059, 101059, 77029, 77029, 77029, 978, 114728, 114728, 79211,
	-1000, -1000, 622, 114728, 114728, 621, -1000, 114728, 114728, 3589,
	77029, -49, 616, -1000, 898, 894, 893, -1000, -1000, -1000,
	-1000, -1000, -1000, 993, -1000, -149, 59388, 102, -1000, 2155,
	93978, -1000, 21458, -1000, -1000, -1000, -1000, -1000, -1000, 994,
	-1000, -1000, 2011, 2291, 2011, 1791, 1766, -1000, -1000, 2167,
	-1000, -1000, -1000, -1000, 2570, 3256, 25379, 3358, 11373, 48140,
	48140, 337, 1460, 792, 11373, 48140, 48140, 69265, 12722, -153,
	48140, 48140, -1000, 48140, 802, 126691, -1000, 3522, 48140, 396,
	395, -1000, -1000, -1000, 3488, -1000, -1000, -1000, 126691, 48140,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 393, -1000, 160,
	-1000, -1000, -1000, 121774, -1000, 48140, 392, 3325, -1000, 391,
	388, 618, 4990, 123235, 123061, 122796, 387, -1000, -1000, 383,
	382, 126691, 2882, 126691, -1000, -1000, 957, 957, 1416, 1416,
	1416, 1416, 3468, 587, 351, 410, 564, 564, 564, 2015,
	1065, 1065, 564, 564, 564, 1065, 2819, 2492, 615, 7905,
	-1000, -1000, 126691, 126691, 375, -1000, -1000, -1000, -185, 371,
	8369, -1000, 2720, 3317, 126691, -1000, 56074, 2720, 2720, -1000,
	-1000, 1939, 114728, 126691, 56074, -1000, 2877, -1000, 19773, -1000,
	25379, -1000, -1000, -1000, -1000, 3486, -1000, 62171, -1000, 605,
	-1000, 5, -1000, 2706, -1000, 892, -1000, -1000, 77029, 77029,
	-210, -156, 114728, -1000, -1000, 800, 3588, 816, 25379, 369,
	-1000, -1000, -1000, -210, -210, 114728, -210, -1000, -1000, -1000,
	3194, 126691, 114728, 114728, 1396, 102692, 114728, 2977, -1000, 2126,
	-1000, 1071, 122605, 56621, -1000, 56621, 114728, -1000, -1000, -1000,
	1818, 1498, 3587, 1127, -1000, 3280, 114728, -1000, 114728, -1000,
	-1000, -1000, 114728, 114728, 93978, 114728, -1000, 72005, 2951, -154,
	126691, -50, -1000, 890, -1000, 1433, -1000, 20898, 114728, 72005,
	93978, 114728, 72005, 93978, 2965, 114728, 2086, -1000, -1000, 2938,
	-1000, 2947, -159, 25379, -1000, 3515, 3514, 2962, 3289, -1000,
	114728, 3513, 114728, 93978, 3187, -1000, -1000, -1000, -1000, -1000,
	1636, 1174, 1173, 2246, -65, 2236, 2162, -71, 992, -72,
	598, -1000, 889, -1000, -1000, 888, -1000, 992, -1000, 77029,
	59388, 3584, 518, -1000, 2587, -1000, 98863, 2190, 102, -1000,
	3583, 101608, 596, -1000, 2150, -1000, 793, -1000, 2447, 72005,
	2248, 102, 93978, -1000, -1000, 518, 366, -79, -1000, 3004,
	1067, 25379, 93978, 2961, 2494, 870, 78127, -1000, 1259, 2560,
	-1000, -88, -1000, 680, 102, 2140, -1000, -94, 126691, -1000,
	886, -1000, -161, -1000, -1000, 365, -1000, 3186, 3185, -1000,
	2725, 56621, 591, 590, 114728, 3184, -1000, -1000, -162, 2946,
	2946, 77029, 59388, 77029, -1000, 993, 881, -1000, 2317, -1000,
	-1000, -1000, -1000, -1000, 25379, 1616, -1000, 589, 585, -1000,
	-1000, -1000, -1000, 3256, 11373, 11373, 48140, 48140, 48140, 11373,
	12722, -168, -1000, 11373, 11373, -185, -1000, -1000, 125412, -1000,
	-1000, -1000, 126691, -1000, 20338, 2066, -1000, 122424, -1000, 32936,
	-1000, -1000, 48140, 48140, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 52172, 2807, 584, 69265, -1000, -1000, 363, 1010,
	48140, 49868, 2384, 1010, 1010, -1000, -173, -1000, -1000, -1000,
	3486, 5, -1000, -1000, 3576, 25379, -1000, 77029, -1000, -1000,
	3573, -167, 813, -1000, 3572, -1000, -1000, 109, -1000, -1000,
	-1000, 2651, 3422, -1000, 1857, -1000, 114728, -1000, 114728, -1000,
	25379, 114728, 2753, 1267, -1000, 967, 2512, 575, 52172, 93978,
	923, -1000, 3443, 2685, -174, -1000, 114728, 48140, 114728, -180,
	-182, 2307, -1000, -1000, 1265, 48140, -1000, -1000, -1000, 69265,
	574, 2226, 2226, -189, -191, -1000, -1000, -1000, 48140, 1171,
	114728, 34088, -1000, 3565, 3250, -1000, -1000, -1000, -1000, -1000,
	-1000, 114728, -1000, 114728, -1000, 48140, 1169, -1000, -1000, -1000,
	3512, 2226, 25379, 2226, -1000, 2226, 3289, 1109, 114728, 72005,
	93978, 1744, 1744, 2881, -1000, 2216, 2216, 77029, 59388, -1000,
	-110, 992, -1000, 3421, 2591, 3561, -1000, -1000, -1000, -1000,
	2511, -1000, -1000, 114728, 2506, 979, -1000, -196, -1000, 885,
	884, 79211, 963, 966, -1000, -113, 573, -1000, 880, -1000,
	-1000, -1000, -1000, 518, 3419, -1000, 3509, 572, 571, 114728,
	2234, 570, 25379, 3240, 870, 78127, -1000, 3140, 1773, -1000,
	2321, 114728, 3229, -1000, 2560, 569, -1000, 978, 567, 566,
	4746, 4746, -197, 56621, 56621, -198, 563, 978, -1000, -199,
	-1000, -1000, -1000, -1000, -1000, -120, -1000, 909, 908, -1000,
	-1000, 93978, 93978, 48140, 48140, -1000, 11373, 11373, 11373, -1000,
	339, -1000, -1000, 2140, 3314, -1000, -127, 122326, 17789, 8633,
	52172, 69265, -204, -1000, -1000, 114728, 126691, -135, -1000, 126691,
	562, 561, 438, -1000, -1000, -1000, 633, -1000, -1000, -1000,
	114728, 3559, -1000, 114728, 102150, 114728, -1000, -1000, 2013, -1000,
	-1000, -1000, 114728, 2323, -1000, -1000, -1000, 1070, 48140, 7905,
	551, 48140, -1000, 3412, -1000, 2588, 2775, 1860, 56621, -1000,
	3256, -1000, 17615, -1000, 1063, 1907, -1000, -1000, -1000, 126691,
	3289, 56621, -1000, -1000, 547, 546, 126691, 543, 876, 2785,
	-1000, -1000, -1000, -1000, -1000, 126691, 542, 3381, -1000, -1000,
	-1000, -1000, 2226, 93978, -1000, -1000, -1000, 1163, -1000, -1000,
	-1000, -1000, 3558, 3557, 2784, 83589, -1000, -205, -1000, -1000,
	1920, 102, 2009, 2649, -1000, 2190, 528, -1000, -1000, 2181,
	2585, -1000, 101608, 33512, 33512, 336, 3409, 966, -1000, 3469,
	-1000, 3176, 3176, 48140, 3408, 102, -1000, 3502, 56621, -1000,
	93978, 56621, 2223, 1963, 2453, 78127, -1000, 2478, -1000, -1000,
	-211, 114728, 1773, -1000, -1000, 77029, 77029, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1063, -212,
	-213, -1000, 77029, -1000, -1000, 2317, -1000, 114728, -1000, 114728,
	-1000, -1000, -227, -228, -1000, 1924, 48140, 32936, -1000, -1000,
	8633, -235, -1000, -164, -1000, 3407, 49868, 3555, 3550, 3549,
	-1000, -210, -1000, -210, -1000, 1850, -1000, -1000, -1000, 2959,
	2718, 17349, 2430, 114728, 16083, -1000, 2757, -1000, -1000, 2591,
	523, -1000, -1000, -1000, -1000, 914, 114728, 2591, 2716, 93978,
	1069, -236, 2011, 2011, 48140, 32360, 2085, 48140, -1000, -1000,
	3289, 114728, -1000, -1000, 114728, 2217, -1000, 2759, 3476, -1000,
	963, -1000, 2084, 114728, -1000, 3273, -1000, 3183, -1000, -1000,
	-1000, 2587, 102, -1000, -1000, -1000, -237, 126691, 102, -1000,
	318, -238, 1067, -246, 93978, 1875, -1000, 870, -1000, 2494,
	1012, -1000, -1000, -251, -252, 1860, 1063, 2007, -253, -1000,
	-254, -259, -1000, -1000, 314, 49292, 49292, 49292, -185, -194,
	-1000, 114728, 519, -1000, -1000, -1000, -1000, -1000, 2935, 989,
	-1000, 2202, 1893, 313, 1091, -1000, -1000, 2007, 114728, -1000,
	-1000, -1000, 987, 518, -1000, 48140, 1063, -260, -1000, 1042,
	-261, -1000, 1040, -262, -1000, 2780, -1000, -269, 2226, -268,
	234, 1744, 980, 3369, -1000, -1000, -1000, 2181, 93978, -270,
	-1000, -1000, 2233, -1000, 2591, 979, -1000, -1000, -1000, 1063,
	517, 1860, 516, 1445, 870, -1000, -1000, 1426, 3240, 3148,
	978, 978, 2591, 1860, 977, -1000, 978, -1000, -1000, -1000,
	3030, -1000, 53290, 2182, 1765, 124509, 3030, 3030, -1000, -1000,
	114728, 3348, -1000, 2206, 2203, 1490, -1000, -1000, -1000, -1000,
	-1000, -1000, 2685, -271, 3346, 2430, 126691, 2591, -1000, 2011,
	2642, -1000, 2011, 2764, -1000, 2076, -1000, -1000, -1000, 2738,
	-1000, 2762, -1000, 1661, 3467, 2445, 515, -1000, 114728, 1745,
	1673, 3547, 2009, 2181, 1860, 56621, 2591, 56621, -1000, -1000,
	114728, -1000, 1963, 1329, -1000, -1000, 2007, 2591, 1012, 514,
	-1000, -1000, 1753, 3420, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 869, -1000, 3164, -1000, 1093, 2118, 2118, 1012,
	-1000, 855, 2202, -1000, -1000, 512, -1000, 511, -1000, 2160,
	114728, 2147, -1000, -1000, -1000, -1000, 114728, -1000, -1000, 3546,
	-1000, 963, -1000, 2591, -276, 2007, -277, -1000, -210, 1875,
	-1000, 1512, 977, 2007, -1000, 1760, -1000, -1000, 2129, 48716,
	48140, -1000, 3453, -1000, -1000, 2522, -1000, -1000, 48140, 2685,
	48140, 48140, -1000, 234, 63816, -279, -1000, 2181, 2007, 1063,
	977, 1860, 1445, 65447, 1012, 977, -1000, -1000, -1000, 126691,
	-1000, -1000, -1000, 126691, -1000, -284, -292, -1000, -233, 101059,
	2180, 2445, 977, 1860, 1012, 2591, -1000, -267, -1000, 1012,
	2007, 1147, -302, -1000, -1000, -1000, -1000, 1012, 2591, -1000,
	2007, -1000, -1000, -1000, -1000, 510, -1000, -1000, 2007, 977,
	48140, 977, 1012, -303, 1012, -1000, 2007, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4356, 4355, 4352, 4349, 4345, 4344, 4339, 4336, 4335,
	4334, 4333, 4331, 4329, 4326, 4325, 4321, 4319, 4318, 4317,
	4315, 4314, 4313, 4310, 4307, 4306, 4305, 4304, 4303, 4302,
	4300, 4298, 4297, 4296, 4295, 4294, 4293, 4291, 4290, 4288,
	4287, 4283, 4276, 4273, 4271, 4269, 4268, 4264, 4260, 4250,
	4249, 4245, 4244, 4238, 4237, 4227, 4226, 4225, 4223, 4221,
	4220, 4219, 4218, 4213, 54, 4212, 4205, 4202, 4201, 4195,
	4194, 4190, 4187, 4186, 4185, 4183, 4182, 4181, 4179, 4178,
	4177, 4175, 4173, 4169, 4168, 55, 4167, 270, 4166, 4164,
	4163, 4158, 4157, 4156, 4155, 4153, 4152, 4151, 4150, 4147,
	268, 4146, 118, 161, 4145, 4144, 3747, 4143, 4142, 265,
	4141, 4137, 4135, 4134, 277, 4132, 4127, 4125, 4124, 4122,
	4121, 4120, 4119, 4118, 4117, 4116, 130, 202, 4114, 4113,
	2694, 4111, 4110, 4102, 4099, 4098, 4094, 4092, 4090, 4086,
	4084, 245, 4083, 263, 4082, 4081, 4080, 4078, 4077, 4076,
	4073, 4072, 4070, 4068, 4067, 4066, 4065, 4064, 4062, 4061,
	4057, 4056, 4055, 4052, 4051, 4045, 4044, 4043, 4042, 4040,
	4037, 4034, 4033, 4030, 4029, 4027, 4022, 4020, 4018, 4017,
	4016, 236, 275, 201, 4015, 4004, 262, 260, 4003, 4001,
	4000, 3998, 3997, 132, 6, 38, 3996, 3995, 90, 87,
	82, 97, 98, 93, 3994, 109, 3993, 121, 67, 3990,
	11, 2, 217, 239, 8714, 232, 3986, 3985, 3983, 241,
	192, 3979, 233, 3976, 3974, 3973, 3972, 3971, 66, 53,
	175, 172, 170, 164, 96, 3970, 158, 106, 79, 56,
	42, 13, 86, 210, 21, 3968, 251, 8, 135, 5,
	35, 3966, 3965, 3960, 3959, 3475, 125, 3958, 258, 237,
	167, 3955, 3954, 3953, 370, 3951, 3950, 52, 3949, 100,
	77, 123, 16, 126, 3948, 141, 33, 3947, 159, 61,
	3946, 160, 94, 83, 10484, 10226, 3945, 3944, 112, 69,
	140, 259, 182, 179, 193, 199, 171, 153, 110, 204,
	200, 169, 60, 3943, 247, 3942, 3408, 78, 177, 151,
	5047, 3940, 3938, 3937, 91, 195, 99, 3936, 3935, 72,
	12, 14, 1, 15, 139, 19, 27, 22, 3934, 30,
	116, 46, 40, 3930, 34, 3929, 3928, 3926, 3925, 3924,
	64, 157, 3921, 274, 3920, 88, 49, 133, 3919, 666,
	214, 3918, 224, 127, 3917, 3915, 244, 203, 176, 3914,
	74, 225, 3912, 3911, 3909, 3908, 3907, 134, 3, 129,
	3906, 3905, 145, 3904, 48, 228, 194, 3903, 68, 3902,
	3901, 168, 108, 144, 272, 183, 222, 115, 220, 186,
	226, 3899, 3898, 3897, 219, 3895, 3894, 218, 150, 3893,
	3892, 238, 281, 89, 43, 81, 230, 80, 191, 155,
	3889, 197, 3888, 3886, 266, 180, 208, 24, 4, 103,
	128, 3885, 7, 227, 154, 235, 114, 3881, 6769, 1685,
	2632, 3878, 3876, 148, 122, 76, 124, 149, 253, 105,
	3875, 3874, 2232, 3872, 3871, 3870, 3869, 185, 3867, 3865,
	3859, 146, 147, 187, 3856, 95, 70, 47, 20, 113,
	248, 273, 102, 221, 178, 249, 3853, 3852, 3851, 184,
	3848, 73, 107, 163, 196, 240, 58, 3847, 117, 3846,
	152, 453, 63, 156, 3845, 212, 3842, 3841, 3839, 3837,
	3836, 3835, 3834, 246, 229, 3832, 3830, 3827, 32, 190,
	3825, 252, 181, 174, 131, 50, 3824, 92, 4850, 3823,
	165, 261, 57, 255, 1751, 256, 3822, 3634, 51, 3821,
	0, 14250, 8090, 11564, 12924, 3820, 5265, 3819, 3817, 3816,
	211, 143, 3814, 3813, 3812, 111, 3811, 84, 3808, 3807,
	71, 3802, 28, 18, 17, 26, 23, 302, 291, 3801,
	3800, 25, 142, 137, 3799, 264, 223, 3798, 3796, 3795,
	3794, 104, 3792, 44, 3791, 31, 3790, 3789, 45, 10,
	39, 3788, 3787, 198, 3786, 216, 243, 3785, 166, 3784,
	65, 136, 3781, 3780, 3778, 62, 59, 250, 85, 3777,
	278, 3776, 205, 3775, 3774, 29, 3773, 3772, 242, 3771,
	3768, 3767, 3765, 3764, 37, 206, 173, 215, 3763, 3762,
	162, 3761, 3760, 3759, 271, 3757, 3756, 36, 3755, 9,
	3753, 3752, 207, 3121, 3750, 3744, 41, 3742, 188,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 49, 49, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 36, 31, 31, 32, 32,
	33, 34, 34, 10, 10, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 17, 17, 37, 37, 18, 18,
	39, 39, 19, 19, 40, 40, 587, 587, 605, 605,
	22, 22, 42, 42, 23, 43, 16, 588, 588, 588,
	588, 35, 24, 44, 28, 28, 28, 28, 28, 196,
	196, 196, 196, 21, 21, 38, 38, 231, 231, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 583, 583, 233, 233, 232,
	226, 226, 227, 227, 589, 589, 234, 234, 234, 236,
	236, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 482, 482, 482, 515, 515, 514, 514, 514, 513,
	513, 609, 609, 610, 610, 610, 610, 610, 129, 129,
	380, 380, 380, 53, 53, 53, 53, 53, 578, 578,
	198, 198, 198, 200, 200, 199, 199, 199, 199, 199,
	76, 76, 594, 594, 595, 595, 593, 596, 596, 596,
	197, 197, 197, 125, 125, 125, 125, 125, 125, 126,
	126, 127, 127, 201, 201, 201, 203, 203, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 207, 15, 15,
	15, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	105, 105, 517, 517, 518, 518, 192, 192, 193, 193,
	193, 193, 194, 194, 195, 195, 195, 67, 67, 204,
	204, 206, 206, 205, 205, 205, 205, 205, 55, 55,
	55, 55, 55, 55, 55, 56, 56, 56, 56, 56,
	57, 57, 57, 57, 57, 57, 58, 58, 58, 58,
	58, 58, 65, 65, 65, 65, 65, 183, 183, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 73, 73, 73, 73, 611, 611, 611, 611,
	611, 611, 611, 611, 611, 611, 611, 611, 611, 611,
	611, 611, 611, 611, 611, 612, 612, 613, 613, 614,
	614, 615, 615, 615, 615, 615, 615, 615, 615, 615,
	615, 615, 615, 615, 615, 615, 615, 615, 615, 615,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 82, 82, 342,
	342, 305, 305, 83, 83, 83, 84, 84, 85, 85,
	69, 69, 576, 576, 357, 357, 473, 473, 70, 584,
	584, 584, 586, 586, 585, 585, 87, 87, 379, 379,
	88, 88, 88, 88, 88, 88, 89, 89, 89, 89,
	89, 89, 89, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 97, 97, 97,
	97, 97, 98, 98, 98, 95, 95, 95, 92, 92,
	92, 91, 91, 91, 96, 96, 96, 575, 294, 294,
	94, 94, 94, 93, 93, 93, 358, 358, 99, 99,
	99, 99, 306, 100, 100, 100, 100, 100, 100, 100,
	100, 103, 103, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 475, 475, 101, 101,
	101, 440, 440, 106, 106, 106, 395, 395, 107, 107,
	107, 107, 107, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 128, 128, 128, 128, 128, 128, 128, 128,
	580, 580, 350, 350, 258, 258, 258, 258, 118, 118,
	118, 118, 119, 119, 119, 120, 120, 188, 188, 135,
	135, 135, 135, 135, 134, 134, 134, 134, 134, 134,
	59, 59, 59, 60, 60, 61, 61, 62, 62, 63,
	63, 64, 64, 64, 64, 64, 137, 137, 606, 606,
	139, 136, 136, 136, 138, 138, 138, 138, 140, 141,
	141, 141, 141, 141, 141, 141, 141, 142, 142, 507,
	507, 366, 366, 505, 505, 527, 527, 506, 506, 312,
	312, 312, 312, 312, 313, 313, 313, 516, 516, 516,
	516, 516, 516, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 189, 189, 190, 191, 191, 191, 191, 191,
	166, 166, 166, 182, 182, 182, 182, 182, 182, 182,
	169, 169, 169, 153, 153, 144, 144, 144, 144, 144,
	144, 144, 148, 148, 148, 148, 148, 148, 148, 148,
	145, 145, 155, 155, 155, 155, 155, 149, 149, 150,
	150, 150, 150, 176, 176, 152, 152, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 146, 146, 146, 146,
	157, 157, 157, 157, 402, 402, 402, 181, 181, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 179, 179, 179, 179, 179,
	179, 597, 597, 598, 598, 173, 173, 173, 173, 173,
	173, 454, 454, 167, 167, 167, 167, 172, 172, 172,
	172, 175, 175, 175, 175, 385, 385, 164, 164, 164,
	165, 165, 165, 170, 170, 171, 168, 168, 174, 174,
	174, 174, 147, 147, 147, 147, 147, 147, 147, 177,
	177, 163, 163, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 616, 616, 159, 159, 159, 158,
	158, 158, 158, 161, 161, 162, 162, 162, 162, 162,
	162, 160, 151, 180, 577, 577, 573, 573, 573, 573,
	573, 573, 573, 573, 574, 574, 574, 574, 579, 579,
	111, 111, 111, 111, 111, 121, 121, 121, 121, 121,
	112, 112, 112, 112, 112, 114, 114, 113, 113, 113,
	113, 77, 77, 77, 77, 77, 14, 14, 14, 78,
	78, 249, 249, 210, 210, 210, 331, 331, 211, 211,
	320, 320, 320, 320, 208, 208, 209, 209, 79, 79,
	617, 617, 617, 590, 590, 590, 591, 591, 591, 591,
	591, 591, 314, 314, 315, 315, 420, 420, 420, 420,
	420, 318, 318, 318, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 321, 321, 235, 235, 235, 329, 330,
	330, 322, 322, 328, 327, 327, 326, 326, 325, 325,
	323, 324, 324, 324, 333, 333, 332, 335, 335, 334,
	419, 536, 536, 538, 538, 538, 538, 538, 538, 538,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 403, 403, 618, 618, 534, 534, 534, 535,
	530, 530, 531, 531, 531, 531, 531, 316, 316, 317,
	317, 317, 317, 532, 533, 348, 348, 458, 537, 537,
	539, 539, 541, 619, 619, 619, 619, 619, 619, 620,
	620, 620, 418, 418, 417, 417, 340, 340, 542, 542,
	542, 542, 543, 543, 543, 543, 543, 546, 545, 544,
	544, 544, 544, 544, 81, 81, 81, 382, 382, 381,
	381, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 185, 185, 261, 261,
	75, 75, 75, 12, 12, 12, 592, 592, 592, 80,
	80, 80, 80, 80, 80, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 582, 582, 581, 581, 262,
	262, 622, 622, 86, 86, 86, 86, 86, 86, 86,
	86, 476, 476, 477, 477, 74, 74, 74, 74, 74,
	404, 404, 401, 401, 400, 400, 347, 347, 456, 456,
	456, 457, 266, 266, 267, 267, 228, 228, 228, 30,
	29, 20, 20, 25, 25, 26, 26, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 27, 27, 46, 46,
	46, 46, 47, 47, 47, 47, 50, 50, 51, 51,
	45, 45, 45, 45, 48, 48, 41, 41, 52, 52,
	52, 599, 601, 601, 600, 600, 604, 604, 604, 604,
	604, 604, 602, 602, 603, 603, 607, 607, 608, 608,
	117, 117, 122, 122, 122, 122, 122, 123, 123, 123,
	123, 124, 124, 124, 124, 133, 133, 184, 184, 184,
	184, 184, 184, 184, 54, 54, 54, 54, 66, 66,
	66, 66, 131, 624, 624, 624, 132, 132, 132, 623,
	623, 259, 259, 414, 414, 415, 415, 625, 625, 416,
	416, 416, 416, 416, 252, 251, 253, 253, 254, 254,
	72, 72, 72, 244, 244, 243, 241, 241, 519, 519,
	246, 246, 246, 247, 247, 237, 237, 238, 238, 239,
	239, 240, 240, 250, 250, 626, 626, 109, 109, 109,
	187, 187, 304, 304, 304, 411, 411, 411, 341, 341,
	273, 273, 413, 413, 413, 413, 378, 378, 378, 186,
	186, 355, 355, 368, 368, 369, 369, 470, 470, 370,
	115, 115, 116, 116, 130, 130, 214, 214, 212, 212,
	212, 212, 212, 212, 212, 212, 219, 219, 220, 220,
	221, 221, 222, 223, 223, 223, 223, 359, 359, 224,
	224, 224, 213, 213, 213, 215, 215, 215, 215, 215,
	215, 215, 218, 218, 218, 218, 225, 225, 225, 217,
	217, 553, 553, 553, 555, 555, 557, 557, 556, 556,
	552, 552, 554, 554, 621, 621, 384, 384, 384, 338,
	339, 336, 336, 337, 337, 345, 345, 343, 344, 344,
	346, 346, 455, 455, 455, 229, 229, 229, 375, 375,
	375, 375, 376, 376, 407, 407, 405, 405, 405, 405,
	406, 406, 408, 408, 408, 409, 409, 410, 410, 372,
	372, 373, 373, 374, 374, 374, 374, 436, 436, 216,
	216, 216, 352, 352, 352, 353, 353, 426, 426, 426,
	426, 426, 426, 427, 427, 425, 425, 425, 425, 459,
	459, 459, 459, 459, 459, 459, 459, 459, 460, 461,
	461, 354, 354, 462, 412, 412, 571, 571, 571, 572,
	572, 453, 453, 463, 463, 463, 463, 463, 463, 451,
	451, 452, 452, 471, 472, 472, 388, 388, 388, 388,
	386, 386, 389, 389, 389, 389, 389, 387, 387, 464,
	464, 464, 464, 377, 377, 465, 465, 465, 465, 466,
	467, 467, 468, 468, 421, 422, 422, 478, 478, 478,
	478, 480, 351, 351, 351, 351, 351, 529, 528, 528,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 495, 495, 495, 495, 495, 495, 495, 481, 481,
	481, 481, 481, 485, 485, 485, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 486, 486, 491,
	491, 492, 492, 492, 487, 488, 493, 493, 493, 493,
	627, 627, 497, 497, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 483, 483, 483, 490, 490, 490, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 396, 396, 398, 398, 428, 428, 428, 428,
	428, 428, 428, 428, 428, 428, 428, 428, 428, 428,
	428, 428, 428, 428, 428, 428, 428, 428, 428, 428,
	428, 428, 428, 428, 428, 428, 428, 428, 428, 428,
	428, 428, 428, 428, 428, 428, 428, 428, 428, 428,
	428, 428, 428, 428, 428, 428, 428, 428, 428, 428,
	428, 428, 428, 428, 428, 428, 428, 428, 428, 428,
	428, 428, 428, 428, 428, 428, 428, 428, 428, 428,
	428, 428, 428, 428, 428, 428, 428, 428, 428, 428,
	428, 428, 428, 428, 428, 428, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 430, 430, 430,
	430, 431, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 547, 547, 547, 547,
	547, 547, 547, 547, 432, 432, 550, 550, 551, 551,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 558,
	558, 559, 559, 561, 561, 562, 562, 563, 564, 564,
	564, 565, 566, 566, 560, 560, 567, 567, 567, 567,
	568, 568, 569, 569, 569, 569, 569, 570, 570, 570,
	570, 570, 442, 442, 443, 443, 449, 449, 449, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 311, 311, 310, 263, 263, 263,
	263, 263, 263, 364, 364, 362, 362, 362, 365, 365,
	363, 363, 361, 361, 360, 360, 439, 439, 437, 437,
	441, 441, 390, 390, 496, 496, 496, 496, 496, 496,
	496, 496, 391, 391, 391, 399, 392, 392, 393, 393,
	393, 393, 393, 433, 434, 394, 394, 394, 435, 435,
	444, 448, 448, 447, 446, 446, 445, 445, 423, 423,
	424, 424, 371, 371, 628, 628, 367, 367, 469, 469,
	469, 469, 308, 308, 356, 356, 307, 307, 299, 299,
	300, 300, 300, 300, 349, 349, 450, 450, 498, 498,
	499, 499, 500, 500, 501, 501, 502, 503, 504, 438,
	438, 283, 282, 270, 271, 281, 280, 279, 269, 272,
	276, 277, 278, 274, 275, 290, 289, 288, 242, 245,
	295, 296, 296, 298, 298, 297, 297, 285, 286, 287,
	474, 268, 301, 301, 302, 302, 302, 303, 303, 303,
	303, 264, 264, 265, 265, 291, 291, 292, 293, 293,
	284, 284, 284, 255, 255, 255, 256, 256, 257, 257,
	512, 512, 509, 509, 509, 510, 510, 510, 511, 511,
	511, 511, 508, 508, 508, 508, 508, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 524, 524,
	521, 521, 522, 522, 522, 522, 522, 522, 522, 522,
	522, 522, 522, 522, 522, 522, 522, 522, 522, 522,
	523, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 526, 526,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 6, 6, 9, 6, 8,
	4, 4, 5, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 6, 6, 9,
	6, 9, 6, 5, 6, 5, 1, 1, 1, 0,
	6, 6, 6, 6, 6, 6, 4, 4, 4, 4,
	3, 4, 4, 4, 7, 7, 9, 8, 9, 5,
	3, 5, 7, 4, 12, 4, 12, 1, 3, 5,
	5, 2, 5, 3, 6, 4, 4, 6, 5, 6,
	5, 6, 4, 8, 3, 4, 2, 3, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 3, 2, 0, 1, 1, 0, 2,
	0, 7, 10, 6, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 3, 1, 1, 1, 1,
	1, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 1,
	12, 3, 1, 0, 1, 1, 2, 3, 3, 0,
	4, 6, 0, 5, 7, 6, 8, 8, 2, 1,
	3, 1, 3, 2, 5, 0, 1, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 6, 4, 9, 7, 12, 12, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 5, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 3, 4, 3, 3, 4,
	3, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 2, 0, 1, 0, 1,
	0, 4, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 7, 2,
	5, 0, 1, 3, 3, 1, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 9, 10,
	5, 2, 6, 4, 7, 7, 7, 10, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 1, 1,
	5, 3, 2, 6, 3, 3, 4, 4, 3, 1,
	3, 2, 3, 3, 1, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 2, 2,
	5, 7, 3, 3, 3, 4, 4, 6, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 2,
	6, 4, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 4, 3, 4, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 3, 4, 3, 4, 3, 5, 3, 4, 4,
	3, 4, 5, 3, 4, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 4, 4, 4, 4, 4, 3, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 4,
	3, 4, 4, 5, 1, 1, 10, 10, 3, 5,
	5, 5, 3, 5, 6, 4, 4, 5, 5, 2,
	3, 2, 5, 4, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 13,
	16, 1, 0, 1, 2, 3, 0, 2, 0, 4,
	0, 4, 5, 4, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 2,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 1, 1, 0, 1, 4, 1, 0,
	3, 7, 7, 1, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 2, 2, 2, 8, 4, 2, 5, 5,
	5, 2, 2, 0, 1, 3, 11, 12, 9, 5,
	3, 1, 5, 10, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 5, 1, 3, 1, 2, 0,
	1, 2, 2, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 6, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 2, 2,
	4, 7, 3, 4, 6, 3, 1, 1, 1, 8,
	10, 11, 7, 10, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 11, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 2, 4,
	2, 3, 1, 0, 2, 0, 1, 1, 0, 9,
	6, 6, 8, 6, 8, 5, 7, 2, 6, 7,
	4, 4, 5, 2, 4, 6, 6, 8, 6, 7,
	8, 9, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 6,
	4, 7, 3, 0, 7, 10, 1, 1, 1, 1,
	2, 2, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	12, 15, 3, 1, 0, 4, 3, 0, 1, 1,
	4, 4, 5, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 5, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 590, -102, -99, -67, -65, -106, -107,
	-88, -108, -101, -128, -133, -115, -116, -117, -129, -135,
	-184, -189, -190, -191, -3, -53, -55, -68, -87, -89,
	-100, -110, -109, -111, -118, -125, -121, -105, -59, -130,
	-134, -143, -185, -186, -187, 32, 31, 100, 80, 154,
	128, 137, 202, 382, 424, 436, 396, 142, 416, 401,
	-138, -139, 454, -54, -66, -132, -131, 73, 129, 410,
	-4, -12, -15, 29, 46, -56, -57, -58, 62, -75,
	-71, -82, -76, -69, -70, -73, -611, 102, -554, -90,
	-93, -124, -615, 161, 220, -112, -113, 365, -119, -120,
	418, -122, -123, 420, 162, -61, -60, 156, -212, -214,
	-136, -137, -188, -144, -145, -146, -147, -148, -149, -150,
	-176, -151, -152, -153, -154, -155, -156, -160, -179, -157,
	-158, -159, -162, -161, -163, -168, -164, -165, -166, -167,
	-169, -170, -172, -173, -174, -175, -177, -178, 459, -171,
	-180, 520, 49, 474, 82, 146, 428, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -52, -72, -74,
	-77, -78, -79, -86, -80, -81, -553, -91, -92, -95,
	-97, -98, -94, -96, 417, -215, -213, 587, 535, -17,
	-22, -23, -18, -19, -21, -24, -20, -25, -26, -27,
	-37, -42, -43, -39, -40, -38, -41, -44, -45, -46,
	-47, -48, -49, -50, -51, -29, -35, -36, -30, -31,
	-32, -33, -34, -16, -28, 556, 565, -218, -216, -217,
	-225, 446, 543, 494, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, -306, 2, -285, -291,
	-292, -293, -284, -255, -523, -526, 4, -520, -524, 168,
	230, 329, 21, 23, 22, 24, 25, 26, 27, 29,
	30, 41, 42, 44, 45, 46, 47, 48, 49, 53,
	55, 59, 60, 61, 62, 63, 64, 68, 73, 74,
	79, 80, 81, 82, 83, 84, 85, 91, 88, 89,
	90, 92, 94, 96, 97, 98, 99, 100, 101, 103,
	104, 105, 107, 108, 109, 117, 118, 119, 120, 121,
	123, 128, 129, 132, 127, 131, 133, 135, 136, 137,
	140, 141, 142, 144, 145, 147, 148, 149, 151, 152,
	154, 155, 156, 159, 157, 502, 158, 160, 161, 162,
	163, 166, 174, 175, 176, 181, 183, 184, 188, 189,
	190, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	203, 207, 209, 210, 211, 212, 213, 219, 220, 222,
	223, 224, 225, 226, 231, 232, 233, 237, 234, 243,
	244, 248, 249, 250, 252, 256, 257, 258, 259, 260,
	261, 263, 265, 264, 267, 270, 271, 274, 278, 279,
	283, 284, 280, 285, 286, 288, 289, 292, 290, 293,
	294, 291, 295, 297, 298, 299, 300, 301, 302, 303,
	304, 305, 306, 307, 308, 296, 311, 309, 313, 314,
	315, 327, 324, 319, 320, 316, 321, 317, 318, 322,
	323, 326, 331, 332, 335, 217, 337, 338, 341, 359,
	345, 346, 347, 350, 351, 354, 357, 358, 360, 361,
	362, 363, 364, 365, 366, 367, 369, 370, 372, 373,
	374, 376, 377, 378, 380, 382, 383, 385, 386, 388,
	389, 390, 391, 392, 393, 394, 396, 398, 397, 399,
	401, 403, 404, 405, 410, 416, 412, 413, 414, 415,
	417, 418, 419, 420, 422, 423, 424, 426, 427, 428,
	429, 430, 432, 434, 435, 439, 440, 456, 457, 476,
	436, 437, 438, 441, 442, 443, 444, 445, 449, 447,
	448, 450, 451, 452, 454, 455, 458, 459, 461, 462,
	463, 464, 465, 466, 467, 470, 472, 473, 474, 493,
	475, 477, 481, 482, 483, 484, 478, 479, 492, 486,
	487, 489, 490, 495, 496, 497, 498, 499, 500, 501,
	503, 505, 513, 514, 515, 517, 520, 521, 522, 523,
	511, 525, 526, 529, 530, 531, 534, 532, 533, 535,
	537, 540, 541, 542, 548, 547, 549, 552, 557, 558,
	560, 561, 562, 36, 50, 51, 54, 56, 58, 69,
	70, 71, 75, 124, 125, 153, 164, 165, 177, 191,
	192, 204, 206, 214, 215, 216, 238, 239, 241, 246,
	268, 334, 336, 352, 356, 371, 375, 379, 381, 395,
	431, 468, 480, 485, 506, 507, 508, 509, 516, 518,
	543, 544, 545, 550, 559, -306, 2, -285, 343, -278,
	2, -255, -255, 382, 28, 2, 28, 370, 448, 497,
	499, 2, -580, -350, 2, 28, -258, -255, 102, 202,
	446, -278, 2, -580, -350, 25, 2, -255, 2, 357,
	22, 27, 66, 77, 98, 140, 163, 185, 188, -614,
	359, 389, 434, 450, 492, 503, 517, 2, 547, 289,
	447, 494, 230, 120, 522, 441, -592, 439, 440, 357,
	387, 426, 205, 536, -259, 2, 436, -255, 289, 2,
	590, 94, 279, 74, 431, 451, -141, 514, -140, 506,
	441, -142, -507, 2, 311, -255, 590, 590, 590, 28,
	-268, -255, 494, 230, 441, 120, 490, 590, 2, 494,
	362, 547, 447, 120, 392, 230, 522, 188, 140, 27,
	441, -592, 289, 126, -578, 2, -573, 4, -524, -520,
	-300, -299, 494, 500, 120, -293, -284, 580, -292, 590,
	590, 590, 2, 249, 250, 391, 390, 451, 452, 590,
	590, 590, 590, 439, 2, 163, 22, 27, 66, 93,
	98, 126, 185, 188, 348, -612, 359, 389, 450, 492,
	496, 503, 517, -591, 475, 68, 415, 441, -590, -592,
	289, 522, 140, -400, 120, 279, 200, 530, 499, 497,
	528, 132, 237, 533, 532, 590, 590, -103, 2, 587,
	32, 31, -102, -106, 142, 454, -207, 494, 242, 2,
	-255, 590, 590, 2, 249, 250, 439, 440, 590, 590,
	186, -573, 2, 590, 590, 2, 249, 250, 439, 440,
	242, 2, 68, 443, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 2, -182,
	451, 475, 211, 47, 46, 74, 28, 388, 79, 363,
	121, 148, 523, 203, 230, 231, 257, 93, 94, -402,
	44, 250, 68, 249, 440, -597, 439, -454, 495, 442,
	448, 489, 261, 436, 514, 102, 537, 427, 562, 392,
	393, 487, 405, 280, 157, 187, 4, 120, 311, 453,
	506, 279, 435, 366, 84, -621, 2, 494, -623, 2,
	514, 514, 2, -623, 2, -623, 2, -623, 2, -624,
	514, 559, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	-213, -215, -214, 590, 590, 590, 590, 590, 590, 590,
	-182, 451, 2, 74, 28, -343, -345, 527, 240, 150,
	349, -212, -214, 2, -553, -505, 2, -428, -527, -430,
	578, 579, 571, 491, 67, -310, 328, 563, -442, 126,
	528, 343, -526, -431, -444, 153, 359, 431, -365, 8,
	9, 5, 6, 7, -264, -432, -438, 519, 167, 333,
	-303, 591, 10, 587, -550, -214, -443, 37, 206, 65,
	-509, -302, -265, -481, 241, -301, -284, -547, -548, 4,
	-520, -521, -510, -484, -492, -488, -489, -495, -255, -523,
	77, 111, 112, 110, 115, 114, 282, 281, 116, 113,
	453, 536, 66, 36, 214, 215, 246, 334, 216, 75,
	-549, 141, -522, 238, 239, 468, 51, 395, 177, 125,
	124, 336, 56, 54, 544, -493, 122, 506, 507, 508,
	509, 191, 192, 58, 164, 165, 356, 379, 485, 516,
	518, 204, 268, 43, 106, 187, 236, 218, 245, 247,
	251, 269, 272, 312, 325, 330, 353, 355, 425, 460,
	-627, 545, 480, 69, 70, -555, 397, -556, -278, -555,
	590, 590, 592, 590, -336, -338, -339, 2, 28, 138,
	587, 2, -459, 2, -460, -464, -214, 262, -463, 587,
	-461, 585, -285, 344, -551, 432, -547, -548, -264, -284,
	-302, 4, -520, -522, 589, -340, 587, 120, 494, 78,
	230, 163, -395, 587, -255, 28, 343, 510, 592, -337,
	386, -440, 587, 343, 186, 346, 60, 293, 2, 2,
	2, 2, 2, 214, -255, 494, 119, 2, 260, 2,
	2, 2, 2, 2, 2, 2, -358, 214, 2, -285,
	547, -358, 214, 2, -358, 214, 2, -401, 2, 87,
	-269, 214, 2, -255, -294, 214, 2, -289, -291, -298,
	214, 2, -296, -255, -518, 214, 2, -517, -512, 10,
	-511, 5, 4, -520, -524, -521, -523, 77, -428, 2,
	-130, 2, 60, -255, 547, 2, 2, 456, 2, 587,
	-141, 71, 514, 43, 451, -415, 2, -416, -251, -252,
	-253, -471, -254, 248, 385, 394, 566, 130, 328, 562,
	-505, -606, 186, 570, 510, -505, -366, 589, 2, 2,
	2, 2, 2, 2, -464, 214, -285, 2, -282, -508,
	4, -520, -524, -521, -525, 28, 31, 32, 33, 35,
	37, 38, 39, 40, 57, 65, 66, 72, 76, 78,
	87, 93, 102, 110, 111, 113, 112, 114, 115, 116,
	126, 130, 134, 138, 139, 143, 146, 150, 167, 169,
	182, 185, 186, 202, 205, 208, 221, 235, 240, 242,
	262, 266, 273, 281, 282, 328, 333, 339, 343, 344,
	348, 349, 368, 384, 400, 421, 446, 453, 471, 488,
	494, 504, 510, 512, 519, 527, 528, 536, 538, 546,
	551, 553, 554, 555, 556, -526, 2, -464, 214, 2,
	-288, 214, -464, -291, 2, -269, 2, -281, -508, 2,
	-307, 214, -285, -287, -291, -289, 2, 2, 2, 2,
	-296, 2, -517, 214, 2, 547, 386, 242, 510, 592,
	-356, -299, -300, -504, 8, -349, -255, 589, -428, 2,
	-130, -114, 2, 182, -428, 214, 2, -130, 214, 2,
	-428, 214, 2, -130, 214, 2, -594, 2, -517, 214,
	-255, 2, 293, 2, 2, 517, 2, 98, 494, 119,
	2, 414, -613, 434, 521, 2, 2, 2, 2, 2,
	2, 2, 494, -274, 2, -255, 182, 478, -296, 214,
	-297, 2, 447, -622, 397, -517, 214, 2, 547, -289,
	214, 2, -289, 230, 244, -269, 214, 2, 499, 497,
	499, 497, 186, 2, 242, 2, 242, 2, -465, 2,
	-466, -460, -467, 585, 344, -475, 2, -474, -511, 543,
	-103, 587, -103, 587, 451, 587, -517, -285, -285, -428,
	2, -130, -114, 2, -428, 2, -130, 2, -127, -517,
	-126, 587, 186, -428, 2, -130, -114, 2, -428, 2,
	-130, 2, -207, 182, 2, 120, 494, -182, 2, 182,
	538, 2, 8, 2, 221, -517, 442, 393, 174, 2,
	456, 2, 457, 74, -402, 562, 74, 186, 2, 186,
	2, -385, 2, 556, 186, 2, 2, -577, 2, 343,
	186, 2, 186, 2, 186, 2, 186, 2, 186, 2,
	-181, 452, 515, 493, 390, 250, 2, -130, 553, -114,
	250, 249, -428, 553, 2, -598, 182, 440, -428, 2,
	513, 259, 158, 186, -385, 2, 186, 2, 186, 2,
	5, 2, 391, 476, 2, 248, 385, 476, 2, -285,
	494, 547, 447, 120, 28, 2, 2, 2, 88, 89,
	186, 2, 186, 2, 201, 186, 2, 186, 494, 562,
	2, -377, -464, -414, -415, -414, 510, -343, -345, -182,
	456, 2, -219, -375, -221, 182, -405, -406, -222, 273,
	169, 339, -223, -384, 28, 138, -384, -384, 60, 588,
	588, 11, 12, 76, 41, 578, 579, 580, 581, 180,
	582, 583, 576, 577, 575, 568, 569, 573, 254, 255,
	95, 572, 570, 86, 287, 433, 170, 171, 172, 173,
	411, 228, 34, 229, 14, 15, 16, -310, 33, 348,
	272, 563, 218, 460, 571, 17, 18, 19, 245, 247,
	330, 50, 221, -263, 359, -309, 491, 67, -428, -428,
	-428, -428, -428, -428, -428, -428, 355, 587, -371, -423,
	585, -214, 587, 587, 587, 587, -504, -214, -428, -442,
	588, -363, 587, -214, -442, -437, 587, 431, 585, 587,
	-445, -428, 5, 5, 5, 587, 589, -558, 557, 182,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 381, -486, 587, -485, 587,
	-485, -485, 548, -483, 587, 565, 558, 587, -483, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 587,
	587, 587, 548, 592, -555, -340, 587, -367, -469, -428,
	580, -367, -367, 343, -360, -428, 106, -388, 251, 312,
	187, 269, 425, 236, -425, 591, -425, -453, 565, -214,
	-461, -284, -214, -463, 587, -459, -453, -104, -504, -87,
	-100, -109, -130, -143, -186, -187, 580, -285, 587, 186,
	587, 589, -508, 186, -349, -269, -285, -301, -302, -307,
	2, 137, -360, -573, 522, 441, 28, 447, -349, -258,
	38, -439, -478, -479, -529, 591, -528, -481, -491, -487,
	-490, 371, 375, -510, 54, 544, -493, 241, 4, -520,
	-522, 238, 239, 468, 51, 395, 177, 125, 124, 336,
	56, 506, 507, 508, 509, 191, 192, 58, 545, 480,
	69, 70, -573, 522, 441, 28, 447, -349, 182, -515,
	2, -514, -513, 116, 453, -511, 5, 2, 153, 2,
	2, 2, -255, -234, 592, 64, 419, 153, -358, 214,
	-234, 153, -234, 153, -308, 214, -307, -234, 153, -234,
	592, 153, -234, 592, 153, 589, 592, 153, -515, 2,
	-401, -507, -360, 38, -415, 2, 126, -513, -625, 592,
	271, -313, 286, 327, 210, 344, 560, 337, 130, -516,
	5, 4, -438, -450, 126, 279, 241, -498, -500, 8,
	-499, 9, -501, 578, 579, -506, -505, 109, 589, -508,
	-231, 412, 454, 358, -230, 24, 29, 142, 232, 315,
	541, 159, -326, 233, -323, 362, 153, 472, 531, -587,
	-588, 438, 501, 502, 90, 337, 454, 358, 412, 153,
	-381, -383, 38, 118, 315, 357, 61, 225, 291, 292,
	474, 550, 153, 454, 358, 412, 358, 24, 142, -246,
	-243, 454, -588, 99, 412, 486, 384, -588, -233, 472,
	531, -587, -588, 438, 412, -232, -328, -323, 362, 153,
	591, 24, 142, 412, 454, 358, -609, -610, 29, 412,
	358, -581, -552, 556, 153, -464, 214, -602, 2, 182,
	-595, -126, 263, 5, 10, -517, -126, -356, 592, 592,
	-508, 580, 440, 439, 153, 153, 153, 153, 182, 328,
	2, 2, 2, 2, 2, 188, -590, -614, 2, 2,
	-285, 214, -342, 343, -576, -357, 494, -285, 182, 328,
	43, -288, 214, 2, -291, 547, -581, 328, -290, 214,
	-285, 38, 587, 328, 2, -401, 2, 230, -552, 328,
	-465, -304, -285, -460, -304, 454, -278, 38, -425, -285,
	588, 592, -475, -475, -517, -195, 556, 186, 102, 587,
	587, -207, -472, 592, -471, 221, -518, -127, -517, 415,
	-517, -576, -269, 2, -285, 2, 494, 252, -517, -195,
	221, -517, -517, -517, -507, 28, 457, 2, -181, 452,
	515, 89, 457, 2, -285, 494, 120, 230, 80, -255,
	-579, 182, -574, 426, 441, 522, -573, -285, 120, -285,
	120, -285, 120, -285, -285, 2, 2, 2, 2, 2,
	85, 2, -130, -428, 2, 85, 2, 46, -598, 182,
	2, 513, 2, 513, 2, -255, -255, -255, 475, 271,
	-285, -285, -285, -286, -291, 495, -616, 2, 186, 182,
	2, 494, 230, 494, 230, 120, 186, 74, 120, 28,
	494, 437, -234, 592, -259, -219, -375, -507, -376, -375,
	-220, -219, -222, 182, 394, 532, 315, 458, 256, -406,
	-405, 28, -428, -410, 176, 314, -428, -408, -430, 578,
	579, -499, -501, -359, 337, -213, -213, -213, -346, -455,
	-428, 384, 230, -480, -478, -478, -283, -508, 506, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, -428, -428, -428, -428, -428,
	-428, -428, -428, -428, -428, 272, 218, 460, 50, 221,
	-428, 510, -428, -428, -428, -428, 309, 328, 333, 519,
	167, 529, 138, 337, -628, 488, 40, -435, -214, -364,
	587, -449, 35, 471, 28, -442, 587, 2, -423, -428,
	-424, -311, -309, -255, 578, 579, 580, 581, 582, 583,
	568, 569, 570, 14, 15, 16, 573, 577, 575, 576,
	180, 95, 572, 287, 433, 86, 170, 171, 172, 173,
	254, 255, 17, 18, 19, 34, 571, -361, -360, -360,
	588, 546, 28, 138, 580, 2, 588, 592, 38, 588,
	-428, -361, -441, -437, -360, -448, -447, 553, -396, -397,
	561, 296, 123, 212, 294, -398, 445, -502, 8, -508,
	580, -559, 175, 205, 587, 588, 2, 588, 2, 588,
	-428, 2, 588, -428, 2, 588, -428, 2, 588, -428,
	2, 588, 2, -428, -428, -428, -428, -428, -428, -428,
	-360, 8, -502, -502, 506, 506, -502, -502, -502, -494,
	371, 372, 373, 374, 274, 275, 276, 277, 375, 376,
	377, 378, 301, 302, 303, 304, 297, 298, 299, 300,
	305, 306, 307, 308, 196, 197, 198, 199, 192, 193,
	194, 195, -494, -390, 2, -496, -360, 4, 561, 296,
	123, 212, 294, 445, 5, -390, 2, -391, 2, -428,
	-360, -392, -429, -430, 578, 579, 571, -310, -442, -393,
	2, -428, -361, -428, 57, 266, 512, -394, -428, 186,
	-360, -360, 2, -360, 2, -556, 38, -360, -352, 592,
	186, 38, 4, -352, -352, 587, 588, 592, -389, 209,
	290, 285, 244, -389, -459, -388, 251, -386, 353, -386,
	-386, -453, -270, 585, 593, -508, -453, -452, -451, 38,
	-278, 350, -453, -453, 589, 588, -452, 586, -571, 587,
	590, 590, 590, 590, 590, -285, 587, -360, -508, 589,
	477, 2, 588, 245, 245, 245, 245, 432, 588, 510,
	-575, -294, -298, 495, 2, 556, -102, 345, 588, 592,
	-351, 37, 585, 589, -502, 2, 2, -497, 548, 587,
	587, -397, 587, 186, -575, -298, 495, 2, -350, 592,
	510, -255, 2, -285, -358, -234, 153, -358, -358, -234,
	592, 153, -269, -289, -294, -296, -298, -255, -517, -518,
	-234, -290, -606, 588, 514, -416, -312, 394, 470, 413,
	449, 490, 8, 9, 8, 9, 592, -508, 592, -607,
	93, 510, 78, 441, -248, 280, 510, -419, 214, 78,
	-530, -272, 93, -531, -255, 72, 528, 384, 185, 151,
	-607, 93, 384, -607, 93, 2, 232, 93, 454, 475,
	28, 60, -464, 41, 41, 28, -605, 326, 267, 552,
	186, 562, 494, 230, 441, 510, 510, -464, -383, -478,
	118, 291, 292, 60, -503, -498, 578, 579, -503, 60,
	-503, -503, -503, 556, -288, -464, 441, 510, 510, 510,
	403, 403, -243, 510, 510, -626, 570, 403, 592, 41,
	41, 28, -605, 326, 267, 186, 510, -307, -270, 542,
	42, 542, 42, 542, 510, 42, 441, 510, 592, 42,
	510, 510, -582, -260, 105, 321, 284, 322, 97, 318,
	96, 317, 103, 319, 104, 320, 549, 331, 63, 316,
	295, 323, -261, -262, 364, 540, -517, 454, 358, 412,
	153, -603, 221, -592, 221, -472, 221, -472, -299, -255,
	589, -130, -428, -428, -130, -428, -130, 46, 153, 2,
	-622, 260, 587, -316, 328, 186, -349, -473, 242, 592,
	-357, -573, 153, -514, -382, -381, 328, -290, 214, 2,
	153, -340, 328, 147, 587, 392, 2, 153, -271, 214,
	-256, -255, -401, -237, 498, 153, -379, 538, -411, -130,
	587, 126, 38, -411, -368, -369, -470, -370, -272, 587,
	-278, -425, -103, -474, 588, 588, 588, -194, 347, -193,
	-255, 5, -207, 538, -315, -420, -419, -534, -535, -530,
	272, 230, 528, 244, 168, -341, -273, -272, 119, -201,
	556, -126, -127, 588, -472, 221, 478, -195, -195, -472,
	-472, -285, 182, -517, -195, -195, -195, 2, 2, 2,
	2, -385, -285, -269, -307, -285, 589, -349, -349, -298,
	-294, -385, -269, -385, -269, -385, -269, -130, -428, 2,
	451, 182, 182, 589, -385, 392, 120, 494, 362, 230,
	-285, -307, -285, -307, -269, 120, -269, 121, -285, -464,
	-376, -220, 344, 256, 458, -408, -409, -430, 431, 432,
	-409, 431, 432, 8, 9, 8, 9, -224, 462, 332,
	-358, 592, -228, 39, 134, 256, -285, 562, 149, -428,
	-428, 510, -628, 488, -435, 149, -428, 309, 333, 519,
	167, 529, 138, 337, 186, 587, -429, -429, 588, -362,
	-428, -428, 586, 595, 588, 589, 588, -345, 592, -343,
	-428, -360, -360, 588, 589, -360, -349, 586, 586, 592,
	588, -446, -447, 143, -428, 510, 510, 510, 510, 587,
	588, 589, -564, 354, 587, 587, -428, 588, 588, 588,
	588, 38, 592, 592, 592, 588, 592, 592, 592, 588,
	588, 588, 592, 588, 562, 562, 588, 588, 588, 588,
	592, 588, 592, 588, 186, 588, 588, -399, 368, 588,
	11, 12, 578, 579, 580, 581, 180, 582, 583, 576,
	577, 575, 568, 569, 570, 86, 287, 433, 14, 15,
	16, -310, 245, 221, -429, -429, -429, -429, 588, -433,
	-434, 186, 182, 38, -394, -394, -394, 588, 186, -360,
	588, 588, 587, -557, 289, 328, 588, -422, -421, 554,
	-469, -353, 2, -459, -280, -508, -422, -422, -360, -428,
	251, 251, -387, 538, 343, -389, -459, -452, -504, -427,
	-426, 184, 39, 134, 324, 217, -452, -278, -340, -452,
	-452, -508, -453, -453, -451, 588, -572, -504, 588, -354,
	-462, -551, -345, 589, -508, -204, -552, -183, 5, 333,
	-183, -183, -183, -349, 510, 510, 221, 25, 369, -478,
	585, 586, 8, -508, 587, -502, -502, -502, -349, 186,
	186, 221, 186, -514, -514, 2, -234, -358, -234, -234,
	-307, -308, -234, -234, -234, -380, 556, -505, -415, 526,
	83, 394, 506, -505, -230, 412, -272, -272, -285, -295,
	-255, 200, 404, -514, 328, -419, 214, -236, 328, -478,
	-279, -255, 587, -403, 558, 256, 256, 538, -272, -279,
	256, 214, -272, 214, -279, 2, -279, -583, 394, 338,
	-428, 60, -324, 278, 392, 329, -231, 412, 454, 358,
	-130, -130, -130, -130, -130, 587, -606, 538, 137, -285,
	-307, -285, -295, -514, -290, 454, 358, 412, 325, -301,
	-503, -503, -381, 454, 358, 412, -295, -514, -288, -514,
	-242, 214, -255, -242, 214, 441, -269, 403, 562, 45,
	-626, -232, -130, -130, -130, -130, -130, 587, -270, -233,
	412, 5, 214, -272, 5, -272, 214, 5, -255, -272,
	-295, -514, -610, 24, 142, -272, -295, -514, -260, -517,
	333, 534, -581, 441, 510, 510, -464, -599, -600, 202,
	424, 441, -349, -126, -198, 556, -126, -192, 226, 580,
	-578, -255, 547, -255, -314, -317, -315, -272, -210, -211,
	558, 556, 153, -305, -285, 585, -195, -517, -285, -473,
	-296, -297, 153, -340, 328, -517, 38, 153, 587, 2,
	2, -289, 343, 328, -271, 214, -238, 144, -626, -269,
	-422, -353, -378, -413, 421, 343, -341, 543, -278, -378,
	-355, 592, 186, 570, 589, -341, -468, 580, -103, -103,
	-195, 592, 587, 570, 570, 587, -517, -517, 588, 592,
	-236, -285, -271, 230, 230, -277, -256, 588, 592, 589,
	587, -203, 347, -202, 145, 258, 243, 464, 465, 466,
	467, 136, 463, -472, -201, -127, 186, 186, -62, 556,
	494, -195, 591, -255, -385, -385, -385, 451, 451, -255,
	-281, -269, -285, -282, -307, 182, 182, -269, 532, -409,
	344, 283, -455, -229, 564, -285, 591, -428, -428, 149,
	149, -428, -429, -429, -428, 149, 186, 587, -428, -439,
	33, 33, 588, 592, -424, -428, -309, 588, 546, -345,
	-345, 588, 580, -508, 591, 588, -437, 146, -428, 504,
	296, 212, 294, -398, 294, -398, -398, -502, 5, -508,
	580, -565, -275, 587, -255, 554, -344, 349, 588, -480,
	-478, -428, -428, -428, -428, -428, -502, -483, -483, -498,
	-498, -428, -433, -428, -480, -478, -429, -429, -429, -429,
	-429, -429, -429, -429, -429, -429, -429, -429, -429, -429,
	-429, -429, -429, -429, -429, -429, 138, 328, 337, -429,
	-434, -433, -428, -428, -478, 588, 588, 588, -360, -102,
	587, 289, -372, 205, -428, -472, 592, -372, -372, 588,
	-459, -459, 587, -428, 251, 586, 592, 594, 570, -340,
	589, -451, -452, 586, 588, 592, 588, 592, -412, 38,
	588, -508, -422, -206, -205, 135, 53, 107, 133, 333,
	-349, -349, 441, 346, 5, 8, 585, 586, 589, -502,
	588, 588, 588, -349, -349, 441, -349, -234, -234, 119,
	315, -428, 510, 510, 60, 221, 153, 328, 540, -536,
	-531, 151, -428, 587, 230, 587, 587, 2, -226, -227,
	142, 454, 24, -608, 2, 538, 153, -234, 153, -234,
	560, -324, 587, 587, 510, 441, -248, 510, 556, -360,
	-428, -196, 126, -507, -588, 591, -588, 591, 441, 510,
	510, 441, 510, 510, 328, 153, 556, 166, 166, 562,
	-242, 556, -360, 510, -482, 48, 26, 328, -289, -234,
	153, 510, 510, 522, 454, -517, 333, -295, -514, -290,
	454, 358, 412, -580, -350, -580, 202, -298, -472, -200,
	347, -199, 145, 423, 136, 258, 223, -472, -198, 186,
	242, 556, -290, 2, 588, 588, 592, -537, 38, 341,
	341, 587, -285, -83, 556, -471, -504, -584, 556, 43,
	-288, 38, 153, -581, -130, -290, -476, -477, 5, 38,
	-285, 153, 343, 328, -239, 265, -626, -512, -552, -345,
	-378, -367, 329, 91, 588, -422, -369, -353, -428, 2,
	588, -193, -194, -517, -517, -517, -195, -207, -207, -420,
	-318, 587, -271, -256, 587, -207, -273, 2, -518, 592,
	587, 570, 570, 570, -201, -472, -126, -130, 347, -285,
	580, -385, -330, -329, 362, 337, -330, 431, 431, 344,
	176, 261, -228, -270, -428, -428, 149, 33, 33, -428,
	-428, -439, 588, -428, -428, -360, 586, 5, -428, 588,
	588, 8, -428, 588, 589, -566, -255, -428, 588, 60,
	588, 588, 592, 592, 588, 588, 588, 588, 588, 588,
	588, -434, 186, 138, 337, 587, 588, 588, -102, -436,
	208, 60, -459, -436, -436, -387, -349, -459, -426, -270,
	585, -508, -504, -462, 587, 589, -205, 570, -517, -517,
	556, -298, 586, 2, 585, -508, 588, -298, 119, -272,
	-272, 494, 431, -242, 384, -419, 153, -538, 93, -540,
	76, 168, 102, 328, 333, 528, 384, 72, 126, 400,
	-618, 38, 567, 588, -347, -456, -551, 587, -255, -347,
	-349, 328, 483, 126, 328, 126, 551, 119, 2, 522,
	79, -272, -279, -349, -349, -285, -295, -514, 160, 588,
	592, 570, 2, 580, 580, -295, -514, -290, -295, -514,
	-288, 153, -242, 360, 166, 160, 588, -270, 5, 5,
	153, -267, 76, -272, 5, -272, -289, 119, 441, 510,
	510, 343, 343, 346, -198, 592, 587, 570, 570, -198,
	-518, -126, 2, -340, -331, 232, -272, -535, -532, -533,
	384, -539, -541, 168, 384, -130, 2, -209, -208, -255,
	5, 587, -316, 347, 586, -586, 347, -585, 117, 136,
	-514, -382, -130, -290, -340, 588, 592, 147, -404, 538,
	-270, -285, 153, -240, 264, -626, -512, -237, -407, -405,
	139, 587, 343, -130, -345, 570, 588, 588, 119, 119,
	224, 152, -347, 587, 587, -349, 119, 588, -202, -203,
	-517, -126, -517, -201, -472, -63, -64, 230, 93, 367,
	-282, 494, 230, 587, 587, -228, -428, -428, -428, 588,
	-345, -508, 580, -560, 362, 588, -455, -428, -428, -429,
	186, 587, -439, 588, -561, 555, -428, -373, -374, -428,
	429, 108, 206, -561, -561, 588, -504, 2, -517, 2,
	510, 585, 2, 186, 221, 38, 403, -419, -279, -283,
	-276, -255, 168, 214, 333, 551, -403, 256, 587, -429,
	-285, 587, 2, 30, -619, 130, 235, 588, 592, -457,
	-266, -255, -428, -457, 588, 588, 333, 333, 551, -428,
	-478, 587, -234, -234, 588, 588, -428, 510, -507, 100,
	-505, 2, -588, -242, -269, -428, 510, 5, -234, -283,
	-234, -234, -267, 522, -295, -514, -290, -604, 495, 448,
	523, 442, 189, 430, -604, 182, -199, -200, -517, -126,
	-198, 38, -321, 234, 2, -537, 256, -276, 256, -617,
	556, 588, 592, 570, 570, -314, -210, -84, -85, 511,
	-471, 592, 587, 570, -340, 38, 5, 587, 587, -255,
	343, 587, -270, -250, 92, -626, -512, -238, -378, 329,
	-349, 93, -407, -435, -195, 587, 587, -319, 81, 94,
	127, 213, 190, 231, 475, 481, 28, -319, 588, -347,
	-347, 588, 587, -195, 588, 592, 28, 587, 28, 587,
	-285, -307, -360, -360, 588, -345, 60, 592, 588, 588,
	-429, -439, 588, -562, -563, -275, 592, 587, 587, 455,
	586, -349, 2, -349, -242, 384, -255, -540, -276, 328,
	538, -428, -257, 587, -428, 38, 235, 131, 219, -418,
	-620, 101, 484, 222, -456, -228, 588, -417, 538, 400,
	-267, -347, 587, 587, 587, 570, 186, 587, -482, -234,
	-289, 510, 2, 2, 186, -580, 588, -593, 398, -130,
	-325, -326, 221, 587, -320, 343, 119, 315, -208, -505,
	-505, 588, 38, -85, 9, -585, -586, -428, 38, -130,
	-476, -347, -285, -347, 343, -244, -243, 273, -512, -239,
	588, -279, -378, -518, -518, -417, 588, 588, -518, -64,
	-349, -349, 588, 588, -567, 392, 432, 207, -360, -346,
	588, 592, 38, -374, 2, 2, 2, 403, 153, 209,
	588, -542, 288, -255, 588, 131, 219, -321, 587, -229,
	-457, -321, 209, -285, -589, 538, 588, -333, -332, -329,
	-335, -334, -329, -360, -505, 100, 360, -360, -267, -349,
	-349, 343, -596, 187, -595, 5, 10, -210, 360, -348,
	-458, -272, 82, 119, -331, -130, 588, -130, 588, 588,
	-404, 588, -285, -241, -519, 403, 405, -626, -240, -422,
	588, 588, -418, -417, -327, -323, 588, 588, 588, 588,
	-568, -569, 50, 525, 109, -428, -568, -568, -563, -565,
	168, 556, -543, -546, -545, 343, 461, 187, 361, 588,
	483, 550, -327, -349, 556, -340, -428, -417, 588, 592,
	543, 588, 592, 543, 588, 186, 588, -234, -601, 556,
	-234, -604, -197, 556, 46, -320, -285, 588, 592, 383,
	132, 142, -321, -617, -417, 587, -418, 587, -247, -246,
	-626, -498, -250, 139, -195, -195, -321, -418, -211, 556,
	-195, -570, 151, -569, 380, 181, 431, 380, 181, -570,
	-570, -276, 55, -545, 343, -546, 343, 532, 132, -619,
	588, 55, -542, -321, -332, 221, -334, 186, 360, 202,
	186, 439, -595, 30, -249, -248, 587, -458, 432, 432,
	2, -325, -320, -418, -347, -321, -347, -245, -349, -244,
	329, 532, -327, -321, -422, 109, 205, 505, 315, 33,
	570, -544, 315, 419, 64, 454, -544, -422, 570, -543,
	587, 587, 346, -349, 347, -349, 2, -210, -321, 588,
	-327, 588, -241, 454, -211, -327, 431, 351, -569, -428,
	23, 333, 126, -428, -619, -360, -360, -234, -194, 587,
	588, -320, -327, -417, -211, -418, -247, -368, -422, -211,
	588, 588, -194, -235, 64, 419, -249, -211, -418, -422,
	-321, -422, -422, -322, -323, 510, 588, -422, -321, -327,
	587, -327, -211, -360, -211, -422, 588, -422, -322,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 543, 544, 546, 547, 548, 550,
	551, 553, 555, 557, 558, 559, 561, 562, 564, 565,
	566, 567, 568, 570, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	639, 641, 0, 1357, 1359, 1361, 1363, 0, 784, 0,
	36, 37, 39, 0, -2, 328, 330, 332, 0, 359,
	361, 362, 364, 366, 367, 368, 370, -2, 0, 476,
	477, 479, 481, -2, 0, 980, 982, 0, 628, 630,
	0, 985, 987, 0, 0, 650, 651, 0, 1464, -2,
	644, 646, 648, 713, 715, 717, 719, 721, 723, 725,
	727, 729, 730, 732, 734, 736, 738, 740, 741, 743,
	745, 747, 748, 750, 751, 753, 755, 757, 759, 761,
	763, 765, 767, 769, 771, 773, 775, 777, -2, 780,
	781, -2, -2, 0, -2, -2, -2, 1375, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 59, 420, 422,
	424, 426, 428, 431, 433, 435, 1522, 483, 485, 487,
	489, 491, 493, 495, 0, -2, 1536, 0, 0, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	105, 106, 107, 108, 109, 110, 111, 112, 75, 76,
	77, 79, 80, 81, 82, 86, 87, 88, 89, 90,
	91, 92, 93, 103, 73, 0, 0, 1495, 1497, 1499,
	1501, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 545, 549, 552, 554,
	556, 560, 563, 569, 571, 573, 528, 529, 532, 2227,
	2245, 2246, 2247, 2250, 2251, 2252, 2253, 2254, 2255, 2700,
	2782, 2783, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304,
	2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314,
	2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324,
	2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334,
	2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344,
	2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384,
	2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414,
	2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424,
	2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434,
	2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444,
	2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454,
	2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464,
	2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474,
	2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484,
	2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494,
	2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504,
	2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514,
	2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524,
	2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534,
	2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544,
	2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554,
	2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564,
	2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574,
	2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584,
	2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594,
	2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604,
	2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614,
	2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624,
	2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634,
	2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644,
	2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654,
	2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664,
	2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674,
	2675, 2676, 2677, 2678, 2679, 530, 531, 1157, 0, 597,
	595, 2212, 598, 2500, 600, 602, 470, 471, 472, 473,
	474, 475, 0, 621, 611, 1534, 622, 624, 625, 626,
	627, 592, 590, 0, 621, 2281, 619, 1355, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	399, 1206, 1207, 1208, 1340, 1341, 2545, 1382, 0, 229,
	640, -2, -2, -2, 2665, -2, 672, -2, 679, 2669,
	2548, 684, 0, 686, -2, 689, 1358, 1360, 1362, 782,
	783, 2231, 0, 0, 0, 0, 0, 38, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 239, -2, -2, -2,
	-2, 0, 0, 2593, 2333, 2180, 2247, 2183, 2178, 329,
	331, 333, 334, 0, 0, 0, 0, 0, 0, 360,
	363, 365, 369, -2, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 1041, 1033, 1034,
	1264, 0, 0, 0, -2, 478, 480, 533, 534, 0,
	1523, 1523, 541, 542, -2, 0, 0, 0, 0, 299,
	287, 981, 983, 984, 0, 0, 0, 0, 629, 631,
	0, 0, 268, 986, 988, 989, 0, 0, 0, 0,
	0, 301, 0, 0, 645, 647, 649, 714, 716, 718,
	720, 722, 724, 726, 728, 731, 733, 735, 737, 739,
	742, 744, 746, 749, 752, 754, 756, 758, 760, 762,
	764, 766, 768, 770, 772, 774, 776, 778, 779, 790,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 883, 0, 0, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, -2, 961, 0, 0, 793, 795, 796, 797,
	0, 856, 881, 882, 891, 0, 1197, 1524, 1384, 1365,
	1379, 1384, 1367, 1368, 1369, 1370, 1371, 1376, 1378, 1372,
	1373, 1374, 42, 44, 46, 48, 50, 52, 54, 56,
	58, 60, 421, 423, 425, 427, 429, 432, 434, 436,
	-2, 1493, 1494, 484, 486, 488, 490, 492, 494, 496,
	632, 0, 634, 0, 794, -2, 0, 1528, 1528, 1528,
	0, 0, 1494, 1492, 0, 637, 638, 693, 694, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 2054, 1884,
	0, 695, -2, 1917, 1919, 2640, 2474, 2665, 2053, 1921,
	1922, 1923, 1924, 1925, 0, 1927, 1928, 1929, 1930, 1931,
	1932, 0, 1934, 0, 1939, 1940, 1941, 0, 2647, 2157,
	2241, -2, 0, 0, 2653, 2237, 0, 2020, 1957, -2,
	-2, 2264, 2243, 1728, 1729, 1730, 1731, 1732, -2, -2,
	2683, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 0, 2628, 2648, 2649, 2654, 2656, 2650, 2637,
	1982, 2346, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1755, 1764, -2, -2, -2,
	-2, -2, -2, -2, 2641, 2642, 2659, 2662, 2668, 2673,
	2674, 2646, 2655, 2682, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	1756, -2, -2, -2, -2, 1511, 2513, 1514, 1157, 1512,
	1496, 1498, 0, 1500, 0, 0, 0, 1505, 1531, 1529,
	0, 1580, 1509, 1510, 1598, 1598, 1622, 0, 1603, 0,
	1622, 1523, 1649, 0, 1609, 2537, 1958, 1959, 0, 2247,
	2242, -2, -2, 2680, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 0, 599, 601, 0, 0, 0, 620,
	1533, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	404, 405, 406, 2648, 0, 0, 0, 411, 0, 413,
	414, 415, 416, 417, 418, 419, 198, 2648, 501, 526,
	0, 198, 2648, 504, 198, 2648, 507, 0, 510, 1262,
	198, 2648, 513, 2208, 198, 2648, 516, 518, 2216, 198,
	2648, 522, 2223, 2221, 523, 2648, 525, 304, 302, 303,
	2260, 2261, 2268, 2269, 2270, 2271, 2681, 2683, 1351, 1352,
	1353, 1354, 0, 1381, 1263, 642, 643, 0, 667, 0,
	671, 2636, -2, 0, 2557, -2, 675, 1385, 1389, 1390,
	1391, 1392, 1393, 0, 0, 0, 0, 1398, 0, 0,
	681, 0, 0, 668, 669, 687, 690, 0, 785, 786,
	787, 788, 789, 72, 0, 2648, 1649, 74, 0, 2202,
	2272, 2273, 2274, 2275, 2276, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725,
	2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745,
	2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755,
	2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765,
	2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775,
	2776, 2777, 2778, 2779, 2780, 2781, 78, 0, 2648, 83,
	0, 2648, 0, -2, 94, 0, 104, 0, 2205, 113,
	0, 2648, 0, 2177, -2, 0, 210, 288, 289, 290,
	0, 1008, -2, 2648, 1205, 0, -2, 0, 0, 0,
	971, 2174, 2179, 972, 2198, 973, 2184, 0, 335, 336,
	337, 338, 339, 0, 340, 2648, 342, 343, 0, 345,
	346, 2648, 348, 349, 0, 351, 0, 251, 252, 2648,
	373, 375, 0, 377, 378, 0, 380, 0, 0, 0,
	384, -2, 400, 0, 397, 387, 388, 390, 391, 392,
	393, 394, 0, 440, 438, 2213, 0, 0, -2, 2648,
	0, 1005, 0, 0, 1242, -2, 2648, 1202, 0, 1249,
	2648, 1245, 0, -2, 0, 1521, 2648, 1402, 1037, 1038,
	1039, 1040, 1661, 467, 0, 1429, 0, 1431, 0, 1450,
	1655, 1598, 0, 0, 1660, 0, -2, 586, 2230, -2,
	536, 0, 537, 0, -2, 0, 316, 0, 0, 990,
	991, 992, 993, 994, 997, 998, 999, 1000, 1635, 269,
	271, 0, 0, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 0, 0, 652, 0, 0, 791, 792, 0,
	0, 802, 803, 804, 0, 316, 2549, 2509, 2367, 811,
	0, 814, 817, -2, 0, 0, 0, 0, 821, 0,
	826, 827, 828, 0, 0, 832, 834, 979, 836, 0,
	0, 838, 0, 842, 0, 845, 0, 847, 0, 849,
	-2, -2, -2, 857, 858, -2, 863, -2, 0, 867,
	-2, 0, 870, 0, 873, -2, 0, 883, 879, 880,
	0, 0, 0, 0, 899, 900, 0, 909, 0, 912,
	913, 914, 0, 916, 917, 0, 919, 920, 921, 922,
	0, 2620, 2554, 2333, 0, 928, 930, 932, 0, -2,
	0, 948, 0, 952, 0, 0, 960, 0, 0, 798,
	799, 198, 1653, 1364, -2, 1366, 0, -2, 0, 633,
	0, 636, 1553, 1479, 1476, 0, 1550, 1551, 1480, 0,
	0, 0, 1487, 0, 1526, 1527, 0, 0, 0, 1466,
	1467, 0, 0, 0, 0, 2059, 2060, 2061, 2062, 2075,
	2063, 2064, 2074, 2072, 2073, 2065, 2066, 2071, 2085, 2086,
	2076, 2077, 2067, 2080, 2078, 2079, 2081, 2082, 2083, 2084,
	0, 0, 2090, 0, 2068, 2069, 2070, 2098, 0, 0,
	2099, 0, 2101, 0, 2091, 2087, 2088, 2089, 0, 1863,
	1865, 2165, 0, 0, 0, 2097, 2092, 2093, 1801, 1802,
	1803, 1804, 1805, 1838, 1842, 1843, 0, 0, 1918, 2162,
	2161, 1920, 0, 0, 2113, 0, 1933, -2, 0, 2054,
	2108, 0, 0, 1942, 1943, 1944, 0, 0, 2113, 0,
	0, 2156, 1954, 1955, 1793, 0, 0, 2022, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 1741, 0, 1743, 0,
	1744, 1745, 1752, 1765, 0, 0, 0, 0, 1769, 0,
	0, 0, 0, 0, 0, 0, 2137, -2, 0, 0,
	0, 0, 1757, 0, 1513, 0, 0, 1584, 2166, 2170,
	2171, 1584, 1584, 0, 0, 2114, 1646, 1646, 0, 0,
	1641, 1641, 1641, 1639, 1622, 0, 1622, 1632, 0, 1622,
	1622, 0, -2, 1603, 0, 0, 1632, 0, 1616, 574,
	576, 578, 580, 581, 582, 584, 1650, 1651, 0, 0,
	0, 0, 2248, 0, 0, 0, 0, 0, 2233, 0,
	356, 0, 0, 0, 2603, 2548, 0, -2, 604, 623,
	1523, 0, 2116, 1676, 1680, 0, 1682, 1683, 1684, 1685,
	1686, 0, 0, 1677, -2, 1753, 1755, 1776, 2265, 2266,
	2267, 1736, 1737, 1738, 1739, 1740, 1748, 1735, 1735, 1735,
	1746, 1775, 1767, 1775, 1771, 1721, 1722, 1723, 1758, 1759,
	1760, 1761, 0, 2603, 2548, 0, -2, 613, 0, 0,
	1461, 214, 216, 217, 218, 219, 220, 401, 0, 408,
	409, 410, 0, 497, 0, 196, 197, 0, 198, 2648,
	502, 0, 505, 0, 198, 2648, 2172, 511, 0, 514,
	0, 0, 520, 0, 0, 0, 0, 0, 198, 1463,
	0, 0, 0, 0, -2, 677, 682, 683, 0, 1387,
	0, 1394, 704, 705, 706, 1396, 1397, 0, 1399, 680,
	707, 708, 709, 710, 711, 712, 0, 2186, 2187, 2188,
	2189, 2192, 2193, 0, 0, 678, 697, 685, 0, 691,
	114, 1337, 0, 0, 157, 0, 1337, 1337, 0, 0,
	0, 0, 183, 0, 1076, 0, 0, 0, 0, 129,
	142, 153, 126, 127, 0, 0, 0, 0, 0, 0,
	84, 1179, 0, 1182, 0, 0, 0, 0, 0, 0,
	0, 1195, 0, 0, 0, 0, 0, 0, 0, 100,
	101, 0, 141, 0, 0, 1426, 0, 136, 116, 0,
	0, 129, 143, 155, 0, 187, 189, 1073, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 221, 0, 0,
	0, 1203, 0, 1520, 0, 0, 2648, 1335, 1320, 0,
	0, 1635, 2416, -2, -2, 269, 1635, 970, 0, 0,
	2248, 2182, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 379, 381, 382, 383, 0, 1241, 0, 389, 430,
	1128, 2648, 0, 0, 457, 452, 0, 454, 0, 0,
	0, 1178, 2648, 1176, 2217, 0, 1200, 0, 1157, 2648,
	2215, 0, 0, 0, 1250, 2257, 1259, 1263, 1416, 0,
	469, 0, 1432, 1434, 0, 0, 1656, 0, 1658, 1598,
	1523, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 0, 275, 0, 1634, 0, 0, 1635, 269, 2524,
	316, 316, 1635, 654, 1635, 656, 0, 0, 805, 806,
	0, 316, 316, 316, 812, 813, 815, 816, -2, -2,
	-2, -2, 818, 819, 906, 0, 0, 0, 905, 831,
	835, 0, 964, 2532, 2548, 2603, 977, 906, 2333, 906,
	2333, 906, 2333, 846, 848, 851, 894, 902, 862, 869,
	0, 864, 868, 871, 874, 0, 876, 884, -2, 0,
	886, 0, 888, 0, 890, 906, 907, 910, 915, 918,
	923, 924, 925, 926, 2228, 927, 0, 939, 944, 945,
	941, 0, 0, 0, 0, 0, 0, 955, 956, 0,
	0, 963, 1196, 0, 1377, 1553, 1479, 635, 1470, 1552,
	1471, 1478, 1481, 0, 0, 1483, 0, 1485, 0, 1548,
	1549, 1556, 1557, 0, 1567, 1568, 1560, 0, -2, 0,
	0, 1563, 1564, 1489, 0, 1506, 1507, 1508, 1537, 1540,
	1278, 0, 2782, 1797, 1671, 1798, 1799, 2201, 0, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, -2,
	-2, -2, -2, -2, -2, -2, -2, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, -2, -2,
	-2, 1839, 1840, 1841, -2, 2100, 2102, 0, 2165, 0,
	-2, 0, -2, -2, -2, -2, 1860, 0, 1862, 1867,
	1869, 1871, 0, 0, 0, 0, 2164, 1881, 2148, 2149,
	0, 0, 2056, 2057, 2058, 1866, 0, 1885, 2163, 2160,
	0, 0, 2094, 0, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 0, 2112, 1536,
	1946, 0, 0, 0, 0, 1953, 1938, 2110, 0, 2109,
	0, 0, 0, 2120, 0, 2155, 2151, 0, 2199, 1792,
	1779, 1780, 1781, 1782, 1783, 1784, 1794, 0, 2196, 2234,
	2240, 2030, 0, 0, 0, 1983, 1984, 1985, 1986, 1987,
	0, 1989, 1990, 0, 1992, 1993, 0, 1995, 1996, 0,
	1998, 1999, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 0, 0, 2002, 0, 2123, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 2004, 0, 2006, 2114,
	2134, 0, 0, 1886, 0, 0, 0, 0, 2054, 0,
	2009, 2114, 2142, 0, 0, 0, 0, 0, 2114, 0,
	2147, 0, 2016, 0, 2018, 1515, 0, 0, 1666, 0,
	0, 0, 2169, 1666, 1666, 0, 1579, 0, 0, 1642,
	1643, 1644, 1645, 0, 0, 1646, 0, 1636, 1640, 1637,
	1638, 1632, 1595, 0, 0, 2203, 1632, 1601, 1631, 0,
	1157, 1621, 1632, 1632, 0, -2, 1605, 1622, 0, 0,
	575, 577, 579, 583, 585, 0, 0, 1536, -2, 0,
	-2, 318, 1156, 0, 0, 0, 0, 594, 596, 0,
	0, 517, 0, 0, 610, 0, 588, 0, 591, 0,
	1667, 1670, 0, 0, 1681, 1687, 1688, 0, -2, 0,
	0, 1777, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 412, 527, 198, 499, 0, 198, 198, 508,
	0, 0, 198, 519, 198, 2224, 198, 2222, 305, 524,
	1462, 232, 0, 670, 0, 1386, 1395, 0, 701, 0,
	703, 0, 2190, 2194, 2191, 2195, 0, 692, 0, 0,
	0, 0, 1336, 0, 1285, 0, 0, 161, 2648, 0,
	200, 0, 0, 1121, 2209, 0, 1113, 0, 0, 2353,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 1180, 1181,
	1183, 1190, 1192, 0, 1186, 2197, 0, 0, 1187, 0,
	1189, 1191, 1193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 1425, 1426, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 2176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1237, 1235, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 307, 2175, 2185,
	0, 995, 996, 341, 344, 347, 350, 238, 0, 385,
	0, 0, 1043, 1018, 0, 0, 439, 316, 0, 0,
	453, 457, 2226, 1003, 1174, 1177, 0, 1157, 2648, 1214,
	0, 0, 0, 0, 0, 0, 1248, 0, 0, 2648,
	2204, 2256, 2257, 1418, 1426, 0, 1666, 0, 1448, 1435,
	0, 0, 0, 1448, 1452, 1453, 1455, 1456, 0, 0,
	1657, 1663, 535, 587, 1523, 1523, 316, 314, 2477, 312,
	309, 311, 0, 0, 0, 1044, 1046, 1047, 1048, 200,
	0, 2257, 1113, 2405, 2257, 0, 1438, 1440, 0, 263,
	0, 272, 1635, 270, 275, 0, 0, 0, 451, 653,
	658, 800, 0, 316, 808, 809, 810, 853, 896, 904,
	943, 820, 822, 823, 824, 0, 0, 978, 974, 975,
	976, 837, 906, 840, 906, 843, 906, 866, 872, 878,
	885, 0, 0, 0, 898, 0, 0, 0, 0, 0,
	0, 0, 949, 950, 951, 953, 958, 957, 962, 1654,
	1474, 1475, 1477, 0, 1486, 0, 0, 1562, -2, -2,
	1561, 1565, 1566, -2, -2, -2, -2, 1482, 0, 1491,
	1488, 0, 1547, 1276, 1277, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1882, 0, -2, 1861, 1864, 1868,
	1870, 1872, 0, 0, 0, 0, 0, 0, 2103, 0,
	2105, 1883, 2158, 2161, 2096, 0, 2052, 0, 0, 1535,
	1536, 1536, 0, 1952, 0, 2111, 0, 2118, 2119, 0,
	1945, 0, 2152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 0, 1988, 1991, 1994,
	1997, 0, 0, 0, 0, 1977, 0, 0, 0, 1981,
	1747, 1733, 0, 1775, 1773, 1774, 1768, 1775, 1772, 1725,
	0, 1724, 0, 2001, 0, 2003, 2005, 0, 0, 2007,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1889, 1890, 1891, 1911, 2008, 2140,
	2141, 0, 0, 0, 0, 0, 0, 2014, 0, 2146,
	2015, 2017, 1523, 0, 1516, 0, 1581, 1570, 1665, 0,
	2167, 1635, 1583, 1585, 2168, 2206, 1570, 1570, 0, 2115,
	0, 0, 1626, 0, 0, 0, 1628, 1599, 0, 0,
	1593, 0, 1589, 1590, 1591, 1592, 1600, 1157, 1630, 1602,
	1606, 2234, 0, 1632, 0, 1617, 0, 1619, 1652, 0,
	1611, 1614, 0, 0, 2249, 1666, 0, 352, 357, 358,
	353, 354, 355, 603, 0, 0, 0, 0, 0, 2117,
	0, 1672, 0, 1678, 0, 0, 0, 0, 612, 0,
	0, 0, 0, 215, 1460, 407, 498, 198, 503, 506,
	2173, 198, 512, 515, 521, 228, 0, 666, -2, 699,
	700, 702, 0, 698, 158, 1337, 0, 0, 1281, 1283,
	2220, 1287, 1293, 1296, 0, 163, 2648, 174, 0, 1092,
	0, 2207, 0, 0, 0, 0, 0, 0, 1339, 0,
	0, 2648, 198, 2648, 198, 177, 179, 182, 0, 186,
	184, 0, 1080, 0, 0, 1083, 115, 1337, 0, 0,
	118, 122, 130, 131, 134, 0, 0, 0, 140, 0,
	0, 0, 1298, 1302, 1310, 0, 0, 0, 1184, 1185,
	1188, 1194, 85, 0, 0, 0, 1306, 1308, 1314, 95,
	96, 2648, 2218, 98, 2648, 0, 1280, 0, 0, 0,
	0, 188, 120, 124, 132, 133, 135, 0, 1316, 117,
	0, 213, 0, 0, 203, 198, 2648, 0, 205, 0,
	206, 207, 222, 0, 0, 0, 1006, 1007, 1236, 1198,
	1199, 0, 1204, 0, 0, 0, 0, 1318, 1319, 0,
	0, 0, 1332, 1635, 234, 0, 1635, 242, 0, 2181,
	0, 372, 0, 0, 0, 0, 1042, 1139, 0, 1013,
	0, 0, 0, 445, 441, 0, 450, 456, 455, 461,
	-2, 0, 0, 0, 0, -2, 0, 0, 1252, 1246,
	1247, 0, 0, 0, 0, 2648, 1420, 1426, 0, 1521,
	1536, 468, 1427, 1448, 0, 0, 0, 1437, 1433, 1430,
	1666, 0, 0, 0, 0, 0, 1659, 1662, 538, 539,
	291, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	1049, 1053, 0, 2257, 2257, 0, 2211, 0, 0, 0,
	0, 273, 0, 276, 0, 0, 0, 281, 282, 283,
	284, 285, 286, 275, 265, 1635, 0, 0, 655, 0,
	0, 807, 0, 830, 839, 841, 844, 887, 889, 906,
	933, 934, 1070, 0, 1070, 0, 0, 954, 1484, 0,
	1559, 1490, 1541, 1542, 0, 1278, 0, 1800, 1845, 0,
	0, -2, 0, 0, 1849, 0, 0, 0, -2, 0,
	0, 0, 2104, 2106, 0, 2160, 2095, 1947, 0, 0,
	0, 1951, 1935, 1936, 0, 2055, 2121, 2150, 2154, 0,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 0, 2200, 2235,
	2239, 2028, 2029, 2033, 2214, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 1766, 1770, 0,
	0, 2122, 2133, 2135, 1887, 1888, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, 1900, 1901, -2, -2, -2, 1905,
	1906, 1907, -2, -2, -2, 1912, 0, 0, 0, 2136,
	2138, 2139, 2143, 2144, 0, 2011, 2012, 2013, 2145, 0,
	1523, 1517, 1578, 0, 1664, 1582, 0, 1578, 1578, 1530,
	1624, 0, 0, 1648, 0, 1596, 0, 1597, 0, 1629,
	0, 1604, 1607, 1608, 1618, 0, 1610, 0, 1613, 0,
	1947, -2, 317, 319, 321, 0, 324, 325, 0, 0,
	606, 607, 0, 605, 589, 0, 0, 1674, 0, 0,
	1750, 1754, 1778, 615, 616, 0, 614, 500, 509, 230,
	0, 1633, 0, 0, 0, 0, 0, 0, 199, 1090,
	1120, 0, 0, 0, 1112, 0, 0, 1126, 165, 166,
	0, 0, 0, 0, 175, 0, 0, 172, 0, 181,
	185, 1077, 0, 0, 0, 0, 1286, 0, 0, 0,
	137, 138, 139, 0, 144, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1410, 1411, 0,
	1405, 0, 0, 0, 201, 0, 0, 0, 1275, 224,
	0, 0, 0, 0, 0, 1239, 1240, 1299, 1303, 1311,
	0, 0, 0, 0, 621, 0, 626, 1334, 242, 240,
	0, 243, 0, 246, 247, 0, 249, 242, 236, 0,
	0, 0, 1157, 386, 1016, 1127, 0, 1129, 0, 1014,
	0, 0, 1128, 437, 0, 444, 0, 458, 0, 0,
	1178, 0, 0, 1201, 1212, 1157, 0, 1251, 1253, 0,
	1261, 0, 0, 0, 1422, 1426, 0, 1415, 1416, 1555,
	1428, 1446, -2, 0, 0, 1536, 1454, 1451, 1457, 1458,
	0, 313, 0, 308, 310, 0, 294, 0, 0, 1045,
	1050, 0, 0, 0, 0, 0, 1439, 1441, 0, 0,
	0, 0, 0, 0, 264, 275, 1635, 300, 0, 801,
	825, 897, 935, 1069, 0, 0, 937, 0, 0, 1558,
	1545, 1546, 1543, 1278, 1847, 1851, 0, 0, 0, 1853,
	-2, 0, 1875, -2, -2, 2107, 2159, 1926, 1536, 1948,
	1950, 1937, 2153, 1795, 0, 2035, 2032, 0, 2019, 0,
	1972, 1973, 0, 0, 1976, 1978, 1979, 1980, 1734, 1727,
	1726, 2132, 0, 0, 0, 0, 2010, 1518, 0, 2024,
	0, 0, 1586, 2024, 2024, 1625, 0, 1627, 1594, 1587,
	0, 2235, 1620, 1612, 0, 0, 322, 0, 326, 327,
	0, 0, 1668, 1673, 0, 1679, 1749, 0, 231, 159,
	160, 1290, 1294, 1291, 0, 162, 0, 1091, 0, 1094,
	0, 0, 0, 0, 1101, 1113, 0, 0, 0, 0,
	0, 1114, 0, 1143, 0, 1266, 1273, 0, -2, 0,
	0, 0, 168, 191, 0, 0, 192, 1338, 170, 0,
	0, 198, 198, 0, 0, 1282, 1284, 1297, 0, 0,
	0, 0, 147, 0, 0, 1300, 1304, 1312, 1307, 1309,
	1315, 0, 99, 0, 1412, 0, 0, 1317, 211, 212,
	0, 198, 0, 198, 204, 198, 1275, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 235,
	306, 242, 374, 0, 1064, 0, 1139, 1131, 1132, 1133,
	0, 1138, 1140, 0, 0, 1030, 1015, 0, 1026, 0,
	0, 1043, 1018, 0, 442, 459, 0, 462, 0, 465,
	1004, 1175, 1209, 1157, 0, 1243, 0, 0, 0, 0,
	0, 0, 0, 1424, 1426, 0, 1417, 1418, 1448, 1554,
	0, 0, 0, 1436, 1555, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 277, 0,
	278, 279, 280, 266, 267, 657, 659, 0, 0, 665,
	1068, 0, 0, 0, 0, 1544, 1855, -2, -2, 1876,
	0, 2236, 2238, 1536, 0, 2021, 1538, 0, 0, -2,
	0, 0, 0, 1519, 1502, 0, 1577, 1569, 1571, 1573,
	2535, 2328, 2647, 1503, 1504, 1647, 0, 1615, 323, 608,
	0, 0, 1675, 0, 0, 0, 1292, 164, 0, 1095,
	1096, 2210, 1098, 0, 1100, 1102, 1103, 1104, 0, 1107,
	2259, 0, 1111, 0, 1122, 1144, 0, 1153, 0, 1268,
	1278, 1272, 0, 1270, 1155, 0, 167, 169, 193, 190,
	1275, 0, 171, 180, 0, 0, 119, 0, 0, 2322,
	150, 148, 146, 97, 1279, 121, 0, 213, 223, 1274,
	225, 208, 198, 0, 1301, 1305, 1313, 0, 1326, 1327,
	1328, 1329, 0, 0, 0, 0, 244, 0, 245, 248,
	0, 0, 1079, 0, 1017, 1130, 0, 1141, 1142, 1020,
	0, 1019, 0, 0, 0, 0, 0, 443, 446, 0,
	449, 0, 0, 0, 0, 0, 1254, 1252, 0, 1260,
	0, 0, 0, 1404, 0, 0, 1419, 1420, 466, 1442,
	0, 0, 1448, 1459, 293, 0, 0, 1051, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1052, 1155, 0,
	0, 1119, 0, 298, 274, 0, 661, 0, 663, 0,
	936, 938, 0, 0, 1949, 2039, 0, 0, 1974, 1975,
	-2, 0, 1915, 2023, 2025, 0, 0, 0, 0, 0,
	1588, 609, 1669, 617, 1288, 0, 1295, 1093, 1097, 0,
	0, 0, 1161, 0, 0, 1115, 0, 1147, 1148, 1064,
	0, 1149, 1150, 1151, 1267, 1547, 1273, 1064, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 202, 226,
	1275, 0, 1330, 1331, 0, 0, 241, 259, 0, 1210,
	1018, 1078, 0, 0, 1028, 0, 1031, 0, 1027, 1024,
	1025, 1016, 0, 447, 448, 463, 0, 464, 0, 1213,
	0, 0, 1261, 0, 0, 1407, 1403, 1426, 1421, 1422,
	1666, 1445, 1449, 0, 0, 1153, 1155, 1075, 0, 660,
	0, 0, 946, 947, 0, 0, 0, 0, 2034, 1539,
	1916, 0, 0, 1572, 1574, 1575, 1576, 1289, 0, 0,
	1106, 1166, 0, 0, 0, 1145, 1146, 1075, 0, 1271,
	1269, 1124, 0, 1157, 173, 0, 1155, 0, 1084, 0,
	0, 1087, 0, 0, 151, 2322, 149, 0, 198, 1323,
	198, 0, 262, 0, 256, 254, 255, 1020, 0, 0,
	1135, 1137, 0, 1032, 1064, 1030, 460, 1211, 1244, 1155,
	0, 1153, 0, 1414, 1426, 1408, 1409, 0, 1424, 0,
	316, 316, 1064, 1153, 1018, 1074, 316, 662, 664, 2031,
	2051, 2040, -2, 2606, 2329, 0, 2051, 2051, 2026, 2027,
	0, 0, 1108, 1162, 1163, 0, 1158, 1159, 1160, 2258,
	1109, 1110, 1143, 0, 0, 1161, 194, 1064, 1081, 0,
	0, 1082, 0, 0, 154, 0, 156, 227, 1321, 0,
	1324, 0, 250, 0, 0, 1012, 0, 1134, 0, 0,
	0, 0, 1079, 1020, 1153, 0, 1064, 0, 1400, 1413,
	0, 1423, 1404, 0, 295, 296, 1075, 1064, 1666, 0,
	297, 2036, 0, 0, 2042, 2043, 2044, 2045, 2046, 2037,
	2038, 1099, 0, 1164, 0, 1165, 0, 0, 0, 1666,
	1152, 0, 1166, 178, 1085, 0, 1088, 0, 152, 0,
	0, 0, 257, 258, 1009, 1011, 0, 1136, 1021, 0,
	1023, 1018, 1029, 1064, 0, 1075, 0, 1406, 2219, 1407,
	1443, 0, 1018, 1075, 1118, 0, 2048, 2049, 0, 0,
	0, 1167, 0, 1170, 1171, 0, 1168, 1123, 0, 1143,
	0, 0, 1322, 198, 0, 0, 1022, 1020, 1075, 1155,
	1018, 1153, 1414, 0, 1666, 1018, 2047, 2050, 2041, 1105,
	1169, 1172, 1173, 1154, 1125, 0, 0, 1325, 260, 0,
	1067, 1012, 1018, 1153, 1666, 1064, 1401, 1666, 1116, 1666,
	1072, 0, 0, 1063, 1065, 1066, 1010, 1666, 1064, 1257,
	1075, 1444, 1117, 1086, 1071, 0, 261, 1255, 1075, 1018,
	0, 1018, 1666, 0, 1666, 1258, 1072, 1256, 1089,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 576, 3, 582, 577, 3,
	587, 588, 580, 578, 592, 579, 589, 581, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 595, 3,
	568, 570, 569, 573, 591, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 585, 3, 586, 583, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 593, 575, 594, 571,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 572, 57911, 574, 57912, 584, 57913, 590, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1442
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1447
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1449
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1452
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1453
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1454
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1455
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1456
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1457
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1458
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1459
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1460
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1461
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1462
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1469
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1551
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1609
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1613
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1643
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1660
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1727
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1759
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1783
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1792
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1813
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1821
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1844
		{
		}
	case 129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1845
		{
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1849
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1858
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1870
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1875
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1882
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1901
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1909
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1914
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1918
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1929
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1937
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1948
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1958
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1968
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1977
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1988
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1994
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2020
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2025
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2111
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2154
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2157
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2163
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2215
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = nil
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = true
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = false
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = nil
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2277
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2281
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2285
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2320
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2388
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2392
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2395
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2419
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2430
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2435
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2442
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2450
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2481
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2565
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2573
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2600
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2717
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = nil
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2734
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = nil
		}
	case 263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2851
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2876
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2880
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2895
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2904
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2920
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2948
		{
			return unimplemented(sqllex, "alter function")
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2993
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3002
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3008
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3013
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3018
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3023
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3028
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3032
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3051
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3059
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = nil
		}
	case 317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3135
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3149
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3169
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3224
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3228
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3258
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3294
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3315
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3331
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3335
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3340
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3354
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3359
		{
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3360
		{
			return helpWith(sqllex, "CREATE")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3373
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3377
		{
			return unimplemented(sqllex, "create access method")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3378
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3379
		{
			return unimplemented(sqllex, "create cast")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3380
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3382
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3383
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3384
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3385
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3386
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3387
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3388
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			return unimplemented(sqllex, "create publication")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3390
		{
			return unimplemented(sqllex, "create rule")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3391
		{
			return unimplemented(sqllex, "create server")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3392
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3394
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3398
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3399
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3402
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3403
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3406
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3407
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3410
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3411
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3415
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3416
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3417
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3418
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3419
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3420
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3421
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3423
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3424
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3425
		{
			return unimplemented(sqllex, "drop server")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3431
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3432
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3433
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3434
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3435
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3437
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3438
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3439
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3440
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3462
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3466
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3519
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3554
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3585
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3589
		{

			sqlVAL.union.val = nil
		}
	case 458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3606
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3632
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3645
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3649
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3672
		{
			return helpWith(sqllex, "DELETE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3676
		{
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3687
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3690
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3691
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3700
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3702
		{
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3703
		{
			return helpWith(sqllex, "DROP")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3707
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3708
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3710
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3711
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3712
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3728
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3768
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3775
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3800
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3808
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3859
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3883
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3898
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3902
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3925
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3932
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3959
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3966
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3968
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3976
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3984
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3992
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4000
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4011
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4019
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4022
		{
			return helpWith(sqllex, "DELETE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4024
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4026
		{
			return helpWith(sqllex, "INSERT")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4031
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4034
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4039
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4040
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4041
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4046
		{
			return helpWith(sqllex, "DELETE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4047
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "INSERT")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4050
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4059
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4081
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4114
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4194
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4204
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4219
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "GRANT")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4257
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4282
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4285
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4294
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4322
		{
			return helpWith(sqllex, "RESET")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "RESET")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "USE")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4368
		{
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4369
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4370
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "USE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4410
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4436
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4472
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 673:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4547
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4552
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4556
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4587
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			return unimplemented(sqllex, "set from current")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4598
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4606
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4611
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = tree.Low
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4696
		{
			sqlVAL.union.val = tree.Normal
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = tree.High
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4743
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4744
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4745
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4746
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4747
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4748
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4749
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4750
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4752
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4753
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4756
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4760
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4762
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4764
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4765
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4766
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4767
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4768
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4769
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4773
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4774
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4775
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4776
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4777
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "SHOW")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4789
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4793
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4798
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4803
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4808
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4813
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.str = "client_encoding"
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.str = "timezone"
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4858
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4873
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4921
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4930
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4948
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4960
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4980
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5003
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5035
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5067
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5086
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5099
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5108
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5135
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5140
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = true
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = true
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = false
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5169
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5176
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5177
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5178
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5195
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5221
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5222
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5238
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5288
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5291
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5293
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = true
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = false
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5317
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5358
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5363
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = true
		}
	case 906:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = false
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5402
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5406
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5410
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5423
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5431
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5436
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5441
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5445
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5459
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5464
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5469
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5474
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5482
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5493
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5504
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5522
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5530
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5551
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5556
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5561
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5565
		{
		}
	case 946:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5574
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5588
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5597
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5609
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5668
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5678
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5685
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5692
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5825
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5868
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5877
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5898
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5926
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5927
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5928
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5938
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5939
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5940
		{
			return helpWith(sqllex, "RESUME")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5958
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5960
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5967
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5999
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6001
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6028
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6042
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6070
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6109
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6125
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6154
		{

			sqlVAL.union.val = nil
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6160
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.str = ""
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6170
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = nil
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6193
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6197
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6223
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6237
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6252
		{
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6253
		{
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6254
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6309
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6331
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6335
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6346
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6349
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6352
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6353
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6359
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6375
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6380
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.str = ""
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6523
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6623
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6648
		{

			sqlVAL.union.val = true
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = false
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6659
		{
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6660
		{
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6761
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6772
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6789
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6799
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6814
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6879
		{
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6880
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6881
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6882
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6883
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6884
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6956
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7040
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7049
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7057
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7065
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7068
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7073
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7083
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7085
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7087
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7089
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7092
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7095
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7097
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7110
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7135
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7150
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = true
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7160
		{

			sqlVAL.union.val = true
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = false
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7175
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7189
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7201
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7213
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7223
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7233
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = nil
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7343
		{
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7344
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7369
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7371
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7373
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7375
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7377
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7379
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7417
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7435
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7454
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7471
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7488
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7492
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = false
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = true
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = false
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = true
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = false
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7546
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7552
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7558
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7566
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7591
		{
			sqlVAL.str = ""
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.str = ""
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7625
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7631
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7754
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7856
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7862
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7874
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7880
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7894
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7900
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7941
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = true
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = false
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = tree.Types
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8002
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8006
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8030
		{
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8031
		{
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8035
		{
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8046
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8064
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8073
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8094
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8102
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8123
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8131
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8142
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8146
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8147
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8148
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8167
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8172
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8185
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8190
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8199
		{
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8200
		{
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8201
		{
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8218
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8221
		{
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8222
		{
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8250
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8263
		{
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8265
		{
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8269
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8356
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.str = ""
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{

		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8397
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.str = ""
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.str = ""
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.str = ""
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.str = ""
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8452
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8465
		{
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8466
		{
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8495
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8513
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8517
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8526
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8575
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8602
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8606
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8644
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8676
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8697
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8712
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8753
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8856
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8891
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8892
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8893
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8954
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8998
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9014
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = true
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = false
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9067
		{
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9068
		{
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = nil
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9081
		{
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9082
		{
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = true
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = false
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = false
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = true
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9111
		{
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9112
		{
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9115
		{
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9116
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9157
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9178
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9183
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9209
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9242
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9297
		{
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9298
		{
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9301
		{
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9302
		{
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9336
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9338
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9368
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9370
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9385
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9407
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9412
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9428
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9440
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9459
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9498
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9508
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9543
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9554
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9584
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9617
		{
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9619
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = nil
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = true
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = false
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.str = tree.AstFull
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.str = tree.AstRight
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.str = tree.AstInner
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9737
		{
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.str = tree.AstHash
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.str = ""
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9806
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9811
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9829
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9835
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9841
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9851
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = true
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = false
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = true
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = false
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9900
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9913
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9921
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9922
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9940
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9942
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9950
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9970
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9979
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10019
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10031
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10032
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = types.Geography
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10081
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10089
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10115
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10123
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = nil
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = types.Int2
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = types.Int
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = types.Float4
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = types.Float
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10166
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10174
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10182
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = types.Bool
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10196
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = types.Float
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10215
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10221
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10243
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = types.String
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = true
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = false
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = types.Date
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10292
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10300
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10314
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10323
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10331
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10348
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = true
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = false
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = false
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = types.Interval
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10372
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10456
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10471
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = nil
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10501
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10561
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10710
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10718
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10831
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10897
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10919
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11027
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11035
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11131
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11136
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11162
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11171
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11186
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11216
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11227
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11228
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11243
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11252
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11318
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11443
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11448
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11457
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11466
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11475
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11484
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11489
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11491
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11494
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11499
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11504
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11513
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11514
		{
			return unimplemented(sqllex, "treat")
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11535
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11540
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11556
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11587
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.str = ""
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11676
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11689
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11757
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11786
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11862
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11991
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12118
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12202
		{
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12203
		{
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12252
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12256
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12275
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12283
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12352
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12356
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12372
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12381
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12392
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12401
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12409
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12426
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12519
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12529
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12533
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12627
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12645
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12658
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12665
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.str = ""
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12696
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12700
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
