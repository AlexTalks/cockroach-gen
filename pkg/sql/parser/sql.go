// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:66

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:621
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10177

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 24,
	-2, 1102,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	184, 929,
	201, 929,
	216, 252,
	300, 252,
	309, 748,
	336, 252,
	345, 748,
	384, 748,
	408, 252,
	432, 748,
	-2, 0,
	-1, 75,
	216, 256,
	-2, 0,
	-1, 76,
	111, 1102,
	190, 1102,
	418, 1102,
	419, 1102,
	-2, 0,
	-1, 88,
	124, 1076,
	140, 1076,
	153, 1076,
	198, 1076,
	228, 1076,
	264, 1076,
	274, 1076,
	413, 1076,
	-2, 1047,
	-1, 120,
	130, 664,
	215, 664,
	303, 644,
	354, 644,
	401, 664,
	-2, 0,
	-1, 121,
	4, 1104,
	21, 1104,
	22, 1104,
	23, 1104,
	24, 1104,
	25, 1104,
	27, 1104,
	33, 1104,
	38, 1104,
	39, 1104,
	40, 1104,
	41, 1104,
	42, 1104,
	43, 1104,
	44, 1104,
	45, 1104,
	46, 1104,
	47, 1104,
	48, 1104,
	49, 1104,
	50, 1104,
	52, 1104,
	53, 1104,
	54, 1104,
	55, 1104,
	56, 1104,
	57, 1104,
	60, 1104,
	61, 1104,
	62, 1104,
	63, 1104,
	65, 1104,
	66, 1104,
	70, 1104,
	71, 1104,
	72, 1104,
	73, 1104,
	74, 1104,
	75, 1104,
	77, 1104,
	78, 1104,
	79, 1104,
	80, 1104,
	82, 1104,
	84, 1104,
	85, 1104,
	86, 1104,
	88, 1104,
	90, 1104,
	91, 1104,
	99, 1104,
	100, 1104,
	101, 1104,
	102, 1104,
	103, 1104,
	104, 1104,
	105, 1104,
	106, 1104,
	108, 1104,
	110, 1104,
	111, 1104,
	113, 1104,
	116, 1104,
	117, 1104,
	118, 1104,
	120, 1104,
	122, 1104,
	123, 1104,
	125, 1104,
	126, 1104,
	127, 1104,
	128, 1104,
	129, 1104,
	130, 1104,
	131, 1104,
	132, 1104,
	133, 1104,
	134, 1104,
	135, 1104,
	136, 1104,
	137, 1104,
	139, 1104,
	145, 1104,
	146, 1104,
	147, 1104,
	148, 1104,
	149, 1104,
	150, 1104,
	152, 1104,
	154, 1104,
	158, 1104,
	159, 1104,
	161, 1104,
	162, 1104,
	164, 1104,
	165, 1104,
	167, 1104,
	168, 1104,
	169, 1104,
	170, 1104,
	171, 1104,
	172, 1104,
	173, 1104,
	174, 1104,
	176, 1104,
	177, 1104,
	179, 1104,
	180, 1104,
	181, 1104,
	184, 1104,
	185, 1104,
	186, 1104,
	187, 1104,
	190, 1104,
	191, 1104,
	192, 1104,
	193, 1104,
	194, 1104,
	195, 1104,
	196, 1104,
	197, 1104,
	199, 1104,
	201, 1104,
	203, 1104,
	205, 1104,
	206, 1104,
	207, 1104,
	209, 1104,
	210, 1104,
	213, 1104,
	214, 1104,
	215, 1104,
	216, 1104,
	217, 1104,
	219, 1104,
	220, 1104,
	222, 1104,
	223, 1104,
	225, 1104,
	226, 1104,
	229, 1104,
	230, 1104,
	233, 1104,
	234, 1104,
	235, 1104,
	237, 1104,
	238, 1104,
	239, 1104,
	240, 1104,
	241, 1104,
	242, 1104,
	243, 1104,
	244, 1104,
	245, 1104,
	246, 1104,
	248, 1104,
	249, 1104,
	250, 1104,
	251, 1104,
	253, 1104,
	255, 1104,
	257, 1104,
	259, 1104,
	260, 1104,
	261, 1104,
	262, 1104,
	263, 1104,
	265, 1104,
	266, 1104,
	267, 1104,
	269, 1104,
	270, 1104,
	271, 1104,
	272, 1104,
	275, 1104,
	276, 1104,
	277, 1104,
	279, 1104,
	281, 1104,
	282, 1104,
	283, 1104,
	284, 1104,
	285, 1104,
	286, 1104,
	287, 1104,
	288, 1104,
	289, 1104,
	290, 1104,
	292, 1104,
	293, 1104,
	294, 1104,
	295, 1104,
	296, 1104,
	297, 1104,
	299, 1104,
	301, 1104,
	302, 1104,
	303, 1104,
	304, 1104,
	305, 1104,
	306, 1104,
	307, 1104,
	308, 1104,
	309, 1104,
	310, 1104,
	312, 1104,
	313, 1104,
	314, 1104,
	315, 1104,
	316, 1104,
	318, 1104,
	319, 1104,
	320, 1104,
	321, 1104,
	322, 1104,
	323, 1104,
	324, 1104,
	325, 1104,
	327, 1104,
	329, 1104,
	330, 1104,
	331, 1104,
	332, 1104,
	333, 1104,
	334, 1104,
	336, 1104,
	337, 1104,
	338, 1104,
	339, 1104,
	340, 1104,
	341, 1104,
	342, 1104,
	343, 1104,
	345, 1104,
	346, 1104,
	347, 1104,
	348, 1104,
	349, 1104,
	350, 1104,
	351, 1104,
	352, 1104,
	353, 1104,
	354, 1104,
	356, 1104,
	357, 1104,
	358, 1104,
	359, 1104,
	360, 1104,
	362, 1104,
	363, 1104,
	364, 1104,
	365, 1104,
	366, 1104,
	368, 1104,
	369, 1104,
	370, 1104,
	371, 1104,
	372, 1104,
	373, 1104,
	374, 1104,
	375, 1104,
	376, 1104,
	377, 1104,
	378, 1104,
	379, 1104,
	381, 1104,
	382, 1104,
	383, 1104,
	385, 1104,
	386, 1104,
	387, 1104,
	388, 1104,
	389, 1104,
	390, 1104,
	391, 1104,
	393, 1104,
	394, 1104,
	395, 1104,
	396, 1104,
	397, 1104,
	399, 1104,
	401, 1104,
	402, 1104,
	403, 1104,
	404, 1104,
	405, 1104,
	407, 1104,
	408, 1104,
	409, 1104,
	411, 1104,
	412, 1104,
	415, 1104,
	416, 1104,
	417, 1104,
	418, 1104,
	419, 1104,
	420, 1104,
	422, 1104,
	424, 1104,
	425, 1104,
	426, 1104,
	427, 1104,
	428, 1104,
	429, 1104,
	430, 1104,
	432, 1104,
	433, 1104,
	434, 1104,
	439, 1104,
	440, 1104,
	441, 1104,
	442, 1104,
	443, 1104,
	444, 1104,
	-2, 0,
	-1, 122,
	1, 981,
	205, 981,
	299, 981,
	307, 981,
	447, 981,
	470, 981,
	-2, 0,
	-1, 124,
	1, 981,
	470, 981,
	-2, 0,
	-1, 125,
	1, 981,
	470, 981,
	-2, 0,
	-1, 126,
	1, 981,
	398, 981,
	470, 981,
	-2, 0,
	-1, 150,
	124, 1075,
	140, 1075,
	153, 1075,
	198, 1075,
	228, 1075,
	264, 1075,
	274, 1075,
	413, 1075,
	-2, 1050,
	-1, 183,
	4, 1111,
	5, 1111,
	6, 1111,
	7, 1111,
	8, 1111,
	9, 1111,
	10, 1111,
	21, 1111,
	22, 1111,
	23, 1111,
	24, 1111,
	25, 1111,
	27, 1111,
	33, 1111,
	34, 1111,
	38, 1111,
	39, 1111,
	40, 1111,
	41, 1111,
	42, 1111,
	43, 1111,
	44, 1111,
	45, 1111,
	46, 1111,
	47, 1111,
	48, 1111,
	49, 1111,
	50, 1111,
	52, 1111,
	53, 1111,
	54, 1111,
	55, 1111,
	56, 1111,
	57, 1111,
	58, 1111,
	59, 1111,
	60, 1111,
	61, 1111,
	62, 1111,
	63, 1111,
	65, 1111,
	66, 1111,
	68, 1111,
	70, 1111,
	71, 1111,
	72, 1111,
	73, 1111,
	74, 1111,
	75, 1111,
	77, 1111,
	78, 1111,
	79, 1111,
	80, 1111,
	82, 1111,
	84, 1111,
	85, 1111,
	86, 1111,
	88, 1111,
	89, 1111,
	90, 1111,
	91, 1111,
	92, 1111,
	93, 1111,
	94, 1111,
	95, 1111,
	96, 1111,
	97, 1111,
	98, 1111,
	99, 1111,
	100, 1111,
	101, 1111,
	102, 1111,
	103, 1111,
	104, 1111,
	105, 1111,
	106, 1111,
	107, 1111,
	108, 1111,
	110, 1111,
	111, 1111,
	113, 1111,
	116, 1111,
	117, 1111,
	118, 1111,
	120, 1111,
	122, 1111,
	123, 1111,
	125, 1111,
	126, 1111,
	127, 1111,
	128, 1111,
	129, 1111,
	130, 1111,
	131, 1111,
	132, 1111,
	133, 1111,
	134, 1111,
	135, 1111,
	136, 1111,
	137, 1111,
	138, 1111,
	139, 1111,
	145, 1111,
	146, 1111,
	147, 1111,
	148, 1111,
	149, 1111,
	150, 1111,
	152, 1111,
	154, 1111,
	157, 1111,
	158, 1111,
	159, 1111,
	161, 1111,
	162, 1111,
	164, 1111,
	165, 1111,
	167, 1111,
	168, 1111,
	169, 1111,
	170, 1111,
	171, 1111,
	172, 1111,
	173, 1111,
	174, 1111,
	175, 1111,
	176, 1111,
	177, 1111,
	179, 1111,
	180, 1111,
	181, 1111,
	184, 1111,
	185, 1111,
	186, 1111,
	187, 1111,
	189, 1111,
	190, 1111,
	191, 1111,
	192, 1111,
	193, 1111,
	194, 1111,
	195, 1111,
	196, 1111,
	197, 1111,
	199, 1111,
	201, 1111,
	202, 1111,
	203, 1111,
	204, 1111,
	205, 1111,
	206, 1111,
	207, 1111,
	208, 1111,
	209, 1111,
	210, 1111,
	213, 1111,
	214, 1111,
	215, 1111,
	216, 1111,
	217, 1111,
	219, 1111,
	220, 1111,
	222, 1111,
	223, 1111,
	224, 1111,
	225, 1111,
	226, 1111,
	227, 1111,
	229, 1111,
	230, 1111,
	231, 1111,
	232, 1111,
	233, 1111,
	234, 1111,
	235, 1111,
	237, 1111,
	238, 1111,
	239, 1111,
	240, 1111,
	241, 1111,
	242, 1111,
	243, 1111,
	244, 1111,
	245, 1111,
	246, 1111,
	247, 1111,
	248, 1111,
	249, 1111,
	250, 1111,
	251, 1111,
	252, 1111,
	253, 1111,
	254, 1111,
	255, 1111,
	256, 1111,
	257, 1111,
	258, 1111,
	259, 1111,
	260, 1111,
	261, 1111,
	262, 1111,
	263, 1111,
	265, 1111,
	266, 1111,
	267, 1111,
	270, 1111,
	271, 1111,
	272, 1111,
	275, 1111,
	276, 1111,
	277, 1111,
	278, 1111,
	279, 1111,
	280, 1111,
	281, 1111,
	282, 1111,
	283, 1111,
	284, 1111,
	285, 1111,
	286, 1111,
	287, 1111,
	288, 1111,
	289, 1111,
	290, 1111,
	292, 1111,
	293, 1111,
	294, 1111,
	295, 1111,
	296, 1111,
	297, 1111,
	299, 1111,
	301, 1111,
	302, 1111,
	303, 1111,
	304, 1111,
	305, 1111,
	306, 1111,
	307, 1111,
	308, 1111,
	309, 1111,
	310, 1111,
	312, 1111,
	313, 1111,
	314, 1111,
	315, 1111,
	316, 1111,
	318, 1111,
	319, 1111,
	320, 1111,
	321, 1111,
	322, 1111,
	323, 1111,
	324, 1111,
	325, 1111,
	327, 1111,
	328, 1111,
	329, 1111,
	330, 1111,
	331, 1111,
	332, 1111,
	333, 1111,
	334, 1111,
	336, 1111,
	337, 1111,
	338, 1111,
	339, 1111,
	340, 1111,
	341, 1111,
	342, 1111,
	343, 1111,
	345, 1111,
	346, 1111,
	347, 1111,
	348, 1111,
	349, 1111,
	350, 1111,
	351, 1111,
	352, 1111,
	353, 1111,
	354, 1111,
	355, 1111,
	356, 1111,
	357, 1111,
	358, 1111,
	359, 1111,
	360, 1111,
	361, 1111,
	362, 1111,
	363, 1111,
	364, 1111,
	365, 1111,
	366, 1111,
	368, 1111,
	369, 1111,
	370, 1111,
	371, 1111,
	372, 1111,
	373, 1111,
	374, 1111,
	375, 1111,
	376, 1111,
	377, 1111,
	378, 1111,
	379, 1111,
	381, 1111,
	382, 1111,
	383, 1111,
	385, 1111,
	386, 1111,
	387, 1111,
	388, 1111,
	389, 1111,
	390, 1111,
	391, 1111,
	393, 1111,
	394, 1111,
	395, 1111,
	396, 1111,
	397, 1111,
	399, 1111,
	401, 1111,
	402, 1111,
	403, 1111,
	404, 1111,
	405, 1111,
	406, 1111,
	407, 1111,
	408, 1111,
	409, 1111,
	411, 1111,
	412, 1111,
	414, 1111,
	415, 1111,
	416, 1111,
	417, 1111,
	418, 1111,
	419, 1111,
	420, 1111,
	421, 1111,
	422, 1111,
	424, 1111,
	425, 1111,
	426, 1111,
	427, 1111,
	428, 1111,
	429, 1111,
	430, 1111,
	432, 1111,
	433, 1111,
	434, 1111,
	439, 1111,
	440, 1111,
	441, 1111,
	442, 1111,
	443, 1111,
	444, 1111,
	445, 1111,
	451, 1111,
	458, 1111,
	459, 1111,
	460, 1111,
	467, 1111,
	471, 1111,
	-2, 0,
	-1, 565,
	156, 1812,
	398, 1812,
	450, 1812,
	469, 1812,
	-2, 0,
	-1, 566,
	156, 1892,
	398, 1892,
	450, 1892,
	469, 1892,
	-2, 0,
	-1, 567,
	156, 1801,
	398, 1801,
	450, 1801,
	469, 1801,
	-2, 0,
	-1, 569,
	156, 1986,
	398, 1986,
	450, 1986,
	469, 1986,
	-2, 0,
	-1, 571,
	156, 2016,
	398, 2016,
	450, 2016,
	469, 2016,
	-2, 0,
	-1, 578,
	156, 1903,
	398, 1903,
	450, 1903,
	469, 1903,
	-2, 509,
	-1, 600,
	469, 1758,
	472, 1758,
	-2, 717,
	-1, 601,
	469, 1760,
	472, 1760,
	-2, 718,
	-1, 602,
	469, 1759,
	472, 1759,
	-2, 719,
	-1, 603,
	472, 1697,
	-2, 720,
	-1, 646,
	432, 911,
	-2, 749,
	-1, 752,
	303, 645,
	354, 645,
	-2, 0,
	-1, 753,
	303, 644,
	354, 644,
	-2, 592,
	-1, 757,
	1, 674,
	466, 674,
	468, 674,
	470, 674,
	-2, 0,
	-1, 758,
	1, 716,
	153, 716,
	466, 716,
	468, 716,
	470, 716,
	-2, 0,
	-1, 766,
	1, 648,
	466, 648,
	468, 648,
	470, 648,
	-2, 0,
	-1, 769,
	1, 674,
	466, 674,
	468, 674,
	470, 674,
	-2, 0,
	-1, 770,
	1, 676,
	466, 676,
	468, 676,
	470, 676,
	-2, 0,
	-1, 771,
	1, 679,
	466, 679,
	468, 679,
	470, 679,
	-2, 0,
	-1, 776,
	1, 695,
	466, 695,
	468, 695,
	470, 695,
	-2, 0,
	-1, 777,
	1, 697,
	466, 697,
	468, 697,
	470, 697,
	-2, 0,
	-1, 819,
	140, 1113,
	153, 1113,
	228, 1113,
	264, 1113,
	-2, 1054,
	-1, 832,
	140, 1112,
	153, 1112,
	228, 1112,
	264, 1112,
	-2, 1051,
	-1, 856,
	469, 1757,
	-2, 517,
	-1, 884,
	467, 1749,
	-2, 1740,
	-1, 890,
	5, 1253,
	-2, 1791,
	-1, 891,
	5, 1254,
	-2, 1796,
	-1, 892,
	5, 1255,
	-2, 1795,
	-1, 893,
	5, 1256,
	-2, 2013,
	-1, 894,
	5, 1257,
	-2, 1905,
	-1, 895,
	5, 1258,
	-2, 1978,
	-1, 896,
	5, 1259,
	-2, 1980,
	-1, 897,
	5, 1260,
	-2, 1993,
	-1, 898,
	5, 1261,
	-2, 1981,
	-1, 899,
	5, 1262,
	-2, 1982,
	-1, 900,
	5, 1263,
	-2, 1790,
	-1, 901,
	5, 1264,
	-2, 2029,
	-1, 902,
	5, 1265,
	-2, 1866,
	-1, 903,
	5, 1266,
	-2, 1916,
	-1, 904,
	5, 1267,
	-2, 1918,
	-1, 905,
	5, 1268,
	-2, 1870,
	-1, 906,
	5, 1269,
	467, 1767,
	-2, 1758,
	-1, 912,
	467, 1768,
	-2, 1759,
	-1, 914,
	5, 1273,
	-2, 2062,
	-1, 915,
	5, 1274,
	-2, 2063,
	-1, 916,
	5, 1275,
	-2, 1869,
	-1, 917,
	5, 1276,
	-2, 2075,
	-1, 918,
	5, 1277,
	-2, 1871,
	-1, 919,
	5, 1278,
	-2, 1872,
	-1, 920,
	5, 1279,
	-2, 1873,
	-1, 921,
	5, 1280,
	-2, 2044,
	-1, 922,
	5, 1281,
	-2, 2073,
	-1, 923,
	5, 1282,
	-2, 1849,
	-1, 924,
	5, 1283,
	-2, 1850,
	-1, 925,
	5, 1297,
	-2, 2056,
	-1, 927,
	5, 1272,
	-2, 2052,
	-1, 928,
	5, 1272,
	-2, 2051,
	-1, 929,
	5, 1272,
	-2, 2068,
	-1, 930,
	5, 1289,
	-2, 2046,
	-1, 931,
	5, 1290,
	-2, 1792,
	-1, 932,
	5, 1300,
	-2, 2045,
	-1, 933,
	5, 1302,
	-2, 2084,
	-1, 935,
	5, 1313,
	-2, 1823,
	-1, 936,
	5, 1324,
	-2, 2077,
	-1, 937,
	5, 1316,
	-2, 2078,
	-1, 938,
	5, 1324,
	-2, 2079,
	-1, 939,
	5, 1320,
	-2, 2080,
	-1, 940,
	5, 1241,
	-2, 1879,
	-1, 941,
	5, 1242,
	-2, 1880,
	-1, 942,
	469, 1755,
	-2, 1739,
	-1, 943,
	467, 2105,
	-2, 1756,
	-1, 965,
	5, 1308,
	-2, 2004,
	-1, 983,
	5, 1307,
	-2, 2085,
	-1, 993,
	5, 1309,
	433, 1309,
	-2, 2047,
	-1, 994,
	5, 1310,
	433, 1310,
	-2, 2048,
	-1, 1031,
	467, 1767,
	-2, 1758,
	-1, 1059,
	156, 2016,
	398, 2016,
	450, 2016,
	469, 2016,
	-2, 0,
	-1, 1062,
	1, 495,
	470, 495,
	-2, 989,
	-1, 1182,
	318, 1736,
	460, 1736,
	-2, 1735,
	-1, 1194,
	471, 1736,
	-2, 1737,
	-1, 1195,
	88, 1100,
	250, 1100,
	288, 1100,
	-2, 910,
	-1, 1206,
	88, 1100,
	250, 1100,
	288, 1100,
	-2, 910,
	-1, 1246,
	309, 748,
	432, 748,
	-2, 251,
	-1, 1266,
	88, 1100,
	250, 1100,
	288, 1100,
	-2, 910,
	-1, 1269,
	88, 1100,
	250, 1100,
	288, 1100,
	-2, 910,
	-1, 1275,
	268, 1762,
	-2, 0,
	-1, 1341,
	1, 370,
	466, 370,
	468, 370,
	470, 370,
	-2, 1074,
	-1, 1344,
	4, 2083,
	11, 2083,
	12, 2083,
	14, 2083,
	15, 2083,
	16, 2083,
	17, 2083,
	18, 2083,
	19, 2083,
	21, 2083,
	22, 2083,
	23, 2083,
	24, 2083,
	25, 2083,
	27, 2083,
	30, 2083,
	31, 2083,
	33, 2083,
	35, 2083,
	38, 2083,
	39, 2083,
	40, 2083,
	41, 2083,
	42, 2083,
	43, 2083,
	44, 2083,
	45, 2083,
	46, 2083,
	47, 2083,
	48, 2083,
	49, 2083,
	50, 2083,
	52, 2083,
	53, 2083,
	54, 2083,
	55, 2083,
	56, 2083,
	57, 2083,
	60, 2083,
	61, 2083,
	62, 2083,
	63, 2083,
	65, 2083,
	66, 2083,
	67, 2083,
	70, 2083,
	71, 2083,
	72, 2083,
	73, 2083,
	74, 2083,
	75, 2083,
	76, 2083,
	77, 2083,
	78, 2083,
	79, 2083,
	80, 2083,
	82, 2083,
	83, 2083,
	84, 2083,
	85, 2083,
	86, 2083,
	88, 2083,
	89, 2083,
	90, 2083,
	91, 2083,
	99, 2083,
	100, 2083,
	101, 2083,
	102, 2083,
	103, 2083,
	104, 2083,
	105, 2083,
	106, 2083,
	108, 2083,
	110, 2083,
	111, 2083,
	113, 2083,
	116, 2083,
	117, 2083,
	118, 2083,
	120, 2083,
	122, 2083,
	123, 2083,
	125, 2083,
	126, 2083,
	127, 2083,
	128, 2083,
	129, 2083,
	130, 2083,
	131, 2083,
	132, 2083,
	133, 2083,
	134, 2083,
	135, 2083,
	136, 2083,
	137, 2083,
	141, 2083,
	142, 2083,
	143, 2083,
	144, 2083,
	145, 2083,
	146, 2083,
	147, 2083,
	148, 2083,
	149, 2083,
	150, 2083,
	151, 2083,
	152, 2083,
	154, 2083,
	157, 2083,
	158, 2083,
	159, 2083,
	161, 2083,
	162, 2083,
	164, 2083,
	165, 2083,
	167, 2083,
	168, 2083,
	169, 2083,
	170, 2083,
	171, 2083,
	172, 2083,
	173, 2083,
	174, 2083,
	175, 2083,
	176, 2083,
	177, 2083,
	178, 2083,
	179, 2083,
	180, 2083,
	181, 2083,
	182, 2083,
	183, 2083,
	185, 2083,
	186, 2083,
	187, 2083,
	189, 2083,
	190, 2083,
	191, 2083,
	192, 2083,
	193, 2083,
	194, 2083,
	195, 2083,
	196, 2083,
	197, 2083,
	199, 2083,
	201, 2083,
	202, 2083,
	203, 2083,
	204, 2083,
	205, 2083,
	206, 2083,
	207, 2083,
	208, 2083,
	209, 2083,
	210, 2083,
	211, 2083,
	212, 2083,
	213, 2083,
	214, 2083,
	215, 2083,
	216, 2083,
	217, 2083,
	219, 2083,
	220, 2083,
	222, 2083,
	223, 2083,
	224, 2083,
	225, 2083,
	226, 2083,
	227, 2083,
	229, 2083,
	230, 2083,
	233, 2083,
	234, 2083,
	235, 2083,
	236, 2083,
	237, 2083,
	238, 2083,
	239, 2083,
	240, 2083,
	241, 2083,
	242, 2083,
	243, 2083,
	244, 2083,
	245, 2083,
	246, 2083,
	247, 2083,
	248, 2083,
	249, 2083,
	250, 2083,
	251, 2083,
	253, 2083,
	256, 2083,
	257, 2083,
	259, 2083,
	260, 2083,
	261, 2083,
	262, 2083,
	263, 2083,
	265, 2083,
	266, 2083,
	267, 2083,
	270, 2083,
	271, 2083,
	272, 2083,
	273, 2083,
	275, 2083,
	276, 2083,
	277, 2083,
	279, 2083,
	281, 2083,
	282, 2083,
	283, 2083,
	284, 2083,
	285, 2083,
	286, 2083,
	287, 2083,
	288, 2083,
	289, 2083,
	290, 2083,
	292, 2083,
	293, 2083,
	294, 2083,
	295, 2083,
	296, 2083,
	297, 2083,
	299, 2083,
	301, 2083,
	302, 2083,
	303, 2083,
	304, 2083,
	305, 2083,
	306, 2083,
	307, 2083,
	308, 2083,
	309, 2083,
	310, 2083,
	312, 2083,
	313, 2083,
	314, 2083,
	315, 2083,
	316, 2083,
	317, 2083,
	318, 2083,
	319, 2083,
	320, 2083,
	321, 2083,
	322, 2083,
	323, 2083,
	324, 2083,
	325, 2083,
	327, 2083,
	328, 2083,
	329, 2083,
	330, 2083,
	331, 2083,
	332, 2083,
	333, 2083,
	334, 2083,
	335, 2083,
	336, 2083,
	337, 2083,
	338, 2083,
	339, 2083,
	340, 2083,
	341, 2083,
	342, 2083,
	343, 2083,
	345, 2083,
	346, 2083,
	347, 2083,
	348, 2083,
	349, 2083,
	350, 2083,
	351, 2083,
	352, 2083,
	353, 2083,
	354, 2083,
	356, 2083,
	357, 2083,
	358, 2083,
	359, 2083,
	360, 2083,
	361, 2083,
	362, 2083,
	363, 2083,
	364, 2083,
	365, 2083,
	366, 2083,
	368, 2083,
	369, 2083,
	370, 2083,
	371, 2083,
	372, 2083,
	373, 2083,
	374, 2083,
	375, 2083,
	376, 2083,
	377, 2083,
	378, 2083,
	379, 2083,
	381, 2083,
	382, 2083,
	383, 2083,
	385, 2083,
	386, 2083,
	387, 2083,
	388, 2083,
	389, 2083,
	390, 2083,
	391, 2083,
	393, 2083,
	394, 2083,
	395, 2083,
	396, 2083,
	397, 2083,
	399, 2083,
	401, 2083,
	402, 2083,
	403, 2083,
	404, 2083,
	405, 2083,
	407, 2083,
	408, 2083,
	409, 2083,
	411, 2083,
	412, 2083,
	415, 2083,
	416, 2083,
	417, 2083,
	418, 2083,
	419, 2083,
	420, 2083,
	422, 2083,
	424, 2083,
	425, 2083,
	426, 2083,
	427, 2083,
	428, 2083,
	429, 2083,
	430, 2083,
	432, 2083,
	433, 2083,
	434, 2083,
	439, 2083,
	440, 2083,
	441, 2083,
	442, 2083,
	443, 2083,
	444, 2083,
	445, 2083,
	446, 2083,
	448, 2083,
	449, 2083,
	450, 2083,
	451, 2083,
	452, 2083,
	453, 2083,
	455, 2083,
	456, 2083,
	457, 2083,
	458, 2083,
	459, 2083,
	460, 2083,
	461, 2083,
	462, 2083,
	463, 2083,
	465, 2083,
	468, 2083,
	469, 2083,
	471, 2083,
	472, 2083,
	-2, 0,
	-1, 1349,
	156, 1986,
	398, 1986,
	450, 1986,
	469, 1986,
	-2, 0,
	-1, 1381,
	303, 645,
	354, 645,
	-2, 0,
	-1, 1405,
	1, 640,
	466, 640,
	468, 640,
	470, 640,
	-2, 0,
	-1, 1406,
	1, 665,
	466, 665,
	468, 665,
	470, 665,
	-2, 0,
	-1, 1407,
	1, 647,
	466, 647,
	468, 647,
	470, 647,
	-2, 0,
	-1, 1409,
	1, 651,
	466, 651,
	468, 651,
	470, 651,
	-2, 0,
	-1, 1436,
	1, 2036,
	466, 2036,
	468, 2036,
	469, 2036,
	470, 2036,
	-2, 693,
	-1, 1437,
	1, 1983,
	466, 1983,
	468, 1983,
	469, 1983,
	470, 1983,
	-2, 694,
	-1, 1452,
	1, 984,
	470, 984,
	-2, 989,
	-1, 1455,
	140, 1112,
	153, 1112,
	228, 1112,
	264, 1112,
	-2, 1055,
	-1, 1549,
	124, 1076,
	140, 1076,
	153, 1076,
	198, 1076,
	228, 1076,
	264, 1076,
	274, 1076,
	413, 1076,
	-2, 1483,
	-1, 1606,
	468, 1631,
	-2, 0,
	-1, 1640,
	124, 1076,
	140, 1076,
	153, 1076,
	198, 1076,
	228, 1076,
	264, 1076,
	274, 1076,
	413, 1076,
	-2, 1191,
	-1, 1699,
	467, 1312,
	-2, 1300,
	-1, 1743,
	1, 497,
	470, 497,
	-2, 989,
	-1, 1952,
	1, 642,
	466, 642,
	468, 642,
	470, 642,
	-2, 0,
	-1, 1953,
	1, 667,
	466, 667,
	468, 667,
	470, 667,
	-2, 0,
	-1, 2025,
	333, 1137,
	334, 1137,
	-2, 1345,
	-1, 2056,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1363,
	-1, 2057,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1364,
	-1, 2058,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1365,
	-1, 2059,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1366,
	-1, 2060,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1367,
	-1, 2061,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1368,
	-1, 2062,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1369,
	-1, 2063,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1370,
	-1, 2075,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1382,
	-1, 2076,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1383,
	-1, 2077,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1384,
	-1, 2080,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1389,
	-1, 2086,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1393,
	-1, 2088,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1401,
	-1, 2089,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1402,
	-1, 2090,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1403,
	-1, 2091,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1404,
	-1, 2193,
	5, 1269,
	156, 1642,
	467, 1767,
	-2, 1758,
	-1, 2194,
	156, 1643,
	-2, 2040,
	-1, 2195,
	156, 1644,
	-2, 1902,
	-1, 2196,
	156, 1645,
	-2, 1824,
	-1, 2197,
	156, 1646,
	-2, 1860,
	-1, 2198,
	156, 1647,
	-2, 1900,
	-1, 2199,
	156, 1648,
	-2, 1977,
	-1, 2200,
	156, 1649,
	-2, 1466,
	-1, 2269,
	1, 1192,
	2, 1192,
	89, 1192,
	124, 1192,
	140, 1192,
	153, 1192,
	157, 1192,
	163, 1192,
	166, 1192,
	189, 1192,
	198, 1192,
	208, 1192,
	224, 1192,
	228, 1192,
	247, 1192,
	264, 1192,
	268, 1192,
	274, 1192,
	326, 1192,
	328, 1192,
	413, 1192,
	423, 1192,
	436, 1192,
	437, 1192,
	438, 1192,
	447, 1192,
	466, 1192,
	468, 1192,
	470, 1192,
	472, 1192,
	-2, 1191,
	-1, 2282,
	467, 1741,
	-2, 1753,
	-1, 2302,
	467, 1311,
	-2, 1301,
	-1, 2399,
	88, 1100,
	250, 1100,
	288, 1100,
	-2, 910,
	-1, 2400,
	88, 1100,
	250, 1100,
	288, 1100,
	-2, 910,
	-1, 2553,
	269, 1140,
	-2, 2074,
	-1, 2554,
	269, 1141,
	-2, 1966,
	-1, 2558,
	333, 1708,
	334, 1708,
	-2, 1464,
	-1, 2559,
	333, 1712,
	334, 1712,
	-2, 1465,
	-1, 2560,
	333, 1709,
	334, 1709,
	-2, 1464,
	-1, 2561,
	333, 1713,
	334, 1713,
	-2, 1465,
	-1, 2574,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1391,
	-1, 2575,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1395,
	-1, 2581,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1397,
	-1, 2770,
	205, 989,
	299, 989,
	307, 989,
	447, 989,
	-2, 494,
	-1, 2867,
	88, 1100,
	250, 1100,
	288, 1100,
	-2, 910,
	-1, 2868,
	88, 1100,
	250, 1100,
	288, 1100,
	-2, 910,
	-1, 2957,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1399,
	-1, 2964,
	202, 0,
	204, 0,
	256, 0,
	-2, 1418,
	-1, 3028,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1447,
	-1, 3029,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1448,
	-1, 3030,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1449,
	-1, 3034,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1453,
	-1, 3035,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1454,
	-1, 3036,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1455,
	-1, 3080,
	467, 1742,
	-2, 1754,
	-1, 3171,
	469, 2187,
	-2, 1033,
	-1, 3221,
	202, 0,
	204, 0,
	256, 0,
	-2, 1419,
	-1, 3224,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1422,
	-1, 3225,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1424,
	-1, 3390,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1423,
	-1, 3391,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1425,
	-1, 3401,
	202, 0,
	-2, 1456,
	-1, 3515,
	202, 0,
	-2, 1457,
	-1, 3645,
	43, 0,
	175, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 2043,
}

const sqlPrivate = 57344

const sqlLast = 85529

var sqlAct = [...]int{

	912, 3433, 3459, 3750, 3430, 3644, 3326, 3655, 3737, 3536,
	3622, 3204, 2701, 3613, 3656, 3610, 2225, 3695, 3100, 3657,
	2854, 2453, 3594, 2996, 1032, 3419, 3466, 3519, 2702, 3643,
	3355, 2334, 1333, 2043, 3163, 3158, 3379, 1198, 1926, 215,
	3475, 215, 215, 3339, 215, 215, 215, 215, 215, 2883,
	3283, 215, 857, 2850, 2787, 842, 2103, 2876, 1464, 833,
	602, 2878, 1674, 3360, 576, 3142, 1646, 207, 2949, 3405,
	2259, 2442, 1087, 1217, 1837, 1329, 2486, 1794, 215, 2488,
	3101, 2567, 602, 2417, 2392, 2428, 2716, 1024, 2425, 2687,
	2744, 2724, 3256, 3203, 2477, 1615, 2479, 2705, 2336, 2454,
	2496, 3051, 1831, 1830, 2686, 1836, 2707, 1675, 1577, 3520,
	2485, 2040, 2262, 1389, 698, 1884, 1557, 2602, 2116, 1179,
	4, 1803, 1881, 841, 143, 2036, 2551, 1187, 2261, 2394,
	1819, 2495, 1616, 1184, 2401, 3460, 908, 884, 2145, 1075,
	2243, 1826, 1779, 87, 1781, 2369, 2136, 2100, 2426, 1635,
	1452, 2264, 1769, 2024, 1316, 2007, 1357, 2005, 2852, 1200,
	1326, 1342, 2147, 2447, 1904, 1866, 2750, 1264, 603, 2139,
	544, 604, 2222, 209, 208, 1018, 1015, 2251, 215, 215,
	2233, 1064, 2489, 1625, 997, 2189, 1540, 150, 1465, 151,
	598, 2117, 530, 1466, 2006, 2326, 552, 692, 2008, 560,
	143, 1865, 1340, 570, 1356, 1632, 673, 1890, 1290, 646,
	1214, 547, 1793, 1572, 2029, 37, 555, 2370, 1014, 36,
	869, 34, 1020, 25, 23, 21, 32, 995, 1471, 747,
	1451, 764, 2598, 607, 610, 1272, 3065, 1906, 3066, 1906,
	1906, 3783, 3773, 3772, 3747, 2242, 2242, 2242, 1842, 2703,
	3727, 837, 2893, 3725, 3297, 607, 610, 3297, 3681, 3679,
	3677, 3674, 3682, 2242, 2242, 3675, 3671, 3666, 2768, 832,
	3672, 1842, 709, 3641, 3640, 3639, 3636, 1842, 1842, 1918,
	1918, 837, 3635, 3608, 3588, 2892, 1918, 3297, 2297, 3582,
	2242, 3589, 1012, 2242, 1479, 1480, 838, 1512, 1513, 1514,
	1522, 1523, 1524, 3581, 3576, 3575, 3569, 2242, 3297, 3297,
	1842, 3563, 3561, 1515, 1510, 3297, 3297, 2235, 3517, 2611,
	3498, 1482, 2297, 1030, 1842, 2612, 1528, 1049, 3495, 998,
	998, 820, 3297, 819, 3468, 3449, 3448, 3440, 3469, 1842,
	1842, 1842, 846, 3439, 3411, 3392, 3501, 3297, 1842, 2297,
	1481, 3377, 3368, 3055, 2234, 1918, 2906, 2659, 2660, 1501,
	2677, 2678, 2679, 3324, 3315, 3296, 1498, 2242, 2242, 3297,
	3223, 3179, 1072, 3173, 2297, 2922, 3219, 2922, 3140, 827,
	3075, 3073, 3141, 3058, 3076, 3074, 2980, 2242, 2976, 2921,
	1842, 2913, 2242, 2922, 2700, 2914, 2698, 3055, 2242, 2697,
	2242, 2651, 1044, 2242, 2630, 2242, 999, 2613, 2631, 2475,
	2208, 2242, 1072, 1922, 2474, 2403, 2310, 2296, 1922, 1918,
	2242, 2297, 2674, 2293, 1504, 1505, 1506, 1507, 2291, 2284,
	1408, 58, 2242, 1842, 1487, 2241, 2142, 1934, 1921, 2242,
	1479, 1480, 1922, 1918, 1001, 59, 1002, 3316, 1842, 2242,
	183, 2914, 2383, 2325, 1798, 1749, 1905, 1842, 1519, 2906,
	63, 1529, 2423, 2566, 1841, 1509, 1511, 1482, 2323, 1611,
	1213, 3128, 2952, 2930, 1479, 1480, 1045, 1633, 1391, 2601,
	1829, 2278, 2277, 2276, 2894, 1525, 2275, 1526, 2274, 1003,
	185, 69, 1000, 183, 1496, 1497, 1481, 2665, 826, 2659,
	2660, 1482, 2143, 2895, 1907, 825, 1907, 1907, 824, 2531,
	1517, 823, 822, 818, 817, 816, 815, 814, 813, 1502,
	812, 811, 75, 810, 2659, 2660, 809, 911, 808, 807,
	1481, 806, 86, 185, 184, 215, 745, 76, 83, 1527,
	744, 743, 742, 741, 177, 740, 739, 738, 2680, 737,
	736, 735, 178, 734, 733, 732, 1516, 1548, 731, 730,
	729, 728, 727, 215, 2674, 726, 3662, 725, 2892, 724,
	215, 723, 722, 152, 2144, 2141, 3272, 184, 1235, 721,
	1487, 77, 2675, 910, 1045, 720, 719, 215, 1090, 215,
	215, 215, 1090, 215, 1203, 1203, 2450, 718, 1203, 707,
	1508, 706, 664, 663, 623, 622, 215, 215, 621, 613,
	612, 611, 584, 583, 1487, 582, 152, 581, 1503, 1636,
	580, 564, 205, 204, 203, 202, 201, 200, 199, 198,
	1074, 215, 197, 2234, 1079, 196, 195, 194, 193, 2665,
	192, 1478, 191, 1045, 1520, 215, 1068, 190, 1203, 1203,
	215, 215, 1914, 215, 1905, 2000, 189, 1182, 1088, 188,
	1194, 187, 1188, 215, 2665, 186, 3235, 3069, 1190, 2923,
	2747, 215, 2624, 2607, 2295, 2146, 1548, 2407, 1580, 2285,
	2268, 2676, 76, 2180, 1579, 215, 215, 215, 215, 215,
	1203, 1203, 2166, 78, 2164, 1203, 1777, 1659, 215, 1203,
	215, 215, 1566, 1559, 1219, 1583, 1081, 3364, 1034, 1203,
	1580, 2435, 1929, 1027, 3642, 215, 1579, 1273, 1273, 3556,
	3510, 3504, 1062, 1337, 2675, 3502, 149, 81, 1518, 82,
	3369, 1493, 1494, 1500, 1521, 1499, 1495, 1578, 1492, 1490,
	1491, 1483, 1484, 1485, 1486, 1488, 1489, 1234, 183, 2675,
	3429, 3597, 1203, 3276, 1209, 1194, 2659, 2660, 3255, 3254,
	697, 3242, 3241, 1083, 120, 1176, 1181, 3240, 934, 1026,
	3239, 58, 183, 1057, 1216, 2140, 215, 1215, 3234, 607,
	610, 1928, 3231, 3230, 3139, 59, 1277, 3089, 185, 3088,
	215, 3087, 3079, 3146, 2671, 2672, 2673, 2388, 3048, 2306,
	63, 2670, 2668, 2669, 2661, 2662, 2663, 2664, 2666, 2667,
	3047, 121, 185, 3046, 2917, 2972, 1345, 1347, 2968, 143,
	143, 2742, 1330, 2676, 153, 2694, 2685, 2658, 2655, 1361,
	2654, 69, 184, 183, 2652, 1560, 2637, 1558, 838, 2636,
	1320, 1323, 177, 1222, 2635, 1227, 3126, 1233, 2676, 2632,
	178, 2629, 2659, 2660, 1343, 2623, 184, 2606, 2599, 2476,
	2269, 1564, 75, 1410, 2129, 1478, 177, 1068, 1011, 1477,
	1068, 152, 86, 185, 178, 1559, 3780, 76, 83, 1456,
	1878, 1293, 3746, 1418, 3745, 1847, 1274, 1483, 1484, 1485,
	1486, 1488, 1489, 183, 2436, 152, 2665, 1845, 3680, 1033,
	2998, 3631, 3629, 3550, 3547, 3544, 3363, 3543, 3542, 120,
	3535, 3529, 3499, 3494, 3493, 2106, 3445, 184, 3425, 183,
	183, 77, 3403, 1485, 1486, 1488, 1489, 177, 3387, 3386,
	3521, 1355, 3374, 185, 3373, 178, 3353, 1455, 3350, 1360,
	3343, 1547, 3271, 2670, 2668, 2669, 2661, 2662, 2663, 2664,
	2666, 2667, 3253, 3193, 3190, 2762, 2449, 3117, 3116, 185,
	185, 3104, 3103, 693, 3061, 2963, 1450, 1544, 2670, 2668,
	2669, 2661, 2662, 2663, 2664, 2666, 2667, 184, 1366, 2924,
	3346, 2675, 2907, 2870, 2834, 1382, 2813, 177, 58, 696,
	695, 2790, 2665, 1409, 3145, 178, 1229, 215, 2789, 2763,
	2659, 2660, 59, 184, 184, 2699, 2628, 2627, 2622, 2112,
	2590, 2416, 1584, 177, 177, 1581, 152, 63, 1573, 1570,
	838, 178, 178, 1613, 215, 2304, 1453, 1622, 1461, 820,
	2303, 819, 1460, 78, 215, 1090, 215, 215, 215, 215,
	2280, 2273, 152, 152, 602, 215, 215, 1582, 69, 602,
	215, 2240, 2162, 1658, 1614, 215, 2434, 1669, 1457, 1610,
	1609, 1203, 1608, 1607, 1474, 1475, 149, 81, 1606, 82,
	1605, 1604, 1603, 1741, 1602, 1223, 1600, 2675, 840, 75,
	2676, 1599, 1090, 1479, 1480, 1598, 1597, 867, 183, 86,
	1596, 1595, 1930, 1594, 76, 83, 1593, 2790, 1746, 1592,
	697, 1619, 1620, 1591, 120, 1662, 1194, 1661, 1590, 1589,
	1482, 1588, 1587, 2356, 1667, 1586, 1561, 1545, 1671, 1740,
	1543, 2659, 2660, 1738, 1538, 1056, 1643, 1047, 185, 1040,
	3273, 1775, 2659, 2660, 1068, 3227, 2739, 3085, 77, 1481,
	2665, 3072, 1574, 1575, 3064, 143, 2610, 3414, 998, 2179,
	2271, 121, 1778, 3275, 3084, 1030, 1798, 1030, 2165, 2299,
	2163, 1560, 3505, 838, 153, 1228, 3503, 2760, 1541, 1663,
	1644, 1654, 184, 2816, 1665, 1666, 2676, 3318, 852, 1078,
	2659, 2660, 177, 1076, 3743, 3736, 3545, 2879, 1768, 3471,
	178, 3470, 1768, 3367, 1755, 1641, 1768, 3317, 1072, 3067,
	2909, 2668, 2669, 2661, 2662, 2663, 2664, 2666, 2667, 1636,
	1743, 152, 1203, 1203, 215, 3428, 2908, 607, 610, 1787,
	1090, 1634, 607, 610, 1612, 2675, 1595, 1381, 1744, 3476,
	1448, 1077, 2634, 1063, 1670, 183, 2374, 1653, 1595, 1737,
	1638, 1652, 1069, 1651, 1838, 1649, 1648, 1647, 1650, 3149,
	78, 2633, 2572, 2358, 1580, 3115, 1073, 1672, 1072, 215,
	1579, 2665, 1816, 215, 215, 1818, 1568, 804, 1823, 2856,
	1390, 2855, 2665, 1028, 1927, 185, 215, 1072, 3467, 1419,
	3667, 3654, 1391, 149, 81, 215, 82, 215, 1771, 215,
	1843, 1766, 1832, 215, 1761, 3131, 3119, 2928, 2669, 2661,
	2662, 2663, 2664, 2666, 2667, 183, 805, 215, 3406, 3751,
	1834, 2703, 1879, 3000, 2616, 3663, 2137, 697, 2302, 184,
	1601, 120, 868, 1565, 2676, 1576, 1827, 2848, 1802, 177,
	1873, 1872, 1250, 1010, 3676, 3673, 1070, 178, 183, 2888,
	3096, 3537, 3606, 3159, 1071, 185, 1370, 1203, 3307, 1203,
	215, 1203, 3526, 3110, 215, 2483, 2446, 3568, 152, 1203,
	659, 3711, 1203, 215, 3712, 215, 215, 1756, 121, 1839,
	1874, 2944, 3664, 1876, 2772, 1203, 1203, 1203, 185, 215,
	1887, 153, 1216, 1869, 1238, 1215, 215, 607, 610, 184,
	802, 836, 787, 800, 2311, 602, 215, 1248, 215, 177,
	215, 3777, 215, 1822, 215, 1986, 3458, 178, 3451, 3133,
	2015, 1984, 1944, 2761, 2329, 1795, 3130, 183, 215, 3129,
	183, 215, 184, 215, 1840, 1078, 2327, 3093, 694, 3092,
	2329, 1069, 177, 1417, 215, 798, 1069, 796, 2621, 660,
	178, 1416, 2327, 1948, 1895, 1791, 2013, 2661, 2662, 2663,
	2664, 2666, 2667, 793, 1857, 215, 1856, 185, 1078, 215,
	185, 152, 1933, 2338, 2620, 835, 1796, 1797, 1932, 1249,
	2142, 2443, 2619, 2618, 1997, 1855, 2576, 1077, 2390, 2382,
	2381, 2361, 1090, 2815, 1072, 1909, 2292, 2087, 1911, 1454,
	838, 1913, 838, 1889, 1792, 1916, 1893, 1368, 1938, 1897,
	1898, 184, 1212, 1293, 184, 1892, 1343, 1892, 1343, 2774,
	1077, 177, 2158, 2157, 177, 1304, 1798, 2045, 2929, 178,
	3567, 3385, 178, 2004, 2017, 1070, 1415, 1283, 1998, 1282,
	1070, 2360, 1281, 1071, 1280, 1489, 2143, 1654, 1071, 1942,
	152, 837, 1994, 152, 1244, 1027, 2102, 1027, 1258, 1923,
	2318, 1924, 2044, 1057, 2341, 2015, 2014, 1996, 1959, 1363,
	790, 2118, 2119, 1935, 1937, 2102, 3435, 1090, 607, 610,
	2663, 2664, 2666, 2667, 1431, 2283, 1427, 2118, 2134, 2661,
	2662, 2663, 2664, 2666, 2667, 1966, 2349, 2041, 2042, 2564,
	2300, 2013, 2110, 2549, 1459, 3633, 2348, 1894, 2108, 1952,
	2935, 1026, 3106, 1026, 2934, 2528, 1383, 2989, 2144, 2141,
	2290, 716, 215, 2146, 1999, 2012, 1624, 2188, 2378, 2192,
	2192, 2206, 2028, 2118, 1760, 1759, 2226, 2228, 1768, 1770,
	2137, 2232, 2667, 2084, 1090, 3319, 215, 2149, 2371, 2372,
	3740, 1960, 2371, 2372, 3660, 215, 2371, 2372, 3754, 2011,
	1953, 2003, 1956, 2016, 2001, 2002, 2009, 215, 1364, 820,
	1090, 2032, 820, 820, 2033, 2034, 1055, 662, 661, 1951,
	1804, 3711, 1447, 1072, 1405, 2281, 2587, 2133, 1072, 2534,
	834, 1265, 2556, 2557, 1628, 3700, 3731, 838, 3209, 3208,
	1808, 3586, 2886, 2885, 1246, 2563, 1789, 2340, 838, 2827,
	2585, 2014, 838, 657, 3303, 656, 1391, 1037, 2146, 2146,
	2821, 1815, 1414, 2771, 3766, 1391, 1631, 1263, 2256, 1800,
	2986, 3384, 1906, 1789, 3538, 1406, 2114, 1763, 2837, 1265,
	2282, 2359, 1379, 2248, 1805, 1626, 2155, 2098, 2773, 1035,
	215, 2156, 1993, 3118, 2159, 691, 2160, 2161, 1203, 1643,
	2885, 1629, 2131, 1798, 1571, 1825, 3699, 1995, 3732, 2328,
	2012, 2096, 2537, 998, 1030, 2082, 2247, 1369, 2085, 2758,
	3720, 1789, 3661, 2270, 1627, 1824, 3205, 1428, 1090, 1367,
	1030, 782, 2255, 215, 2260, 1746, 838, 2266, 2267, 2201,
	794, 215, 2987, 794, 2294, 2718, 2230, 143, 2217, 1303,
	2238, 2239, 215, 831, 1985, 1820, 2582, 2253, 2254, 2140,
	1983, 2249, 2025, 2339, 1809, 215, 1701, 2081, 1641, 1765,
	2583, 542, 1038, 1068, 2588, 3397, 1796, 1797, 1243, 215,
	1090, 3584, 3738, 3294, 1203, 794, 1203, 795, 1582, 3618,
	3107, 1958, 215, 215, 3734, 537, 2626, 2803, 2324, 3659,
	1764, 3301, 3335, 794, 1821, 1630, 1537, 782, 3436, 2330,
	3585, 2329, 3291, 3549, 2536, 215, 2252, 2092, 215, 2128,
	3755, 1429, 2305, 2343, 215, 1810, 1811, 2093, 783, 831,
	2309, 2094, 1182, 2533, 1806, 2099, 2265, 215, 837, 2578,
	3345, 2802, 717, 2146, 3199, 215, 1194, 215, 1782, 3698,
	215, 3081, 1783, 1050, 2391, 3292, 215, 3739, 2101, 215,
	2308, 215, 2364, 215, 3381, 215, 215, 1807, 215, 1203,
	1203, 1203, 3210, 1203, 2363, 2946, 2457, 2547, 215, 215,
	2312, 215, 215, 2109, 2379, 1203, 1574, 1575, 2420, 3741,
	3658, 1365, 791, 215, 1430, 2404, 1426, 1393, 2209, 1458,
	2717, 2083, 2470, 2471, 783, 2373, 2375, 2376, 2377, 215,
	215, 215, 2535, 2497, 215, 2333, 215, 2351, 2584, 215,
	3710, 215, 2499, 215, 3302, 2502, 2503, 2586, 2362, 2342,
	2345, 3767, 1194, 1194, 2508, 2509, 2510, 2395, 3733, 1907,
	2466, 2380, 1817, 1784, 215, 215, 215, 215, 215, 215,
	1782, 215, 3708, 1782, 1783, 1812, 1786, 1783, 1955, 2440,
	1216, 3336, 3482, 2405, 3352, 607, 610, 3380, 2874, 2438,
	2355, 1054, 1036, 784, 2414, 1950, 1864, 1621, 1194, 2095,
	1048, 1043, 215, 2424, 2805, 3144, 2516, 2518, 2097, 2519,
	215, 2501, 2472, 2482, 2504, 143, 2505, 529, 2459, 2387,
	3037, 2468, 3287, 1469, 2950, 1551, 3288, 2452, 1468, 1556,
	2807, 1788, 1194, 2463, 1194, 2464, 3251, 2465, 1628, 1813,
	2539, 2513, 2541, 2409, 2314, 2411, 2467, 3206, 1772, 1773,
	2031, 2520, 1343, 2522, 2473, 2524, 2316, 1378, 1380, 2484,
	2344, 2500, 1799, 2515, 1757, 1784, 3290, 2751, 1784, 784,
	1631, 2532, 2521, 1468, 2523, 1028, 2525, 1028, 1786, 3293,
	2806, 1786, 538, 3442, 1537, 3441, 1463, 2448, 2317, 2250,
	2448, 3760, 3423, 3382, 3525, 3095, 2875, 3306, 2866, 215,
	2785, 2542, 785, 2315, 3305, 1629, 1624, 2781, 2439, 2604,
	2605, 2427, 2579, 2418, 2608, 1888, 1467, 1877, 1875, 2396,
	1851, 2555, 2021, 3551, 1027, 2985, 3595, 1754, 2365, 2546,
	2545, 1789, 2947, 1788, 1990, 539, 1788, 1750, 3164, 3356,
	1027, 786, 2415, 2028, 2550, 3211, 1306, 2544, 3465, 2600,
	3463, 3424, 1469, 2795, 2792, 2791, 2565, 2398, 3294, 1468,
	3038, 1467, 2570, 2809, 2548, 1943, 3063, 1407, 3039, 2726,
	2715, 2714, 2609, 2289, 1628, 540, 2526, 541, 785, 2288,
	1026, 2244, 3289, 1394, 3252, 585, 1275, 3291, 2287, 2286,
	3284, 713, 2422, 835, 1752, 705, 1026, 1469, 3531, 1289,
	3431, 2402, 2577, 1276, 3282, 3327, 1631, 1090, 2918, 1630,
	3286, 2696, 1753, 1287, 1886, 3212, 3717, 786, 1701, 1701,
	838, 2710, 2711, 2022, 3461, 1626, 215, 2712, 3421, 715,
	3292, 215, 3603, 1789, 215, 3598, 1789, 215, 215, 1090,
	3592, 1629, 3759, 215, 3257, 2727, 3052, 1467, 2246, 3532,
	2153, 3304, 2615, 2245, 1445, 3719, 1090, 3678, 3546, 2732,
	3422, 3402, 3285, 215, 1627, 2777, 3250, 2688, 1780, 2366,
	2367, 1785, 3552, 2962, 2926, 2844, 2653, 2709, 215, 3432,
	2589, 1443, 2419, 2389, 590, 2357, 2307, 2725, 1423, 1421,
	1404, 1660, 2748, 1402, 2722, 1400, 1398, 215, 215, 215,
	1657, 3599, 1396, 215, 1388, 1386, 215, 2729, 1446, 2735,
	2741, 2746, 614, 215, 215, 3533, 215, 215, 215, 1358,
	2752, 2689, 2943, 1285, 2942, 1463, 2749, 2720, 2778, 2779,
	215, 215, 215, 2552, 2530, 2769, 2756, 2704, 2745, 215,
	1677, 2529, 2152, 1030, 2793, 1630, 596, 2797, 1982, 2775,
	3323, 2767, 215, 215, 2721, 2738, 1068, 2507, 1030, 2730,
	2719, 1090, 2691, 2692, 2693, 2733, 2734, 592, 2794, 1203,
	2010, 2799, 2800, 1785, 1992, 2759, 1785, 3287, 1090, 2782,
	3653, 3288, 1963, 215, 2728, 2731, 215, 215, 1030, 2736,
	215, 2737, 1739, 1203, 215, 711, 712, 1288, 1194, 703,
	704, 1585, 1362, 1203, 1203, 3314, 2818, 1262, 1444, 215,
	2843, 1286, 2786, 2209, 2209, 215, 3591, 2820, 2853, 1872,
	215, 3290, 215, 2865, 2753, 2754, 2755, 714, 2881, 215,
	2861, 1787, 2770, 3280, 3293, 1442, 2764, 2765, 3162, 2766,
	2776, 3154, 1422, 1420, 1403, 2835, 3113, 1401, 2749, 1399,
	1397, 2497, 3111, 1203, 1203, 3094, 1395, 1787, 1387, 1385,
	2497, 215, 215, 792, 2808, 215, 2873, 2864, 2814, 587,
	2857, 2828, 2890, 2841, 2842, 2823, 1666, 1284, 2444, 2433,
	2432, 2591, 2592, 2412, 1920, 2905, 2829, 1919, 591, 1827,
	2824, 1917, 2836, 2838, 2825, 2830, 1915, 1827, 2826, 1981,
	1912, 1910, 215, 1908, 1090, 215, 215, 1090, 215, 2845,
	2925, 1899, 595, 1848, 2882, 1846, 615, 616, 2363, 1835,
	1833, 1828, 1814, 2209, 2209, 2209, 1801, 1790, 589, 3696,
	2982, 2877, 1007, 3487, 1472, 2568, 1668, 3289, 3712, 3624,
	3376, 215, 3371, 1701, 3370, 2498, 1776, 1240, 2880, 2810,
	2811, 2887, 2329, 2812, 1030, 3489, 1008, 2347, 2329, 3172,
	2896, 1798, 1954, 838, 2327, 2903, 2904, 586, 143, 143,
	2346, 1440, 1441, 2889, 1188, 1194, 594, 1088, 1090, 2940,
	2920, 2831, 2832, 2941, 2916, 2833, 1980, 1979, 797, 799,
	801, 2682, 2683, 2684, 1961, 1090, 3308, 215, 2898, 2899,
	2900, 3540, 2901, 2902, 593, 2931, 1384, 2932, 3512, 2933,
	3258, 2569, 2368, 618, 617, 588, 1479, 1480, 2350, 1479,
	1480, 1476, 1473, 2965, 3713, 3706, 1747, 2386, 2354, 2384,
	2352, 2937, 942, 2974, 2975, 543, 2757, 3559, 2938, 2385,
	2353, 3590, 3560, 1482, 1009, 3557, 648, 2945, 2978, 3153,
	3143, 3078, 690, 2451, 2231, 1742, 1673, 3735, 3758, 2659,
	2660, 1548, 2948, 619, 620, 2994, 1479, 1480, 2321, 2322,
	3232, 211, 1481, 532, 533, 1481, 548, 532, 548, 558,
	563, 554, 3049, 579, 1028, 1372, 2111, 2970, 2319, 2320,
	2148, 1371, 211, 3083, 2321, 2319, 2154, 3228, 1425, 2981,
	1028, 1424, 3082, 1551, 2993, 1546, 2997, 215, 215, 3770,
	702, 3003, 3522, 3455, 211, 3004, 3001, 3415, 1090, 3413,
	3342, 2041, 3007, 3274, 3196, 3006, 3068, 3189, 2988, 2990,
	2991, 3014, 3178, 1027, 3157, 3138, 3137, 2041, 3017, 215,
	3136, 3016, 3109, 2897, 2871, 2869, 3041, 2512, 1027, 2511,
	2461, 2437, 2413, 2113, 2213, 2992, 1978, 1977, 1976, 1975,
	1902, 1901, 3042, 1900, 3002, 1880, 1859, 1858, 3045, 1854,
	1853, 1852, 1677, 1677, 1850, 1849, 1439, 1438, 1027, 1315,
	1314, 3054, 3056, 3057, 1313, 1312, 215, 1311, 3080, 1026,
	3050, 3059, 3060, 143, 1310, 1309, 1308, 1307, 1305, 1300,
	3120, 1299, 1298, 1297, 1026, 1296, 1257, 1256, 1255, 1254,
	532, 532, 3090, 1253, 1252, 1203, 1251, 1245, 211, 3070,
	1239, 3132, 1030, 1030, 1237, 1236, 1053, 1052, 215, 982,
	889, 1748, 803, 789, 1026, 215, 3071, 3434, 1433, 74,
	1247, 634, 68, 3108, 1090, 215, 643, 3134, 3605, 1203,
	3124, 2801, 2393, 1962, 3135, 1392, 3098, 1964, 2740, 2272,
	3583, 3236, 2625, 215, 3518, 3125, 3127, 3396, 2151, 1567,
	70, 877, 964, 3334, 3174, 3333, 3281, 215, 215, 1203,
	1203, 1203, 3097, 215, 215, 215, 3166, 2487, 215, 215,
	2209, 2209, 215, 215, 2457, 1203, 3086, 3151, 3331, 3330,
	215, 1090, 1872, 3150, 3169, 845, 1093, 1758, 883, 3165,
	1774, 3168, 1767, 2301, 2191, 1681, 886, 1678, 2363, 1680,
	3185, 888, 887, 1090, 2497, 1679, 1569, 3197, 3160, 885,
	1676, 2786, 3112, 2421, 3114, 2455, 1292, 768, 1762, 2107,
	2135, 3155, 3156, 2614, 1027, 1562, 858, 879, 2132, 1046,
	2723, 3170, 2884, 3167, 3152, 3077, 3226, 3362, 2958, 2959,
	2020, 3176, 3175, 651, 2656, 2138, 1039, 2214, 2207, 215,
	2203, 2445, 3181, 3180, 2209, 2209, 2209, 2209, 2209, 2209,
	2209, 2209, 2209, 2209, 2209, 2209, 2209, 2209, 2209, 2209,
	2209, 2209, 2209, 3195, 2209, 3188, 3222, 3186, 3187, 1449,
	1026, 1030, 1539, 3213, 3192, 3207, 3194, 3214, 2456, 1080,
	3191, 861, 2105, 1553, 2594, 2030, 2891, 2743, 2298, 3621,
	3202, 2035, 1863, 1006, 1005, 1004, 3612, 3609, 2851, 1751,
	2313, 1531, 215, 2858, 873, 1193, 1701, 2708, 1090, 2919,
	1090, 1259, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025,
	3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035,
	3036, 3539, 3040, 215, 215, 215, 1530, 2397, 3528, 1067,
	1066, 1065, 2784, 1701, 3249, 215, 3765, 3105, 182, 2562,
	1470, 1462, 215, 179, 215, 181, 180, 215, 215, 215,
	3338, 3122, 3299, 91, 3277, 3278, 35, 1677, 16, 1090,
	215, 215, 119, 118, 1090, 3263, 117, 116, 115, 114,
	3268, 3269, 215, 3309, 113, 108, 215, 3262, 112, 3260,
	3261, 111, 3266, 3198, 110, 215, 109, 3265, 107, 106,
	215, 105, 3259, 1090, 2745, 104, 1203, 3270, 3310, 103,
	3264, 3279, 102, 3328, 101, 100, 99, 98, 3300, 97,
	96, 95, 94, 93, 3298, 92, 575, 572, 49, 48,
	3311, 3312, 90, 1030, 215, 89, 15, 1041, 1872, 2213,
	33, 1030, 13, 3358, 53, 54, 1090, 12, 28, 3372,
	29, 80, 79, 27, 1030, 3321, 14, 26, 3325, 24,
	10, 3329, 8, 7, 30, 1051, 3357, 3361, 1645, 11,
	148, 3344, 579, 147, 3366, 73, 1090, 146, 72, 3359,
	3349, 3347, 1027, 1027, 145, 144, 71, 3354, 22, 211,
	3322, 211, 211, 1185, 9, 211, 140, 3474, 3148, 67,
	142, 141, 65, 139, 138, 64, 137, 3375, 211, 1218,
	136, 66, 135, 1090, 20, 3408, 1088, 5, 3383, 2213,
	2213, 215, 52, 215, 6, 1090, 215, 3378, 2927, 3393,
	84, 85, 31, 1242, 215, 62, 3388, 61, 1026, 1026,
	60, 19, 51, 18, 172, 171, 3394, 1261, 170, 169,
	164, 163, 211, 211, 168, 1185, 3404, 215, 3418, 166,
	165, 167, 162, 1028, 174, 211, 173, 176, 160, 156,
	3409, 3410, 155, 1302, 3412, 159, 215, 3417, 1028, 161,
	158, 157, 154, 3394, 215, 175, 56, 211, 211, 211,
	211, 1185, 134, 215, 133, 2044, 57, 3416, 1203, 1701,
	579, 3464, 211, 211, 215, 3473, 132, 3438, 1028, 3479,
	3337, 131, 3481, 3454, 3478, 2853, 130, 702, 3437, 129,
	3348, 3452, 128, 55, 17, 215, 215, 2, 1, 2213,
	2213, 2213, 3496, 3497, 3462, 3484, 0, 3472, 3456, 0,
	3365, 0, 0, 3508, 3509, 0, 0, 215, 3492, 0,
	3486, 0, 1701, 1701, 0, 3444, 3500, 3485, 3483, 0,
	3477, 1027, 215, 0, 3491, 3361, 0, 0, 1701, 1701,
	3490, 0, 0, 0, 0, 0, 0, 3488, 211, 0,
	3534, 0, 0, 0, 0, 0, 0, 3524, 0, 0,
	0, 0, 211, 1194, 0, 0, 3511, 0, 0, 1701,
	0, 3507, 0, 0, 3541, 0, 3516, 0, 3523, 0,
	215, 0, 0, 0, 3446, 3447, 0, 1026, 0, 829,
	3548, 782, 0, 215, 1203, 0, 0, 0, 0, 0,
	215, 0, 0, 0, 1203, 1203, 0, 0, 0, 0,
	1203, 0, 0, 831, 215, 3574, 215, 0, 0, 0,
	0, 0, 0, 3553, 0, 3558, 3562, 0, 0, 0,
	3566, 3565, 0, 3554, 3555, 0, 3572, 3573, 0, 3587,
	215, 0, 3577, 0, 1028, 0, 215, 3600, 3578, 215,
	3571, 1090, 830, 3602, 3570, 0, 0, 0, 0, 3477,
	215, 215, 0, 0, 3611, 3614, 0, 0, 0, 0,
	0, 3615, 0, 3625, 3619, 3630, 0, 0, 0, 0,
	0, 3628, 0, 0, 3607, 0, 3637, 3579, 783, 3580,
	0, 0, 3623, 1027, 0, 3638, 0, 0, 0, 0,
	215, 1027, 0, 2209, 0, 0, 0, 3632, 3634, 0,
	0, 3616, 0, 0, 1027, 3665, 0, 0, 0, 3601,
	0, 2044, 0, 0, 3652, 3649, 3650, 3651, 3670, 0,
	1677, 0, 1701, 0, 0, 0, 0, 0, 3683, 3668,
	3685, 0, 0, 0, 215, 2209, 0, 3687, 0, 1026,
	3693, 0, 0, 0, 3692, 0, 0, 1026, 3686, 0,
	3688, 3697, 0, 3684, 215, 3689, 0, 1677, 0, 532,
	1026, 3401, 0, 0, 0, 2457, 0, 3703, 3704, 0,
	0, 0, 3709, 0, 3690, 3691, 3707, 3715, 3694, 3705,
	211, 215, 211, 215, 3611, 0, 211, 3614, 3716, 3718,
	3726, 3714, 3724, 3722, 0, 3729, 1218, 0, 1185, 211,
	3730, 211, 3728, 3426, 3723, 0, 211, 1218, 548, 0,
	0, 211, 1218, 0, 3623, 0, 0, 579, 0, 0,
	0, 3742, 3744, 784, 0, 0, 0, 3748, 0, 3752,
	0, 0, 1701, 3753, 0, 3749, 0, 0, 0, 0,
	0, 3756, 0, 0, 0, 2209, 0, 0, 0, 3762,
	0, 3769, 3768, 0, 3721, 0, 2213, 2213, 0, 3771,
	0, 1623, 3763, 3764, 0, 0, 0, 0, 0, 1022,
	0, 0, 0, 0, 3775, 3776, 3774, 3778, 0, 3779,
	0, 0, 3781, 0, 3626, 0, 3784, 3627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3782, 0, 0,
	1336, 0, 1028, 1028, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 3515, 2659, 2660, 0, 2677, 2678, 2679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	828, 0, 785, 3218, 0, 0, 0, 0, 0, 0,
	2213, 2213, 2213, 2213, 2213, 2213, 2213, 2213, 2213, 2213,
	2213, 2213, 2213, 2213, 2213, 2213, 2213, 2213, 2213, 0,
	2213, 0, 0, 0, 2659, 2660, 0, 2677, 2678, 2679,
	0, 786, 0, 0, 0, 0, 211, 0, 0, 2674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1479, 1480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1677, 0, 844, 0, 0, 0, 0,
	1510, 211, 0, 1479, 1480, 211, 211, 1482, 0, 2674,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 1510, 0, 0, 0, 211, 0, 211,
	1482, 211, 0, 0, 2665, 532, 1481, 0, 0, 0,
	0, 0, 0, 0, 0, 1501, 1677, 1677, 0, 1903,
	1479, 1480, 0, 1512, 1513, 1514, 1522, 1523, 1524, 1481,
	0, 1028, 1677, 1677, 0, 0, 0, 0, 1501, 1515,
	1510, 0, 0, 0, 0, 1498, 0, 1482, 0, 0,
	0, 0, 1528, 0, 2665, 2680, 0, 0, 0, 0,
	0, 0, 579, 1677, 0, 0, 702, 0, 0, 0,
	0, 0, 1701, 0, 0, 211, 1481, 1185, 211, 0,
	1504, 1505, 1506, 1507, 0, 1501, 0, 0, 0, 2675,
	1487, 579, 1498, 0, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 1504, 1505, 1506, 1507, 211, 211, 0,
	211, 0, 211, 1487, 211, 0, 211, 0, 0, 0,
	0, 1509, 1511, 0, 0, 0, 1701, 0, 0, 0,
	1987, 0, 0, 1988, 0, 1989, 0, 0, 0, 2675,
	0, 0, 0, 0, 1509, 1511, 211, 0, 0, 0,
	1504, 1505, 1506, 1507, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 0, 0, 0, 0, 563, 0, 0,
	0, 579, 0, 1496, 1497, 1502, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 0, 1529, 2676, 0,
	0, 1509, 1511, 1028, 0, 0, 0, 0, 1502, 0,
	0, 1028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1525, 0, 1526, 1028, 0, 0, 0, 0, 0,
	1496, 1497, 1701, 0, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 0, 2676, 0,
	0, 0, 0, 0, 0, 1502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 0, 0, 0, 1508,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 0,
	0, 2671, 2672, 2673, 0, 0, 0, 0, 2670, 2668,
	2669, 2661, 2662, 2663, 2664, 2666, 2667, 0, 0, 0,
	0, 0, 0, 0, 532, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 0, 0, 211,
	0, 0, 0, 0, 1503, 0, 0, 0, 532, 0,
	0, 2671, 2672, 2673, 0, 211, 0, 532, 2670, 2668,
	2669, 2661, 2662, 2663, 2664, 2666, 2667, 0, 0, 211,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 844, 0, 0, 0,
	844, 0, 0, 0, 1492, 1490, 1491, 1483, 1484, 1485,
	1486, 1488, 1489, 0, 0, 0, 1085, 0, 0, 0,
	0, 0, 1192, 0, 1499, 1495, 0, 1492, 1490, 1491,
	1483, 1484, 1485, 1486, 1488, 1489, 0, 1220, 0, 1224,
	0, 1230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1195, 1206, 0, 0, 1210, 0,
	0, 0, 548, 0, 1518, 0, 0, 1493, 1494, 1500,
	1521, 1499, 1495, 0, 1492, 1490, 1491, 1483, 1484, 1485,
	1486, 1488, 1489, 0, 0, 0, 0, 3245, 0, 2213,
	0, 3244, 1294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2337, 0, 0, 1266, 1269,
	0, 0, 0, 211, 1319, 1319, 1319, 1192, 0, 0,
	0, 0, 0, 0, 211, 1354, 0, 0, 0, 1352,
	1353, 2213, 0, 1359, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 0, 1351,
	0, 0, 0, 0, 211, 2406, 0, 0, 0, 1210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1218, 0, 1411,
	211, 0, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 0, 1885,
	0, 0, 1373, 0, 0, 0, 0, 2337, 0, 532,
	0, 0, 2460, 0, 0, 0, 0, 0, 211, 0,
	0, 211, 0, 211, 0, 211, 1677, 211, 211, 0,
	1185, 2213, 0, 0, 0, 0, 0, 0, 0, 0,
	2480, 702, 0, 2337, 2337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 0, 0, 1532,
	1533, 1534, 1535, 1536, 0, 0, 0, 0, 0, 0,
	0, 211, 1185, 211, 0, 0, 1218, 0, 1218, 0,
	1677, 1185, 0, 1185, 0, 1185, 0, 0, 1550, 0,
	0, 0, 0, 0, 1563, 0, 0, 0, 127, 2213,
	2213, 0, 0, 0, 58, 0, 211, 211, 211, 211,
	1185, 211, 0, 211, 0, 0, 0, 0, 59, 122,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 63, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 0, 0, 39, 124,
	0, 0, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 38, 0, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 41, 0, 0, 0, 0,
	42, 0, 0, 0, 0, 75, 0, 0, 125, 0,
	0, 0, 0, 0, 40, 86, 0, 0, 0, 0,
	76, 83, 0, 0, 0, 0, 1617, 1617, 1617, 0,
	0, 0, 0, 0, 0, 2659, 2660, 0, 2677, 2678,
	2679, 0, 0, 0, 0, 0, 0, 43, 0, 0,
	0, 1218, 0, 1655, 2967, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 1664, 0, 1192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 844, 0, 0,
	2674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2659, 2660, 0, 2677, 2678, 2679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2966, 0, 0, 0, 0, 2659, 2660, 0, 2677,
	2678, 2679, 0, 0, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 2665, 78, 0, 532, 0,
	0, 0, 0, 532, 44, 0, 532, 2674, 0, 532,
	532, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 0, 0, 0, 47, 149,
	81, 2674, 82, 0, 45, 1218, 0, 0, 126, 0,
	0, 0, 0, 0, 46, 0, 2680, 0, 0, 0,
	1218, 183, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 50, 0, 0, 0, 120, 0, 2337,
	2337, 211, 0, 0, 0, 2337, 0, 123, 2788, 0,
	2675, 0, 2665, 0, 0, 2337, 2788, 0, 2337, 2788,
	2788, 185, 0, 1210, 0, 0, 1479, 1480, 0, 0,
	0, 0, 211, 211, 211, 0, 2665, 0, 1861, 0,
	0, 0, 1868, 0, 121, 0, 1510, 0, 0, 0,
	0, 0, 0, 1482, 211, 1185, 0, 153, 0, 0,
	0, 0, 0, 2680, 1294, 184, 1891, 0, 1891, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 1481, 178, 0, 2847, 0, 2680, 2849, 2337,
	0, 1501, 211, 0, 0, 0, 211, 2675, 1498, 0,
	0, 0, 0, 0, 152, 0, 0, 3, 0, 2676,
	0, 211, 0, 0, 0, 0, 0, 1185, 0, 211,
	0, 2675, 2337, 0, 532, 0, 0, 0, 0, 0,
	0, 2337, 0, 0, 0, 0, 0, 0, 3217, 856,
	0, 0, 1868, 0, 0, 1940, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 1505, 1506, 1507,
	0, 1925, 0, 211, 1885, 1957, 1487, 1885, 0, 1210,
	0, 0, 1936, 0, 0, 1967, 0, 1969, 0, 1971,
	0, 1973, 0, 1974, 0, 1945, 1946, 1947, 0, 0,
	0, 0, 0, 0, 0, 0, 2676, 1509, 1511, 0,
	0, 0, 0, 0, 2936, 0, 0, 1185, 211, 0,
	211, 0, 0, 1991, 0, 0, 0, 0, 0, 0,
	2676, 0, 2671, 2672, 2673, 0, 1496, 1497, 0, 2670,
	2668, 2669, 2661, 2662, 2663, 2664, 2666, 2667, 0, 2019,
	0, 2023, 0, 211, 0, 0, 0, 0, 2037, 0,
	0, 1502, 0, 0, 0, 2046, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070,
	2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080,
	0, 2086, 0, 2088, 2089, 2090, 2091, 0, 0, 2999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2671,
	2672, 2673, 0, 2115, 0, 0, 2670, 2668, 2669, 2661,
	2662, 2663, 2664, 2666, 2667, 0, 1550, 0, 0, 0,
	2130, 0, 1508, 2671, 2672, 2673, 0, 0, 0, 0,
	2670, 2668, 2669, 2661, 2662, 2663, 2664, 2666, 2667, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2168, 2171, 2174, 2177, 0, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 0, 0, 0, 0, 2205, 0, 2216, 2218,
	2223, 0, 0, 0, 0, 0, 0, 211, 211, 0,
	0, 2659, 2660, 0, 2677, 2678, 2679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 532,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2279, 0, 0, 0,
	0, 1218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2674, 0, 0, 0,
	0, 0, 0, 0, 1479, 1480, 0, 1499, 1495, 0,
	1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488, 1489, 0,
	0, 0, 0, 0, 1510, 0, 0, 0, 579, 0,
	0, 1482, 0, 0, 0, 0, 0, 0, 1479, 1480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	1481, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	211, 2665, 1479, 1480, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 0,
	0, 0, 1510, 0, 1481, 0, 0, 0, 2681, 1482,
	856, 0, 0, 1501, 856, 2337, 211, 0, 0, 0,
	1498, 0, 0, 1174, 0, 0, 0, 1174, 0, 2480,
	2480, 0, 2680, 0, 0, 702, 702, 2337, 1481, 0,
	1885, 1885, 0, 0, 702, 2337, 0, 0, 0, 0,
	0, 0, 211, 0, 1487, 0, 0, 0, 1192, 0,
	2961, 0, 0, 0, 0, 0, 2675, 2408, 0, 2410,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 1505,
	1506, 1507, 0, 0, 0, 1509, 1511, 0, 1487, 0,
	0, 0, 0, 0, 2399, 0, 2400, 1868, 0, 0,
	0, 0, 0, 2431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	1511, 3237, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2462, 0, 0, 1319, 1502,
	1319, 0, 1319, 0, 1192, 1192, 0, 0, 1496, 1497,
	0, 0, 0, 1509, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2676, 0, 0, 0, 0,
	0, 0, 2506, 1502, 0, 0, 0, 0, 211, 2469,
	0, 0, 0, 0, 1218, 0, 211, 0, 2514, 0,
	2517, 0, 0, 0, 0, 1210, 0, 0, 0, 211,
	0, 0, 2527, 0, 0, 0, 58, 1502, 0, 0,
	0, 0, 0, 0, 0, 2337, 2337, 2337, 0, 0,
	59, 0, 0, 2538, 1192, 2540, 1192, 1218, 2543, 0,
	0, 0, 0, 0, 2337, 63, 2788, 0, 1503, 1218,
	1218, 211, 0, 0, 0, 0, 0, 0, 1532, 1533,
	0, 0, 211, 211, 1508, 0, 0, 943, 0, 0,
	0, 1319, 0, 0, 2337, 0, 69, 0, 3340, 2571,
	0, 0, 1503, 0, 1479, 1480, 0, 211, 2671, 2672,
	2673, 0, 3351, 0, 0, 2670, 2668, 2669, 2661, 2662,
	2663, 2664, 2666, 2667, 1510, 0, 212, 75, 0, 0,
	0, 1482, 0, 2574, 2575, 0, 1503, 86, 0, 2581,
	0, 0, 76, 83, 0, 0, 1218, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2595, 2596,
	1481, 0, 0, 0, 2130, 0, 0, 0, 0, 212,
	0, 0, 0, 2603, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 2617,
	1491, 1483, 1484, 1485, 1486, 1488, 1489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2638, 0, 0, 0, 0, 1499,
	1495, 0, 1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488,
	1489, 0, 0, 2337, 0, 2788, 0, 0, 3420, 0,
	0, 0, 0, 0, 1487, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 1490, 1491, 1483,
	1484, 1485, 1486, 1488, 1489, 0, 0, 0, 0, 579,
	0, 2223, 2223, 2223, 0, 1509, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1617, 0, 3420, 0,
	0, 0, 0, 0, 2713, 0, 2337, 0, 78, 0,
	1174, 0, 0, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1502,
	0, 149, 81, 0, 82, 0, 0, 211, 211, 0,
	0, 856, 0, 0, 0, 0, 0, 1174, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 2999,
	0, 844, 0, 0, 0, 697, 0, 1479, 1480, 120,
	0, 0, 0, 0, 3420, 844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 2780, 0,
	0, 0, 0, 185, 1482, 0, 0, 0, 0, 0,
	0, 2804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 0, 2817,
	2819, 2431, 3340, 1481, 0, 0, 0, 0, 1503, 153,
	0, 0, 0, 0, 0, 211, 0, 184, 0, 0,
	0, 0, 2788, 0, 0, 1479, 1480, 177, 1512, 1513,
	1514, 1522, 1523, 1524, 0, 178, 1218, 0, 1218, 0,
	0, 0, 0, 0, 1515, 1510, 0, 0, 0, 0,
	0, 0, 1482, 0, 0, 0, 1348, 1528, 0, 2859,
	0, 0, 3596, 2863, 0, 1174, 0, 0, 1218, 2839,
	0, 211, 0, 0, 0, 0, 0, 0, 2872, 0,
	0, 1481, 211, 2337, 0, 0, 0, 1487, 0, 0,
	1501, 0, 0, 2862, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 2867, 2868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1509, 1511,
	0, 0, 2999, 0, 0, 0, 0, 0, 0, 0,
	2915, 1483, 1484, 1485, 1486, 1488, 1489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2911, 2912, 1504, 1505, 1506, 1507, 0,
	0, 0, 0, 0, 0, 1487, 2337, 0, 0, 0,
	0, 0, 1502, 0, 0, 2939, 0, 1192, 0, 0,
	0, 0, 0, 0, 0, 0, 3420, 0, 0, 1519,
	0, 0, 1529, 0, 0, 0, 1509, 1511, 2037, 0,
	0, 0, 0, 0, 2953, 2954, 0, 0, 2957, 0,
	2951, 0, 2960, 1218, 0, 2337, 1525, 0, 1526, 0,
	0, 2964, 0, 0, 0, 1496, 1497, 0, 0, 0,
	2971, 0, 0, 2713, 0, 0, 0, 0, 58, 0,
	0, 1517, 0, 0, 0, 0, 0, 0, 2983, 0,
	1502, 0, 59, 0, 212, 1095, 212, 212, 0, 1095,
	212, 1095, 1095, 0, 0, 1095, 0, 63, 0, 0,
	1527, 1503, 0, 212, 0, 0, 0, 3008, 3009, 0,
	3010, 3011, 3012, 0, 0, 3013, 0, 1516, 0, 3015,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1095, 1095, 212, 212, 0,
	3043, 3044, 0, 0, 0, 0, 0, 1174, 0, 75,
	212, 1508, 0, 0, 0, 3053, 0, 0, 0, 86,
	0, 0, 0, 0, 76, 83, 0, 0, 0, 1503,
	3062, 0, 212, 212, 212, 212, 0, 1095, 1095, 0,
	0, 0, 1095, 0, 0, 0, 1095, 212, 212, 0,
	0, 0, 0, 0, 0, 1520, 1095, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 1479,
	1480, 0, 1490, 1491, 1483, 1484, 1485, 1486, 1488, 1489,
	0, 0, 0, 0, 0, 0, 3091, 0, 0, 1510,
	0, 0, 1174, 0, 0, 0, 1482, 0, 0, 1095,
	0, 3099, 3102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 1481, 3121, 0, 0, 0,
	0, 0, 0, 0, 1501, 0, 0, 212, 0, 1518,
	0, 1498, 1493, 1494, 1500, 1521, 1499, 1495, 0, 1492,
	1490, 1491, 1483, 1484, 1485, 1486, 1488, 1489, 0, 1174,
	0, 0, 2647, 0, 0, 0, 2648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3147, 0, 0,
	78, 2956, 0, 0, 0, 1174, 0, 0, 0, 0,
	0, 0, 0, 0, 3161, 0, 0, 1617, 0, 1504,
	1505, 1506, 1507, 0, 0, 0, 3177, 0, 0, 1487,
	0, 0, 0, 149, 81, 0, 82, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	1509, 1511, 0, 0, 0, 0, 0, 697, 0, 3200,
	0, 120, 0, 0, 0, 0, 0, 0, 0, 3182,
	3183, 3184, 0, 0, 0, 0, 0, 3215, 3216, 1496,
	1497, 0, 0, 3220, 3221, 185, 0, 0, 3224, 3225,
	0, 0, 0, 0, 0, 3229, 0, 909, 0, 0,
	0, 0, 0, 0, 1502, 0, 3233, 0, 121, 0,
	0, 0, 0, 1174, 0, 0, 0, 0, 0, 0,
	0, 153, 3238, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 1174, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	0, 212, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 1095, 0, 212, 212, 212, 0, 0, 0,
	0, 212, 0, 1503, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1095, 0,
	0, 0, 0, 0, 0, 3102, 0, 0, 0, 878,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 1095,
	0, 0, 0, 0, 0, 0, 0, 0, 3313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2431,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1029, 2431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 0, 0, 0,
	0, 0, 3102, 0, 0, 0, 0, 0, 0, 0,
	1499, 1495, 0, 1492, 1490, 1491, 1483, 1484, 1485, 1486,
	1488, 1489, 0, 0, 0, 0, 0, 0, 0, 3389,
	3390, 3391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3399, 3400, 0, 0, 1095,
	1095, 212, 0, 821, 0, 0, 0, 1095, 0, 3407,
	0, 0, 839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1016, 212, 0, 0, 3102,
	212, 212, 0, 3427, 0, 0, 0, 3443, 0, 0,
	0, 0, 0, 0, 0, 0, 3450, 0, 0, 844,
	0, 0, 212, 0, 212, 3457, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1479, 1480, 3102, 0, 0, 3102, 0, 0, 0, 0,
	0, 0, 3480, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 3102, 3102, 1482, 0, 0,
	0, 0, 0, 0, 1095, 0, 1095, 0, 1095, 0,
	0, 0, 0, 0, 3506, 1192, 1095, 0, 0, 1095,
	212, 0, 0, 212, 0, 0, 1481, 0, 0, 0,
	0, 0, 1095, 1095, 1095, 1501, 0, 0, 0, 0,
	0, 0, 1498, 212, 0, 0, 0, 3527, 0, 0,
	3530, 0, 212, 212, 0, 212, 0, 212, 0, 212,
	0, 212, 0, 0, 0, 0, 0, 3102, 0, 0,
	0, 0, 1174, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 2955, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 1505, 1506, 1507, 1174, 0, 0, 0, 0, 0,
	1487, 0, 3564, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 601, 1095,
	0, 1509, 1511, 0, 0, 856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 856,
	601, 0, 0, 0, 0, 0, 0, 844, 3604, 0,
	1496, 1497, 0, 0, 0, 0, 0, 0, 0, 3620,
	0, 0, 0, 0, 210, 0, 210, 210, 0, 0,
	210, 0, 0, 0, 0, 1502, 0, 0, 0, 0,
	0, 0, 0, 608, 0, 0, 3648, 3648, 3648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1095, 0, 1174, 0, 3669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 0, 0, 210, 210, 0,
	0, 3102, 0, 3102, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 3648, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 210, 210, 210, 210, 0, 0, 0, 0,
	0, 1095, 0, 0, 1503, 0, 0, 210, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 1095, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 0, 88, 0,
	88, 0, 0, 0, 0, 0, 0, 3648, 3757, 0,
	0, 0, 0, 0, 0, 3761, 0, 0, 0, 1174,
	0, 0, 1174, 210, 1479, 1480, 0, 0, 0, 0,
	1522, 1523, 1524, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 0, 0, 0,
	0, 1482, 0, 0, 0, 1095, 1528, 0, 0, 0,
	0, 1499, 1495, 0, 1492, 1490, 1491, 1483, 1484, 1485,
	1486, 1488, 1489, 0, 839, 88, 88, 0, 0, 0,
	1481, 0, 0, 0, 88, 1095, 0, 0, 0, 1501,
	0, 0, 88, 1174, 0, 0, 1498, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	1174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 1095, 0, 0,
	0, 1095, 0, 1095, 0, 0, 88, 0, 0, 212,
	0, 0, 0, 0, 1504, 1505, 1506, 1507, 0, 0,
	0, 0, 0, 0, 1487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 0, 0, 0,
	0, 212, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 1529, 0, 0, 0, 1509, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 0, 212, 0, 212, 0,
	212, 821, 212, 212, 1496, 1497, 1095, 1095, 1095, 0,
	1095, 0, 0, 1174, 0, 0, 0, 0, 0, 1542,
	1517, 0, 1095, 0, 0, 0, 0, 0, 0, 1502,
	212, 0, 0, 0, 0, 0, 1549, 0, 0, 0,
	1555, 0, 0, 0, 0, 1639, 212, 1029, 212, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 1639, 210, 0, 0, 0,
	0, 608, 0, 0, 0, 0, 608, 0, 0, 0,
	0, 212, 212, 212, 212, 0, 212, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 1091, 0, 0, 0,
	1091, 0, 1204, 1204, 0, 0, 1204, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 0, 0, 0, 0, 0, 0, 212, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 1204, 1204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1479, 1480, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 1640,
	0, 88, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 1482, 0, 1174, 0, 1204, 1204,
	0, 0, 0, 1204, 0, 0, 0, 1204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1204, 1174, 0,
	0, 0, 0, 1481, 0, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 1518, 1498,
	0, 608, 0, 0, 1521, 1499, 1495, 0, 1492, 1490,
	1491, 1483, 1484, 1485, 1486, 1488, 1489, 0, 0, 0,
	1204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2580,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	210, 210, 0, 0, 0, 0, 0, 1504, 1505, 1506,
	1507, 0, 0, 0, 0, 0, 0, 1487, 0, 0,
	0, 0, 210, 0, 210, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 1095, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 1174, 0, 0, 1509, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1095, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1496, 1497, 0,
	0, 0, 0, 1095, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 1502, 210, 1174, 0, 0, 0, 683, 1174,
	0, 0, 0, 0, 0, 0, 0, 913, 0, 0,
	0, 0, 0, 210, 0, 0, 212, 0, 0, 0,
	0, 665, 608, 210, 0, 210, 0, 210, 1174, 210,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 212, 212,
	0, 0, 0, 0, 0, 666, 212, 0, 0, 0,
	0, 210, 0, 0, 667, 0, 0, 1479, 1480, 212,
	0, 1174, 0, 1508, 0, 0, 0, 0, 1095, 0,
	668, 0, 0, 0, 0, 0, 1095, 1510, 0, 0,
	0, 1503, 0, 0, 1482, 1095, 0, 688, 0, 0,
	0, 1174, 0, 0, 0, 0, 839, 212, 839, 0,
	1095, 212, 669, 0, 0, 0, 0, 0, 0, 0,
	1095, 1095, 0, 1481, 0, 0, 212, 0, 0, 0,
	0, 670, 1501, 0, 0, 0, 0, 0, 1174, 1498,
	0, 0, 0, 1091, 0, 0, 0, 0, 0, 0,
	1174, 671, 601, 0, 672, 0, 0, 601, 0, 596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1204,
	1095, 1095, 0, 0, 0, 0, 0, 0, 212, 2573,
	687, 0, 0, 856, 0, 0, 0, 0, 0, 0,
	1091, 0, 0, 0, 0, 0, 0, 1504, 1505, 1506,
	1507, 0, 0, 0, 0, 0, 0, 1487, 1499, 1495,
	0, 1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488, 1489,
	0, 1095, 0, 212, 1095, 212, 0, 0, 0, 0,
	0, 821, 0, 0, 821, 821, 0, 0, 1509, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1029, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 1496, 1497, 0,
	1029, 0, 0, 0, 0, 0, 0, 0, 0, 674,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 2104,
	0, 0, 1502, 624, 0, 1095, 691, 0, 675, 0,
	0, 0, 0, 839, 0, 0, 0, 0, 0, 0,
	0, 0, 1095, 0, 1549, 0, 625, 0, 1549, 0,
	1204, 1204, 0, 0, 0, 595, 0, 0, 1091, 0,
	0, 0, 676, 0, 0, 677, 0, 0, 0, 0,
	0, 685, 0, 0, 0, 0, 0, 0, 678, 0,
	626, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 627, 1508, 0, 628, 0, 0, 0, 679,
	686, 0, 0, 0, 0, 0, 1016, 680, 0, 0,
	0, 1503, 652, 0, 0, 0, 0, 0, 629, 0,
	682, 0, 1640, 0, 0, 681, 1174, 650, 0, 0,
	0, 856, 0, 0, 0, 0, 0, 689, 210, 0,
	0, 0, 0, 0, 0, 0, 630, 0, 684, 210,
	0, 0, 0, 88, 0, 1095, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 631, 0, 0, 632,
	654, 0, 0, 0, 596, 1204, 210, 1204, 0, 1204,
	0, 0, 0, 0, 0, 0, 0, 1204, 0, 608,
	1204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1204, 1204, 1204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 210, 0, 601, 0, 0, 0, 0, 1499, 1495,
	0, 1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488, 1489,
	0, 653, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 1095, 210, 0, 0, 210, 0, 210, 0,
	210, 0, 210, 210, 0, 212, 0, 0, 0, 0,
	0, 0, 212, 88, 0, 0, 0, 0, 0, 0,
	0, 1095, 212, 0, 633, 0, 1095, 0, 0, 0,
	210, 0, 0, 0, 636, 0, 0, 0, 0, 0,
	0, 0, 88, 0, 0, 0, 210, 0, 210, 0,
	1091, 0, 0, 637, 0, 1092, 1095, 1095, 1095, 1092,
	0, 1205, 1205, 0, 0, 1205, 88, 0, 88, 0,
	0, 0, 1095, 0, 0, 0, 0, 212, 1095, 0,
	595, 210, 210, 210, 210, 0, 210, 0, 210, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1095, 0, 0, 639, 0, 0, 0, 0, 0, 0,
	88, 0, 0, 88, 0, 1205, 1205, 0, 0, 210,
	0, 0, 644, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 640, 1091, 0, 657, 0, 656,
	0, 88, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 642, 0, 1205, 1205, 0,
	649, 0, 1205, 0, 0, 658, 1205, 655, 0, 0,
	0, 0, 647, 0, 0, 0, 1205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	0, 0, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1095, 0, 1095, 0, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1095, 212, 212, 1479,
	1480, 1095, 1512, 1513, 1514, 1522, 1523, 1524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 212, 0, 0, 2104, 1482, 0, 0, 0,
	1095, 1528, 0, 1095, 0, 0, 1204, 0, 0, 0,
	0, 0, 0, 1029, 0, 0, 1549, 0, 0, 0,
	0, 0, 0, 0, 0, 1481, 0, 0, 1029, 0,
	0, 0, 0, 0, 1501, 0, 1091, 0, 0, 0,
	0, 1498, 0, 1095, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 0,
	0, 0, 1204, 0, 1204, 0, 0, 0, 0, 1504,
	1505, 1506, 1507, 0, 0, 0, 210, 0, 0, 1487,
	1095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1095, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 1519, 0, 0, 1529, 210, 210, 210,
	1509, 1511, 0, 0, 0, 1016, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	1016, 0, 0, 0, 0, 0, 0, 0, 0, 1496,
	1497, 0, 0, 0, 0, 0, 0, 1204, 1204, 1204,
	0, 1204, 0, 0, 0, 1517, 0, 0, 0, 0,
	212, 0, 1092, 1204, 1502, 1095, 0, 210, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 1205, 0,
	0, 0, 212, 212, 1029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 88, 0, 0, 88, 0, 210, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1503, 88, 88, 0, 0, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 210, 0, 0, 0, 1520,
	212, 1095, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1095, 1095, 0, 0, 0, 0, 1095, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 1016, 0, 0, 839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1205,
	1205, 0, 0, 0, 0, 0, 212, 1092, 1095, 0,
	0, 0, 0, 0, 88, 88, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 0, 1493, 1494, 1500, 1521,
	1499, 1495, 0, 1492, 1490, 1491, 1483, 1484, 1485, 1486,
	1488, 1489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1479, 1480, 0, 1512, 1513, 1514, 1522, 1523, 1524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	1510, 0, 0, 0, 0, 0, 0, 1482, 0, 0,
	0, 0, 1528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1029, 1029, 0, 1091, 1481, 0, 0, 0,
	0, 0, 0, 0, 1205, 1501, 1205, 0, 1205, 0,
	0, 0, 1498, 0, 0, 0, 1205, 0, 0, 1205,
	0, 0, 0, 0, 0, 0, 0, 1091, 0, 0,
	0, 0, 1205, 1205, 1205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 1505, 1506, 1507, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 0, 1529, 0, 88,
	0, 1509, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1016, 1016, 0, 0, 0, 0,
	0, 1525, 0, 1526, 0, 210, 0, 0, 0, 1092,
	1496, 1497, 210, 0, 0, 0, 0, 0, 0, 1091,
	0, 0, 210, 0, 0, 0, 1517, 1204, 0, 0,
	0, 0, 0, 0, 0, 1502, 1091, 0, 0, 0,
	0, 1029, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1204, 0, 0, 0, 1527, 0, 0, 0, 0,
	0, 1204, 1204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1204, 1204, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 1092, 1091, 0, 0, 1091, 0, 0, 0, 0,
	0, 0, 0, 1016, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1029, 0, 0, 88, 0, 0, 0,
	0, 1029, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1091, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 1493, 1494, 1500,
	1521, 1499, 1495, 1091, 1492, 1490, 1491, 1483, 1484, 1485,
	1486, 1488, 1489, 0, 0, 0, 210, 2126, 0, 0,
	0, 2127, 0, 0, 0, 1205, 0, 210, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 1092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1016, 0, 0, 0, 0,
	0, 0, 0, 1016, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1092, 0, 0,
	0, 1205, 0, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1479, 1480, 0, 1512, 1513, 1514, 1522, 1523, 1524,
	0, 0, 0, 88, 0, 0, 0, 0, 0, 0,
	1515, 1510, 0, 88, 0, 0, 0, 0, 1482, 0,
	0, 210, 0, 1528, 0, 0, 1205, 1205, 1205, 0,
	1205, 0, 0, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 1205, 0, 0, 0, 0, 1481, 0, 0,
	0, 0, 0, 1204, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 1091, 0, 0, 0, 0, 1204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 210, 0, 0, 0, 1204, 1204, 1204,
	0, 1504, 1505, 1506, 1507, 0, 0, 0, 0, 0,
	0, 1487, 0, 1204, 0, 0, 0, 0, 0, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 1529, 0,
	0, 1091, 1509, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 1526, 0, 0, 0, 0, 0,
	0, 1496, 1497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1517, 0, 0,
	210, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2104, 0, 0,
	0, 0, 0, 0, 0, 0, 1527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1091, 210, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1091, 0, 0,
	0, 1520, 1091, 0, 1092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1091, 0, 0, 1204, 0, 1092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 88, 0, 0,
	88, 0, 0, 0, 0, 1518, 0, 0, 1493, 1494,
	1500, 1521, 1499, 1495, 0, 1492, 1490, 1491, 1483, 1484,
	1485, 1486, 1488, 1489, 1091, 0, 0, 0, 0, 0,
	0, 0, 3243, 0, 0, 1479, 1480, 0, 1512, 1513,
	1514, 1522, 1523, 1524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 1510, 0, 0, 0, 0,
	0, 1091, 1482, 0, 0, 0, 0, 1528, 0, 0,
	0, 0, 0, 1091, 0, 0, 0, 0, 1092, 0,
	0, 0, 0, 0, 0, 0, 1205, 0, 0, 0,
	0, 1481, 0, 0, 0, 1092, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	1205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1205, 1205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 1505, 1506, 1507, 0,
	1205, 1205, 0, 0, 0, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1519,
	0, 0, 1529, 0, 0, 0, 1509, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1092, 0, 0, 1092, 0, 1525, 0, 1526, 0,
	0, 0, 0, 0, 0, 1496, 1497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 0, 0, 0, 0, 0, 0, 0, 1698,
	1502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1204, 0, 0, 0, 0, 0, 0, 0,
	1527, 0, 1204, 1204, 0, 0, 0, 0, 1204, 0,
	0, 0, 0, 0, 0, 1092, 0, 1516, 0, 1715,
	1692, 1699, 0, 1682, 1725, 1724, 0, 0, 1684, 1683,
	0, 0, 1092, 0, 0, 0, 1735, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1091,
	1479, 1480, 0, 1512, 1513, 1514, 1522, 1523, 1524, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 1515,
	1510, 0, 0, 0, 0, 0, 0, 1482, 1726, 1503,
	1722, 1721, 1528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1520, 1481, 0, 0, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 1498, 1719, 1717, 1718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1092, 1694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 1697, 1710, 1712,
	1713, 1714, 1709, 0, 1702, 0, 0, 0, 0, 0,
	1504, 1505, 1506, 1507, 1731, 1732, 0, 0, 0, 1518,
	1487, 0, 1493, 1494, 1500, 1521, 1499, 1495, 0, 1492,
	1490, 1491, 1483, 1484, 1485, 1486, 1488, 1489, 0, 0,
	0, 0, 0, 0, 1519, 0, 2969, 1529, 0, 0,
	1686, 1509, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1723, 0, 0, 0,
	1695, 1525, 1696, 1526, 0, 0, 0, 0, 0, 0,
	1496, 1497, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 1502, 0, 0, 0, 0,
	0, 1092, 0, 1716, 0, 0, 1205, 1705, 1703, 1704,
	1707, 1706, 0, 0, 0, 1527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 1205, 1205, 1205, 0,
	0, 0, 1687, 1688, 1690, 1691, 0, 0, 0, 0,
	0, 0, 1205, 0, 0, 0, 0, 0, 1092, 1711,
	1689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1734, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	1092, 0, 0, 0, 0, 0, 1685, 0, 0, 1727,
	1728, 1729, 1730, 0, 1503, 1479, 1480, 0, 1512, 1513,
	1514, 1522, 1523, 1524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 1510, 0, 0, 0, 1693,
	1520, 0, 1482, 0, 1700, 1733, 0, 1528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1481, 0, 0, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1092, 0, 1092, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 1493, 1494, 1500,
	1521, 1499, 1495, 0, 1492, 1490, 1491, 1483, 1484, 1485,
	1486, 1488, 1489, 0, 0, 1504, 1505, 1506, 1507, 0,
	0, 2650, 0, 0, 0, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1092, 0, 0, 1519,
	0, 1092, 1529, 0, 0, 0, 1509, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1525, 0, 1526, 0,
	1092, 0, 0, 1205, 0, 1496, 1497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 0, 0, 0, 0, 0, 0, 0, 0,
	1502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1092, 0, 0, 0, 0, 0, 0,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 1092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1092, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1092, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 1493, 1494, 1500, 1521, 1499, 1495, 0, 1492,
	1490, 1491, 1483, 1484, 1485, 1486, 1488, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 2649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1205, 1205, 0, 0, 0, 0, 1205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 1096, 225, 1097, 1098, 1099, 1092, 1100,
	483, 1101, 1102, 1103, 1104, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 1105, 235,
	236, 237, 238, 239, 240, 1106, 1107, 241, 488, 489,
	490, 1108, 242, 491, 1109, 1094, 1110, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 1111, 253,
	0, 254, 255, 256, 1112, 257, 966, 258, 259, 1113,
	1114, 1116, 1115, 1117, 1118, 1119, 260, 261, 262, 263,
	264, 265, 492, 493, 1120, 266, 1121, 268, 267, 1122,
	269, 1123, 1124, 270, 271, 272, 1125, 273, 1126, 274,
	275, 1127, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 1128, 217, 1129, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	1130, 293, 1131, 1132, 967, 294, 295, 1133, 296, 498,
	1134, 499, 297, 1135, 298, 299, 300, 301, 500, 501,
	502, 354, 969, 302, 303, 1136, 304, 305, 307, 0,
	0, 218, 306, 308, 315, 1137, 968, 309, 503, 311,
	310, 312, 313, 314, 504, 1138, 505, 1139, 316, 970,
	506, 971, 317, 318, 319, 972, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 1140, 328, 327, 1141, 329,
	507, 973, 330, 331, 974, 1142, 332, 333, 1143, 1144,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 975, 347, 348, 351, 350, 976,
	349, 1145, 219, 977, 352, 1146, 508, 353, 509, 355,
	356, 1147, 357, 358, 359, 1148, 1149, 361, 362, 363,
	1150, 1151, 364, 365, 510, 978, 366, 979, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 1152, 375,
	376, 512, 377, 513, 378, 1153, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 1154, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 1155, 402, 980, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 1156, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 1157, 429, 409, 410, 430, 431, 981, 432,
	433, 516, 434, 435, 1158, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 1159, 447, 448,
	446, 1160, 449, 450, 451, 452, 453, 281, 454, 1161,
	455, 518, 519, 520, 521, 1162, 462, 1163, 456, 457,
	522, 458, 523, 1164, 459, 460, 461, 0, 463, 464,
	1165, 1166, 465, 466, 467, 468, 469, 471, 1167, 472,
	1168, 470, 473, 474, 475, 524, 525, 526, 1169, 477,
	476, 527, 1170, 1171, 1172, 1173, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1089, 0, 0, 0, 0, 0,
	0, 0, 2257, 0, 0, 0, 0, 0, 0, 0,
	2258, 220, 221, 222, 223, 224, 1096, 225, 1097, 1098,
	1099, 0, 1100, 483, 1101, 1102, 1103, 1104, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 1105, 235, 236, 237, 238, 239, 240, 1106, 1107,
	241, 488, 489, 490, 1108, 242, 491, 1109, 1094, 1110,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 1111, 253, 0, 254, 255, 256, 1112, 257, 966,
	258, 259, 1113, 1114, 1116, 1115, 1117, 1118, 1119, 260,
	261, 262, 263, 264, 265, 492, 493, 1120, 266, 1121,
	268, 267, 1122, 269, 1123, 1124, 270, 271, 272, 1125,
	273, 1126, 274, 275, 1127, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 1128, 217,
	1129, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 1130, 293, 1131, 1132, 967, 294, 295,
	1133, 296, 498, 1134, 499, 297, 1135, 298, 299, 300,
	301, 500, 501, 502, 354, 969, 302, 303, 1136, 304,
	305, 307, 0, 0, 218, 306, 308, 315, 1137, 968,
	309, 503, 311, 310, 312, 313, 314, 504, 1138, 505,
	1139, 316, 970, 506, 971, 317, 318, 319, 972, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 1140, 328,
	327, 1141, 329, 507, 973, 330, 331, 974, 1142, 332,
	333, 1143, 1144, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 975, 347, 348,
	351, 350, 976, 349, 1145, 219, 977, 352, 1146, 508,
	353, 509, 355, 356, 1147, 357, 358, 359, 1148, 1149,
	361, 362, 363, 1150, 1151, 364, 365, 510, 978, 366,
	979, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 1152, 375, 376, 512, 377, 513, 378, 1153, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 1154, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 1155, 402, 980, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 1156, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 1157, 429, 409, 410, 430,
	431, 981, 432, 433, 516, 434, 435, 1158, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	1159, 447, 448, 446, 1160, 449, 450, 451, 452, 453,
	281, 454, 1161, 455, 518, 519, 520, 521, 1162, 462,
	1163, 456, 457, 522, 458, 523, 1164, 459, 460, 461,
	0, 463, 464, 1165, 1166, 465, 466, 467, 468, 469,
	471, 1167, 472, 1168, 470, 473, 474, 475, 524, 525,
	526, 1169, 477, 476, 527, 1170, 1171, 1172, 1173, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 0, 0, 0,
	2977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2979, 220, 221, 222, 223, 224, 1096, 225, 1097,
	1098, 1099, 0, 1100, 483, 1101, 1102, 1103, 1104, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 1105, 235, 236, 237, 238, 239, 240, 1106,
	1107, 241, 488, 489, 490, 1108, 242, 491, 1109, 1094,
	1110, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 1111, 253, 0, 254, 255, 256, 1112, 257,
	966, 258, 259, 1113, 1114, 1116, 1115, 1117, 1118, 1119,
	260, 261, 262, 263, 264, 265, 492, 493, 1120, 266,
	1121, 268, 267, 1122, 269, 1123, 1124, 270, 271, 272,
	1125, 273, 1126, 274, 275, 1127, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 1128,
	217, 1129, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 1130, 293, 1131, 1132, 967, 294,
	295, 1133, 296, 498, 1134, 499, 297, 1135, 298, 299,
	300, 301, 500, 501, 502, 354, 969, 302, 303, 1136,
	304, 305, 307, 0, 0, 218, 306, 308, 315, 1137,
	968, 309, 503, 311, 310, 312, 313, 314, 504, 1138,
	505, 1139, 316, 970, 506, 971, 317, 318, 319, 972,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 1140,
	328, 327, 1141, 329, 507, 973, 330, 331, 974, 1142,
	332, 333, 1143, 1144, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 975, 347,
	348, 351, 350, 976, 349, 1145, 219, 977, 352, 1146,
	508, 353, 509, 355, 356, 1147, 357, 358, 359, 1148,
	1149, 361, 362, 363, 1150, 1151, 364, 365, 510, 978,
	366, 979, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 1152, 375, 376, 512, 377, 513, 378, 1153,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 1154, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 1155, 402, 980,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 1156, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 1157, 429, 409, 410,
	430, 431, 981, 432, 433, 516, 434, 435, 1158, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 1159, 447, 448, 446, 1160, 449, 450, 451, 452,
	453, 281, 454, 1161, 455, 518, 519, 520, 521, 1162,
	462, 1163, 456, 457, 522, 458, 523, 1164, 459, 460,
	461, 0, 463, 464, 1165, 1166, 465, 466, 467, 468,
	469, 471, 1167, 472, 1168, 470, 473, 474, 475, 524,
	525, 526, 1169, 477, 476, 527, 1170, 1171, 1172, 1173,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 0,
	1089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3267, 220, 221, 222,
	223, 224, 1096, 225, 1097, 1098, 1099, 0, 1100, 483,
	1101, 1102, 1103, 1104, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 1105, 235, 236,
	237, 238, 239, 240, 1106, 1107, 241, 488, 489, 490,
	1108, 242, 491, 1109, 1094, 1110, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 1111, 253, 0,
	254, 255, 256, 1112, 257, 966, 258, 259, 1113, 1114,
	1116, 1115, 1117, 1118, 1119, 260, 261, 262, 263, 264,
	265, 492, 493, 1120, 266, 1121, 268, 267, 1122, 269,
	1123, 1124, 270, 271, 272, 1125, 273, 1126, 274, 275,
	1127, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 1128, 217, 1129, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 1130,
	293, 1131, 1132, 967, 294, 295, 1133, 296, 498, 1134,
	499, 297, 1135, 298, 299, 300, 301, 500, 501, 502,
	354, 969, 302, 303, 1136, 304, 305, 307, 0, 0,
	218, 306, 308, 315, 1137, 968, 309, 503, 311, 310,
	312, 313, 314, 504, 1138, 505, 1139, 316, 970, 506,
	971, 317, 318, 319, 972, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 1140, 328, 327, 1141, 329, 507,
	973, 330, 331, 974, 1142, 332, 333, 1143, 1144, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 975, 347, 348, 351, 350, 976, 349,
	1145, 219, 977, 352, 1146, 508, 353, 509, 355, 356,
	1147, 357, 358, 359, 1148, 1149, 361, 362, 363, 1150,
	1151, 364, 365, 510, 978, 366, 979, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 1152, 375, 376,
	512, 377, 513, 378, 1153, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 1154, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 1155, 402, 980, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	1156, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 1157, 429, 409, 410, 430, 431, 981, 432, 433,
	516, 434, 435, 1158, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 1159, 447, 448, 446,
	1160, 449, 450, 451, 452, 453, 281, 454, 1161, 455,
	518, 519, 520, 521, 1162, 462, 1163, 456, 457, 522,
	458, 523, 1164, 459, 460, 461, 0, 463, 464, 1165,
	1166, 465, 466, 467, 468, 469, 471, 1167, 472, 1168,
	470, 473, 474, 475, 524, 525, 526, 1169, 477, 476,
	527, 1170, 1171, 1172, 1173, 478, 479, 528, 480, 481,
	482, 1089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3395, 0, 220, 221,
	222, 223, 224, 1096, 225, 1097, 1098, 1099, 0, 1100,
	483, 1101, 1102, 1103, 1104, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 1105, 235,
	236, 237, 238, 239, 240, 1106, 1107, 241, 488, 489,
	490, 1108, 242, 491, 1109, 1094, 1110, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 1111, 253,
	0, 254, 255, 256, 1112, 257, 966, 258, 259, 1113,
	1114, 1116, 1115, 1117, 1118, 1119, 260, 261, 262, 263,
	264, 265, 492, 493, 1120, 266, 1121, 268, 267, 1122,
	269, 1123, 1124, 270, 271, 272, 1125, 273, 1126, 274,
	275, 1127, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 1128, 217, 1129, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	1130, 293, 1131, 1132, 967, 294, 295, 1133, 296, 498,
	1134, 499, 297, 1135, 298, 299, 300, 301, 500, 501,
	502, 354, 969, 302, 303, 1136, 304, 305, 307, 0,
	0, 218, 306, 308, 315, 1137, 968, 309, 503, 311,
	310, 312, 313, 314, 504, 1138, 505, 1139, 316, 970,
	506, 971, 317, 318, 319, 972, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 1140, 328, 327, 1141, 329,
	507, 973, 330, 331, 974, 1142, 332, 333, 1143, 1144,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 975, 347, 348, 351, 350, 976,
	349, 1145, 219, 977, 352, 1146, 508, 353, 509, 355,
	356, 1147, 357, 358, 359, 1148, 1149, 361, 362, 363,
	1150, 1151, 364, 365, 510, 978, 366, 979, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 1152, 375,
	376, 512, 377, 513, 378, 1153, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 1154, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 1155, 402, 980, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 1156, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 1157, 429, 409, 410, 430, 431, 981, 432,
	433, 516, 434, 435, 1158, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 1159, 447, 448,
	446, 1160, 449, 450, 451, 452, 453, 281, 454, 1161,
	455, 518, 519, 520, 521, 1162, 462, 1163, 456, 457,
	522, 458, 523, 1164, 459, 460, 461, 0, 463, 464,
	1165, 1166, 465, 466, 467, 468, 469, 471, 1167, 472,
	1168, 470, 473, 474, 475, 524, 525, 526, 1169, 477,
	476, 527, 1170, 1171, 1172, 1173, 478, 479, 528, 480,
	481, 482, 1089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3320, 0, 220,
	221, 222, 223, 224, 1096, 225, 1097, 1098, 1099, 0,
	1100, 483, 1101, 1102, 1103, 1104, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 1105,
	235, 236, 237, 238, 239, 240, 1106, 1107, 241, 488,
	489, 490, 1108, 242, 491, 1109, 1094, 1110, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 1111,
	253, 0, 254, 255, 256, 1112, 257, 966, 258, 259,
	1113, 1114, 1116, 1115, 1117, 1118, 1119, 260, 261, 262,
	263, 264, 265, 492, 493, 1120, 266, 1121, 268, 267,
	1122, 269, 1123, 1124, 270, 271, 272, 1125, 273, 1126,
	274, 275, 1127, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 1128, 217, 1129, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 1130, 293, 1131, 1132, 967, 294, 295, 1133, 296,
	498, 1134, 499, 297, 1135, 298, 299, 300, 301, 500,
	501, 502, 354, 969, 302, 303, 1136, 304, 305, 307,
	0, 0, 218, 306, 308, 315, 1137, 968, 309, 503,
	311, 310, 312, 313, 314, 504, 1138, 505, 1139, 316,
	970, 506, 971, 317, 318, 319, 972, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 1140, 328, 327, 1141,
	329, 507, 973, 330, 331, 974, 1142, 332, 333, 1143,
	1144, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 975, 347, 348, 351, 350,
	976, 349, 1145, 219, 977, 352, 1146, 508, 353, 509,
	355, 356, 1147, 357, 358, 359, 1148, 1149, 361, 362,
	363, 1150, 1151, 364, 365, 510, 978, 366, 979, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 1152,
	375, 376, 512, 377, 513, 378, 1153, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 1154,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 1155, 402, 980, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 1156, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 1157, 429, 409, 410, 430, 431, 981,
	432, 433, 516, 434, 435, 1158, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 1159, 447,
	448, 446, 1160, 449, 450, 451, 452, 453, 281, 454,
	1161, 455, 518, 519, 520, 521, 1162, 462, 1163, 456,
	457, 522, 458, 523, 1164, 459, 460, 461, 0, 463,
	464, 1165, 1166, 465, 466, 467, 468, 469, 471, 1167,
	472, 1168, 470, 473, 474, 475, 524, 525, 526, 1169,
	477, 476, 527, 1170, 1171, 1172, 1173, 478, 479, 528,
	480, 481, 482, 1089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3201, 0,
	220, 221, 222, 223, 224, 1096, 225, 1097, 1098, 1099,
	0, 1100, 483, 1101, 1102, 1103, 1104, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	1105, 235, 236, 237, 238, 239, 240, 1106, 1107, 241,
	488, 489, 490, 1108, 242, 491, 1109, 1094, 1110, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	1111, 253, 0, 254, 255, 256, 1112, 257, 966, 258,
	259, 1113, 1114, 1116, 1115, 1117, 1118, 1119, 260, 261,
	262, 263, 264, 265, 492, 493, 1120, 266, 1121, 268,
	267, 1122, 269, 1123, 1124, 270, 271, 272, 1125, 273,
	1126, 274, 275, 1127, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 1128, 217, 1129,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 1130, 293, 1131, 1132, 967, 294, 295, 1133,
	296, 498, 1134, 499, 297, 1135, 298, 299, 300, 301,
	500, 501, 502, 354, 969, 302, 303, 1136, 304, 305,
	307, 0, 0, 218, 306, 308, 315, 1137, 968, 309,
	503, 311, 310, 312, 313, 314, 504, 1138, 505, 1139,
	316, 970, 506, 971, 317, 318, 319, 972, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 1140, 328, 327,
	1141, 329, 507, 973, 330, 331, 974, 1142, 332, 333,
	1143, 1144, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 975, 347, 348, 351,
	350, 976, 349, 1145, 219, 977, 352, 1146, 508, 353,
	509, 355, 356, 1147, 357, 358, 359, 1148, 1149, 361,
	362, 363, 1150, 1151, 364, 365, 510, 978, 366, 979,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	1152, 375, 376, 512, 377, 513, 378, 1153, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	1154, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 1155, 402, 980, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 1156, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 1157, 429, 409, 410, 430, 431,
	981, 432, 433, 516, 434, 435, 1158, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 1159,
	447, 448, 446, 1160, 449, 450, 451, 452, 453, 281,
	454, 1161, 455, 518, 519, 520, 521, 1162, 462, 1163,
	456, 457, 522, 458, 523, 1164, 459, 460, 461, 0,
	463, 464, 1165, 1166, 465, 466, 467, 468, 469, 471,
	1167, 472, 1168, 470, 473, 474, 475, 524, 525, 526,
	1169, 477, 476, 527, 1170, 1171, 1172, 1173, 478, 479,
	528, 480, 481, 482, 1089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2995,
	0, 220, 221, 222, 223, 224, 1096, 225, 1097, 1098,
	1099, 0, 1100, 483, 1101, 1102, 1103, 1104, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 1105, 235, 236, 237, 238, 239, 240, 1106, 1107,
	241, 488, 489, 490, 1108, 242, 491, 1109, 1094, 1110,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 1111, 253, 0, 254, 255, 256, 1112, 257, 966,
	258, 259, 1113, 1114, 1116, 1115, 1117, 1118, 1119, 260,
	261, 262, 263, 264, 265, 492, 493, 1120, 266, 1121,
	268, 267, 1122, 269, 1123, 1124, 270, 271, 272, 1125,
	273, 1126, 274, 275, 1127, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 1128, 217,
	1129, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 1130, 293, 1131, 1132, 967, 294, 295,
	1133, 296, 498, 1134, 499, 297, 1135, 298, 299, 300,
	301, 500, 501, 502, 354, 969, 302, 303, 1136, 304,
	305, 307, 0, 0, 218, 306, 308, 315, 1137, 968,
	309, 503, 311, 310, 312, 313, 314, 504, 1138, 505,
	1139, 316, 970, 506, 971, 317, 318, 319, 972, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 1140, 328,
	327, 1141, 329, 507, 973, 330, 331, 974, 1142, 332,
	333, 1143, 1144, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 975, 347, 348,
	351, 350, 976, 349, 1145, 219, 977, 352, 1146, 508,
	353, 509, 355, 356, 1147, 357, 358, 359, 1148, 1149,
	361, 362, 363, 1150, 1151, 364, 365, 510, 978, 366,
	979, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 1152, 375, 376, 512, 377, 513, 378, 1153, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 1154, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 1155, 402, 980, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 1156, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 1157, 429, 409, 410, 430,
	431, 981, 432, 433, 516, 434, 435, 1158, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	1159, 447, 448, 446, 1160, 449, 450, 451, 452, 453,
	281, 454, 1161, 455, 518, 519, 520, 521, 1162, 462,
	1163, 456, 457, 522, 458, 523, 1164, 459, 460, 461,
	0, 463, 464, 1165, 1166, 465, 466, 467, 468, 469,
	471, 1167, 472, 1168, 470, 473, 474, 475, 524, 525,
	526, 1169, 477, 476, 527, 1170, 1171, 1172, 1173, 478,
	479, 528, 480, 481, 482, 1089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2846, 0, 220, 221, 222, 223, 224, 1096, 225, 1097,
	1098, 1099, 0, 1100, 483, 1101, 1102, 1103, 1104, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 1105, 235, 236, 237, 238, 239, 240, 1106,
	1107, 241, 488, 489, 490, 1108, 242, 491, 1109, 1094,
	1110, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 1111, 253, 0, 254, 255, 256, 1112, 257,
	966, 258, 259, 1113, 1114, 1116, 1115, 1117, 1118, 1119,
	260, 261, 262, 263, 264, 265, 492, 493, 1120, 266,
	1121, 268, 267, 1122, 269, 1123, 1124, 270, 271, 272,
	1125, 273, 1126, 274, 275, 1127, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 1128,
	217, 1129, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 1130, 293, 1131, 1132, 967, 294,
	295, 1133, 296, 498, 1134, 499, 297, 1135, 298, 299,
	300, 301, 500, 501, 502, 354, 969, 302, 303, 1136,
	304, 305, 307, 0, 0, 218, 306, 308, 315, 1137,
	968, 309, 503, 311, 310, 312, 313, 314, 504, 1138,
	505, 1139, 316, 970, 506, 971, 317, 318, 319, 972,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 1140,
	328, 327, 1141, 329, 507, 973, 330, 331, 974, 1142,
	332, 333, 1143, 1144, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 975, 347,
	348, 351, 350, 976, 349, 1145, 219, 977, 352, 1146,
	508, 353, 509, 355, 356, 1147, 357, 358, 359, 1148,
	1149, 361, 362, 363, 1150, 1151, 364, 365, 510, 978,
	366, 979, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 1152, 375, 376, 512, 377, 513, 378, 1153,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 1154, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 1155, 402, 980,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 1156, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 1157, 429, 409, 410,
	430, 431, 981, 432, 433, 516, 434, 435, 1158, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 1159, 447, 448, 446, 1160, 449, 450, 451, 452,
	453, 281, 454, 1161, 455, 518, 519, 520, 521, 1162,
	462, 1163, 456, 457, 522, 458, 523, 1164, 459, 460,
	461, 0, 463, 464, 1165, 1166, 465, 466, 467, 468,
	469, 471, 1167, 472, 1168, 470, 473, 474, 475, 524,
	525, 526, 1169, 477, 476, 527, 1170, 1171, 1172, 1173,
	478, 479, 528, 480, 481, 482, 1089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2150, 0, 220, 221, 222, 223, 224, 1096, 225,
	1097, 1098, 1099, 0, 1100, 483, 1101, 1102, 1103, 1104,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 1105, 235, 236, 237, 238, 239, 240,
	1106, 1107, 241, 488, 489, 490, 1108, 242, 491, 1109,
	1094, 1110, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 1111, 253, 0, 254, 255, 256, 1112,
	257, 966, 258, 259, 1113, 1114, 1116, 1115, 1117, 1118,
	1119, 260, 261, 262, 263, 264, 265, 492, 493, 1120,
	266, 1121, 268, 267, 1122, 269, 1123, 1124, 270, 271,
	272, 1125, 273, 1126, 274, 275, 1127, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	1128, 217, 1129, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 1130, 293, 1131, 1132, 967,
	294, 295, 1133, 296, 498, 1134, 499, 297, 1135, 298,
	299, 300, 301, 500, 501, 502, 354, 969, 302, 303,
	1136, 304, 305, 307, 0, 0, 218, 306, 308, 315,
	1137, 968, 309, 503, 311, 310, 312, 313, 314, 504,
	1138, 505, 1139, 316, 970, 506, 971, 317, 318, 319,
	972, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	1140, 328, 327, 1141, 329, 507, 973, 330, 331, 974,
	1142, 332, 333, 1143, 1144, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 975,
	347, 348, 351, 350, 976, 349, 1145, 219, 977, 352,
	1146, 508, 353, 509, 355, 356, 1147, 357, 358, 359,
	1148, 1149, 361, 362, 363, 1150, 1151, 364, 365, 510,
	978, 366, 979, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 1152, 375, 376, 512, 377, 513, 378,
	1153, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 1154, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 1155, 402,
	980, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 1156, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 1157, 429, 409,
	410, 430, 431, 981, 432, 433, 516, 434, 435, 1158,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 1159, 447, 448, 446, 1160, 449, 450, 451,
	452, 453, 281, 454, 1161, 455, 518, 519, 520, 521,
	1162, 462, 1163, 456, 457, 522, 458, 523, 1164, 459,
	460, 461, 0, 463, 464, 1165, 1166, 465, 466, 467,
	468, 469, 471, 1167, 472, 1168, 470, 473, 474, 475,
	524, 525, 526, 1169, 477, 476, 527, 1170, 1171, 1172,
	1173, 478, 479, 528, 480, 481, 482, 1186, 0, 1089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 220, 221, 222, 223,
	224, 1096, 225, 1097, 1098, 1099, 0, 1100, 483, 1101,
	1102, 1103, 1104, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 1105, 235, 236, 237,
	238, 239, 240, 1106, 1107, 241, 488, 489, 490, 1108,
	242, 491, 1109, 1094, 1110, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 1111, 253, 0, 254,
	255, 256, 1112, 257, 966, 258, 259, 1113, 1114, 1116,
	1115, 1117, 1118, 1119, 260, 261, 262, 263, 264, 265,
	492, 493, 1120, 266, 1121, 268, 267, 1122, 269, 1123,
	1124, 270, 271, 272, 1125, 273, 1126, 274, 275, 1127,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 1128, 217, 1129, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 1130, 293,
	1131, 1132, 967, 294, 295, 1133, 296, 498, 1134, 499,
	297, 1135, 298, 299, 300, 301, 500, 501, 502, 354,
	969, 302, 303, 1136, 304, 305, 307, 0, 0, 218,
	306, 308, 315, 1137, 968, 309, 503, 311, 310, 312,
	313, 314, 504, 1138, 505, 1139, 316, 970, 506, 971,
	317, 318, 319, 972, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 1140, 328, 327, 1141, 329, 507, 973,
	330, 331, 974, 1142, 332, 333, 1143, 1144, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 975, 347, 348, 351, 350, 976, 349, 1145,
	219, 977, 352, 1146, 508, 353, 509, 355, 356, 1147,
	357, 358, 359, 1148, 1149, 361, 362, 363, 1150, 1151,
	364, 365, 510, 978, 366, 979, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 1152, 375, 376, 512,
	377, 513, 378, 1153, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 1154, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 1155, 402, 980, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 1156,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	1157, 429, 409, 410, 430, 431, 981, 432, 433, 516,
	434, 435, 1158, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 1159, 447, 448, 446, 1160,
	449, 450, 451, 452, 453, 281, 454, 1161, 455, 518,
	519, 520, 521, 1162, 462, 1163, 456, 457, 522, 458,
	523, 1164, 459, 460, 461, 0, 463, 464, 1165, 1166,
	465, 466, 467, 468, 469, 471, 1167, 472, 1168, 470,
	473, 474, 475, 524, 525, 526, 1169, 477, 476, 527,
	1170, 1171, 1172, 1173, 478, 479, 528, 480, 481, 482,
	1086, 0, 1089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 1096, 225, 1097, 1098, 1099, 0,
	1100, 483, 1101, 1102, 1103, 1104, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 1105,
	235, 236, 237, 238, 239, 240, 1106, 1107, 241, 488,
	489, 490, 1108, 242, 491, 1109, 1094, 1110, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 1111,
	253, 0, 254, 255, 256, 1112, 257, 966, 258, 259,
	1113, 1114, 1116, 1115, 1117, 1118, 1119, 260, 261, 262,
	263, 264, 265, 492, 493, 1120, 266, 1121, 268, 267,
	1122, 269, 1123, 1124, 270, 271, 272, 1125, 273, 1126,
	274, 275, 1127, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 1128, 217, 1129, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 1130, 293, 1131, 1132, 967, 294, 295, 1133, 296,
	498, 1134, 499, 297, 1135, 298, 299, 300, 301, 500,
	501, 502, 354, 969, 302, 303, 1136, 304, 305, 307,
	0, 0, 218, 306, 308, 315, 1137, 968, 309, 503,
	311, 310, 312, 313, 314, 504, 1138, 505, 1139, 316,
	970, 506, 971, 317, 318, 319, 972, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 1140, 328, 327, 1141,
	329, 507, 973, 330, 331, 974, 1142, 332, 333, 1143,
	1144, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 975, 347, 348, 351, 350,
	976, 349, 1145, 219, 977, 352, 1146, 508, 353, 509,
	355, 356, 1147, 357, 358, 359, 1148, 1149, 361, 362,
	363, 1150, 1151, 364, 365, 510, 978, 366, 979, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 1152,
	375, 376, 512, 377, 513, 378, 1153, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 1154,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 1155, 402, 980, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 1156, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 1157, 429, 409, 410, 430, 431, 981,
	432, 433, 516, 434, 435, 1158, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 1159, 447,
	448, 446, 1160, 449, 450, 451, 452, 453, 281, 454,
	1161, 455, 518, 519, 520, 521, 1162, 462, 1163, 456,
	457, 522, 458, 523, 1164, 459, 460, 461, 0, 463,
	464, 1165, 1166, 465, 466, 467, 468, 469, 471, 1167,
	472, 1168, 470, 473, 474, 475, 524, 525, 526, 1169,
	477, 476, 527, 1170, 1171, 1172, 1173, 478, 479, 528,
	480, 481, 482, 1089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 1096, 225, 1097, 1098, 1099,
	0, 1100, 483, 1101, 1102, 1103, 1104, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	1105, 235, 236, 237, 238, 239, 240, 1106, 1107, 241,
	488, 489, 490, 1108, 242, 491, 1109, 1094, 1110, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	1111, 253, 0, 254, 255, 256, 1112, 257, 966, 258,
	259, 1113, 1114, 1116, 1115, 1117, 1118, 1119, 260, 261,
	262, 263, 264, 265, 492, 493, 1120, 266, 1121, 268,
	267, 1122, 269, 1123, 1124, 270, 271, 272, 1125, 273,
	1126, 274, 275, 1127, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 1128, 217, 1129,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 1130, 293, 1131, 1132, 967, 294, 295, 1133,
	296, 498, 1134, 499, 297, 1135, 298, 299, 300, 301,
	500, 501, 502, 354, 969, 302, 303, 1136, 304, 305,
	307, 0, 0, 218, 306, 308, 315, 1137, 968, 309,
	503, 311, 310, 312, 313, 314, 504, 1138, 505, 1139,
	316, 970, 506, 971, 317, 318, 319, 972, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 1140, 328, 327,
	1141, 329, 507, 973, 330, 331, 974, 1142, 332, 333,
	1143, 1144, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 975, 347, 348, 351,
	350, 976, 349, 1145, 219, 977, 352, 1146, 508, 353,
	509, 355, 356, 1147, 357, 358, 359, 1148, 1149, 361,
	362, 363, 1150, 1151, 364, 365, 510, 978, 366, 979,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	1152, 375, 376, 512, 377, 513, 378, 1153, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	1154, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 1155, 402, 980, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 1156, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 1157, 429, 409, 410, 430, 431,
	981, 432, 433, 516, 434, 435, 1158, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 1159,
	447, 448, 446, 1160, 449, 450, 451, 452, 453, 281,
	454, 1161, 455, 518, 519, 520, 521, 1162, 462, 1163,
	456, 457, 522, 458, 523, 1164, 459, 460, 461, 0,
	463, 464, 1165, 1166, 465, 466, 467, 468, 469, 471,
	1167, 472, 1168, 470, 473, 474, 475, 524, 525, 526,
	1169, 477, 476, 527, 1170, 1171, 1172, 1173, 478, 479,
	528, 480, 481, 482, 2125, 0, 906, 864, 865, 866,
	862, 863, 875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 2122, 225,
	0, 0, 0, 0, 0, 957, 880, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 921, 900, 932, 234,
	890, 931, 930, 0, 235, 892, 891, 238, 239, 240,
	882, 956, 241, 993, 994, 490, 0, 242, 963, 0,
	944, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 966, 258, 259, 947, 945, 946, 953, 949, 948,
	952, 260, 261, 262, 263, 935, 265, 928, 927, 853,
	266, 0, 268, 267, 0, 269, 2123, 0, 270, 926,
	272, 0, 273, 0, 274, 275, 0, 276, 859, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 984, 985,
	871, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	925, 923, 924, 0, 292, 0, 293, 0, 0, 967,
	294, 295, 0, 296, 991, 0, 881, 297, 0, 298,
	299, 300, 301, 958, 959, 962, 354, 969, 302, 303,
	0, 304, 305, 902, 0, 0, 218, 306, 308, 315,
	0, 968, 309, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 316, 970, 960, 971, 317, 318, 319,
	972, 940, 941, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 992, 973, 330, 331, 974,
	0, 332, 333, 951, 950, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 894, 344, 975,
	347, 348, 351, 350, 976, 349, 850, 219, 977, 352,
	872, 961, 353, 929, 355, 356, 0, 903, 358, 904,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	978, 366, 979, 986, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 987, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	922, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	980, 403, 404, 405, 406, 860, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 895,
	896, 898, 899, 420, 426, 427, 428, 954, 429, 409,
	410, 430, 431, 981, 432, 433, 917, 897, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 965, 441, 442,
	443, 988, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 893, 0, 455, 936, 937, 938, 939,
	0, 462, 0, 456, 457, 989, 458, 990, 870, 459,
	460, 461, 0, 463, 464, 0, 854, 465, 466, 467,
	468, 469, 471, 955, 472, 0, 901, 473, 474, 475,
	524, 933, 983, 2121, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 851, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	847, 848, 2124, 0, 0, 0, 0, 0, 0, 876,
	2120, 0, 840, 874, 906, 864, 865, 866, 862, 863,
	875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 957, 880, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 921, 900, 932, 234, 890, 931,
	930, 0, 235, 892, 891, 238, 239, 240, 882, 956,
	241, 993, 994, 490, 0, 242, 963, 0, 944, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 966,
	258, 259, 947, 945, 946, 953, 949, 948, 952, 260,
	261, 262, 263, 935, 265, 928, 927, 853, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 926, 272, 0,
	273, 0, 274, 275, 0, 276, 859, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 984, 985, 871, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 925, 923,
	924, 0, 292, 0, 293, 0, 0, 967, 294, 295,
	0, 296, 991, 0, 881, 297, 0, 298, 299, 300,
	301, 958, 959, 962, 354, 969, 302, 303, 0, 304,
	305, 902, 0, 0, 218, 306, 308, 315, 0, 968,
	309, 914, 905, 916, 918, 919, 920, 915, 0, 907,
	0, 316, 970, 960, 971, 317, 318, 319, 972, 940,
	941, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 992, 973, 330, 331, 974, 0, 332,
	333, 951, 950, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 894, 344, 975, 347, 348,
	351, 350, 976, 349, 850, 219, 977, 352, 872, 961,
	353, 929, 355, 356, 0, 903, 358, 904, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 978, 366,
	979, 986, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 987, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 922, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 980, 403,
	404, 405, 406, 860, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 183, 424, 425, 895, 896, 898,
	899, 420, 426, 427, 428, 954, 429, 409, 410, 430,
	431, 981, 432, 433, 917, 897, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 965, 441, 442, 443, 988,
	0, 447, 448, 446, 185, 449, 450, 451, 452, 453,
	281, 893, 0, 455, 936, 937, 938, 939, 0, 462,
	0, 456, 457, 989, 458, 990, 870, 459, 460, 461,
	0, 463, 464, 0, 854, 465, 466, 467, 468, 469,
	471, 955, 472, 0, 901, 473, 474, 475, 1344, 933,
	983, 0, 477, 476, 527, 0, 0, 0, 177, 478,
	479, 528, 480, 481, 482, 851, 178, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 847, 848,
	906, 864, 865, 866, 862, 863, 875, 1554, 1552, 0,
	0, 874, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 957,
	880, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	921, 900, 932, 234, 890, 931, 930, 0, 235, 892,
	891, 238, 239, 240, 882, 956, 241, 993, 994, 490,
	0, 242, 963, 0, 944, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 966, 258, 259, 947, 945,
	946, 953, 949, 948, 952, 260, 261, 262, 263, 935,
	265, 928, 927, 853, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 926, 272, 0, 273, 0, 274, 275,
	0, 276, 859, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 984, 985, 871, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 925, 923, 924, 0, 292, 0,
	293, 0, 0, 967, 294, 295, 0, 296, 991, 0,
	881, 297, 0, 298, 299, 300, 301, 958, 959, 962,
	354, 969, 302, 303, 0, 304, 305, 902, 0, 0,
	218, 306, 308, 315, 0, 968, 309, 914, 905, 916,
	918, 919, 920, 915, 0, 907, 0, 316, 970, 960,
	971, 317, 318, 319, 972, 940, 941, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 992,
	973, 330, 331, 974, 0, 332, 333, 951, 950, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 894, 344, 975, 347, 348, 351, 350, 976, 349,
	850, 219, 977, 352, 872, 961, 353, 929, 355, 356,
	0, 903, 358, 904, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 978, 366, 979, 986, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	987, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 922, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 980, 403, 404, 405, 406, 860,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	183, 424, 425, 895, 896, 898, 899, 420, 426, 427,
	428, 954, 429, 409, 410, 430, 431, 981, 432, 433,
	917, 897, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 965, 441, 442, 443, 988, 0, 447, 448, 446,
	185, 449, 450, 451, 452, 453, 281, 893, 0, 455,
	936, 937, 938, 939, 0, 462, 0, 456, 457, 989,
	458, 990, 870, 459, 460, 461, 0, 463, 464, 0,
	854, 465, 466, 467, 468, 469, 471, 955, 472, 0,
	901, 473, 474, 475, 1344, 933, 983, 0, 477, 476,
	527, 0, 0, 0, 177, 478, 479, 528, 480, 481,
	482, 851, 178, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 847, 848, 906, 864, 865, 866,
	862, 863, 875, 1554, 2593, 0, 0, 874, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 957, 880, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 921, 900, 932, 234,
	890, 931, 930, 0, 235, 892, 891, 238, 239, 240,
	882, 956, 241, 993, 994, 490, 0, 242, 963, 0,
	944, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 966, 258, 259, 947, 945, 946, 953, 949, 948,
	952, 260, 261, 262, 263, 935, 265, 928, 927, 853,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 926,
	272, 0, 273, 0, 274, 275, 0, 276, 859, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 984, 985,
	871, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	925, 923, 924, 0, 292, 0, 293, 0, 0, 967,
	294, 295, 0, 296, 991, 0, 881, 297, 0, 298,
	299, 300, 301, 958, 959, 962, 354, 969, 302, 303,
	0, 304, 305, 902, 0, 0, 218, 306, 308, 315,
	0, 968, 309, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 316, 970, 960, 971, 317, 318, 319,
	972, 940, 941, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 992, 973, 330, 331, 974,
	0, 332, 333, 951, 950, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 894, 344, 975,
	347, 348, 351, 350, 976, 349, 850, 219, 977, 352,
	872, 961, 353, 929, 355, 356, 0, 903, 358, 904,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	978, 366, 979, 986, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 987, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	922, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	980, 403, 404, 405, 406, 860, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 183, 424, 425, 895,
	896, 898, 899, 420, 426, 427, 428, 954, 429, 409,
	410, 430, 431, 981, 432, 433, 917, 897, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 965, 441, 442,
	443, 988, 0, 447, 448, 446, 185, 449, 450, 451,
	452, 453, 281, 893, 0, 455, 936, 937, 938, 939,
	0, 462, 0, 456, 457, 989, 458, 990, 870, 459,
	460, 461, 0, 463, 464, 0, 854, 465, 466, 467,
	468, 469, 471, 955, 472, 0, 901, 473, 474, 475,
	1344, 933, 983, 0, 477, 476, 527, 0, 0, 0,
	177, 478, 479, 528, 480, 481, 482, 851, 178, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	847, 848, 906, 864, 865, 866, 862, 863, 875, 1554,
	1552, 0, 0, 874, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 957, 880, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 921, 900, 932, 234, 890, 931, 930, 2219,
	235, 892, 891, 238, 239, 240, 882, 956, 241, 993,
	994, 490, 0, 242, 963, 0, 944, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 966, 258, 259,
	947, 945, 946, 953, 949, 948, 952, 260, 261, 262,
	263, 935, 265, 928, 927, 853, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 926, 272, 0, 273, 0,
	274, 275, 0, 276, 859, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 984, 985, 871, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 925, 923, 924, 0,
	292, 0, 293, 0, 2224, 967, 294, 295, 0, 296,
	991, 0, 881, 297, 0, 298, 299, 300, 301, 958,
	959, 962, 354, 969, 302, 303, 0, 304, 305, 902,
	0, 0, 218, 306, 308, 315, 0, 968, 309, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 316,
	970, 960, 971, 317, 318, 319, 972, 940, 941, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 2220,
	329, 992, 973, 330, 331, 974, 0, 332, 333, 951,
	950, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 894, 344, 975, 347, 348, 351, 350,
	976, 349, 850, 219, 977, 352, 872, 961, 353, 929,
	355, 356, 0, 903, 358, 904, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 978, 366, 979, 986,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 987, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 922, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 980, 403, 404, 405,
	406, 860, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 895, 896, 898, 899, 420,
	426, 427, 428, 954, 429, 409, 410, 430, 431, 981,
	432, 433, 917, 897, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 965, 441, 442, 443, 988, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 893,
	0, 455, 936, 937, 938, 939, 0, 462, 2221, 456,
	457, 989, 458, 990, 870, 459, 460, 461, 0, 463,
	464, 0, 854, 465, 466, 467, 468, 469, 471, 955,
	472, 0, 901, 473, 474, 475, 524, 933, 983, 0,
	477, 476, 527, 0, 0, 0, 0, 478, 479, 528,
	480, 481, 482, 851, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 847, 848, 0, 0,
	0, 0, 0, 0, 0, 876, 0, 0, 2178, 874,
	906, 864, 865, 866, 862, 863, 875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 957,
	880, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	921, 900, 932, 234, 890, 931, 930, 0, 235, 892,
	891, 238, 239, 240, 882, 956, 241, 993, 994, 490,
	0, 242, 963, 0, 944, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 966, 258, 259, 947, 945,
	946, 953, 949, 948, 952, 260, 261, 262, 263, 935,
	265, 928, 927, 853, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 926, 272, 0, 273, 0, 274, 275,
	0, 276, 859, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 984, 985, 871, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 925, 923, 924, 0, 292, 0,
	293, 0, 0, 967, 294, 295, 0, 296, 991, 0,
	881, 297, 0, 298, 299, 300, 301, 958, 959, 962,
	354, 969, 302, 303, 0, 304, 305, 902, 0, 0,
	218, 306, 308, 315, 0, 968, 309, 914, 905, 916,
	918, 919, 920, 915, 0, 907, 0, 316, 970, 960,
	971, 317, 318, 319, 972, 940, 941, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 992,
	973, 330, 331, 974, 0, 332, 333, 951, 950, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 894, 344, 975, 347, 348, 351, 350, 976, 349,
	850, 219, 977, 352, 872, 961, 353, 929, 355, 356,
	0, 903, 358, 904, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 978, 366, 979, 986, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	987, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 922, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 980, 403, 404, 405, 406, 860,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 895, 896, 898, 899, 420, 426, 427,
	428, 954, 429, 409, 410, 430, 431, 981, 432, 433,
	917, 897, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 965, 441, 442, 443, 988, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 893, 0, 455,
	936, 937, 938, 939, 0, 462, 0, 456, 457, 989,
	458, 990, 870, 459, 460, 461, 0, 463, 464, 0,
	854, 465, 466, 467, 468, 469, 471, 955, 472, 0,
	901, 473, 474, 475, 524, 933, 983, 0, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 851, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 847, 848, 0, 0, 0, 0,
	0, 0, 0, 876, 2176, 0, 2175, 874, 906, 864,
	865, 866, 862, 863, 875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 957, 880, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 921, 900,
	932, 234, 890, 931, 930, 0, 235, 892, 891, 238,
	239, 240, 882, 956, 241, 993, 994, 490, 0, 242,
	963, 0, 944, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 966, 258, 259, 947, 945, 946, 953,
	949, 948, 952, 260, 261, 262, 263, 935, 265, 928,
	927, 853, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 926, 272, 0, 273, 0, 274, 275, 0, 276,
	859, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	984, 985, 871, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 925, 923, 924, 0, 292, 0, 293, 0,
	0, 967, 294, 295, 0, 296, 991, 0, 881, 297,
	0, 298, 299, 300, 301, 958, 959, 962, 354, 969,
	302, 303, 0, 304, 305, 902, 0, 0, 218, 306,
	308, 315, 0, 968, 309, 914, 905, 916, 918, 919,
	920, 915, 0, 907, 0, 316, 970, 960, 971, 317,
	318, 319, 972, 940, 941, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 992, 973, 330,
	331, 974, 0, 332, 333, 951, 950, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 894,
	344, 975, 347, 348, 351, 350, 976, 349, 850, 219,
	977, 352, 872, 961, 353, 929, 355, 356, 0, 903,
	358, 904, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 978, 366, 979, 986, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 987, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 922, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 980, 403, 404, 405, 406, 860, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 895, 896, 898, 899, 420, 426, 427, 428, 954,
	429, 409, 410, 430, 431, 981, 432, 433, 917, 897,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 965,
	441, 442, 443, 988, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 893, 0, 455, 936, 937,
	938, 939, 0, 462, 0, 456, 457, 989, 458, 990,
	870, 459, 460, 461, 0, 463, 464, 0, 854, 465,
	466, 467, 468, 469, 471, 955, 472, 0, 901, 473,
	474, 475, 524, 933, 983, 0, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 851,
	0, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	0, 0, 847, 848, 0, 0, 0, 0, 0, 0,
	0, 876, 2173, 0, 2172, 874, 906, 864, 865, 866,
	862, 863, 875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 957, 880, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 921, 900, 932, 234,
	890, 931, 930, 0, 235, 892, 891, 238, 239, 240,
	882, 956, 241, 993, 994, 490, 0, 242, 963, 0,
	944, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 966, 258, 259, 947, 945, 946, 953, 949, 948,
	952, 260, 261, 262, 263, 935, 265, 928, 927, 853,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 926,
	272, 0, 273, 0, 274, 275, 0, 276, 859, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 984, 985,
	871, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	925, 923, 924, 0, 292, 0, 293, 0, 0, 967,
	294, 295, 0, 296, 991, 0, 881, 297, 0, 298,
	299, 300, 301, 958, 959, 962, 354, 969, 302, 303,
	0, 304, 305, 902, 0, 0, 218, 306, 308, 315,
	0, 968, 309, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 316, 970, 960, 971, 317, 318, 319,
	972, 940, 941, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 992, 973, 330, 331, 974,
	0, 332, 333, 951, 950, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 894, 344, 975,
	347, 348, 351, 350, 976, 349, 850, 219, 977, 352,
	872, 961, 353, 929, 355, 356, 0, 903, 358, 904,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	978, 366, 979, 986, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 987, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	922, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	980, 403, 404, 405, 406, 860, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 895,
	896, 898, 899, 420, 426, 427, 428, 954, 429, 409,
	410, 430, 431, 981, 432, 433, 917, 897, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 965, 441, 442,
	443, 988, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 893, 0, 455, 936, 937, 938, 939,
	0, 462, 0, 456, 457, 989, 458, 990, 870, 459,
	460, 461, 0, 463, 464, 0, 854, 465, 466, 467,
	468, 469, 471, 955, 472, 0, 901, 473, 474, 475,
	524, 933, 983, 0, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 851, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	847, 848, 0, 0, 0, 0, 0, 0, 0, 876,
	2170, 0, 2169, 874, 906, 864, 865, 866, 862, 863,
	875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 957, 880, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 921, 900, 932, 234, 890, 931,
	930, 0, 235, 892, 891, 238, 239, 240, 882, 956,
	241, 993, 994, 490, 0, 242, 963, 0, 944, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 966,
	258, 259, 947, 945, 946, 953, 949, 948, 952, 260,
	261, 262, 263, 935, 265, 928, 927, 853, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 926, 272, 0,
	273, 0, 274, 275, 0, 276, 859, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 984, 985, 871, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 925, 923,
	924, 0, 292, 0, 293, 0, 0, 967, 294, 295,
	0, 296, 991, 0, 881, 297, 0, 298, 299, 300,
	301, 958, 959, 962, 354, 969, 302, 303, 0, 304,
	305, 902, 0, 0, 218, 306, 308, 315, 0, 968,
	309, 914, 905, 916, 918, 919, 920, 915, 0, 907,
	0, 316, 970, 960, 971, 317, 318, 319, 972, 940,
	941, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 992, 973, 330, 331, 974, 0, 332,
	333, 951, 950, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 894, 344, 975, 347, 348,
	351, 350, 976, 349, 850, 219, 977, 352, 872, 961,
	353, 929, 355, 356, 0, 903, 358, 904, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 978, 366,
	979, 986, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 987, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 922, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 980, 403,
	404, 405, 406, 860, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 895, 896, 898,
	899, 420, 426, 427, 428, 954, 429, 409, 410, 430,
	431, 981, 432, 433, 917, 897, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 965, 441, 442, 443, 988,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 893, 0, 455, 936, 937, 938, 939, 0, 462,
	0, 456, 457, 989, 458, 990, 870, 459, 460, 461,
	0, 463, 464, 0, 854, 465, 466, 467, 468, 469,
	471, 955, 472, 0, 901, 473, 474, 475, 524, 933,
	983, 0, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 851, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 847, 848,
	0, 0, 0, 0, 0, 0, 0, 876, 2167, 0,
	1413, 874, 906, 864, 865, 866, 862, 863, 875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 957, 880, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 921, 900, 932, 234, 890, 931, 930, 0,
	235, 892, 891, 238, 239, 240, 882, 956, 241, 993,
	994, 490, 0, 242, 963, 0, 944, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 966, 258, 259,
	947, 945, 946, 953, 949, 948, 952, 260, 261, 262,
	263, 935, 265, 928, 927, 853, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 926, 272, 0, 273, 0,
	274, 275, 0, 276, 859, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 984, 985, 871, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 925, 923, 924, 0,
	292, 0, 293, 0, 0, 967, 294, 295, 0, 296,
	991, 0, 881, 297, 0, 298, 299, 300, 301, 958,
	959, 962, 354, 969, 302, 303, 0, 304, 305, 902,
	0, 0, 218, 306, 308, 315, 0, 968, 309, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 316,
	970, 960, 971, 317, 318, 319, 972, 940, 941, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 992, 973, 330, 331, 974, 0, 332, 333, 951,
	950, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 894, 344, 975, 347, 348, 351, 350,
	976, 349, 850, 219, 977, 352, 872, 961, 353, 929,
	355, 356, 0, 903, 358, 904, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 978, 366, 979, 986,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 987, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 922, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 980, 403, 404, 405,
	406, 860, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 895, 896, 898, 899, 420,
	426, 427, 428, 954, 429, 409, 410, 430, 431, 981,
	432, 433, 917, 897, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 965, 441, 442, 443, 988, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 893,
	0, 455, 936, 937, 938, 939, 0, 462, 0, 456,
	457, 989, 458, 990, 870, 459, 460, 461, 0, 463,
	464, 0, 854, 465, 466, 467, 468, 469, 471, 955,
	472, 0, 901, 473, 474, 475, 524, 933, 983, 0,
	477, 476, 527, 1412, 0, 0, 0, 478, 479, 528,
	480, 481, 482, 851, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 847, 848, 0, 0,
	0, 0, 0, 0, 0, 876, 0, 0, 843, 874,
	906, 864, 865, 866, 862, 863, 875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 957,
	880, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	921, 900, 932, 234, 890, 931, 930, 0, 235, 892,
	891, 238, 239, 240, 882, 956, 241, 993, 994, 490,
	0, 242, 963, 0, 944, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 966, 258, 259, 947, 945,
	946, 953, 949, 948, 952, 260, 261, 262, 263, 935,
	265, 928, 927, 853, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 926, 272, 0, 273, 0, 274, 275,
	0, 276, 859, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 984, 985, 871, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 925, 923, 924, 0, 292, 0,
	293, 0, 0, 967, 294, 295, 0, 296, 991, 0,
	881, 297, 0, 298, 299, 300, 301, 958, 959, 962,
	354, 969, 302, 303, 0, 304, 305, 902, 0, 0,
	218, 306, 308, 315, 0, 968, 309, 914, 905, 916,
	918, 919, 920, 915, 0, 907, 0, 316, 970, 960,
	971, 317, 318, 319, 972, 940, 941, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 992,
	973, 330, 331, 974, 0, 332, 333, 951, 950, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 894, 344, 975, 347, 348, 351, 350, 976, 349,
	850, 219, 977, 352, 872, 961, 353, 929, 355, 356,
	0, 903, 358, 904, 855, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 978, 366, 979, 986, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	987, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 922, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 980, 403, 404, 405, 406, 860,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 895, 896, 898, 899, 420, 426, 427,
	428, 954, 429, 409, 410, 430, 431, 981, 432, 433,
	917, 897, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 965, 441, 442, 443, 988, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 893, 0, 455,
	936, 937, 938, 939, 0, 462, 0, 456, 457, 989,
	458, 990, 870, 459, 460, 461, 0, 463, 464, 0,
	854, 465, 466, 467, 468, 469, 471, 955, 472, 0,
	901, 473, 474, 475, 524, 933, 983, 0, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 851, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 847, 848, 906, 864, 865, 866,
	862, 863, 875, 876, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 957, 880, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 921, 900, 932, 234,
	890, 931, 930, 0, 235, 892, 891, 238, 239, 240,
	882, 956, 241, 993, 994, 490, 0, 242, 963, 0,
	944, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 3617, 256, 0,
	257, 966, 258, 259, 947, 945, 946, 953, 949, 948,
	952, 260, 261, 262, 263, 935, 265, 928, 927, 853,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 926,
	272, 0, 273, 0, 274, 275, 0, 276, 859, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 984, 985,
	871, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	925, 923, 924, 0, 292, 0, 293, 0, 0, 967,
	294, 295, 0, 296, 991, 0, 881, 297, 0, 298,
	299, 300, 301, 958, 959, 962, 354, 969, 302, 303,
	0, 304, 305, 902, 0, 0, 218, 306, 308, 315,
	0, 968, 309, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 316, 970, 960, 971, 317, 318, 319,
	972, 940, 941, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 992, 973, 330, 331, 974,
	0, 332, 333, 951, 950, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 894, 344, 975,
	347, 348, 351, 350, 976, 349, 850, 219, 977, 352,
	872, 961, 353, 929, 355, 356, 0, 903, 358, 904,
	855, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	978, 366, 979, 986, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 987, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	922, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	980, 403, 404, 405, 406, 860, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 895,
	896, 898, 899, 420, 426, 427, 428, 954, 429, 409,
	410, 430, 431, 981, 432, 433, 917, 897, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 965, 441, 442,
	443, 988, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 893, 0, 455, 936, 937, 938, 939,
	0, 462, 0, 456, 457, 989, 458, 990, 870, 459,
	460, 461, 0, 463, 464, 0, 854, 465, 466, 467,
	468, 469, 471, 955, 472, 0, 901, 473, 474, 475,
	524, 933, 983, 0, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 851, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	847, 848, 906, 864, 865, 866, 862, 863, 875, 876,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 957, 880, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 921, 900, 932, 234, 890, 931, 930, 0,
	235, 892, 891, 238, 239, 240, 882, 956, 241, 993,
	994, 490, 0, 242, 963, 0, 944, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 3453, 256, 0, 257, 966, 258, 259,
	947, 945, 946, 953, 949, 948, 952, 260, 261, 262,
	263, 935, 265, 928, 927, 853, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 926, 272, 0, 273, 0,
	274, 275, 0, 276, 859, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 984, 985, 871, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 925, 923, 924, 0,
	292, 0, 293, 0, 0, 967, 294, 295, 0, 296,
	991, 0, 881, 297, 0, 298, 299, 300, 301, 958,
	959, 962, 354, 969, 302, 303, 0, 304, 305, 902,
	0, 0, 218, 306, 308, 315, 0, 968, 309, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 316,
	970, 960, 971, 317, 318, 319, 972, 940, 941, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 992, 973, 330, 331, 974, 0, 332, 333, 951,
	950, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 894, 344, 975, 347, 348, 351, 350,
	976, 349, 850, 219, 977, 352, 872, 961, 353, 929,
	355, 356, 0, 903, 358, 904, 855, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 978, 366, 979, 986,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 987, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 922, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 980, 403, 404, 405,
	406, 860, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 895, 896, 898, 899, 420,
	426, 427, 428, 954, 429, 409, 410, 430, 431, 981,
	432, 433, 917, 897, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 965, 441, 442, 443, 988, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 893,
	0, 455, 936, 937, 938, 939, 0, 462, 0, 456,
	457, 989, 458, 990, 870, 459, 460, 461, 0, 463,
	464, 0, 854, 465, 466, 467, 468, 469, 471, 955,
	472, 0, 901, 473, 474, 475, 524, 933, 983, 0,
	477, 476, 527, 0, 0, 0, 0, 478, 479, 528,
	480, 481, 482, 851, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 847, 848, 906, 864,
	865, 866, 862, 863, 875, 876, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 957, 880, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 921, 900,
	932, 234, 890, 931, 930, 0, 235, 892, 891, 238,
	239, 240, 882, 956, 241, 993, 994, 490, 0, 242,
	963, 0, 944, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 966, 258, 259, 947, 945, 946, 953,
	949, 948, 952, 260, 261, 262, 263, 935, 265, 928,
	927, 853, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 926, 272, 0, 273, 0, 274, 275, 0, 276,
	859, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	984, 985, 871, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 925, 923, 924, 0, 292, 0, 293, 0,
	0, 967, 294, 295, 0, 296, 991, 0, 881, 297,
	0, 298, 299, 300, 301, 958, 959, 962, 354, 969,
	302, 303, 0, 304, 305, 902, 0, 0, 218, 306,
	308, 315, 0, 968, 309, 914, 905, 916, 918, 919,
	920, 915, 0, 907, 0, 316, 970, 960, 971, 317,
	318, 319, 972, 940, 941, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 992, 973, 330,
	331, 974, 0, 332, 333, 951, 950, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 894,
	344, 975, 347, 348, 351, 350, 976, 349, 850, 3171,
	977, 352, 872, 961, 353, 929, 355, 356, 0, 903,
	358, 904, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 978, 366, 979, 986, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 987, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 922, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 980, 403, 404, 405, 406, 860, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 895, 896, 898, 899, 420, 426, 427, 428, 954,
	429, 409, 410, 430, 431, 981, 432, 433, 917, 897,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 965,
	441, 442, 443, 988, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 893, 0, 455, 936, 937,
	938, 939, 0, 462, 0, 456, 457, 989, 458, 990,
	870, 459, 460, 461, 0, 463, 464, 0, 854, 465,
	466, 467, 468, 469, 471, 955, 472, 0, 901, 473,
	474, 475, 524, 933, 983, 0, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 851,
	0, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	0, 0, 847, 848, 1618, 0, 0, 0, 0, 0,
	0, 876, 0, 0, 0, 874, 906, 864, 865, 866,
	862, 863, 875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 957, 880, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 921, 900, 932, 234,
	890, 931, 930, 0, 235, 892, 891, 238, 239, 240,
	882, 956, 241, 993, 994, 490, 0, 242, 963, 0,
	944, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 966, 258, 259, 947, 945, 946, 953, 949, 948,
	952, 260, 261, 262, 263, 935, 265, 928, 927, 853,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 926,
	272, 0, 273, 0, 274, 275, 0, 276, 859, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 984, 985,
	871, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	925, 923, 924, 0, 292, 0, 293, 0, 0, 967,
	294, 295, 0, 296, 991, 0, 881, 297, 0, 298,
	299, 300, 301, 958, 959, 962, 354, 969, 302, 303,
	0, 304, 305, 902, 0, 0, 218, 306, 308, 315,
	0, 968, 309, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 316, 970, 960, 971, 317, 318, 319,
	972, 940, 941, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 992, 973, 330, 331, 974,
	0, 332, 333, 951, 950, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 894, 344, 975,
	347, 348, 351, 350, 976, 349, 850, 219, 977, 352,
	872, 961, 353, 929, 355, 356, 0, 903, 358, 904,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	978, 366, 979, 986, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 987, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	922, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	980, 403, 404, 405, 406, 860, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 895,
	896, 898, 899, 420, 426, 427, 428, 954, 429, 409,
	410, 430, 431, 981, 432, 433, 917, 897, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 965, 441, 442,
	443, 988, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 893, 0, 455, 936, 937, 938, 939,
	0, 462, 0, 456, 457, 989, 458, 990, 870, 459,
	460, 461, 0, 463, 464, 0, 854, 465, 466, 467,
	468, 469, 471, 955, 472, 0, 901, 473, 474, 475,
	524, 933, 983, 2973, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 851, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	847, 848, 906, 864, 865, 866, 862, 863, 875, 876,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 957, 880, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 921, 900, 932, 234, 890, 931, 930, 0,
	235, 892, 891, 238, 239, 240, 882, 956, 241, 993,
	994, 490, 0, 242, 963, 0, 944, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 966, 258, 259,
	947, 945, 946, 953, 949, 948, 952, 260, 261, 262,
	263, 935, 265, 928, 927, 853, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 926, 272, 0, 273, 0,
	274, 275, 0, 276, 859, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 984, 985, 871, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 925, 923, 924, 0,
	292, 0, 293, 0, 0, 967, 294, 295, 0, 296,
	991, 0, 881, 297, 0, 298, 299, 300, 301, 958,
	959, 962, 354, 969, 302, 303, 0, 304, 305, 902,
	0, 0, 2039, 306, 308, 315, 0, 968, 309, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 316,
	970, 960, 971, 317, 318, 319, 972, 940, 941, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 992, 973, 330, 331, 974, 0, 332, 333, 951,
	950, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 894, 344, 975, 347, 348, 351, 350,
	976, 349, 850, 219, 977, 352, 872, 961, 353, 929,
	355, 356, 0, 903, 358, 904, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 978, 366, 979, 986,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 987, 377, 513, 378, 2038, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 922, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 980, 403, 404, 405,
	406, 860, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 895, 896, 898, 899, 420,
	426, 427, 428, 954, 429, 409, 410, 430, 431, 981,
	432, 433, 917, 897, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 965, 441, 442, 443, 988, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 893,
	0, 455, 936, 937, 938, 939, 0, 462, 0, 456,
	457, 989, 458, 990, 870, 459, 460, 461, 0, 463,
	464, 0, 854, 465, 466, 467, 468, 469, 471, 955,
	472, 0, 901, 473, 474, 475, 524, 933, 983, 0,
	477, 476, 527, 0, 0, 0, 0, 478, 479, 528,
	480, 481, 482, 851, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 847, 848, 906, 864,
	865, 866, 862, 863, 875, 876, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 957, 880, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 921, 900,
	932, 234, 890, 931, 930, 0, 235, 892, 891, 238,
	239, 240, 882, 956, 241, 993, 994, 490, 0, 242,
	963, 0, 944, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 966, 258, 259, 947, 945, 946, 953,
	949, 948, 952, 260, 261, 262, 263, 935, 265, 928,
	927, 853, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 926, 272, 0, 273, 0, 274, 275, 0, 276,
	859, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	984, 985, 871, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 925, 923, 924, 0, 292, 0, 293, 0,
	0, 967, 294, 295, 0, 296, 991, 0, 881, 297,
	0, 298, 299, 300, 301, 958, 959, 962, 354, 969,
	302, 303, 0, 304, 305, 902, 0, 0, 218, 306,
	308, 315, 0, 968, 309, 914, 905, 916, 918, 919,
	920, 915, 0, 907, 0, 316, 970, 960, 971, 317,
	318, 319, 972, 940, 941, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 992, 973, 330,
	331, 974, 0, 332, 333, 951, 950, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 894,
	344, 975, 347, 348, 351, 350, 976, 349, 850, 219,
	977, 352, 872, 961, 353, 929, 355, 356, 0, 903,
	358, 904, 855, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 978, 366, 979, 986, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 987, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 922, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 980, 403, 404, 405, 406, 860, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 895, 896, 898, 899, 420, 426, 427, 428, 954,
	429, 409, 410, 430, 431, 981, 432, 433, 917, 897,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 965,
	441, 442, 443, 988, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 893, 0, 455, 936, 937,
	938, 939, 0, 462, 0, 456, 457, 989, 458, 990,
	870, 459, 460, 461, 0, 463, 464, 0, 854, 465,
	466, 467, 468, 469, 471, 955, 472, 0, 901, 473,
	474, 475, 524, 933, 983, 0, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 851,
	0, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	0, 0, 847, 848, 906, 864, 865, 866, 862, 863,
	875, 876, 0, 0, 0, 874, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 957, 880, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 921, 900, 932, 234, 890, 931,
	930, 0, 235, 892, 891, 238, 239, 240, 882, 956,
	241, 993, 994, 490, 0, 242, 963, 0, 944, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 966,
	258, 259, 947, 945, 946, 953, 949, 948, 952, 260,
	261, 262, 263, 935, 265, 928, 927, 853, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 926, 272, 0,
	273, 0, 274, 275, 0, 276, 859, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 984, 985, 871, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 925, 923,
	924, 0, 292, 0, 293, 0, 0, 967, 294, 295,
	0, 296, 991, 0, 881, 297, 0, 298, 299, 300,
	301, 958, 959, 962, 354, 969, 302, 303, 0, 304,
	305, 902, 0, 0, 218, 306, 308, 315, 0, 968,
	309, 914, 905, 916, 918, 919, 920, 915, 0, 907,
	0, 316, 970, 960, 971, 317, 318, 319, 972, 940,
	941, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 992, 973, 330, 331, 974, 0, 332,
	333, 951, 950, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 894, 344, 975, 347, 348,
	351, 350, 976, 349, 850, 219, 977, 352, 872, 961,
	353, 929, 355, 356, 0, 903, 358, 904, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 978, 366,
	979, 986, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 987, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 922, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 980, 403,
	404, 405, 406, 860, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 895, 896, 898,
	899, 420, 426, 427, 428, 954, 429, 409, 410, 430,
	431, 981, 432, 433, 917, 897, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 965, 441, 442, 443, 988,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 893, 0, 455, 936, 937, 938, 939, 0, 462,
	0, 456, 457, 989, 458, 990, 870, 459, 460, 461,
	0, 463, 464, 0, 854, 465, 466, 467, 468, 469,
	471, 955, 472, 0, 901, 473, 474, 475, 524, 933,
	983, 0, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 851, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 847, 848,
	1618, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	0, 874, 906, 864, 865, 866, 862, 863, 875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 957, 880, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 921, 900, 932, 234, 890, 931, 930, 0,
	235, 892, 891, 238, 239, 240, 882, 956, 241, 993,
	994, 490, 0, 242, 963, 0, 944, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 966, 258, 259,
	947, 945, 946, 953, 949, 948, 952, 260, 261, 262,
	263, 935, 265, 928, 927, 853, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 926, 272, 0, 273, 0,
	274, 275, 0, 276, 859, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 984, 985, 871, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 925, 923, 924, 0,
	292, 0, 293, 0, 2224, 967, 294, 295, 0, 296,
	991, 0, 881, 297, 0, 298, 299, 300, 301, 958,
	959, 962, 354, 969, 302, 303, 0, 304, 305, 902,
	0, 0, 218, 306, 308, 315, 0, 968, 309, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 316,
	970, 960, 971, 317, 318, 319, 972, 940, 941, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 992, 973, 330, 331, 974, 0, 332, 333, 951,
	950, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 894, 344, 975, 347, 348, 351, 350,
	976, 349, 850, 219, 977, 352, 872, 961, 353, 929,
	355, 356, 0, 903, 358, 904, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 978, 366, 979, 986,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 987, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 922, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 980, 403, 404, 405,
	406, 860, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 895, 896, 898, 899, 420,
	426, 427, 428, 954, 429, 409, 410, 430, 431, 981,
	432, 433, 917, 897, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 965, 441, 442, 443, 988, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 893,
	0, 455, 936, 937, 938, 939, 0, 462, 0, 456,
	457, 989, 458, 990, 870, 459, 460, 461, 0, 463,
	464, 0, 854, 465, 466, 467, 468, 469, 471, 955,
	472, 0, 901, 473, 474, 475, 524, 933, 983, 0,
	477, 476, 527, 0, 0, 0, 0, 478, 479, 528,
	480, 481, 482, 851, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 847, 848, 906, 864,
	865, 866, 862, 863, 875, 876, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 957, 880, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 921, 900,
	932, 234, 890, 931, 930, 0, 235, 892, 891, 238,
	239, 240, 882, 956, 241, 993, 994, 490, 0, 242,
	963, 0, 944, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 966, 258, 259, 947, 945, 946, 953,
	949, 948, 952, 260, 261, 262, 263, 935, 265, 928,
	927, 853, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 926, 272, 0, 273, 0, 274, 275, 0, 276,
	859, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	984, 985, 871, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 925, 923, 924, 0, 292, 0, 293, 0,
	0, 967, 294, 295, 0, 296, 991, 0, 881, 297,
	0, 298, 299, 300, 301, 958, 959, 962, 354, 969,
	302, 303, 0, 304, 305, 902, 0, 0, 218, 306,
	308, 315, 0, 968, 309, 914, 905, 916, 918, 919,
	920, 915, 0, 907, 0, 316, 970, 960, 971, 317,
	318, 319, 972, 940, 941, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 992, 973, 330,
	331, 974, 0, 332, 333, 951, 950, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 894,
	344, 975, 347, 348, 351, 350, 976, 349, 850, 219,
	977, 352, 872, 961, 353, 929, 355, 356, 0, 903,
	358, 904, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 978, 366, 979, 986, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 987, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 922, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 980, 403, 404, 405, 406, 860, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 895, 896, 898, 899, 420, 426, 427, 428, 954,
	429, 409, 410, 430, 431, 981, 432, 433, 917, 897,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 965,
	441, 442, 443, 988, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 893, 0, 455, 936, 937,
	938, 939, 0, 462, 0, 456, 457, 989, 458, 990,
	870, 459, 460, 461, 0, 463, 464, 0, 854, 465,
	466, 467, 468, 469, 471, 955, 472, 0, 901, 473,
	474, 475, 524, 933, 983, 0, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 851,
	0, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	0, 0, 847, 848, 0, 0, 0, 0, 0, 0,
	0, 876, 1552, 0, 2229, 874, 906, 864, 865, 866,
	862, 863, 875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 957, 880, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 921, 900, 932, 234,
	890, 931, 930, 0, 235, 892, 891, 238, 239, 240,
	882, 956, 241, 993, 994, 490, 0, 242, 963, 0,
	944, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 966, 258, 259, 947, 945, 946, 953, 949, 948,
	952, 260, 261, 262, 263, 935, 265, 928, 927, 853,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 926,
	272, 0, 273, 0, 274, 275, 0, 276, 859, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 984, 985,
	871, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	925, 923, 924, 0, 292, 0, 293, 0, 0, 967,
	294, 295, 0, 296, 991, 0, 881, 297, 0, 298,
	299, 300, 301, 958, 959, 962, 354, 969, 302, 303,
	0, 304, 305, 902, 0, 0, 218, 306, 308, 315,
	0, 968, 309, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 316, 970, 960, 971, 317, 318, 319,
	972, 940, 941, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 992, 973, 330, 331, 974,
	0, 332, 333, 951, 950, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 894, 344, 975,
	347, 348, 351, 350, 976, 349, 850, 219, 977, 352,
	872, 961, 353, 929, 355, 356, 0, 903, 358, 904,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	978, 366, 979, 986, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 987, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	922, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	980, 403, 404, 405, 406, 860, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 895,
	896, 898, 899, 420, 426, 427, 428, 954, 429, 409,
	410, 430, 431, 981, 432, 433, 917, 897, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 965, 441, 442,
	443, 988, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 893, 0, 455, 936, 937, 938, 939,
	0, 462, 0, 456, 457, 989, 458, 990, 870, 459,
	460, 461, 0, 463, 464, 0, 854, 465, 466, 467,
	468, 469, 471, 955, 472, 0, 901, 473, 474, 475,
	524, 933, 983, 0, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 851, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	847, 848, 0, 0, 0, 0, 0, 0, 0, 876,
	0, 0, 2227, 874, 906, 864, 865, 866, 862, 863,
	875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 957, 880, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 921, 900, 932, 234, 890, 931,
	930, 0, 235, 892, 891, 238, 239, 240, 882, 956,
	241, 993, 994, 490, 0, 242, 963, 0, 944, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 966,
	258, 259, 947, 945, 946, 953, 949, 948, 952, 260,
	261, 262, 263, 935, 265, 928, 927, 853, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 926, 272, 0,
	273, 0, 274, 275, 0, 276, 859, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 984, 985, 871, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 925, 923,
	924, 0, 292, 0, 293, 0, 0, 967, 294, 295,
	0, 296, 991, 0, 881, 297, 0, 298, 299, 300,
	301, 958, 959, 962, 354, 969, 302, 303, 0, 304,
	305, 902, 0, 0, 218, 306, 308, 315, 0, 968,
	309, 914, 905, 916, 918, 919, 920, 915, 0, 907,
	0, 316, 970, 960, 971, 317, 318, 319, 972, 940,
	941, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 992, 973, 330, 331, 974, 0, 332,
	333, 951, 950, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 894, 344, 975, 347, 348,
	351, 350, 976, 349, 850, 219, 977, 352, 872, 961,
	353, 929, 355, 356, 0, 903, 358, 904, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 978, 366,
	979, 986, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 987, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 922, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 980, 403,
	404, 405, 406, 860, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 895, 896, 898,
	899, 420, 426, 427, 428, 954, 429, 409, 410, 430,
	431, 981, 432, 433, 917, 897, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 965, 441, 442, 443, 988,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 893, 0, 455, 936, 937, 938, 939, 0, 462,
	0, 456, 457, 989, 458, 990, 870, 459, 460, 461,
	0, 463, 464, 0, 854, 465, 466, 467, 468, 469,
	471, 955, 472, 0, 901, 473, 474, 475, 524, 933,
	983, 0, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 851, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 847, 848,
	0, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	2215, 874, 906, 864, 865, 866, 862, 863, 875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 957, 880, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 921, 900, 932, 234, 890, 931, 930, 0,
	235, 892, 891, 238, 239, 240, 882, 956, 241, 993,
	994, 490, 0, 242, 963, 0, 944, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 966, 258, 259,
	947, 945, 946, 953, 949, 948, 952, 260, 261, 262,
	263, 935, 265, 928, 927, 853, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 926, 272, 0, 273, 0,
	274, 275, 0, 276, 859, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 984, 985, 871, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 925, 923, 924, 0,
	292, 0, 293, 0, 0, 967, 294, 295, 0, 296,
	991, 0, 881, 297, 0, 298, 299, 300, 301, 958,
	959, 962, 354, 969, 302, 303, 0, 304, 305, 902,
	0, 0, 218, 306, 308, 315, 0, 968, 309, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 316,
	970, 960, 971, 317, 318, 319, 972, 940, 941, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 992, 973, 330, 331, 974, 0, 332, 333, 951,
	950, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 894, 344, 975, 347, 348, 351, 350,
	976, 349, 850, 219, 977, 352, 872, 961, 353, 929,
	355, 356, 0, 903, 358, 904, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 978, 366, 979, 986,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 987, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 922, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 980, 403, 404, 405,
	406, 860, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 895, 896, 898, 899, 420,
	426, 427, 428, 954, 429, 409, 410, 430, 431, 981,
	432, 433, 917, 897, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 965, 441, 442, 443, 988, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 893,
	0, 455, 936, 937, 938, 939, 0, 462, 0, 456,
	457, 989, 458, 990, 870, 459, 460, 461, 0, 463,
	464, 0, 854, 465, 466, 467, 468, 469, 471, 955,
	472, 0, 901, 473, 474, 475, 524, 933, 983, 0,
	477, 476, 527, 0, 0, 0, 0, 478, 479, 528,
	480, 481, 482, 851, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 847, 848, 0, 0,
	0, 0, 0, 0, 0, 876, 0, 0, 2204, 874,
	906, 864, 865, 866, 862, 863, 875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 957,
	880, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	921, 900, 932, 234, 890, 931, 930, 0, 235, 892,
	891, 238, 239, 240, 882, 956, 241, 993, 994, 490,
	0, 242, 963, 0, 944, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 966, 258, 259, 947, 945,
	946, 953, 949, 948, 952, 260, 261, 262, 263, 935,
	265, 928, 927, 853, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 926, 272, 0, 273, 0, 274, 275,
	0, 276, 859, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 984, 985, 871, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 925, 923, 924, 0, 292, 0,
	293, 0, 0, 967, 294, 295, 0, 296, 991, 0,
	881, 297, 0, 298, 299, 300, 301, 958, 959, 962,
	354, 969, 302, 303, 0, 304, 305, 902, 0, 0,
	218, 306, 308, 315, 0, 968, 309, 914, 905, 916,
	918, 919, 920, 915, 0, 907, 0, 316, 970, 960,
	971, 317, 318, 319, 972, 940, 941, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 992,
	973, 330, 331, 974, 0, 332, 333, 951, 950, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 894, 344, 975, 347, 348, 351, 350, 976, 349,
	850, 219, 977, 352, 872, 961, 353, 929, 355, 356,
	0, 903, 358, 904, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 978, 366, 979, 986, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	987, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 922, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 980, 403, 404, 405, 406, 860,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 895, 896, 898, 899, 420, 426, 427,
	428, 954, 429, 409, 410, 430, 431, 981, 432, 433,
	917, 897, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 965, 441, 442, 443, 988, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 893, 0, 455,
	936, 937, 938, 939, 0, 462, 0, 456, 457, 989,
	458, 990, 870, 459, 460, 461, 0, 463, 464, 0,
	854, 465, 466, 467, 468, 469, 471, 955, 472, 0,
	901, 473, 474, 475, 524, 933, 983, 0, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 851, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 847, 848, 0, 0, 0, 0,
	0, 0, 0, 876, 0, 0, 2202, 874, 2193, 2200,
	865, 866, 862, 863, 875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 957, 880, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 921, 900,
	932, 234, 890, 931, 930, 0, 235, 892, 891, 238,
	239, 240, 882, 956, 241, 993, 994, 490, 0, 242,
	963, 0, 944, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 966, 258, 259, 947, 945, 946, 953,
	949, 948, 952, 260, 261, 262, 263, 935, 2196, 928,
	927, 853, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 926, 272, 0, 273, 0, 274, 275, 0, 276,
	859, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	984, 985, 871, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 925, 923, 924, 0, 292, 0, 293, 0,
	0, 967, 294, 295, 0, 296, 991, 0, 881, 297,
	0, 298, 299, 300, 2197, 958, 959, 962, 354, 969,
	302, 303, 0, 304, 305, 902, 0, 0, 218, 306,
	308, 315, 0, 968, 309, 914, 905, 916, 918, 919,
	920, 915, 0, 907, 0, 316, 970, 960, 971, 317,
	318, 319, 972, 940, 941, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 992, 973, 330,
	331, 974, 0, 332, 333, 951, 950, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 2198, 2195, 345, 894,
	344, 975, 347, 348, 351, 350, 976, 349, 850, 219,
	977, 352, 872, 961, 353, 929, 355, 356, 0, 903,
	358, 904, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 978, 366, 979, 986, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 987, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 922, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 980, 403, 404, 405, 406, 860, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 2199, 0, 424,
	425, 895, 896, 898, 899, 420, 426, 427, 428, 954,
	429, 409, 410, 430, 431, 981, 432, 433, 917, 897,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 965,
	441, 442, 443, 988, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 893, 0, 455, 936, 937,
	938, 939, 0, 462, 0, 456, 457, 989, 458, 990,
	870, 459, 460, 461, 0, 463, 464, 0, 854, 465,
	466, 467, 468, 469, 471, 955, 472, 0, 901, 473,
	474, 475, 524, 933, 983, 0, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 2194, 482, 851,
	0, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	0, 0, 847, 848, 0, 0, 0, 0, 0, 0,
	0, 876, 0, 0, 2190, 874, 2193, 2200, 865, 866,
	862, 863, 875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 957, 880, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 921, 900, 932, 234,
	890, 931, 930, 0, 235, 892, 891, 238, 239, 240,
	882, 956, 241, 993, 994, 490, 0, 242, 963, 0,
	944, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 966, 258, 259, 947, 945, 946, 953, 949, 948,
	952, 260, 261, 262, 263, 935, 2196, 928, 927, 853,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 926,
	272, 0, 273, 0, 274, 275, 0, 276, 859, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 984, 985,
	871, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	925, 923, 924, 0, 292, 0, 293, 0, 0, 967,
	294, 295, 0, 296, 991, 0, 881, 297, 0, 298,
	299, 300, 2197, 958, 959, 962, 354, 969, 302, 303,
	0, 304, 305, 902, 0, 0, 218, 306, 308, 315,
	0, 968, 309, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 316, 970, 960, 971, 317, 318, 319,
	972, 940, 941, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 992, 973, 330, 331, 974,
	0, 332, 333, 951, 950, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 2198, 2195, 345, 894, 344, 975,
	347, 348, 351, 350, 976, 349, 850, 219, 977, 352,
	872, 961, 353, 929, 355, 356, 0, 903, 358, 904,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	978, 366, 979, 986, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 987, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	922, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	980, 403, 404, 405, 406, 860, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 2199, 0, 424, 425, 895,
	896, 898, 899, 420, 426, 427, 428, 954, 429, 409,
	410, 430, 431, 981, 432, 433, 917, 897, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 965, 441, 442,
	443, 988, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 893, 0, 455, 936, 937, 938, 939,
	0, 462, 0, 456, 457, 989, 458, 990, 870, 459,
	460, 461, 0, 463, 464, 0, 854, 465, 466, 467,
	468, 469, 471, 955, 472, 0, 901, 473, 474, 475,
	524, 933, 983, 0, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 2194, 482, 851, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	847, 848, 906, 864, 865, 866, 862, 863, 875, 876,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 957, 880, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 921, 900, 932, 234, 890, 931, 930, 0,
	235, 892, 891, 238, 239, 240, 882, 956, 241, 993,
	994, 490, 0, 242, 963, 0, 944, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 966, 258, 259,
	947, 945, 946, 953, 949, 948, 952, 260, 261, 262,
	263, 935, 265, 928, 927, 853, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 926, 272, 0, 273, 0,
	274, 275, 0, 276, 859, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 984, 985, 871, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 925, 923, 924, 0,
	292, 0, 293, 0, 0, 967, 294, 295, 0, 296,
	991, 0, 881, 297, 0, 298, 299, 300, 301, 958,
	959, 962, 354, 969, 302, 303, 0, 304, 305, 902,
	0, 0, 218, 306, 308, 315, 0, 968, 309, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 316,
	970, 960, 971, 317, 318, 319, 972, 940, 941, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 992, 973, 330, 331, 974, 0, 332, 333, 951,
	950, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 894, 344, 975, 347, 348, 351, 350,
	976, 349, 850, 219, 977, 352, 872, 961, 353, 929,
	355, 356, 0, 903, 358, 904, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 978, 366, 979, 986,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 987, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 922, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 980, 403, 404, 405,
	406, 860, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 895, 896, 898, 899, 420,
	426, 427, 428, 954, 429, 409, 410, 430, 431, 981,
	432, 433, 917, 897, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 965, 441, 442, 443, 988, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 893,
	0, 455, 936, 937, 938, 939, 0, 462, 0, 456,
	457, 989, 458, 990, 870, 459, 460, 461, 0, 463,
	464, 0, 854, 465, 466, 467, 468, 469, 471, 955,
	472, 0, 901, 473, 474, 475, 524, 933, 983, 0,
	477, 476, 527, 0, 0, 0, 0, 478, 479, 528,
	480, 481, 482, 851, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 847, 848, 0, 0,
	0, 0, 0, 1560, 0, 876, 0, 0, 0, 874,
	906, 864, 865, 866, 862, 863, 875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 2018, 225, 0, 0, 0, 0, 0, 957,
	880, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	921, 900, 932, 234, 890, 931, 930, 0, 235, 892,
	891, 238, 239, 240, 882, 956, 241, 993, 994, 490,
	0, 242, 963, 0, 944, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 966, 258, 259, 947, 945,
	946, 953, 949, 948, 952, 260, 261, 262, 263, 935,
	265, 928, 927, 853, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 926, 272, 0, 273, 0, 274, 275,
	0, 276, 859, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 984, 985, 871, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 925, 923, 924, 0, 292, 0,
	293, 0, 0, 967, 294, 295, 0, 296, 991, 0,
	881, 297, 0, 298, 299, 300, 301, 958, 959, 962,
	354, 969, 302, 303, 0, 304, 305, 902, 0, 0,
	218, 306, 308, 315, 0, 968, 309, 914, 905, 916,
	918, 919, 920, 915, 0, 907, 0, 316, 970, 960,
	971, 317, 318, 319, 972, 940, 941, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 992,
	973, 330, 331, 974, 0, 332, 333, 951, 950, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 894, 344, 975, 347, 348, 351, 350, 976, 349,
	850, 219, 977, 352, 872, 961, 353, 929, 355, 356,
	0, 903, 358, 904, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 978, 366, 979, 986, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	987, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 922, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 980, 403, 404, 405, 406, 860,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 895, 896, 898, 899, 420, 426, 427,
	428, 954, 429, 409, 410, 430, 431, 981, 432, 433,
	917, 897, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 965, 441, 442, 443, 988, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 893, 0, 455,
	936, 937, 938, 939, 0, 462, 0, 456, 457, 989,
	458, 990, 870, 459, 460, 461, 0, 463, 464, 0,
	854, 465, 466, 467, 468, 469, 471, 955, 472, 0,
	901, 473, 474, 475, 524, 933, 983, 0, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 851, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 847, 848, 0, 0, 0, 0,
	0, 0, 0, 876, 0, 0, 1232, 874, 906, 864,
	865, 866, 862, 863, 875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 957, 880, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 921, 900,
	932, 234, 890, 931, 930, 0, 235, 892, 891, 238,
	239, 240, 882, 956, 241, 993, 994, 490, 0, 242,
	963, 0, 944, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 966, 258, 259, 947, 945, 946, 953,
	949, 948, 952, 260, 261, 262, 263, 935, 265, 928,
	927, 853, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 926, 272, 0, 273, 0, 274, 275, 0, 276,
	859, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	984, 985, 871, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 925, 923, 924, 0, 292, 0, 293, 0,
	0, 967, 294, 295, 0, 296, 991, 0, 881, 297,
	0, 298, 299, 300, 301, 1231, 959, 962, 354, 969,
	302, 303, 0, 304, 305, 902, 0, 0, 218, 306,
	308, 315, 0, 968, 309, 914, 905, 916, 918, 919,
	920, 915, 0, 907, 0, 316, 970, 960, 971, 317,
	318, 319, 972, 940, 941, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 992, 973, 330,
	331, 974, 0, 332, 333, 951, 950, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 894,
	344, 975, 347, 348, 351, 350, 976, 349, 850, 219,
	977, 352, 872, 961, 353, 929, 355, 356, 0, 903,
	358, 904, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 978, 366, 979, 986, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 987, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 922, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 980, 403, 404, 405, 406, 860, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 895, 896, 898, 899, 420, 426, 427, 428, 954,
	429, 409, 410, 430, 431, 981, 432, 433, 917, 897,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 965,
	441, 442, 443, 988, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 893, 0, 455, 936, 937,
	938, 939, 0, 462, 0, 456, 457, 989, 458, 990,
	870, 459, 460, 461, 0, 463, 464, 0, 854, 465,
	466, 467, 468, 469, 471, 955, 472, 0, 901, 473,
	474, 475, 524, 933, 983, 0, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 851,
	0, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	0, 0, 847, 848, 0, 0, 0, 0, 0, 0,
	0, 876, 0, 0, 1226, 874, 906, 864, 865, 866,
	862, 863, 875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 957, 880, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 921, 900, 932, 234,
	890, 931, 930, 0, 235, 892, 891, 238, 239, 240,
	882, 956, 241, 993, 994, 490, 0, 242, 963, 0,
	944, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 966, 258, 259, 947, 945, 946, 953, 949, 948,
	952, 260, 261, 262, 263, 935, 265, 928, 927, 853,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 926,
	272, 0, 273, 0, 274, 275, 0, 276, 859, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 984, 985,
	871, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	925, 923, 924, 0, 292, 0, 293, 0, 0, 967,
	294, 295, 0, 296, 991, 0, 881, 297, 0, 298,
	299, 300, 301, 1225, 959, 962, 354, 969, 302, 303,
	0, 304, 305, 902, 0, 0, 218, 306, 308, 315,
	0, 968, 309, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 316, 970, 960, 971, 317, 318, 319,
	972, 940, 941, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 992, 973, 330, 331, 974,
	0, 332, 333, 951, 950, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 894, 344, 975,
	347, 348, 351, 350, 976, 349, 850, 219, 977, 352,
	872, 961, 353, 929, 355, 356, 0, 903, 358, 904,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	978, 366, 979, 986, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 987, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	922, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	980, 403, 404, 405, 406, 860, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 895,
	896, 898, 899, 420, 426, 427, 428, 954, 429, 409,
	410, 430, 431, 981, 432, 433, 917, 897, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 965, 441, 442,
	443, 988, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 893, 0, 455, 936, 937, 938, 939,
	0, 462, 0, 456, 457, 989, 458, 990, 870, 459,
	460, 461, 0, 463, 464, 0, 854, 465, 466, 467,
	468, 469, 471, 955, 472, 0, 901, 473, 474, 475,
	524, 933, 983, 0, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 851, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	847, 848, 0, 0, 0, 0, 0, 0, 0, 876,
	0, 0, 1221, 874, 906, 864, 865, 866, 862, 863,
	875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 957, 880, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 921, 900, 932, 234, 890, 931,
	930, 0, 235, 892, 891, 238, 239, 240, 882, 956,
	241, 993, 994, 490, 0, 242, 963, 0, 944, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 966,
	258, 259, 947, 945, 946, 953, 949, 948, 952, 260,
	261, 262, 263, 935, 265, 928, 927, 853, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 926, 272, 0,
	273, 0, 274, 275, 0, 276, 859, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 984, 985, 871, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 925, 923,
	924, 0, 292, 0, 293, 0, 0, 967, 294, 295,
	0, 296, 991, 0, 881, 297, 0, 298, 299, 300,
	301, 958, 959, 962, 354, 969, 302, 303, 0, 304,
	305, 902, 0, 0, 218, 306, 308, 315, 0, 968,
	309, 914, 905, 916, 918, 919, 920, 915, 0, 907,
	0, 316, 970, 960, 971, 317, 318, 319, 972, 940,
	941, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 992, 973, 330, 331, 974, 0, 332,
	333, 951, 950, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 894, 344, 975, 347, 348,
	351, 350, 976, 349, 850, 219, 977, 352, 872, 961,
	353, 929, 355, 356, 0, 903, 358, 904, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 978, 366,
	979, 986, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 987, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 922, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 980, 403,
	404, 405, 406, 860, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 895, 896, 898,
	899, 420, 426, 427, 428, 954, 429, 409, 410, 430,
	431, 981, 432, 433, 917, 897, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 965, 441, 442, 443, 988,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 893, 0, 455, 936, 937, 938, 939, 0, 462,
	0, 456, 457, 989, 458, 990, 870, 459, 460, 461,
	0, 463, 464, 0, 854, 465, 466, 467, 468, 469,
	471, 955, 472, 0, 901, 473, 474, 475, 524, 933,
	983, 0, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 851, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 847, 848,
	906, 864, 865, 866, 862, 863, 875, 876, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 957,
	880, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	921, 900, 932, 234, 890, 931, 930, 0, 235, 892,
	891, 238, 239, 240, 882, 956, 241, 993, 994, 490,
	0, 242, 963, 0, 944, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 966, 258, 259, 947, 945,
	946, 953, 949, 948, 952, 260, 261, 262, 263, 935,
	265, 928, 927, 853, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 926, 272, 0, 273, 0, 274, 275,
	0, 276, 859, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 984, 985, 871, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 925, 923, 924, 0, 292, 0,
	293, 0, 0, 967, 294, 295, 0, 296, 991, 0,
	881, 297, 0, 298, 299, 300, 301, 958, 959, 962,
	354, 969, 302, 303, 0, 304, 305, 902, 0, 0,
	218, 306, 308, 315, 0, 968, 309, 914, 905, 916,
	918, 919, 920, 915, 0, 907, 0, 316, 970, 960,
	971, 317, 318, 319, 972, 940, 941, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 992,
	973, 330, 331, 974, 0, 332, 333, 951, 950, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 894, 344, 975, 347, 348, 351, 350, 976, 349,
	850, 219, 977, 352, 872, 961, 353, 929, 355, 356,
	0, 903, 358, 904, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 978, 366, 979, 986, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	987, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 922, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 980, 403, 404, 405, 406, 860,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 895, 896, 898, 899, 420, 426, 427,
	428, 954, 429, 409, 410, 430, 431, 981, 432, 433,
	917, 897, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 965, 441, 442, 443, 988, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 893, 0, 455,
	936, 937, 938, 939, 0, 462, 0, 456, 457, 989,
	458, 990, 870, 459, 460, 461, 0, 463, 464, 0,
	854, 465, 466, 467, 468, 469, 471, 955, 472, 0,
	901, 473, 474, 475, 524, 933, 983, 0, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 851, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 847, 848, 906, 864, 865, 866,
	862, 863, 875, 876, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 957, 880, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 921, 900, 932, 234,
	890, 931, 930, 0, 235, 892, 891, 238, 239, 240,
	882, 956, 241, 993, 994, 490, 0, 242, 963, 0,
	944, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 966, 258, 3647, 947, 945, 946, 953, 949, 948,
	952, 260, 261, 262, 263, 935, 265, 928, 927, 853,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 926,
	272, 0, 273, 0, 274, 275, 0, 276, 859, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 984, 985,
	871, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	925, 923, 924, 0, 292, 0, 293, 0, 0, 967,
	294, 295, 0, 296, 991, 0, 881, 297, 0, 298,
	299, 300, 301, 958, 959, 962, 354, 969, 302, 303,
	0, 304, 305, 902, 0, 0, 218, 306, 308, 315,
	0, 968, 309, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 316, 970, 960, 971, 317, 318, 319,
	972, 940, 941, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 992, 973, 330, 331, 974,
	0, 332, 333, 951, 950, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 894, 344, 975,
	347, 348, 351, 350, 976, 349, 850, 219, 977, 352,
	872, 961, 353, 929, 355, 356, 0, 903, 358, 904,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	978, 366, 979, 986, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 987, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	922, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	980, 403, 404, 405, 406, 860, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 895,
	896, 898, 899, 420, 426, 427, 428, 954, 429, 409,
	410, 430, 431, 981, 432, 433, 917, 897, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 965, 441, 442,
	443, 988, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 893, 0, 455, 936, 937, 938, 939,
	0, 462, 0, 456, 457, 989, 458, 990, 870, 459,
	460, 461, 0, 3646, 464, 0, 854, 465, 466, 467,
	468, 469, 471, 955, 472, 0, 901, 473, 474, 475,
	524, 933, 983, 0, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 851, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	847, 848, 906, 864, 865, 866, 862, 863, 875, 876,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 957, 880, 0, 0, 0, 226, 228, 227, 229,
	230, 3645, 921, 900, 932, 234, 890, 931, 930, 0,
	235, 892, 891, 238, 239, 240, 882, 956, 241, 993,
	994, 490, 0, 242, 963, 0, 944, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 966, 258, 3647,
	947, 945, 946, 953, 949, 948, 952, 260, 261, 262,
	263, 935, 265, 928, 927, 853, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 926, 272, 0, 273, 0,
	274, 275, 0, 276, 859, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 984, 985, 871, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 925, 923, 924, 0,
	292, 0, 293, 0, 0, 967, 294, 295, 0, 296,
	991, 0, 881, 297, 0, 298, 299, 300, 301, 958,
	959, 962, 354, 969, 302, 303, 0, 304, 305, 902,
	0, 0, 218, 306, 308, 315, 0, 968, 309, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 316,
	970, 960, 971, 317, 318, 319, 972, 940, 941, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 992, 973, 330, 331, 974, 0, 332, 333, 951,
	950, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 894, 344, 975, 347, 348, 351, 350,
	976, 349, 850, 219, 977, 352, 872, 961, 353, 929,
	355, 356, 0, 903, 358, 904, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 978, 366, 979, 986,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 987, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 922, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 980, 403, 404, 405,
	406, 860, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 895, 896, 898, 899, 420,
	426, 427, 428, 954, 429, 409, 410, 430, 431, 981,
	432, 433, 917, 897, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 965, 441, 442, 443, 988, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 893,
	0, 455, 936, 937, 938, 939, 0, 462, 0, 456,
	457, 989, 458, 990, 870, 459, 460, 461, 0, 3646,
	464, 0, 854, 465, 466, 467, 468, 469, 471, 955,
	472, 0, 901, 473, 474, 475, 524, 933, 983, 0,
	477, 476, 527, 0, 0, 0, 0, 478, 479, 528,
	480, 481, 482, 851, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 847, 848, 906, 864,
	865, 866, 2560, 2561, 875, 876, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 957, 880, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 921, 900,
	932, 234, 890, 931, 930, 0, 235, 892, 891, 238,
	239, 240, 882, 956, 241, 993, 994, 490, 0, 242,
	963, 0, 944, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 966, 258, 259, 947, 945, 946, 953,
	949, 948, 952, 260, 261, 262, 263, 935, 265, 928,
	927, 853, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 926, 272, 0, 273, 0, 274, 275, 0, 276,
	859, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	984, 985, 871, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 925, 923, 924, 0, 292, 0, 293, 0,
	0, 967, 294, 295, 0, 296, 991, 0, 881, 297,
	0, 298, 299, 300, 301, 958, 959, 962, 354, 969,
	302, 303, 0, 304, 305, 902, 0, 0, 218, 306,
	308, 315, 0, 968, 309, 914, 905, 916, 918, 919,
	920, 915, 0, 907, 0, 316, 970, 960, 971, 317,
	318, 319, 972, 940, 941, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 992, 973, 330,
	331, 974, 0, 332, 333, 951, 950, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 894,
	344, 975, 347, 348, 351, 350, 976, 349, 850, 219,
	977, 352, 872, 961, 353, 929, 355, 356, 0, 903,
	358, 904, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 978, 366, 979, 986, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 987, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 922, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 980, 403, 404, 405, 406, 860, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 895, 896, 898, 899, 420, 426, 427, 428, 954,
	429, 409, 410, 430, 431, 981, 432, 433, 917, 897,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 965,
	441, 442, 443, 988, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 893, 0, 455, 936, 937,
	938, 939, 0, 462, 0, 456, 457, 989, 458, 990,
	870, 459, 460, 461, 0, 463, 464, 0, 854, 465,
	466, 467, 468, 469, 471, 955, 472, 0, 901, 473,
	474, 475, 524, 933, 983, 0, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 851,
	0, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	0, 0, 847, 848, 906, 864, 865, 866, 2558, 2559,
	875, 876, 0, 0, 0, 874, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 957, 880, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 921, 900, 932, 234, 890, 931,
	930, 0, 235, 892, 891, 238, 239, 240, 882, 956,
	241, 993, 994, 490, 0, 242, 963, 0, 944, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 966,
	258, 259, 947, 945, 946, 953, 949, 948, 952, 260,
	261, 262, 263, 935, 265, 928, 927, 853, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 926, 272, 0,
	273, 0, 274, 275, 0, 276, 859, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 984, 985, 871, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 925, 923,
	924, 0, 292, 0, 293, 0, 0, 967, 294, 295,
	0, 296, 991, 0, 881, 297, 0, 298, 299, 300,
	301, 958, 959, 962, 354, 969, 302, 303, 0, 304,
	305, 902, 0, 0, 218, 306, 308, 315, 0, 968,
	309, 914, 905, 916, 918, 919, 920, 915, 0, 907,
	0, 316, 970, 960, 971, 317, 318, 319, 972, 940,
	941, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 992, 973, 330, 331, 974, 0, 332,
	333, 951, 950, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 894, 344, 975, 347, 348,
	351, 350, 976, 349, 850, 219, 977, 352, 872, 961,
	353, 929, 355, 356, 0, 903, 358, 904, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 978, 366,
	979, 986, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 987, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 922, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 980, 403,
	404, 405, 406, 860, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 895, 896, 898,
	899, 420, 426, 427, 428, 954, 429, 409, 410, 430,
	431, 981, 432, 433, 917, 897, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 965, 441, 442, 443, 988,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 893, 0, 455, 936, 937, 938, 939, 0, 462,
	0, 456, 457, 989, 458, 990, 870, 459, 460, 461,
	0, 463, 464, 0, 854, 465, 466, 467, 468, 469,
	471, 955, 472, 0, 901, 473, 474, 475, 524, 933,
	983, 0, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 851, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 847, 848,
	906, 864, 865, 866, 862, 863, 875, 876, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 957,
	880, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	921, 900, 932, 234, 890, 931, 930, 0, 235, 892,
	891, 238, 239, 240, 882, 956, 241, 993, 994, 490,
	0, 242, 963, 0, 944, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 966, 258, 259, 947, 945,
	946, 953, 949, 948, 952, 260, 261, 262, 263, 935,
	265, 928, 927, 853, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 926, 272, 0, 273, 0, 274, 275,
	0, 276, 859, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 984, 985, 871, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 925, 923, 924, 0, 292, 0,
	293, 0, 0, 967, 294, 295, 0, 296, 991, 0,
	881, 297, 0, 298, 299, 300, 301, 958, 959, 962,
	354, 969, 302, 303, 0, 304, 305, 902, 0, 0,
	218, 306, 308, 315, 0, 968, 309, 914, 905, 916,
	918, 919, 920, 915, 0, 907, 0, 316, 970, 960,
	971, 317, 318, 319, 972, 940, 941, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 992,
	973, 330, 331, 974, 0, 332, 333, 951, 950, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 894, 344, 975, 347, 348, 351, 350, 976, 349,
	850, 219, 977, 352, 872, 961, 353, 929, 355, 356,
	0, 903, 358, 904, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 978, 366, 979, 986, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	987, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 922, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 980, 403, 404, 405, 406, 860,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 895, 896, 898, 899, 420, 426, 427,
	428, 954, 429, 409, 410, 430, 431, 981, 432, 433,
	917, 897, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 965, 441, 442, 443, 988, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 893, 0, 455,
	936, 937, 938, 939, 0, 462, 0, 456, 457, 989,
	458, 990, 870, 459, 460, 461, 0, 463, 464, 0,
	854, 465, 466, 467, 468, 469, 471, 955, 472, 0,
	901, 473, 474, 475, 524, 933, 983, 0, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 851, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 2026, 2027, 906, 864, 865, 866,
	862, 863, 875, 876, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 957, 880, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 921, 900, 932, 234,
	890, 931, 930, 0, 235, 892, 891, 238, 239, 240,
	882, 956, 241, 993, 994, 490, 0, 242, 963, 0,
	944, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 966, 258, 259, 947, 945, 946, 953, 949, 948,
	952, 260, 261, 262, 263, 935, 265, 928, 927, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 926,
	272, 0, 273, 0, 274, 275, 0, 276, 859, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 984, 985,
	871, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	925, 923, 924, 0, 292, 0, 293, 0, 0, 967,
	294, 295, 0, 296, 991, 0, 881, 297, 0, 298,
	299, 300, 301, 958, 959, 962, 354, 969, 302, 303,
	0, 304, 305, 902, 0, 0, 218, 306, 308, 315,
	0, 968, 309, 914, 905, 916, 918, 919, 920, 915,
	0, 907, 0, 316, 970, 960, 971, 317, 318, 319,
	972, 940, 941, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 992, 973, 330, 331, 974,
	0, 332, 333, 951, 950, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 894, 344, 975,
	347, 348, 351, 350, 976, 349, 0, 219, 977, 352,
	872, 961, 353, 929, 355, 356, 0, 903, 358, 904,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	978, 366, 979, 986, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 987, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	922, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	980, 403, 404, 405, 406, 860, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 895,
	896, 898, 899, 420, 426, 427, 428, 954, 429, 409,
	410, 430, 431, 981, 432, 433, 917, 897, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 965, 441, 442,
	443, 988, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 893, 0, 455, 936, 937, 938, 939,
	0, 462, 0, 456, 457, 989, 458, 990, 870, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 955, 472, 0, 901, 473, 474, 475,
	524, 933, 983, 0, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 2212, 0, 0, 0, 0, 0, 0,
	2210, 2211, 906, 864, 865, 866, 862, 863, 875, 876,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 957, 880, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 921, 900, 932, 234, 890, 931, 930, 0,
	235, 892, 891, 238, 239, 240, 882, 956, 241, 993,
	994, 490, 0, 242, 963, 0, 944, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 966, 258, 259,
	947, 945, 946, 953, 949, 948, 952, 260, 261, 262,
	263, 935, 265, 928, 927, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 926, 272, 0, 273, 0,
	274, 275, 0, 276, 859, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 984, 985, 871, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 925, 923, 924, 0,
	292, 0, 293, 0, 0, 967, 294, 295, 0, 296,
	991, 0, 881, 297, 0, 298, 299, 300, 301, 958,
	959, 962, 354, 969, 302, 303, 0, 304, 305, 902,
	0, 0, 218, 306, 308, 315, 0, 968, 309, 914,
	905, 916, 918, 919, 920, 915, 0, 907, 0, 316,
	970, 960, 971, 317, 318, 319, 972, 940, 941, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 992, 973, 330, 331, 974, 0, 332, 333, 951,
	950, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 894, 344, 975, 347, 348, 351, 350,
	976, 349, 0, 219, 977, 352, 872, 961, 353, 929,
	355, 356, 0, 903, 358, 904, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 978, 366, 979, 986,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 987, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 922, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 980, 403, 404, 405,
	406, 2553, 2554, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 895, 896, 898, 899, 420,
	426, 427, 428, 954, 429, 409, 410, 430, 431, 981,
	432, 433, 917, 897, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 965, 441, 442, 443, 988, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 893,
	0, 455, 936, 937, 938, 939, 0, 462, 0, 456,
	457, 989, 458, 990, 870, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 955,
	472, 0, 901, 473, 474, 475, 524, 933, 983, 0,
	477, 476, 527, 0, 0, 0, 0, 478, 479, 528,
	480, 481, 482, 906, 864, 865, 866, 862, 863, 875,
	0, 0, 0, 0, 0, 0, 1772, 1773, 0, 0,
	220, 221, 222, 223, 224, 876, 225, 0, 0, 874,
	0, 0, 957, 880, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 921, 900, 932, 234, 890, 931, 930,
	0, 235, 892, 891, 238, 239, 240, 0, 956, 241,
	993, 994, 490, 0, 242, 963, 0, 944, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 966, 258,
	259, 947, 945, 946, 953, 949, 948, 952, 260, 261,
	262, 263, 935, 265, 928, 927, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 926, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 984, 985, 871, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 925, 923, 924,
	0, 292, 0, 293, 0, 0, 967, 294, 295, 0,
	296, 991, 0, 881, 297, 0, 298, 299, 300, 301,
	958, 959, 962, 354, 969, 302, 303, 0, 304, 305,
	902, 0, 0, 218, 306, 308, 315, 0, 968, 309,
	914, 905, 916, 918, 919, 920, 915, 0, 907, 0,
	316, 970, 960, 971, 317, 318, 319, 972, 940, 941,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 992, 973, 330, 331, 974, 0, 332, 333,
	951, 950, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 894, 344, 975, 347, 348, 351,
	350, 976, 349, 0, 219, 977, 352, 872, 961, 353,
	929, 355, 356, 0, 903, 358, 904, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 978, 366, 979,
	986, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 987, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 922, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 980, 403, 404,
	405, 406, 860, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 895, 896, 898, 899,
	420, 426, 427, 428, 954, 429, 409, 410, 430, 431,
	981, 432, 433, 917, 897, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 965, 441, 442, 443, 988, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	893, 0, 455, 936, 937, 938, 939, 0, 462, 0,
	456, 457, 989, 458, 990, 870, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	955, 472, 0, 901, 473, 474, 475, 524, 933, 983,
	0, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 906, 864, 865, 866, 862, 863,
	875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 876, 225, 0, 0,
	874, 0, 0, 957, 880, 0, 0, 0, 226, 228,
	227, 229, 230, 0, 921, 900, 932, 234, 890, 931,
	930, 0, 235, 892, 891, 238, 239, 240, 882, 956,
	241, 993, 994, 490, 0, 242, 963, 0, 944, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 966,
	258, 3647, 947, 945, 946, 953, 949, 948, 952, 260,
	261, 262, 263, 935, 265, 928, 927, 853, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 926, 272, 0,
	273, 0, 274, 275, 0, 276, 859, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 984, 985, 871, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 925, 923,
	924, 0, 292, 0, 293, 0, 0, 967, 294, 295,
	0, 296, 991, 0, 881, 297, 0, 298, 299, 300,
	301, 958, 959, 962, 354, 0, 302, 303, 0, 304,
	305, 902, 0, 0, 218, 306, 308, 315, 0, 968,
	309, 914, 905, 916, 918, 919, 920, 915, 0, 907,
	0, 316, 0, 960, 0, 317, 318, 319, 972, 940,
	941, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 992, 973, 330, 331, 0, 0, 332,
	333, 951, 950, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 894, 344, 975, 347, 348,
	351, 350, 976, 349, 850, 219, 0, 352, 872, 961,
	353, 929, 355, 356, 0, 903, 358, 904, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 978, 366,
	979, 986, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 987, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 922, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 980, 403,
	404, 405, 406, 860, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 895, 896, 898,
	899, 420, 426, 427, 428, 954, 429, 409, 410, 430,
	431, 0, 432, 433, 917, 897, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 965, 441, 442, 443, 988,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 893, 0, 455, 936, 937, 938, 939, 0, 462,
	0, 456, 457, 989, 458, 990, 870, 459, 460, 461,
	0, 3646, 464, 0, 854, 465, 466, 467, 468, 469,
	471, 955, 472, 0, 901, 473, 474, 475, 524, 933,
	983, 0, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 840, 0, 1031, 0, 0, 847, 848,
	0, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	0, 874, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 957, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	956, 241, 488, 489, 490, 0, 242, 963, 0, 944,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	966, 258, 259, 947, 945, 946, 953, 949, 948, 952,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 984, 985, 0,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 967, 294,
	295, 0, 296, 991, 0, 499, 297, 0, 298, 299,
	300, 301, 958, 959, 962, 354, 969, 302, 303, 0,
	304, 305, 307, 0, 0, 218, 306, 308, 315, 0,
	968, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 970, 960, 971, 317, 318, 319, 972,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 1017,
	328, 327, 0, 329, 992, 973, 330, 331, 974, 0,
	332, 333, 951, 950, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 975, 347,
	348, 351, 350, 976, 349, 0, 219, 977, 352, 0,
	961, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	1023, 361, 362, 363, 0, 0, 364, 365, 510, 978,
	366, 979, 986, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 987, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 980,
	403, 404, 405, 406, 515, 1025, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 183, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 954, 429, 409, 410,
	430, 431, 981, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	988, 0, 447, 448, 446, 185, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 989, 458, 990, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 955, 472, 0, 470, 473, 474, 475, 1344,
	525, 526, 0, 477, 476, 527, 1031, 0, 0, 177,
	478, 479, 528, 480, 481, 482, 0, 178, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 957, 1021, 0, 1642, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 956, 241, 488, 489, 490, 0, 242, 963, 0,
	944, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 966, 258, 259, 947, 945, 946, 953, 949, 948,
	952, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 984, 985,
	0, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 967,
	294, 295, 0, 296, 991, 0, 499, 297, 0, 298,
	299, 300, 301, 958, 959, 962, 354, 969, 302, 303,
	0, 304, 305, 307, 0, 0, 218, 306, 308, 315,
	0, 968, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 970, 960, 971, 317, 318, 319,
	972, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	1017, 328, 327, 0, 329, 992, 973, 330, 331, 974,
	0, 332, 333, 951, 950, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 975,
	347, 348, 351, 350, 976, 349, 0, 219, 977, 352,
	0, 961, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 1023, 361, 362, 363, 0, 0, 364, 365, 510,
	978, 366, 979, 986, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 987, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	980, 403, 404, 405, 406, 515, 1025, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 183, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 954, 429, 409,
	410, 430, 431, 981, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 988, 0, 447, 448, 446, 185, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 989, 458, 990, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 955, 472, 0, 470, 473, 474, 475,
	1344, 525, 526, 0, 477, 476, 527, 2706, 0, 1031,
	177, 478, 479, 528, 480, 481, 482, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 1021, 957, 1642,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 956, 241, 488, 489, 490, 0,
	242, 963, 0, 944, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 966, 258, 259, 947, 945, 946,
	953, 949, 948, 952, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 984, 985, 0, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 967, 294, 295, 0, 296, 991, 0, 499,
	297, 0, 298, 299, 300, 301, 958, 959, 962, 354,
	969, 302, 303, 0, 304, 305, 307, 0, 0, 218,
	306, 308, 315, 0, 968, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 970, 960, 971,
	317, 318, 319, 972, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 1017, 328, 327, 0, 329, 992, 973,
	330, 331, 974, 0, 332, 333, 951, 950, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 975, 347, 348, 351, 350, 976, 349, 0,
	219, 977, 352, 0, 961, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 1023, 361, 362, 363, 0, 0,
	364, 365, 510, 978, 366, 979, 986, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 987,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 980, 403, 404, 405, 406, 515, 1025,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	954, 429, 409, 410, 430, 431, 981, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 988, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 989, 458,
	990, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 955, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 0, 477, 476, 527,
	1013, 0, 1031, 0, 478, 479, 528, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	1021, 957, 1019, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 956, 241, 488,
	489, 490, 0, 242, 963, 0, 944, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 966, 258, 259,
	947, 945, 946, 953, 949, 948, 952, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 984, 985, 0, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 967, 294, 295, 0, 296,
	991, 0, 499, 297, 0, 298, 299, 300, 301, 958,
	959, 962, 354, 969, 302, 303, 0, 304, 305, 307,
	0, 0, 218, 306, 308, 315, 0, 968, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	970, 960, 971, 317, 318, 319, 972, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 1017, 328, 327, 0,
	329, 992, 973, 330, 331, 974, 0, 332, 333, 951,
	950, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 975, 347, 348, 351, 350,
	976, 349, 0, 219, 977, 352, 0, 961, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 1023, 361, 362,
	363, 0, 0, 364, 365, 510, 978, 366, 979, 986,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 987, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 980, 403, 404, 405,
	406, 515, 1025, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 954, 429, 409, 410, 430, 431, 981,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 988, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 989, 458, 990, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 955,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 0,
	477, 476, 527, 1031, 0, 0, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 957, 1021, 0, 1019, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 956, 241,
	488, 489, 490, 0, 242, 963, 0, 944, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 966, 258,
	259, 947, 945, 946, 953, 949, 948, 952, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 984, 985, 0, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 967, 294, 295, 0,
	296, 991, 0, 499, 297, 0, 298, 299, 300, 301,
	958, 959, 962, 354, 969, 302, 303, 0, 304, 305,
	307, 0, 0, 218, 306, 308, 315, 0, 968, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 970, 960, 971, 317, 318, 319, 972, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 1017, 328, 327,
	0, 329, 992, 973, 330, 331, 974, 0, 332, 333,
	951, 950, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 975, 347, 348, 351,
	350, 976, 349, 0, 219, 977, 352, 0, 961, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 1023, 361,
	362, 363, 0, 0, 364, 365, 510, 978, 366, 979,
	986, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 987, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 980, 403, 404,
	405, 406, 515, 1025, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 954, 429, 409, 410, 430, 431,
	981, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 988, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 989, 458, 990, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	955, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	0, 477, 476, 527, 1031, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 957, 1021, 0, 1019, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 956,
	241, 488, 489, 490, 0, 242, 963, 0, 944, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 966,
	258, 259, 947, 945, 946, 953, 949, 948, 952, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 984, 985, 0, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 967, 294, 295,
	0, 296, 991, 0, 499, 297, 0, 298, 299, 300,
	301, 958, 959, 962, 354, 969, 302, 303, 0, 304,
	305, 307, 0, 0, 218, 306, 308, 315, 0, 968,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 970, 960, 971, 317, 318, 319, 972, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 992, 973, 330, 331, 974, 0, 332,
	333, 951, 950, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 975, 347, 348,
	351, 350, 976, 349, 0, 219, 977, 352, 0, 961,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 978, 366,
	979, 986, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 987, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 980, 403,
	404, 405, 406, 515, 1025, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 954, 429, 409, 410, 430,
	431, 981, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 988,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 989, 458, 990, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 955, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 840, 0, 1202, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 1543, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 1094, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 966, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	967, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 969, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 968, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 970, 506, 971, 317, 318,
	319, 972, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 973, 330, 331,
	974, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	975, 347, 348, 351, 350, 976, 349, 0, 0, 977,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 978, 366, 979, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 980, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 183, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 981, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 185, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 1344, 525, 526, 0, 477, 476, 527, 1341, 0,
	1202, 177, 478, 479, 528, 480, 481, 482, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	152, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 1094, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 966, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 967, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 500, 501, 502,
	354, 969, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 968, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 970, 506,
	971, 317, 318, 319, 972, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	973, 330, 331, 974, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 975, 347, 348, 351, 350, 976, 349,
	0, 0, 977, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 978, 366, 979, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 980, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	183, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 981, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	185, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 1344, 525, 526, 0, 477, 476,
	527, 0, 0, 0, 177, 478, 479, 528, 480, 481,
	482, 0, 178, 0, 0, 0, 0, 1202, 1201, 0,
	0, 0, 0, 1199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 1094, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 966, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	967, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 969, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 968, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 970, 506, 971, 317, 318,
	319, 972, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 973, 330, 331,
	974, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	975, 347, 348, 351, 350, 976, 349, 0, 0, 977,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 978, 366, 979, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 980, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 981, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 0, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 1202, 1201,
	0, 0, 0, 0, 1199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	2910, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 1094, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 966, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 967, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 969,
	302, 303, 0, 304, 305, 307, 0, 0, 0, 306,
	308, 315, 0, 968, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 970, 506, 971, 317,
	318, 319, 972, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 973, 330,
	331, 974, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 975, 347, 348, 351, 350, 976, 349, 0, 0,
	977, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 978, 366, 979, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 980, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 981, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 0, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 1202,
	1201, 0, 0, 0, 0, 1199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 1211, 225, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 0, 241, 488, 489, 490, 0,
	242, 491, 0, 1094, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 966, 258, 259, 0, 0, 0,
	0, 0, 0, 0, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 0, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 967, 294, 295, 0, 296, 498, 0, 499,
	297, 0, 298, 299, 300, 301, 500, 501, 502, 354,
	969, 302, 303, 0, 304, 305, 307, 0, 0, 0,
	306, 308, 315, 0, 968, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 970, 506, 971,
	317, 318, 319, 972, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 507, 973,
	330, 331, 974, 0, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 975, 347, 348, 351, 350, 976, 349, 0,
	0, 977, 352, 0, 508, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 978, 366, 979, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 512,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 980, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	0, 429, 409, 410, 430, 431, 981, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 522, 458,
	523, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 0, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 0, 477, 476, 527,
	1031, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 957,
	0, 0, 1350, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 956, 241, 488, 489, 490,
	0, 242, 963, 0, 944, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 966, 258, 259, 947, 945,
	946, 953, 949, 948, 952, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 984, 985, 0, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 967, 294, 295, 0, 296, 991, 0,
	499, 297, 0, 298, 299, 300, 301, 958, 959, 962,
	354, 969, 302, 303, 0, 304, 305, 307, 0, 0,
	218, 306, 308, 315, 0, 968, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 970, 960,
	971, 317, 318, 319, 972, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 992,
	973, 330, 331, 974, 0, 332, 333, 951, 950, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 975, 347, 348, 351, 350, 976, 349,
	0, 219, 977, 352, 0, 961, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 978, 366, 979, 986, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	987, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 980, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 954, 429, 409, 410, 430, 431, 981, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 988, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 989,
	458, 990, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 955, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 0, 477, 476,
	527, 840, 0, 214, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 0, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 0, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	500, 501, 502, 354, 0, 302, 303, 0, 304, 305,
	307, 0, 0, 0, 306, 308, 315, 0, 0, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 0, 506, 0, 317, 318, 319, 0, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 0, 330, 331, 0, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	350, 0, 349, 0, 0, 0, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 0, 366, 0,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 183, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	0, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 185, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 1344, 525, 526,
	0, 477, 476, 527, 214, 0, 0, 177, 478, 479,
	528, 480, 481, 482, 0, 178, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 152, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 218, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 219, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 1291, 0, 214, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 1656, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	0, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 218, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 350, 0, 349, 0, 219, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 0, 477, 476, 527, 214, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 483, 1295, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 218, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 219,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 0, 477, 476, 527, 214,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 483, 2860,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 0, 241, 488, 489, 490, 0,
	242, 491, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 0, 258, 259, 0, 0, 0,
	0, 0, 0, 0, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 0, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 0, 294, 295, 0, 296, 498, 0, 499,
	297, 0, 298, 299, 300, 301, 500, 501, 502, 354,
	0, 302, 303, 0, 304, 305, 307, 0, 0, 218,
	306, 308, 315, 0, 0, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 0, 506, 0,
	317, 318, 319, 0, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 507, 0,
	330, 331, 0, 0, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 350, 0, 349, 0,
	219, 0, 352, 0, 508, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 0, 366, 0, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 512,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	0, 429, 409, 410, 430, 431, 0, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 522, 458,
	523, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 0, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 0, 477, 476, 527,
	214, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	1295, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 0, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 500, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 0, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 350, 0, 349,
	0, 0, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 0, 477, 476,
	527, 214, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 2458, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 0, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 0, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 214, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 483, 0, 0, 2998, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 490, 0, 242, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 0, 294, 295, 0, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 500,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 0, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 350,
	0, 349, 0, 0, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 0,
	477, 476, 527, 710, 0, 600, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 483, 1931, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 606, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 708, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 218, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 0, 349, 0, 219, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 605, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 0, 477, 476, 527, 0, 599, 0, 600,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 609, 225, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 0, 241, 488, 489, 490, 0,
	242, 491, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 0, 258, 259, 0, 0, 0,
	0, 0, 0, 0, 260, 261, 606, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 0, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 0, 294, 295, 0, 296, 498, 0, 499,
	297, 0, 298, 299, 300, 301, 500, 501, 502, 354,
	0, 302, 303, 0, 304, 305, 307, 0, 0, 218,
	306, 308, 315, 0, 0, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 0, 506, 0,
	317, 318, 319, 0, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 507, 0,
	330, 331, 0, 0, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 350, 0, 349, 0,
	219, 0, 352, 0, 508, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 0, 366, 0, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 512,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	0, 429, 409, 410, 430, 431, 0, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 0, 447, 448, 446, 605,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 597, 462, 0, 456, 457, 522, 458,
	523, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 0, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 0, 477, 476, 527,
	0, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	1202, 1201, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 609, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 1094, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 966, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 967, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 500, 501, 502,
	354, 969, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 968, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 970, 506,
	971, 317, 318, 319, 972, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	973, 330, 331, 974, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 975, 347, 348, 351, 350, 976, 349,
	0, 0, 977, 352, 2840, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 978, 366, 979, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 980, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 981, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 600, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 606, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	0, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 218, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 350, 0, 349, 0, 219, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 1965, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 605, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 0, 477, 476, 527, 600, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 609, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 606, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 218, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 219,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 605, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 0, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 1377,
	0, 1202, 1201, 0, 0, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 1094, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 966, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 217, 0, 0, 0,
	0, 0, 1376, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 967, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 969, 302, 303, 0, 304, 305, 307, 0,
	0, 0, 306, 308, 315, 0, 968, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 970,
	506, 971, 317, 318, 319, 972, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 973, 330, 331, 974, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 975, 347, 348, 351, 350, 976,
	349, 0, 0, 977, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 978, 366, 979, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 1375, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 980, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 1374, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 981, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 0, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 1339, 0, 1202, 1201, 0, 0, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 1094, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 966,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 967, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 1338, 501, 502, 354, 969, 302, 303, 0, 304,
	305, 307, 0, 0, 0, 306, 308, 315, 0, 968,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 970, 506, 971, 317, 318, 319, 972, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 973, 330, 331, 974, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 975, 347, 348,
	351, 350, 976, 349, 0, 0, 977, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 978, 366,
	979, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 980, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 981, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 1335, 0, 1202, 1201, 0,
	0, 0, 0, 1199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 1094, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 966, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	967, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 1334, 501, 502, 354, 969, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 968, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 970, 506, 971, 317, 318,
	319, 972, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 973, 330, 331,
	974, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	975, 347, 348, 351, 350, 976, 349, 0, 0, 977,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 978, 366, 979, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 980, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 981, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 0, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 1271, 0,
	1202, 1201, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 1094, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 966, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 967, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 1270, 501, 502,
	354, 969, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 968, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 970, 506,
	971, 317, 318, 319, 972, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	973, 330, 331, 974, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 975, 347, 348, 351, 350, 976, 349,
	0, 0, 977, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 978, 366, 979, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 980, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 981, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 0, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 1268, 0, 1202, 1201, 0, 0, 0, 0, 1199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 1094, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 966, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 967, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	1267, 501, 502, 354, 969, 302, 303, 0, 304, 305,
	307, 0, 0, 0, 306, 308, 315, 0, 968, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 970, 506, 971, 317, 318, 319, 972, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 973, 330, 331, 974, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 975, 347, 348, 351,
	350, 976, 349, 0, 0, 977, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 978, 366, 979,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 980, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	981, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	0, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 1208, 0, 1202, 1201, 0, 0,
	0, 0, 1199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	1094, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 966, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 967,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 1207, 501, 502, 354, 969, 302, 303,
	0, 304, 305, 307, 0, 0, 0, 306, 308, 315,
	0, 968, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 970, 506, 971, 317, 318, 319,
	972, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 973, 330, 331, 974,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 975,
	347, 348, 351, 350, 976, 349, 0, 0, 977, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	978, 366, 979, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	980, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 429, 409,
	410, 430, 431, 981, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 0, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 1197, 0, 1202,
	1201, 0, 0, 0, 0, 1199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 0, 241, 488, 489, 490, 0,
	242, 491, 0, 1094, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 966, 258, 259, 0, 0, 0,
	0, 0, 0, 0, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 0, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 967, 294, 295, 0, 296, 498, 0, 499,
	297, 0, 298, 299, 300, 301, 1196, 501, 502, 354,
	969, 302, 303, 0, 304, 305, 307, 0, 0, 0,
	306, 308, 315, 0, 968, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 970, 506, 971,
	317, 318, 319, 972, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 507, 973,
	330, 331, 974, 0, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 975, 347, 348, 351, 350, 976, 349, 0,
	0, 977, 352, 0, 508, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 978, 366, 979, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 512,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 980, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	0, 429, 409, 410, 430, 431, 981, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 522, 458,
	523, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 0, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 0, 477, 476, 527,
	0, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	1202, 1201, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 1094, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 966, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 967, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 500, 501, 502,
	354, 969, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 968, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 970, 506,
	971, 317, 318, 319, 972, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	973, 330, 331, 974, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 975, 347, 348, 351, 350, 976, 349,
	0, 0, 977, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 978, 366, 979, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 980, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 981, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 214, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	0, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 218, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 350, 0, 349, 0, 219, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 0, 477, 476, 527, 1202, 1201,
	0, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 609, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 1094, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 966, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 1745, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 967, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 969,
	302, 303, 0, 304, 305, 307, 0, 0, 0, 306,
	308, 315, 0, 968, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 970, 506, 971, 317,
	318, 319, 972, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 973, 330,
	331, 974, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 975, 347, 348, 351, 350, 976, 349, 0, 0,
	977, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 978, 366, 979, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 980, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 981, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 0, 477, 476, 527, 1202,
	1201, 0, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 0, 241, 488, 489, 490, 0,
	242, 491, 0, 1094, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 966, 258, 259, 0, 0, 0,
	0, 0, 0, 0, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 0, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 967, 294, 295, 0, 296, 498, 0, 499,
	297, 0, 298, 299, 300, 301, 500, 501, 502, 354,
	969, 302, 303, 0, 304, 305, 307, 0, 0, 0,
	306, 308, 315, 0, 968, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 970, 506, 971,
	317, 318, 319, 972, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 507, 973,
	330, 331, 974, 0, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 975, 347, 348, 351, 350, 976, 349, 0,
	0, 977, 352, 0, 508, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 978, 366, 979, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 512,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 980, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	0, 429, 409, 410, 430, 431, 981, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 522, 458,
	523, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 0, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 1202, 477, 476, 527,
	0, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	1094, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 966, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 967,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 500, 501, 502, 354, 969, 302, 303,
	0, 304, 305, 307, 0, 0, 0, 306, 308, 315,
	0, 968, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 970, 506, 971, 317, 318, 319,
	972, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 973, 330, 331, 974,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 975,
	347, 348, 351, 350, 976, 349, 0, 0, 977, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	978, 366, 979, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	980, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 429, 409,
	410, 430, 431, 981, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 214, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 2338, 242, 491, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	2335, 253, 0, 254, 255, 256, 0, 257, 0, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 2494, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 2341, 0, 0, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	500, 501, 502, 354, 0, 302, 303, 0, 304, 305,
	307, 0, 0, 2491, 306, 308, 315, 0, 0, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	2493, 0, 506, 0, 317, 318, 319, 0, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 0, 330, 331, 2490, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	350, 0, 349, 0, 0, 0, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 0, 366, 0,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 2340, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	0, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 2492, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	214, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	2338, 242, 491, 0, 0, 2332, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 2335, 253, 0,
	254, 255, 256, 0, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 2341, 0, 0, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 2331, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 0, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 350, 0, 349,
	0, 0, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 2340, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	2339, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 0, 477, 476,
	527, 1434, 0, 214, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 0, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 0, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	500, 501, 502, 354, 0, 302, 303, 0, 304, 305,
	307, 0, 0, 218, 306, 308, 315, 0, 0, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 0, 506, 0, 317, 318, 319, 0, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 0, 330, 331, 0, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	350, 0, 349, 0, 219, 0, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 0, 366, 0,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 1437, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	0, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 1435, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	0, 1436, 476, 527, 1178, 0, 214, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 0, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 0,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 1180, 501, 502, 354, 0, 302, 303,
	0, 304, 305, 307, 0, 0, 218, 306, 308, 315,
	0, 0, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 0, 506, 0, 317, 318, 319,
	0, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 0, 330, 331, 0,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 350, 0, 349, 0, 219, 0, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 1023, 361, 362, 363, 0, 0, 364, 365, 510,
	0, 366, 0, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 429, 409,
	410, 430, 431, 0, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 0, 477, 476, 527, 1175, 0, 214,
	0, 478, 479, 528, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 0, 241, 488, 489, 490, 0,
	242, 491, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 0, 258, 259, 0, 0, 0,
	0, 0, 0, 0, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 0, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 0, 294, 295, 0, 296, 498, 0, 499,
	297, 0, 298, 299, 300, 301, 1177, 501, 502, 354,
	0, 302, 303, 0, 304, 305, 307, 0, 0, 218,
	306, 308, 315, 0, 0, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 0, 506, 0,
	317, 318, 319, 0, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 507, 0,
	330, 331, 0, 0, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 350, 0, 349, 0,
	219, 0, 352, 0, 508, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 1023, 361, 362, 363, 0, 0,
	364, 365, 510, 0, 366, 0, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 512,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	0, 429, 409, 410, 430, 431, 0, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 522, 458,
	523, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 0, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 0, 477, 476, 527,
	1082, 0, 214, 0, 478, 479, 528, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 490, 0, 242, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 0, 294, 295, 0, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 1084,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 218, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 350,
	0, 349, 0, 219, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 1023, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 0,
	477, 476, 527, 557, 0, 214, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 556, 224, 546, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 549, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 550, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 0, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 0, 349, 0, 0, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 551, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 0, 477, 476, 527, 545, 0, 214, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	546, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 549, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 550, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 0, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 0,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 551, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 214, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 218, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 2822, 349, 0, 219, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 214, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 490, 0, 242, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 0, 294, 295, 0, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 500,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 218, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 350,
	0, 349, 0, 219, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 1023, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 0,
	477, 476, 527, 2430, 0, 214, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 2429, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 218, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 0, 349, 0, 219, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 0, 477, 476, 527, 1941, 0, 214, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 218, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 219,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 214, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 218, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 0, 349, 0, 219, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 1867, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 0, 477, 476, 527, 1871, 0, 214, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 1870, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 218, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 219,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 0, 477, 476, 527, 1860,
	0, 214, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 217, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 1862, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 218, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 219, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 1328, 0, 214, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 1327, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 218, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 219, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 1325, 0, 214, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	0, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 1324, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 218, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 350, 0, 349, 0, 219, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 0, 477, 476, 527, 1322, 0,
	214, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 0, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 1321, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	218, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 0, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 350, 0, 349,
	0, 219, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 0, 477, 476,
	527, 1318, 0, 214, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 0, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 0, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	1317, 501, 502, 354, 0, 302, 303, 0, 304, 305,
	307, 0, 0, 218, 306, 308, 315, 0, 0, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 0, 506, 0, 317, 318, 319, 0, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 0, 330, 331, 0, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	350, 0, 349, 0, 219, 0, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 0, 366, 0,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	0, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	0, 477, 476, 527, 1189, 0, 214, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 0, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 0,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 1191, 501, 502, 354, 0, 302, 303,
	0, 304, 305, 307, 0, 0, 218, 306, 308, 315,
	0, 0, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 0, 506, 0, 317, 318, 319,
	0, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 0, 330, 331, 0,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 350, 0, 349, 0, 219, 0, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	0, 366, 0, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 429, 409,
	410, 430, 431, 0, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 214, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 0, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 0, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	500, 501, 502, 354, 0, 302, 303, 0, 304, 305,
	307, 0, 0, 218, 306, 308, 315, 0, 0, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 0, 506, 0, 317, 318, 319, 0, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 0, 330, 331, 0, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	350, 0, 349, 0, 219, 0, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 0, 366, 0,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	0, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	214, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 549, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 0, 294, 295, 550, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 500, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 0, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 350, 0, 349,
	0, 0, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	551, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 214, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 1972, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	0, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 218, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 350, 0, 349, 0, 219, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 214, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 1970, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 218, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 219, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 214, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 1968, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 217, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 218, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 219, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 701, 0, 214, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 0, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	700, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 0, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 699, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 214, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 2494, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 0, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 0, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 3332, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 536, 0, 214, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 535, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 0, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 0, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 534, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 214, 3341, 0, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 0, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 0, 349, 0, 0, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 0, 477, 476, 527, 214, 2481, 0, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 0, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 0,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 500, 501, 502, 354, 0, 302, 303,
	0, 304, 305, 307, 0, 0, 0, 306, 308, 315,
	0, 0, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 0, 506, 0, 317, 318, 319,
	0, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 0, 330, 331, 0,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 350, 0, 349, 0, 0, 0, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	0, 366, 0, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 429, 409,
	410, 430, 431, 0, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 214, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 0, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 3123, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 0, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	500, 501, 502, 354, 0, 302, 303, 0, 304, 305,
	307, 0, 0, 0, 306, 308, 315, 0, 0, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 0, 506, 0, 317, 318, 319, 0, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 0, 330, 331, 0, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	350, 0, 349, 0, 0, 0, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 0, 366, 0,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	0, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	214, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 2263, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 0, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 500, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 0, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 350, 0, 349,
	0, 0, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 0, 477, 476,
	527, 214, 2481, 0, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 0, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 0, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 2478,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 214, 477,
	476, 527, 0, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 220, 221, 222, 223, 224,
	1949, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 0, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 0,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 0, 477, 476, 527, 1939,
	0, 214, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 0, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 0, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 577, 0, 214, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 1060,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 1058, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 0, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 578, 0, 347, 348,
	351, 350, 0, 349, 0, 0, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 574,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 1061, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 573, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 1883, 0, 214, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	0, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 1882, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 350, 0, 349, 0, 0, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 0, 477, 476, 527, 577, 0,
	214, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 567, 491, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 0, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 500, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 0, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 578, 0, 347, 348, 351, 350, 0, 349,
	0, 0, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 574, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 1349,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	573, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 0, 477, 476,
	527, 1332, 0, 214, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 0, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 0, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	1331, 501, 502, 354, 0, 302, 303, 0, 304, 305,
	307, 0, 0, 0, 306, 308, 315, 0, 0, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 0, 506, 0, 317, 318, 319, 0, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 0, 330, 331, 0, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	350, 0, 349, 0, 0, 0, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 0, 366, 0,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	0, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	0, 477, 476, 527, 1279, 0, 214, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 0, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 0,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 1278, 501, 502, 354, 0, 302, 303,
	0, 304, 305, 307, 0, 0, 0, 306, 308, 315,
	0, 0, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 0, 506, 0, 317, 318, 319,
	0, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 0, 330, 331, 0,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 350, 0, 349, 0, 0, 0, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	0, 366, 0, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 429, 409,
	410, 430, 431, 0, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 0, 477, 476, 527, 1260, 0, 214,
	0, 478, 479, 528, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 0, 241, 488, 489, 490, 0,
	242, 491, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 0, 258, 259, 0, 0, 0,
	0, 0, 0, 0, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 0, 294, 295, 0, 296, 498, 0, 499,
	297, 0, 298, 299, 300, 301, 500, 501, 502, 354,
	0, 302, 303, 0, 304, 305, 307, 0, 0, 0,
	306, 308, 315, 0, 0, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 0, 506, 0,
	317, 318, 319, 0, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 507, 0,
	330, 331, 0, 0, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 350, 0, 349, 0,
	0, 0, 352, 0, 508, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 0, 366, 0, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 512,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	0, 429, 409, 410, 430, 431, 0, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 522, 458,
	523, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 0, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 0, 477, 476, 527,
	1183, 0, 214, 0, 478, 479, 528, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 490, 0, 242, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 0, 294, 295, 0, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 500,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 0, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 350,
	0, 349, 0, 0, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 0,
	477, 476, 527, 577, 0, 214, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	1060, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 1058, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 0, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 578, 0, 347,
	348, 351, 350, 0, 349, 0, 0, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	574, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 1061, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 573, 519, 520, 521, 0,
	462, 0, 456, 1059, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 214, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 220,
	221, 222, 223, 224, 1042, 225, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 490, 0, 242, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 0, 294, 295, 0, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 500,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 0, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 350,
	0, 349, 0, 0, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 0,
	477, 476, 527, 577, 0, 214, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 567, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 565, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 0, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 566, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 578, 0, 347,
	348, 351, 350, 0, 349, 0, 0, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 568, 407, 0, 408, 412, 413,
	574, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 569, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 573, 519, 520, 521, 0,
	462, 0, 456, 571, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 0, 477, 476, 527, 561, 0, 214, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 0, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 0,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 562, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 0, 477, 476, 527, 559,
	0, 214, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 0, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 0, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 553, 0, 214, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 0, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 0, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 531, 0, 214, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	0, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 350, 0, 349, 0, 0, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 214, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 0, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 0, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 214, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 2798, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 0, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 0, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 214, 477,
	476, 527, 0, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 2796, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 0, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 0,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 214, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 2783, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 0, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 0, 349, 0, 0, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 214, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 490, 0, 242, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 0, 294, 295, 0, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 2441,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 0, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 350,
	0, 349, 0, 0, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 214,
	477, 476, 527, 0, 0, 0, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 0, 241, 488, 489, 490, 0,
	242, 491, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 0, 258, 259, 0, 0, 0,
	0, 0, 0, 0, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 0, 294, 295, 0, 296, 498, 0, 499,
	297, 0, 298, 299, 300, 301, 500, 501, 502, 354,
	0, 302, 303, 0, 304, 305, 307, 0, 0, 0,
	306, 308, 315, 0, 0, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 0, 506, 0,
	317, 318, 319, 0, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 507, 0,
	330, 331, 0, 0, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 350, 0, 349, 0,
	0, 0, 352, 0, 508, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 0, 366, 0, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 512,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 515, 407,
	0, 408, 562, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	0, 429, 409, 410, 430, 431, 0, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 522, 458,
	523, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 0, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 214, 477, 476, 527,
	0, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 483, 0, 1896, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 0, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 0,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 500, 501, 502, 354, 0, 302, 303,
	0, 304, 305, 307, 0, 0, 0, 306, 308, 315,
	0, 0, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 0, 506, 0, 317, 318, 319,
	0, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 0, 330, 331, 0,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 350, 0, 349, 0, 0, 0, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	0, 366, 0, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 0, 409,
	410, 430, 431, 0, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 214, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 0, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 0, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	1301, 501, 502, 354, 0, 302, 303, 0, 304, 305,
	307, 0, 0, 0, 306, 308, 315, 0, 0, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 0, 506, 0, 317, 318, 319, 0, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 0, 330, 331, 0, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	350, 0, 349, 0, 0, 0, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 0, 366, 0,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	0, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	214, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 0, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 1241, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 0, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 350, 0, 349,
	0, 0, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 214, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	0, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 350, 0, 349, 0, 0, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 996, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 214, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 0, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 0, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 0, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 0, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 0, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 0, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 1479, 1480, 0, 1512, 1513,
	1514, 1522, 1523, 1524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 1510, 0, 0, 0, 0,
	0, 0, 1482, 0, 0, 0, 0, 1528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1479, 1480,
	0, 1512, 1513, 1514, 1522, 1523, 1524, 0, 0, 0,
	0, 1481, 0, 0, 0, 0, 0, 1515, 1510, 0,
	1501, 0, 0, 0, 0, 1482, 0, 1498, 0, 0,
	1528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1481, 0, 0, 0, 0, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	1498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 1505, 1506, 1507, 0,
	0, 0, 0, 0, 0, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1519,
	0, 0, 1529, 0, 0, 0, 1509, 1511, 1504, 1505,
	1506, 1507, 0, 0, 0, 0, 0, 0, 1487, 0,
	0, 0, 0, 0, 0, 0, 1525, 0, 1526, 0,
	0, 0, 0, 0, 0, 1496, 1497, 0, 0, 0,
	0, 0, 1519, 0, 0, 1529, 0, 0, 0, 1509,
	1511, 1517, 0, 0, 0, 0, 0, 0, 0, 0,
	1502, 0, 0, 0, 0, 0, 0, 0, 0, 1525,
	0, 1526, 0, 0, 0, 0, 0, 0, 1496, 1497,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1517, 0, 0, 1516, 0, 0,
	0, 0, 0, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1479,
	1480, 0, 1512, 1513, 1514, 1522, 1523, 1524, 0, 0,
	0, 0, 0, 0, 1508, 1520, 0, 0, 1515, 1510,
	0, 0, 0, 0, 0, 0, 1482, 0, 0, 0,
	0, 1528, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1481, 0, 0, 1520, 0,
	0, 0, 0, 0, 1501, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 1493, 1494, 1500, 1521, 1499, 1495, 0, 1492,
	1490, 1491, 1483, 1484, 1485, 1486, 1488, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 2646, 0, 0, 1504,
	1505, 1506, 1507, 0, 0, 0, 0, 0, 0, 1487,
	0, 0, 1518, 0, 0, 1493, 1494, 1500, 1521, 1499,
	1495, 0, 1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488,
	1489, 0, 0, 1519, 0, 0, 1529, 0, 0, 2645,
	1509, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 1526, 0, 0, 0, 0, 0, 0, 1496,
	1497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1517, 0, 0, 0, 0,
	0, 0, 0, 0, 1502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 1479, 1480, 0, 1512, 1513, 1514, 1522,
	1523, 1524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 1510, 0, 0, 0, 0, 0, 0,
	1482, 0, 0, 0, 0, 1528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1481,
	0, 0, 0, 1503, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 1505, 1506, 1507, 0, 0, 0,
	0, 0, 0, 1487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 0,
	1529, 0, 0, 1518, 1509, 1511, 1493, 1494, 1500, 1521,
	1499, 1495, 0, 1492, 1490, 1491, 1483, 1484, 1485, 1486,
	1488, 1489, 0, 0, 1525, 0, 1526, 0, 0, 0,
	2644, 0, 0, 1496, 1497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 1502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 1479, 1480, 0,
	1512, 1513, 1514, 1522, 1523, 1524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1515, 1510, 0, 0,
	0, 0, 0, 0, 1482, 0, 0, 0, 0, 1528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1481, 0, 0, 0, 1503, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 1498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 1505, 1506,
	1507, 0, 0, 0, 0, 0, 0, 1487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1519, 0, 0, 1529, 0, 0, 1518, 1509, 1511,
	1493, 1494, 1500, 1521, 1499, 1495, 0, 1492, 1490, 1491,
	1483, 1484, 1485, 1486, 1488, 1489, 0, 0, 1525, 0,
	1526, 0, 0, 0, 2127, 0, 0, 1496, 1497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 1502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1479, 1480, 0, 1512,
	1513, 1514, 1522, 1523, 1524, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 1515, 1510, 0, 0, 0,
	0, 0, 0, 1482, 0, 0, 0, 0, 1528, 0,
	0, 1503, 0, 0, 0, 0, 0, 0, 0, 1479,
	1480, 0, 1512, 1513, 1514, 1522, 1523, 1524, 0, 0,
	0, 0, 1481, 0, 0, 0, 0, 1520, 1515, 1510,
	0, 1501, 0, 0, 0, 0, 1482, 0, 1498, 0,
	0, 1528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1481, 0, 0, 0, 0,
	0, 0, 0, 0, 1501, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 1505, 1506, 1507,
	0, 0, 0, 0, 0, 0, 1487, 0, 0, 0,
	0, 1518, 0, 0, 1493, 1494, 1500, 1521, 1499, 1495,
	0, 1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488, 1489,
	1519, 0, 0, 1529, 3593, 0, 0, 1509, 1511, 1504,
	1505, 1506, 1507, 0, 0, 0, 0, 0, 0, 1487,
	0, 0, 0, 0, 0, 0, 0, 1525, 0, 1526,
	0, 0, 0, 0, 0, 0, 1496, 1497, 0, 0,
	0, 0, 0, 1519, 0, 0, 1529, 0, 0, 0,
	1509, 1511, 1517, 0, 0, 0, 0, 0, 0, 0,
	0, 1502, 0, 0, 0, 0, 0, 746, 0, 782,
	1525, 0, 1526, 0, 0, 0, 0, 0, 0, 1496,
	1497, 1527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 0, 0, 1517, 0, 0, 1516, 0,
	0, 0, 0, 0, 1502, 765, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1527, 0, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 755, 0, 0, 0, 788,
	0, 1516, 1508, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 775, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 783, 757, 1479, 1480,
	0, 1512, 1513, 1514, 1522, 1523, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 1520, 1515, 1510, 0,
	0, 0, 0, 0, 781, 1482, 0, 0, 0, 0,
	1528, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1481, 0, 758, 0, 0, 1520,
	0, 0, 0, 1501, 750, 0, 0, 0, 0, 0,
	1498, 0, 0, 0, 0, 0, 0, 0, 0, 759,
	760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 767, 766, 1493, 1494, 1500, 1521, 1499, 1495, 761,
	1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488, 1489, 0,
	0, 0, 0, 3514, 0, 787, 0, 0, 1504, 1505,
	1506, 1507, 0, 0, 0, 0, 0, 0, 1487, 0,
	0, 784, 0, 1518, 0, 0, 1493, 1494, 1500, 1521,
	1499, 1495, 0, 1492, 1490, 1491, 1483, 1484, 1485, 1486,
	1488, 1489, 1519, 0, 0, 1529, 3513, 0, 0, 1509,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 756, 0, 0, 0, 0, 0, 0, 1525,
	0, 1526, 0, 0, 0, 0, 754, 0, 1496, 1497,
	779, 780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 0, 777, 0, 0, 0, 0,
	0, 0, 773, 0, 0, 770, 0, 0, 0, 0,
	0, 771, 0, 1527, 0, 0, 0, 0, 748, 0,
	785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 772, 0, 0, 0,
	769, 0, 0, 0, 0, 0, 0, 1479, 1480, 786,
	1512, 1513, 1514, 1522, 1523, 1524, 0, 774, 0, 0,
	0, 0, 0, 0, 1508, 0, 1515, 1510, 0, 0,
	0, 0, 0, 0, 1482, 0, 0, 776, 0, 1528,
	0, 0, 1503, 0, 0, 0, 0, 0, 0, 0,
	1479, 1480, 0, 1512, 1513, 1514, 1522, 1523, 1524, 778,
	0, 0, 0, 1481, 0, 0, 0, 0, 1520, 1515,
	1510, 0, 1501, 0, 0, 0, 0, 1482, 0, 1498,
	0, 0, 1528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1481, 0, 0, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 1498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 1505, 1506,
	1507, 0, 0, 0, 0, 0, 0, 1487, 0, 0,
	0, 0, 1518, 0, 0, 1493, 1494, 1500, 1521, 1499,
	1495, 0, 1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488,
	1489, 1519, 0, 0, 1529, 3398, 0, 0, 1509, 1511,
	1504, 1505, 1506, 1507, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 0, 0, 0, 0, 0, 1525, 0,
	1526, 0, 0, 0, 0, 0, 0, 1496, 1497, 0,
	0, 0, 0, 0, 1519, 0, 0, 1529, 0, 0,
	0, 1509, 1511, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 1502, 0, 0, 0, 0, 0, 0, 0,
	0, 1525, 0, 1526, 0, 0, 0, 0, 0, 0,
	1496, 1497, 1527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 0, 0, 1516,
	0, 0, 0, 0, 0, 1502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 0, 0, 0, 0, 0, 1479,
	1480, 0, 1512, 1513, 1514, 1522, 1523, 1524, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 1520, 1515, 1510,
	0, 0, 0, 0, 0, 0, 1482, 0, 0, 0,
	0, 1528, 0, 0, 1503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1481, 0, 0, 0, 0,
	1520, 0, 0, 0, 1501, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 1493, 1494, 1500, 1521, 1499, 1495,
	0, 1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488, 1489,
	0, 0, 0, 0, 3295, 0, 0, 0, 0, 1504,
	1505, 1506, 1507, 0, 0, 0, 0, 0, 0, 1487,
	0, 0, 0, 0, 1518, 0, 0, 1493, 1494, 1500,
	1521, 1499, 1495, 0, 1492, 1490, 1491, 1483, 1484, 1485,
	1486, 1488, 1489, 1519, 0, 0, 1529, 3248, 0, 0,
	1509, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 1526, 0, 0, 0, 0, 0, 0, 1496,
	1497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1517, 0, 0, 0, 0,
	0, 0, 0, 0, 1502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1479, 1480,
	0, 1512, 1513, 1514, 1522, 1523, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 1515, 1510, 0,
	0, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	1528, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 1479, 1480, 0, 1512, 1513, 1514, 1522, 1523, 1524,
	0, 0, 0, 0, 1481, 0, 0, 0, 0, 1520,
	1515, 1510, 0, 1501, 0, 0, 0, 0, 1482, 0,
	1498, 0, 0, 1528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1481, 0, 0,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 1505,
	1506, 1507, 0, 0, 0, 0, 0, 0, 1487, 0,
	0, 0, 0, 1518, 0, 0, 1493, 1494, 1500, 1521,
	1499, 1495, 0, 1492, 1490, 1491, 1483, 1484, 1485, 1486,
	1488, 1489, 1519, 0, 0, 1529, 3247, 0, 0, 1509,
	1511, 1504, 1505, 1506, 1507, 0, 0, 0, 0, 0,
	0, 1487, 0, 0, 0, 0, 0, 0, 0, 1525,
	0, 1526, 0, 0, 0, 0, 0, 0, 1496, 1497,
	0, 0, 0, 0, 0, 1519, 0, 0, 1529, 0,
	0, 0, 1509, 1511, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 1526, 0, 0, 0, 0, 0,
	0, 1496, 1497, 1527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1517, 0, 0,
	1516, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1503, 0, 0, 0, 0, 0, 0, 0,
	1479, 1480, 0, 1512, 1513, 1514, 1522, 1523, 1524, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 1520, 1515,
	1510, 0, 0, 0, 0, 0, 0, 1482, 0, 0,
	0, 0, 1528, 0, 0, 1503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1481, 0, 0, 0,
	0, 1520, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 1498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 1493, 1494, 1500, 1521, 1499,
	1495, 0, 1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488,
	1489, 0, 0, 0, 0, 3246, 0, 0, 0, 0,
	1504, 1505, 1506, 1507, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 0, 0, 1518, 0, 0, 1493, 1494,
	1500, 1521, 1499, 1495, 0, 1492, 1490, 1491, 1483, 1484,
	1485, 1486, 1488, 1489, 1519, 0, 0, 1529, 3005, 0,
	0, 1509, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1525, 0, 1526, 0, 0, 0, 0, 0, 0,
	1496, 1497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 1502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1479,
	1480, 0, 1512, 1513, 1514, 1522, 1523, 1524, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 1515, 1510,
	0, 0, 0, 0, 0, 0, 1482, 0, 0, 0,
	0, 1528, 0, 0, 1503, 0, 0, 0, 0, 0,
	0, 0, 1479, 1480, 0, 1512, 1513, 1514, 1522, 1523,
	1524, 0, 0, 0, 0, 1481, 0, 0, 0, 0,
	1520, 1515, 1510, 0, 1501, 0, 0, 0, 0, 1482,
	0, 1498, 0, 0, 1528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1481, 0,
	0, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1504,
	1505, 1506, 1507, 0, 0, 0, 0, 0, 0, 1487,
	0, 0, 0, 0, 1518, 0, 0, 1493, 1494, 1500,
	1521, 1499, 1495, 0, 1492, 1490, 1491, 1483, 1484, 1485,
	1486, 1488, 1489, 1519, 0, 0, 1529, 2642, 0, 0,
	1509, 1511, 1504, 1505, 1506, 1507, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	1525, 0, 1526, 0, 0, 0, 0, 0, 0, 1496,
	1497, 0, 0, 0, 0, 0, 1519, 0, 0, 1529,
	0, 0, 0, 1509, 1511, 1517, 0, 0, 0, 0,
	0, 0, 0, 0, 1502, 0, 0, 0, 0, 0,
	0, 0, 0, 1525, 0, 1526, 0, 0, 0, 0,
	0, 0, 1496, 1497, 1527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1517, 0,
	0, 1516, 0, 0, 0, 0, 0, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 1479, 1480, 0, 1512, 1513, 1514, 1522, 1523, 1524,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 1520,
	1515, 1510, 0, 0, 0, 0, 0, 0, 1482, 0,
	0, 0, 0, 1528, 0, 0, 1503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1481, 0, 0,
	0, 0, 1520, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 0, 1493, 1494, 1500, 1521,
	1499, 1495, 0, 1492, 1490, 1491, 1483, 1484, 1485, 1486,
	1488, 1489, 0, 0, 0, 0, 2641, 0, 0, 0,
	0, 1504, 1505, 1506, 1507, 0, 0, 0, 0, 0,
	0, 1487, 0, 0, 0, 0, 1518, 0, 0, 1493,
	1494, 1500, 1521, 1499, 1495, 0, 1492, 1490, 1491, 1483,
	1484, 1485, 1486, 1488, 1489, 1519, 0, 0, 1529, 2640,
	0, 0, 1509, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 1526, 0, 0, 0, 0, 0,
	0, 1496, 1497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1517, 0, 0,
	0, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1479, 1480, 0, 1512, 1513, 1514, 1522, 1523, 1524, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 1515,
	1510, 0, 0, 0, 0, 0, 0, 1482, 0, 0,
	0, 0, 1528, 0, 0, 1503, 0, 0, 0, 0,
	0, 0, 0, 1479, 1480, 0, 1512, 1513, 1514, 1522,
	1523, 1524, 0, 0, 0, 0, 1481, 0, 0, 0,
	0, 1520, 1515, 1510, 0, 1501, 0, 0, 0, 0,
	1482, 0, 1498, 0, 0, 1528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1481,
	0, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 1505, 1506, 1507, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 0, 0, 1518, 0, 0, 1493, 1494,
	1500, 1521, 1499, 1495, 0, 1492, 1490, 1491, 1483, 1484,
	1485, 1486, 1488, 1489, 1519, 0, 0, 1529, 2639, 0,
	0, 1509, 1511, 1504, 1505, 1506, 1507, 0, 0, 0,
	0, 0, 0, 1487, 3702, 0, 0, 0, 0, 0,
	0, 1525, 0, 1526, 0, 0, 0, 0, 0, 0,
	1496, 1497, 0, 0, 0, 0, 0, 1519, 0, 0,
	1529, 0, 0, 0, 1509, 1511, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 1502, 0, 0, 0, 0,
	0, 0, 0, 0, 1525, 0, 1526, 0, 0, 0,
	0, 0, 0, 1496, 1497, 1527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1517,
	0, 0, 1516, 0, 0, 0, 0, 0, 1502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 0, 3701, 0, 0,
	0, 0, 1479, 1480, 0, 1512, 1513, 1514, 1522, 1523,
	1524, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	1520, 1515, 1510, 0, 0, 0, 0, 2568, 0, 1482,
	0, 0, 0, 0, 1528, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1481, 0,
	0, 0, 0, 1520, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2569, 1518, 0, 0, 1493, 1494, 1500,
	1521, 1499, 1495, 0, 1492, 1490, 1491, 1483, 1484, 1485,
	1486, 1488, 1489, 0, 0, 2597, 0, 0, 0, 0,
	0, 0, 1504, 1505, 1506, 1507, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 1518, 0, 0,
	1493, 1494, 1500, 1521, 1499, 1495, 0, 1492, 1490, 1491,
	1483, 1484, 1485, 1486, 1488, 1489, 1519, 0, 0, 1529,
	0, 0, 0, 1509, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1525, 0, 1526, 0, 0, 0, 0,
	0, 0, 1496, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 1479, 1480, 0, 1512,
	1513, 1514, 1522, 1523, 1524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 1510, 0, 0, 0,
	0, 0, 0, 1482, 0, 0, 0, 0, 1528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1481, 0, 0, 0, 1503, 0, 0, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 1498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 1505, 1506, 1507,
	0, 0, 0, 0, 0, 0, 1487, 0, 2689, 0,
	0, 2688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 0, 1529, 0, 0, 1518, 1509, 1511, 1493,
	1494, 1500, 1521, 1499, 1495, 0, 1492, 1490, 1491, 1483,
	1484, 1485, 1486, 1488, 1489, 0, 0, 1525, 0, 1526,
	0, 0, 0, 0, 0, 0, 1496, 1497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 0, 0, 0, 0, 0, 0, 0,
	0, 1502, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2237, 0, 0, 0, 0, 1516, 0,
	1479, 1480, 0, 1512, 1513, 1514, 1522, 1523, 1524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	1510, 0, 0, 0, 2236, 0, 0, 1482, 0, 0,
	0, 0, 1528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1481, 0, 0, 0,
	1503, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 1498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 1505, 1506, 1507, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 0, 1529, 0, 0,
	1518, 1509, 1511, 1493, 1494, 1500, 1521, 1499, 1495, 0,
	1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488, 1489, 0,
	0, 1525, 0, 1526, 0, 0, 0, 0, 0, 0,
	1496, 1497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 1502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 1479, 1480, 0, 1512, 1513, 1514,
	1522, 1523, 1524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 1510, 0, 0, 0, 0, 0,
	0, 1482, 0, 0, 0, 0, 1528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1481, 0, 0, 0, 1503, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 1505, 1506, 1507, 0, 0,
	0, 0, 0, 0, 1487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 1529, 0, 0, 1518, 1509, 1511, 1493, 1494, 1500,
	1521, 1499, 1495, 0, 1492, 1490, 1491, 1483, 1484, 1485,
	1486, 1488, 1489, 0, 0, 1525, 0, 1526, 0, 0,
	0, 0, 0, 0, 1496, 1497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1517, 0, 0, 0, 0, 0, 0, 0, 0, 1502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 837, 1479, 1480,
	0, 1512, 1513, 1514, 1522, 1523, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 1510, 0,
	0, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	1528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1481, 0, 0, 0, 1503, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	1498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 1505,
	1506, 1507, 0, 0, 0, 0, 0, 0, 1487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 0, 1529, 0, 0, 1518, 1509,
	1511, 1493, 1494, 1500, 1521, 1499, 1495, 0, 1492, 1490,
	1491, 1483, 1484, 1485, 1486, 1488, 1489, 0, 0, 1525,
	0, 1526, 0, 0, 0, 0, 0, 0, 1496, 1497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 1479, 1480, 0, 1512, 1513, 1514, 1522, 1523,
	1524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 1510, 0, 0, 0, 0, 0, 0, 1482,
	0, 0, 0, 0, 1528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1481, 0,
	0, 0, 1503, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 1505, 1506, 1507, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 2695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1519, 0, 0, 1529,
	0, 0, 1518, 1509, 1511, 1493, 1494, 1500, 1521, 1499,
	1495, 0, 1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488,
	1489, 0, 0, 1525, 0, 1526, 0, 0, 0, 0,
	0, 0, 1496, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 1479, 1480, 0, 1512,
	1513, 1514, 1522, 1523, 1524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 1510, 0, 0, 0,
	2690, 0, 0, 1482, 0, 0, 0, 0, 1528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1481, 0, 0, 0, 1503, 0, 0, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 1498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 1505, 1506, 1507,
	0, 0, 0, 0, 0, 0, 1487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 0, 1529, 0, 0, 1518, 1509, 1511, 1493,
	1494, 1500, 1521, 1499, 1495, 0, 1492, 1490, 1491, 1483,
	1484, 1485, 1486, 1488, 1489, 0, 0, 1525, 0, 1526,
	0, 0, 0, 0, 0, 0, 1496, 1497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 0, 0, 0, 0, 0, 0, 0,
	0, 1502, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	1479, 1480, 0, 1512, 1513, 1514, 1522, 1523, 1524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	1510, 0, 0, 0, 0, 0, 0, 1482, 0, 0,
	0, 0, 1528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1481, 0, 0, 0,
	1503, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 1498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 1505, 1506, 1507, 0, 0, 0, 0, 0, 0,
	1487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 0, 1529, 0, 0,
	1518, 1509, 1511, 1493, 1494, 1500, 1521, 1499, 1495, 0,
	1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488, 1489, 0,
	0, 1525, 0, 1526, 0, 0, 0, 0, 0, 0,
	1496, 1497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 1502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 1479, 1480, 0, 1512, 1513, 1514,
	1522, 1523, 1524, 0, 0, 0, 0, 0, 0, 0,
	2657, 0, 0, 1515, 1510, 0, 0, 0, 2643, 0,
	0, 1482, 0, 0, 0, 0, 1528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1481, 0, 0, 0, 1503, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 1505, 1506, 1507, 0, 0,
	0, 0, 0, 0, 1487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 1529, 0, 0, 1518, 1509, 1511, 1493, 1494, 1500,
	1521, 1499, 1495, 0, 1492, 1490, 1491, 1483, 1484, 1485,
	1486, 1488, 1489, 0, 0, 1525, 0, 1526, 0, 0,
	0, 0, 0, 0, 1496, 1497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1517, 0, 0, 0, 0, 0, 0, 0, 0, 1502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 1479, 1480,
	0, 1512, 1513, 1514, 1522, 1523, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 1510, 0,
	0, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	1528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1481, 0, 0, 0, 1503, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	1498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 1505,
	1506, 1507, 0, 0, 0, 0, 0, 0, 1487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 0, 1529, 0, 0, 1518, 1509,
	1511, 1493, 1494, 1500, 1521, 1499, 1495, 0, 1492, 1490,
	1491, 1483, 1484, 1485, 1486, 1488, 1489, 0, 0, 1525,
	0, 1526, 0, 0, 0, 0, 0, 0, 1496, 1497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 1479, 1480, 0, 1512, 1513, 1514, 1522, 1523,
	1524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 1510, 0, 0, 0, 0, 0, 0, 1482,
	0, 0, 0, 0, 1528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1481, 0,
	0, 0, 1503, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 1505, 1506, 1507, 0, 0, 0, 0,
	0, 0, 1487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1519, 0, 0, 1529,
	0, 0, 1518, 1509, 1511, 1493, 1494, 1500, 1521, 1499,
	1495, 0, 1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488,
	1489, 0, 0, 1525, 0, 1526, 0, 0, 0, 0,
	0, 0, 1496, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1479, 1480, 0, 1512,
	1513, 1514, 1522, 1523, 1524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 1482, 0, 0, 0, 0, 1528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1481, 0, 0, 0, 1503, 0, 0, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 1498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 1505, 1506, 1507,
	0, 0, 0, 0, 0, 0, 1487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 0, 1529, 0, 0, 1518, 1509, 1511, 1493,
	1494, 1500, 1521, 1499, 1495, 0, 1492, 1490, 1491, 1483,
	1484, 1485, 1486, 1488, 1489, 0, 0, 1525, 0, 1526,
	0, 0, 0, 0, 0, 0, 1496, 1497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 0, 0, 0, 0, 0, 0, 0,
	0, 1502, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 1493, 1494, 1500, 1521, 1499, 1495, 0,
	1492, 1490, 1491, 1483, 1484, 1485, 1486, 1488, 1489,
}
var sqlPact = [...]int{

	4627, -1000, -1000, -1000, -1000, -1000, -1000, 195, 191, 189,
	186, 177, 172, 170, 168, -1000, -1000, -1000, 167, -1000,
	-1000, 166, -1000, 165, 162, 159, 158, -1000, 157, 156,
	155, -1000, -1000, -1000, -1000, 154, 153, 152, 60999, 1779,
	73063, 64000, 1819, 55394, 72630, 54961, 72197, 71764, 151, -1000,
	71331, 150, 147, 145, -1000, -1000, 143, 142, 2213, 45385,
	141, 140, 139, 2340, 138, 135, -1000, 134, -1000, 8401,
	1249, -1000, 133, 132, -1000, 8106, 961, 63140, 2223, 131,
	129, 44951, 2219, 2257, -1000, -1000, 1551, -1000, -1000, 127,
	116, 115, 109, 102, 101, 99, 97, 95, -1000, 92,
	91, 90, 89, 88, 85, 84, -1000, 83, 81, 80,
	79, 77, 76, 75, 73, 72, 71, 70, 66, -1000,
	79585, 1558, 1451, 1435, 1433, 1391, 1388, 865, 61, 59,
	58, 56, 53, 51, 50, -1000, 48, 47, 46, 45,
	-1000, 44, 43, 149, 42, 41, 38, 35, 28, 3477,
	-1000, 1267, 1076, 22036, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 77333, 73490, 22,
	-26, 19, -1000, 2560, 866, 37578, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 432, -1000, -1000, -1000,
	239, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1638,
	662, -1000, -1000, -1000, 70898, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1763, 4, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 660, -1000, 1762, 171, 1632, -1000, -1000, -1000,
	-1000, -1000, 73490, -1000, -1000, 2855, 2854, 1664, 658, 70471,
	-1000, 1231, -1000, 812, 24784, -1000, 1027, -1000, 24784, 237,
	-1000, -1000, -1000, -1000, -1000, -1000, 54528, 16508, 54095, 53662,
	70038, 16065, 60572, 49785, 49342, -1000, -1000, 40194, 1104, -1000,
	-1000, -1000, -1000, -1000, -2, 50653, 73490, -1000, 235, -1000,
	-1000, -1000, -1000, -1000, -1000, 31300, 1073, 30832, 994, 30364,
	576, -1000, -1000, -1000, -1000, 2853, 2852, 980, 2848, 2493,
	76906, 1444, 2845, 1374, 1061, 900, 2844, 2842, 2841, 2837,
	2836, 2835, 2834, 1164, 69605, 2284, 1372, 48899, 48456, 60999,
	60999, 2032, 69172, 1146, 1141, -1000, -1000, -1000, -1000, 2351,
	2241, 2227, 42363, -1000, -1000, 2833, 2831, 2830, 2829, 2827,
	76479, 1415, 2826, 1960, 2825, 2824, 2823, 2822, 2815, 2813,
	2812, 2808, 2807, -1000, 60139, 59706, 59273, 58840, 68739, 48013,
	47570, -1000, -1000, -1000, 39306, 6341, 5719, 68306, 40635, 60999,
	60999, -1000, -1000, 31756, 106, -1000, -1000, -1000, 40194, 2193,
	-1000, 31756, 106, -1000, 73490, -1000, 2279, 1557, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1777, 1344,
	2713, 47127, 1730, 1162, 2571, 2333, 2332, 1268, 1945, 2330,
	2324, 2323, 2321, 2318, 1371, 1990, 428, 21568, 1311, 1277,
	2317, 2316, 2726, 1574, 1572, 53229, 2805, 2804, 2524, 2309,
	2282, 2182, -1000, -1000, -1000, -1000, 1228, -1000, -1000, 56248,
	-1000, -1000, 1037, -1000, -1000, 1037, -1000, -1000, -1000, -1000,
	-1000, 1091, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1267,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1853, -1000,
	1592, -1000, -1000, 1963, 2538, 2538, 2538, 2599, 401, 397,
	-1000, 149, -1000, -1000, 84537, -1000, -1000, 31756, 31756, 31756,
	31756, 31756, 1576, -1000, 657, -1000, -1000, 703, -1000, 653,
	500, -1000, -1000, -1000, -1000, -1000, -1000, 650, 2730, -1000,
	-1000, -1000, -1000, -1000, 2683, -1000, 18772, -1000, -1000, -1000,
	370, 649, 31756, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 856, -1000, 233,
	827, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 552, 1458, 551, 551, 551,
	-1000, -1000, 892, -1000, -1000, -1000, 270, 548, 238, 545,
	-1000, -1000, -1000, -1000, 2278, 648, 645, -1000, 644, 642,
	641, 636, 632, -1000, -1000, -1000, 629, 626, 624, 623,
	619, 618, 614, 609, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 887, -1000, 607, 605, 604, 603, 601, 596,
	595, 593, 592, -1000, -1000, -3, 73490, -1000, 432, -3,
	-1000, -1000, 587, -1000, 25240, 25240, 25240, -1000, -1000, 1759,
	31756, -1000, 2047, -1000, 6, 6, 763, 38440, -1000, 36712,
	763, 549, 711, 41930, -1000, 2174, -1000, -1000, 586, 228,
	-1000, -1000, 2165, 73490, 16949, 73490, 60999, 60999, 60999, 2453,
	31756, -1000, -1000, 46684, 73490, 61426, 2651, 10685, 46684, 73490,
	2269, -1000, -1000, -1000, 73490, -1000, 31756, -1000, 2650, 1226,
	51084, 2617, -17, -1000, -1000, -1000, -1000, -1000, -1000, 1941,
	1989, 925, 1832, 1620, -1000, 24784, 2485, -1000, -1000, -1000,
	227, 16949, -1000, 1980, 2431, 1077, -1000, 1830, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1401, 2430, -1000, 1635,
	2426, 1393, -1000, -1000, 1674, -1000, -1000, 2512, -1000, -1000,
	1437, 2425, 9, -1000, -1000, 854, 2424, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 854, 2423, -1000, 751,
	-1000, 50226, 40194, 50653, -8, -1000, -1000, -24, -1000, 15622,
	84537, -1000, -1000, -1000, 84537, 771, -1000, -1000, 2419, -1000,
	84537, 759, -1000, -1000, 2417, -1000, -1000, -1000, 2803, -1000,
	2802, 1896, 2799, 2798, 2797, -1000, 1317, 1445, 2795, -1000,
	2794, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 58407, 1758,
	-1000, -1000, 57541, 57974, 898, -1000, 854, 1894, -1000, 854,
	1893, -1000, 845, -1000, 2793, 67873, 2060, 854, 1891, -1000,
	-1000, -1000, -1000, -1000, 43225, -1000, 43225, -1000, 43225, -1000,
	1241, -1000, 76052, 6, 6, 2683, -1000, -1000, -1000, -1000,
	-1000, 2415, 2791, 2789, 2788, -1000, 73490, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 182, 2407, -1000, -1000,
	182, 2405, -1000, 182, 2404, -1000, 180, 2400, -1000, -1000,
	1665, 2395, -1000, -29, 2391, -1000, -1000, -29, 2388, -1000,
	-30, -1000, -1000, -1000, 866, -1000, 38873, -1000, 38873, 67440,
	50226, 836, 625, 44518, 84537, -1000, -35, -1000, 40194, 84537,
	-1000, 50226, 57541, -1000, 67007, 57114, -1000, -1000, 1155, 1986,
	-1000, -1000, -1000, 836, 50226, 50226, 50226, -1000, 66574, -1000,
	-1000, 1667, 1296, 2514, 1650, 60999, -1000, 1457, -1000, -1000,
	-1000, 2553, 2259, -1000, 46253, 62707, -1000, 62280, -1000, 61853,
	-1000, 60999, -1000, 60999, -1000, 2787, 2786, 2785, -1000, 2784,
	2542, 84537, 2541, -1000, 2376, 1409, 1403, 73490, -1000, -1000,
	73490, -1000, 73490, -1000, -1000, -1000, -1000, -1000, 1938, -1000,
	-1000, -1000, -1000, 60999, -1000, -1000, -1000, -1000, -1000, -1000,
	2251, -1000, 1358, -1000, 1373, -1000, 1144, -1000, -1000, 183,
	-1000, -1000, -17, -1000, 75625, -1000, 1963, -1000, 73490, -1000,
	1918, 2202, 2247, 1342, 1789, 2049, -1000, 29896, 2005, 34036,
	1818, 149, -1000, -1000, 149, 149, 24328, -1000, -1000, 10685,
	10685, 16949, 1123, 31756, 31756, 31756, 31756, 31756, 31756, 31756,
	31756, 31756, 31756, 31756, 31756, 31756, 31756, 31756, 31756, 31756,
	31756, 31756, 31756, 31756, 31756, 31756, 31756, 31756, 31756, 31756,
	31756, 31756, 31756, 31756, 31756, 31756, 31756, 31756, 1590, 31756,
	1089, 31756, 31756, 31756, 31756, 1623, -1000, -1000, 1528, 448,
	1566, -1000, 2685, 2685, 2685, 85065, 85065, 542, 2781, 703,
	-1000, 31756, -1000, 106, 31756, 17392, -1000, -1000, -1000, 397,
	9389, 1834, -1000, 396, 17860, -1000, -1000, -1000, 18772, 500,
	29428, 31756, 881, 84537, 1366, 2712, 15181, 2226, 2117, -1000,
	2718, -1000, -1000, 2712, -1000, -1000, -1000, -1000, 2712, 1119,
	1118, 2712, -1000, 2712, 2712, 585, 692, 690, 21100, 20632,
	20164, 19696, 681, 31756, 31756, 31756, 31756, 31756, 31756, 31756,
	31756, -1000, 28972, 28504, 28036, 34492, 27568, 31756, 19228, 27100,
	26632, 73490, -3, 2649, 31756, 161, -1000, 82689, -1000, 161,
	161, 584, -33, 84537, 2044, 2044, 38009, 1911, 1588, 1588,
	1588, -1000, 763, 11627, 763, 65716, 1611, 763, 763, 211,
	173, 392, 36281, 2047, 65716, 684, 574, 18, 16, 13,
	-1000, -1000, 12, 11, -1000, -1000, 60999, 573, 17392, 16949,
	1202, -39, 210, 2017, 2016, 2007, -1000, 2001, 1276, -40,
	1088, -15, -1000, 404, -51, -1000, 1125, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 885,
	563, 558, 332, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 552,
	1458, 551, 551, 551, -1000, -1000, -1000, 270, 548, 238,
	545, -1000, -1000, -1000, -1000, -1000, -1000, 2160, -24, 61426,
	781, -52, 992, -17, -1000, -1000, -1000, 51084, 1037, -1000,
	1767, -1000, -1000, -1000, -1000, -1000, -1000, 1168, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 856, -1000, -1000, -1000, -1000,
	-1000, -1000, 2710, 2690, -4, -1000, -1000, 16949, -1000, -19,
	1361, -1000, 52796, 1792, 2519, 2506, 1240, -1000, 1215, 2596,
	56248, 2622, 2632, 891, -1000, 2159, -1000, -1000, 809, 1347,
	1083, 56248, 1635, -1000, 10685, -1000, 2059, 2590, 1188, 1184,
	1188, 1188, 1180, -1000, 56248, 1082, -1000, 1081, -1000, -20,
	2621, 2631, 575, -1000, 2157, 1080, -1000, -1000, 60999, 16949,
	-1000, 1899, -1000, 50226, -1000, 50226, 2051, -1000, -53, 751,
	-8, 50653, 73490, 208, -1000, 31756, 106, 31756, 106, -1000,
	-1000, 2387, -1000, -1000, -1000, 2780, 1420, 1956, -1000, -1000,
	-1000, 544, 1889, 2156, 73490, 2022, -10, 60999, -1000, 1635,
	1887, -1000, -1000, 56681, -1000, 2384, -1000, 2383, 589, 2779,
	-1000, 1751, 1884, -1000, -1000, -1000, 75198, 1084, 2382, 933,
	489, 2648, -1000, 489, 43656, -1000, 73490, -1000, -1000, 73490,
	-1000, -1000, -1000, 2778, -1000, 60999, -1000, -1000, 60999, -1000,
	60999, -1000, 60999, -1000, 60999, 60999, -1000, 73490, 50226, 50226,
	50226, 744, 51942, -54, -59, 391, -1000, 66147, 73490, 932,
	52369, 73490, 2475, 836, 40194, -35, 836, 836, 751, -1000,
	751, -1000, 60999, 2234, -1000, 836, 836, 836, -1000, -1000,
	-1000, -1000, 2777, 2775, -1000, -1000, -1000, 844, 60999, 73490,
	60999, -1000, -1000, 73490, -1000, 73490, -1000, 844, 73490, 844,
	73490, 844, 73490, -1000, -1000, -1000, -1000, -1000, -1000, 106,
	31756, 1252, -1000, 2218, -1000, 2211, -1000, 40, -1000, -1000,
	-1000, -1000, 1578, 60999, 60999, 60999, 60999, 73490, 60999, -1000,
	56248, -1000, 1918, 2202, -1000, -1000, -1000, -1000, -1000, -1000,
	1197, 1658, -1000, 1981, -1000, 1234, -1000, -1000, -1000, 84537,
	34948, -1000, -1000, 84537, 1349, -1000, 33580, 33124, -1000, -1000,
	1332, 60999, 2025, -1000, 2025, -9, -1000, 82161, 1979, 60999,
	-1000, -1000, -1000, -1000, -1000, 808, 463, 463, 1072, 1072,
	1072, 1072, 2635, 5443, 5803, 6066, 7503, 7503, 3889, 3889,
	3889, 3889, 3889, 7503, 5511, 429, 429, 5511, 5511, 5511,
	5511, 5511, 429, 429, 429, 7503, 7503, 7503, 85065, 84801,
	8166, 31756, 31756, 1078, 1509, 448, 7866, 31756, 3912, 3912,
	3912, 3912, -1000, 1562, -1000, -1000, -1000, -1000, 2154, 543,
	34492, 34492, -1000, -1000, -1000, -1000, 18316, 31756, -1000, -1000,
	-1000, -1000, 26164, -1000, -1000, 81829, -243, 390, -182, 7,
	-1000, 31756, 31756, 31756, 389, -1000, 204, 31756, 73490, -1000,
	78792, 680, -147, -1000, -61, 1195, -1000, 31756, -1000, -1000,
	1075, -1000, 1074, 1066, 1040, -1000, 541, 387, -1000, 203,
	-1000, 1567, 540, 539, 383, -64, 381, 807, 788, 376,
	371, 368, 31756, -1000, -1000, -1000, -1000, -1000, 81540, -1000,
	-1000, 81251, -1000, -1000, 81208, -1000, -1000, 80919, -1000, -1000,
	-1000, 84273, 78528, 78237, 78194, 6144, 11074, 10749, -67, 366,
	-1000, 2150, -182, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 362, -1000, 360, -1000, 84009, -182, 359, 5370, -1000,
	34492, 34492, 34492, -1000, 358, -1000, 82425, -1000, 83745, 25708,
	25708, 25708, 357, 83481, 31756, -182, -69, -1000, -72, -1000,
	-1000, 538, -74, 875, 25240, 37145, 16949, -1000, 875, 875,
	31756, -1000, 31756, 1993, -1000, -1000, -1000, 1992, 1527, 2044,
	38009, -1000, -1000, -1000, -1000, 65716, -1000, 2683, 2163, -1000,
	65716, -1000, -1000, 73490, 432, -1000, 65716, 65716, 16949, 763,
	-1000, 763, 65716, 668, -1000, -1000, -1000, -1000, -1000, 353,
	41066, 7, 201, 836, -1000, 16949, 2092, 2092, 2092, 2092,
	-1000, -1000, 73490, 2642, -1000, 1477, -1000, 10685, -1000, 702,
	947, 532, -1000, 2712, 2712, -1000, 2712, 73490, 112, 24784,
	-1000, 1037, -1000, -1000, 1301, -1000, 1431, -1000, 1115, -1000,
	-1000, -1000, -1000, 24784, -1000, 1977, 73490, 73490, 60999, -1000,
	-1000, 1883, 74771, 1876, 10685, 73490, -1000, -1000, 531, 524,
	1972, 1971, 73490, 73490, 1970, 74344, 73917, 73490, 1584, 31756,
	1805, 1875, 106, 106, -1000, -1000, 106, 519, 1060, 60999,
	60999, 60999, 1392, -1000, -1000, -1000, -1000, -1000, 55821, -1000,
	-1000, 2717, 2716, -1000, 1188, -1000, -1000, -1000, 1188, 1635,
	1381, 60999, 73490, 1485, 106, 106, -1000, -1000, 106, 517,
	16949, 1410, -1000, 1899, -1000, -1000, -1000, -1000, 45826, 854,
	854, 836, 2149, -1000, 2051, -1000, -1000, 14740, 84537, -1000,
	84537, -1000, 73490, -1000, 895, 73490, 52369, 831, 2374, 42794,
	-24, 836, 50226, 60999, -10, -1000, 1635, 2371, 432, 1874,
	-1000, -1000, 50226, 50226, 2773, 516, 2772, -1000, 60999, 2370,
	1750, 1872, 2441, 737, 73490, 875, 38009, 1424, -1000, 41499,
	911, 73490, 1367, 96, -1000, -1000, -1000, 34, 73490, -1000,
	2771, -1000, -1000, 182, 182, 182, -1000, 180, 1665, -1000,
	-29, -29, -1000, -1000, 744, 744, 836, -13, 515, -1000,
	766, 750, 39753, 50226, -77, -1000, -1000, -1000, -1000, -1000,
	60999, 73490, 630, 2054, 73490, -79, -1000, 200, 512, -1000,
	-1000, 836, 2148, -1000, -1000, 859, -1000, 1134, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2, -24, -24,
	-1000, 844, -1000, 844, -1000, 844, -1000, 84537, -1000, 1251,
	1247, 73490, -1000, 16949, 73490, 60999, 16949, 60999, 2201, 2199,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 953, -1000,
	1349, 1656, -1000, 500, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1929, -1000, -16, 24328, 1794, -1000, -1000,
	60999, 1, 31756, 31756, 7099, 6508, 31756, 34492, 34492, -1000,
	31756, 5477, -1000, -1000, -1000, -1000, -1000, 2147, 498, 31756,
	10685, 4851, 4764, -1000, 350, 10454, 5511, -1000, 31756, -1000,
	347, 23872, -1000, 82953, -23, -80, -1000, 12080, -182, -82,
	-1000, -1000, 696, -1000, 2439, -1000, 31756, 83217, 1912, 1550,
	1365, 1270, 2712, 2729, 14299, -1000, 44087, 877, 1614, -1000,
	-1000, 2712, 814, -1000, -1000, -1000, 814, -1000, 80630, -1000,
	-1000, -1000, -1000, 10685, 10685, 31756, 31756, -1000, 31756, 31756,
	31756, -1000, -1000, 31756, -1000, -1000, 2141, 31756, -1000, 10685,
	10685, 34492, 34492, 34492, 34492, 34492, 34492, 34492, 34492, 34492,
	34492, 34492, 34492, 34492, 34492, 34492, 34492, 34492, 34492, 34492,
	1936, 34492, 2678, 2678, 2678, -1000, 2198, 2141, 31756, 31756,
	10685, 345, 342, 330, -1000, 31756, -182, -1000, -1000, 744,
	-1000, 2113, -1000, 31756, -1000, -75, -1000, 2047, -1000, -1000,
	2113, 2113, -85, 84537, 38009, 38009, -1000, 497, 31756, 1988,
	-1000, -1000, 678, -236, -1000, 749, -1000, -1000, -1000, -1000,
	-1000, 432, -1000, -1000, -1000, 198, 65716, 65716, 675, -1000,
	-87, -1000, -1000, -88, -1000, 2646, 324, 16949, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -24, 1630, 2727, -1000,
	2715, 689, 671, 2712, 323, 321, 319, -24, 73490, -1000,
	-17, -1000, -1000, -1000, 31756, -1000, -1000, 2513, 1031, 1029,
	-1000, 2359, -1000, 1871, -1000, 915, -1000, 1399, -1000, 31756,
	31756, 495, 494, 1484, 2770, 930, 2356, 1665, 2350, 1665,
	-1000, -1000, 813, -1000, 84537, 491, 490, -1000, -19, 1345,
	858, -1000, -1000, 31756, 31756, 65289, -1000, 375, 2512, 0,
	-1000, 1021, -1000, -1000, -1000, -1000, 1635, 1018, -1000, -1000,
	-1000, 857, -1000, -1000, 31756, -1000, -20, 1011, -1000, -1000,
	-1000, -1000, -1000, -1000, 50226, 836, -1000, 2768, 2764, 2763,
	316, -90, -21, 10685, 2645, 1769, 527, 60999, 811, -1000,
	2683, -1000, -1000, -1000, 60999, 2644, 2345, 854, 854, -1000,
	2762, -1000, 920, 16949, 60999, 2342, 1948, 737, 51515, -1000,
	854, 1614, -119, -1000, 1367, 23404, 2509, -95, -1000, -1000,
	-1000, 875, 43656, 38009, 31756, 2760, -97, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 64862, 64862, 50226, 50226,
	50226, 836, 73490, 73490, 52369, 2755, 487, 73490, 73490, 486,
	-1000, 73490, 73490, 2752, 50226, -1000, 106, -1000, 1622, 60999,
	13858, -1000, -1000, -1000, -1000, -1000, 844, -1000, -1000, 1490,
	1815, 1490, 1356, 1355, -1000, 1653, -1000, -1000, -1000, -1000,
	2028, 2529, 16949, 2638, 3912, 31756, 31756, 5005, 3803, 346,
	3912, 31756, 31756, 10685, 8918, -98, 31756, 31756, -1000, 31756,
	669, 84537, 2722, 31756, 315, 314, -1000, -1000, -1000, 2692,
	-1000, -1000, -1000, 84537, 31756, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 310, -1000, 197, -1000, -1000, -1000, 77760, -1000,
	31756, 302, 299, -1000, -1000, -1000, 294, 293, 9990, 3959,
	80587, 80298, 80009, 84537, 2198, 84537, -1000, -1000, 1110, 1110,
	1169, 1169, 1169, 1169, 2678, 841, 989, 745, 488, 488,
	488, 513, 1121, 1121, 488, 488, 488, 2140, 1952, 485,
	4875, -1000, -1000, 84537, 84537, 291, -1000, -1000, -1000, -182,
	290, 2108, 2588, 84537, -1000, 38009, 2108, 2108, -1000, -1000,
	1527, 73490, 84537, 38009, -1000, 2163, -1000, 12531, -1000, 16949,
	-1000, -1000, -1000, -1000, 2683, -1000, 41066, -1000, 475, -1000,
	107, -1000, -1000, 664, 2751, 688, 285, -1000, -1000, -1000,
	-24, 84537, 73490, 73490, 73490, 2337, -1000, 2153, -1000, 79966,
	-103, -1000, 82161, 31756, 73490, -1000, 1597, 2027, 939, -1000,
	2556, 73490, -1000, 73490, -1000, -1000, 73490, 73490, 60999, 2303,
	-104, 84537, -25, -1000, 747, -1000, 1175, -1000, 13417, 60999,
	60999, 2248, -105, 16949, -29, -1000, -1000, -1000, -1000, 2048,
	-1000, 63567, 1713, 106, -1000, 64431, 2748, 473, -1000, 1618,
	-1000, 514, 1635, 106, 60999, -1000, -1000, -1000, 471, 73490,
	1746, 469, 16949, 1950, 737, 51515, -1000, 1084, 2049, -1000,
	-118, -1000, 439, 106, 1614, -1000, -119, 84537, -1000, 743,
	-1000, -116, -1000, -1000, 262, -1000, 2474, 2472, -1000, -1000,
	31756, 467, 465, 73490, 2470, -1000, -1000, -117, -1000, 1833,
	-1000, -1000, -1000, -1000, -1000, 16949, 1337, -1000, 462, 461,
	-1000, -1000, -1000, -1000, 2529, 3912, 3912, 31756, 31756, 31756,
	3912, 8918, -123, -1000, 3912, 3912, -182, -1000, -1000, 82953,
	-1000, -1000, -1000, 84537, -1000, 12976, 1539, -1000, 79677, -1000,
	-1000, -1000, -1000, 31756, 31756, -1000, -1000, -1000, -1000, -1000,
	34492, 2135, 455, 10685, -1000, -1000, 871, 31756, 31756, 2047,
	871, 871, -1000, -124, -1000, -1000, -1000, 2683, 107, -1000,
	-1000, 2747, 16949, 682, -1000, 2745, -1000, -1000, -1000, -1000,
	73490, -1000, 73490, -1000, 16949, 73490, 2119, 1864, -1000, -1000,
	1968, 451, 34492, 60999, 748, 2121, 1480, 31756, 1794, -125,
	-131, 1857, -1000, -1000, 1855, 31756, -1000, 10685, 449, 1665,
	1665, -132, -133, -1000, 31756, 1010, 73490, 22948, -1000, 2741,
	2512, -1000, -1000, 31756, 1008, -1000, 1485, 2076, -1000, -1000,
	-1000, -1000, 1967, -1000, -1000, 73490, 1965, 840, -134, -1000,
	741, 739, -1000, 52369, 831, 830, -1000, -1000, -1000, 432,
	31756, -1000, 60999, 31756, 1744, -1000, 737, 51515, -1000, 2441,
	1367, -1000, 2448, 73490, 2504, -1000, 2049, 448, -1000, 836,
	447, 446, -140, 31756, 31756, -148, 445, 836, -126, -1000,
	699, 695, -1000, -1000, 60999, 60999, 31756, 31756, -1000, 3912,
	3912, 3912, -1000, 252, -1000, -1000, 1614, 2586, -1000, 79388,
	79345, 3853, 34492, 10685, -150, -1000, 73490, 84537, -182, -1000,
	-1000, -1000, 464, -1000, 2740, -1000, -1000, 1798, -1000, -1000,
	-1000, 73490, 1870, -1000, 929, 31756, 4875, 444, 31756, -1000,
	-1000, 2040, 2169, 2048, 443, -1000, -1000, -1000, -1000, 918,
	1413, -1000, -1000, 84537, 2564, 31756, -1000, -1000, 441, 440,
	84537, 438, 736, 2132, -1000, -1000, -1000, 84537, 437, 831,
	-1000, 1579, 1713, 436, -1000, -1000, -1000, 2053, -1000, 64431,
	35389, 35389, 251, 2640, 830, -1000, 2658, -1000, 2637, -156,
	920, -157, 60999, 51515, -1000, 1948, -1000, 1102, -162, 73490,
	1367, -1000, -1000, 50226, 50226, 918, -163, -164, -1000, 50226,
	-1000, 1833, -1000, 73490, -1000, 73490, -1000, -1000, -165, -179,
	-1000, 1526, 31756, -1000, -1000, 3853, -184, -1000, -181, -1000,
	2636, -1000, -1000, -1000, -1000, 2320, 2103, 79056, 1919, 73490,
	283, 2155, -1000, -1000, 1485, 73490, 2048, 2095, 60999, 919,
	16949, -185, 1490, 1490, 31756, 22492, 1555, 31756, -1000, 60999,
	73490, -1000, 2469, -1000, -1000, -1000, 2048, 106, -1000, -1000,
	106, 918, 435, 1480, 434, -1000, 1950, 1239, -1000, 875,
	-1000, -1000, -186, -192, 1480, 918, -1000, -193, -1000, -194,
	-195, -1000, -1000, 246, 32668, 32668, 32668, -182, -1000, 73490,
	433, 2271, 843, -1000, 1672, 1487, 98, 938, -1000, -1000,
	2121, -201, -1000, 842, 432, -1000, 31756, -1000, 918, -202,
	-1000, 907, -207, -1000, 906, -208, -1000, 2131, -1000, -209,
	431, -210, -1000, -1000, -1000, 1485, 840, -1000, 1480, 31756,
	2048, 31756, -1000, 43656, -1000, 836, 836, 2048, 1480, 836,
	-1000, -1000, -1000, 2434, -1000, 35830, 1604, 1352, 81872, 2434,
	2434, -1000, -1000, 73490, 2608, -1000, 1734, 1702, 1253, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2607, 1919, 84537,
	2048, -1000, 1490, 2068, -1000, 1490, 2129, -1000, 1486, -1000,
	73490, -1000, 73490, 831, -1000, 2048, -215, 1485, -218, -187,
	-1000, -1000, 1485, 2048, -1000, -1000, 1595, 2657, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 735, -1000, 2457, -1000,
	943, 1583, 1583, 734, 1672, -1000, -1000, 417, -1000, 415,
	-1000, -224, -1000, -1000, 1485, 918, 873, 1480, -1000, -1000,
	1485, 1315, -1000, -1000, 1594, 32212, 31756, -1000, 2666, -1000,
	-1000, 2014, -1000, 31756, 2121, 31756, 31756, 1657, 873, 1480,
	-1000, 2737, 2048, -1000, -1000, -1000, -1000, 84537, -1000, -1000,
	-1000, 84537, -1000, -225, -226, -1000, -1000, -1000, -1000, 2048,
	-1000, 1485, 1485, 1003, 1485, 873, -1000, 409, 873, -1000,
	31756, -1000, -227, 1485, -1000,
}
var sqlPgo = [...]int{

	0, 3388, 3387, 3384, 3383, 3382, 3379, 3376, 3371, 3366,
	3356, 3354, 3352, 3346, 3345, 3342, 3341, 3340, 3339, 3335,
	3332, 3329, 3328, 3327, 3326, 3324, 3322, 3321, 3320, 3319,
	3314, 3311, 3310, 3309, 3308, 3305, 3304, 3303, 3302, 3301,
	3300, 3297, 3295, 3292, 3291, 3290, 3288, 3287, 36, 3284,
	3282, 3277, 3274, 3272, 3271, 3270, 3266, 3265, 3264, 3263,
	3262, 3261, 3260, 3259, 3258, 3257, 40, 3256, 225, 3254,
	3248, 3246, 3245, 3244, 3238, 3237, 3235, 3233, 3230, 224,
	3229, 120, 3228, 3224, 3223, 3222, 3220, 223, 3219, 3217,
	3216, 3213, 3212, 3211, 3210, 3208, 156, 204, 3207, 226,
	3205, 3204, 3202, 3200, 3196, 3195, 3192, 3189, 3188, 3187,
	203, 3186, 221, 3185, 3183, 3182, 3181, 3180, 3179, 3177,
	3176, 3175, 3174, 3172, 3169, 3165, 3161, 3159, 3158, 3156,
	3154, 3151, 3148, 3145, 3144, 3139, 3138, 3137, 3136, 3133,
	3132, 229, 166, 3128, 3126, 219, 215, 3123, 134, 96,
	94, 38, 3121, 114, 43, 3120, 20, 143, 189, 6869,
	187, 3116, 3115, 3113, 198, 155, 3111, 193, 3110, 3109,
	3108, 3107, 81, 68, 144, 142, 141, 130, 164, 3106,
	3102, 71, 57, 34, 30, 3101, 3100, 3099, 2662, 115,
	3098, 211, 199, 129, 3097, 3096, 1087, 3091, 133, 84,
	122, 31, 100, 3071, 109, 25, 3069, 151, 54, 3067,
	127, 72, 33, 6737, 3769, 3065, 119, 235, 85, 67,
	174, 173, 171, 168, 136, 137, 3064, 207, 3063, 75,
	160, 3061, 3060, 3059, 53, 158, 83, 3058, 6, 2,
	135, 11, 93, 15, 3057, 13, 3056, 3055, 3054, 3053,
	24, 131, 3052, 117, 59, 3051, 18, 3049, 73, 170,
	3048, 180, 97, 3047, 3046, 210, 165, 154, 3045, 16,
	191, 3044, 3043, 3042, 3041, 3039, 95, 21, 99, 3038,
	3032, 101, 194, 157, 3029, 49, 3001, 148, 88, 121,
	228, 113, 177, 86, 183, 140, 185, 3000, 2998, 2997,
	172, 2996, 2995, 169, 138, 2994, 2993, 231, 35, 58,
	188, 63, 153, 126, 2990, 163, 2987, 2985, 2982, 230,
	150, 181, 9, 1, 76, 110, 28, 12, 186, 118,
	205, 91, 2980, 3761, 410, 342, 52, 104, 89, 56,
	92, 116, 220, 62, 2979, 2978, 1178, 2977, 2976, 2975,
	2973, 146, 2970, 2969, 2968, 112, 128, 149, 2967, 125,
	80, 10, 106, 218, 222, 90, 175, 176, 208, 2966,
	132, 2965, 74, 105, 2963, 161, 202, 107, 2960, 1322,
	108, 2959, 213, 2956, 2955, 2952, 2951, 2949, 2947, 2946,
	768, 2945, 111, 2944, 2943, 217, 152, 2942, 214, 162,
	145, 66, 55, 2940, 64, 70, 2938, 159, 37, 2937,
	3800, 32, 0, 8117, 5797, 7218, 2936, 4975, 2935, 182,
	98, 2929, 2928, 2917, 79, 2912, 65, 2906, 2905, 50,
	2903, 22, 7, 8, 19, 14, 583, 527, 2902, 2901,
	87, 102, 123, 2900, 227, 184, 2899, 2898, 2897, 69,
	2894, 27, 2892, 23, 2891, 2890, 29, 5, 17, 2889,
	2888, 190, 2887, 201, 2885, 2883, 2665, 103, 2882, 2881,
	212, 77, 2878, 209, 2876, 139, 195, 2873, 2872, 2871,
	2870, 206, 2869, 2606, 2868, 26, 4, 2867, 2863, 167,
	3, 2493, 2862, 2861, 61, 2860, 2859, 147,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 12, 12, 7, 7, 8, 8,
	8, 36, 36, 9, 9, 9, 11, 11, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 15, 15, 26,
	26, 16, 16, 28, 28, 17, 17, 29, 29, 470,
	470, 20, 31, 21, 32, 14, 471, 471, 471, 471,
	25, 22, 33, 23, 23, 23, 23, 23, 152, 152,
	152, 152, 19, 19, 27, 27, 175, 175, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	469, 469, 177, 177, 176, 171, 171, 472, 472, 178,
	178, 178, 180, 180, 37, 37, 37, 95, 95, 95,
	96, 96, 97, 97, 153, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 83, 83, 410, 410, 411, 411,
	148, 148, 149, 149, 149, 149, 150, 150, 151, 151,
	151, 51, 39, 39, 39, 39, 39, 39, 39, 40,
	40, 40, 40, 41, 41, 41, 41, 41, 41, 42,
	42, 42, 42, 42, 42, 49, 49, 49, 49, 142,
	142, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 479, 479, 480, 480, 481, 481, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 63, 63, 252, 252, 228, 228, 64, 64,
	64, 65, 65, 66, 66, 53, 53, 463, 463, 266,
	266, 374, 374, 68, 68, 286, 286, 69, 69, 69,
	69, 69, 69, 70, 70, 70, 70, 70, 70, 70,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	77, 77, 77, 78, 78, 78, 75, 75, 75, 73,
	73, 73, 72, 72, 72, 76, 76, 76, 74, 74,
	74, 267, 267, 79, 79, 79, 79, 79, 79, 79,
	79, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 376, 376, 80, 80,
	80, 344, 344, 84, 84, 84, 301, 301, 85, 85,
	85, 85, 85, 86, 86, 86, 86, 98, 98, 98,
	98, 466, 466, 259, 259, 191, 191, 191, 191, 91,
	91, 91, 91, 92, 92, 92, 93, 93, 147, 147,
	104, 104, 104, 104, 104, 103, 103, 103, 103, 103,
	103, 43, 43, 43, 44, 44, 45, 45, 46, 46,
	47, 47, 48, 48, 48, 48, 48, 106, 106, 475,
	475, 108, 105, 105, 105, 107, 107, 107, 107, 109,
	110, 110, 110, 110, 110, 110, 110, 110, 111, 111,
	404, 404, 275, 275, 402, 402, 418, 418, 403, 403,
	232, 232, 232, 232, 232, 233, 233, 233, 409, 409,
	409, 409, 409, 409, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 131, 131,
	131, 141, 141, 141, 141, 141, 141, 141, 134, 134,
	134, 121, 121, 113, 113, 113, 113, 113, 117, 117,
	117, 117, 117, 117, 117, 117, 114, 114, 123, 123,
	123, 123, 123, 118, 118, 120, 120, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 115, 115, 115, 115,
	125, 125, 125, 125, 307, 307, 307, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 137, 137, 137,
	137, 137, 137, 358, 358, 132, 132, 132, 132, 136,
	136, 136, 136, 291, 291, 129, 129, 129, 130, 130,
	130, 135, 135, 133, 133, 138, 138, 138, 138, 116,
	116, 116, 484, 484, 484, 139, 139, 128, 128, 140,
	140, 140, 140, 140, 140, 140, 140, 127, 127, 127,
	126, 126, 126, 126, 119, 464, 464, 461, 461, 461,
	461, 461, 461, 461, 462, 462, 465, 465, 89, 89,
	89, 58, 58, 156, 156, 156, 156, 154, 154, 155,
	155, 59, 59, 485, 485, 485, 473, 473, 473, 474,
	474, 474, 474, 474, 474, 234, 234, 235, 235, 325,
	325, 325, 325, 325, 238, 238, 179, 179, 179, 241,
	242, 242, 239, 239, 240, 240, 240, 244, 244, 243,
	246, 246, 245, 324, 425, 425, 427, 427, 427, 427,
	427, 427, 427, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 423, 423, 423, 424, 419, 419,
	420, 420, 420, 420, 236, 236, 237, 237, 237, 237,
	421, 422, 257, 257, 361, 426, 426, 428, 428, 430,
	486, 486, 486, 486, 486, 486, 487, 487, 323, 323,
	322, 322, 250, 250, 431, 431, 431, 431, 432, 432,
	432, 432, 432, 435, 434, 433, 433, 433, 433, 433,
	62, 62, 62, 288, 288, 287, 287, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 144, 144, 194, 194, 60, 60, 60, 57,
	57, 57, 10, 10, 10, 13, 13, 13, 483, 483,
	61, 61, 61, 61, 193, 193, 193, 468, 468, 467,
	467, 489, 489, 67, 67, 67, 67, 67, 67, 56,
	56, 56, 56, 56, 490, 490, 308, 308, 306, 306,
	256, 256, 360, 197, 197, 172, 172, 172, 24, 18,
	18, 34, 34, 35, 35, 30, 30, 476, 476, 477,
	477, 90, 90, 94, 94, 94, 102, 102, 143, 143,
	143, 143, 143, 143, 143, 38, 38, 38, 38, 50,
	50, 50, 50, 100, 492, 492, 492, 101, 101, 101,
	491, 491, 192, 192, 319, 319, 320, 320, 493, 493,
	321, 321, 321, 321, 186, 185, 187, 187, 55, 55,
	55, 181, 181, 182, 182, 183, 183, 184, 184, 494,
	494, 87, 87, 87, 146, 146, 227, 227, 227, 315,
	315, 315, 251, 251, 202, 202, 318, 318, 316, 316,
	316, 316, 285, 285, 285, 145, 145, 264, 264, 277,
	277, 278, 278, 371, 371, 279, 99, 99, 159, 159,
	157, 157, 157, 157, 157, 157, 157, 157, 164, 164,
	165, 165, 166, 166, 167, 168, 168, 168, 168, 268,
	268, 169, 169, 169, 158, 158, 158, 160, 160, 160,
	160, 160, 160, 160, 163, 163, 163, 163, 170, 170,
	170, 162, 162, 442, 442, 442, 444, 444, 445, 441,
	441, 443, 443, 488, 488, 290, 290, 290, 248, 249,
	247, 247, 254, 254, 253, 255, 255, 359, 359, 359,
	173, 173, 173, 282, 282, 282, 282, 283, 283, 311,
	311, 309, 309, 309, 309, 310, 310, 312, 312, 312,
	313, 313, 314, 314, 281, 281, 340, 340, 161, 161,
	161, 261, 261, 261, 262, 262, 331, 331, 331, 331,
	331, 331, 332, 332, 330, 330, 330, 330, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 363, 364, 364,
	263, 263, 365, 317, 317, 459, 459, 459, 460, 460,
	357, 357, 366, 366, 366, 366, 366, 366, 355, 355,
	356, 356, 372, 373, 373, 294, 294, 294, 294, 292,
	292, 295, 295, 295, 295, 293, 293, 367, 367, 367,
	367, 284, 284, 368, 368, 368, 368, 369, 326, 327,
	327, 377, 377, 377, 377, 392, 260, 260, 260, 260,
	260, 495, 495, 378, 378, 378, 378, 378, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	382, 382, 382, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 391, 391, 391, 391, 391, 383, 383, 388, 388,
	389, 389, 389, 384, 385, 390, 390, 390, 390, 496,
	496, 394, 394, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 380, 380, 380, 387, 387, 387, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 302, 302, 304, 304, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	335, 335, 335, 335, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 436,
	436, 436, 436, 436, 436, 436, 436, 439, 439, 440,
	440, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	446, 446, 447, 447, 449, 449, 450, 450, 451, 452,
	452, 452, 453, 454, 454, 448, 448, 455, 455, 455,
	455, 456, 456, 457, 457, 457, 457, 457, 458, 458,
	458, 458, 458, 346, 346, 347, 347, 353, 353, 353,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 195, 195, 195, 195,
	195, 273, 273, 271, 271, 271, 274, 274, 272, 272,
	270, 270, 269, 269, 343, 343, 341, 341, 345, 345,
	296, 296, 393, 393, 393, 393, 393, 393, 393, 393,
	297, 297, 297, 305, 298, 298, 299, 299, 299, 299,
	299, 337, 338, 300, 300, 300, 339, 339, 348, 352,
	352, 351, 350, 350, 349, 349, 328, 328, 329, 329,
	280, 280, 497, 497, 276, 276, 370, 370, 370, 370,
	230, 230, 265, 265, 229, 229, 222, 222, 223, 223,
	223, 223, 258, 258, 354, 354, 395, 395, 396, 396,
	397, 397, 398, 398, 399, 400, 401, 342, 342, 212,
	211, 199, 200, 210, 209, 208, 198, 201, 205, 206,
	207, 203, 204, 218, 217, 216, 214, 215, 375, 224,
	224, 225, 225, 225, 226, 226, 226, 226, 196, 196,
	219, 219, 220, 221, 221, 213, 213, 213, 188, 188,
	188, 189, 189, 190, 190, 408, 408, 406, 406, 406,
	407, 407, 407, 407, 405, 405, 405, 405, 405, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 414, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 417, 417,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 0, 1, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 3, 1, 1,
	3, 4, 6, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 6, 7, 2, 5, 6, 2,
	1, 3, 1, 3, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 3, 4, 6, 3, 4, 6, 3, 4,
	6, 3, 4, 6, 3, 3, 5, 3, 3, 5,
	3, 1, 3, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 2, 6, 4, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 1, 1, 1, 1, 1, 2, 2, 5, 7,
	3, 3, 3, 4, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 4, 3, 4, 3,
	3, 4, 4, 5, 0, 1, 1, 3, 2, 4,
	3, 3, 5, 4, 3, 5, 3, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 2, 0, 4, 2, 3, 4, 2,
	3, 3, 3, 3, 3, 4, 3, 3, 3, 3,
	4, 3, 1, 1, 1, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 3, 4, 10, 10, 3,
	5, 5, 5, 3, 5, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 1, 2, 0, 3, 3,
	2, 10, 13, 0, 2, 4, 3, 3, 3, 1,
	3, 9, 12, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 1, 3, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 9, 9, 3, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 1, 2, 8, 4, 2,
	5, 5, 5, 2, 9, 10, 6, 5, 3, 1,
	5, 8, 7, 11, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 4, 0,
	6, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 2, 2, 4, 7, 3, 4,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 1,
	8, 11, 7, 5, 1, 1, 1, 1, 2, 2,
	0, 0, 1, 6, 7, 6, 5, 3, 4, 15,
	18, 14, 17, 4, 0, 2, 2, 0, 1, 0,
	1, 3, 3, 2, 0, 1, 1, 0, 6, 6,
	8, 6, 8, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 2, 3, 2, 2, 8, 11,
	3, 3, 0, 3, 0, 3, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 8, 5, 3, 4,
	3, 0, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 6, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 3, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 2, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	2, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 470, -81, -51, -49, -84, -85, -69,
	-86, -80, -98, -102, -90, -104, -143, -3, -37, -39,
	-52, -68, -70, -79, -88, -87, -89, -91, -95, -94,
	-83, -43, -99, -103, -112, -144, -145, -146, 85, 71,
	127, 108, 113, 160, 297, 327, 337, 321, -107, -108,
	356, -38, -50, -101, -100, -4, -13, -10, 27, 41,
	-40, -41, -42, 56, -57, -60, -54, -63, -478, 87,
	-443, -71, -74, -76, -482, 118, 133, 177, 289, -92,
	-93, 323, 325, 134, -45, -44, 128, -157, -159, -105,
	-106, -147, -113, -114, -115, -116, -117, -118, -119, -120,
	-121, -122, -123, -124, -125, -126, -127, -128, -133, -129,
	-130, -131, -132, -134, -135, -136, -137, -138, -139, -140,
	360, 407, 42, 370, 72, 121, 331, 21, -5, -6,
	-7, -8, -9, -11, -12, -53, -55, -56, -58, -59,
	-67, -61, -62, -442, -72, -73, -75, -77, -78, 322,
	-160, -158, 467, 420, -15, -20, -21, -16, -17, -19,
	-22, -18, -26, -31, -32, -28, -29, -27, -30, -33,
	-34, -35, -36, -24, -25, -14, -23, 438, 446, -163,
	-161, -162, -170, 344, 428, 384, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, -214, -219, -220, -221,
	-213, -188, -414, -417, 4, -412, -415, 139, 184, 255,
	21, 22, 23, 24, 25, 27, 38, 40, 39, 41,
	42, 45, 48, 49, 47, 52, 53, 54, 55, 56,
	57, 60, 65, 70, 71, 72, 73, 74, 75, 80,
	77, 78, 79, 82, 84, 85, 86, 88, 90, 91,
	99, 100, 101, 102, 103, 104, 108, 111, 110, 113,
	116, 117, 118, 120, 122, 123, 125, 127, 128, 131,
	129, 390, 130, 132, 133, 134, 135, 145, 146, 147,
	149, 150, 152, 154, 158, 159, 161, 165, 167, 168,
	169, 170, 176, 177, 179, 180, 185, 181, 186, 190,
	193, 192, 194, 195, 196, 187, 201, 205, 206, 207,
	209, 210, 213, 214, 215, 216, 217, 220, 219, 222,
	225, 226, 229, 230, 233, 234, 235, 237, 238, 241,
	239, 242, 240, 243, 246, 244, 245, 248, 249, 253,
	251, 250, 257, 260, 174, 262, 263, 265, 266, 267,
	283, 270, 271, 272, 275, 276, 279, 282, 284, 285,
	286, 287, 288, 289, 290, 292, 293, 295, 297, 299,
	301, 302, 303, 304, 305, 306, 307, 309, 310, 312,
	313, 314, 315, 316, 321, 318, 319, 320, 322, 323,
	324, 325, 327, 329, 330, 331, 332, 334, 336, 357,
	358, 372, 337, 338, 339, 340, 341, 342, 343, 347,
	351, 348, 349, 350, 345, 346, 352, 353, 354, 356,
	359, 360, 362, 363, 365, 366, 368, 369, 370, 371,
	373, 376, 377, 378, 374, 375, 383, 381, 382, 385,
	386, 387, 388, 389, 391, 393, 401, 402, 404, 407,
	408, 409, 399, 411, 412, 415, 416, 417, 418, 419,
	424, 420, 422, 425, 426, 427, 433, 432, 439, 440,
	442, 443, 444, 33, 43, 44, 46, 50, 61, 62,
	63, 66, 105, 106, 126, 136, 137, 148, 162, 164,
	171, 172, 173, 191, 197, 199, 203, 223, 259, 261,
	277, 281, 294, 296, 308, 333, 364, 379, 394, 395,
	396, 397, 403, 405, 428, 429, 430, 434, 441, 268,
	-207, 2, -188, -188, 297, 26, 2, 26, 293, 346,
	386, 388, 2, -466, -259, 2, 26, -191, -188, 87,
	160, 344, -207, 2, -466, -259, 24, 2, -188, 2,
	-192, 2, 337, -188, 470, 82, 230, 65, 333, 353,
	-110, 402, -109, 394, 339, -111, -404, 2, 246, -188,
	470, 470, 470, 470, 470, 2, 384, 286, 432, 345,
	101, 305, 184, 421, -483, 329, 163, 398, -461, 2,
	4, -415, -412, -223, -222, 384, 101, -221, -213, 460,
	-220, 470, 470, 470, 2, 206, 207, 304, 303, 353,
	354, 470, 470, 470, 2, 25, 59, 81, 84, 107,
	135, 155, 158, 273, -479, 238, 283, 302, 339, 352,
	383, 391, 404, -474, 371, 60, -473, 421, -483, 409,
	116, -306, 101, 230, 159, 416, 388, 386, 414, 111,
	190, 419, 418, 470, 470, 25, 59, 68, 84, 116,
	135, 155, 158, -481, 283, 302, 336, 339, 352, 383,
	391, 409, 404, 2, 432, 345, 384, 184, 101, 421,
	-483, 300, -81, 2, 467, 29, 28, 356, -153, 384,
	200, 2, -188, 206, 207, 2, 470, 470, 156, -461,
	2, 206, 207, 2, 200, 2, 60, 341, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 2, -141, 353, 371,
	169, 41, 65, 26, 301, 70, 287, 102, 161, 184,
	185, 214, 81, 82, -307, 40, 207, 206, -358, 385,
	340, 346, 381, 337, 402, 87, 422, 330, 444, 305,
	306, 129, 4, 101, 246, 355, 394, 230, 74, -488,
	2, 384, -491, 2, 402, 402, 2, -491, 2, -491,
	2, -491, 2, -492, 402, 441, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, -158,
	-160, -159, 470, 470, 470, 470, 470, -141, 353, 2,
	65, 26, -253, -254, 413, 198, 124, 274, -157, -159,
	2, -442, -402, 2, -333, -418, -335, 458, 459, 451,
	254, 445, -346, 107, 414, 268, -417, -336, -348, 126,
	333, -274, 8, 9, 5, 6, 7, -196, -379, -342,
	406, 138, 258, -226, 471, 10, 467, -439, -159, -347,
	34, 164, 58, -406, -225, -381, -389, -385, -386, -495,
	48, 54, 53, 391, 245, 347, 348, 365, 349, 350,
	45, 424, 181, 265, 267, 192, 4, 199, -224, -213,
	-436, -437, -412, -413, 191, 197, 193, 364, 194, 195,
	196, 44, 308, 149, 150, 148, 117, 106, 105, 261,
	50, 49, 46, 429, -390, 103, 394, 395, 396, 397,
	209, 210, -188, -414, 68, 93, 94, 92, 97, 96,
	232, 231, 98, 95, 355, 421, 59, 33, 171, 172,
	203, 259, 173, 66, -438, 375, 89, 157, 189, 175,
	202, 204, 208, 224, 227, 247, 252, 256, 278, 280,
	328, 361, -496, 430, 136, 137, 281, 294, 379, 403,
	405, 162, 223, 61, 62, -444, 309, -445, -207, -444,
	470, 470, 472, 470, -247, -248, -249, 2, 26, 114,
	467, 2, -362, 2, -363, -367, -159, 218, -366, 467,
	-364, 465, -214, 269, -440, 334, -436, -437, -196, -213,
	-225, 4, -250, 467, 469, 101, 384, 69, 184, -301,
	467, -188, 26, 268, 398, 472, -344, 467, 268, 156,
	271, -188, 2, 2, 357, 2, 467, -110, 63, 402,
	39, 353, -320, 2, -321, -185, -186, -187, -372, 205,
	299, 307, 447, 444, -402, -475, 156, 450, 398, -402,
	-275, 469, 2, -367, 171, -214, 2, -211, -405, 4,
	-412, -415, -413, -416, 68, -414, 26, 28, 29, 30,
	32, 34, 35, 36, 37, 51, 58, 59, 64, 67,
	69, 81, 87, 92, 93, 95, 94, 96, 97, 98,
	107, 109, 112, 114, 115, 119, 121, 124, 138, 140,
	153, 155, 156, 160, 163, 166, 178, 188, 198, 200,
	218, 221, 228, 231, 232, 254, 258, 264, 268, 269,
	273, 274, 291, 298, 311, 326, 344, 355, 367, 380,
	384, 392, 398, 400, 406, 413, 414, 421, 423, 431,
	435, 436, 437, 438, -417, 2, -367, 171, 2, -216,
	171, -367, -219, 2, -198, -188, 2, -210, -405, 2,
	-229, 171, -214, -215, -219, -410, 171, 2, -408, 10,
	-407, 5, 4, -412, -415, -413, -410, 171, 2, -96,
	-410, 467, 398, 472, -265, -222, -223, -258, -188, 469,
	-333, 2, -99, 2, -333, 171, 2, -99, 171, 2,
	-333, 171, 2, -99, 171, 2, 2, 2, 404, 2,
	84, 171, -188, 384, 100, 2, 320, -480, 336, 408,
	432, 2, 2, 2, 2, 2, 2, 2, 384, -203,
	2, -188, 153, 345, -489, 309, -410, 171, 2, -410,
	171, 2, -217, -219, -217, 184, 201, -198, 171, 2,
	388, 386, 388, 386, 156, 2, 200, 2, 200, 2,
	-368, 2, -369, -363, -214, 465, 2, 2, 2, 2,
	2, 171, -188, 384, 100, 2, 216, 2, 2, 2,
	2, 2, 2, 2, 2, 2, -267, 171, 2, -214,
	-267, 171, 2, -267, 171, 2, -230, 171, 2, -229,
	-198, 171, 2, -411, 171, 2, -410, -411, 171, 2,
	-376, 2, -375, -407, 428, -81, 467, -81, 467, 353,
	467, -410, -214, -214, -333, -99, -97, -96, 156, -333,
	-99, -153, 153, 2, 101, 384, -141, 2, 153, 423,
	2, 8, 2, -410, 340, 306, 145, 2, 357, 2,
	358, 65, -307, 444, 65, 156, 2, 156, 2, -291,
	2, 438, -464, 2, 268, 156, 2, 156, 2, 156,
	2, 156, 2, 156, 2, 303, 354, 207, 2, -99,
	435, -333, 435, 2, 401, 215, 130, 156, -291, 2,
	156, 2, 156, 2, 5, 2, 372, 2, 205, 299,
	372, 2, -214, -484, 2, 384, 432, 345, 2, 2,
	77, 78, 156, 2, 156, 2, 156, 444, 2, -284,
	-367, -319, -320, -319, 398, -253, -254, -141, 357, 2,
	-164, -282, -166, 153, -309, -310, -167, 228, 140, 264,
	-168, -290, 26, 114, -290, -290, 52, 468, 468, 11,
	12, 67, 38, 458, 459, 460, 461, 151, 462, 463,
	456, 457, 455, 448, 449, 453, 211, 212, 83, 452,
	450, 76, 236, 335, 141, 142, 143, 144, 317, 182,
	31, 183, 14, 15, 16, 30, 273, 227, 445, 175,
	361, 451, 17, 18, 19, 202, 204, 256, 43, 178,
	-195, -231, -333, -333, -333, -333, -333, 280, 467, -280,
	-328, 465, -159, 467, 467, 467, 5, -401, 8, -159,
	-333, -346, 468, -272, 467, -159, -346, -341, 467, 333,
	465, 467, -349, -333, 5, 467, 469, -446, 439, -383,
	467, 296, -382, 467, -382, -382, 433, -380, 467, 446,
	440, 467, -380, 467, 467, 153, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 433, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 472, -444, -250, 467, -276, -370, -333, 460, -276,
	-276, 268, -269, -333, 89, -294, 208, 247, 157, 224,
	328, 189, -330, 471, -330, -357, 446, -159, -364, -213,
	-159, -366, 467, -362, -357, -82, -401, -68, -79, -87,
	-99, -112, -145, -146, 460, -214, 467, 156, 467, 469,
	156, -258, -405, -198, -214, -224, -225, -229, 113, -269,
	-461, -258, -191, 35, -343, -377, -378, -379, -388, -384,
	-387, -391, 48, 54, 53, 391, 245, 347, 348, 365,
	349, 350, 45, 424, 181, 265, 267, 192, 4, 46,
	429, -390, 199, 313, 314, 312, 316, 315, 191, 197,
	193, 364, 194, 195, 196, 44, 308, 149, 150, 148,
	117, 106, 105, 261, 50, 49, 103, 394, 395, 396,
	397, 209, 210, 430, 375, 61, 62, -461, -258, 153,
	-404, -269, 35, -320, 2, 107, -408, 39, -493, 472,
	226, -233, 235, 253, 168, 269, 442, 262, -409, 5,
	4, -342, -354, 107, 230, 199, -395, -397, 8, -396,
	9, -398, 458, 459, -403, -402, 91, 469, -405, -175,
	318, -174, 23, 27, 118, 426, 131, -240, 186, 286,
	126, 368, 417, -470, -471, 338, 389, 390, 79, 262,
	318, 126, -287, -289, 35, 99, 249, 282, 55, 179,
	240, 241, 370, 434, 126, 318, -471, 318, -471, -177,
	368, 417, -470, -471, 338, 318, -176, -240, 126, 471,
	-467, -441, 438, 126, -467, 126, -373, -372, -411, -96,
	-265, 472, 472, -405, 460, 126, 126, 126, 126, 2,
	2, 254, 2, 2, 2, 158, -473, -481, 2, 2,
	2, -214, 171, -252, 268, -463, -266, 384, -214, -216,
	171, 2, -219, 432, -467, 254, -467, 254, 35, 467,
	2, -200, 171, 2, -189, -188, 184, -441, 254, -368,
	-227, -214, -363, -227, 356, -207, 35, -330, -330, 126,
	2, 2, 2, -188, -178, 472, 57, 324, 126, -178,
	126, -178, 126, -178, 472, 126, -178, 126, 472, 126,
	126, 468, 472, -376, -376, -410, -151, 438, 156, 87,
	467, 467, -153, -373, 472, -97, -410, -463, -198, 2,
	-214, 2, 384, 209, -151, -410, -410, -410, -404, 26,
	358, 2, 303, 354, 78, 358, 2, -214, 384, 101,
	184, 71, -465, 153, -462, 329, -461, -214, 101, -214,
	101, -214, 101, -214, -214, 2, 2, 2, 2, 75,
	75, 153, 2, 401, 2, 401, 2, -188, -188, -188,
	226, -214, 153, 384, 184, 384, 184, 101, 384, -178,
	472, -192, -164, -282, -404, -283, -282, -165, -164, -167,
	153, 307, 418, 249, 359, 213, -310, -309, 26, -333,
	-314, 147, 248, -333, -312, -335, 458, 459, -396, -398,
	-268, 262, -158, -158, -158, -255, -359, -333, 298, 184,
	-392, -377, -377, -212, -405, 394, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, 227, 175, 361, 43, 178, -333, 398, -333, -333,
	-333, -333, 244, 254, 258, 406, 138, 415, 114, 262,
	-497, 380, 37, -339, -159, -273, 467, -353, 32, 367,
	26, -346, 467, 2, -328, -333, -329, -270, -269, -269,
	468, 431, 26, 114, 460, 2, 468, 472, 35, 468,
	-333, -270, -345, -341, -269, -352, -351, 435, -302, -303,
	443, 243, 104, 170, 242, -304, 343, -399, 8, -405,
	460, -447, 146, 163, 8, -399, -399, 394, 394, -399,
	-399, -399, 467, 468, 2, 468, 2, 468, -333, 2,
	468, -333, 2, 468, -333, 2, 468, -333, 2, 468,
	2, -333, -333, -333, -333, -333, -333, -333, -269, -296,
	2, -393, -269, 4, 443, 243, 104, 170, 242, 343,
	5, -296, 2, -297, 2, -333, -269, -298, -334, -335,
	458, 459, 451, -346, -299, 2, -333, -270, -333, 51,
	221, 400, -300, -333, 156, -269, -269, 2, -269, 2,
	-445, 35, -269, -261, 472, 156, 35, 4, -261, -261,
	467, 468, 472, -295, 167, 239, 234, -295, -362, -294,
	208, -292, 278, -292, -292, -357, -199, 465, 473, -405,
	-357, -356, -355, 35, -207, 275, -357, -357, 469, 468,
	-356, 466, -459, 467, 470, 470, 470, 470, 470, -214,
	467, -269, -405, 373, 468, 469, 202, 202, 202, 202,
	334, 468, 398, 438, -81, 270, 468, 472, -260, 34,
	465, -394, 433, 467, 467, -303, 467, 156, -259, -475,
	468, 402, -321, -232, 307, 366, 319, 351, 382, 8,
	9, 8, 9, 472, -405, 472, -476, 81, 398, 69,
	-324, 171, 69, -419, -201, 81, -420, -188, 64, 414,
	298, 155, -476, 81, 298, -476, 81, 81, 356, 371,
	52, -367, 38, 38, 26, -99, 222, 156, 444, 384,
	184, 398, -367, -289, -377, 99, 240, 241, 52, -400,
	-395, 458, 459, -400, 52, -400, -400, -400, 438, -216,
	-367, 398, 398, 472, 38, 38, 26, -99, 222, 156,
	398, -229, -199, -468, -193, 88, 250, -194, 288, -410,
	-410, -148, 180, 468, -373, -222, -188, 469, -333, -99,
	-333, -99, 126, 2, -489, 216, 467, -236, 254, 156,
	-258, -374, 200, 472, -266, -288, -287, 254, -218, 171,
	2, -214, 126, 126, 467, 122, 305, 2, 268, 254,
	-200, 171, -181, 387, 126, -286, 423, -315, -99, 467,
	107, 35, -315, -277, -278, -371, -279, -201, 467, -207,
	-188, 2, -214, -267, -267, -267, -229, -230, -198, -410,
	-411, -411, -81, -375, 468, 468, 468, -150, 272, -149,
	-188, 5, -153, 423, -235, -325, -324, -423, -424, -419,
	227, 184, 414, 201, 139, -251, -202, -201, 100, -151,
	-96, -373, -151, -151, -373, -373, -214, 153, -151, -151,
	-151, 2, 2, -291, -214, -198, -229, -214, -258, -258,
	-291, -198, -291, -198, -291, -198, -99, -333, 353, 153,
	153, 469, -291, 305, 101, 384, 286, 184, -214, -229,
	-214, -229, -198, -214, -367, -283, -165, 269, 213, 359,
	-312, -313, -335, 333, 334, -313, 333, 334, 8, 9,
	8, 9, -169, 363, 257, -267, 472, -172, 36, 112,
	213, -214, 444, 123, -333, -333, 398, -497, 380, -339,
	123, -333, 244, 258, 406, 138, 415, 114, 262, 156,
	467, -334, -334, 468, -271, -333, -333, 466, 475, 468,
	-254, 472, -253, -333, -269, -269, 468, 469, -269, -258,
	466, 466, 472, 468, -350, -351, 119, -333, 398, 398,
	398, 398, 467, 468, 469, -452, 279, 467, 467, 468,
	468, 472, 468, 444, 444, 468, 468, 468, -333, 468,
	468, 468, 468, 35, 472, 472, 472, 468, 472, 472,
	472, 468, 468, 156, 468, 468, -305, 291, 468, 11,
	12, 458, 459, 460, 461, 151, 462, 463, 456, 457,
	455, 448, 449, 450, 76, 236, 335, 14, 15, 16,
	202, 178, -334, -334, -334, 468, -337, -338, 156, 153,
	35, -300, -300, -300, 468, 156, -269, 468, 468, 467,
	468, -327, -326, 436, -370, -262, 2, -362, -209, -405,
	-327, -327, -269, -333, 208, 208, -293, 423, 268, -295,
	-362, -356, -401, -332, -331, 154, 36, 112, 251, 174,
	-356, -207, -250, -356, -356, -405, -357, -357, -355, 468,
	-460, -401, 468, -263, -365, -440, -254, 469, -151, -405,
	-142, 5, 258, -142, -142, -142, -258, 24, 292, -377,
	465, 466, 8, 467, -399, -399, -399, -258, 156, -402,
	-320, 412, 73, 307, 394, -402, -174, 318, -201, -201,
	-214, 254, -324, 171, -180, 254, -377, -208, -188, 467,
	467, 213, 213, -201, -208, 213, 171, -201, 171, -208,
	-208, -469, 307, 263, -333, 229, 305, 255, -175, 318,
	-99, -99, -99, 467, -475, 423, 113, -214, -229, -214,
	-218, 318, 252, -224, -400, -400, -287, 318, -216, -198,
	-176, -99, -99, -99, 467, -199, -177, 318, -193, -410,
	258, -467, -467, -151, 156, -148, 460, -188, 432, -188,
	-234, -237, -235, -201, -156, 440, 438, 126, -228, -214,
	465, -151, -410, -214, 126, -250, 254, -410, -410, 2,
	467, 2, -214, 126, 268, 254, -182, 120, -494, 450,
	-198, -327, -262, -285, -318, 326, 268, -251, 428, -207,
	-285, -264, 472, 156, 450, 469, -251, 2, -178, -178,
	-178, -178, -178, -81, -81, -151, 472, 467, 450, 450,
	467, -410, -410, 468, 472, -214, -200, 184, 184, -206,
	-189, 468, 472, 469, 467, -151, 156, -46, 438, 384,
	471, -291, -291, -291, 353, 353, -188, -210, -198, -214,
	-211, -229, 153, 153, 418, -313, 269, 233, -359, -173,
	260, -214, 471, -333, -333, 123, 123, -333, -334, -334,
	-333, 123, 156, 467, -333, -343, 30, 30, 468, 472,
	-329, -333, 468, 431, -254, -254, 468, 460, -405, 471,
	468, -341, 121, -333, 392, 243, 170, 242, -304, 242,
	-304, -304, -399, 5, -405, 460, -453, -204, 467, -188,
	436, -253, -399, -380, -380, 468, -392, -377, -333, -333,
	-333, -333, -333, -333, -337, -333, -392, -377, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, 114, 254, 262,
	-334, -338, -337, -333, -333, -377, 468, 468, 468, -269,
	-81, -281, 163, -333, -373, 472, -281, -281, 468, -362,
	-362, 467, -333, 208, 466, 472, 474, 450, -250, 469,
	-355, -356, 466, 468, 472, 468, 472, -317, 35, 468,
	-405, 271, 5, 8, 465, 466, -399, 468, 468, 468,
	-258, -333, 398, 398, 126, 254, 425, -425, -420, -333,
	-256, -360, -333, 467, 467, -171, 118, 356, -477, 2,
	423, 126, -178, 126, -178, 442, 467, 467, 398, 438,
	-269, -333, -152, 107, -404, -471, 471, -471, 471, 398,
	398, 438, -269, 398, -411, -151, 2, 2, 2, 468,
	468, 472, -426, 35, 266, 467, 266, -214, -64, 438,
	-372, -401, -216, 35, 126, -467, -467, 2, -308, 423,
	-199, -214, 126, -183, 220, -494, -408, -441, -254, -285,
	-276, 255, 80, 468, -327, -278, -262, -333, 2, 468,
	-149, -150, -410, -410, -410, -151, -153, -153, -325, 2,
	467, -200, -189, 467, -153, -202, 2, -411, -99, 272,
	-214, 460, -291, -242, -241, 286, 262, -242, 333, 333,
	269, 147, 217, -172, -199, -333, -333, 123, 30, 30,
	-333, -333, -343, 468, -333, -333, -269, 466, 5, -333,
	468, 468, 8, -333, 468, 469, -454, -188, -333, 468,
	468, 468, 468, 472, 472, 468, 468, 468, 468, -338,
	156, 114, 262, 467, 468, 468, -340, 166, 52, -362,
	-340, -340, -293, -258, -362, -331, -199, 465, -405, -401,
	-365, 467, 469, 466, 2, 465, 468, -201, -201, -324,
	126, -427, 81, -429, 67, 139, 87, 254, 258, 414,
	298, 64, 107, 311, 35, 468, 468, 472, -172, -256,
	-258, 254, 377, 107, 254, 107, 100, 409, 70, -201,
	-208, -258, -258, -214, 132, 468, 472, 450, 2, 460,
	460, -218, -216, 132, 468, -199, -238, 187, -201, -424,
	-421, -422, 298, -428, -430, 139, 298, -99, -155, -154,
	-188, 5, 2, 467, -236, 272, 466, -288, -99, -218,
	467, -188, 268, 467, -199, -184, 219, -494, -408, -181,
	-311, -309, -316, 467, 268, -99, -254, 450, 468, 468,
	100, 100, -256, 467, 467, -258, 100, 468, -47, -48,
	184, 81, 290, -211, 384, 184, 467, 467, -172, -333,
	-333, -333, 468, -254, -405, 460, -448, 286, 468, -333,
	-333, -334, 156, 467, -343, -449, 437, -333, -269, -449,
	-449, 468, -401, 2, 465, 2, -324, -208, -212, -205,
	-188, 139, 171, 258, 213, 467, -334, -214, 467, 2,
	-486, 109, 188, -323, -487, 86, 378, -360, -173, 468,
	468, 258, 258, -333, -377, 467, -178, -178, 468, 468,
	-333, 398, -404, 85, -402, 2, -471, -333, 398, -239,
	-240, 178, -426, 213, -205, 213, -485, 438, 468, 472,
	450, 450, -234, -156, -65, -66, 399, -372, -250, -256,
	-214, -256, 268, -494, -408, -182, -285, 115, -258, 81,
	-311, -339, -151, 467, 467, 468, -256, -256, 468, 467,
	-151, 472, 26, 467, 26, 467, -214, -229, -269, -269,
	468, -254, 52, 468, 468, -334, -343, 468, -450, -451,
	-204, 466, 2, -429, -205, 254, 423, -333, -190, 467,
	-333, 188, 110, 176, -238, 467, -322, 423, 311, -197,
	67, -256, 467, 467, 467, 450, 156, 467, -156, 284,
	467, 100, 249, -154, -336, -336, 468, 35, -66, 9,
	35, 468, -308, 468, -214, -408, -183, 418, 255, 468,
	-208, -285, -411, -411, -322, 468, 468, -411, -48, -258,
	-258, 468, 468, -455, 305, 334, 165, -269, 468, 472,
	35, 126, 167, 468, -431, 237, -188, 468, 110, 176,
	-239, -258, -238, 167, -214, -472, 423, -212, 468, -244,
	-243, -241, -246, -245, -241, -269, -402, 85, 284, -269,
	-214, -257, -361, -201, 100, -238, -99, -99, -322, 467,
	-323, 467, -184, 356, -326, 468, 468, -323, -322, 468,
	468, 468, 468, -456, -457, 43, 411, 91, -333, -456,
	-456, -451, -453, 139, 438, -432, -435, -434, 268, 362,
	157, 285, 468, 377, 434, -486, 468, 438, -250, -333,
	-322, 468, 472, 428, 468, 472, 428, 468, 156, 468,
	467, 468, 472, -239, -485, -323, -256, -238, -256, -277,
	-151, -151, -238, -323, -151, -458, 125, -457, 295, 152,
	333, 295, 152, -458, -458, -205, 47, -434, 268, -435,
	268, 418, 111, 47, -431, -238, -243, 178, -245, 156,
	284, -258, -361, -156, -238, 468, -239, 468, -327, -239,
	-238, 91, 163, 393, 249, 30, 450, -433, 249, 324,
	57, 356, -433, 450, -432, 467, 467, 468, -239, -322,
	-490, 436, -323, -239, 333, 276, -457, -333, 22, 258,
	107, -333, -486, -269, -269, -179, 57, 324, -490, -323,
	2, -238, 468, 468, -238, -239, -239, 398, -239, -490,
	467, -490, -269, 468, -239,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 371, 372, 374,
	375, 376, 378, 379, 381, 383, 385, 387, 388, 390,
	392, 394, 395, 396, 397, 398, 400, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 462,
	0, 958, 960, 962, 964, 25, 26, 28, 0, 0,
	192, 194, 196, 0, 221, 223, 225, 226, 228, -2,
	0, 323, 324, 326, 328, -2, -2, 0, 0, 449,
	451, 0, 0, 0, 471, 472, 0, 1046, -2, 465,
	467, 469, 534, 536, 538, 540, 542, 544, 546, 547,
	549, 551, 553, 555, 557, 559, 561, 562, 564, 566,
	568, 570, 572, 574, 576, 578, 580, 582, 584, 586,
	-2, -2, -2, 0, -2, -2, -2, 976, 31, 33,
	35, 37, 39, 41, 43, 277, 278, 280, 282, 284,
	287, 288, 290, 1101, 330, 332, 334, 336, 338, 0,
	-2, 1113, 0, 0, 45, 46, 47, 48, 49, 50,
	51, 52, 68, 69, 70, 71, 72, 73, 74, 75,
	56, 58, 59, 63, 64, 66, 54, 0, 0, 1077,
	1079, 1081, 1083, -2, 0, 0, 7, 9, 11, 13,
	15, 17, 19, 21, 373, 377, 380, 382, 384, 386,
	389, 391, 393, 399, 401, 403, 843, 1736, 1750, 1751,
	1752, 1755, 1756, 1757, 1758, 1759, 1760, 2106, 2186, 2187,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048,
	2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 0,
	427, 425, 1730, 428, 1937, 430, 432, 317, 318, 319,
	320, 321, 322, 0, 442, 436, 441, 443, 445, 446,
	447, 448, 422, 420, 0, 442, 1782, 440, 956, 957,
	951, 952, 1971, 983, 461, -2, -2, -2, 2074, -2,
	493, -2, 500, 2077, 1973, 505, 0, 507, -2, 510,
	959, 961, 963, 27, 29, 30, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 898, 899, 0, 0, 156,
	-2, -2, -2, -2, 0, 0, 1821, 1698, 1752, 1701,
	1696, 193, 195, 197, 198, 0, 0, 0, 0, 0,
	0, 222, 224, 227, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 754, 746, 747, 928, 0,
	0, 0, 0, 325, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 255, 363, 364, 0, 1102, 1102, 0, 0, 0,
	0, 173, 164, 0, 0, 730, 450, 452, 0, 0,
	159, 0, 0, 955, 0, 175, 0, 0, 466, 468,
	470, 535, 537, 539, 541, 543, 545, 548, 550, 552,
	554, 556, 558, 560, 563, 565, 567, 569, 571, 573,
	575, 577, 579, 581, 583, 585, 587, 588, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 591, 593, 594, 595, 0, 646, 663, 0,
	883, 1103, 985, 966, 980, 985, 968, 969, 970, 971,
	972, 977, 979, 973, 974, 975, 32, 34, 36, 38,
	40, 42, 44, 279, 281, 283, 285, 289, 291, -2,
	1075, 1076, 331, 333, 335, 337, 339, 453, 0, 455,
	0, 592, -2, 0, 1107, 1107, 1107, 0, 0, 1076,
	1074, 0, 458, 459, 514, 515, 1345, 0, 0, 0,
	0, 0, 1595, 1429, 0, 516, -2, 1460, 1462, 2053,
	2074, 1594, 1464, 1465, 1466, 1467, 1468, 0, 0, 1471,
	1472, 1473, 1474, 1475, 0, 1477, 0, 1482, 1483, 1484,
	0, 2058, 1675, 1748, -2, 1248, 1249, 1250, 1251, 1252,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 2064, 1744, 0,
	1561, 1498, -2, 1769, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1830, -2, -2, -2,
	-2, -2, -2, -2, 1304, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 2088, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 0, 2042, 2059, 2060,
	2065, 2067, 2061, 2050, 1523, -2, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 1305, -2, 2054, 2055, 2070, 2071, 2076, 2081,
	2082, 2057, 2066, -2, -2, 1093, 1946, 1096, 843, 1094,
	1078, 1080, 0, 1082, 0, 0, 0, 1087, 1110, 1108,
	0, 1149, 1091, 1092, 1167, 1167, 1191, 0, 1172, 0,
	1191, 1102, 1217, 0, 1178, 1966, 1499, 1500, 0, 1752,
	1749, -2, 0, 0, 0, 0, 0, 0, 0, 423,
	0, 429, 431, 0, 0, 0, 0, 0, 0, 0,
	0, 982, 463, 464, 0, 488, 0, 492, 2049, -2,
	1787, 1986, -2, 496, 986, 990, 991, 992, 993, 0,
	0, 0, 0, 0, 502, 0, 0, 489, 490, 508,
	511, 0, 53, 0, 2059, 1217, 55, 0, 1720, 1774,
	1775, 1776, 1777, 1778, 2088, 2105, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 57, 0, 2059, 60, 0,
	2059, 0, -2, 65, 0, 1726, 67, 0, 1723, 76,
	0, 2059, 0, 1695, -2, -2, 2059, 894, 176, 177,
	1765, 1766, 1770, 1771, 1772, 1773, -2, 2059, 897, 1204,
	160, 0, 0, 0, 722, 1692, 1697, 723, 1702, 0,
	199, 200, 201, 202, 203, 2059, 205, 206, 0, 208,
	209, 2059, 211, 212, 0, 214, 230, 231, 0, 233,
	0, 2059, 0, 0, 0, 239, -2, 256, 0, 253,
	0, 243, 244, 246, 247, 248, 249, 250, 0, 295,
	293, 1731, 0, 0, 0, 912, -2, 2059, 888, -2,
	2059, 891, 917, 1734, 0, -2, 0, 1100, 2059, 1000,
	750, 751, 752, 753, 0, 314, 0, 1013, 0, 1015,
	0, 1036, 1223, 1167, 1167, 0, 257, 258, 259, 260,
	261, 2059, 0, 0, 0, 266, 0, 268, 269, 270,
	271, 272, 273, 274, 275, 276, 151, 2059, 342, 361,
	151, 2059, 345, 151, 2059, 348, 151, 2059, 351, 1690,
	151, 2059, 354, 355, 2059, 357, 178, 358, 2059, 360,
	0, -2, 416, 1738, -2, 366, 0, 367, 0, -2,
	0, 190, 0, 0, 728, 729, 1204, 162, 0, 953,
	954, 0, 0, 473, 0, 0, 589, 590, 0, 0,
	600, 601, 602, 190, 1974, 1944, 1846, 607, 0, 610,
	613, -2, 0, 0, 0, 0, 617, 0, 622, 623,
	624, 0, 727, 626, 0, 0, 628, 0, 632, 0,
	635, 0, 637, 0, 639, -2, -2, -2, 650, -2,
	0, 654, 0, 656, 0, 0, 0, 0, 671, 672,
	0, 677, 0, 680, 681, 682, 683, 684, 0, 686,
	687, 688, 689, 0, 691, 692, -2, -2, 696, 698,
	0, 705, 0, 709, 0, 713, 0, 596, 597, 151,
	1221, 965, -2, 967, 0, -2, 0, 454, 0, 457,
	1128, 1061, 1058, 0, 1125, 1126, 1062, 0, 0, 0,
	1069, 0, 1105, 1106, 0, 0, 0, 1048, 1049, 0,
	0, 0, 0, 1600, 1601, 1602, 1603, 1604, 1605, 1608,
	1609, 1606, 1607, 1610, 1611, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1613, 1614, 1615, 0, 0, 1617, 0, 1619,
	0, 0, 0, 0, 0, 0, 1408, 1410, 1683, 0,
	0, 1616, 1350, 1351, 1352, 1387, 1388, 0, 0, 1461,
	1680, 1679, 1463, 0, 1631, 0, 1470, 1476, 1716, -2,
	0, 1595, 1626, 0, 0, 1485, 1486, 1487, 0, 0,
	1631, 0, 0, 1674, 1342, 0, 0, 1563, 0, 1284,
	0, 1285, 1286, 0, 1287, 1288, 1301, 1314, 0, 0,
	0, 0, 1318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1306, 0, 0, 0, 1655, -2, 0, 0, 0,
	0, 0, 1095, 0, 0, 1153, 1684, 1688, 1689, 1153,
	1153, 0, 0, 1632, 1214, 1214, 0, 0, 1210, 1210,
	1210, 1208, 1191, 0, 1191, 1201, 0, 1191, 1191, 0,
	-2, 1172, 0, 0, 1201, 0, 1185, 404, 406, 408,
	410, 411, 412, 414, 1218, 1219, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 1740, 0, 0, 0,
	0, 434, 444, 1102, 0, 1634, 1240, 1243, 1244, 1245,
	1246, 1247, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, -2,
	1302, 1304, 1325, 1291, 1292, 1293, 1294, 1295, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1297,
	0, 1272, 1272, 1272, 1289, 1290, 1313, 1324, 1316, 1324,
	1320, 1241, 1242, 1307, 1308, 1309, 1310, 0, 438, 0,
	0, 0, 0, -2, 498, 503, 504, 0, 0, 988,
	0, 994, 525, 526, 527, 996, 997, 0, 501, 528,
	529, 530, 531, 532, 533, 0, 1704, 1705, 1706, 1707,
	1710, 1711, 0, 0, 499, 518, 506, 0, 512, 77,
	948, 116, 0, 948, 948, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 101, 112, 89, 90, 0, 0,
	0, 0, 61, 865, 0, 868, 0, 0, 0, 0,
	0, 0, 0, 881, 0, 0, 100, 0, 95, 79,
	0, 0, 0, 102, 114, 0, 142, 144, 0, 0,
	892, 0, 1099, 0, 895, 0, 181, 1203, 0, 1204,
	721, 0, 0, 1753, 1700, 0, 0, 0, 0, 232,
	234, 0, 236, 237, 238, 0, 911, 0, 245, 242,
	286, 815, 2059, 0, 0, 312, 307, 0, 309, 864,
	2059, 862, 1735, 0, 886, 0, 889, 0, 0, 0,
	918, 0, 2059, 923, 1722, 1761, 1762, 1002, 0, 316,
	0, 1016, 1018, 0, 0, 1224, 0, 1226, 1227, 0,
	263, 264, 265, 0, 340, 0, 149, 150, 0, 343,
	0, 346, 0, 349, 0, 0, 352, 0, 0, 0,
	0, 1102, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 190, 0, 1204, 190, 190, 1204, 475,
	1204, 477, 0, 0, 603, 190, 190, 190, 608, 609,
	611, 612, -2, -2, 706, 614, 615, 674, 0, 0,
	0, 673, 625, 0, 715, 1962, 725, 674, 1821, 674,
	1821, 674, 1821, 636, 638, 641, 666, 649, 653, 0,
	0, 0, 658, 0, 660, 0, 662, 674, 675, 678,
	685, 690, 0, 0, 0, 0, 0, 0, 0, 882,
	0, 978, 1128, 1061, 456, 1052, 1127, 1053, 1060, 1063,
	0, 0, 1065, 0, 1067, 0, 1123, 1124, 1131, 1132,
	0, 1142, 1143, 1135, 0, -2, 0, 0, 1138, 1139,
	1071, 0, 1088, 1089, 1090, 1114, 1115, 937, 0, 2186,
	1346, 1235, 1347, 1348, 1719, 0, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, -2, -2, -2, -2,
	-2, -2, -2, -2, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, -2, -2, -2, 1385, 1386,
	-2, 1618, 1620, 0, 1683, 0, -2, 0, -2, -2,
	-2, -2, 1405, 0, 1407, 1412, 1414, 1416, 0, 0,
	0, 0, 1682, 1426, 1666, 1667, 0, 0, 1597, 1598,
	1599, 1411, 0, 1430, 1681, 1678, 0, 0, 1630, 1113,
	1489, 0, 0, 0, 0, 1496, 1481, 1628, 0, 1627,
	0, 0, 0, 1638, 0, 1673, 1669, 0, 1717, 1341,
	1328, 1329, 1330, 1331, 1332, 1333, 1343, 0, 1714, 1741,
	1747, 1571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1524, 1525, 1526, 1527, 1528, 0, 1530,
	1531, 0, 1533, 1534, 0, 1536, 1537, 0, 1539, 1540,
	1541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1543, 0, 1641, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 1545, 0, 1547, 1632, 1652, 0, 0, 1431,
	0, 0, 0, 1595, 0, 1550, 1632, 1660, 0, 0,
	0, 0, 0, 1632, 0, 1665, 0, 1557, 0, 1559,
	1097, 0, 0, 1230, 0, 0, 0, 1687, 1230, 1230,
	0, 1148, 0, 0, 1211, 1212, 1213, 0, 0, 1214,
	0, 1205, 1209, 1206, 1207, 1201, 1164, 0, 0, 1721,
	1201, 1170, 1200, 0, 843, 1190, 1201, 1201, 0, -2,
	1174, 1191, 0, 0, 405, 407, 409, 413, 415, 0,
	0, 1113, -2, 190, 842, 0, 0, 0, 0, 0,
	424, 426, 0, 0, 418, 0, 421, 0, 1231, 1234,
	0, 0, -2, 0, 0, 1326, 0, 0, 0, 0,
	491, 0, 987, 995, 0, 522, 0, 524, 0, 1708,
	1712, 1709, 1713, 0, 513, 0, 0, 0, 0, 947,
	120, 2059, 0, 153, 0, 0, 809, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 86, 91, 0, 0, 0, 0,
	0, 0, 0, 866, 867, 869, 876, 878, 0, 872,
	1715, 0, 0, 873, 0, 875, 877, 879, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 92, 0, 0,
	0, 0, 1694, 909, 907, 904, 905, 906, 0, -2,
	-2, 190, 0, 161, 181, 1693, 1703, 0, 204, 207,
	210, 213, 0, 240, 0, 0, 756, 733, 0, 0,
	294, 190, 0, 0, 308, 860, 863, 0, 843, 2059,
	903, 1733, 0, 0, 0, 0, 0, 916, 0, 0,
	0, 2059, 1004, 1010, 0, 1230, 0, 1034, 1019, 0,
	0, 0, 1034, 1038, 1039, 1041, 1042, 0, 0, 1225,
	0, 267, 362, 151, 151, 151, 1691, 151, 151, 179,
	356, 359, 365, 417, 1102, 1102, 190, 188, 1922, 186,
	183, 185, 0, 0, 0, 757, 759, 760, 761, 762,
	0, 1762, 0, 1875, 1762, 0, 1022, 1024, 0, 157,
	163, 190, 0, 306, 474, 479, 598, 0, 604, 605,
	606, 643, 668, 616, 618, 619, 620, 0, 726, 724,
	627, 674, 630, 674, 633, 674, 652, 655, 657, 0,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	710, 711, 712, 714, 1222, 1056, 1057, 1059, 0, 1068,
	0, 0, 1137, -2, -2, 1136, 1140, 1141, -2, -2,
	-2, -2, 1064, 0, 1073, 1070, 0, 1122, 935, 936,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1427,
	0, -2, 1406, 1409, 1413, 1415, 1417, 0, 0, 0,
	0, 0, 0, 1621, 0, 1623, 1428, 1676, 1679, 1593,
	0, 0, 1112, 1113, 1113, 0, 1495, 0, 1629, 0,
	1636, 1637, 0, 1488, 0, 1670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1497, 0, 0, 0, 1296,
	1270, 0, 1324, 1322, 1323, 1317, 1324, 1321, 0, 1529,
	1532, 1535, 1538, 0, 0, 0, 0, 1518, 0, 0,
	0, 1522, 1542, 0, 1544, 1546, 0, 0, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1434, 1435, 1436, 1549, 1658, 1659, 0, 0,
	0, 0, 0, 0, 1555, 0, 1664, 1556, 1558, 1102,
	1150, 1145, 1229, 0, 1685, 1204, 1152, 1154, 1686, 1724,
	1145, 1145, 0, 1633, 0, 0, 1195, 0, 0, 0,
	1197, 1168, 0, 0, 1162, 0, 1158, 1159, 1160, 1161,
	1169, 843, 1199, 1171, 1175, 1741, 0, 1201, 0, 1186,
	0, 1188, 1220, 0, 1180, 1183, 0, 0, 191, 1754,
	215, 219, 220, 216, 217, 218, 433, 0, 0, 1635,
	0, 1236, 0, 0, 0, 0, 0, 437, 0, 487,
	-2, 520, 521, 523, 0, 519, 117, 948, 0, 0,
	939, 0, 122, 2059, 131, 0, 785, 0, 1725, 0,
	0, 0, 0, 950, 0, 0, 2059, 151, 2059, 151,
	134, 137, 0, 141, 139, 0, 0, 776, 78, 948,
	81, 85, 93, 0, 0, 0, 99, 0, 0, 0,
	941, 0, 870, 871, 874, 880, 62, 0, 943, 938,
	143, 83, 87, 94, 0, 945, 80, 0, 908, 884,
	885, 893, 896, 154, 0, 190, 1699, 0, 0, 0,
	0, 0, 755, 826, 0, 0, 0, 0, 300, 296,
	0, 305, 311, 310, 0, 0, 0, -2, -2, 913,
	0, 915, 927, 0, 0, 0, 1006, 1010, 0, 1009,
	1100, 1113, 315, 1011, 1034, 0, 0, 0, 1021, 1017,
	1014, 1230, 0, 0, 0, 0, 0, 262, 341, 344,
	347, 350, 353, 368, 369, 165, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 1762, 1762, 0,
	1729, 0, 0, 0, 0, 158, 0, 476, 0, 0,
	0, 629, 631, 634, 659, 661, 674, 699, 700, 771,
	0, 771, 0, 0, 1066, 0, 1134, 1072, 1116, 1117,
	0, 937, 0, 1349, 1390, 0, 0, -2, 0, 0,
	1394, 0, 0, 0, -2, 0, 0, 0, 1622, 1624,
	0, 1678, 1490, 0, 0, 0, 1494, 1478, 1479, 0,
	1596, 1639, 1668, 1672, 0, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 0, 1718, 1742, 1746, 1569, 1570, 1574, 1732,
	0, 0, 0, 1315, 1319, 1501, 0, 0, 0, 0,
	0, 0, 0, 1640, 1651, 1653, 1432, 1433, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, -2, -2,
	-2, 1450, 1451, 1452, -2, -2, -2, 0, 0, 0,
	1654, 1656, 1657, 1661, 1662, 0, 1552, 1553, 1554, 1663,
	0, 1147, 0, 1228, 1151, 0, 1147, 1147, 1109, 1193,
	0, 0, 1216, 0, 1165, 0, 1166, 0, 1198, 0,
	1173, 1176, 1177, 1187, 0, 1179, 0, 1182, 0, 1490,
	-2, 435, 419, 0, 0, 1238, 0, 1299, 1303, 1327,
	439, 1202, 0, 0, 0, 0, 152, 783, 808, 0,
	0, 930, 937, 0, 0, 124, 0, 0, 0, 132,
	0, 0, 129, 0, 136, 140, 0, 0, 0, 0,
	0, 96, 97, 98, 0, 103, 0, 104, 0, 0,
	0, 0, 0, 0, 180, 155, 235, 902, 241, 765,
	814, 0, 816, 0, 734, 0, 0, 815, 292, 0,
	299, 0, 864, 0, 0, 887, 890, 914, 0, 0,
	0, 0, 0, 1008, 1010, 0, 1001, 1002, 1130, 1012,
	1032, -2, 1031, 0, 1113, 1040, 1037, 1043, 1044, 0,
	187, 0, 182, 184, 0, 168, 0, 0, 758, 763,
	0, 0, 0, 0, 0, 1023, 1025, 0, 174, 0,
	599, 621, 669, 701, 770, 0, 0, 703, 0, 0,
	1133, 1120, 1121, 1118, 937, 1392, 1396, 0, 0, 0,
	1398, -2, 0, 1420, -2, -2, 1625, 1677, 1469, 1113,
	1491, 1493, 1480, 1671, 1344, 0, 1576, 1573, 0, 1560,
	1271, 1513, 1514, 0, 0, 1517, 1519, 1520, 1521, 1650,
	0, 0, 0, 0, 1551, 1098, 1565, 0, 0, 1155,
	1565, 1565, 1194, 0, 1196, 1163, 1156, 0, 1742, 1189,
	1181, 0, 0, 1232, 1237, 0, 1298, 118, 119, 121,
	0, 784, 0, 787, 0, 0, 0, 0, 794, 795,
	0, 0, 0, 0, 0, 830, 839, 0, 1122, 0,
	0, 0, 126, 146, 0, 0, 949, 0, 0, 151,
	151, 0, 0, 940, 0, 0, 0, 0, 106, 0,
	0, 942, 944, 0, 0, 946, 773, 0, 826, 818,
	819, 820, 0, 825, 827, 0, 0, 743, 0, 739,
	0, 0, 736, 756, 733, 0, 297, 861, 900, 843,
	0, 926, 0, 0, 0, 998, 1010, 0, 1003, 1004,
	1034, 1129, 0, 0, 0, 1020, 1130, 0, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 190, 478, 480,
	0, 0, 486, 769, 0, 0, 0, 0, 1119, 1400,
	-2, -2, 1421, 0, 1743, 1745, 1113, 0, 1562, 0,
	0, -2, 0, 0, 0, 1084, 0, 1146, 1144, 1085,
	1086, 1215, 0, 1184, 0, 1239, 123, 0, 788, 789,
	1728, 791, 0, 793, 796, 0, 799, 1764, 0, 803,
	810, 831, 0, 765, 0, 836, 837, 931, 932, 841,
	0, 125, 127, 145, 934, 0, 128, 135, 0, 0,
	82, 0, 0, 1814, 109, 107, 105, 84, 0, 733,
	772, 0, 817, 0, 828, 829, 741, 0, 735, 0,
	0, 0, 0, 0, 298, 301, 0, 304, 0, 0,
	927, 0, 0, 0, 1005, 1006, 313, 0, 0, 0,
	1034, 1045, 167, 0, 0, 841, 0, 0, 807, 0,
	172, 0, 482, 0, 484, 0, 702, 704, 0, 0,
	1492, 1580, 0, 1515, 1516, -2, 0, 1458, 1564, 1566,
	0, 1157, 1233, 786, 790, 0, 0, 0, 847, 0,
	0, 0, 834, 835, 773, 0, 765, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	0, 744, 0, 740, 737, 738, 765, 0, 302, 303,
	0, 841, 0, 839, 0, 1007, 1008, 0, 1027, 1028,
	1030, 1035, 0, 0, 839, 841, 806, 0, 481, 0,
	0, 707, 708, 0, 0, 0, 0, 1575, 1459, 0,
	0, 0, 0, 798, 852, 0, 0, 0, 832, 833,
	830, 0, 812, 0, 843, 130, 0, 933, 841, 0,
	777, 0, 0, 780, 0, 0, 110, 1814, 108, 0,
	0, 0, 822, 824, 745, 773, 743, 901, 839, 0,
	765, 0, 999, 0, 1029, 190, 190, 765, 839, 190,
	483, 485, 1572, 1592, 1581, -2, 2022, 1818, 0, 1592,
	1592, 1567, 1568, 0, 0, 800, 848, 849, 0, 844,
	845, 846, 1763, 801, 802, 811, 838, 0, 847, 147,
	765, 774, 0, 0, 775, 0, 0, 113, 0, 115,
	0, 821, 0, 733, 742, 765, 0, 773, 0, 1230,
	169, 170, 773, 765, 171, 1577, 0, 0, 1583, 1584,
	1585, 1586, 1587, 1578, 1579, 792, 0, 850, 0, 851,
	0, 0, 0, 0, 852, 133, 778, 0, 781, 0,
	111, 0, 823, 732, 773, 841, 924, 839, 1026, 804,
	773, 0, 1589, 1590, 0, 0, 0, 853, 0, 856,
	857, 0, 854, 0, 830, 0, 0, 768, 924, 839,
	921, 0, 765, 805, 1588, 1591, 1582, 797, 855, 858,
	859, 840, 813, 0, 0, 764, 766, 767, 919, 765,
	925, 773, 773, 0, 773, 924, 779, 0, 924, 922,
	0, 920, 0, 773, 782,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 456, 3, 462, 457, 3,
	467, 468, 460, 458, 472, 459, 469, 461, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 475, 3,
	448, 450, 449, 453, 471, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 465, 3, 466, 463, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 473, 455, 474, 451,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 452, 57791, 454, 57792, 464, 57793, 470, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1116
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1121
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1125
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1126
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1127
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1128
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1129
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1130
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1131
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1132
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1136
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1145
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1146
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1147
		{
			return helpWith(sqllex, "ALTER")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1150
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1151
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1152
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1153
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1154
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1155
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1156
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1210
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1236
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1262
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1266
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1270
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1284
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1303
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1335
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1339
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1343
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1349
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1353
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1359
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1368
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1379
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1383
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1389
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1397
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1407
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1411
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1421
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1432
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1439
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1451
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1458
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1466
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1471
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1475
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1480
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1486
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1494
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1505
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1515
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1525
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 105:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1534
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1545
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 107:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1551
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1559
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1563
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1571
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1577
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1582
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1593
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1597
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1603
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1607
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1619
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1624
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1629
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1634
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1644
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1649
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1659
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1673
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1685
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1695
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1702
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1751
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1774
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = nil
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1796
		{
			sqlVAL.union.val = nil
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1817
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1821
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1854
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1884
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1945
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1954
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1960
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1965
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1970
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1975
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1980
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1984
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2003
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2011
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2033
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2051
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = nil
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2081
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2095
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2096
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2097
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2098
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2108
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2116
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2121
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2148
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2157
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2184
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2193
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2205
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2224
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2229
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2241
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2242
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2244
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2245
		{
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2246
		{
			return helpWith(sqllex, "CREATE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2249
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2250
		{
			return unimplemented(sqllex, "create cast")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2251
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2252
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2253
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2254
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2255
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2256
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2257
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2259
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2260
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2261
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2262
		{
			return unimplemented(sqllex, "create operator")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2263
		{
			return unimplemented(sqllex, "create publication")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2264
		{
			return unimplemented(sqllex, "create rule")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2265
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "create")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2266
		{
			return unimplemented(sqllex, "create server")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2267
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2272
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2273
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2276
		{
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2277
		{
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2280
		{
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2281
		{
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2284
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2285
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2286
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2288
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2289
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2290
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2291
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2292
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2293
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2294
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2295
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2296
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplemented(sqllex, "drop server")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2300
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2303
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2307
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2309
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2310
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2312
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2313
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2314
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2333
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2351
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2360
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2383
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2394
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2422
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2457
		{

			sqlVAL.union.val = nil
		}
	case 313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2481
		{
			return helpWith(sqllex, "DELETE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2484
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2485
		{
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2496
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2497
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2498
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2499
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2500
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2509
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2510
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2511
		{
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2512
		{
			return helpWith(sqllex, "DROP")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2515
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2516
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2519
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2534
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2564
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[3].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[5].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2587
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2610
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[3].union.exprs(), IfExists: false}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[5].union.exprs(), IfExists: true}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2625
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2640
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2644
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2649
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = &tree.Explain{Statement: sqlDollar[2].union.stmt()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2675
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.Explain{Options: sqlDollar[3].union.strs(), Statement: sqlDollar[5].union.stmt()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2700
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2704
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2707
		{
			return helpWith(sqllex, "DELETE")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2709
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2710
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2711
		{
			return helpWith(sqllex, "INSERT")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2712
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2715
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2716
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2724
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2725
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2726
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2731
		{
			return helpWith(sqllex, "DELETE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2733
		{
			return helpWith(sqllex, "INSERT")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2739
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2740
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2766
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2774
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2792
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2799
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2807
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2840
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2868
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2871
		{
			return helpWith(sqllex, "GRANT")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2902
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2911
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			return helpWith(sqllex, "RESET")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2940
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2955
		{
			return helpWith(sqllex, "RESET")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2980
		{
			return helpWith(sqllex, "USE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2984
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2985
		{
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2987
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2991
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2992
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2993
		{
			return helpWith(sqllex, "USE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3009
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3027
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3053
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3107
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3167
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3190
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3197
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3202
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{
			return unimplemented(sqllex, "set from current")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3213
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3221
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3226
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = tree.Low
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = tree.Normal
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = tree.High
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3356
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3357
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3359
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3360
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3375
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "SHOW")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.str = "client_encoding"
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.str = "timezone"
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3426
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3441
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3474
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3483
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3513
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3530
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3533
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3567
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3580
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3599
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3612
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3629
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3632
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3645
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3648
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3653
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = true
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = true
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = false
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3698
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3715
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3723
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3725
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3729
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = true
		}
	case 664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3733
		{
			sqlVAL.union.val = false
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3741
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = true
		}
	case 674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = false
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3798
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3830
		{

			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3842
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3847
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3852
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3868
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3872
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3888
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3911
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3919
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3956
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3964
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3979
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3995
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4002
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4135
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4178
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4267
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4281
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = nil
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4301
		{

			sqlVAL.union.val = nil
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4307
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4312
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 741:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4338
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4350
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
			}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4363
		{
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4365
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = true
		}
	case 747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = true
		}
	case 748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = false
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = true
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = true
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = true
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = true
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4393
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 764:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4427
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4443
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4448
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 768:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.str = ""
		}
	case 773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 774:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 779:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 782:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4637
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4651
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 804:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4696
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4748
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4782
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4810
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4821
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4825
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4837
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4851
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4862
		{
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4863
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4864
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4866
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4938
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5022
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5031
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5050
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5053
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5055
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5065
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5068
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5070
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5072
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5074
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5075
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5093
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5118
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: true}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: true}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5133
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = &tree.AlterUser{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.AlterUser{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: true}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: true}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5163
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5168
		{
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5169
		{
		}
	case 900:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5177
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5188
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5198
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5199
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = nil
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5233
		{
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5234
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5240
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5242
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5244
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5246
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5248
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5250
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5266
		{
			table := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[4].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Columns:     sqlDollar[9].union.idxElems(),
				Sharded:     sqlDollar[11].union.shardedIndexDef(),
				Storing:     sqlDollar[12].union.nameList(),
				Interleave:  sqlDollar[13].union.interleave(),
				PartitionBy: sqlDollar[14].union.partitionBy(),
				Inverted:    sqlDollar[7].union.bool(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5281
		{
			table := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[7].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Sharded:     sqlDollar[14].union.shardedIndexDef(),
				Storing:     sqlDollar[15].union.nameList(),
				Interleave:  sqlDollar[16].union.interleave(),
				PartitionBy: sqlDollar[17].union.partitionBy(),
				Inverted:    sqlDollar[10].union.bool(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5297
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[5].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				Columns:     sqlDollar[9].union.idxElems(),
				Storing:     sqlDollar[11].union.nameList(),
				Interleave:  sqlDollar[12].union.interleave(),
				PartitionBy: sqlDollar[13].union.partitionBy(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:5311
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[8].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Storing:     sqlDollar[14].union.nameList(),
				Interleave:  sqlDollar[15].union.interleave(),
				PartitionBy: sqlDollar[16].union.partitionBy(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5325
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5328
		{
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5329
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5333
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = false
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = true
		}
	case 929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = false
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5377
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.str = ""
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = tree.Descending
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5424
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5430
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5438
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5444
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5452
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5458
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5475
		{
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5476
		{
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5479
		{
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5480
		{
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5513
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5524
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5528
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5529
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5530
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5549
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5554
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5564
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5567
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5572
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5581
		{
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5582
		{
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5583
		{
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5600
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5603
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5604
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5612
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5632
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5645
		{
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5647
		{
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5651
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5686
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 998:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5716
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.str = ""
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.str = ""
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.str = ""
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.str = ""
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5759
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5760
		{
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5786
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5804
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5808
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5817
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5866
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5883
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5884
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5892
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5930
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5942
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5946
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5959
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5962
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6112
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6147
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6148
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6149
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6210
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6299
		{
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6300
		{
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = nil
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6313
		{
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6314
		{
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6318
		{
			sqlVAL.union.val = true
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = false
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = false
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = true
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6343
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6344
		{
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6374
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6395
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6400
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6429
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6462
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6517
		{
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6518
		{
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6522
		{
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6575
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6577
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6592
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6614
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6619
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6624
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6635
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6647
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6666
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6705
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6715
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6750
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6761
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6791
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6818
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6824
		{
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6826
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = nil
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = true
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = false
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.str = tree.AstFull
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.str = tree.AstRight
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.str = tree.AstInner
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6943
		{
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6944
		{
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.str = tree.AstHash
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.str = ""
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7006
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7011
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7029
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7035
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7041
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7051
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7080
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7093
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7101
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7102
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7120
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7122
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7130
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = types.String
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = types.Name
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7183
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = types.INet
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = types.Oid
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7232
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7263
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7271
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = nil
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = types.Int2
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = types.Int2
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = types.Int4
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = types.Int
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = types.Int
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = types.Int
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = types.Float4
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = types.Float4
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = types.Float
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = types.Float
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7338
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7346
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7354
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = types.Bool
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = types.Bool
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = types.RegType
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7395
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = types.Float
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7414
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7420
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7442
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = types.String
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = true
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = false
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = types.Date
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7491
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7499
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7513
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7522
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7530
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7547
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = true
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = false
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = false
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = types.Interval
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7571
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7655
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7670
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = nil
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7700
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7741
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7749
		{

			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7762
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8006
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8072
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8094
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8178
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8288
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8293
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8319
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8328
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8343
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8373
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8384
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8385
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8400
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8411
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8531
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8536
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8545
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8554
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8563
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8572
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8577
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8582
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8587
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8592
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8601
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8602
		{
			return unimplemented(sqllex, "treat")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8623
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8628
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8633
		{
			return unimplemented(sqllex, "within group")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8634
		{
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8669
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.str = ""
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8758
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8771
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8839
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8868
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = tree.Any
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = tree.Some
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = tree.All
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = tree.Div
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = tree.LT
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = tree.GT
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = tree.LE
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = tree.GE
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = tree.NE
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = tree.Like
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9229
		{
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9230
		{
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9302
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9310
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9383
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9408
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9419
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9428
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9436
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9448
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9613
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9626
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9633
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.str = ""
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
