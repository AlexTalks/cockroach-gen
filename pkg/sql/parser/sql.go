// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:71

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:629
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10310

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 27,
	-2, 1115,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 73,
	189, 942,
	206, 942,
	221, 250,
	308, 250,
	317, 757,
	345, 250,
	354, 757,
	393, 757,
	417, 250,
	442, 757,
	-2, 0,
	-1, 78,
	221, 254,
	-2, 0,
	-1, 79,
	115, 1115,
	195, 1115,
	427, 1115,
	428, 1115,
	-2, 0,
	-1, 91,
	128, 1089,
	144, 1089,
	157, 1089,
	203, 1089,
	233, 1089,
	271, 1089,
	281, 1089,
	422, 1089,
	-2, 1060,
	-1, 123,
	134, 666,
	220, 666,
	311, 646,
	363, 646,
	410, 666,
	-2, 0,
	-1, 124,
	4, 1117,
	21, 1117,
	22, 1117,
	23, 1117,
	24, 1117,
	25, 1117,
	27, 1117,
	33, 1117,
	38, 1117,
	39, 1117,
	40, 1117,
	41, 1117,
	42, 1117,
	43, 1117,
	44, 1117,
	45, 1117,
	46, 1117,
	47, 1117,
	48, 1117,
	49, 1117,
	50, 1117,
	52, 1117,
	53, 1117,
	54, 1117,
	55, 1117,
	56, 1117,
	57, 1117,
	58, 1117,
	61, 1117,
	62, 1117,
	63, 1117,
	64, 1117,
	66, 1117,
	67, 1117,
	68, 1117,
	72, 1117,
	73, 1117,
	74, 1117,
	75, 1117,
	76, 1117,
	77, 1117,
	80, 1117,
	81, 1117,
	82, 1117,
	83, 1117,
	85, 1117,
	87, 1117,
	88, 1117,
	89, 1117,
	91, 1117,
	93, 1117,
	94, 1117,
	102, 1117,
	103, 1117,
	104, 1117,
	105, 1117,
	106, 1117,
	107, 1117,
	108, 1117,
	109, 1117,
	111, 1117,
	112, 1117,
	114, 1117,
	115, 1117,
	117, 1117,
	120, 1117,
	121, 1117,
	122, 1117,
	124, 1117,
	126, 1117,
	127, 1117,
	129, 1117,
	130, 1117,
	131, 1117,
	132, 1117,
	133, 1117,
	134, 1117,
	135, 1117,
	136, 1117,
	137, 1117,
	138, 1117,
	139, 1117,
	140, 1117,
	141, 1117,
	143, 1117,
	149, 1117,
	150, 1117,
	151, 1117,
	152, 1117,
	153, 1117,
	154, 1117,
	156, 1117,
	158, 1117,
	162, 1117,
	163, 1117,
	165, 1117,
	166, 1117,
	168, 1117,
	169, 1117,
	171, 1117,
	172, 1117,
	173, 1117,
	174, 1117,
	175, 1117,
	176, 1117,
	177, 1117,
	178, 1117,
	180, 1117,
	181, 1117,
	183, 1117,
	184, 1117,
	185, 1117,
	186, 1117,
	189, 1117,
	190, 1117,
	191, 1117,
	192, 1117,
	195, 1117,
	196, 1117,
	197, 1117,
	198, 1117,
	199, 1117,
	200, 1117,
	201, 1117,
	202, 1117,
	204, 1117,
	206, 1117,
	208, 1117,
	210, 1117,
	211, 1117,
	212, 1117,
	214, 1117,
	215, 1117,
	218, 1117,
	219, 1117,
	220, 1117,
	221, 1117,
	222, 1117,
	224, 1117,
	225, 1117,
	227, 1117,
	228, 1117,
	230, 1117,
	231, 1117,
	234, 1117,
	235, 1117,
	238, 1117,
	239, 1117,
	240, 1117,
	241, 1117,
	243, 1117,
	244, 1117,
	245, 1117,
	246, 1117,
	247, 1117,
	248, 1117,
	249, 1117,
	250, 1117,
	251, 1117,
	252, 1117,
	254, 1117,
	255, 1117,
	256, 1117,
	257, 1117,
	258, 1117,
	260, 1117,
	262, 1117,
	264, 1117,
	266, 1117,
	267, 1117,
	268, 1117,
	269, 1117,
	270, 1117,
	272, 1117,
	273, 1117,
	274, 1117,
	276, 1117,
	277, 1117,
	278, 1117,
	279, 1117,
	282, 1117,
	283, 1117,
	284, 1117,
	286, 1117,
	288, 1117,
	289, 1117,
	290, 1117,
	291, 1117,
	292, 1117,
	293, 1117,
	294, 1117,
	295, 1117,
	296, 1117,
	297, 1117,
	299, 1117,
	300, 1117,
	301, 1117,
	302, 1117,
	303, 1117,
	304, 1117,
	305, 1117,
	307, 1117,
	309, 1117,
	310, 1117,
	311, 1117,
	312, 1117,
	313, 1117,
	314, 1117,
	315, 1117,
	316, 1117,
	317, 1117,
	318, 1117,
	320, 1117,
	321, 1117,
	322, 1117,
	323, 1117,
	324, 1117,
	325, 1117,
	327, 1117,
	328, 1117,
	329, 1117,
	330, 1117,
	331, 1117,
	332, 1117,
	333, 1117,
	334, 1117,
	336, 1117,
	338, 1117,
	339, 1117,
	340, 1117,
	341, 1117,
	342, 1117,
	343, 1117,
	345, 1117,
	346, 1117,
	347, 1117,
	348, 1117,
	349, 1117,
	350, 1117,
	351, 1117,
	352, 1117,
	354, 1117,
	355, 1117,
	356, 1117,
	357, 1117,
	358, 1117,
	359, 1117,
	360, 1117,
	361, 1117,
	362, 1117,
	363, 1117,
	365, 1117,
	366, 1117,
	367, 1117,
	368, 1117,
	369, 1117,
	371, 1117,
	372, 1117,
	373, 1117,
	374, 1117,
	375, 1117,
	377, 1117,
	378, 1117,
	379, 1117,
	380, 1117,
	381, 1117,
	382, 1117,
	383, 1117,
	384, 1117,
	385, 1117,
	386, 1117,
	387, 1117,
	388, 1117,
	390, 1117,
	391, 1117,
	392, 1117,
	394, 1117,
	395, 1117,
	396, 1117,
	397, 1117,
	398, 1117,
	399, 1117,
	400, 1117,
	402, 1117,
	403, 1117,
	404, 1117,
	405, 1117,
	406, 1117,
	408, 1117,
	410, 1117,
	411, 1117,
	412, 1117,
	413, 1117,
	414, 1117,
	416, 1117,
	417, 1117,
	418, 1117,
	420, 1117,
	421, 1117,
	424, 1117,
	425, 1117,
	426, 1117,
	427, 1117,
	428, 1117,
	429, 1117,
	430, 1117,
	432, 1117,
	434, 1117,
	435, 1117,
	436, 1117,
	437, 1117,
	438, 1117,
	439, 1117,
	440, 1117,
	442, 1117,
	443, 1117,
	444, 1117,
	449, 1117,
	450, 1117,
	451, 1117,
	452, 1117,
	453, 1117,
	454, 1117,
	-2, 0,
	-1, 125,
	1, 994,
	210, 994,
	307, 994,
	315, 994,
	457, 994,
	480, 994,
	-2, 0,
	-1, 127,
	1, 994,
	480, 994,
	-2, 0,
	-1, 128,
	1, 994,
	480, 994,
	-2, 0,
	-1, 129,
	1, 994,
	407, 994,
	480, 994,
	-2, 0,
	-1, 154,
	128, 1088,
	144, 1088,
	157, 1088,
	203, 1088,
	233, 1088,
	271, 1088,
	281, 1088,
	422, 1088,
	-2, 1063,
	-1, 187,
	4, 1124,
	5, 1124,
	6, 1124,
	7, 1124,
	8, 1124,
	9, 1124,
	10, 1124,
	21, 1124,
	22, 1124,
	23, 1124,
	24, 1124,
	25, 1124,
	27, 1124,
	33, 1124,
	34, 1124,
	38, 1124,
	39, 1124,
	40, 1124,
	41, 1124,
	42, 1124,
	43, 1124,
	44, 1124,
	45, 1124,
	46, 1124,
	47, 1124,
	48, 1124,
	49, 1124,
	50, 1124,
	52, 1124,
	53, 1124,
	54, 1124,
	55, 1124,
	56, 1124,
	57, 1124,
	58, 1124,
	59, 1124,
	60, 1124,
	61, 1124,
	62, 1124,
	63, 1124,
	64, 1124,
	66, 1124,
	67, 1124,
	68, 1124,
	70, 1124,
	72, 1124,
	73, 1124,
	74, 1124,
	75, 1124,
	76, 1124,
	77, 1124,
	80, 1124,
	81, 1124,
	82, 1124,
	83, 1124,
	85, 1124,
	87, 1124,
	88, 1124,
	89, 1124,
	91, 1124,
	92, 1124,
	93, 1124,
	94, 1124,
	95, 1124,
	96, 1124,
	97, 1124,
	98, 1124,
	99, 1124,
	100, 1124,
	101, 1124,
	102, 1124,
	103, 1124,
	104, 1124,
	105, 1124,
	106, 1124,
	107, 1124,
	108, 1124,
	109, 1124,
	110, 1124,
	111, 1124,
	112, 1124,
	114, 1124,
	115, 1124,
	117, 1124,
	120, 1124,
	121, 1124,
	122, 1124,
	124, 1124,
	126, 1124,
	127, 1124,
	129, 1124,
	130, 1124,
	131, 1124,
	132, 1124,
	133, 1124,
	134, 1124,
	135, 1124,
	136, 1124,
	137, 1124,
	138, 1124,
	139, 1124,
	140, 1124,
	141, 1124,
	142, 1124,
	143, 1124,
	149, 1124,
	150, 1124,
	151, 1124,
	152, 1124,
	153, 1124,
	154, 1124,
	156, 1124,
	158, 1124,
	161, 1124,
	162, 1124,
	163, 1124,
	165, 1124,
	166, 1124,
	168, 1124,
	169, 1124,
	171, 1124,
	172, 1124,
	173, 1124,
	174, 1124,
	175, 1124,
	176, 1124,
	177, 1124,
	178, 1124,
	179, 1124,
	180, 1124,
	181, 1124,
	183, 1124,
	184, 1124,
	185, 1124,
	186, 1124,
	189, 1124,
	190, 1124,
	191, 1124,
	192, 1124,
	194, 1124,
	195, 1124,
	196, 1124,
	197, 1124,
	198, 1124,
	199, 1124,
	200, 1124,
	201, 1124,
	202, 1124,
	204, 1124,
	206, 1124,
	207, 1124,
	208, 1124,
	209, 1124,
	210, 1124,
	211, 1124,
	212, 1124,
	213, 1124,
	214, 1124,
	215, 1124,
	218, 1124,
	219, 1124,
	220, 1124,
	221, 1124,
	222, 1124,
	224, 1124,
	225, 1124,
	227, 1124,
	228, 1124,
	229, 1124,
	230, 1124,
	231, 1124,
	232, 1124,
	234, 1124,
	235, 1124,
	236, 1124,
	237, 1124,
	238, 1124,
	239, 1124,
	240, 1124,
	241, 1124,
	243, 1124,
	244, 1124,
	245, 1124,
	246, 1124,
	247, 1124,
	248, 1124,
	249, 1124,
	250, 1124,
	251, 1124,
	252, 1124,
	253, 1124,
	254, 1124,
	255, 1124,
	256, 1124,
	257, 1124,
	258, 1124,
	259, 1124,
	260, 1124,
	261, 1124,
	262, 1124,
	263, 1124,
	264, 1124,
	265, 1124,
	266, 1124,
	267, 1124,
	268, 1124,
	269, 1124,
	270, 1124,
	272, 1124,
	273, 1124,
	274, 1124,
	277, 1124,
	278, 1124,
	279, 1124,
	282, 1124,
	283, 1124,
	284, 1124,
	285, 1124,
	286, 1124,
	287, 1124,
	288, 1124,
	289, 1124,
	290, 1124,
	291, 1124,
	292, 1124,
	293, 1124,
	294, 1124,
	295, 1124,
	296, 1124,
	297, 1124,
	299, 1124,
	300, 1124,
	301, 1124,
	302, 1124,
	303, 1124,
	304, 1124,
	305, 1124,
	307, 1124,
	309, 1124,
	310, 1124,
	311, 1124,
	312, 1124,
	313, 1124,
	314, 1124,
	315, 1124,
	316, 1124,
	317, 1124,
	318, 1124,
	320, 1124,
	321, 1124,
	322, 1124,
	323, 1124,
	324, 1124,
	325, 1124,
	327, 1124,
	328, 1124,
	329, 1124,
	330, 1124,
	331, 1124,
	332, 1124,
	333, 1124,
	334, 1124,
	336, 1124,
	337, 1124,
	338, 1124,
	339, 1124,
	340, 1124,
	341, 1124,
	342, 1124,
	343, 1124,
	345, 1124,
	346, 1124,
	347, 1124,
	348, 1124,
	349, 1124,
	350, 1124,
	351, 1124,
	352, 1124,
	354, 1124,
	355, 1124,
	356, 1124,
	357, 1124,
	358, 1124,
	359, 1124,
	360, 1124,
	361, 1124,
	362, 1124,
	363, 1124,
	364, 1124,
	365, 1124,
	366, 1124,
	367, 1124,
	368, 1124,
	369, 1124,
	370, 1124,
	371, 1124,
	372, 1124,
	373, 1124,
	374, 1124,
	375, 1124,
	377, 1124,
	378, 1124,
	379, 1124,
	380, 1124,
	381, 1124,
	382, 1124,
	383, 1124,
	384, 1124,
	385, 1124,
	386, 1124,
	387, 1124,
	388, 1124,
	390, 1124,
	391, 1124,
	392, 1124,
	394, 1124,
	395, 1124,
	396, 1124,
	397, 1124,
	398, 1124,
	399, 1124,
	400, 1124,
	402, 1124,
	403, 1124,
	404, 1124,
	405, 1124,
	406, 1124,
	408, 1124,
	410, 1124,
	411, 1124,
	412, 1124,
	413, 1124,
	414, 1124,
	415, 1124,
	416, 1124,
	417, 1124,
	418, 1124,
	420, 1124,
	421, 1124,
	423, 1124,
	424, 1124,
	425, 1124,
	426, 1124,
	427, 1124,
	428, 1124,
	429, 1124,
	430, 1124,
	431, 1124,
	432, 1124,
	434, 1124,
	435, 1124,
	436, 1124,
	437, 1124,
	438, 1124,
	439, 1124,
	440, 1124,
	442, 1124,
	443, 1124,
	444, 1124,
	449, 1124,
	450, 1124,
	451, 1124,
	452, 1124,
	453, 1124,
	454, 1124,
	455, 1124,
	461, 1124,
	468, 1124,
	469, 1124,
	470, 1124,
	477, 1124,
	481, 1124,
	-2, 0,
	-1, 578,
	160, 1829,
	407, 1829,
	460, 1829,
	479, 1829,
	-2, 0,
	-1, 579,
	160, 1911,
	407, 1911,
	460, 1911,
	479, 1911,
	-2, 0,
	-1, 580,
	160, 1818,
	407, 1818,
	460, 1818,
	479, 1818,
	-2, 0,
	-1, 582,
	160, 2009,
	407, 2009,
	460, 2009,
	479, 2009,
	-2, 0,
	-1, 584,
	160, 2039,
	407, 2039,
	460, 2039,
	479, 2039,
	-2, 0,
	-1, 591,
	160, 1923,
	407, 1923,
	460, 1923,
	479, 1923,
	-2, 504,
	-1, 619,
	479, 1773,
	482, 1773,
	-2, 719,
	-1, 620,
	479, 1775,
	482, 1775,
	-2, 720,
	-1, 621,
	479, 1774,
	482, 1774,
	-2, 721,
	-1, 622,
	482, 1710,
	-2, 722,
	-1, 664,
	442, 922,
	-2, 758,
	-1, 703,
	4, 940,
	21, 940,
	22, 940,
	23, 940,
	24, 940,
	25, 940,
	27, 940,
	33, 940,
	38, 940,
	39, 940,
	40, 940,
	41, 940,
	42, 940,
	43, 940,
	44, 940,
	45, 940,
	46, 940,
	47, 940,
	48, 940,
	49, 940,
	50, 940,
	52, 940,
	53, 940,
	54, 940,
	55, 940,
	56, 940,
	57, 940,
	58, 940,
	61, 940,
	62, 940,
	63, 940,
	64, 940,
	66, 940,
	67, 940,
	68, 940,
	72, 940,
	73, 940,
	74, 940,
	75, 940,
	76, 940,
	77, 940,
	80, 940,
	81, 940,
	82, 940,
	83, 940,
	85, 940,
	87, 940,
	88, 940,
	89, 940,
	91, 940,
	93, 940,
	94, 940,
	102, 940,
	103, 940,
	104, 940,
	105, 940,
	106, 940,
	107, 940,
	108, 940,
	109, 940,
	111, 940,
	112, 940,
	114, 940,
	115, 940,
	117, 940,
	120, 940,
	121, 940,
	122, 940,
	124, 940,
	126, 940,
	127, 940,
	129, 940,
	130, 940,
	131, 940,
	132, 940,
	133, 940,
	134, 940,
	135, 940,
	136, 940,
	137, 940,
	138, 940,
	139, 940,
	140, 940,
	141, 940,
	143, 940,
	149, 940,
	150, 940,
	151, 940,
	152, 940,
	153, 940,
	154, 940,
	156, 940,
	158, 940,
	162, 940,
	163, 940,
	165, 940,
	166, 940,
	168, 940,
	169, 940,
	171, 940,
	172, 940,
	173, 940,
	174, 940,
	175, 940,
	176, 940,
	177, 940,
	178, 940,
	180, 940,
	181, 940,
	183, 940,
	184, 940,
	185, 940,
	186, 940,
	189, 940,
	190, 940,
	191, 940,
	192, 940,
	195, 940,
	196, 940,
	197, 940,
	198, 940,
	199, 940,
	200, 940,
	201, 940,
	202, 940,
	204, 940,
	206, 940,
	208, 940,
	210, 940,
	211, 940,
	212, 940,
	214, 940,
	215, 940,
	218, 940,
	219, 940,
	220, 940,
	221, 940,
	222, 940,
	224, 940,
	225, 940,
	227, 940,
	228, 940,
	230, 940,
	231, 940,
	234, 940,
	235, 940,
	238, 940,
	239, 940,
	240, 940,
	241, 940,
	243, 940,
	244, 940,
	245, 940,
	246, 940,
	247, 940,
	248, 940,
	249, 940,
	250, 940,
	251, 940,
	252, 940,
	254, 940,
	255, 940,
	256, 940,
	257, 940,
	258, 940,
	260, 940,
	262, 940,
	264, 940,
	266, 940,
	267, 940,
	268, 940,
	269, 940,
	270, 940,
	272, 940,
	273, 940,
	274, 940,
	277, 940,
	278, 940,
	279, 940,
	282, 940,
	283, 940,
	284, 940,
	286, 940,
	288, 940,
	289, 940,
	290, 940,
	291, 940,
	292, 940,
	293, 940,
	294, 940,
	295, 940,
	296, 940,
	297, 940,
	299, 940,
	300, 940,
	301, 940,
	302, 940,
	303, 940,
	304, 940,
	305, 940,
	307, 940,
	309, 940,
	310, 940,
	311, 940,
	312, 940,
	313, 940,
	314, 940,
	315, 940,
	316, 940,
	317, 940,
	318, 940,
	320, 940,
	321, 940,
	322, 940,
	323, 940,
	324, 940,
	325, 940,
	327, 940,
	328, 940,
	329, 940,
	330, 940,
	331, 940,
	332, 940,
	333, 940,
	334, 940,
	336, 940,
	338, 940,
	339, 940,
	340, 940,
	341, 940,
	342, 940,
	343, 940,
	345, 940,
	346, 940,
	347, 940,
	348, 940,
	349, 940,
	350, 940,
	351, 940,
	352, 940,
	354, 940,
	355, 940,
	356, 940,
	357, 940,
	358, 940,
	359, 940,
	360, 940,
	361, 940,
	362, 940,
	363, 940,
	365, 940,
	366, 940,
	367, 940,
	368, 940,
	369, 940,
	371, 940,
	372, 940,
	373, 940,
	374, 940,
	375, 940,
	377, 940,
	378, 940,
	379, 940,
	380, 940,
	381, 940,
	382, 940,
	383, 940,
	384, 940,
	385, 940,
	386, 940,
	387, 940,
	388, 940,
	390, 940,
	391, 940,
	392, 940,
	394, 940,
	395, 940,
	396, 940,
	397, 940,
	398, 940,
	399, 940,
	400, 940,
	402, 940,
	403, 940,
	404, 940,
	405, 940,
	406, 940,
	408, 940,
	410, 940,
	411, 940,
	412, 940,
	413, 940,
	414, 940,
	416, 940,
	417, 940,
	418, 940,
	420, 940,
	421, 940,
	424, 940,
	425, 940,
	426, 940,
	427, 940,
	428, 940,
	429, 940,
	430, 940,
	432, 940,
	434, 940,
	435, 940,
	436, 940,
	437, 940,
	438, 940,
	439, 940,
	440, 940,
	442, 940,
	443, 940,
	444, 940,
	449, 940,
	450, 940,
	451, 940,
	452, 940,
	453, 940,
	454, 940,
	-2, 0,
	-1, 767,
	311, 647,
	363, 647,
	-2, 0,
	-1, 768,
	311, 646,
	363, 646,
	-2, 594,
	-1, 772,
	1, 676,
	476, 676,
	478, 676,
	480, 676,
	-2, 0,
	-1, 773,
	1, 718,
	157, 718,
	476, 718,
	478, 718,
	480, 718,
	-2, 0,
	-1, 781,
	1, 650,
	476, 650,
	478, 650,
	480, 650,
	-2, 0,
	-1, 784,
	1, 676,
	476, 676,
	478, 676,
	480, 676,
	-2, 0,
	-1, 785,
	1, 678,
	476, 678,
	478, 678,
	480, 678,
	-2, 0,
	-1, 786,
	1, 681,
	476, 681,
	478, 681,
	480, 681,
	-2, 0,
	-1, 791,
	1, 697,
	476, 697,
	478, 697,
	480, 697,
	-2, 0,
	-1, 792,
	1, 699,
	476, 699,
	478, 699,
	480, 699,
	-2, 0,
	-1, 835,
	144, 1126,
	157, 1126,
	233, 1126,
	271, 1126,
	-2, 1067,
	-1, 848,
	144, 1125,
	157, 1125,
	233, 1125,
	271, 1125,
	-2, 1064,
	-1, 872,
	479, 1772,
	-2, 512,
	-1, 900,
	477, 1764,
	-2, 1755,
	-1, 906,
	5, 1266,
	-2, 1806,
	-1, 907,
	5, 1267,
	-2, 1812,
	-1, 908,
	5, 1268,
	-2, 1811,
	-1, 909,
	5, 1269,
	-2, 2036,
	-1, 910,
	5, 1270,
	-2, 1925,
	-1, 911,
	5, 1271,
	-2, 2001,
	-1, 912,
	5, 1272,
	-2, 2003,
	-1, 913,
	5, 1273,
	-2, 2016,
	-1, 914,
	5, 1274,
	-2, 2004,
	-1, 915,
	5, 1275,
	-2, 2005,
	-1, 916,
	5, 1276,
	-2, 1805,
	-1, 917,
	5, 1277,
	-2, 2053,
	-1, 918,
	5, 1278,
	-2, 1885,
	-1, 919,
	5, 1279,
	-2, 1937,
	-1, 920,
	5, 1280,
	-2, 1939,
	-1, 921,
	5, 1281,
	-2, 1889,
	-1, 922,
	5, 1282,
	477, 1782,
	-2, 1773,
	-1, 928,
	477, 1783,
	-2, 1774,
	-1, 930,
	5, 1286,
	-2, 2086,
	-1, 931,
	5, 1287,
	-2, 2087,
	-1, 932,
	5, 1288,
	-2, 1888,
	-1, 933,
	5, 1289,
	-2, 2099,
	-1, 934,
	5, 1290,
	-2, 1890,
	-1, 935,
	5, 1291,
	-2, 1891,
	-1, 936,
	5, 1292,
	-2, 1892,
	-1, 937,
	5, 1293,
	-2, 2068,
	-1, 938,
	5, 1294,
	-2, 2097,
	-1, 939,
	5, 1295,
	-2, 1867,
	-1, 940,
	5, 1296,
	-2, 1868,
	-1, 941,
	5, 1310,
	-2, 2080,
	-1, 943,
	5, 1285,
	-2, 2076,
	-1, 944,
	5, 1285,
	-2, 2075,
	-1, 945,
	5, 1285,
	-2, 2092,
	-1, 946,
	5, 1302,
	-2, 2070,
	-1, 947,
	5, 1303,
	-2, 1807,
	-1, 948,
	5, 1313,
	-2, 2069,
	-1, 949,
	5, 1315,
	-2, 2108,
	-1, 951,
	5, 1326,
	-2, 1840,
	-1, 952,
	5, 1337,
	-2, 2101,
	-1, 953,
	5, 1329,
	-2, 2102,
	-1, 954,
	5, 1337,
	-2, 2103,
	-1, 955,
	5, 1333,
	-2, 2104,
	-1, 956,
	5, 1254,
	-2, 1898,
	-1, 957,
	5, 1255,
	-2, 1899,
	-1, 958,
	479, 1770,
	-2, 1754,
	-1, 959,
	477, 2129,
	-2, 1771,
	-1, 981,
	5, 1321,
	-2, 2027,
	-1, 999,
	5, 1320,
	-2, 2109,
	-1, 1009,
	5, 1322,
	443, 1322,
	-2, 2071,
	-1, 1010,
	5, 1323,
	443, 1323,
	-2, 2072,
	-1, 1047,
	477, 1782,
	-2, 1773,
	-1, 1075,
	160, 2039,
	407, 2039,
	460, 2039,
	479, 2039,
	-2, 0,
	-1, 1078,
	1, 490,
	480, 490,
	-2, 1002,
	-1, 1203,
	327, 1750,
	470, 1750,
	-2, 1748,
	-1, 1215,
	481, 1750,
	-2, 1751,
	-1, 1216,
	1, 919,
	476, 919,
	478, 919,
	480, 919,
	-2, 1113,
	-1, 1264,
	317, 757,
	442, 757,
	-2, 249,
	-1, 1287,
	1, 919,
	476, 919,
	478, 919,
	480, 919,
	-2, 1113,
	-1, 1293,
	4, 940,
	21, 940,
	22, 940,
	23, 940,
	24, 940,
	25, 940,
	27, 940,
	33, 940,
	38, 940,
	39, 940,
	40, 940,
	41, 940,
	42, 940,
	43, 940,
	44, 940,
	45, 940,
	46, 940,
	47, 940,
	48, 940,
	49, 940,
	50, 940,
	52, 940,
	53, 940,
	54, 940,
	55, 940,
	56, 940,
	57, 940,
	58, 940,
	61, 940,
	62, 940,
	63, 940,
	64, 940,
	66, 940,
	67, 940,
	68, 940,
	72, 940,
	73, 940,
	74, 940,
	75, 940,
	76, 940,
	77, 940,
	80, 940,
	81, 940,
	82, 940,
	83, 940,
	85, 940,
	87, 940,
	88, 940,
	89, 940,
	91, 940,
	93, 940,
	94, 940,
	102, 940,
	103, 940,
	104, 940,
	105, 940,
	106, 940,
	107, 940,
	108, 940,
	109, 940,
	111, 940,
	112, 940,
	114, 940,
	115, 940,
	117, 940,
	120, 940,
	121, 940,
	122, 940,
	124, 940,
	126, 940,
	127, 940,
	129, 940,
	130, 940,
	131, 940,
	132, 940,
	133, 940,
	134, 940,
	135, 940,
	136, 940,
	137, 940,
	138, 940,
	139, 940,
	140, 940,
	141, 940,
	149, 940,
	150, 940,
	151, 940,
	152, 940,
	153, 940,
	154, 940,
	156, 940,
	158, 940,
	162, 940,
	163, 940,
	165, 940,
	166, 940,
	168, 940,
	169, 940,
	171, 940,
	172, 940,
	173, 940,
	174, 940,
	175, 940,
	176, 940,
	177, 940,
	178, 940,
	180, 940,
	181, 940,
	183, 940,
	184, 940,
	185, 940,
	186, 940,
	190, 940,
	191, 940,
	192, 940,
	195, 940,
	196, 940,
	197, 940,
	198, 940,
	199, 940,
	200, 940,
	201, 940,
	202, 940,
	204, 940,
	206, 940,
	208, 940,
	210, 940,
	211, 940,
	212, 940,
	214, 940,
	215, 940,
	218, 940,
	219, 940,
	220, 940,
	221, 940,
	222, 940,
	224, 940,
	225, 940,
	227, 940,
	228, 940,
	230, 940,
	231, 940,
	234, 940,
	235, 940,
	238, 940,
	239, 940,
	240, 940,
	241, 940,
	243, 940,
	244, 940,
	245, 940,
	246, 940,
	247, 940,
	248, 940,
	249, 940,
	250, 940,
	251, 940,
	252, 940,
	254, 940,
	255, 940,
	256, 940,
	257, 940,
	258, 940,
	260, 940,
	264, 940,
	266, 940,
	267, 940,
	268, 940,
	269, 940,
	270, 940,
	272, 940,
	273, 940,
	274, 940,
	275, 940,
	277, 940,
	278, 940,
	279, 940,
	282, 940,
	283, 940,
	284, 940,
	286, 940,
	288, 940,
	289, 940,
	290, 940,
	291, 940,
	292, 940,
	293, 940,
	294, 940,
	295, 940,
	296, 940,
	297, 940,
	299, 940,
	300, 940,
	301, 940,
	302, 940,
	303, 940,
	304, 940,
	305, 940,
	307, 940,
	309, 940,
	310, 940,
	311, 940,
	312, 940,
	313, 940,
	314, 940,
	315, 940,
	316, 940,
	317, 940,
	318, 940,
	320, 940,
	321, 940,
	322, 940,
	323, 940,
	324, 940,
	325, 940,
	327, 940,
	328, 940,
	329, 940,
	330, 940,
	331, 940,
	332, 940,
	333, 940,
	334, 940,
	336, 940,
	338, 940,
	339, 940,
	340, 940,
	341, 940,
	342, 940,
	343, 940,
	345, 940,
	346, 940,
	347, 940,
	348, 940,
	349, 940,
	350, 940,
	351, 940,
	352, 940,
	354, 940,
	355, 940,
	356, 940,
	357, 940,
	358, 940,
	359, 940,
	360, 940,
	361, 940,
	362, 940,
	363, 940,
	365, 940,
	366, 940,
	367, 940,
	368, 940,
	369, 940,
	371, 940,
	372, 940,
	373, 940,
	374, 940,
	375, 940,
	377, 940,
	378, 940,
	379, 940,
	380, 940,
	381, 940,
	382, 940,
	383, 940,
	384, 940,
	385, 940,
	386, 940,
	387, 940,
	388, 940,
	390, 940,
	391, 940,
	392, 940,
	394, 940,
	395, 940,
	396, 940,
	397, 940,
	398, 940,
	399, 940,
	400, 940,
	402, 940,
	403, 940,
	404, 940,
	405, 940,
	406, 940,
	408, 940,
	410, 940,
	411, 940,
	412, 940,
	413, 940,
	414, 940,
	416, 940,
	417, 940,
	418, 940,
	420, 940,
	421, 940,
	424, 940,
	425, 940,
	426, 940,
	427, 940,
	428, 940,
	429, 940,
	430, 940,
	432, 940,
	434, 940,
	435, 940,
	436, 940,
	437, 940,
	438, 940,
	439, 940,
	440, 940,
	442, 940,
	443, 940,
	444, 940,
	449, 940,
	450, 940,
	451, 940,
	452, 940,
	453, 940,
	454, 940,
	-2, 0,
	-1, 1355,
	1, 365,
	476, 365,
	478, 365,
	480, 365,
	-2, 1087,
	-1, 1358,
	4, 2107,
	11, 2107,
	12, 2107,
	14, 2107,
	15, 2107,
	16, 2107,
	17, 2107,
	18, 2107,
	19, 2107,
	21, 2107,
	22, 2107,
	23, 2107,
	24, 2107,
	25, 2107,
	27, 2107,
	30, 2107,
	31, 2107,
	33, 2107,
	35, 2107,
	38, 2107,
	39, 2107,
	40, 2107,
	41, 2107,
	42, 2107,
	43, 2107,
	44, 2107,
	45, 2107,
	46, 2107,
	47, 2107,
	48, 2107,
	49, 2107,
	50, 2107,
	52, 2107,
	53, 2107,
	54, 2107,
	55, 2107,
	56, 2107,
	57, 2107,
	58, 2107,
	61, 2107,
	62, 2107,
	63, 2107,
	64, 2107,
	66, 2107,
	67, 2107,
	68, 2107,
	69, 2107,
	72, 2107,
	73, 2107,
	74, 2107,
	75, 2107,
	76, 2107,
	77, 2107,
	78, 2107,
	80, 2107,
	81, 2107,
	82, 2107,
	83, 2107,
	85, 2107,
	86, 2107,
	87, 2107,
	88, 2107,
	89, 2107,
	91, 2107,
	92, 2107,
	93, 2107,
	94, 2107,
	102, 2107,
	103, 2107,
	104, 2107,
	105, 2107,
	106, 2107,
	107, 2107,
	108, 2107,
	109, 2107,
	111, 2107,
	112, 2107,
	114, 2107,
	115, 2107,
	117, 2107,
	120, 2107,
	121, 2107,
	122, 2107,
	124, 2107,
	126, 2107,
	127, 2107,
	129, 2107,
	130, 2107,
	131, 2107,
	132, 2107,
	133, 2107,
	134, 2107,
	135, 2107,
	136, 2107,
	137, 2107,
	138, 2107,
	139, 2107,
	140, 2107,
	141, 2107,
	145, 2107,
	146, 2107,
	147, 2107,
	148, 2107,
	149, 2107,
	150, 2107,
	151, 2107,
	152, 2107,
	153, 2107,
	154, 2107,
	155, 2107,
	156, 2107,
	158, 2107,
	161, 2107,
	162, 2107,
	163, 2107,
	165, 2107,
	166, 2107,
	168, 2107,
	169, 2107,
	171, 2107,
	172, 2107,
	173, 2107,
	174, 2107,
	175, 2107,
	176, 2107,
	177, 2107,
	178, 2107,
	179, 2107,
	180, 2107,
	181, 2107,
	182, 2107,
	183, 2107,
	184, 2107,
	185, 2107,
	186, 2107,
	187, 2107,
	188, 2107,
	190, 2107,
	191, 2107,
	192, 2107,
	194, 2107,
	195, 2107,
	196, 2107,
	197, 2107,
	198, 2107,
	199, 2107,
	200, 2107,
	201, 2107,
	202, 2107,
	204, 2107,
	206, 2107,
	207, 2107,
	208, 2107,
	209, 2107,
	210, 2107,
	211, 2107,
	212, 2107,
	213, 2107,
	214, 2107,
	215, 2107,
	216, 2107,
	217, 2107,
	218, 2107,
	219, 2107,
	220, 2107,
	221, 2107,
	222, 2107,
	224, 2107,
	225, 2107,
	227, 2107,
	228, 2107,
	229, 2107,
	230, 2107,
	231, 2107,
	232, 2107,
	234, 2107,
	235, 2107,
	238, 2107,
	239, 2107,
	240, 2107,
	241, 2107,
	242, 2107,
	243, 2107,
	244, 2107,
	245, 2107,
	246, 2107,
	247, 2107,
	248, 2107,
	249, 2107,
	250, 2107,
	251, 2107,
	252, 2107,
	253, 2107,
	254, 2107,
	255, 2107,
	256, 2107,
	257, 2107,
	258, 2107,
	260, 2107,
	263, 2107,
	264, 2107,
	266, 2107,
	267, 2107,
	268, 2107,
	269, 2107,
	270, 2107,
	272, 2107,
	273, 2107,
	274, 2107,
	277, 2107,
	278, 2107,
	279, 2107,
	280, 2107,
	282, 2107,
	283, 2107,
	284, 2107,
	286, 2107,
	288, 2107,
	289, 2107,
	290, 2107,
	291, 2107,
	292, 2107,
	293, 2107,
	294, 2107,
	295, 2107,
	296, 2107,
	297, 2107,
	299, 2107,
	300, 2107,
	301, 2107,
	302, 2107,
	303, 2107,
	304, 2107,
	305, 2107,
	307, 2107,
	309, 2107,
	310, 2107,
	311, 2107,
	312, 2107,
	313, 2107,
	314, 2107,
	315, 2107,
	316, 2107,
	317, 2107,
	318, 2107,
	320, 2107,
	321, 2107,
	322, 2107,
	323, 2107,
	324, 2107,
	325, 2107,
	326, 2107,
	327, 2107,
	328, 2107,
	329, 2107,
	330, 2107,
	331, 2107,
	332, 2107,
	333, 2107,
	334, 2107,
	336, 2107,
	337, 2107,
	338, 2107,
	339, 2107,
	340, 2107,
	341, 2107,
	342, 2107,
	343, 2107,
	344, 2107,
	345, 2107,
	346, 2107,
	347, 2107,
	348, 2107,
	349, 2107,
	350, 2107,
	351, 2107,
	352, 2107,
	354, 2107,
	355, 2107,
	356, 2107,
	357, 2107,
	358, 2107,
	359, 2107,
	360, 2107,
	361, 2107,
	362, 2107,
	363, 2107,
	365, 2107,
	366, 2107,
	367, 2107,
	368, 2107,
	369, 2107,
	370, 2107,
	371, 2107,
	372, 2107,
	373, 2107,
	374, 2107,
	375, 2107,
	377, 2107,
	378, 2107,
	379, 2107,
	380, 2107,
	381, 2107,
	382, 2107,
	383, 2107,
	384, 2107,
	385, 2107,
	386, 2107,
	387, 2107,
	388, 2107,
	390, 2107,
	391, 2107,
	392, 2107,
	394, 2107,
	395, 2107,
	396, 2107,
	397, 2107,
	398, 2107,
	399, 2107,
	400, 2107,
	402, 2107,
	403, 2107,
	404, 2107,
	405, 2107,
	406, 2107,
	408, 2107,
	410, 2107,
	411, 2107,
	412, 2107,
	413, 2107,
	414, 2107,
	416, 2107,
	417, 2107,
	418, 2107,
	420, 2107,
	421, 2107,
	424, 2107,
	425, 2107,
	426, 2107,
	427, 2107,
	428, 2107,
	429, 2107,
	430, 2107,
	432, 2107,
	434, 2107,
	435, 2107,
	436, 2107,
	437, 2107,
	438, 2107,
	439, 2107,
	440, 2107,
	442, 2107,
	443, 2107,
	444, 2107,
	449, 2107,
	450, 2107,
	451, 2107,
	452, 2107,
	453, 2107,
	454, 2107,
	455, 2107,
	456, 2107,
	458, 2107,
	459, 2107,
	460, 2107,
	461, 2107,
	462, 2107,
	463, 2107,
	465, 2107,
	466, 2107,
	467, 2107,
	468, 2107,
	469, 2107,
	470, 2107,
	471, 2107,
	472, 2107,
	473, 2107,
	475, 2107,
	478, 2107,
	479, 2107,
	481, 2107,
	482, 2107,
	-2, 0,
	-1, 1363,
	160, 2009,
	407, 2009,
	460, 2009,
	479, 2009,
	-2, 0,
	-1, 1395,
	311, 647,
	363, 647,
	-2, 0,
	-1, 1419,
	1, 642,
	476, 642,
	478, 642,
	480, 642,
	-2, 0,
	-1, 1420,
	1, 667,
	476, 667,
	478, 667,
	480, 667,
	-2, 0,
	-1, 1421,
	1, 649,
	476, 649,
	478, 649,
	480, 649,
	-2, 0,
	-1, 1423,
	1, 653,
	476, 653,
	478, 653,
	480, 653,
	-2, 0,
	-1, 1450,
	1, 2060,
	476, 2060,
	478, 2060,
	479, 2060,
	480, 2060,
	-2, 695,
	-1, 1451,
	1, 2006,
	476, 2006,
	478, 2006,
	479, 2006,
	480, 2006,
	-2, 696,
	-1, 1466,
	1, 997,
	480, 997,
	-2, 1002,
	-1, 1469,
	144, 1125,
	157, 1125,
	233, 1125,
	271, 1125,
	-2, 1068,
	-1, 1563,
	128, 1089,
	144, 1089,
	157, 1089,
	203, 1089,
	233, 1089,
	271, 1089,
	281, 1089,
	422, 1089,
	-2, 1496,
	-1, 1620,
	478, 1644,
	-2, 0,
	-1, 1654,
	128, 1089,
	144, 1089,
	157, 1089,
	203, 1089,
	233, 1089,
	271, 1089,
	281, 1089,
	422, 1089,
	-2, 1204,
	-1, 1713,
	477, 1325,
	-2, 1313,
	-1, 1757,
	1, 492,
	480, 492,
	-2, 1002,
	-1, 1959,
	1, 644,
	476, 644,
	478, 644,
	480, 644,
	-2, 0,
	-1, 1960,
	1, 669,
	476, 669,
	478, 669,
	480, 669,
	-2, 0,
	-1, 2032,
	342, 1150,
	343, 1150,
	-2, 1358,
	-1, 2063,
	14, 0,
	15, 0,
	16, 0,
	458, 0,
	459, 0,
	460, 0,
	-2, 1376,
	-1, 2064,
	14, 0,
	15, 0,
	16, 0,
	458, 0,
	459, 0,
	460, 0,
	-2, 1377,
	-1, 2065,
	86, 0,
	216, 0,
	217, 0,
	462, 0,
	463, 0,
	-2, 1378,
	-1, 2066,
	86, 0,
	216, 0,
	217, 0,
	462, 0,
	463, 0,
	-2, 1379,
	-1, 2067,
	86, 0,
	216, 0,
	217, 0,
	462, 0,
	463, 0,
	-2, 1380,
	-1, 2068,
	86, 0,
	216, 0,
	217, 0,
	462, 0,
	463, 0,
	-2, 1381,
	-1, 2069,
	86, 0,
	216, 0,
	217, 0,
	462, 0,
	463, 0,
	-2, 1382,
	-1, 2070,
	14, 0,
	15, 0,
	16, 0,
	458, 0,
	459, 0,
	460, 0,
	-2, 1383,
	-1, 2082,
	14, 0,
	15, 0,
	16, 0,
	458, 0,
	459, 0,
	460, 0,
	-2, 1395,
	-1, 2083,
	14, 0,
	15, 0,
	16, 0,
	458, 0,
	459, 0,
	460, 0,
	-2, 1396,
	-1, 2084,
	14, 0,
	15, 0,
	16, 0,
	458, 0,
	459, 0,
	460, 0,
	-2, 1397,
	-1, 2087,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 1402,
	-1, 2093,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 1406,
	-1, 2095,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 1414,
	-1, 2096,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 1415,
	-1, 2097,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 1416,
	-1, 2098,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 1417,
	-1, 2200,
	5, 1282,
	160, 1655,
	477, 1782,
	-2, 1773,
	-1, 2201,
	160, 1656,
	-2, 2064,
	-1, 2202,
	160, 1657,
	-2, 1922,
	-1, 2203,
	160, 1658,
	-2, 1841,
	-1, 2204,
	160, 1659,
	-2, 1878,
	-1, 2205,
	160, 1660,
	-2, 1920,
	-1, 2206,
	160, 1661,
	-2, 2000,
	-1, 2207,
	160, 1662,
	-2, 1479,
	-1, 2276,
	1, 1205,
	2, 1205,
	92, 1205,
	128, 1205,
	144, 1205,
	157, 1205,
	161, 1205,
	167, 1205,
	170, 1205,
	194, 1205,
	203, 1205,
	213, 1205,
	229, 1205,
	233, 1205,
	253, 1205,
	271, 1205,
	275, 1205,
	281, 1205,
	335, 1205,
	337, 1205,
	422, 1205,
	433, 1205,
	446, 1205,
	447, 1205,
	448, 1205,
	457, 1205,
	476, 1205,
	478, 1205,
	480, 1205,
	482, 1205,
	-2, 1204,
	-1, 2289,
	477, 1756,
	-2, 1768,
	-1, 2309,
	477, 1324,
	-2, 1314,
	-1, 2411,
	1, 919,
	476, 919,
	478, 919,
	480, 919,
	-2, 1113,
	-1, 2565,
	276, 1153,
	-2, 2098,
	-1, 2566,
	276, 1154,
	-2, 1989,
	-1, 2570,
	342, 1721,
	343, 1721,
	-2, 1477,
	-1, 2571,
	342, 1725,
	343, 1725,
	-2, 1478,
	-1, 2572,
	342, 1722,
	343, 1722,
	-2, 1477,
	-1, 2573,
	342, 1726,
	343, 1726,
	-2, 1478,
	-1, 2586,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 1404,
	-1, 2587,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 1408,
	-1, 2593,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 1410,
	-1, 2782,
	210, 1002,
	307, 1002,
	315, 1002,
	457, 1002,
	-2, 489,
	-1, 2881,
	1, 919,
	476, 919,
	478, 919,
	480, 919,
	-2, 1113,
	-1, 2971,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 1412,
	-1, 2978,
	207, 0,
	209, 0,
	263, 0,
	-2, 1431,
	-1, 3042,
	14, 0,
	15, 0,
	16, 0,
	458, 0,
	459, 0,
	460, 0,
	-2, 1460,
	-1, 3043,
	14, 0,
	15, 0,
	16, 0,
	458, 0,
	459, 0,
	460, 0,
	-2, 1461,
	-1, 3044,
	14, 0,
	15, 0,
	16, 0,
	458, 0,
	459, 0,
	460, 0,
	-2, 1462,
	-1, 3048,
	14, 0,
	15, 0,
	16, 0,
	458, 0,
	459, 0,
	460, 0,
	-2, 1466,
	-1, 3049,
	14, 0,
	15, 0,
	16, 0,
	458, 0,
	459, 0,
	460, 0,
	-2, 1467,
	-1, 3050,
	14, 0,
	15, 0,
	16, 0,
	458, 0,
	459, 0,
	460, 0,
	-2, 1468,
	-1, 3094,
	477, 1757,
	-2, 1769,
	-1, 3187,
	479, 2212,
	-2, 1046,
	-1, 3238,
	207, 0,
	209, 0,
	263, 0,
	-2, 1432,
	-1, 3241,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 1435,
	-1, 3242,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 1437,
	-1, 3407,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 1436,
	-1, 3408,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 1438,
	-1, 3418,
	207, 0,
	-2, 1469,
	-1, 3534,
	207, 0,
	-2, 1470,
	-1, 3668,
	43, 0,
	179, 0,
	232, 0,
	370, 0,
	455, 0,
	461, 0,
	-2, 2067,
}

const sqlPrivate = 57344

const sqlLast = 85209

var sqlAct = [...]int{

	928, 3450, 3477, 3801, 3447, 3343, 3555, 3667, 3678, 3570,
	2713, 3767, 3644, 3221, 2867, 3634, 3615, 3115, 1235, 3631,
	3679, 3436, 3680, 3721, 2465, 3484, 1048, 3538, 3367, 2714,
	3010, 858, 3396, 3372, 3179, 3493, 3356, 2799, 2050, 3666,
	873, 3300, 219, 1688, 219, 219, 2341, 219, 219, 219,
	219, 219, 950, 2896, 219, 2110, 2889, 1478, 3377, 219,
	2863, 849, 1219, 2232, 3160, 621, 1808, 589, 1350, 1849,
	2963, 3422, 3116, 1689, 2891, 2579, 1933, 2400, 2454, 2437,
	884, 219, 1923, 2736, 2756, 621, 3273, 1107, 2440, 2699,
	2428, 2719, 2498, 2728, 1660, 3220, 2497, 2500, 2508, 2449,
	2489, 2717, 2491, 2466, 2451, 1845, 1629, 1040, 2343, 1353,
	3065, 1200, 713, 1848, 1844, 2698, 2269, 1817, 2047, 1591,
	857, 147, 2123, 1571, 2614, 4, 2043, 3539, 2154, 900,
	2507, 2563, 1280, 1208, 1921, 2412, 2402, 3478, 1403, 2268,
	1840, 1833, 2438, 924, 1466, 1091, 2152, 2250, 2143, 1795,
	1793, 2762, 1783, 2107, 2014, 2271, 1630, 2031, 1334, 2012,
	2865, 1356, 2459, 1344, 1371, 1878, 2501, 2146, 1285, 1221,
	1031, 211, 622, 1649, 35, 557, 1639, 1034, 1080, 1554,
	1912, 1013, 219, 219, 1205, 2333, 1586, 154, 213, 2124,
	212, 2258, 623, 2240, 2196, 1480, 1479, 2013, 2377, 543,
	147, 573, 617, 565, 1370, 707, 1877, 583, 2015, 90,
	1030, 155, 689, 1898, 1646, 1354, 664, 1232, 1308, 1807,
	2036, 560, 2378, 885, 568, 40, 39, 37, 28, 1011,
	1485, 26, 2229, 24, 927, 762, 779, 1465, 1290, 1036,
	3079, 2610, 3080, 3819, 853, 1914, 1422, 2249, 1914, 1914,
	1253, 1088, 3805, 626, 3804, 629, 2249, 3783, 2249, 3781,
	3777, 3314, 2715, 3314, 1854, 3704, 3702, 3700, 3697, 3705,
	2249, 2249, 3698, 626, 3694, 629, 3069, 2906, 3695, 3689,
	848, 1028, 3664, 1854, 3663, 3662, 1854, 724, 1854, 1926,
	3659, 3658, 3653, 3651, 1926, 1926, 3314, 3314, 2905, 853,
	1493, 1494, 2780, 1526, 1527, 1528, 1536, 1537, 1538, 1088,
	3629, 3609, 2671, 2672, 3314, 2304, 2242, 3603, 3602, 1046,
	1524, 2249, 2249, 2249, 3597, 3596, 3590, 1496, 3314, 3314,
	1854, 1065, 1542, 3610, 1941, 836, 3536, 1014, 1014, 3517,
	2304, 1493, 1494, 1854, 3514, 3486, 3467, 3466, 3314, 3487,
	1854, 1854, 3458, 3457, 3520, 1060, 1854, 3314, 1495, 835,
	3428, 1524, 3069, 2241, 1854, 3409, 854, 1515, 1496, 2304,
	3394, 1926, 3385, 3341, 1926, 1512, 2920, 2249, 3332, 3313,
	3240, 3195, 2249, 3314, 2304, 2936, 3333, 1854, 3189, 843,
	2671, 2672, 2936, 3158, 3089, 2149, 3087, 3159, 3090, 1495,
	3088, 3072, 2994, 2990, 2935, 2249, 1854, 2249, 2936, 2927,
	2712, 2710, 1015, 2928, 2249, 2249, 2709, 2663, 2642, 2300,
	2249, 2249, 2643, 1252, 1043, 2625, 2266, 2623, 2487, 2249,
	1061, 2928, 1929, 2624, 1518, 1519, 1520, 1521, 2486, 2414,
	2391, 1812, 1929, 1926, 1501, 2249, 2317, 2303, 2298, 2332,
	2249, 2304, 2249, 1854, 2291, 2248, 2677, 2686, 1854, 2249,
	1928, 1017, 2150, 1018, 1929, 1763, 1913, 2920, 1533, 2434,
	2578, 1543, 1853, 2330, 187, 1247, 1523, 1525, 1625, 1231,
	3144, 2966, 2944, 1647, 1843, 1501, 2285, 2671, 2672, 926,
	2689, 2690, 2691, 2907, 1405, 2284, 1539, 2283, 1540, 2282,
	2613, 2281, 1493, 1494, 187, 1510, 1511, 1019, 1016, 842,
	841, 840, 2908, 3289, 189, 839, 838, 1523, 1525, 834,
	1915, 1531, 833, 1915, 1915, 2543, 1562, 832, 831, 1496,
	830, 1516, 829, 828, 2677, 827, 2151, 2148, 826, 825,
	824, 708, 823, 2687, 189, 822, 1562, 821, 219, 760,
	759, 758, 1541, 757, 2686, 756, 755, 754, 753, 188,
	1495, 752, 751, 2671, 2672, 750, 63, 711, 710, 181,
	749, 748, 1516, 747, 746, 745, 219, 182, 744, 743,
	64, 742, 741, 219, 740, 739, 738, 737, 736, 188,
	735, 734, 733, 722, 721, 680, 68, 187, 156, 2905,
	641, 187, 640, 632, 631, 630, 219, 1110, 219, 219,
	219, 1110, 219, 1224, 603, 1522, 595, 1224, 594, 1090,
	593, 2687, 3252, 1095, 1061, 219, 219, 577, 156, 73,
	209, 2677, 208, 1517, 207, 206, 3083, 189, 2241, 205,
	2153, 189, 204, 203, 2462, 2688, 1501, 202, 1246, 219,
	201, 1573, 200, 1061, 1084, 199, 198, 197, 2693, 1534,
	196, 78, 219, 195, 219, 194, 1224, 219, 219, 2479,
	219, 89, 1913, 2007, 1517, 79, 79, 86, 193, 1042,
	219, 192, 188, 2692, 191, 190, 188, 219, 2937, 1424,
	2759, 2636, 181, 2619, 1211, 2446, 181, 2418, 2292, 2275,
	182, 219, 219, 219, 182, 219, 1224, 2677, 2187, 1650,
	1224, 1594, 1791, 219, 1224, 219, 219, 1593, 2687, 2173,
	80, 156, 1216, 2688, 1224, 156, 1228, 3523, 1673, 1078,
	219, 1492, 2171, 1580, 1237, 1097, 1050, 1936, 1597, 3521,
	3685, 2147, 2671, 2672, 1532, 3665, 3577, 1507, 1508, 1514,
	1535, 1513, 1509, 3529, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 3386, 3446, 2313, 3164, 1224, 2681, 2673,
	2674, 2675, 2676, 2678, 2679, 1287, 1103, 3381, 1197, 1202,
	1203, 1227, 1594, 1215, 1574, 3293, 1572, 1578, 1593, 3272,
	1073, 219, 3271, 3259, 2687, 3258, 3257, 1234, 1497, 1498,
	1499, 1500, 1502, 1503, 63, 219, 3256, 1935, 2931, 1592,
	1240, 3251, 1245, 626, 1251, 629, 3248, 1233, 64, 3247,
	2688, 3157, 3103, 1365, 3102, 3101, 187, 3093, 3062, 3061,
	3060, 147, 147, 1228, 68, 81, 1359, 1361, 1291, 1291,
	3142, 2986, 1375, 2982, 2682, 2680, 2681, 2673, 2674, 2675,
	2676, 2678, 2679, 2754, 1295, 2706, 2697, 1573, 1493, 1494,
	1338, 1341, 2670, 2667, 2666, 2664, 189, 73, 2671, 2672,
	153, 84, 2649, 85, 2648, 2647, 1387, 1084, 1524, 1357,
	1084, 2644, 2447, 2641, 2635, 1496, 2677, 187, 2618, 1347,
	1311, 187, 187, 2611, 1369, 2488, 2688, 1470, 2276, 78,
	1241, 2136, 1374, 1492, 712, 1889, 1292, 123, 123, 89,
	1027, 188, 1491, 1859, 79, 86, 1495, 3814, 3776, 854,
	3775, 181, 3714, 1432, 3712, 3703, 1049, 189, 3012, 182,
	1857, 189, 189, 3569, 2683, 2684, 2685, 3566, 2396, 3563,
	3562, 2682, 2680, 2681, 2673, 2674, 2675, 2676, 2678, 2679,
	156, 3561, 3554, 2774, 3548, 124, 1423, 3518, 80, 3513,
	1469, 1499, 1500, 1502, 1503, 3512, 2113, 3500, 3540, 157,
	3163, 856, 188, 2687, 3497, 1464, 188, 188, 3463, 3380,
	3442, 3420, 181, 3404, 3403, 1561, 181, 181, 3391, 3390,
	182, 3360, 2119, 3288, 182, 182, 2751, 3270, 3210, 1380,
	3207, 3133, 1501, 3132, 3119, 1396, 3118, 3075, 2977, 1558,
	2938, 2461, 2677, 219, 2921, 156, 709, 2682, 2680, 2681,
	2673, 2674, 2675, 2676, 2678, 2679, 2883, 2847, 2826, 1493,
	1494, 2802, 2801, 1108, 1523, 1525, 2775, 1209, 2711, 2640,
	219, 1627, 2639, 2634, 2602, 836, 2445, 1475, 1467, 2427,
	219, 1110, 219, 219, 219, 219, 1496, 1598, 1474, 1595,
	621, 219, 219, 1587, 187, 621, 219, 1584, 1675, 835,
	2311, 219, 2310, 81, 1596, 2688, 2287, 1224, 2280, 1685,
	1471, 2247, 1488, 1489, 1752, 2169, 1672, 1495, 1628, 1516,
	1636, 1624, 1623, 2671, 2672, 1622, 2802, 1621, 1110, 2671,
	2672, 1620, 854, 1619, 189, 1618, 1617, 1616, 153, 84,
	1614, 85, 1613, 1612, 1611, 1610, 1715, 1609, 1608, 1607,
	1683, 2364, 1606, 1789, 1937, 1605, 1604, 1657, 1633, 1634,
	187, 1588, 1589, 1603, 1493, 1494, 1755, 1681, 1754, 1760,
	1602, 1601, 712, 1600, 1691, 1084, 123, 1575, 883, 188,
	1559, 1774, 1773, 1557, 1552, 1782, 1784, 1072, 147, 181,
	1063, 1496, 1056, 1046, 3363, 1046, 3290, 182, 1014, 3244,
	189, 3099, 3086, 1501, 3078, 2622, 2306, 3431, 3524, 2278,
	3292, 2671, 2672, 1680, 2186, 3098, 3335, 1574, 156, 2772,
	3522, 1517, 1495, 124, 1555, 2172, 1782, 1679, 1668, 2673,
	2674, 2675, 2676, 2678, 2679, 1782, 1092, 157, 2170, 3773,
	1658, 3766, 1664, 1655, 3564, 188, 2892, 3489, 3488, 2829,
	1757, 3384, 1088, 3334, 3081, 181, 1215, 2923, 1094, 1782,
	1224, 1224, 219, 182, 2922, 3494, 1677, 2677, 1110, 3445,
	1650, 1801, 1626, 2677, 1462, 854, 1648, 187, 626, 1812,
	629, 187, 1594, 626, 156, 629, 3131, 1777, 1593, 1579,
	1609, 1085, 1684, 1667, 1666, 1665, 1663, 1751, 1043, 1662,
	1043, 1661, 1830, 1652, 2382, 1832, 219, 1609, 1837, 3167,
	219, 1093, 1395, 1686, 1088, 219, 2149, 189, 1088, 1758,
	2646, 189, 2645, 2584, 2366, 1079, 1089, 819, 1850, 1769,
	2869, 1433, 2868, 219, 1582, 219, 1404, 219, 1934, 3485,
	1785, 219, 1780, 1775, 1505, 1497, 1498, 1499, 1500, 1502,
	1503, 3690, 187, 3677, 2687, 219, 1405, 2675, 2676, 2678,
	2679, 1846, 188, 3147, 3802, 3135, 188, 820, 1044, 2942,
	1228, 2715, 181, 1816, 3423, 219, 181, 1890, 3014, 1841,
	182, 1779, 2144, 2150, 182, 2309, 1615, 3686, 1086, 1590,
	2861, 1224, 189, 1224, 219, 1224, 1087, 1886, 219, 2628,
	1268, 156, 3699, 1224, 3696, 156, 1224, 219, 2901, 219,
	219, 3110, 1778, 3556, 1384, 1026, 868, 3368, 3627, 1224,
	1224, 1224, 3545, 219, 2805, 1851, 1882, 3126, 2495, 2458,
	219, 1895, 1887, 2854, 1234, 3737, 2958, 188, 3589, 621,
	219, 3738, 219, 2784, 219, 3687, 219, 181, 219, 3324,
	626, 2773, 629, 1266, 1233, 182, 2688, 2151, 2148, 1256,
	676, 1836, 219, 2318, 1993, 219, 3811, 219, 817, 3476,
	1818, 815, 2215, 1430, 813, 3469, 156, 811, 219, 1852,
	802, 1991, 808, 1094, 3149, 2336, 1885, 1892, 2336, 1431,
	1955, 1822, 3146, 3145, 1951, 3107, 1903, 3106, 2334, 219,
	2633, 2334, 2632, 219, 1932, 1770, 2631, 1676, 1869, 2630,
	1939, 1868, 1228, 2588, 1940, 1943, 1497, 1498, 1499, 1500,
	1502, 1503, 2398, 2390, 2389, 1267, 1110, 1085, 1952, 1953,
	1954, 2369, 2299, 1085, 2094, 1468, 1093, 1819, 1088, 1094,
	677, 1230, 2786, 1311, 1809, 1900, 1215, 1900, 2165, 1917,
	1901, 1897, 1919, 1042, 1792, 1042, 1905, 1906, 1924, 1429,
	1357, 2153, 1357, 2164, 1796, 2828, 2052, 2024, 1797, 1382,
	2011, 1796, 1867, 2943, 1805, 1797, 1715, 1715, 2680, 2681,
	2673, 2674, 2675, 2676, 2678, 2679, 2673, 2674, 2675, 2676,
	2678, 2679, 1093, 1945, 2455, 1810, 1811, 2048, 2049, 2403,
	854, 1073, 854, 3588, 1691, 1691, 1930, 1942, 1931, 1322,
	862, 1110, 1301, 1944, 1300, 1053, 805, 2022, 852, 1823,
	1299, 3402, 1298, 1806, 1086, 2005, 1503, 626, 2368, 629,
	1086, 1949, 1087, 217, 1377, 2001, 1796, 1262, 1087, 1275,
	1797, 1973, 2109, 2325, 2290, 1786, 1787, 2307, 1051, 2357,
	3683, 2576, 2125, 2126, 2020, 2561, 219, 1963, 3656, 601,
	2356, 1441, 2147, 1798, 3452, 2109, 2035, 1668, 2125, 2141,
	1798, 1902, 2949, 2679, 2006, 2386, 1800, 2948, 1110, 2022,
	219, 1824, 1825, 1800, 3336, 2004, 2379, 2380, 1959, 219,
	1820, 3122, 1958, 851, 1855, 2379, 2380, 2540, 2010, 1397,
	2008, 219, 2016, 836, 1110, 2023, 836, 836, 2195, 2009,
	2199, 2199, 2213, 1286, 2125, 3761, 2020, 2233, 2235, 2379,
	2380, 2144, 2239, 2117, 1821, 2153, 1461, 2039, 2140, 2115,
	2040, 2041, 1802, 1054, 1419, 1798, 1378, 3750, 1966, 1802,
	1960, 3749, 3785, 3003, 600, 2297, 2162, 2405, 1800, 1428,
	1284, 2163, 3320, 3737, 2166, 2263, 2167, 2168, 3454, 2575,
	3726, 1473, 2255, 2121, 2404, 2406, 2288, 2021, 2568, 2569,
	2003, 853, 679, 678, 1088, 1071, 2018, 1405, 1657, 3226,
	1088, 3684, 1405, 3225, 219, 2898, 1420, 1264, 3762, 2783,
	2840, 872, 1224, 3770, 2138, 3797, 845, 854, 797, 1286,
	1046, 2834, 1803, 2409, 1802, 674, 3557, 673, 854, 1393,
	731, 1014, 854, 604, 1826, 1829, 1046, 2254, 1814, 2785,
	847, 3134, 1110, 1967, 2335, 3401, 2019, 219, 2277, 2021,
	2345, 706, 2367, 1914, 1803, 219, 2850, 2237, 147, 2000,
	2224, 1803, 2208, 2301, 2770, 1383, 219, 2153, 2256, 1585,
	2262, 2899, 2267, 1803, 1760, 2273, 2274, 2245, 2246, 219,
	3682, 846, 1084, 555, 1655, 2260, 2261, 3311, 2822, 1551,
	3222, 3414, 1992, 219, 1110, 2789, 3764, 809, 1224, 1827,
	809, 1638, 3352, 809, 219, 219, 810, 550, 2019, 1990,
	1812, 809, 2599, 1596, 3113, 3746, 854, 3308, 798, 1321,
	3639, 1715, 1381, 3318, 797, 1043, 1803, 219, 3568, 797,
	219, 2898, 850, 2818, 2312, 609, 2597, 219, 2816, 2337,
	2135, 1043, 2372, 219, 2348, 2431, 847, 1261, 2259, 1691,
	2316, 847, 1812, 219, 3123, 219, 2638, 1052, 219, 3607,
	1794, 2820, 3309, 2410, 219, 1445, 602, 219, 599, 219,
	1642, 219, 2051, 1588, 1589, 2399, 219, 1224, 1224, 2315,
	1224, 3786, 3453, 2815, 2371, 219, 219, 2272, 219, 219,
	2387, 2319, 1224, 2546, 2002, 853, 3095, 1799, 614, 2469,
	219, 3707, 3362, 1645, 1799, 3725, 3216, 2411, 3708, 1066,
	3768, 3227, 2819, 2340, 2590, 2415, 219, 219, 219, 2960,
	611, 219, 1640, 219, 798, 2359, 219, 806, 219, 798,
	219, 1407, 2363, 2350, 2353, 2509, 2370, 2108, 1643, 2530,
	2559, 2531, 1962, 3763, 2594, 1379, 2483, 1965, 3319, 2388,
	1203, 219, 219, 219, 219, 219, 219, 2156, 219, 2595,
	1440, 2395, 1641, 2600, 1215, 3353, 799, 2511, 1483, 1799,
	2514, 2515, 2381, 2383, 2384, 2385, 1234, 1957, 2549, 2520,
	2521, 2522, 3311, 2420, 2730, 2422, 2482, 2425, 3769, 219,
	3798, 2347, 626, 2116, 629, 2435, 2416, 219, 2494, 147,
	2528, 1228, 2321, 3605, 2484, 3000, 2513, 3571, 2453, 2516,
	2471, 2517, 3308, 3304, 2464, 2323, 3301, 3305, 2105, 732,
	3771, 1803, 3681, 2460, 606, 2475, 2460, 2476, 1915, 2477,
	3736, 3299, 3734, 3606, 2551, 1642, 2553, 3303, 3585, 3499,
	3177, 2485, 2103, 2885, 610, 1472, 1644, 2324, 2496, 1357,
	2289, 3724, 2478, 2525, 3398, 1839, 2512, 3309, 3307, 1070,
	2481, 2336, 2322, 2532, 3162, 2534, 2091, 2536, 1645, 613,
	1876, 3310, 799, 1442, 2351, 1838, 844, 799, 800, 3001,
	1042, 551, 2548, 2544, 1635, 608, 219, 2257, 1064, 1215,
	3302, 3706, 1551, 1392, 1394, 3051, 1042, 1831, 2591, 1059,
	3268, 2527, 2545, 1643, 2621, 1834, 3223, 542, 2346, 2596,
	2533, 2538, 2535, 2567, 2537, 2558, 2038, 801, 2598, 2557,
	1482, 1813, 1771, 1215, 605, 1215, 1810, 1811, 2556, 2964,
	2035, 1482, 1044, 1477, 1044, 2562, 552, 3791, 2612, 2554,
	3460, 872, 2729, 2616, 2617, 872, 2763, 2577, 2620, 3459,
	2099, 3440, 3544, 3178, 1835, 3109, 3323, 2886, 2880, 3397,
	1195, 2100, 615, 3322, 1195, 2101, 1768, 2797, 2331, 2106,
	1443, 2793, 2439, 607, 2429, 3306, 553, 1896, 554, 1888,
	1881, 1863, 2547, 2153, 800, 2028, 2999, 3616, 2373, 800,
	2251, 2961, 1482, 1997, 1110, 2589, 1764, 3180, 3373, 3572,
	3228, 2426, 2089, 3483, 1408, 2092, 2722, 2723, 3304, 1481,
	1324, 1644, 3305, 219, 2738, 3481, 3441, 2808, 219, 2804,
	1481, 219, 2803, 801, 219, 219, 1110, 2582, 801, 1565,
	219, 2560, 1950, 1570, 728, 1766, 2433, 3077, 3052, 633,
	1421, 2627, 2727, 1110, 1444, 2708, 3053, 1483, 2744, 2726,
	219, 3269, 2296, 3307, 1767, 2088, 720, 2295, 1483, 2253,
	1293, 2724, 2294, 2293, 2252, 219, 3310, 3399, 2768, 851,
	3550, 3229, 1307, 854, 1305, 730, 3344, 1294, 3448, 2932,
	1894, 1481, 2413, 2779, 219, 219, 219, 3743, 2029, 3479,
	219, 3438, 3790, 219, 2739, 3619, 2352, 3624, 2781, 2732,
	2758, 219, 219, 3613, 219, 219, 219, 1715, 3274, 2734,
	3066, 2160, 2787, 3551, 3321, 2102, 1459, 2760, 219, 219,
	219, 3745, 1046, 3439, 2104, 2753, 1457, 219, 2771, 3701,
	2790, 2791, 2374, 2375, 3565, 1691, 2737, 1046, 1084, 2807,
	219, 219, 2812, 2813, 1715, 2757, 2750, 2806, 2716, 1110,
	2810, 3573, 2733, 3419, 2731, 1437, 2741, 2742, 3449, 1989,
	1224, 3620, 1435, 2745, 2746, 2798, 1418, 1046, 1416, 1110,
	3306, 1638, 1691, 3267, 219, 2700, 2743, 219, 219, 3552,
	2976, 219, 2794, 1414, 1224, 219, 1412, 219, 1410, 2776,
	2777, 2940, 2778, 2090, 1402, 1224, 2765, 2766, 2767, 2857,
	2748, 2831, 2749, 2665, 219, 2601, 2764, 219, 2833, 2703,
	2704, 2705, 219, 2782, 219, 2430, 2397, 2879, 2894, 2365,
	1801, 219, 2314, 1400, 2866, 1674, 2848, 1043, 1671, 1460,
	219, 219, 2788, 2701, 1303, 1372, 2740, 2957, 2956, 2856,
	1642, 1477, 1043, 726, 727, 1224, 1224, 1801, 634, 635,
	2542, 2841, 2541, 219, 219, 2519, 1680, 219, 2509, 2874,
	2821, 2017, 2827, 1999, 1970, 718, 719, 2509, 2903, 2852,
	2836, 2159, 1043, 1645, 1458, 1306, 2855, 1304, 729, 1841,
	2839, 3612, 2843, 1753, 1456, 2823, 2824, 1841, 2851, 2825,
	1215, 2849, 1640, 2875, 219, 1599, 1110, 219, 219, 1110,
	219, 2858, 1376, 2887, 2881, 1279, 2371, 3340, 1643, 807,
	2895, 1885, 2914, 1436, 1988, 2919, 3676, 2844, 2845, 2877,
	1434, 2846, 3722, 3331, 1417, 2842, 1415, 3371, 3297, 958,
	3176, 2837, 1641, 219, 3172, 2838, 3129, 3127, 1046, 3108,
	2939, 1413, 2900, 2878, 1411, 2870, 1409, 2480, 637, 636,
	2456, 2909, 1401, 2930, 2925, 2926, 2444, 147, 147, 2436,
	2423, 2934, 2917, 2918, 1927, 2915, 1925, 1920, 1918, 2902,
	1110, 215, 1916, 545, 546, 1907, 561, 545, 561, 571,
	576, 1399, 2955, 592, 1860, 1858, 2954, 1110, 598, 219,
	1847, 2893, 1302, 1842, 215, 1828, 2979, 1815, 1804, 638,
	639, 1215, 1215, 2996, 1195, 1715, 2911, 2912, 2913, 2890,
	717, 3506, 2916, 2580, 215, 1486, 1644, 1682, 3738, 3647,
	2721, 854, 2945, 3393, 2946, 1023, 2947, 2988, 2989, 2951,
	3388, 3387, 2510, 1691, 1790, 1258, 3508, 812, 814, 816,
	2336, 2336, 2355, 1043, 2959, 872, 3188, 1812, 1961, 1024,
	1346, 1195, 2747, 2334, 2354, 2962, 1454, 1455, 1715, 1715,
	1893, 1987, 1986, 3325, 3646, 1345, 1968, 1493, 1494, 2761,
	3559, 1215, 612, 1398, 1715, 1715, 3739, 1493, 1494, 2048,
	3021, 2952, 1042, 2984, 3531, 3275, 1691, 1691, 2376, 2358,
	1490, 3732, 1761, 2581, 1496, 2048, 3031, 1042, 2995, 219,
	219, 556, 1691, 1691, 3611, 1715, 2392, 1487, 2360, 3581,
	1110, 545, 545, 3006, 3017, 3015, 3011, 3578, 3018, 215,
	3082, 3063, 3016, 3171, 3020, 1495, 3059, 1042, 3002, 3004,
	3005, 219, 2394, 1691, 3028, 1495, 2362, 1346, 3055, 1044,
	3030, 1025, 1346, 3161, 2393, 3765, 665, 3092, 2361, 3104,
	567, 705, 2463, 2238, 1756, 1044, 1687, 2769, 3789, 2671,
	2672, 1493, 1494, 2328, 2329, 3056, 2326, 2327, 3073, 3074,
	3580, 1386, 1562, 3249, 2155, 3097, 2328, 1385, 2326, 219,
	2161, 3068, 147, 3070, 3071, 1439, 3245, 3064, 1438, 3096,
	3007, 1195, 1560, 3808, 3778, 2761, 3751, 3541, 3473, 3432,
	3430, 3359, 3291, 3213, 3206, 1224, 1046, 1046, 1224, 3194,
	3174, 3156, 3155, 3154, 3125, 3084, 3120, 2910, 2884, 2882,
	2524, 219, 2523, 2473, 2448, 2424, 2120, 1985, 1984, 219,
	1983, 1982, 1910, 1909, 1908, 1891, 219, 1871, 1870, 3085,
	3136, 1866, 1224, 1865, 1864, 1862, 3140, 3141, 3143, 1861,
	1453, 1452, 1333, 1332, 3100, 1331, 219, 1330, 3112, 1329,
	1328, 3148, 1327, 1326, 1325, 3190, 1323, 1318, 1317, 1715,
	1316, 219, 219, 1224, 1224, 1224, 3152, 219, 219, 219,
	1315, 1314, 219, 219, 1274, 3153, 219, 219, 2118, 1224,
	2798, 3168, 1273, 1272, 219, 1110, 1271, 1691, 1042, 1270,
	1269, 3185, 2469, 1263, 3182, 1565, 3184, 2371, 1257, 1255,
	1254, 1043, 1043, 1101, 3150, 3181, 1100, 1110, 3169, 1099,
	1098, 1069, 1209, 1068, 998, 1108, 905, 1762, 818, 804,
	3451, 1447, 77, 2509, 1265, 652, 72, 3124, 660, 3626,
	3170, 3128, 2814, 3130, 2401, 1969, 3173, 1406, 1971, 3183,
	2752, 2279, 3202, 3604, 3253, 3186, 2220, 3214, 3192, 3191,
	2637, 3537, 3413, 219, 2158, 1581, 74, 893, 980, 3351,
	3350, 3239, 3198, 3197, 3298, 3205, 3111, 2499, 3348, 3347,
	1715, 3208, 3199, 3200, 3201, 3212, 1046, 3209, 861, 3203,
	3204, 3230, 1113, 1772, 3231, 899, 2992, 3243, 3211, 1788,
	1885, 3224, 1781, 2308, 2198, 1695, 902, 1692, 1691, 1694,
	904, 903, 1693, 3008, 2032, 1583, 901, 1690, 2432, 2467,
	1310, 783, 1776, 2114, 2142, 2626, 219, 1576, 874, 895,
	2139, 1062, 1110, 2735, 1110, 2897, 3091, 3379, 2027, 3219,
	668, 2668, 2145, 1055, 3280, 2221, 3196, 2214, 2210, 1195,
	2457, 1463, 1553, 2468, 1096, 877, 2112, 219, 219, 219,
	1567, 2606, 2037, 2904, 2755, 3215, 2305, 3643, 3266, 2042,
	219, 1875, 1022, 1021, 1020, 3633, 3630, 1057, 219, 2864,
	219, 1765, 2320, 219, 219, 219, 3316, 1545, 3317, 2871,
	889, 1043, 1214, 2720, 2933, 1110, 219, 219, 1276, 597,
	1110, 3328, 3329, 3294, 3295, 1067, 3558, 3277, 3278, 3283,
	219, 3276, 592, 3282, 219, 1544, 2408, 3327, 3279, 3281,
	2407, 3547, 1083, 219, 3326, 3287, 1082, 1110, 219, 1081,
	2796, 3796, 1224, 3286, 1195, 215, 3094, 215, 215, 1206,
	3121, 215, 186, 3315, 2574, 1484, 1476, 183, 2757, 1046,
	2216, 3296, 185, 184, 215, 1236, 3345, 1046, 3355, 3138,
	19, 219, 1493, 1494, 18, 17, 1042, 1042, 94, 38,
	1046, 16, 122, 1110, 121, 3389, 120, 3342, 1260, 3392,
	119, 118, 1524, 117, 3338, 116, 111, 115, 114, 1496,
	113, 1278, 3378, 1283, 3375, 112, 215, 215, 110, 1206,
	3364, 1195, 3383, 1110, 3369, 3374, 3361, 3346, 3339, 215,
	109, 3366, 3376, 108, 107, 106, 1320, 105, 104, 103,
	1495, 102, 101, 100, 99, 98, 97, 1195, 96, 95,
	215, 215, 215, 588, 1206, 585, 52, 51, 93, 92,
	1110, 15, 592, 36, 215, 215, 13, 56, 219, 57,
	219, 12, 1110, 219, 1043, 31, 32, 3405, 3410, 717,
	3400, 219, 1043, 83, 3421, 82, 30, 14, 1885, 29,
	27, 10, 8, 1715, 7, 1043, 33, 1659, 11, 152,
	151, 150, 76, 149, 219, 148, 3354, 3434, 75, 3425,
	3435, 25, 9, 144, 3492, 3166, 3365, 71, 146, 3426,
	3427, 1691, 145, 219, 143, 142, 1501, 141, 69, 140,
	139, 219, 70, 138, 3382, 23, 3472, 5, 55, 219,
	215, 6, 1110, 3395, 3482, 1224, 3491, 1715, 2941, 3429,
	87, 219, 88, 34, 215, 67, 3456, 3455, 1523, 1525,
	3433, 1044, 66, 3496, 65, 1195, 1042, 22, 3462, 3507,
	54, 3470, 219, 219, 3474, 1691, 1044, 2866, 3515, 3516,
	3480, 21, 176, 175, 2220, 174, 173, 168, 167, 172,
	170, 3490, 169, 171, 219, 166, 178, 177, 180, 164,
	160, 3505, 3495, 3504, 159, 163, 1044, 3503, 165, 219,
	3510, 3378, 3509, 1516, 162, 161, 158, 1195, 3502, 3501,
	179, 62, 137, 136, 135, 134, 3553, 133, 132, 131,
	3543, 61, 20, 3511, 3535, 2, 1, 3527, 3528, 0,
	0, 3519, 0, 1715, 0, 3530, 3542, 0, 0, 0,
	0, 3560, 0, 0, 0, 3526, 0, 0, 219, 0,
	0, 0, 3567, 0, 2220, 2220, 0, 0, 0, 0,
	219, 1691, 0, 1224, 0, 0, 0, 3464, 3465, 219,
	3285, 0, 0, 1224, 1224, 3582, 0, 0, 3584, 1224,
	0, 3595, 0, 219, 3574, 219, 0, 0, 3579, 3575,
	3576, 0, 0, 0, 0, 0, 0, 0, 0, 3587,
	0, 3600, 0, 3601, 0, 1517, 3591, 0, 0, 219,
	2603, 2604, 0, 3599, 0, 219, 3621, 0, 219, 1042,
	1110, 3623, 3495, 3592, 0, 3586, 0, 1042, 0, 219,
	219, 0, 0, 3622, 1215, 3632, 3635, 3641, 0, 0,
	1042, 3593, 3594, 3648, 0, 0, 219, 3598, 0, 0,
	0, 0, 545, 0, 0, 3608, 3637, 3660, 3628, 0,
	0, 0, 0, 3661, 2220, 2220, 2220, 1044, 2564, 0,
	0, 219, 3652, 215, 0, 215, 3645, 0, 0, 215,
	3657, 3655, 0, 0, 0, 0, 3688, 3636, 0, 1236,
	3640, 1206, 215, 0, 215, 0, 3693, 0, 3674, 215,
	1236, 561, 3675, 0, 215, 1236, 3672, 3673, 0, 1108,
	592, 3709, 3691, 0, 0, 3713, 0, 219, 3711, 0,
	2694, 2695, 2696, 3719, 0, 0, 3718, 1504, 1505, 1497,
	1498, 1499, 1500, 1502, 1503, 3710, 3723, 219, 0, 3411,
	0, 3715, 0, 0, 0, 0, 0, 0, 2216, 2216,
	0, 0, 0, 0, 0, 0, 3729, 3730, 3731, 3741,
	0, 3735, 3733, 2469, 219, 0, 219, 0, 3740, 3632,
	0, 0, 3635, 3754, 3744, 3742, 3411, 0, 3748, 3756,
	3753, 3759, 3747, 0, 3752, 3760, 3758, 0, 2051, 0,
	3755, 0, 3757, 0, 0, 3716, 3717, 0, 0, 3720,
	0, 0, 1637, 0, 0, 0, 0, 0, 699, 3774,
	3772, 0, 3645, 3649, 0, 0, 3650, 0, 0, 3782,
	3780, 0, 3779, 3784, 0, 0, 0, 0, 0, 0,
	0, 681, 0, 3787, 0, 0, 0, 0, 0, 3793,
	0, 0, 0, 3799, 0, 3803, 0, 0, 3800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2216, 2216,
	2216, 0, 3807, 3806, 0, 0, 682, 3810, 0, 3809,
	0, 215, 3813, 3812, 0, 3815, 683, 3816, 0, 3818,
	0, 0, 3820, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 684, 0, 0, 0, 0, 0, 3794,
	3795, 0, 0, 0, 0, 0, 0, 1195, 2671, 2672,
	704, 2689, 2690, 2691, 0, 215, 0, 0, 0, 215,
	0, 0, 0, 0, 215, 0, 685, 3236, 0, 0,
	0, 0, 0, 0, 0, 1044, 1044, 0, 3817, 1195,
	0, 0, 215, 0, 215, 686, 215, 0, 0, 0,
	545, 0, 0, 0, 0, 0, 1195, 0, 0, 0,
	860, 0, 0, 0, 1911, 687, 0, 0, 688, 0,
	0, 0, 0, 614, 0, 2686, 0, 0, 0, 0,
	872, 0, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 872, 703, 0, 0, 0, 0,
	0, 0, 0, 592, 0, 2671, 2672, 717, 2689, 2690,
	2691, 0, 0, 0, 0, 0, 215, 0, 1206, 215,
	0, 0, 0, 0, 3235, 0, 0, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 2220, 2220, 0, 215,
	0, 0, 0, 0, 0, 0, 2051, 0, 215, 215,
	0, 215, 2677, 215, 0, 215, 0, 215, 0, 0,
	0, 0, 1195, 0, 0, 0, 0, 0, 0, 0,
	0, 1994, 2686, 0, 1995, 0, 1996, 0, 0, 0,
	0, 0, 1195, 0, 0, 0, 0, 215, 0, 0,
	0, 0, 2972, 2973, 0, 0, 690, 0, 0, 0,
	0, 0, 0, 0, 2692, 0, 0, 0, 576, 0,
	0, 0, 592, 0, 706, 1044, 691, 0, 0, 0,
	2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220,
	2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2687,
	2220, 0, 0, 0, 613, 0, 0, 0, 0, 2677,
	0, 692, 0, 0, 693, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 0, 0, 0, 694, 0, 0,
	0, 0, 0, 0, 0, 0, 3032, 3033, 3034, 3035,
	3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045,
	3046, 3047, 3048, 3049, 3050, 0, 3054, 0, 695, 702,
	0, 2692, 0, 0, 0, 0, 696, 0, 0, 1195,
	0, 0, 1195, 0, 0, 0, 0, 0, 0, 698,
	0, 0, 0, 0, 697, 0, 0, 0, 0, 0,
	2216, 2216, 0, 0, 0, 0, 2687, 615, 0, 0,
	0, 2688, 0, 0, 0, 0, 0, 0, 700, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1044, 0,
	215, 0, 0, 1195, 0, 0, 1044, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 215, 0, 545, 1044,
	1195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 0, 2216, 2216, 2216, 2216, 2216, 2216,
	2216, 2216, 2216, 2216, 2216, 2216, 2216, 2216, 2216, 2216,
	2216, 2216, 2216, 0, 2216, 0, 0, 0, 2688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2683, 2684, 2685, 0, 0,
	0, 0, 2682, 2680, 2681, 2673, 2674, 2675, 2676, 2678,
	2679, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 0, 63, 0, 1493, 1494, 0,
	860, 0, 0, 561, 860, 0, 0, 0, 0, 64,
	125, 0, 0, 0, 0, 0, 0, 1524, 0, 0,
	0, 0, 0, 0, 1496, 68, 0, 0, 0, 0,
	0, 0, 0, 1195, 58, 0, 0, 0, 0, 0,
	0, 42, 127, 0, 0, 0, 2344, 1238, 0, 1242,
	0, 1248, 0, 0, 215, 1495, 41, 0, 73, 0,
	0, 0, 2683, 2684, 2685, 215, 0, 0, 0, 2682,
	2680, 2681, 2673, 2674, 2675, 2676, 2678, 2679, 215, 44,
	59, 0, 0, 0, 0, 45, 0, 0, 0, 0,
	78, 0, 215, 128, 0, 0, 0, 1493, 1494, 43,
	89, 0, 0, 215, 2417, 79, 86, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1524, 0, 0,
	0, 0, 0, 0, 1496, 0, 1236, 0, 0, 215,
	0, 1368, 46, 0, 0, 0, 215, 0, 0, 1373,
	0, 1501, 2452, 0, 0, 0, 0, 0, 0, 80,
	0, 0, 2344, 0, 545, 1495, 0, 2472, 0, 0,
	0, 0, 0, 215, 1515, 0, 215, 0, 215, 0,
	215, 0, 0, 1523, 1525, 1206, 0, 0, 0, 0,
	0, 0, 0, 0, 2492, 717, 0, 2344, 2344, 0,
	0, 0, 0, 0, 0, 1425, 0, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 1206, 215, 1195, 0,
	1236, 0, 1236, 0, 0, 1206, 0, 1206, 1516, 1206,
	0, 1518, 1519, 1520, 1521, 0, 0, 0, 0, 0,
	1195, 1501, 0, 0, 0, 0, 0, 0, 0, 0,
	215, 215, 215, 215, 1206, 215, 0, 215, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 47, 1523, 1525, 0, 1546, 1547, 1548, 1549,
	1550, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 60, 0, 0, 215, 0, 50, 153,
	84, 0, 85, 0, 48, 1564, 0, 0, 129, 0,
	0, 1577, 0, 0, 49, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 2220, 0, 0, 0, 1516, 0,
	1517, 0, 0, 53, 0, 0, 0, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 1195, 0, 1195, 0, 0,
	0, 189, 0, 0, 0, 0, 2220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3418, 0, 0, 0, 124, 1236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	2671, 2672, 0, 2689, 2690, 2691, 188, 0, 0, 0,
	0, 0, 1522, 0, 0, 0, 181, 0, 1195, 2981,
	0, 0, 3443, 1195, 182, 0, 0, 0, 0, 0,
	1517, 0, 0, 1631, 1631, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 3, 0,
	1195, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503,
	0, 0, 0, 0, 0, 0, 0, 2686, 0, 0,
	0, 0, 0, 0, 0, 0, 2220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 860, 0, 0, 215, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 545, 2216, 0,
	545, 0, 0, 545, 545, 0, 1195, 0, 0, 545,
	0, 0, 3534, 0, 0, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 2677, 2220, 2220, 0, 0, 1236,
	0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503,
	2216, 0, 0, 1195, 1236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 2344, 2344, 215, 0, 0, 0, 2344,
	0, 0, 2800, 0, 0, 0, 2692, 0, 0, 0,
	2344, 2800, 0, 2344, 2800, 2800, 0, 0, 872, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 215, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2687, 0, 0, 0, 0, 0, 0, 0, 215,
	1206, 0, 0, 0, 0, 1195, 0, 1493, 1494, 0,
	1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1529, 1524, 0, 0,
	2216, 0, 0, 2860, 1496, 0, 2862, 2344, 0, 1542,
	215, 0, 0, 0, 215, 0, 1283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2452, 0, 1495, 1206, 0, 215, 0,
	0, 2344, 0, 545, 1515, 0, 0, 0, 0, 0,
	2344, 0, 1512, 0, 0, 0, 0, 0, 0, 215,
	215, 0, 0, 2688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 2452, 0, 0, 2452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 1519, 1520, 1521, 0, 0, 0, 0, 0,
	0, 1501, 0, 2950, 0, 0, 1206, 215, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 0, 0, 1543, 0,
	0, 0, 0, 1523, 1525, 0, 0, 0, 0, 0,
	0, 0, 215, 1195, 0, 0, 0, 0, 872, 0,
	0, 0, 0, 1539, 0, 1540, 0, 2683, 2684, 2685,
	0, 0, 1510, 1511, 2682, 2680, 2681, 2673, 2674, 2675,
	2676, 2678, 2679, 0, 0, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3013, 0,
	0, 0, 0, 0, 2026, 0, 2030, 0, 0, 1541,
	0, 0, 0, 2044, 0, 0, 0, 0, 0, 0,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 0, 2093, 0, 2095, 2096,
	2097, 2098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 0, 0, 0, 2122, 0,
	0, 0, 0, 0, 0, 0, 215, 215, 0, 0,
	1517, 1564, 1493, 1494, 0, 2137, 0, 0, 1536, 1537,
	1538, 0, 0, 0, 0, 0, 0, 0, 545, 545,
	0, 0, 1524, 0, 0, 0, 1534, 0, 0, 1496,
	0, 0, 0, 0, 1542, 2175, 2178, 2181, 2184, 0,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 0, 0, 0,
	1236, 2212, 0, 2223, 2225, 2230, 0, 0, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 0, 1512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1532, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509,
	0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503,
	0, 0, 0, 0, 0, 0, 1518, 1519, 1520, 1521,
	215, 0, 0, 0, 0, 0, 1501, 0, 215, 0,
	0, 0, 0, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1533, 0, 0, 1543, 0, 2344, 215, 0, 1523, 1525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2492, 2492, 0, 0, 0, 0, 717, 717, 2344, 0,
	0, 2452, 2452, 0, 0, 717, 2344, 1510, 1511, 0,
	0, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 959, 0, 0,
	2671, 2672, 0, 2689, 2690, 2691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1493, 1494, 0, 0, 0, 0, 216,
	0, 0, 3254, 0, 0, 0, 0, 0, 0, 0,
	2419, 0, 2421, 1524, 0, 0, 0, 0, 0, 0,
	1496, 0, 216, 0, 0, 0, 0, 2686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 1495, 0, 0, 0, 1517, 0, 0, 0, 215,
	1515, 0, 0, 0, 0, 1236, 0, 215, 1512, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	215, 1534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2344, 2344, 2344, 0,
	0, 0, 0, 0, 2677, 0, 0, 0, 0, 1236,
	0, 0, 0, 0, 0, 0, 0, 2344, 0, 2800,
	0, 0, 1236, 1236, 215, 0, 0, 1518, 1519, 1520,
	1521, 0, 0, 0, 0, 215, 215, 1501, 0, 0,
	2539, 0, 0, 0, 0, 0, 0, 2671, 2672, 2344,
	2689, 2690, 2691, 3357, 0, 0, 2692, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 1532, 215, 0, 1523,
	1525, 0, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497,
	1498, 1499, 1500, 1502, 1503, 0, 1546, 1547, 0, 0,
	0, 2687, 0, 0, 0, 0, 0, 0, 1510, 1511,
	1236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 1493, 1494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2586, 2587, 0, 0, 0, 0, 2593, 1524, 0,
	0, 0, 0, 2671, 2672, 1496, 2689, 2690, 2691, 0,
	0, 0, 0, 0, 0, 0, 2607, 2608, 0, 0,
	0, 0, 2137, 0, 0, 0, 0, 0, 0, 0,
	0, 2615, 0, 0, 0, 0, 1495, 2344, 0, 2800,
	0, 2677, 3437, 2688, 0, 1515, 0, 2629, 0, 0,
	215, 0, 0, 1512, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2686, 0, 2650, 592, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3437, 2692, 3234, 0, 0, 0, 0, 0,
	2344, 0, 0, 0, 0, 0, 0, 0, 3498, 0,
	0, 0, 1518, 1519, 1520, 1521, 0, 0, 0, 0,
	1236, 0, 1501, 0, 0, 0, 0, 0, 2687, 2230,
	2230, 2230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 215, 0, 1631, 0, 0, 2677, 0, 0,
	0, 0, 2725, 0, 1523, 1525, 0, 2683, 2684, 2685,
	0, 0, 0, 3013, 2682, 2680, 2681, 2673, 2674, 2675,
	2676, 2678, 2679, 0, 0, 0, 0, 0, 3437, 0,
	0, 0, 0, 1510, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1513, 1509, 0, 1506, 1504, 1505,
	1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 0, 1516,
	0, 0, 0, 925, 0, 0, 0, 0, 0, 860,
	0, 0, 0, 0, 0, 0, 0, 3357, 63, 0,
	2688, 0, 0, 860, 2687, 0, 0, 0, 0, 215,
	0, 0, 64, 0, 0, 0, 0, 0, 2800, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 68, 0,
	2817, 0, 1236, 0, 1236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3617, 0,
	0, 73, 0, 1522, 1236, 0, 0, 215, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 215, 2344,
	0, 1517, 0, 216, 1115, 216, 216, 0, 1115, 216,
	1115, 0, 0, 78, 1115, 215, 0, 0, 0, 0,
	0, 0, 216, 89, 0, 0, 2688, 0, 79, 86,
	0, 0, 0, 0, 2683, 2684, 2685, 0, 0, 0,
	3013, 2682, 2680, 2681, 2673, 2674, 2675, 2676, 2678, 2679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1115, 216, 216, 0, 0, 0, 0,
	0, 0, 80, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 2344, 0, 0, 0,
	0, 0, 0, 1045, 0, 0, 0, 0, 216, 216,
	216, 0, 0, 1115, 0, 0, 3437, 1115, 0, 0,
	0, 1115, 216, 216, 0, 0, 0, 0, 0, 1513,
	1509, 1115, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502,
	1503, 0, 0, 1236, 0, 2344, 0, 0, 0, 0,
	2683, 2684, 2685, 0, 0, 0, 0, 2682, 2680, 2681,
	2673, 2674, 2675, 2676, 2678, 2679, 0, 0, 0, 0,
	0, 0, 0, 0, 1115, 0, 0, 0, 2302, 0,
	0, 2044, 0, 0, 0, 0, 0, 2967, 2968, 0,
	0, 2971, 0, 0, 0, 2974, 0, 81, 216, 0,
	0, 0, 0, 0, 2978, 0, 0, 0, 0, 0,
	0, 0, 216, 2985, 0, 0, 2725, 1493, 1494, 0,
	1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0,
	0, 2997, 153, 84, 0, 85, 1529, 1524, 0, 0,
	0, 0, 0, 0, 1496, 0, 0, 0, 0, 1542,
	0, 0, 0, 0, 187, 1038, 0, 0, 0, 0,
	3022, 3023, 0, 3024, 3025, 3026, 712, 0, 3027, 0,
	123, 0, 3029, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 0, 0, 0, 0, 0,
	0, 0, 1512, 0, 189, 0, 0, 210, 0, 0,
	0, 0, 0, 3057, 3058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 63, 124, 3067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 157, 0, 3076, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 181,
	0, 1518, 1519, 1520, 1521, 0, 0, 182, 0, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 73,
	0, 0, 0, 0, 0, 1533, 0, 0, 1543, 3105,
	0, 0, 0, 1523, 1525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3114, 3117, 0, 0, 0, 0,
	0, 78, 0, 1539, 0, 1540, 0, 0, 0, 0,
	0, 89, 1510, 1511, 0, 0, 79, 86, 0, 0,
	3137, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1115, 0,
	216, 216, 216, 0, 0, 0, 0, 216, 0, 1541,
	80, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1115, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 1115, 0, 0, 0, 0,
	3193, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 214, 214, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3232, 3233, 0, 0, 1534, 0, 3237, 3238,
	214, 214, 0, 3241, 3242, 81, 0, 0, 0, 0,
	3246, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 3250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 214, 214, 3255, 0, 0,
	153, 84, 0, 85, 0, 0, 0, 0, 214, 214,
	0, 0, 0, 0, 0, 0, 0, 1115, 1115, 216,
	0, 0, 187, 0, 0, 1115, 0, 0, 0, 0,
	0, 0, 0, 0, 712, 0, 0, 0, 123, 0,
	0, 1532, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509,
	0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503,
	0, 0, 189, 216, 3262, 0, 0, 216, 3261, 0,
	0, 0, 216, 0, 63, 0, 1493, 1494, 0, 0,
	0, 0, 0, 0, 214, 124, 0, 0, 64, 0,
	216, 0, 216, 0, 216, 0, 1524, 0, 214, 157,
	0, 3117, 0, 1496, 68, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 216, 0, 1495, 0, 0, 73, 0, 0,
	0, 0, 0, 1515, 0, 0, 1362, 0, 1115, 0,
	1115, 1512, 1115, 0, 0, 0, 0, 0, 0, 0,
	1115, 0, 0, 1115, 216, 894, 91, 216, 0, 78,
	0, 0, 0, 0, 0, 0, 1115, 1115, 1115, 89,
	0, 0, 0, 0, 79, 86, 0, 216, 0, 0,
	3117, 0, 2975, 0, 0, 0, 216, 216, 0, 216,
	0, 216, 0, 216, 220, 216, 0, 0, 0, 0,
	1518, 1519, 1520, 1521, 0, 0, 0, 3406, 3407, 3408,
	1501, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 1105, 0, 3416, 3417, 91, 0, 1213, 0, 0,
	0, 0, 1523, 1525, 0, 0, 0, 3424, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 1511, 1115, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 3117, 0, 0,
	0, 0, 0, 0, 0, 3461, 0, 1516, 0, 0,
	0, 0, 0, 837, 3468, 1312, 0, 860, 0, 0,
	0, 0, 855, 3475, 0, 0, 0, 1653, 0, 1045,
	0, 0, 0, 214, 0, 0, 1337, 1337, 1337, 0,
	0, 0, 0, 81, 0, 0, 214, 1653, 214, 0,
	1366, 1367, 0, 627, 0, 1032, 0, 0, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1115, 0,
	0, 0, 0, 3117, 3117, 0, 0, 0, 153, 84,
	0, 85, 0, 0, 0, 0, 929, 0, 0, 0,
	0, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 1517,
	0, 0, 712, 0, 0, 0, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 3546, 1446, 0, 3549, 0,
	0, 0, 0, 0, 0, 1115, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 3117, 1493, 1494, 0,
	1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 216, 0,
	0, 1115, 0, 124, 0, 0, 1529, 1524, 0, 0,
	0, 0, 0, 0, 1496, 0, 0, 157, 0, 1542,
	3117, 0, 0, 3117, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 0, 0, 0, 0, 0,
	0, 0, 1512, 0, 1360, 627, 0, 1513, 1509, 0,
	1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 860, 0, 1115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 214, 0, 0, 0, 0, 214, 1115,
	0, 1518, 1519, 1520, 1521, 0, 0, 0, 3671, 3671,
	3671, 1501, 216, 0, 0, 0, 214, 0, 214, 0,
	214, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	3692, 0, 0, 0, 0, 1533, 216, 0, 1543, 0,
	0, 0, 0, 1523, 1525, 0, 0, 0, 0, 0,
	216, 1115, 0, 0, 0, 1115, 0, 0, 214, 0,
	0, 216, 0, 1539, 0, 1540, 0, 0, 0, 0,
	0, 3671, 1510, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 1531, 0,
	214, 0, 0, 214, 216, 1669, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1678, 0,
	1213, 0, 0, 214, 0, 3117, 0, 3117, 0, 1541,
	0, 216, 627, 214, 216, 214, 216, 214, 216, 214,
	0, 214, 0, 0, 1115, 1115, 1530, 1115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 3671, 3788,
	0, 0, 0, 216, 0, 216, 3792, 0, 0, 0,
	0, 0, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1517, 0, 0, 0, 0, 0, 0, 0, 216, 216,
	216, 216, 0, 216, 0, 216, 0, 0, 0, 0,
	0, 91, 0, 91, 0, 91, 1534, 0, 0, 0,
	0, 1111, 0, 0, 0, 1111, 0, 1225, 0, 0,
	0, 1225, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1225, 0, 0, 0, 0, 855, 91, 91, 0, 0,
	0, 0, 0, 0, 0, 91, 0, 0, 0, 0,
	0, 1532, 0, 91, 1507, 1508, 1514, 1535, 1513, 1509,
	0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503,
	1225, 1873, 2609, 0, 1225, 1880, 0, 0, 1225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1225, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 1312, 0,
	1899, 0, 1899, 0, 0, 0, 0, 91, 0, 0,
	1045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 1225, 0, 0, 0, 0, 0, 0, 0, 0,
	1213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1112, 0, 0, 0, 1112, 0, 1226,
	0, 0, 0, 1226, 0, 0, 0, 0, 0, 0,
	0, 0, 1880, 0, 0, 1947, 0, 0, 0, 0,
	0, 0, 0, 837, 0, 0, 0, 0, 0, 0,
	0, 1115, 0, 0, 0, 1964, 0, 761, 0, 797,
	0, 1556, 0, 0, 0, 1974, 0, 1976, 0, 1978,
	0, 1980, 1226, 1981, 0, 0, 0, 0, 1563, 0,
	0, 768, 1569, 1115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 780, 766, 0, 0, 0,
	1115, 0, 0, 1998, 0, 0, 0, 0, 0, 0,
	0, 0, 1226, 0, 0, 0, 1226, 0, 214, 0,
	1226, 0, 767, 0, 0, 0, 0, 770, 0, 214,
	1226, 803, 0, 0, 0, 0, 0, 0, 0, 777,
	778, 0, 214, 216, 0, 790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 798,
	772, 0, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 0, 1226, 0, 216, 216, 216, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 796, 0,
	0, 0, 0, 214, 0, 0, 0, 216, 0, 0,
	214, 0, 0, 0, 0, 0, 1115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1115, 0, 1651,
	773, 1654, 0, 91, 0, 0, 1115, 214, 765, 0,
	214, 0, 214, 0, 214, 0, 0, 0, 216, 0,
	0, 1115, 216, 0, 774, 775, 0, 0, 0, 0,
	0, 0, 1115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 782, 781, 0, 0,
	0, 0, 0, 0, 776, 1111, 0, 0, 0, 214,
	0, 214, 0, 0, 620, 0, 0, 216, 216, 620,
	802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1225, 1115, 1115, 0, 0, 0, 799, 0, 0,
	216, 0, 0, 0, 214, 214, 214, 214, 0, 214,
	0, 214, 1111, 0, 0, 0, 2286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 771,
	0, 0, 214, 1115, 0, 216, 1115, 216, 0, 0,
	214, 0, 0, 0, 769, 0, 0, 0, 794, 795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 792, 0, 0, 0, 0, 0,
	0, 788, 0, 0, 785, 0, 0, 0, 0, 0,
	786, 0, 0, 0, 0, 0, 0, 763, 0, 800,
	0, 0, 0, 0, 0, 0, 0, 1115, 0, 0,
	0, 0, 0, 0, 0, 764, 0, 0, 0, 0,
	0, 0, 0, 0, 1115, 787, 0, 0, 0, 784,
	0, 0, 0, 0, 1225, 1225, 0, 1112, 801, 0,
	0, 0, 1111, 0, 0, 0, 789, 0, 0, 0,
	0, 0, 0, 0, 1493, 1494, 0, 1526, 1527, 1528,
	1536, 1537, 1538, 1226, 0, 0, 0, 791, 0, 0,
	0, 0, 0, 0, 1524, 0, 0, 0, 1213, 0,
	0, 1496, 0, 0, 1112, 0, 1542, 0, 0, 793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 0, 0, 1880, 0, 0, 0, 0,
	0, 1515, 2443, 0, 0, 0, 855, 0, 855, 1512,
	0, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1115, 0, 2474,
	0, 1045, 1337, 0, 1337, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 1225, 0, 1225, 0, 1225,
	0, 0, 0, 0, 0, 0, 0, 1225, 0, 0,
	1225, 1653, 0, 0, 0, 2518, 0, 0, 1518, 1519,
	1520, 1521, 0, 1225, 1225, 1225, 0, 0, 1501, 0,
	0, 2526, 0, 2529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 620, 0, 0, 1226, 1226, 0, 0,
	0, 0, 1533, 0, 1112, 1543, 0, 0, 0, 214,
	1523, 1525, 0, 0, 0, 0, 2550, 1213, 2552, 1213,
	0, 2555, 1115, 0, 0, 1115, 0, 0, 0, 0,
	0, 837, 0, 0, 837, 837, 0, 0, 216, 1510,
	1511, 214, 214, 214, 0, 0, 216, 0, 0, 0,
	1653, 0, 0, 216, 1337, 1531, 0, 0, 0, 1115,
	0, 0, 2583, 214, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1111, 0, 0, 0, 0, 0, 0, 0, 0, 2111,
	1115, 1115, 1115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 855, 214, 0, 1115, 0, 214, 0,
	0, 216, 1115, 0, 1563, 0, 0, 0, 1563, 0,
	0, 0, 0, 0, 0, 0, 0, 1226, 0, 1226,
	0, 1226, 1045, 0, 1115, 0, 0, 0, 0, 1226,
	0, 0, 1226, 0, 0, 0, 0, 0, 0, 1522,
	0, 0, 0, 214, 214, 1226, 1226, 1226, 0, 0,
	0, 0, 0, 0, 0, 1111, 0, 1517, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1032, 0, 1493, 1494,
	0, 0, 0, 1534, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 0, 0, 0, 0, 0, 1524, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 214, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 1111, 91, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 1115,
	0, 1115, 0, 0, 0, 1515, 214, 0, 1111, 0,
	0, 0, 1112, 1512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1532, 0,
	0, 1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504,
	1505, 1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 0,
	0, 0, 216, 0, 2970, 0, 0, 0, 0, 0,
	0, 0, 1115, 216, 216, 0, 0, 1115, 0, 0,
	0, 0, 1518, 1519, 1520, 1521, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 1115, 216, 1225, 1112, 0, 1115,
	0, 2792, 0, 91, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 1525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1111, 0, 0, 0,
	0, 0, 91, 2830, 2832, 2443, 0, 0, 0, 0,
	1115, 0, 0, 1510, 1511, 0, 0, 0, 0, 0,
	1045, 1045, 0, 0, 91, 0, 91, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 0, 1516,
	1115, 0, 0, 0, 0, 0, 0, 0, 1111, 0,
	0, 0, 1225, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 91, 0, 2872, 91, 0, 0,
	2876, 0, 0, 0, 0, 0, 0, 1115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	0, 0, 0, 0, 91, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1213, 1213, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 0, 0, 0, 0,
	0, 1225, 1225, 0, 1225, 0, 0, 0, 2929, 0,
	0, 1517, 0, 0, 0, 0, 1225, 0, 1226, 0,
	0, 0, 91, 0, 0, 0, 0, 0, 0, 1115,
	0, 0, 1115, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 1112, 214,
	0, 0, 0, 2953, 0, 1213, 0, 0, 0, 216,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 1494, 2965, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 1226, 0, 1524, 214, 0, 0,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2111, 1513,
	1509, 0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502,
	1503, 0, 0, 0, 1495, 0, 0, 0, 0, 1563,
	0, 0, 0, 1515, 0, 0, 0, 216, 0, 0,
	1115, 1512, 0, 0, 0, 0, 0, 0, 0, 0,
	1115, 1115, 0, 0, 0, 0, 1115, 0, 0, 0,
	0, 0, 0, 1226, 1226, 0, 1226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 0,
	0, 0, 2969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 1115, 0, 0,
	1518, 1519, 1520, 1521, 0, 0, 216, 0, 0, 0,
	1501, 0, 0, 1045, 0, 0, 0, 0, 0, 0,
	0, 1045, 0, 216, 0, 0, 0, 0, 1493, 1494,
	0, 0, 0, 0, 1653, 0, 0, 0, 0, 0,
	0, 0, 1523, 1525, 0, 0, 0, 0, 1524, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 1032, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 1511, 1032, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 214,
	214, 0, 0, 0, 0, 1515, 0, 1516, 1111, 0,
	0, 0, 0, 1512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	1111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2592, 0, 0, 1111, 0, 0,
	0, 0, 0, 0, 0, 0, 3165, 0, 0, 0,
	0, 0, 1518, 1519, 1520, 1521, 0, 0, 0, 0,
	0, 3175, 1501, 0, 0, 0, 91, 91, 0, 0,
	91, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1517,
	0, 0, 0, 0, 1523, 1525, 0, 0, 91, 91,
	0, 0, 91, 0, 0, 0, 0, 0, 0, 0,
	1493, 1494, 0, 0, 0, 0, 0, 0, 0, 3217,
	0, 0, 0, 1510, 1511, 0, 0, 0, 0, 0,
	1524, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 0, 1111, 214, 0, 0, 0, 0, 1516,
	0, 0, 0, 0, 1225, 0, 0, 0, 0, 0,
	0, 0, 0, 1111, 1032, 0, 0, 855, 1495, 0,
	1112, 0, 0, 0, 0, 0, 0, 1515, 1225, 0,
	0, 0, 0, 0, 0, 1512, 0, 0, 0, 1225,
	0, 0, 91, 91, 0, 0, 0, 0, 0, 0,
	0, 0, 1112, 0, 0, 0, 0, 1513, 1509, 0,
	1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 1112,
	0, 0, 0, 0, 0, 0, 2585, 0, 0, 0,
	0, 0, 0, 1522, 0, 214, 214, 0, 0, 1225,
	1225, 0, 0, 0, 1518, 1519, 1520, 1521, 0, 0,
	0, 1517, 0, 0, 1501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1523, 1525, 0, 0,
	1111, 0, 0, 1111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3330, 0, 0, 0, 0, 1510, 1511, 0, 0, 0,
	0, 2443, 0, 0, 0, 1112, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 1226, 0, 0, 0,
	0, 1516, 0, 0, 0, 1112, 0, 0, 2443, 0,
	0, 0, 0, 3370, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 1111, 0, 0, 0, 0, 1513,
	1509, 1226, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502,
	1503, 1111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 91, 0, 214,
	0, 1226, 1226, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 1032, 1032, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1493, 1494, 0,
	1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0,
	0, 0, 1112, 0, 0, 1112, 1529, 1524, 0, 0,
	0, 0, 0, 0, 1496, 0, 3444, 0, 0, 1542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1111, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 1493, 1494, 1515, 1526, 1527, 1528, 1536, 1537,
	1538, 0, 1512, 0, 0, 0, 0, 0, 0, 0,
	0, 1529, 1524, 0, 0, 0, 1112, 0, 0, 1496,
	0, 0, 0, 0, 1542, 0, 0, 0, 0, 0,
	0, 1513, 1509, 1112, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 0, 0, 0, 0, 3525, 1213, 0,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	0, 1518, 1519, 1520, 1521, 0, 0, 1512, 0, 1225,
	0, 1501, 1225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1032, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 0, 0, 1543, 0,
	0, 0, 0, 1523, 1525, 0, 1225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 91, 0, 0, 0,
	0, 0, 0, 1539, 0, 1540, 1518, 1519, 1520, 1521,
	0, 0, 1510, 1511, 0, 0, 1501, 1225, 1225, 1225,
	0, 0, 0, 0, 0, 3583, 0, 0, 1531, 0,
	0, 0, 0, 1225, 0, 0, 1112, 0, 1516, 1111,
	1533, 0, 0, 1543, 0, 0, 0, 0, 1523, 1525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	0, 1111, 0, 0, 0, 0, 0, 0, 1539, 0,
	1540, 0, 0, 0, 0, 0, 1530, 1510, 1511, 0,
	0, 0, 0, 3625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1531, 3642, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 0, 0,
	0, 3654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 1541, 1032, 0, 0, 0, 0,
	0, 1226, 0, 1032, 1226, 0, 0, 0, 0, 0,
	1517, 1530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1534, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 1111, 0, 1111, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	1226, 1226, 0, 0, 0, 1517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 91, 0, 0,
	0, 1112, 0, 0, 0, 0, 0, 91, 0, 0,
	0, 1534, 0, 0, 0, 0, 0, 0, 0, 1111,
	0, 0, 0, 1112, 1111, 91, 0, 0, 0, 0,
	0, 1532, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509,
	0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503,
	0, 1111, 0, 0, 2659, 0, 1225, 0, 2660, 1493,
	1494, 0, 1526, 1527, 1528, 1536, 1537, 1538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1529, 1524,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 1542, 0, 0, 0, 0, 1532, 1111, 0, 1507,
	1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497,
	1498, 1499, 1500, 1502, 1503, 0, 0, 1495, 0, 2133,
	0, 0, 0, 2134, 0, 0, 1515, 1111, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 0, 1112, 0,
	1112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1111, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 1519, 1520, 1521, 0, 0, 0,
	0, 1112, 0, 1501, 0, 0, 1112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2111, 0, 0, 0, 0, 0, 0, 1533, 0, 0,
	1543, 0, 0, 1112, 0, 1523, 1525, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 1111, 0, 0, 1225,
	0, 0, 0, 0, 0, 1539, 0, 1540, 0, 0,
	0, 0, 0, 0, 1510, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	1531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 1541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 1225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 1225, 0,
	0, 0, 1517, 1225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 91, 0, 0, 91, 1534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1112, 0,
	0, 1226, 0, 0, 1111, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1532, 0, 0, 1507, 1508, 1514, 1535,
	1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499, 1500,
	1502, 1503, 0, 0, 0, 0, 0, 0, 0, 0,
	3260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	1226, 0, 0, 0, 0, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 1116, 229, 1117, 1118, 1119, 1112, 1120, 496, 1121,
	1122, 1123, 1124, 230, 232, 231, 233, 234, 497, 498,
	235, 499, 238, 236, 237, 500, 1125, 239, 240, 241,
	242, 243, 244, 245, 1126, 1127, 246, 501, 502, 503,
	1128, 247, 248, 504, 1129, 1114, 1130, 249, 250, 251,
	252, 253, 254, 0, 1131, 256, 257, 258, 255, 1132,
	259, 0, 260, 261, 262, 1133, 263, 982, 264, 265,
	1134, 1135, 1137, 1136, 1138, 1139, 1140, 266, 267, 268,
	269, 270, 271, 505, 506, 1141, 272, 273, 1142, 275,
	274, 1143, 276, 1144, 1145, 277, 278, 279, 1146, 280,
	1147, 281, 282, 1148, 283, 507, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 508, 509, 1149, 221, 1150,
	0, 0, 0, 0, 294, 295, 296, 510, 297, 298,
	0, 299, 1151, 300, 1152, 1153, 983, 301, 302, 1154,
	303, 511, 1155, 512, 304, 1156, 305, 306, 307, 308,
	513, 514, 515, 364, 985, 309, 310, 1157, 311, 312,
	313, 315, 0, 0, 222, 314, 316, 323, 1158, 984,
	317, 516, 319, 318, 320, 321, 322, 517, 1159, 518,
	1160, 324, 986, 519, 987, 325, 326, 327, 988, 328,
	329, 0, 0, 330, 331, 332, 333, 334, 1161, 336,
	335, 1162, 337, 520, 989, 338, 339, 990, 1163, 340,
	341, 1164, 1165, 342, 343, 344, 345, 0, 346, 347,
	349, 351, 348, 350, 352, 354, 355, 353, 991, 356,
	357, 360, 361, 359, 992, 358, 1166, 223, 993, 362,
	1167, 521, 363, 522, 365, 366, 1168, 367, 368, 369,
	1169, 1170, 371, 372, 373, 1171, 1172, 374, 375, 523,
	994, 376, 995, 524, 377, 370, 378, 379, 380, 381,
	382, 383, 384, 1173, 385, 386, 525, 387, 526, 388,
	389, 1174, 390, 0, 391, 392, 393, 394, 395, 396,
	397, 527, 398, 399, 1175, 400, 401, 402, 403, 404,
	405, 0, 407, 408, 409, 406, 410, 411, 412, 413,
	1176, 414, 996, 415, 416, 417, 418, 528, 419, 0,
	420, 424, 425, 426, 427, 428, 429, 430, 1177, 436,
	437, 431, 433, 434, 435, 432, 438, 439, 440, 1178,
	441, 421, 422, 442, 443, 997, 444, 445, 529, 446,
	447, 1179, 448, 449, 450, 451, 423, 452, 456, 457,
	453, 454, 455, 530, 1180, 459, 460, 458, 1181, 461,
	462, 463, 464, 465, 288, 466, 1182, 467, 531, 532,
	533, 534, 1183, 474, 1184, 468, 469, 535, 470, 536,
	1185, 471, 472, 473, 0, 475, 476, 1186, 1187, 477,
	478, 479, 481, 482, 480, 484, 1188, 485, 1189, 483,
	486, 487, 488, 537, 538, 539, 1190, 490, 489, 540,
	1191, 1192, 1193, 1194, 491, 492, 541, 493, 494, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1109, 0, 0, 0, 0, 0, 0, 0,
	2264, 0, 0, 0, 0, 0, 0, 0, 2265, 224,
	225, 226, 227, 228, 1116, 229, 1117, 1118, 1119, 0,
	1120, 496, 1121, 1122, 1123, 1124, 230, 232, 231, 233,
	234, 497, 498, 235, 499, 238, 236, 237, 500, 1125,
	239, 240, 241, 242, 243, 244, 245, 1126, 1127, 246,
	501, 502, 503, 1128, 247, 248, 504, 1129, 1114, 1130,
	249, 250, 251, 252, 253, 254, 0, 1131, 256, 257,
	258, 255, 1132, 259, 0, 260, 261, 262, 1133, 263,
	982, 264, 265, 1134, 1135, 1137, 1136, 1138, 1139, 1140,
	266, 267, 268, 269, 270, 271, 505, 506, 1141, 272,
	273, 1142, 275, 274, 1143, 276, 1144, 1145, 277, 278,
	279, 1146, 280, 1147, 281, 282, 1148, 283, 507, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 508, 509,
	1149, 221, 1150, 0, 0, 0, 0, 294, 295, 296,
	510, 297, 298, 0, 299, 1151, 300, 1152, 1153, 983,
	301, 302, 1154, 303, 511, 1155, 512, 304, 1156, 305,
	306, 307, 308, 513, 514, 515, 364, 985, 309, 310,
	1157, 311, 312, 313, 315, 0, 0, 222, 314, 316,
	323, 1158, 984, 317, 516, 319, 318, 320, 321, 322,
	517, 1159, 518, 1160, 324, 986, 519, 987, 325, 326,
	327, 988, 328, 329, 0, 0, 330, 331, 332, 333,
	334, 1161, 336, 335, 1162, 337, 520, 989, 338, 339,
	990, 1163, 340, 341, 1164, 1165, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 355,
	353, 991, 356, 357, 360, 361, 359, 992, 358, 1166,
	223, 993, 362, 1167, 521, 363, 522, 365, 366, 1168,
	367, 368, 369, 1169, 1170, 371, 372, 373, 1171, 1172,
	374, 375, 523, 994, 376, 995, 524, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 1173, 385, 386, 525,
	387, 526, 388, 389, 1174, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 527, 398, 399, 1175, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 1176, 414, 996, 415, 416, 417, 418,
	528, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 1177, 436, 437, 431, 433, 434, 435, 432, 438,
	439, 440, 1178, 441, 421, 422, 442, 443, 997, 444,
	445, 529, 446, 447, 1179, 448, 449, 450, 451, 423,
	452, 456, 457, 453, 454, 455, 530, 1180, 459, 460,
	458, 1181, 461, 462, 463, 464, 465, 288, 466, 1182,
	467, 531, 532, 533, 534, 1183, 474, 1184, 468, 469,
	535, 470, 536, 1185, 471, 472, 473, 0, 475, 476,
	1186, 1187, 477, 478, 479, 481, 482, 480, 484, 1188,
	485, 1189, 483, 486, 487, 488, 537, 538, 539, 1190,
	490, 489, 540, 1191, 1192, 1193, 1194, 491, 492, 541,
	493, 494, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1109, 0, 0, 0, 0, 2991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2993,
	224, 225, 226, 227, 228, 1116, 229, 1117, 1118, 1119,
	0, 1120, 496, 1121, 1122, 1123, 1124, 230, 232, 231,
	233, 234, 497, 498, 235, 499, 238, 236, 237, 500,
	1125, 239, 240, 241, 242, 243, 244, 245, 1126, 1127,
	246, 501, 502, 503, 1128, 247, 248, 504, 1129, 1114,
	1130, 249, 250, 251, 252, 253, 254, 0, 1131, 256,
	257, 258, 255, 1132, 259, 0, 260, 261, 262, 1133,
	263, 982, 264, 265, 1134, 1135, 1137, 1136, 1138, 1139,
	1140, 266, 267, 268, 269, 270, 271, 505, 506, 1141,
	272, 273, 1142, 275, 274, 1143, 276, 1144, 1145, 277,
	278, 279, 1146, 280, 1147, 281, 282, 1148, 283, 507,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 508,
	509, 1149, 221, 1150, 0, 0, 0, 0, 294, 295,
	296, 510, 297, 298, 0, 299, 1151, 300, 1152, 1153,
	983, 301, 302, 1154, 303, 511, 1155, 512, 304, 1156,
	305, 306, 307, 308, 513, 514, 515, 364, 985, 309,
	310, 1157, 311, 312, 313, 315, 0, 0, 222, 314,
	316, 323, 1158, 984, 317, 516, 319, 318, 320, 321,
	322, 517, 1159, 518, 1160, 324, 986, 519, 987, 325,
	326, 327, 988, 328, 329, 0, 0, 330, 331, 332,
	333, 334, 1161, 336, 335, 1162, 337, 520, 989, 338,
	339, 990, 1163, 340, 341, 1164, 1165, 342, 343, 344,
	345, 0, 346, 347, 349, 351, 348, 350, 352, 354,
	355, 353, 991, 356, 357, 360, 361, 359, 992, 358,
	1166, 223, 993, 362, 1167, 521, 363, 522, 365, 366,
	1168, 367, 368, 369, 1169, 1170, 371, 372, 373, 1171,
	1172, 374, 375, 523, 994, 376, 995, 524, 377, 370,
	378, 379, 380, 381, 382, 383, 384, 1173, 385, 386,
	525, 387, 526, 388, 389, 1174, 390, 0, 391, 392,
	393, 394, 395, 396, 397, 527, 398, 399, 1175, 400,
	401, 402, 403, 404, 405, 0, 407, 408, 409, 406,
	410, 411, 412, 413, 1176, 414, 996, 415, 416, 417,
	418, 528, 419, 0, 420, 424, 425, 426, 427, 428,
	429, 430, 1177, 436, 437, 431, 433, 434, 435, 432,
	438, 439, 440, 1178, 441, 421, 422, 442, 443, 997,
	444, 445, 529, 446, 447, 1179, 448, 449, 450, 451,
	423, 452, 456, 457, 453, 454, 455, 530, 1180, 459,
	460, 458, 1181, 461, 462, 463, 464, 465, 288, 466,
	1182, 467, 531, 532, 533, 534, 1183, 474, 1184, 468,
	469, 535, 470, 536, 1185, 471, 472, 473, 0, 475,
	476, 1186, 1187, 477, 478, 479, 481, 482, 480, 484,
	1188, 485, 1189, 483, 486, 487, 488, 537, 538, 539,
	1190, 490, 489, 540, 1191, 1192, 1193, 1194, 491, 492,
	541, 493, 494, 495, 0, 0, 0, 0, 1109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3284, 224, 225, 226, 227, 228,
	1116, 229, 1117, 1118, 1119, 0, 1120, 496, 1121, 1122,
	1123, 1124, 230, 232, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 1125, 239, 240, 241, 242,
	243, 244, 245, 1126, 1127, 246, 501, 502, 503, 1128,
	247, 248, 504, 1129, 1114, 1130, 249, 250, 251, 252,
	253, 254, 0, 1131, 256, 257, 258, 255, 1132, 259,
	0, 260, 261, 262, 1133, 263, 982, 264, 265, 1134,
	1135, 1137, 1136, 1138, 1139, 1140, 266, 267, 268, 269,
	270, 271, 505, 506, 1141, 272, 273, 1142, 275, 274,
	1143, 276, 1144, 1145, 277, 278, 279, 1146, 280, 1147,
	281, 282, 1148, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 508, 509, 1149, 221, 1150, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 1151, 300, 1152, 1153, 983, 301, 302, 1154, 303,
	511, 1155, 512, 304, 1156, 305, 306, 307, 308, 513,
	514, 515, 364, 985, 309, 310, 1157, 311, 312, 313,
	315, 0, 0, 222, 314, 316, 323, 1158, 984, 317,
	516, 319, 318, 320, 321, 322, 517, 1159, 518, 1160,
	324, 986, 519, 987, 325, 326, 327, 988, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 1161, 336, 335,
	1162, 337, 520, 989, 338, 339, 990, 1163, 340, 341,
	1164, 1165, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 353, 991, 356, 357,
	360, 361, 359, 992, 358, 1166, 223, 993, 362, 1167,
	521, 363, 522, 365, 366, 1168, 367, 368, 369, 1169,
	1170, 371, 372, 373, 1171, 1172, 374, 375, 523, 994,
	376, 995, 524, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 1173, 385, 386, 525, 387, 526, 388, 389,
	1174, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 1175, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 1176,
	414, 996, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 1177, 436, 437,
	431, 433, 434, 435, 432, 438, 439, 440, 1178, 441,
	421, 422, 442, 443, 997, 444, 445, 529, 446, 447,
	1179, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 530, 1180, 459, 460, 458, 1181, 461, 462,
	463, 464, 465, 288, 466, 1182, 467, 531, 532, 533,
	534, 1183, 474, 1184, 468, 469, 535, 470, 536, 1185,
	471, 472, 473, 0, 475, 476, 1186, 1187, 477, 478,
	479, 481, 482, 480, 484, 1188, 485, 1189, 483, 486,
	487, 488, 537, 538, 539, 1190, 490, 489, 540, 1191,
	1192, 1193, 1194, 491, 492, 541, 493, 494, 495, 1109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3412, 0, 224, 225, 226, 227,
	228, 1116, 229, 1117, 1118, 1119, 0, 1120, 496, 1121,
	1122, 1123, 1124, 230, 232, 231, 233, 234, 497, 498,
	235, 499, 238, 236, 237, 500, 1125, 239, 240, 241,
	242, 243, 244, 245, 1126, 1127, 246, 501, 502, 503,
	1128, 247, 248, 504, 1129, 1114, 1130, 249, 250, 251,
	252, 253, 254, 0, 1131, 256, 257, 258, 255, 1132,
	259, 0, 260, 261, 262, 1133, 263, 982, 264, 265,
	1134, 1135, 1137, 1136, 1138, 1139, 1140, 266, 267, 268,
	269, 270, 271, 505, 506, 1141, 272, 273, 1142, 275,
	274, 1143, 276, 1144, 1145, 277, 278, 279, 1146, 280,
	1147, 281, 282, 1148, 283, 507, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 508, 509, 1149, 221, 1150,
	0, 0, 0, 0, 294, 295, 296, 510, 297, 298,
	0, 299, 1151, 300, 1152, 1153, 983, 301, 302, 1154,
	303, 511, 1155, 512, 304, 1156, 305, 306, 307, 308,
	513, 514, 515, 364, 985, 309, 310, 1157, 311, 312,
	313, 315, 0, 0, 222, 314, 316, 323, 1158, 984,
	317, 516, 319, 318, 320, 321, 322, 517, 1159, 518,
	1160, 324, 986, 519, 987, 325, 326, 327, 988, 328,
	329, 0, 0, 330, 331, 332, 333, 334, 1161, 336,
	335, 1162, 337, 520, 989, 338, 339, 990, 1163, 340,
	341, 1164, 1165, 342, 343, 344, 345, 0, 346, 347,
	349, 351, 348, 350, 352, 354, 355, 353, 991, 356,
	357, 360, 361, 359, 992, 358, 1166, 223, 993, 362,
	1167, 521, 363, 522, 365, 366, 1168, 367, 368, 369,
	1169, 1170, 371, 372, 373, 1171, 1172, 374, 375, 523,
	994, 376, 995, 524, 377, 370, 378, 379, 380, 381,
	382, 383, 384, 1173, 385, 386, 525, 387, 526, 388,
	389, 1174, 390, 0, 391, 392, 393, 394, 395, 396,
	397, 527, 398, 399, 1175, 400, 401, 402, 403, 404,
	405, 0, 407, 408, 409, 406, 410, 411, 412, 413,
	1176, 414, 996, 415, 416, 417, 418, 528, 419, 0,
	420, 424, 425, 426, 427, 428, 429, 430, 1177, 436,
	437, 431, 433, 434, 435, 432, 438, 439, 440, 1178,
	441, 421, 422, 442, 443, 997, 444, 445, 529, 446,
	447, 1179, 448, 449, 450, 451, 423, 452, 456, 457,
	453, 454, 455, 530, 1180, 459, 460, 458, 1181, 461,
	462, 463, 464, 465, 288, 466, 1182, 467, 531, 532,
	533, 534, 1183, 474, 1184, 468, 469, 535, 470, 536,
	1185, 471, 472, 473, 0, 475, 476, 1186, 1187, 477,
	478, 479, 481, 482, 480, 484, 1188, 485, 1189, 483,
	486, 487, 488, 537, 538, 539, 1190, 490, 489, 540,
	1191, 1192, 1193, 1194, 491, 492, 541, 493, 494, 495,
	1109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3337, 0, 224, 225, 226,
	227, 228, 1116, 229, 1117, 1118, 1119, 0, 1120, 496,
	1121, 1122, 1123, 1124, 230, 232, 231, 233, 234, 497,
	498, 235, 499, 238, 236, 237, 500, 1125, 239, 240,
	241, 242, 243, 244, 245, 1126, 1127, 246, 501, 502,
	503, 1128, 247, 248, 504, 1129, 1114, 1130, 249, 250,
	251, 252, 253, 254, 0, 1131, 256, 257, 258, 255,
	1132, 259, 0, 260, 261, 262, 1133, 263, 982, 264,
	265, 1134, 1135, 1137, 1136, 1138, 1139, 1140, 266, 267,
	268, 269, 270, 271, 505, 506, 1141, 272, 273, 1142,
	275, 274, 1143, 276, 1144, 1145, 277, 278, 279, 1146,
	280, 1147, 281, 282, 1148, 283, 507, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 508, 509, 1149, 221,
	1150, 0, 0, 0, 0, 294, 295, 296, 510, 297,
	298, 0, 299, 1151, 300, 1152, 1153, 983, 301, 302,
	1154, 303, 511, 1155, 512, 304, 1156, 305, 306, 307,
	308, 513, 514, 515, 364, 985, 309, 310, 1157, 311,
	312, 313, 315, 0, 0, 222, 314, 316, 323, 1158,
	984, 317, 516, 319, 318, 320, 321, 322, 517, 1159,
	518, 1160, 324, 986, 519, 987, 325, 326, 327, 988,
	328, 329, 0, 0, 330, 331, 332, 333, 334, 1161,
	336, 335, 1162, 337, 520, 989, 338, 339, 990, 1163,
	340, 341, 1164, 1165, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 355, 353, 991,
	356, 357, 360, 361, 359, 992, 358, 1166, 223, 993,
	362, 1167, 521, 363, 522, 365, 366, 1168, 367, 368,
	369, 1169, 1170, 371, 372, 373, 1171, 1172, 374, 375,
	523, 994, 376, 995, 524, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 1173, 385, 386, 525, 387, 526,
	388, 389, 1174, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 527, 398, 399, 1175, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 1176, 414, 996, 415, 416, 417, 418, 528, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 1177,
	436, 437, 431, 433, 434, 435, 432, 438, 439, 440,
	1178, 441, 421, 422, 442, 443, 997, 444, 445, 529,
	446, 447, 1179, 448, 449, 450, 451, 423, 452, 456,
	457, 453, 454, 455, 530, 1180, 459, 460, 458, 1181,
	461, 462, 463, 464, 465, 288, 466, 1182, 467, 531,
	532, 533, 534, 1183, 474, 1184, 468, 469, 535, 470,
	536, 1185, 471, 472, 473, 0, 475, 476, 1186, 1187,
	477, 478, 479, 481, 482, 480, 484, 1188, 485, 1189,
	483, 486, 487, 488, 537, 538, 539, 1190, 490, 489,
	540, 1191, 1192, 1193, 1194, 491, 492, 541, 493, 494,
	495, 1109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3218, 0, 224, 225,
	226, 227, 228, 1116, 229, 1117, 1118, 1119, 0, 1120,
	496, 1121, 1122, 1123, 1124, 230, 232, 231, 233, 234,
	497, 498, 235, 499, 238, 236, 237, 500, 1125, 239,
	240, 241, 242, 243, 244, 245, 1126, 1127, 246, 501,
	502, 503, 1128, 247, 248, 504, 1129, 1114, 1130, 249,
	250, 251, 252, 253, 254, 0, 1131, 256, 257, 258,
	255, 1132, 259, 0, 260, 261, 262, 1133, 263, 982,
	264, 265, 1134, 1135, 1137, 1136, 1138, 1139, 1140, 266,
	267, 268, 269, 270, 271, 505, 506, 1141, 272, 273,
	1142, 275, 274, 1143, 276, 1144, 1145, 277, 278, 279,
	1146, 280, 1147, 281, 282, 1148, 283, 507, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 508, 509, 1149,
	221, 1150, 0, 0, 0, 0, 294, 295, 296, 510,
	297, 298, 0, 299, 1151, 300, 1152, 1153, 983, 301,
	302, 1154, 303, 511, 1155, 512, 304, 1156, 305, 306,
	307, 308, 513, 514, 515, 364, 985, 309, 310, 1157,
	311, 312, 313, 315, 0, 0, 222, 314, 316, 323,
	1158, 984, 317, 516, 319, 318, 320, 321, 322, 517,
	1159, 518, 1160, 324, 986, 519, 987, 325, 326, 327,
	988, 328, 329, 0, 0, 330, 331, 332, 333, 334,
	1161, 336, 335, 1162, 337, 520, 989, 338, 339, 990,
	1163, 340, 341, 1164, 1165, 342, 343, 344, 345, 0,
	346, 347, 349, 351, 348, 350, 352, 354, 355, 353,
	991, 356, 357, 360, 361, 359, 992, 358, 1166, 223,
	993, 362, 1167, 521, 363, 522, 365, 366, 1168, 367,
	368, 369, 1169, 1170, 371, 372, 373, 1171, 1172, 374,
	375, 523, 994, 376, 995, 524, 377, 370, 378, 379,
	380, 381, 382, 383, 384, 1173, 385, 386, 525, 387,
	526, 388, 389, 1174, 390, 0, 391, 392, 393, 394,
	395, 396, 397, 527, 398, 399, 1175, 400, 401, 402,
	403, 404, 405, 0, 407, 408, 409, 406, 410, 411,
	412, 413, 1176, 414, 996, 415, 416, 417, 418, 528,
	419, 0, 420, 424, 425, 426, 427, 428, 429, 430,
	1177, 436, 437, 431, 433, 434, 435, 432, 438, 439,
	440, 1178, 441, 421, 422, 442, 443, 997, 444, 445,
	529, 446, 447, 1179, 448, 449, 450, 451, 423, 452,
	456, 457, 453, 454, 455, 530, 1180, 459, 460, 458,
	1181, 461, 462, 463, 464, 465, 288, 466, 1182, 467,
	531, 532, 533, 534, 1183, 474, 1184, 468, 469, 535,
	470, 536, 1185, 471, 472, 473, 0, 475, 476, 1186,
	1187, 477, 478, 479, 481, 482, 480, 484, 1188, 485,
	1189, 483, 486, 487, 488, 537, 538, 539, 1190, 490,
	489, 540, 1191, 1192, 1193, 1194, 491, 492, 541, 493,
	494, 495, 1109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3009, 0, 224,
	225, 226, 227, 228, 1116, 229, 1117, 1118, 1119, 0,
	1120, 496, 1121, 1122, 1123, 1124, 230, 232, 231, 233,
	234, 497, 498, 235, 499, 238, 236, 237, 500, 1125,
	239, 240, 241, 242, 243, 244, 245, 1126, 1127, 246,
	501, 502, 503, 1128, 247, 248, 504, 1129, 1114, 1130,
	249, 250, 251, 252, 253, 254, 0, 1131, 256, 257,
	258, 255, 1132, 259, 0, 260, 261, 262, 1133, 263,
	982, 264, 265, 1134, 1135, 1137, 1136, 1138, 1139, 1140,
	266, 267, 268, 269, 270, 271, 505, 506, 1141, 272,
	273, 1142, 275, 274, 1143, 276, 1144, 1145, 277, 278,
	279, 1146, 280, 1147, 281, 282, 1148, 283, 507, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 508, 509,
	1149, 221, 1150, 0, 0, 0, 0, 294, 295, 296,
	510, 297, 298, 0, 299, 1151, 300, 1152, 1153, 983,
	301, 302, 1154, 303, 511, 1155, 512, 304, 1156, 305,
	306, 307, 308, 513, 514, 515, 364, 985, 309, 310,
	1157, 311, 312, 313, 315, 0, 0, 222, 314, 316,
	323, 1158, 984, 317, 516, 319, 318, 320, 321, 322,
	517, 1159, 518, 1160, 324, 986, 519, 987, 325, 326,
	327, 988, 328, 329, 0, 0, 330, 331, 332, 333,
	334, 1161, 336, 335, 1162, 337, 520, 989, 338, 339,
	990, 1163, 340, 341, 1164, 1165, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 355,
	353, 991, 356, 357, 360, 361, 359, 992, 358, 1166,
	223, 993, 362, 1167, 521, 363, 522, 365, 366, 1168,
	367, 368, 369, 1169, 1170, 371, 372, 373, 1171, 1172,
	374, 375, 523, 994, 376, 995, 524, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 1173, 385, 386, 525,
	387, 526, 388, 389, 1174, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 527, 398, 399, 1175, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 1176, 414, 996, 415, 416, 417, 418,
	528, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 1177, 436, 437, 431, 433, 434, 435, 432, 438,
	439, 440, 1178, 441, 421, 422, 442, 443, 997, 444,
	445, 529, 446, 447, 1179, 448, 449, 450, 451, 423,
	452, 456, 457, 453, 454, 455, 530, 1180, 459, 460,
	458, 1181, 461, 462, 463, 464, 465, 288, 466, 1182,
	467, 531, 532, 533, 534, 1183, 474, 1184, 468, 469,
	535, 470, 536, 1185, 471, 472, 473, 0, 475, 476,
	1186, 1187, 477, 478, 479, 481, 482, 480, 484, 1188,
	485, 1189, 483, 486, 487, 488, 537, 538, 539, 1190,
	490, 489, 540, 1191, 1192, 1193, 1194, 491, 492, 541,
	493, 494, 495, 1109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2859, 0,
	224, 225, 226, 227, 228, 1116, 229, 1117, 1118, 1119,
	0, 1120, 496, 1121, 1122, 1123, 1124, 230, 232, 231,
	233, 234, 497, 498, 235, 499, 238, 236, 237, 500,
	1125, 239, 240, 241, 242, 243, 244, 245, 1126, 1127,
	246, 501, 502, 503, 1128, 247, 248, 504, 1129, 1114,
	1130, 249, 250, 251, 252, 253, 254, 0, 1131, 256,
	257, 258, 255, 1132, 259, 0, 260, 261, 262, 1133,
	263, 982, 264, 265, 1134, 1135, 1137, 1136, 1138, 1139,
	1140, 266, 267, 268, 269, 270, 271, 505, 506, 1141,
	272, 273, 1142, 275, 274, 1143, 276, 1144, 1145, 277,
	278, 279, 1146, 280, 1147, 281, 282, 1148, 283, 507,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 508,
	509, 1149, 221, 1150, 0, 0, 0, 0, 294, 295,
	296, 510, 297, 298, 0, 299, 1151, 300, 1152, 1153,
	983, 301, 302, 1154, 303, 511, 1155, 512, 304, 1156,
	305, 306, 307, 308, 513, 514, 515, 364, 985, 309,
	310, 1157, 311, 312, 313, 315, 0, 0, 222, 314,
	316, 323, 1158, 984, 317, 516, 319, 318, 320, 321,
	322, 517, 1159, 518, 1160, 324, 986, 519, 987, 325,
	326, 327, 988, 328, 329, 0, 0, 330, 331, 332,
	333, 334, 1161, 336, 335, 1162, 337, 520, 989, 338,
	339, 990, 1163, 340, 341, 1164, 1165, 342, 343, 344,
	345, 0, 346, 347, 349, 351, 348, 350, 352, 354,
	355, 353, 991, 356, 357, 360, 361, 359, 992, 358,
	1166, 223, 993, 362, 1167, 521, 363, 522, 365, 366,
	1168, 367, 368, 369, 1169, 1170, 371, 372, 373, 1171,
	1172, 374, 375, 523, 994, 376, 995, 524, 377, 370,
	378, 379, 380, 381, 382, 383, 384, 1173, 385, 386,
	525, 387, 526, 388, 389, 1174, 390, 0, 391, 392,
	393, 394, 395, 396, 397, 527, 398, 399, 1175, 400,
	401, 402, 403, 404, 405, 0, 407, 408, 409, 406,
	410, 411, 412, 413, 1176, 414, 996, 415, 416, 417,
	418, 528, 419, 0, 420, 424, 425, 426, 427, 428,
	429, 430, 1177, 436, 437, 431, 433, 434, 435, 432,
	438, 439, 440, 1178, 441, 421, 422, 442, 443, 997,
	444, 445, 529, 446, 447, 1179, 448, 449, 450, 451,
	423, 452, 456, 457, 453, 454, 455, 530, 1180, 459,
	460, 458, 1181, 461, 462, 463, 464, 465, 288, 466,
	1182, 467, 531, 532, 533, 534, 1183, 474, 1184, 468,
	469, 535, 470, 536, 1185, 471, 472, 473, 0, 475,
	476, 1186, 1187, 477, 478, 479, 481, 482, 480, 484,
	1188, 485, 1189, 483, 486, 487, 488, 537, 538, 539,
	1190, 490, 489, 540, 1191, 1192, 1193, 1194, 491, 492,
	541, 493, 494, 495, 1109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2157,
	0, 224, 225, 226, 227, 228, 1116, 229, 1117, 1118,
	1119, 0, 1120, 496, 1121, 1122, 1123, 1124, 230, 232,
	231, 233, 234, 497, 498, 235, 499, 238, 236, 237,
	500, 1125, 239, 240, 241, 242, 243, 244, 245, 1126,
	1127, 246, 501, 502, 503, 1128, 247, 248, 504, 1129,
	1114, 1130, 249, 250, 251, 252, 253, 254, 0, 1131,
	256, 257, 258, 255, 1132, 259, 0, 260, 261, 262,
	1133, 263, 982, 264, 265, 1134, 1135, 1137, 1136, 1138,
	1139, 1140, 266, 267, 268, 269, 270, 271, 505, 506,
	1141, 272, 273, 1142, 275, 274, 1143, 276, 1144, 1145,
	277, 278, 279, 1146, 280, 1147, 281, 282, 1148, 283,
	507, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	508, 509, 1149, 221, 1150, 0, 0, 0, 0, 294,
	295, 296, 510, 297, 298, 0, 299, 1151, 300, 1152,
	1153, 983, 301, 302, 1154, 303, 511, 1155, 512, 304,
	1156, 305, 306, 307, 308, 513, 514, 515, 364, 985,
	309, 310, 1157, 311, 312, 313, 315, 0, 0, 222,
	314, 316, 323, 1158, 984, 317, 516, 319, 318, 320,
	321, 322, 517, 1159, 518, 1160, 324, 986, 519, 987,
	325, 326, 327, 988, 328, 329, 0, 0, 330, 331,
	332, 333, 334, 1161, 336, 335, 1162, 337, 520, 989,
	338, 339, 990, 1163, 340, 341, 1164, 1165, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 355, 353, 991, 356, 357, 360, 361, 359, 992,
	358, 1166, 223, 993, 362, 1167, 521, 363, 522, 365,
	366, 1168, 367, 368, 369, 1169, 1170, 371, 372, 373,
	1171, 1172, 374, 375, 523, 994, 376, 995, 524, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 1173, 385,
	386, 525, 387, 526, 388, 389, 1174, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 527, 398, 399, 1175,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 1176, 414, 996, 415, 416,
	417, 418, 528, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 1177, 436, 437, 431, 433, 434, 435,
	432, 438, 439, 440, 1178, 441, 421, 422, 442, 443,
	997, 444, 445, 529, 446, 447, 1179, 448, 449, 450,
	451, 423, 452, 456, 457, 453, 454, 455, 530, 1180,
	459, 460, 458, 1181, 461, 462, 463, 464, 465, 288,
	466, 1182, 467, 531, 532, 533, 534, 1183, 474, 1184,
	468, 469, 535, 470, 536, 1185, 471, 472, 473, 0,
	475, 476, 1186, 1187, 477, 478, 479, 481, 482, 480,
	484, 1188, 485, 1189, 483, 486, 487, 488, 537, 538,
	539, 1190, 490, 489, 540, 1191, 1192, 1193, 1194, 491,
	492, 541, 493, 494, 495, 1207, 0, 1109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 0, 0, 0, 224, 225, 226, 227, 228, 1116,
	229, 1117, 1118, 1119, 0, 1120, 496, 1121, 1122, 1123,
	1124, 230, 232, 231, 233, 234, 497, 498, 235, 499,
	238, 236, 237, 500, 1125, 239, 240, 241, 242, 243,
	244, 245, 1126, 1127, 246, 501, 502, 503, 1128, 247,
	248, 504, 1129, 1114, 1130, 249, 250, 251, 252, 253,
	254, 0, 1131, 256, 257, 258, 255, 1132, 259, 0,
	260, 261, 262, 1133, 263, 982, 264, 265, 1134, 1135,
	1137, 1136, 1138, 1139, 1140, 266, 267, 268, 269, 270,
	271, 505, 506, 1141, 272, 273, 1142, 275, 274, 1143,
	276, 1144, 1145, 277, 278, 279, 1146, 280, 1147, 281,
	282, 1148, 283, 507, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 508, 509, 1149, 221, 1150, 0, 0,
	0, 0, 294, 295, 296, 510, 297, 298, 0, 299,
	1151, 300, 1152, 1153, 983, 301, 302, 1154, 303, 511,
	1155, 512, 304, 1156, 305, 306, 307, 308, 513, 514,
	515, 364, 985, 309, 310, 1157, 311, 312, 313, 315,
	0, 0, 222, 314, 316, 323, 1158, 984, 317, 516,
	319, 318, 320, 321, 322, 517, 1159, 518, 1160, 324,
	986, 519, 987, 325, 326, 327, 988, 328, 329, 0,
	0, 330, 331, 332, 333, 334, 1161, 336, 335, 1162,
	337, 520, 989, 338, 339, 990, 1163, 340, 341, 1164,
	1165, 342, 343, 344, 345, 0, 346, 347, 349, 351,
	348, 350, 352, 354, 355, 353, 991, 356, 357, 360,
	361, 359, 992, 358, 1166, 223, 993, 362, 1167, 521,
	363, 522, 365, 366, 1168, 367, 368, 369, 1169, 1170,
	371, 372, 373, 1171, 1172, 374, 375, 523, 994, 376,
	995, 524, 377, 370, 378, 379, 380, 381, 382, 383,
	384, 1173, 385, 386, 525, 387, 526, 388, 389, 1174,
	390, 0, 391, 392, 393, 394, 395, 396, 397, 527,
	398, 399, 1175, 400, 401, 402, 403, 404, 405, 0,
	407, 408, 409, 406, 410, 411, 412, 413, 1176, 414,
	996, 415, 416, 417, 418, 528, 419, 0, 420, 424,
	425, 426, 427, 428, 429, 430, 1177, 436, 437, 431,
	433, 434, 435, 432, 438, 439, 440, 1178, 441, 421,
	422, 442, 443, 997, 444, 445, 529, 446, 447, 1179,
	448, 449, 450, 451, 423, 452, 456, 457, 453, 454,
	455, 530, 1180, 459, 460, 458, 1181, 461, 462, 463,
	464, 465, 288, 466, 1182, 467, 531, 532, 533, 534,
	1183, 474, 1184, 468, 469, 535, 470, 536, 1185, 471,
	472, 473, 0, 475, 476, 1186, 1187, 477, 478, 479,
	481, 482, 480, 484, 1188, 485, 1189, 483, 486, 487,
	488, 537, 538, 539, 1190, 490, 489, 540, 1191, 1192,
	1193, 1194, 491, 492, 541, 493, 494, 495, 1106, 0,
	1109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 1116, 229, 1117, 1118, 1119, 0, 1120, 496,
	1121, 1122, 1123, 1124, 230, 232, 231, 233, 234, 497,
	498, 235, 499, 238, 236, 237, 500, 1125, 239, 240,
	241, 242, 243, 244, 245, 1126, 1127, 246, 501, 502,
	503, 1128, 247, 248, 504, 1129, 1114, 1130, 249, 250,
	251, 252, 253, 254, 0, 1131, 256, 257, 258, 255,
	1132, 259, 0, 260, 261, 262, 1133, 263, 982, 264,
	265, 1134, 1135, 1137, 1136, 1138, 1139, 1140, 266, 267,
	268, 269, 270, 271, 505, 506, 1141, 272, 273, 1142,
	275, 274, 1143, 276, 1144, 1145, 277, 278, 279, 1146,
	280, 1147, 281, 282, 1148, 283, 507, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 508, 509, 1149, 221,
	1150, 0, 0, 0, 0, 294, 295, 296, 510, 297,
	298, 0, 299, 1151, 300, 1152, 1153, 983, 301, 302,
	1154, 303, 511, 1155, 512, 304, 1156, 305, 306, 307,
	308, 513, 514, 515, 364, 985, 309, 310, 1157, 311,
	312, 313, 315, 0, 0, 222, 314, 316, 323, 1158,
	984, 317, 516, 319, 318, 320, 321, 322, 517, 1159,
	518, 1160, 324, 986, 519, 987, 325, 326, 327, 988,
	328, 329, 0, 0, 330, 331, 332, 333, 334, 1161,
	336, 335, 1162, 337, 520, 989, 338, 339, 990, 1163,
	340, 341, 1164, 1165, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 355, 353, 991,
	356, 357, 360, 361, 359, 992, 358, 1166, 223, 993,
	362, 1167, 521, 363, 522, 365, 366, 1168, 367, 368,
	369, 1169, 1170, 371, 372, 373, 1171, 1172, 374, 375,
	523, 994, 376, 995, 524, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 1173, 385, 386, 525, 387, 526,
	388, 389, 1174, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 527, 398, 399, 1175, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 1176, 414, 996, 415, 416, 417, 418, 528, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 1177,
	436, 437, 431, 433, 434, 435, 432, 438, 439, 440,
	1178, 441, 421, 422, 442, 443, 997, 444, 445, 529,
	446, 447, 1179, 448, 449, 450, 451, 423, 452, 456,
	457, 453, 454, 455, 530, 1180, 459, 460, 458, 1181,
	461, 462, 463, 464, 465, 288, 466, 1182, 467, 531,
	532, 533, 534, 1183, 474, 1184, 468, 469, 535, 470,
	536, 1185, 471, 472, 473, 0, 475, 476, 1186, 1187,
	477, 478, 479, 481, 482, 480, 484, 1188, 485, 1189,
	483, 486, 487, 488, 537, 538, 539, 1190, 490, 489,
	540, 1191, 1192, 1193, 1194, 491, 492, 541, 493, 494,
	495, 1109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 1116, 229, 1117, 1118, 1119, 0, 1120,
	496, 1121, 1122, 1123, 1124, 230, 232, 231, 233, 234,
	497, 498, 235, 499, 238, 236, 237, 500, 1125, 239,
	240, 241, 242, 243, 244, 245, 1126, 1127, 246, 501,
	502, 503, 1128, 247, 248, 504, 1129, 1114, 1130, 249,
	250, 251, 252, 253, 254, 0, 1131, 256, 257, 258,
	255, 1132, 259, 0, 260, 261, 262, 1133, 263, 982,
	264, 265, 1134, 1135, 1137, 1136, 1138, 1139, 1140, 266,
	267, 268, 269, 270, 271, 505, 506, 1141, 272, 273,
	1142, 275, 274, 1143, 276, 1144, 1145, 277, 278, 279,
	1146, 280, 1147, 281, 282, 1148, 283, 507, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 508, 509, 1149,
	221, 1150, 0, 0, 0, 0, 294, 295, 296, 510,
	297, 298, 0, 299, 1151, 300, 1152, 1153, 983, 301,
	302, 1154, 303, 511, 1155, 512, 304, 1156, 305, 306,
	307, 308, 513, 514, 515, 364, 985, 309, 310, 1157,
	311, 312, 313, 315, 0, 0, 222, 314, 316, 323,
	1158, 984, 317, 516, 319, 318, 320, 321, 322, 517,
	1159, 518, 1160, 324, 986, 519, 987, 325, 326, 327,
	988, 328, 329, 0, 0, 330, 331, 332, 333, 334,
	1161, 336, 335, 1162, 337, 520, 989, 338, 339, 990,
	1163, 340, 341, 1164, 1165, 342, 343, 344, 345, 0,
	346, 347, 349, 351, 348, 350, 352, 354, 355, 353,
	991, 356, 357, 360, 361, 359, 992, 358, 1166, 223,
	993, 362, 1167, 521, 363, 522, 365, 366, 1168, 367,
	368, 369, 1169, 1170, 371, 372, 373, 1171, 1172, 374,
	375, 523, 994, 376, 995, 524, 377, 370, 378, 379,
	380, 381, 382, 383, 384, 1173, 385, 386, 525, 387,
	526, 388, 389, 1174, 390, 0, 391, 392, 393, 394,
	395, 396, 397, 527, 398, 399, 1175, 400, 401, 402,
	403, 404, 405, 0, 407, 408, 409, 406, 410, 411,
	412, 413, 1176, 414, 996, 415, 416, 417, 418, 528,
	419, 0, 420, 424, 425, 426, 427, 428, 429, 430,
	1177, 436, 437, 431, 433, 434, 435, 432, 438, 439,
	440, 1178, 441, 421, 422, 442, 443, 997, 444, 445,
	529, 446, 447, 1179, 448, 449, 450, 451, 423, 452,
	456, 457, 453, 454, 455, 530, 1180, 459, 460, 458,
	1181, 461, 462, 463, 464, 465, 288, 466, 1182, 467,
	531, 532, 533, 534, 1183, 474, 1184, 468, 469, 535,
	470, 536, 1185, 471, 472, 473, 0, 475, 476, 1186,
	1187, 477, 478, 479, 481, 482, 480, 484, 1188, 485,
	1189, 483, 486, 487, 488, 537, 538, 539, 1190, 490,
	489, 540, 1191, 1192, 1193, 1194, 491, 492, 541, 493,
	494, 495, 2132, 0, 922, 880, 881, 882, 878, 879,
	891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 2129, 229, 0, 0,
	0, 0, 0, 973, 896, 0, 0, 0, 230, 232,
	231, 233, 234, 497, 937, 916, 948, 238, 906, 947,
	946, 0, 239, 240, 908, 907, 243, 244, 245, 898,
	972, 246, 1009, 1010, 503, 0, 247, 248, 979, 0,
	960, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 982, 264, 265, 963, 961, 962, 969, 965,
	964, 968, 266, 267, 268, 269, 951, 271, 944, 943,
	869, 272, 273, 0, 275, 274, 0, 276, 2130, 0,
	277, 942, 279, 0, 280, 0, 281, 282, 0, 283,
	875, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	1000, 1001, 887, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 941, 939, 940, 0, 299, 0, 300, 0,
	0, 983, 301, 302, 0, 303, 1007, 0, 897, 304,
	0, 305, 306, 307, 308, 974, 975, 978, 364, 985,
	309, 310, 0, 311, 312, 313, 918, 0, 0, 222,
	314, 316, 323, 0, 984, 317, 930, 921, 932, 934,
	935, 936, 931, 0, 923, 0, 324, 986, 976, 987,
	325, 326, 327, 988, 956, 957, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 1008, 989,
	338, 339, 990, 0, 340, 341, 967, 966, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 910, 353, 991, 356, 357, 360, 361, 359, 992,
	358, 866, 223, 993, 362, 888, 977, 363, 945, 365,
	366, 0, 919, 368, 920, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 994, 376, 995, 1002, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 1003, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 938, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 996, 415, 416,
	417, 418, 876, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 0, 436, 437, 911, 912, 914, 915,
	432, 438, 439, 440, 970, 441, 421, 422, 442, 443,
	997, 444, 445, 933, 913, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 981, 453, 454, 455, 1004, 0,
	459, 460, 458, 0, 461, 462, 463, 464, 465, 288,
	909, 0, 467, 952, 953, 954, 955, 0, 474, 0,
	468, 469, 1005, 470, 1006, 886, 471, 472, 473, 0,
	475, 476, 0, 870, 477, 478, 479, 481, 482, 480,
	484, 971, 485, 0, 917, 486, 487, 488, 537, 949,
	999, 2128, 490, 489, 540, 0, 0, 0, 0, 491,
	492, 541, 493, 494, 495, 867, 0, 0, 0, 0,
	0, 865, 0, 0, 0, 0, 0, 0, 863, 864,
	2131, 0, 0, 0, 0, 0, 0, 892, 2127, 0,
	856, 890, 922, 880, 881, 882, 878, 879, 891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 973, 896, 0, 0, 0, 230, 232, 231, 233,
	234, 497, 937, 916, 948, 238, 906, 947, 946, 0,
	239, 240, 908, 907, 243, 244, 245, 898, 972, 246,
	1009, 1010, 503, 0, 247, 248, 979, 0, 960, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	982, 264, 265, 963, 961, 962, 969, 965, 964, 968,
	266, 267, 268, 269, 951, 271, 944, 943, 869, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 942,
	279, 0, 280, 0, 281, 282, 0, 283, 875, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 1000, 1001,
	887, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	941, 939, 940, 0, 299, 0, 300, 0, 0, 983,
	301, 302, 0, 303, 1007, 0, 897, 304, 0, 305,
	306, 307, 308, 974, 975, 978, 364, 985, 309, 310,
	0, 311, 312, 313, 918, 0, 0, 222, 314, 316,
	323, 0, 984, 317, 930, 921, 932, 934, 935, 936,
	931, 0, 923, 0, 324, 986, 976, 987, 325, 326,
	327, 988, 956, 957, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 1008, 989, 338, 339,
	990, 0, 340, 341, 967, 966, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 910,
	353, 991, 356, 357, 360, 361, 359, 992, 358, 866,
	223, 993, 362, 888, 977, 363, 945, 365, 366, 0,
	919, 368, 920, 0, 0, 371, 372, 373, 0, 0,
	374, 375, 523, 994, 376, 995, 1002, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 386, 1003,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 938, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 996, 415, 416, 417, 418,
	876, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 187, 436, 437, 911, 912, 914, 915, 432, 438,
	439, 440, 970, 441, 421, 422, 442, 443, 997, 444,
	445, 933, 913, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 981, 453, 454, 455, 1004, 0, 459, 460,
	458, 189, 461, 462, 463, 464, 465, 288, 909, 0,
	467, 952, 953, 954, 955, 0, 474, 0, 468, 469,
	1005, 470, 1006, 886, 471, 472, 473, 0, 475, 476,
	0, 870, 477, 478, 479, 481, 482, 480, 484, 971,
	485, 0, 917, 486, 487, 488, 1358, 949, 999, 0,
	490, 489, 540, 0, 0, 0, 181, 491, 492, 541,
	493, 494, 495, 867, 182, 0, 0, 0, 0, 865,
	0, 0, 0, 0, 0, 0, 863, 864, 922, 880,
	881, 882, 878, 879, 891, 1568, 1566, 0, 0, 890,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 973, 896, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 937, 916,
	948, 238, 906, 947, 946, 0, 239, 240, 908, 907,
	243, 244, 245, 898, 972, 246, 1009, 1010, 503, 0,
	247, 248, 979, 0, 960, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 982, 264, 265, 963,
	961, 962, 969, 965, 964, 968, 266, 267, 268, 269,
	951, 271, 944, 943, 869, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 942, 279, 0, 280, 0,
	281, 282, 0, 283, 875, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 1000, 1001, 887, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 941, 939, 940, 0,
	299, 0, 300, 0, 0, 983, 301, 302, 0, 303,
	1007, 0, 897, 304, 0, 305, 306, 307, 308, 974,
	975, 978, 364, 985, 309, 310, 0, 311, 312, 313,
	918, 0, 0, 222, 314, 316, 323, 0, 984, 317,
	930, 921, 932, 934, 935, 936, 931, 0, 923, 0,
	324, 986, 976, 987, 325, 326, 327, 988, 956, 957,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 1008, 989, 338, 339, 990, 0, 340, 341,
	967, 966, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 910, 353, 991, 356, 357,
	360, 361, 359, 992, 358, 866, 223, 993, 362, 888,
	977, 363, 945, 365, 366, 0, 919, 368, 920, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 994,
	376, 995, 1002, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 1003, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	938, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 996, 415, 416, 417, 418, 876, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 187, 436, 437,
	911, 912, 914, 915, 432, 438, 439, 440, 970, 441,
	421, 422, 442, 443, 997, 444, 445, 933, 913, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 981, 453,
	454, 455, 1004, 0, 459, 460, 458, 189, 461, 462,
	463, 464, 465, 288, 909, 0, 467, 952, 953, 954,
	955, 0, 474, 0, 468, 469, 1005, 470, 1006, 886,
	471, 472, 473, 0, 475, 476, 0, 870, 477, 478,
	479, 481, 482, 480, 484, 971, 485, 0, 917, 486,
	487, 488, 1358, 949, 999, 0, 490, 489, 540, 0,
	0, 0, 181, 491, 492, 541, 493, 494, 495, 867,
	182, 0, 0, 0, 0, 865, 0, 0, 0, 0,
	0, 0, 863, 864, 922, 880, 881, 882, 878, 879,
	891, 1568, 2605, 0, 0, 890, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 973, 896, 0, 0, 0, 230, 232,
	231, 233, 234, 497, 937, 916, 948, 238, 906, 947,
	946, 0, 239, 240, 908, 907, 243, 244, 245, 898,
	972, 246, 1009, 1010, 503, 0, 247, 248, 979, 0,
	960, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 982, 264, 265, 963, 961, 962, 969, 965,
	964, 968, 266, 267, 268, 269, 951, 271, 944, 943,
	869, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 942, 279, 0, 280, 0, 281, 282, 0, 283,
	875, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	1000, 1001, 887, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 941, 939, 940, 0, 299, 0, 300, 0,
	0, 983, 301, 302, 0, 303, 1007, 0, 897, 304,
	0, 305, 306, 307, 308, 974, 975, 978, 364, 985,
	309, 310, 0, 311, 312, 313, 918, 0, 0, 222,
	314, 316, 323, 0, 984, 317, 930, 921, 932, 934,
	935, 936, 931, 0, 923, 0, 324, 986, 976, 987,
	325, 326, 327, 988, 956, 957, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 1008, 989,
	338, 339, 990, 0, 340, 341, 967, 966, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 910, 353, 991, 356, 357, 360, 361, 359, 992,
	358, 866, 223, 993, 362, 888, 977, 363, 945, 365,
	366, 0, 919, 368, 920, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 994, 376, 995, 1002, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 1003, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 938, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 996, 415, 416,
	417, 418, 876, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 187, 436, 437, 911, 912, 914, 915,
	432, 438, 439, 440, 970, 441, 421, 422, 442, 443,
	997, 444, 445, 933, 913, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 981, 453, 454, 455, 1004, 0,
	459, 460, 458, 189, 461, 462, 463, 464, 465, 288,
	909, 0, 467, 952, 953, 954, 955, 0, 474, 0,
	468, 469, 1005, 470, 1006, 886, 471, 472, 473, 0,
	475, 476, 0, 870, 477, 478, 479, 481, 482, 480,
	484, 971, 485, 0, 917, 486, 487, 488, 1358, 949,
	999, 0, 490, 489, 540, 0, 0, 0, 181, 491,
	492, 541, 493, 494, 495, 867, 182, 0, 0, 0,
	0, 865, 0, 0, 0, 0, 0, 0, 863, 864,
	922, 880, 881, 882, 878, 879, 891, 1568, 1566, 0,
	0, 890, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 973,
	896, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	937, 916, 948, 238, 906, 947, 946, 2226, 239, 240,
	908, 907, 243, 244, 245, 898, 972, 246, 1009, 1010,
	503, 0, 247, 248, 979, 0, 960, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 982, 264,
	265, 963, 961, 962, 969, 965, 964, 968, 266, 267,
	268, 269, 951, 271, 944, 943, 869, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 942, 279, 0,
	280, 0, 281, 282, 0, 283, 875, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1000, 1001, 887, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 941, 939,
	940, 0, 299, 0, 300, 0, 2231, 983, 301, 302,
	0, 303, 1007, 0, 897, 304, 0, 305, 306, 307,
	308, 974, 975, 978, 364, 985, 309, 310, 0, 311,
	312, 313, 918, 0, 0, 222, 314, 316, 323, 0,
	984, 317, 930, 921, 932, 934, 935, 936, 931, 0,
	923, 0, 324, 986, 976, 987, 325, 326, 327, 988,
	956, 957, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 2227, 337, 1008, 989, 338, 339, 990, 0,
	340, 341, 967, 966, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 910, 353, 991,
	356, 357, 360, 361, 359, 992, 358, 866, 223, 993,
	362, 888, 977, 363, 945, 365, 366, 0, 919, 368,
	920, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 994, 376, 995, 1002, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 1003, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 938, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 996, 415, 416, 417, 418, 876, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 911, 912, 914, 915, 432, 438, 439, 440,
	970, 441, 421, 422, 442, 443, 997, 444, 445, 933,
	913, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	981, 453, 454, 455, 1004, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 909, 0, 467, 952,
	953, 954, 955, 0, 474, 2228, 468, 469, 1005, 470,
	1006, 886, 471, 472, 473, 0, 475, 476, 0, 870,
	477, 478, 479, 481, 482, 480, 484, 971, 485, 0,
	917, 486, 487, 488, 537, 949, 999, 0, 490, 489,
	540, 0, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 867, 0, 0, 0, 0, 0, 865, 0, 0,
	0, 0, 0, 0, 863, 864, 0, 0, 0, 0,
	0, 0, 0, 892, 0, 0, 2185, 890, 922, 880,
	881, 882, 878, 879, 891, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 973, 896, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 937, 916,
	948, 238, 906, 947, 946, 0, 239, 240, 908, 907,
	243, 244, 245, 898, 972, 246, 1009, 1010, 503, 0,
	247, 248, 979, 0, 960, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 982, 264, 265, 963,
	961, 962, 969, 965, 964, 968, 266, 267, 268, 269,
	951, 271, 944, 943, 869, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 942, 279, 0, 280, 0,
	281, 282, 0, 283, 875, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 1000, 1001, 887, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 941, 939, 940, 0,
	299, 0, 300, 0, 0, 983, 301, 302, 0, 303,
	1007, 0, 897, 304, 0, 305, 306, 307, 308, 974,
	975, 978, 364, 985, 309, 310, 0, 311, 312, 313,
	918, 0, 0, 222, 314, 316, 323, 0, 984, 317,
	930, 921, 932, 934, 935, 936, 931, 0, 923, 0,
	324, 986, 976, 987, 325, 326, 327, 988, 956, 957,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 1008, 989, 338, 339, 990, 0, 340, 341,
	967, 966, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 910, 353, 991, 356, 357,
	360, 361, 359, 992, 358, 866, 223, 993, 362, 888,
	977, 363, 945, 365, 366, 0, 919, 368, 920, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 994,
	376, 995, 1002, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 1003, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	938, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 996, 415, 416, 417, 418, 876, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	911, 912, 914, 915, 432, 438, 439, 440, 970, 441,
	421, 422, 442, 443, 997, 444, 445, 933, 913, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 981, 453,
	454, 455, 1004, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 909, 0, 467, 952, 953, 954,
	955, 0, 474, 0, 468, 469, 1005, 470, 1006, 886,
	471, 472, 473, 0, 475, 476, 0, 870, 477, 478,
	479, 481, 482, 480, 484, 971, 485, 0, 917, 486,
	487, 488, 537, 949, 999, 0, 490, 489, 540, 0,
	0, 0, 0, 491, 492, 541, 493, 494, 495, 867,
	0, 0, 0, 0, 0, 865, 0, 0, 0, 0,
	0, 0, 863, 864, 0, 0, 0, 0, 0, 0,
	0, 892, 2183, 0, 2182, 890, 922, 880, 881, 882,
	878, 879, 891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 973, 896, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 937, 916, 948, 238,
	906, 947, 946, 0, 239, 240, 908, 907, 243, 244,
	245, 898, 972, 246, 1009, 1010, 503, 0, 247, 248,
	979, 0, 960, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 982, 264, 265, 963, 961, 962,
	969, 965, 964, 968, 266, 267, 268, 269, 951, 271,
	944, 943, 869, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 942, 279, 0, 280, 0, 281, 282,
	0, 283, 875, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1000, 1001, 887, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 941, 939, 940, 0, 299, 0,
	300, 0, 0, 983, 301, 302, 0, 303, 1007, 0,
	897, 304, 0, 305, 306, 307, 308, 974, 975, 978,
	364, 985, 309, 310, 0, 311, 312, 313, 918, 0,
	0, 222, 314, 316, 323, 0, 984, 317, 930, 921,
	932, 934, 935, 936, 931, 0, 923, 0, 324, 986,
	976, 987, 325, 326, 327, 988, 956, 957, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	1008, 989, 338, 339, 990, 0, 340, 341, 967, 966,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 910, 353, 991, 356, 357, 360, 361,
	359, 992, 358, 866, 223, 993, 362, 888, 977, 363,
	945, 365, 366, 0, 919, 368, 920, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 994, 376, 995,
	1002, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 1003, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 938, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 996,
	415, 416, 417, 418, 876, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 911, 912,
	914, 915, 432, 438, 439, 440, 970, 441, 421, 422,
	442, 443, 997, 444, 445, 933, 913, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 981, 453, 454, 455,
	1004, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 909, 0, 467, 952, 953, 954, 955, 0,
	474, 0, 468, 469, 1005, 470, 1006, 886, 471, 472,
	473, 0, 475, 476, 0, 870, 477, 478, 479, 481,
	482, 480, 484, 971, 485, 0, 917, 486, 487, 488,
	537, 949, 999, 0, 490, 489, 540, 0, 0, 0,
	0, 491, 492, 541, 493, 494, 495, 867, 0, 0,
	0, 0, 0, 865, 0, 0, 0, 0, 0, 0,
	863, 864, 0, 0, 0, 0, 0, 0, 0, 892,
	2180, 0, 2179, 890, 922, 880, 881, 882, 878, 879,
	891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 973, 896, 0, 0, 0, 230, 232,
	231, 233, 234, 497, 937, 916, 948, 238, 906, 947,
	946, 0, 239, 240, 908, 907, 243, 244, 245, 898,
	972, 246, 1009, 1010, 503, 0, 247, 248, 979, 0,
	960, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 982, 264, 265, 963, 961, 962, 969, 965,
	964, 968, 266, 267, 268, 269, 951, 271, 944, 943,
	869, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 942, 279, 0, 280, 0, 281, 282, 0, 283,
	875, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	1000, 1001, 887, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 941, 939, 940, 0, 299, 0, 300, 0,
	0, 983, 301, 302, 0, 303, 1007, 0, 897, 304,
	0, 305, 306, 307, 308, 974, 975, 978, 364, 985,
	309, 310, 0, 311, 312, 313, 918, 0, 0, 222,
	314, 316, 323, 0, 984, 317, 930, 921, 932, 934,
	935, 936, 931, 0, 923, 0, 324, 986, 976, 987,
	325, 326, 327, 988, 956, 957, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 1008, 989,
	338, 339, 990, 0, 340, 341, 967, 966, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 910, 353, 991, 356, 357, 360, 361, 359, 992,
	358, 866, 223, 993, 362, 888, 977, 363, 945, 365,
	366, 0, 919, 368, 920, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 994, 376, 995, 1002, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 1003, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 938, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 996, 415, 416,
	417, 418, 876, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 0, 436, 437, 911, 912, 914, 915,
	432, 438, 439, 440, 970, 441, 421, 422, 442, 443,
	997, 444, 445, 933, 913, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 981, 453, 454, 455, 1004, 0,
	459, 460, 458, 0, 461, 462, 463, 464, 465, 288,
	909, 0, 467, 952, 953, 954, 955, 0, 474, 0,
	468, 469, 1005, 470, 1006, 886, 471, 472, 473, 0,
	475, 476, 0, 870, 477, 478, 479, 481, 482, 480,
	484, 971, 485, 0, 917, 486, 487, 488, 537, 949,
	999, 0, 490, 489, 540, 0, 0, 0, 0, 491,
	492, 541, 493, 494, 495, 867, 0, 0, 0, 0,
	0, 865, 0, 0, 0, 0, 0, 0, 863, 864,
	0, 0, 0, 0, 0, 0, 0, 892, 2177, 0,
	2176, 890, 922, 880, 881, 882, 878, 879, 891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 973, 896, 0, 0, 0, 230, 232, 231, 233,
	234, 497, 937, 916, 948, 238, 906, 947, 946, 0,
	239, 240, 908, 907, 243, 244, 245, 898, 972, 246,
	1009, 1010, 503, 0, 247, 248, 979, 0, 960, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	982, 264, 265, 963, 961, 962, 969, 965, 964, 968,
	266, 267, 268, 269, 951, 271, 944, 943, 869, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 942,
	279, 0, 280, 0, 281, 282, 0, 283, 875, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 1000, 1001,
	887, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	941, 939, 940, 0, 299, 0, 300, 0, 0, 983,
	301, 302, 0, 303, 1007, 0, 897, 304, 0, 305,
	306, 307, 308, 974, 975, 978, 364, 985, 309, 310,
	0, 311, 312, 313, 918, 0, 0, 222, 314, 316,
	323, 0, 984, 317, 930, 921, 932, 934, 935, 936,
	931, 0, 923, 0, 324, 986, 976, 987, 325, 326,
	327, 988, 956, 957, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 1008, 989, 338, 339,
	990, 0, 340, 341, 967, 966, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 910,
	353, 991, 356, 357, 360, 361, 359, 992, 358, 866,
	223, 993, 362, 888, 977, 363, 945, 365, 366, 0,
	919, 368, 920, 0, 0, 371, 372, 373, 0, 0,
	374, 375, 523, 994, 376, 995, 1002, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 386, 1003,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 938, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 996, 415, 416, 417, 418,
	876, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 0, 436, 437, 911, 912, 914, 915, 432, 438,
	439, 440, 970, 441, 421, 422, 442, 443, 997, 444,
	445, 933, 913, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 981, 453, 454, 455, 1004, 0, 459, 460,
	458, 0, 461, 462, 463, 464, 465, 288, 909, 0,
	467, 952, 953, 954, 955, 0, 474, 0, 468, 469,
	1005, 470, 1006, 886, 471, 472, 473, 0, 475, 476,
	0, 870, 477, 478, 479, 481, 482, 480, 484, 971,
	485, 0, 917, 486, 487, 488, 537, 949, 999, 0,
	490, 489, 540, 0, 0, 0, 0, 491, 492, 541,
	493, 494, 495, 867, 0, 0, 0, 0, 0, 865,
	0, 0, 0, 0, 0, 0, 863, 864, 0, 0,
	0, 0, 0, 0, 0, 892, 2174, 0, 1427, 890,
	922, 880, 881, 882, 878, 879, 891, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 973,
	896, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	937, 916, 948, 238, 906, 947, 946, 0, 239, 240,
	908, 907, 243, 244, 245, 898, 972, 246, 1009, 1010,
	503, 0, 247, 248, 979, 0, 960, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 982, 264,
	265, 963, 961, 962, 969, 965, 964, 968, 266, 267,
	268, 269, 951, 271, 944, 943, 869, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 942, 279, 0,
	280, 0, 281, 282, 0, 283, 875, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1000, 1001, 887, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 941, 939,
	940, 0, 299, 0, 300, 0, 0, 983, 301, 302,
	0, 303, 1007, 0, 897, 304, 0, 305, 306, 307,
	308, 974, 975, 978, 364, 985, 309, 310, 0, 311,
	312, 313, 918, 0, 0, 222, 314, 316, 323, 0,
	984, 317, 930, 921, 932, 934, 935, 936, 931, 0,
	923, 0, 324, 986, 976, 987, 325, 326, 327, 988,
	956, 957, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 1008, 989, 338, 339, 990, 0,
	340, 341, 967, 966, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 910, 353, 991,
	356, 357, 360, 361, 359, 992, 358, 866, 223, 993,
	362, 888, 977, 363, 945, 365, 366, 0, 919, 368,
	920, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 994, 376, 995, 1002, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 1003, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 938, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 996, 415, 416, 417, 418, 876, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 911, 912, 914, 915, 432, 438, 439, 440,
	970, 441, 421, 422, 442, 443, 997, 444, 445, 933,
	913, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	981, 453, 454, 455, 1004, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 909, 0, 467, 952,
	953, 954, 955, 0, 474, 0, 468, 469, 1005, 470,
	1006, 886, 471, 472, 473, 0, 475, 476, 0, 870,
	477, 478, 479, 481, 482, 480, 484, 971, 485, 0,
	917, 486, 487, 488, 537, 949, 999, 0, 490, 489,
	540, 1426, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 867, 0, 0, 0, 0, 0, 865, 0, 0,
	0, 0, 0, 0, 863, 864, 0, 0, 0, 0,
	0, 0, 0, 892, 0, 0, 859, 890, 922, 880,
	881, 882, 878, 879, 891, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 973, 896, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 937, 916,
	948, 238, 906, 947, 946, 0, 239, 240, 908, 907,
	243, 244, 245, 898, 972, 246, 1009, 1010, 503, 0,
	247, 248, 979, 0, 960, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 982, 264, 265, 963,
	961, 962, 969, 965, 964, 968, 266, 267, 268, 269,
	951, 271, 944, 943, 869, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 942, 279, 0, 280, 0,
	281, 282, 0, 283, 875, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 1000, 1001, 887, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 941, 939, 940, 0,
	299, 0, 300, 0, 0, 983, 301, 302, 0, 303,
	1007, 0, 897, 304, 0, 305, 306, 307, 308, 974,
	975, 978, 364, 985, 309, 310, 0, 311, 312, 313,
	918, 0, 0, 222, 314, 316, 323, 0, 984, 317,
	930, 921, 932, 934, 935, 936, 931, 0, 923, 0,
	324, 986, 976, 987, 325, 326, 327, 988, 956, 957,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 1008, 989, 338, 339, 990, 0, 340, 341,
	967, 966, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 910, 353, 991, 356, 357,
	360, 361, 359, 992, 358, 866, 223, 993, 362, 888,
	977, 363, 945, 365, 366, 0, 919, 368, 920, 871,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 994,
	376, 995, 1002, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 1003, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	938, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 996, 415, 416, 417, 418, 876, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	911, 912, 914, 915, 432, 438, 439, 440, 970, 441,
	421, 422, 442, 443, 997, 444, 445, 933, 913, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 981, 453,
	454, 455, 1004, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 909, 0, 467, 952, 953, 954,
	955, 0, 474, 0, 468, 469, 1005, 470, 1006, 886,
	471, 472, 473, 0, 475, 476, 0, 870, 477, 478,
	479, 481, 482, 480, 484, 971, 485, 0, 917, 486,
	487, 488, 537, 949, 999, 0, 490, 489, 540, 0,
	0, 0, 0, 491, 492, 541, 493, 494, 495, 867,
	0, 0, 0, 0, 0, 865, 0, 0, 0, 0,
	0, 0, 863, 864, 922, 880, 881, 882, 878, 879,
	891, 892, 0, 0, 0, 890, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 973, 896, 0, 0, 0, 230, 232,
	231, 233, 234, 497, 937, 916, 948, 238, 906, 947,
	946, 0, 239, 240, 908, 907, 243, 244, 245, 898,
	972, 246, 1009, 1010, 503, 0, 247, 248, 979, 0,
	960, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 3638, 262,
	0, 263, 982, 264, 265, 963, 961, 962, 969, 965,
	964, 968, 266, 267, 268, 269, 951, 271, 944, 943,
	869, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 942, 279, 0, 280, 0, 281, 282, 0, 283,
	875, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	1000, 1001, 887, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 941, 939, 940, 0, 299, 0, 300, 0,
	0, 983, 301, 302, 0, 303, 1007, 0, 897, 304,
	0, 305, 306, 307, 308, 974, 975, 978, 364, 985,
	309, 310, 0, 311, 312, 313, 918, 0, 0, 222,
	314, 316, 323, 0, 984, 317, 930, 921, 932, 934,
	935, 936, 931, 0, 923, 0, 324, 986, 976, 987,
	325, 326, 327, 988, 956, 957, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 1008, 989,
	338, 339, 990, 0, 340, 341, 967, 966, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 910, 353, 991, 356, 357, 360, 361, 359, 992,
	358, 866, 223, 993, 362, 888, 977, 363, 945, 365,
	366, 0, 919, 368, 920, 871, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 994, 376, 995, 1002, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 1003, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 938, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 996, 415, 416,
	417, 418, 876, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 0, 436, 437, 911, 912, 914, 915,
	432, 438, 439, 440, 970, 441, 421, 422, 442, 443,
	997, 444, 445, 933, 913, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 981, 453, 454, 455, 1004, 0,
	459, 460, 458, 0, 461, 462, 463, 464, 465, 288,
	909, 0, 467, 952, 953, 954, 955, 0, 474, 0,
	468, 469, 1005, 470, 1006, 886, 471, 472, 473, 0,
	475, 476, 0, 870, 477, 478, 479, 481, 482, 480,
	484, 971, 485, 0, 917, 486, 487, 488, 537, 949,
	999, 0, 490, 489, 540, 0, 0, 0, 0, 491,
	492, 541, 493, 494, 495, 867, 0, 0, 0, 0,
	0, 865, 0, 0, 0, 0, 0, 0, 863, 864,
	922, 880, 881, 882, 878, 879, 891, 892, 0, 0,
	0, 890, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 973,
	896, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	937, 916, 948, 238, 906, 947, 946, 0, 239, 240,
	908, 907, 243, 244, 245, 898, 972, 246, 1009, 1010,
	503, 0, 247, 248, 979, 0, 960, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 3471, 262, 0, 263, 982, 264,
	265, 963, 961, 962, 969, 965, 964, 968, 266, 267,
	268, 269, 951, 271, 944, 943, 869, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 942, 279, 0,
	280, 0, 281, 282, 0, 283, 875, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1000, 1001, 887, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 941, 939,
	940, 0, 299, 0, 300, 0, 0, 983, 301, 302,
	0, 303, 1007, 0, 897, 304, 0, 305, 306, 307,
	308, 974, 975, 978, 364, 985, 309, 310, 0, 311,
	312, 313, 918, 0, 0, 222, 314, 316, 323, 0,
	984, 317, 930, 921, 932, 934, 935, 936, 931, 0,
	923, 0, 324, 986, 976, 987, 325, 326, 327, 988,
	956, 957, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 1008, 989, 338, 339, 990, 0,
	340, 341, 967, 966, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 910, 353, 991,
	356, 357, 360, 361, 359, 992, 358, 866, 223, 993,
	362, 888, 977, 363, 945, 365, 366, 0, 919, 368,
	920, 871, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 994, 376, 995, 1002, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 1003, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 938, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 996, 415, 416, 417, 418, 876, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 911, 912, 914, 915, 432, 438, 439, 440,
	970, 441, 421, 422, 442, 443, 997, 444, 445, 933,
	913, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	981, 453, 454, 455, 1004, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 909, 0, 467, 952,
	953, 954, 955, 0, 474, 0, 468, 469, 1005, 470,
	1006, 886, 471, 472, 473, 0, 475, 476, 0, 870,
	477, 478, 479, 481, 482, 480, 484, 971, 485, 0,
	917, 486, 487, 488, 537, 949, 999, 0, 490, 489,
	540, 0, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 867, 0, 0, 0, 0, 0, 865, 0, 0,
	0, 0, 0, 0, 863, 864, 922, 880, 881, 882,
	878, 879, 891, 892, 0, 0, 0, 890, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 973, 896, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 937, 916, 948, 238,
	906, 947, 946, 0, 239, 240, 908, 907, 243, 244,
	245, 898, 972, 246, 1009, 1010, 503, 0, 247, 248,
	979, 0, 960, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 982, 264, 265, 963, 961, 962,
	969, 965, 964, 968, 266, 267, 268, 269, 951, 271,
	944, 943, 869, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 942, 279, 0, 280, 0, 281, 282,
	0, 283, 875, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1000, 1001, 887, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 941, 939, 940, 0, 299, 0,
	300, 0, 0, 983, 301, 302, 0, 303, 1007, 0,
	897, 304, 0, 305, 306, 307, 308, 974, 975, 978,
	364, 985, 309, 310, 0, 311, 312, 313, 918, 0,
	0, 222, 314, 316, 323, 0, 984, 317, 930, 921,
	932, 934, 935, 936, 931, 0, 923, 0, 324, 986,
	976, 987, 325, 326, 327, 988, 956, 957, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	1008, 989, 338, 339, 990, 0, 340, 341, 967, 966,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 910, 353, 991, 356, 357, 360, 361,
	359, 992, 358, 866, 3187, 993, 362, 888, 977, 363,
	945, 365, 366, 0, 919, 368, 920, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 994, 376, 995,
	1002, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 1003, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 938, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 996,
	415, 416, 417, 418, 876, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 911, 912,
	914, 915, 432, 438, 439, 440, 970, 441, 421, 422,
	442, 443, 997, 444, 445, 933, 913, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 981, 453, 454, 455,
	1004, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 909, 0, 467, 952, 953, 954, 955, 0,
	474, 0, 468, 469, 1005, 470, 1006, 886, 471, 472,
	473, 0, 475, 476, 0, 870, 477, 478, 479, 481,
	482, 480, 484, 971, 485, 0, 917, 486, 487, 488,
	537, 949, 999, 0, 490, 489, 540, 0, 0, 0,
	0, 491, 492, 541, 493, 494, 495, 867, 0, 0,
	0, 0, 0, 865, 0, 0, 0, 0, 0, 0,
	863, 864, 1632, 0, 0, 0, 0, 0, 0, 892,
	0, 0, 0, 890, 922, 880, 881, 882, 878, 879,
	891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 973, 896, 0, 0, 0, 230, 232,
	231, 233, 234, 497, 937, 916, 948, 238, 906, 947,
	946, 0, 239, 240, 908, 907, 243, 244, 245, 898,
	972, 246, 1009, 1010, 503, 0, 247, 248, 979, 0,
	960, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 982, 264, 265, 963, 961, 962, 969, 965,
	964, 968, 266, 267, 268, 269, 951, 271, 944, 943,
	869, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 942, 279, 0, 280, 0, 281, 282, 0, 283,
	875, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	1000, 1001, 887, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 941, 939, 940, 0, 299, 0, 300, 0,
	0, 983, 301, 302, 0, 303, 1007, 0, 897, 304,
	0, 305, 306, 307, 308, 974, 975, 978, 364, 985,
	309, 310, 0, 311, 312, 313, 918, 0, 0, 222,
	314, 316, 323, 0, 984, 317, 930, 921, 932, 934,
	935, 936, 931, 0, 923, 0, 324, 986, 976, 987,
	325, 326, 327, 988, 956, 957, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 1008, 989,
	338, 339, 990, 0, 340, 341, 967, 966, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 910, 353, 991, 356, 357, 360, 361, 359, 992,
	358, 866, 223, 993, 362, 888, 977, 363, 945, 365,
	366, 0, 919, 368, 920, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 994, 376, 995, 1002, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 1003, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 938, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 996, 415, 416,
	417, 418, 876, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 0, 436, 437, 911, 912, 914, 915,
	432, 438, 439, 440, 970, 441, 421, 422, 442, 443,
	997, 444, 445, 933, 913, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 981, 453, 454, 455, 1004, 0,
	459, 460, 458, 0, 461, 462, 463, 464, 465, 288,
	909, 0, 467, 952, 953, 954, 955, 0, 474, 0,
	468, 469, 1005, 470, 1006, 886, 471, 472, 473, 0,
	475, 476, 0, 870, 477, 478, 479, 481, 482, 480,
	484, 971, 485, 0, 917, 486, 487, 488, 537, 949,
	999, 2987, 490, 489, 540, 0, 0, 0, 0, 491,
	492, 541, 493, 494, 495, 867, 0, 0, 0, 0,
	0, 865, 0, 0, 0, 0, 0, 0, 863, 864,
	922, 880, 881, 882, 878, 879, 891, 892, 0, 0,
	0, 890, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 973,
	896, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	937, 916, 948, 238, 906, 947, 946, 0, 239, 240,
	908, 907, 243, 244, 245, 898, 972, 246, 1009, 1010,
	503, 0, 247, 248, 979, 0, 960, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 982, 264,
	265, 963, 961, 962, 969, 965, 964, 968, 266, 267,
	268, 269, 951, 271, 944, 943, 869, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 942, 279, 0,
	280, 0, 281, 282, 0, 283, 875, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1000, 1001, 887, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 941, 939,
	940, 0, 299, 0, 300, 0, 0, 983, 301, 302,
	0, 303, 1007, 0, 897, 304, 0, 305, 306, 307,
	308, 974, 975, 978, 364, 985, 309, 310, 0, 311,
	312, 313, 918, 0, 0, 2046, 314, 316, 323, 0,
	984, 317, 930, 921, 932, 934, 935, 936, 931, 0,
	923, 0, 324, 986, 976, 987, 325, 326, 327, 988,
	956, 957, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 1008, 989, 338, 339, 990, 0,
	340, 341, 967, 966, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 910, 353, 991,
	356, 357, 360, 361, 359, 992, 358, 866, 223, 993,
	362, 888, 977, 363, 945, 365, 366, 0, 919, 368,
	920, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 994, 376, 995, 1002, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 1003, 387, 526,
	388, 389, 2045, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 938, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 996, 415, 416, 417, 418, 876, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 911, 912, 914, 915, 432, 438, 439, 440,
	970, 441, 421, 422, 442, 443, 997, 444, 445, 933,
	913, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	981, 453, 454, 455, 1004, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 909, 0, 467, 952,
	953, 954, 955, 0, 474, 0, 468, 469, 1005, 470,
	1006, 886, 471, 472, 473, 0, 475, 476, 0, 870,
	477, 478, 479, 481, 482, 480, 484, 971, 485, 0,
	917, 486, 487, 488, 537, 949, 999, 0, 490, 489,
	540, 0, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 867, 0, 0, 0, 0, 0, 865, 0, 0,
	0, 0, 0, 0, 863, 864, 922, 880, 881, 882,
	878, 879, 891, 892, 0, 0, 0, 890, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 973, 896, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 937, 916, 948, 238,
	906, 947, 946, 0, 239, 240, 908, 907, 243, 244,
	245, 898, 972, 246, 1009, 1010, 503, 0, 247, 248,
	979, 0, 960, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 982, 264, 265, 963, 961, 962,
	969, 965, 964, 968, 266, 267, 268, 269, 951, 271,
	944, 943, 869, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 942, 279, 0, 280, 0, 281, 282,
	0, 283, 875, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1000, 1001, 887, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 941, 939, 940, 0, 299, 0,
	300, 0, 0, 983, 301, 302, 0, 303, 1007, 0,
	897, 304, 0, 305, 306, 307, 308, 974, 975, 978,
	364, 985, 309, 310, 0, 311, 312, 313, 918, 0,
	0, 222, 314, 316, 323, 0, 984, 317, 930, 921,
	932, 934, 935, 936, 931, 0, 923, 0, 324, 986,
	976, 987, 325, 326, 327, 988, 956, 957, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	1008, 989, 338, 339, 990, 0, 340, 341, 967, 966,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 910, 353, 991, 356, 357, 360, 361,
	359, 992, 358, 866, 223, 993, 362, 888, 977, 363,
	945, 365, 366, 0, 919, 368, 920, 871, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 994, 376, 995,
	1002, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 1003, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 938, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 996,
	415, 416, 417, 418, 876, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 911, 912,
	914, 915, 432, 438, 439, 440, 970, 441, 421, 422,
	442, 443, 997, 444, 445, 933, 913, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 981, 453, 454, 455,
	1004, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 909, 0, 467, 952, 953, 954, 955, 0,
	474, 0, 468, 469, 1005, 470, 1006, 886, 471, 472,
	473, 0, 475, 476, 0, 870, 477, 478, 479, 481,
	482, 480, 484, 971, 485, 0, 917, 486, 487, 488,
	537, 949, 999, 0, 490, 489, 540, 0, 0, 0,
	0, 491, 492, 541, 493, 494, 495, 867, 0, 0,
	0, 0, 0, 865, 0, 0, 0, 0, 0, 0,
	863, 864, 922, 880, 881, 882, 878, 879, 891, 892,
	0, 0, 0, 890, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 973, 896, 0, 0, 0, 230, 232, 231, 233,
	234, 497, 937, 916, 948, 238, 906, 947, 946, 0,
	239, 240, 908, 907, 243, 244, 245, 898, 972, 246,
	1009, 1010, 503, 0, 247, 248, 979, 0, 960, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	982, 264, 265, 963, 961, 962, 969, 965, 964, 968,
	266, 267, 268, 269, 951, 271, 944, 943, 869, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 942,
	279, 0, 280, 0, 281, 282, 0, 283, 875, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 1000, 1001,
	887, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	941, 939, 940, 0, 299, 0, 300, 0, 0, 983,
	301, 302, 0, 303, 1007, 0, 897, 304, 0, 305,
	306, 307, 308, 974, 975, 978, 364, 985, 309, 310,
	0, 311, 312, 313, 918, 0, 0, 222, 314, 316,
	323, 0, 984, 317, 930, 921, 932, 934, 935, 936,
	931, 0, 923, 0, 324, 986, 976, 987, 325, 326,
	327, 988, 956, 957, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 1008, 989, 338, 339,
	990, 0, 340, 341, 967, 966, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 910,
	353, 991, 356, 357, 360, 361, 359, 992, 358, 866,
	223, 993, 362, 888, 977, 363, 945, 365, 366, 0,
	919, 368, 920, 0, 0, 371, 372, 373, 0, 0,
	374, 375, 523, 994, 376, 995, 1002, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 386, 1003,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 938, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 996, 415, 416, 417, 418,
	876, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 0, 436, 437, 911, 912, 914, 915, 432, 438,
	439, 440, 970, 441, 421, 422, 442, 443, 997, 444,
	445, 933, 913, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 981, 453, 454, 455, 1004, 0, 459, 460,
	458, 0, 461, 462, 463, 464, 465, 288, 909, 0,
	467, 952, 953, 954, 955, 0, 474, 0, 468, 469,
	1005, 470, 1006, 886, 471, 472, 473, 0, 475, 476,
	0, 870, 477, 478, 479, 481, 482, 480, 484, 971,
	485, 0, 917, 486, 487, 488, 537, 949, 999, 0,
	490, 489, 540, 0, 0, 0, 0, 491, 492, 541,
	493, 494, 495, 867, 0, 0, 0, 0, 0, 865,
	0, 0, 0, 0, 0, 0, 863, 864, 1632, 0,
	0, 0, 0, 0, 0, 892, 0, 0, 0, 890,
	922, 880, 881, 882, 878, 879, 891, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 973,
	896, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	937, 916, 948, 238, 906, 947, 946, 0, 239, 240,
	908, 907, 243, 244, 245, 898, 972, 246, 1009, 1010,
	503, 0, 247, 248, 979, 0, 960, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 982, 264,
	265, 963, 961, 962, 969, 965, 964, 968, 266, 267,
	268, 269, 951, 271, 944, 943, 869, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 942, 279, 0,
	280, 0, 281, 282, 0, 283, 875, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1000, 1001, 887, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 941, 939,
	940, 0, 299, 0, 300, 0, 2231, 983, 301, 302,
	0, 303, 1007, 0, 897, 304, 0, 305, 306, 307,
	308, 974, 975, 978, 364, 985, 309, 310, 0, 311,
	312, 313, 918, 0, 0, 222, 314, 316, 323, 0,
	984, 317, 930, 921, 932, 934, 935, 936, 931, 0,
	923, 0, 324, 986, 976, 987, 325, 326, 327, 988,
	956, 957, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 1008, 989, 338, 339, 990, 0,
	340, 341, 967, 966, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 910, 353, 991,
	356, 357, 360, 361, 359, 992, 358, 866, 223, 993,
	362, 888, 977, 363, 945, 365, 366, 0, 919, 368,
	920, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 994, 376, 995, 1002, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 1003, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 938, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 996, 415, 416, 417, 418, 876, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 911, 912, 914, 915, 432, 438, 439, 440,
	970, 441, 421, 422, 442, 443, 997, 444, 445, 933,
	913, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	981, 453, 454, 455, 1004, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 909, 0, 467, 952,
	953, 954, 955, 0, 474, 0, 468, 469, 1005, 470,
	1006, 886, 471, 472, 473, 0, 475, 476, 0, 870,
	477, 478, 479, 481, 482, 480, 484, 971, 485, 0,
	917, 486, 487, 488, 537, 949, 999, 0, 490, 489,
	540, 0, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 867, 0, 0, 0, 0, 0, 865, 0, 0,
	0, 0, 0, 0, 863, 864, 922, 880, 881, 882,
	878, 879, 891, 892, 0, 0, 0, 890, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 973, 896, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 937, 916, 948, 238,
	906, 947, 946, 0, 239, 240, 908, 907, 243, 244,
	245, 898, 972, 246, 1009, 1010, 503, 0, 247, 248,
	979, 0, 960, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 982, 264, 265, 963, 961, 962,
	969, 965, 964, 968, 266, 267, 268, 269, 951, 271,
	944, 943, 869, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 942, 279, 0, 280, 0, 281, 282,
	0, 283, 875, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1000, 1001, 887, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 941, 939, 940, 0, 299, 0,
	300, 0, 0, 983, 301, 302, 0, 303, 1007, 0,
	897, 304, 0, 305, 306, 307, 308, 974, 975, 978,
	364, 985, 309, 310, 0, 311, 312, 313, 918, 0,
	0, 222, 314, 316, 323, 0, 984, 317, 930, 921,
	932, 934, 935, 936, 931, 0, 923, 0, 324, 986,
	976, 987, 325, 326, 327, 988, 956, 957, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	1008, 989, 338, 339, 990, 0, 340, 341, 967, 966,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 910, 353, 991, 356, 357, 360, 361,
	359, 992, 358, 866, 223, 993, 362, 888, 977, 363,
	945, 365, 366, 0, 919, 368, 920, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 994, 376, 995,
	1002, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 1003, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 938, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 996,
	415, 416, 417, 418, 876, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 911, 912,
	914, 915, 432, 438, 439, 440, 970, 441, 421, 422,
	442, 443, 997, 444, 445, 933, 913, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 981, 453, 454, 455,
	1004, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 909, 0, 467, 952, 953, 954, 955, 0,
	474, 0, 468, 469, 1005, 470, 1006, 886, 471, 472,
	473, 0, 475, 476, 0, 870, 477, 478, 479, 481,
	482, 480, 484, 971, 485, 0, 917, 486, 487, 488,
	537, 949, 999, 0, 490, 489, 540, 0, 0, 0,
	0, 491, 492, 541, 493, 494, 495, 867, 0, 0,
	0, 0, 0, 865, 0, 0, 0, 0, 0, 0,
	863, 864, 0, 0, 0, 0, 0, 0, 0, 892,
	1566, 0, 2236, 890, 922, 880, 881, 882, 878, 879,
	891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 973, 896, 0, 0, 0, 230, 232,
	231, 233, 234, 497, 937, 916, 948, 238, 906, 947,
	946, 0, 239, 240, 908, 907, 243, 244, 245, 898,
	972, 246, 1009, 1010, 503, 0, 247, 248, 979, 0,
	960, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 982, 264, 265, 963, 961, 962, 969, 965,
	964, 968, 266, 267, 268, 269, 951, 271, 944, 943,
	869, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 942, 279, 0, 280, 0, 281, 282, 0, 283,
	875, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	1000, 1001, 887, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 941, 939, 940, 0, 299, 0, 300, 0,
	0, 983, 301, 302, 0, 303, 1007, 0, 897, 304,
	0, 305, 306, 307, 308, 974, 975, 978, 364, 985,
	309, 310, 0, 311, 312, 313, 918, 0, 0, 222,
	314, 316, 323, 0, 984, 317, 930, 921, 932, 934,
	935, 936, 931, 0, 923, 0, 324, 986, 976, 987,
	325, 326, 327, 988, 956, 957, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 1008, 989,
	338, 339, 990, 0, 340, 341, 967, 966, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 910, 353, 991, 356, 357, 360, 361, 359, 992,
	358, 866, 223, 993, 362, 888, 977, 363, 945, 365,
	366, 0, 919, 368, 920, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 994, 376, 995, 1002, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 1003, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 938, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 996, 415, 416,
	417, 418, 876, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 0, 436, 437, 911, 912, 914, 915,
	432, 438, 439, 440, 970, 441, 421, 422, 442, 443,
	997, 444, 445, 933, 913, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 981, 453, 454, 455, 1004, 0,
	459, 460, 458, 0, 461, 462, 463, 464, 465, 288,
	909, 0, 467, 952, 953, 954, 955, 0, 474, 0,
	468, 469, 1005, 470, 1006, 886, 471, 472, 473, 0,
	475, 476, 0, 870, 477, 478, 479, 481, 482, 480,
	484, 971, 485, 0, 917, 486, 487, 488, 537, 949,
	999, 0, 490, 489, 540, 0, 0, 0, 0, 491,
	492, 541, 493, 494, 495, 867, 0, 0, 0, 0,
	0, 865, 0, 0, 0, 0, 0, 0, 863, 864,
	0, 0, 0, 0, 0, 0, 0, 892, 0, 0,
	2234, 890, 922, 880, 881, 882, 878, 879, 891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 973, 896, 0, 0, 0, 230, 232, 231, 233,
	234, 497, 937, 916, 948, 238, 906, 947, 946, 0,
	239, 240, 908, 907, 243, 244, 245, 898, 972, 246,
	1009, 1010, 503, 0, 247, 248, 979, 0, 960, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	982, 264, 265, 963, 961, 962, 969, 965, 964, 968,
	266, 267, 268, 269, 951, 271, 944, 943, 869, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 942,
	279, 0, 280, 0, 281, 282, 0, 283, 875, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 1000, 1001,
	887, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	941, 939, 940, 0, 299, 0, 300, 0, 0, 983,
	301, 302, 0, 303, 1007, 0, 897, 304, 0, 305,
	306, 307, 308, 974, 975, 978, 364, 985, 309, 310,
	0, 311, 312, 313, 918, 0, 0, 222, 314, 316,
	323, 0, 984, 317, 930, 921, 932, 934, 935, 936,
	931, 0, 923, 0, 324, 986, 976, 987, 325, 326,
	327, 988, 956, 957, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 1008, 989, 338, 339,
	990, 0, 340, 341, 967, 966, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 910,
	353, 991, 356, 357, 360, 361, 359, 992, 358, 866,
	223, 993, 362, 888, 977, 363, 945, 365, 366, 0,
	919, 368, 920, 0, 0, 371, 372, 373, 0, 0,
	374, 375, 523, 994, 376, 995, 1002, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 386, 1003,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 938, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 996, 415, 416, 417, 418,
	876, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 0, 436, 437, 911, 912, 914, 915, 432, 438,
	439, 440, 970, 441, 421, 422, 442, 443, 997, 444,
	445, 933, 913, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 981, 453, 454, 455, 1004, 0, 459, 460,
	458, 0, 461, 462, 463, 464, 465, 288, 909, 0,
	467, 952, 953, 954, 955, 0, 474, 0, 468, 469,
	1005, 470, 1006, 886, 471, 472, 473, 0, 475, 476,
	0, 870, 477, 478, 479, 481, 482, 480, 484, 971,
	485, 0, 917, 486, 487, 488, 537, 949, 999, 0,
	490, 489, 540, 0, 0, 0, 0, 491, 492, 541,
	493, 494, 495, 867, 0, 0, 0, 0, 0, 865,
	0, 0, 0, 0, 0, 0, 863, 864, 0, 0,
	0, 0, 0, 0, 0, 892, 0, 0, 2222, 890,
	922, 880, 881, 882, 878, 879, 891, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 973,
	896, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	937, 916, 948, 238, 906, 947, 946, 0, 239, 240,
	908, 907, 243, 244, 245, 898, 972, 246, 1009, 1010,
	503, 0, 247, 248, 979, 0, 960, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 982, 264,
	265, 963, 961, 962, 969, 965, 964, 968, 266, 267,
	268, 269, 951, 271, 944, 943, 869, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 942, 279, 0,
	280, 0, 281, 282, 0, 283, 875, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1000, 1001, 887, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 941, 939,
	940, 0, 299, 0, 300, 0, 0, 983, 301, 302,
	0, 303, 1007, 0, 897, 304, 0, 305, 306, 307,
	308, 974, 975, 978, 364, 985, 309, 310, 0, 311,
	312, 313, 918, 0, 0, 222, 314, 316, 323, 0,
	984, 317, 930, 921, 932, 934, 935, 936, 931, 0,
	923, 0, 324, 986, 976, 987, 325, 326, 327, 988,
	956, 957, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 1008, 989, 338, 339, 990, 0,
	340, 341, 967, 966, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 910, 353, 991,
	356, 357, 360, 361, 359, 992, 358, 866, 223, 993,
	362, 888, 977, 363, 945, 365, 366, 0, 919, 368,
	920, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 994, 376, 995, 1002, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 1003, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 938, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 996, 415, 416, 417, 418, 876, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 911, 912, 914, 915, 432, 438, 439, 440,
	970, 441, 421, 422, 442, 443, 997, 444, 445, 933,
	913, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	981, 453, 454, 455, 1004, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 909, 0, 467, 952,
	953, 954, 955, 0, 474, 0, 468, 469, 1005, 470,
	1006, 886, 471, 472, 473, 0, 475, 476, 0, 870,
	477, 478, 479, 481, 482, 480, 484, 971, 485, 0,
	917, 486, 487, 488, 537, 949, 999, 0, 490, 489,
	540, 0, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 867, 0, 0, 0, 0, 0, 865, 0, 0,
	0, 0, 0, 0, 863, 864, 0, 0, 0, 0,
	0, 0, 0, 892, 0, 0, 2211, 890, 922, 880,
	881, 882, 878, 879, 891, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 973, 896, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 937, 916,
	948, 238, 906, 947, 946, 0, 239, 240, 908, 907,
	243, 244, 245, 898, 972, 246, 1009, 1010, 503, 0,
	247, 248, 979, 0, 960, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 982, 264, 265, 963,
	961, 962, 969, 965, 964, 968, 266, 267, 268, 269,
	951, 271, 944, 943, 869, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 942, 279, 0, 280, 0,
	281, 282, 0, 283, 875, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 1000, 1001, 887, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 941, 939, 940, 0,
	299, 0, 300, 0, 0, 983, 301, 302, 0, 303,
	1007, 0, 897, 304, 0, 305, 306, 307, 308, 974,
	975, 978, 364, 985, 309, 310, 0, 311, 312, 313,
	918, 0, 0, 222, 314, 316, 323, 0, 984, 317,
	930, 921, 932, 934, 935, 936, 931, 0, 923, 0,
	324, 986, 976, 987, 325, 326, 327, 988, 956, 957,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 1008, 989, 338, 339, 990, 0, 340, 341,
	967, 966, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 910, 353, 991, 356, 357,
	360, 361, 359, 992, 358, 866, 223, 993, 362, 888,
	977, 363, 945, 365, 366, 0, 919, 368, 920, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 994,
	376, 995, 1002, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 1003, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	938, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 996, 415, 416, 417, 418, 876, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	911, 912, 914, 915, 432, 438, 439, 440, 970, 441,
	421, 422, 442, 443, 997, 444, 445, 933, 913, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 981, 453,
	454, 455, 1004, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 909, 0, 467, 952, 953, 954,
	955, 0, 474, 0, 468, 469, 1005, 470, 1006, 886,
	471, 472, 473, 0, 475, 476, 0, 870, 477, 478,
	479, 481, 482, 480, 484, 971, 485, 0, 917, 486,
	487, 488, 537, 949, 999, 0, 490, 489, 540, 0,
	0, 0, 0, 491, 492, 541, 493, 494, 495, 867,
	0, 0, 0, 0, 0, 865, 0, 0, 0, 0,
	0, 0, 863, 864, 0, 0, 0, 0, 0, 0,
	0, 892, 0, 0, 2209, 890, 2200, 2207, 881, 882,
	878, 879, 891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 973, 896, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 937, 916, 948, 238,
	906, 947, 946, 0, 239, 240, 908, 907, 243, 244,
	245, 898, 972, 246, 1009, 1010, 503, 0, 247, 248,
	979, 0, 960, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 982, 264, 265, 963, 961, 962,
	969, 965, 964, 968, 266, 267, 268, 269, 951, 2203,
	944, 943, 869, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 942, 279, 0, 280, 0, 281, 282,
	0, 283, 875, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1000, 1001, 887, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 941, 939, 940, 0, 299, 0,
	300, 0, 0, 983, 301, 302, 0, 303, 1007, 0,
	897, 304, 0, 305, 306, 307, 2204, 974, 975, 978,
	364, 985, 309, 310, 0, 311, 312, 313, 918, 0,
	0, 222, 314, 316, 323, 0, 984, 317, 930, 921,
	932, 934, 935, 936, 931, 0, 923, 0, 324, 986,
	976, 987, 325, 326, 327, 988, 956, 957, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	1008, 989, 338, 339, 990, 0, 340, 341, 967, 966,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	2205, 2202, 354, 910, 353, 991, 356, 357, 360, 361,
	359, 992, 358, 866, 223, 993, 362, 888, 977, 363,
	945, 365, 366, 0, 919, 368, 920, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 994, 376, 995,
	1002, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 1003, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 938, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 996,
	415, 416, 417, 418, 876, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 2206, 0, 436, 437, 911, 912,
	914, 915, 432, 438, 439, 440, 970, 441, 421, 422,
	442, 443, 997, 444, 445, 933, 913, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 981, 453, 454, 455,
	1004, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 909, 0, 467, 952, 953, 954, 955, 0,
	474, 0, 468, 469, 1005, 470, 1006, 886, 471, 472,
	473, 0, 475, 476, 0, 870, 477, 478, 479, 481,
	482, 480, 484, 971, 485, 0, 917, 486, 487, 488,
	537, 949, 999, 0, 490, 489, 540, 0, 0, 0,
	0, 491, 492, 541, 493, 2201, 495, 867, 0, 0,
	0, 0, 0, 865, 0, 0, 0, 0, 0, 0,
	863, 864, 0, 0, 0, 0, 0, 0, 0, 892,
	0, 0, 2197, 890, 2200, 2207, 881, 882, 878, 879,
	891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 973, 896, 0, 0, 0, 230, 232,
	231, 233, 234, 497, 937, 916, 948, 238, 906, 947,
	946, 0, 239, 240, 908, 907, 243, 244, 245, 898,
	972, 246, 1009, 1010, 503, 0, 247, 248, 979, 0,
	960, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 982, 264, 265, 963, 961, 962, 969, 965,
	964, 968, 266, 267, 268, 269, 951, 2203, 944, 943,
	869, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 942, 279, 0, 280, 0, 281, 282, 0, 283,
	875, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	1000, 1001, 887, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 941, 939, 940, 0, 299, 0, 300, 0,
	0, 983, 301, 302, 0, 303, 1007, 0, 897, 304,
	0, 305, 306, 307, 2204, 974, 975, 978, 364, 985,
	309, 310, 0, 311, 312, 313, 918, 0, 0, 222,
	314, 316, 323, 0, 984, 317, 930, 921, 932, 934,
	935, 936, 931, 0, 923, 0, 324, 986, 976, 987,
	325, 326, 327, 988, 956, 957, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 1008, 989,
	338, 339, 990, 0, 340, 341, 967, 966, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 2205, 2202,
	354, 910, 353, 991, 356, 357, 360, 361, 359, 992,
	358, 866, 223, 993, 362, 888, 977, 363, 945, 365,
	366, 0, 919, 368, 920, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 994, 376, 995, 1002, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 1003, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 938, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 996, 415, 416,
	417, 418, 876, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 2206, 0, 436, 437, 911, 912, 914, 915,
	432, 438, 439, 440, 970, 441, 421, 422, 442, 443,
	997, 444, 445, 933, 913, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 981, 453, 454, 455, 1004, 0,
	459, 460, 458, 0, 461, 462, 463, 464, 465, 288,
	909, 0, 467, 952, 953, 954, 955, 0, 474, 0,
	468, 469, 1005, 470, 1006, 886, 471, 472, 473, 0,
	475, 476, 0, 870, 477, 478, 479, 481, 482, 480,
	484, 971, 485, 0, 917, 486, 487, 488, 537, 949,
	999, 0, 490, 489, 540, 0, 0, 0, 0, 491,
	492, 541, 493, 2201, 495, 867, 0, 0, 0, 0,
	0, 865, 0, 0, 0, 0, 0, 0, 863, 864,
	922, 880, 881, 882, 878, 879, 891, 892, 0, 0,
	0, 890, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 973,
	896, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	937, 916, 948, 238, 906, 947, 946, 0, 239, 240,
	908, 907, 243, 244, 245, 898, 972, 246, 1009, 1010,
	503, 0, 247, 248, 979, 0, 960, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 982, 264,
	265, 963, 961, 962, 969, 965, 964, 968, 266, 267,
	268, 269, 951, 271, 944, 943, 869, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 942, 279, 0,
	280, 0, 281, 282, 0, 283, 875, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1000, 1001, 887, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 941, 939,
	940, 0, 299, 0, 300, 0, 0, 983, 301, 302,
	0, 303, 1007, 0, 897, 304, 0, 305, 306, 307,
	308, 974, 975, 978, 364, 985, 309, 310, 0, 311,
	312, 313, 918, 0, 0, 222, 314, 316, 323, 0,
	984, 317, 930, 921, 932, 934, 935, 936, 931, 0,
	923, 0, 324, 986, 976, 987, 325, 326, 327, 988,
	956, 957, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 1008, 989, 338, 339, 990, 0,
	340, 341, 967, 966, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 910, 353, 991,
	356, 357, 360, 361, 359, 992, 358, 866, 223, 993,
	362, 888, 977, 363, 945, 365, 366, 0, 919, 368,
	920, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 994, 376, 995, 1002, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 1003, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 938, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 996, 415, 416, 417, 418, 876, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 911, 912, 914, 915, 432, 438, 439, 440,
	970, 441, 421, 422, 442, 443, 997, 444, 445, 933,
	913, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	981, 453, 454, 455, 1004, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 909, 0, 467, 952,
	953, 954, 955, 0, 474, 0, 468, 469, 1005, 470,
	1006, 886, 471, 472, 473, 0, 475, 476, 0, 870,
	477, 478, 479, 481, 482, 480, 484, 971, 485, 0,
	917, 486, 487, 488, 537, 949, 999, 0, 490, 489,
	540, 0, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 867, 0, 0, 0, 0, 0, 865, 0, 0,
	0, 0, 0, 0, 863, 864, 0, 0, 0, 0,
	0, 1574, 0, 892, 0, 0, 0, 890, 922, 880,
	881, 882, 878, 879, 891, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	2025, 229, 0, 0, 0, 0, 0, 973, 896, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 937, 916,
	948, 238, 906, 947, 946, 0, 239, 240, 908, 907,
	243, 244, 245, 898, 972, 246, 1009, 1010, 503, 0,
	247, 248, 979, 0, 960, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 982, 264, 265, 963,
	961, 962, 969, 965, 964, 968, 266, 267, 268, 269,
	951, 271, 944, 943, 869, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 942, 279, 0, 280, 0,
	281, 282, 0, 283, 875, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 1000, 1001, 887, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 941, 939, 940, 0,
	299, 0, 300, 0, 0, 983, 301, 302, 0, 303,
	1007, 0, 897, 304, 0, 305, 306, 307, 308, 974,
	975, 978, 364, 985, 309, 310, 0, 311, 312, 313,
	918, 0, 0, 222, 314, 316, 323, 0, 984, 317,
	930, 921, 932, 934, 935, 936, 931, 0, 923, 0,
	324, 986, 976, 987, 325, 326, 327, 988, 956, 957,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 1008, 989, 338, 339, 990, 0, 340, 341,
	967, 966, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 910, 353, 991, 356, 357,
	360, 361, 359, 992, 358, 866, 223, 993, 362, 888,
	977, 363, 945, 365, 366, 0, 919, 368, 920, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 994,
	376, 995, 1002, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 1003, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	938, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 996, 415, 416, 417, 418, 876, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	911, 912, 914, 915, 432, 438, 439, 440, 970, 441,
	421, 422, 442, 443, 997, 444, 445, 933, 913, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 981, 453,
	454, 455, 1004, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 909, 0, 467, 952, 953, 954,
	955, 0, 474, 0, 468, 469, 1005, 470, 1006, 886,
	471, 472, 473, 0, 475, 476, 0, 870, 477, 478,
	479, 481, 482, 480, 484, 971, 485, 0, 917, 486,
	487, 488, 537, 949, 999, 0, 490, 489, 540, 0,
	0, 0, 0, 491, 492, 541, 493, 494, 495, 867,
	0, 0, 0, 0, 0, 865, 0, 0, 0, 0,
	0, 0, 863, 864, 0, 0, 0, 0, 0, 0,
	0, 892, 0, 0, 1250, 890, 922, 880, 881, 882,
	878, 879, 891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 973, 896, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 937, 916, 948, 238,
	906, 947, 946, 0, 239, 240, 908, 907, 243, 244,
	245, 898, 972, 246, 1009, 1010, 503, 0, 247, 248,
	979, 0, 960, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 982, 264, 265, 963, 961, 962,
	969, 965, 964, 968, 266, 267, 268, 269, 951, 271,
	944, 943, 869, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 942, 279, 0, 280, 0, 281, 282,
	0, 283, 875, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1000, 1001, 887, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 941, 939, 940, 0, 299, 0,
	300, 0, 0, 983, 301, 302, 0, 303, 1007, 0,
	897, 304, 0, 305, 306, 307, 308, 1249, 975, 978,
	364, 985, 309, 310, 0, 311, 312, 313, 918, 0,
	0, 222, 314, 316, 323, 0, 984, 317, 930, 921,
	932, 934, 935, 936, 931, 0, 923, 0, 324, 986,
	976, 987, 325, 326, 327, 988, 956, 957, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	1008, 989, 338, 339, 990, 0, 340, 341, 967, 966,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 910, 353, 991, 356, 357, 360, 361,
	359, 992, 358, 866, 223, 993, 362, 888, 977, 363,
	945, 365, 366, 0, 919, 368, 920, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 994, 376, 995,
	1002, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 1003, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 938, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 996,
	415, 416, 417, 418, 876, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 911, 912,
	914, 915, 432, 438, 439, 440, 970, 441, 421, 422,
	442, 443, 997, 444, 445, 933, 913, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 981, 453, 454, 455,
	1004, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 909, 0, 467, 952, 953, 954, 955, 0,
	474, 0, 468, 469, 1005, 470, 1006, 886, 471, 472,
	473, 0, 475, 476, 0, 870, 477, 478, 479, 481,
	482, 480, 484, 971, 485, 0, 917, 486, 487, 488,
	537, 949, 999, 0, 490, 489, 540, 0, 0, 0,
	0, 491, 492, 541, 493, 494, 495, 867, 0, 0,
	0, 0, 0, 865, 0, 0, 0, 0, 0, 0,
	863, 864, 0, 0, 0, 0, 0, 0, 0, 892,
	0, 0, 1244, 890, 922, 880, 881, 882, 878, 879,
	891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 973, 896, 0, 0, 0, 230, 232,
	231, 233, 234, 497, 937, 916, 948, 238, 906, 947,
	946, 0, 239, 240, 908, 907, 243, 244, 245, 898,
	972, 246, 1009, 1010, 503, 0, 247, 248, 979, 0,
	960, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 982, 264, 265, 963, 961, 962, 969, 965,
	964, 968, 266, 267, 268, 269, 951, 271, 944, 943,
	869, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 942, 279, 0, 280, 0, 281, 282, 0, 283,
	875, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	1000, 1001, 887, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 941, 939, 940, 0, 299, 0, 300, 0,
	0, 983, 301, 302, 0, 303, 1007, 0, 897, 304,
	0, 305, 306, 307, 308, 1243, 975, 978, 364, 985,
	309, 310, 0, 311, 312, 313, 918, 0, 0, 222,
	314, 316, 323, 0, 984, 317, 930, 921, 932, 934,
	935, 936, 931, 0, 923, 0, 324, 986, 976, 987,
	325, 326, 327, 988, 956, 957, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 1008, 989,
	338, 339, 990, 0, 340, 341, 967, 966, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 910, 353, 991, 356, 357, 360, 361, 359, 992,
	358, 866, 223, 993, 362, 888, 977, 363, 945, 365,
	366, 0, 919, 368, 920, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 994, 376, 995, 1002, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 1003, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 938, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 996, 415, 416,
	417, 418, 876, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 0, 436, 437, 911, 912, 914, 915,
	432, 438, 439, 440, 970, 441, 421, 422, 442, 443,
	997, 444, 445, 933, 913, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 981, 453, 454, 455, 1004, 0,
	459, 460, 458, 0, 461, 462, 463, 464, 465, 288,
	909, 0, 467, 952, 953, 954, 955, 0, 474, 0,
	468, 469, 1005, 470, 1006, 886, 471, 472, 473, 0,
	475, 476, 0, 870, 477, 478, 479, 481, 482, 480,
	484, 971, 485, 0, 917, 486, 487, 488, 537, 949,
	999, 0, 490, 489, 540, 0, 0, 0, 0, 491,
	492, 541, 493, 494, 495, 867, 0, 0, 0, 0,
	0, 865, 0, 0, 0, 0, 0, 0, 863, 864,
	0, 0, 0, 0, 0, 0, 0, 892, 0, 0,
	1239, 890, 922, 880, 881, 882, 878, 879, 891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 973, 896, 0, 0, 0, 230, 232, 231, 233,
	234, 497, 937, 916, 948, 238, 906, 947, 946, 0,
	239, 240, 908, 907, 243, 244, 245, 898, 972, 246,
	1009, 1010, 503, 0, 247, 248, 979, 0, 960, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	982, 264, 265, 963, 961, 962, 969, 965, 964, 968,
	266, 267, 268, 269, 951, 271, 944, 943, 869, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 942,
	279, 0, 280, 0, 281, 282, 0, 283, 875, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 1000, 1001,
	887, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	941, 939, 940, 0, 299, 0, 300, 0, 0, 983,
	301, 302, 0, 303, 1007, 0, 897, 304, 0, 305,
	306, 307, 308, 974, 975, 978, 364, 985, 309, 310,
	0, 311, 312, 313, 918, 0, 0, 222, 314, 316,
	323, 0, 984, 317, 930, 921, 932, 934, 935, 936,
	931, 0, 923, 0, 324, 986, 976, 987, 325, 326,
	327, 988, 956, 957, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 1008, 989, 338, 339,
	990, 0, 340, 341, 967, 966, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 910,
	353, 991, 356, 357, 360, 361, 359, 992, 358, 866,
	223, 993, 362, 888, 977, 363, 945, 365, 366, 0,
	919, 368, 920, 0, 0, 371, 372, 373, 0, 0,
	374, 375, 523, 994, 376, 995, 1002, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 386, 1003,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 938, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 996, 415, 416, 417, 418,
	876, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 0, 436, 437, 911, 912, 914, 915, 432, 438,
	439, 440, 970, 441, 421, 422, 442, 443, 997, 444,
	445, 933, 913, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 981, 453, 454, 455, 1004, 0, 459, 460,
	458, 0, 461, 462, 463, 464, 465, 288, 909, 0,
	467, 952, 953, 954, 955, 0, 474, 0, 468, 469,
	1005, 470, 1006, 886, 471, 472, 473, 0, 475, 476,
	0, 870, 477, 478, 479, 481, 482, 480, 484, 971,
	485, 0, 917, 486, 487, 488, 537, 949, 999, 0,
	490, 489, 540, 0, 0, 0, 0, 491, 492, 541,
	493, 494, 495, 867, 0, 0, 0, 0, 0, 865,
	0, 0, 0, 0, 0, 0, 863, 864, 922, 880,
	881, 882, 878, 879, 891, 892, 0, 0, 0, 890,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 973, 896, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 937, 916,
	948, 238, 906, 947, 946, 0, 239, 240, 908, 907,
	243, 244, 245, 898, 972, 246, 1009, 1010, 503, 0,
	247, 248, 979, 0, 960, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 982, 264, 265, 963,
	961, 962, 969, 965, 964, 968, 266, 267, 268, 269,
	951, 271, 944, 943, 869, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 942, 279, 0, 280, 0,
	281, 282, 0, 283, 875, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 1000, 1001, 887, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 941, 939, 940, 0,
	299, 0, 300, 0, 0, 983, 301, 302, 0, 303,
	1007, 0, 897, 304, 0, 305, 306, 307, 308, 974,
	975, 978, 364, 985, 309, 310, 0, 311, 312, 313,
	918, 0, 0, 222, 314, 316, 323, 0, 984, 317,
	930, 921, 932, 934, 935, 936, 931, 0, 923, 0,
	324, 986, 976, 987, 325, 326, 327, 988, 956, 957,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 1008, 989, 338, 339, 990, 0, 340, 341,
	967, 966, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 910, 353, 991, 356, 357,
	360, 361, 359, 992, 358, 866, 223, 993, 362, 888,
	977, 363, 945, 365, 366, 0, 919, 368, 920, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 994,
	376, 995, 1002, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 1003, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	938, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 996, 415, 416, 417, 418, 876, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	911, 912, 914, 915, 432, 438, 439, 440, 970, 441,
	421, 422, 442, 443, 997, 444, 445, 933, 913, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 981, 453,
	454, 455, 1004, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 909, 0, 467, 952, 953, 954,
	955, 0, 474, 0, 468, 469, 1005, 470, 1006, 886,
	471, 472, 473, 0, 475, 476, 0, 870, 477, 478,
	479, 481, 482, 480, 484, 971, 485, 0, 917, 486,
	487, 488, 537, 949, 999, 0, 490, 489, 540, 0,
	0, 0, 0, 491, 492, 541, 493, 494, 495, 867,
	0, 0, 0, 0, 0, 865, 0, 0, 0, 0,
	0, 0, 863, 864, 922, 880, 881, 882, 878, 879,
	891, 892, 0, 0, 0, 890, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 973, 896, 0, 0, 0, 230, 232,
	231, 233, 234, 497, 937, 916, 948, 238, 906, 947,
	946, 0, 239, 240, 908, 907, 243, 244, 245, 898,
	972, 246, 1009, 1010, 503, 0, 247, 248, 979, 0,
	960, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 982, 264, 3670, 963, 961, 962, 969, 965,
	964, 968, 266, 267, 268, 269, 951, 271, 944, 943,
	869, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 942, 279, 0, 280, 0, 281, 282, 0, 283,
	875, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	1000, 1001, 887, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 941, 939, 940, 0, 299, 0, 300, 0,
	0, 983, 301, 302, 0, 303, 1007, 0, 897, 304,
	0, 305, 306, 307, 308, 974, 975, 978, 364, 985,
	309, 310, 0, 311, 312, 313, 918, 0, 0, 222,
	314, 316, 323, 0, 984, 317, 930, 921, 932, 934,
	935, 936, 931, 0, 923, 0, 324, 986, 976, 987,
	325, 326, 327, 988, 956, 957, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 1008, 989,
	338, 339, 990, 0, 340, 341, 967, 966, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 910, 353, 991, 356, 357, 360, 361, 359, 992,
	358, 866, 223, 993, 362, 888, 977, 363, 945, 365,
	366, 0, 919, 368, 920, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 994, 376, 995, 1002, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 1003, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 938, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 996, 415, 416,
	417, 418, 876, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 0, 436, 437, 911, 912, 914, 915,
	432, 438, 439, 440, 970, 441, 421, 422, 442, 443,
	997, 444, 445, 933, 913, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 981, 453, 454, 455, 1004, 0,
	459, 460, 458, 0, 461, 462, 463, 464, 465, 288,
	909, 0, 467, 952, 953, 954, 955, 0, 474, 0,
	468, 469, 1005, 470, 1006, 886, 471, 472, 473, 0,
	3669, 476, 0, 870, 477, 478, 479, 481, 482, 480,
	484, 971, 485, 0, 917, 486, 487, 488, 537, 949,
	999, 0, 490, 489, 540, 0, 0, 0, 0, 491,
	492, 541, 493, 494, 495, 867, 0, 0, 0, 0,
	0, 865, 0, 0, 0, 0, 0, 0, 863, 864,
	922, 880, 881, 882, 878, 879, 891, 892, 0, 0,
	0, 890, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 973,
	896, 0, 0, 0, 230, 232, 231, 233, 234, 3668,
	937, 916, 948, 238, 906, 947, 946, 0, 239, 240,
	908, 907, 243, 244, 245, 898, 972, 246, 1009, 1010,
	503, 0, 247, 248, 979, 0, 960, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 982, 264,
	3670, 963, 961, 962, 969, 965, 964, 968, 266, 267,
	268, 269, 951, 271, 944, 943, 869, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 942, 279, 0,
	280, 0, 281, 282, 0, 283, 875, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1000, 1001, 887, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 941, 939,
	940, 0, 299, 0, 300, 0, 0, 983, 301, 302,
	0, 303, 1007, 0, 897, 304, 0, 305, 306, 307,
	308, 974, 975, 978, 364, 985, 309, 310, 0, 311,
	312, 313, 918, 0, 0, 222, 314, 316, 323, 0,
	984, 317, 930, 921, 932, 934, 935, 936, 931, 0,
	923, 0, 324, 986, 976, 987, 325, 326, 327, 988,
	956, 957, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 1008, 989, 338, 339, 990, 0,
	340, 341, 967, 966, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 910, 353, 991,
	356, 357, 360, 361, 359, 992, 358, 866, 223, 993,
	362, 888, 977, 363, 945, 365, 366, 0, 919, 368,
	920, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 994, 376, 995, 1002, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 1003, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 938, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 996, 415, 416, 417, 418, 876, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 911, 912, 914, 915, 432, 438, 439, 440,
	970, 441, 421, 422, 442, 443, 997, 444, 445, 933,
	913, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	981, 453, 454, 455, 1004, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 909, 0, 467, 952,
	953, 954, 955, 0, 474, 0, 468, 469, 1005, 470,
	1006, 886, 471, 472, 473, 0, 3669, 476, 0, 870,
	477, 478, 479, 481, 482, 480, 484, 971, 485, 0,
	917, 486, 487, 488, 537, 949, 999, 0, 490, 489,
	540, 0, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 867, 0, 0, 0, 0, 0, 865, 0, 0,
	0, 0, 0, 0, 863, 864, 922, 880, 881, 882,
	2572, 2573, 891, 892, 0, 0, 0, 890, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 973, 896, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 937, 916, 948, 238,
	906, 947, 946, 0, 239, 240, 908, 907, 243, 244,
	245, 898, 972, 246, 1009, 1010, 503, 0, 247, 248,
	979, 0, 960, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 982, 264, 265, 963, 961, 962,
	969, 965, 964, 968, 266, 267, 268, 269, 951, 271,
	944, 943, 869, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 942, 279, 0, 280, 0, 281, 282,
	0, 283, 875, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 1000, 1001, 887, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 941, 939, 940, 0, 299, 0,
	300, 0, 0, 983, 301, 302, 0, 303, 1007, 0,
	897, 304, 0, 305, 306, 307, 308, 974, 975, 978,
	364, 985, 309, 310, 0, 311, 312, 313, 918, 0,
	0, 222, 314, 316, 323, 0, 984, 317, 930, 921,
	932, 934, 935, 936, 931, 0, 923, 0, 324, 986,
	976, 987, 325, 326, 327, 988, 956, 957, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	1008, 989, 338, 339, 990, 0, 340, 341, 967, 966,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 910, 353, 991, 356, 357, 360, 361,
	359, 992, 358, 866, 223, 993, 362, 888, 977, 363,
	945, 365, 366, 0, 919, 368, 920, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 994, 376, 995,
	1002, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 1003, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 938, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 996,
	415, 416, 417, 418, 876, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 911, 912,
	914, 915, 432, 438, 439, 440, 970, 441, 421, 422,
	442, 443, 997, 444, 445, 933, 913, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 981, 453, 454, 455,
	1004, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 909, 0, 467, 952, 953, 954, 955, 0,
	474, 0, 468, 469, 1005, 470, 1006, 886, 471, 472,
	473, 0, 475, 476, 0, 870, 477, 478, 479, 481,
	482, 480, 484, 971, 485, 0, 917, 486, 487, 488,
	537, 949, 999, 0, 490, 489, 540, 0, 0, 0,
	0, 491, 492, 541, 493, 494, 495, 867, 0, 0,
	0, 0, 0, 865, 0, 0, 0, 0, 0, 0,
	863, 864, 922, 880, 881, 882, 2570, 2571, 891, 892,
	0, 0, 0, 890, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 973, 896, 0, 0, 0, 230, 232, 231, 233,
	234, 497, 937, 916, 948, 238, 906, 947, 946, 0,
	239, 240, 908, 907, 243, 244, 245, 898, 972, 246,
	1009, 1010, 503, 0, 247, 248, 979, 0, 960, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	982, 264, 265, 963, 961, 962, 969, 965, 964, 968,
	266, 267, 268, 269, 951, 271, 944, 943, 869, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 942,
	279, 0, 280, 0, 281, 282, 0, 283, 875, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 1000, 1001,
	887, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	941, 939, 940, 0, 299, 0, 300, 0, 0, 983,
	301, 302, 0, 303, 1007, 0, 897, 304, 0, 305,
	306, 307, 308, 974, 975, 978, 364, 985, 309, 310,
	0, 311, 312, 313, 918, 0, 0, 222, 314, 316,
	323, 0, 984, 317, 930, 921, 932, 934, 935, 936,
	931, 0, 923, 0, 324, 986, 976, 987, 325, 326,
	327, 988, 956, 957, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 1008, 989, 338, 339,
	990, 0, 340, 341, 967, 966, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 910,
	353, 991, 356, 357, 360, 361, 359, 992, 358, 866,
	223, 993, 362, 888, 977, 363, 945, 365, 366, 0,
	919, 368, 920, 0, 0, 371, 372, 373, 0, 0,
	374, 375, 523, 994, 376, 995, 1002, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 386, 1003,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 938, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 996, 415, 416, 417, 418,
	876, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 0, 436, 437, 911, 912, 914, 915, 432, 438,
	439, 440, 970, 441, 421, 422, 442, 443, 997, 444,
	445, 933, 913, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 981, 453, 454, 455, 1004, 0, 459, 460,
	458, 0, 461, 462, 463, 464, 465, 288, 909, 0,
	467, 952, 953, 954, 955, 0, 474, 0, 468, 469,
	1005, 470, 1006, 886, 471, 472, 473, 0, 475, 476,
	0, 870, 477, 478, 479, 481, 482, 480, 484, 971,
	485, 0, 917, 486, 487, 488, 537, 949, 999, 0,
	490, 489, 540, 0, 0, 0, 0, 491, 492, 541,
	493, 494, 495, 867, 0, 0, 0, 0, 0, 865,
	0, 0, 0, 0, 0, 0, 863, 864, 922, 880,
	881, 882, 878, 879, 891, 892, 0, 0, 0, 890,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 973, 896, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 937, 916,
	948, 238, 906, 947, 946, 0, 239, 240, 908, 907,
	243, 244, 245, 898, 972, 246, 1009, 1010, 503, 0,
	247, 248, 979, 0, 960, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 982, 264, 265, 963,
	961, 962, 969, 965, 964, 968, 266, 267, 268, 269,
	951, 271, 944, 943, 869, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 942, 279, 0, 280, 0,
	281, 282, 0, 283, 875, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 1000, 1001, 887, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 941, 939, 940, 0,
	299, 0, 300, 0, 0, 983, 301, 302, 0, 303,
	1007, 0, 897, 304, 0, 305, 306, 307, 308, 974,
	975, 978, 364, 985, 309, 310, 0, 311, 312, 313,
	918, 0, 0, 222, 314, 316, 323, 0, 984, 317,
	930, 921, 932, 934, 935, 936, 931, 0, 923, 0,
	324, 986, 976, 987, 325, 326, 327, 988, 956, 957,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 1008, 989, 338, 339, 990, 0, 340, 341,
	967, 966, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 910, 353, 991, 356, 357,
	360, 361, 359, 992, 358, 866, 223, 993, 362, 888,
	977, 363, 945, 365, 366, 0, 919, 368, 920, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 994,
	376, 995, 1002, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 1003, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	938, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 996, 415, 416, 417, 418, 876, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	911, 912, 914, 915, 432, 438, 439, 440, 970, 441,
	421, 422, 442, 443, 997, 444, 445, 933, 913, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 981, 453,
	454, 455, 1004, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 909, 0, 467, 952, 953, 954,
	955, 0, 474, 0, 468, 469, 1005, 470, 1006, 886,
	471, 472, 473, 0, 475, 476, 0, 870, 477, 478,
	479, 481, 482, 480, 484, 971, 485, 0, 917, 486,
	487, 488, 537, 949, 999, 0, 490, 489, 540, 0,
	0, 0, 0, 491, 492, 541, 493, 494, 495, 867,
	0, 0, 0, 0, 0, 865, 0, 0, 0, 0,
	0, 0, 2033, 2034, 922, 880, 881, 882, 878, 879,
	891, 892, 0, 0, 0, 890, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 973, 896, 0, 0, 0, 230, 232,
	231, 233, 234, 497, 937, 916, 948, 238, 906, 947,
	946, 0, 239, 240, 908, 907, 243, 244, 245, 898,
	972, 246, 1009, 1010, 503, 0, 247, 248, 979, 0,
	960, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 982, 264, 265, 963, 961, 962, 969, 965,
	964, 968, 266, 267, 268, 269, 951, 271, 944, 943,
	0, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 942, 279, 0, 280, 0, 281, 282, 0, 283,
	875, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	1000, 1001, 887, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 941, 939, 940, 0, 299, 0, 300, 0,
	0, 983, 301, 302, 0, 303, 1007, 0, 897, 304,
	0, 305, 306, 307, 308, 974, 975, 978, 364, 985,
	309, 310, 0, 311, 312, 313, 918, 0, 0, 222,
	314, 316, 323, 0, 984, 317, 930, 921, 932, 934,
	935, 936, 931, 0, 923, 0, 324, 986, 976, 987,
	325, 326, 327, 988, 956, 957, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 1008, 989,
	338, 339, 990, 0, 340, 341, 967, 966, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 910, 353, 991, 356, 357, 360, 361, 359, 992,
	358, 0, 223, 993, 362, 888, 977, 363, 945, 365,
	366, 0, 919, 368, 920, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 994, 376, 995, 1002, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 1003, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 938, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 996, 415, 416,
	417, 418, 876, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 0, 436, 437, 911, 912, 914, 915,
	432, 438, 439, 440, 970, 441, 421, 422, 442, 443,
	997, 444, 445, 933, 913, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 981, 453, 454, 455, 1004, 0,
	459, 460, 458, 0, 461, 462, 463, 464, 465, 288,
	909, 0, 467, 952, 953, 954, 955, 0, 474, 0,
	468, 469, 1005, 470, 1006, 886, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	484, 971, 485, 0, 917, 486, 487, 488, 537, 949,
	999, 0, 490, 489, 540, 0, 0, 0, 0, 491,
	492, 541, 493, 494, 495, 0, 0, 0, 0, 0,
	0, 2219, 0, 0, 0, 0, 0, 0, 2217, 2218,
	922, 880, 881, 882, 878, 879, 891, 892, 0, 0,
	0, 890, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 973,
	896, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	937, 916, 948, 238, 906, 947, 946, 0, 239, 240,
	908, 907, 243, 244, 245, 898, 972, 246, 1009, 1010,
	503, 0, 247, 248, 979, 0, 960, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 982, 264,
	265, 963, 961, 962, 969, 965, 964, 968, 266, 267,
	268, 269, 951, 271, 944, 943, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 942, 279, 0,
	280, 0, 281, 282, 0, 283, 875, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1000, 1001, 887, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 941, 939,
	940, 0, 299, 0, 300, 0, 0, 983, 301, 302,
	0, 303, 1007, 0, 897, 304, 0, 305, 306, 307,
	308, 974, 975, 978, 364, 985, 309, 310, 0, 311,
	312, 313, 918, 0, 0, 222, 314, 316, 323, 0,
	984, 317, 930, 921, 932, 934, 935, 936, 931, 0,
	923, 0, 324, 986, 976, 987, 325, 326, 327, 988,
	956, 957, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 1008, 989, 338, 339, 990, 0,
	340, 341, 967, 966, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 910, 353, 991,
	356, 357, 360, 361, 359, 992, 358, 0, 223, 993,
	362, 888, 977, 363, 945, 365, 366, 0, 919, 368,
	920, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 994, 376, 995, 1002, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 1003, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 938, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 996, 415, 416, 417, 418, 2565, 2566,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 911, 912, 914, 915, 432, 438, 439, 440,
	970, 441, 421, 422, 442, 443, 997, 444, 445, 933,
	913, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	981, 453, 454, 455, 1004, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 909, 0, 467, 952,
	953, 954, 955, 0, 474, 0, 468, 469, 1005, 470,
	1006, 886, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 484, 971, 485, 0,
	917, 486, 487, 488, 537, 949, 999, 0, 490, 489,
	540, 0, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 922, 880, 881, 882, 878, 879, 891, 0, 0,
	0, 0, 0, 0, 1786, 1787, 0, 0, 224, 225,
	226, 227, 228, 892, 229, 0, 0, 890, 0, 0,
	973, 896, 0, 0, 0, 230, 232, 231, 233, 234,
	497, 937, 916, 948, 238, 906, 947, 946, 0, 239,
	240, 908, 907, 243, 244, 245, 0, 972, 246, 1009,
	1010, 503, 0, 247, 248, 979, 0, 960, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 982,
	264, 265, 963, 961, 962, 969, 965, 964, 968, 266,
	267, 268, 269, 951, 271, 944, 943, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 942, 279,
	0, 280, 0, 281, 282, 0, 283, 507, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 1000, 1001, 887,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 941,
	939, 940, 0, 299, 0, 300, 0, 0, 983, 301,
	302, 0, 303, 1007, 0, 897, 304, 0, 305, 306,
	307, 308, 974, 975, 978, 364, 985, 309, 310, 0,
	311, 312, 313, 918, 0, 0, 222, 314, 316, 323,
	0, 984, 317, 930, 921, 932, 934, 935, 936, 931,
	0, 923, 0, 324, 986, 976, 987, 325, 326, 327,
	988, 956, 957, 0, 0, 330, 331, 332, 333, 334,
	0, 336, 335, 0, 337, 1008, 989, 338, 339, 990,
	0, 340, 341, 967, 966, 342, 343, 344, 345, 0,
	346, 347, 349, 351, 348, 350, 352, 354, 910, 353,
	991, 356, 357, 360, 361, 359, 992, 358, 0, 223,
	993, 362, 888, 977, 363, 945, 365, 366, 0, 919,
	368, 920, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 523, 994, 376, 995, 1002, 377, 370, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 386, 1003, 387,
	526, 388, 389, 0, 390, 0, 391, 392, 393, 394,
	395, 396, 397, 938, 398, 399, 0, 400, 401, 402,
	403, 404, 405, 0, 407, 408, 409, 406, 410, 411,
	412, 413, 0, 414, 996, 415, 416, 417, 418, 876,
	419, 0, 420, 424, 425, 426, 427, 428, 429, 430,
	0, 436, 437, 911, 912, 914, 915, 432, 438, 439,
	440, 970, 441, 421, 422, 442, 443, 997, 444, 445,
	933, 913, 447, 0, 448, 449, 450, 451, 423, 452,
	456, 981, 453, 454, 455, 1004, 0, 459, 460, 458,
	0, 461, 462, 463, 464, 465, 288, 909, 0, 467,
	952, 953, 954, 955, 0, 474, 0, 468, 469, 1005,
	470, 1006, 886, 471, 472, 473, 0, 475, 476, 0,
	0, 477, 478, 479, 481, 482, 480, 484, 971, 485,
	0, 917, 486, 487, 488, 537, 949, 999, 0, 490,
	489, 540, 0, 0, 0, 0, 491, 492, 541, 493,
	494, 495, 922, 880, 881, 882, 878, 879, 891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 892, 229, 0, 0, 890, 0,
	0, 973, 896, 0, 0, 0, 230, 232, 231, 233,
	234, 0, 937, 916, 948, 238, 906, 947, 946, 0,
	239, 240, 908, 907, 243, 244, 245, 898, 972, 246,
	1009, 1010, 503, 0, 247, 248, 979, 0, 960, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	982, 264, 3670, 963, 961, 962, 969, 965, 964, 968,
	266, 267, 268, 269, 951, 271, 944, 943, 869, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 942,
	279, 0, 280, 0, 281, 282, 0, 283, 875, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 1000, 1001,
	887, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	941, 939, 940, 0, 299, 0, 300, 0, 0, 983,
	301, 302, 0, 303, 1007, 0, 897, 304, 0, 305,
	306, 307, 308, 974, 975, 978, 364, 0, 309, 310,
	0, 311, 312, 313, 918, 0, 0, 222, 314, 316,
	323, 0, 984, 317, 930, 921, 932, 934, 935, 936,
	931, 0, 923, 0, 324, 0, 976, 0, 325, 326,
	327, 988, 956, 957, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 1008, 989, 338, 339,
	0, 0, 340, 341, 967, 966, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 910,
	353, 991, 356, 357, 360, 361, 359, 992, 358, 866,
	223, 0, 362, 888, 977, 363, 945, 365, 366, 0,
	919, 368, 920, 0, 0, 371, 372, 373, 0, 0,
	374, 375, 523, 994, 376, 995, 1002, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 386, 1003,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 938, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 996, 415, 416, 417, 418,
	876, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 0, 436, 437, 911, 912, 914, 915, 432, 438,
	439, 440, 970, 441, 421, 422, 442, 443, 0, 444,
	445, 933, 913, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 981, 453, 454, 455, 1004, 0, 459, 460,
	458, 0, 461, 462, 463, 464, 465, 288, 909, 0,
	467, 952, 953, 954, 955, 0, 474, 0, 468, 469,
	1005, 470, 1006, 886, 471, 472, 473, 0, 3669, 476,
	0, 870, 477, 478, 479, 481, 482, 480, 484, 971,
	485, 0, 917, 486, 487, 488, 537, 949, 999, 0,
	490, 489, 540, 0, 0, 0, 0, 491, 492, 541,
	493, 494, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 856, 0, 1047, 0, 0, 863, 864, 0, 0,
	0, 0, 0, 0, 0, 892, 0, 0, 0, 890,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 973, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 497, 498, 235, 499, 238, 236, 237, 500,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 972,
	246, 501, 502, 503, 0, 247, 248, 979, 0, 960,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 982, 264, 265, 963, 961, 962, 969, 965, 964,
	968, 266, 267, 268, 269, 270, 271, 505, 506, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 507,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 1000,
	1001, 0, 221, 0, 0, 0, 0, 0, 294, 295,
	296, 510, 297, 298, 0, 299, 0, 300, 0, 0,
	983, 301, 302, 0, 303, 1007, 0, 512, 304, 0,
	305, 306, 307, 308, 974, 975, 978, 364, 985, 309,
	310, 0, 311, 312, 313, 315, 0, 0, 222, 314,
	316, 323, 0, 984, 317, 516, 319, 318, 320, 321,
	322, 517, 0, 518, 0, 324, 986, 976, 987, 325,
	326, 327, 988, 328, 329, 0, 0, 330, 331, 332,
	333, 334, 1033, 336, 335, 0, 337, 1008, 989, 338,
	339, 990, 0, 340, 341, 967, 966, 342, 343, 344,
	345, 0, 346, 347, 349, 351, 348, 350, 352, 354,
	355, 353, 991, 356, 357, 360, 361, 359, 992, 358,
	0, 223, 993, 362, 0, 977, 363, 522, 365, 366,
	0, 367, 368, 369, 0, 1039, 371, 372, 373, 0,
	0, 374, 375, 523, 994, 376, 995, 1002, 377, 370,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 386,
	1003, 387, 526, 388, 389, 0, 390, 0, 391, 392,
	393, 394, 395, 396, 397, 527, 398, 399, 0, 400,
	401, 402, 403, 404, 405, 0, 407, 408, 409, 406,
	410, 411, 412, 413, 0, 414, 996, 415, 416, 417,
	418, 528, 1041, 0, 420, 424, 425, 426, 427, 428,
	429, 430, 187, 436, 437, 431, 433, 434, 435, 432,
	438, 439, 440, 970, 441, 421, 422, 442, 443, 997,
	444, 445, 529, 446, 447, 0, 448, 449, 450, 451,
	423, 452, 456, 457, 453, 454, 455, 1004, 0, 459,
	460, 458, 189, 461, 462, 463, 464, 465, 288, 466,
	0, 467, 531, 532, 533, 534, 0, 474, 0, 468,
	469, 1005, 470, 1006, 0, 471, 472, 473, 0, 475,
	476, 0, 0, 477, 478, 479, 481, 482, 480, 484,
	971, 485, 0, 483, 486, 487, 488, 1358, 538, 539,
	0, 490, 489, 540, 1047, 0, 0, 181, 491, 492,
	541, 493, 494, 495, 0, 182, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 973, 1037, 0, 1656, 0, 230, 232,
	231, 233, 234, 497, 498, 235, 499, 238, 236, 237,
	500, 0, 239, 240, 241, 242, 243, 244, 245, 0,
	972, 246, 501, 502, 503, 0, 247, 248, 979, 0,
	960, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 982, 264, 265, 963, 961, 962, 969, 965,
	964, 968, 266, 267, 268, 269, 270, 271, 505, 506,
	0, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 283,
	507, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	1000, 1001, 0, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 510, 297, 298, 0, 299, 0, 300, 0,
	0, 983, 301, 302, 0, 303, 1007, 0, 512, 304,
	0, 305, 306, 307, 308, 974, 975, 978, 364, 985,
	309, 310, 0, 311, 312, 313, 315, 0, 0, 222,
	314, 316, 323, 0, 984, 317, 516, 319, 318, 320,
	321, 322, 517, 0, 518, 0, 324, 986, 976, 987,
	325, 326, 327, 988, 328, 329, 0, 0, 330, 331,
	332, 333, 334, 1033, 336, 335, 0, 337, 1008, 989,
	338, 339, 990, 0, 340, 341, 967, 966, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 355, 353, 991, 356, 357, 360, 361, 359, 992,
	358, 0, 223, 993, 362, 0, 977, 363, 522, 365,
	366, 0, 367, 368, 369, 0, 1039, 371, 372, 373,
	0, 0, 374, 375, 523, 994, 376, 995, 1002, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 1003, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 527, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 996, 415, 416,
	417, 418, 528, 1041, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 187, 436, 437, 431, 433, 434, 435,
	432, 438, 439, 440, 970, 441, 421, 422, 442, 443,
	997, 444, 445, 529, 446, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 457, 453, 454, 455, 1004, 0,
	459, 460, 458, 189, 461, 462, 463, 464, 465, 288,
	466, 0, 467, 531, 532, 533, 534, 0, 474, 0,
	468, 469, 1005, 470, 1006, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	484, 971, 485, 0, 483, 486, 487, 488, 1358, 538,
	539, 0, 490, 489, 540, 2718, 0, 1047, 181, 491,
	492, 541, 493, 494, 495, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 1037, 973, 1656, 0, 0,
	0, 230, 232, 231, 233, 234, 497, 498, 235, 499,
	238, 236, 237, 500, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 972, 246, 501, 502, 503, 0, 247,
	248, 979, 0, 960, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 982, 264, 265, 963, 961,
	962, 969, 965, 964, 968, 266, 267, 268, 269, 270,
	271, 505, 506, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 507, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 1000, 1001, 0, 221, 0, 0, 0,
	0, 0, 294, 295, 296, 510, 297, 298, 0, 299,
	0, 300, 0, 0, 983, 301, 302, 0, 303, 1007,
	0, 512, 304, 0, 305, 306, 307, 308, 974, 975,
	978, 364, 985, 309, 310, 0, 311, 312, 313, 315,
	0, 0, 222, 314, 316, 323, 0, 984, 317, 516,
	319, 318, 320, 321, 322, 517, 0, 518, 0, 324,
	986, 976, 987, 325, 326, 327, 988, 328, 329, 0,
	0, 330, 331, 332, 333, 334, 1033, 336, 335, 0,
	337, 1008, 989, 338, 339, 990, 0, 340, 341, 967,
	966, 342, 343, 344, 345, 0, 346, 347, 349, 351,
	348, 350, 352, 354, 355, 353, 991, 356, 357, 360,
	361, 359, 992, 358, 0, 223, 993, 362, 0, 977,
	363, 522, 365, 366, 0, 367, 368, 369, 0, 1039,
	371, 372, 373, 0, 0, 374, 375, 523, 994, 376,
	995, 1002, 377, 370, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 386, 1003, 387, 526, 388, 389, 0,
	390, 0, 391, 392, 393, 394, 395, 396, 397, 527,
	398, 399, 0, 400, 401, 402, 403, 404, 405, 0,
	407, 408, 409, 406, 410, 411, 412, 413, 0, 414,
	996, 415, 416, 417, 418, 528, 1041, 0, 420, 424,
	425, 426, 427, 428, 429, 430, 0, 436, 437, 431,
	433, 434, 435, 432, 438, 439, 440, 970, 441, 421,
	422, 442, 443, 997, 444, 445, 529, 446, 447, 0,
	448, 449, 450, 451, 423, 452, 456, 457, 453, 454,
	455, 1004, 0, 459, 460, 458, 0, 461, 462, 463,
	464, 465, 288, 466, 0, 467, 531, 532, 533, 534,
	0, 474, 0, 468, 469, 1005, 470, 1006, 0, 471,
	472, 473, 0, 475, 476, 0, 0, 477, 478, 479,
	481, 482, 480, 484, 971, 485, 0, 483, 486, 487,
	488, 537, 538, 539, 0, 490, 489, 540, 1029, 0,
	1047, 0, 491, 492, 541, 493, 494, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 1037, 973,
	1035, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	498, 235, 499, 238, 236, 237, 500, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 972, 246, 501, 502,
	503, 0, 247, 248, 979, 0, 960, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 982, 264,
	265, 963, 961, 962, 969, 965, 964, 968, 266, 267,
	268, 269, 270, 271, 505, 506, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 507, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 1000, 1001, 0, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 510, 297,
	298, 0, 299, 0, 300, 0, 0, 983, 301, 302,
	0, 303, 1007, 0, 512, 304, 0, 305, 306, 307,
	308, 974, 975, 978, 364, 985, 309, 310, 0, 311,
	312, 313, 315, 0, 0, 222, 314, 316, 323, 0,
	984, 317, 516, 319, 318, 320, 321, 322, 517, 0,
	518, 0, 324, 986, 976, 987, 325, 326, 327, 988,
	328, 329, 0, 0, 330, 331, 332, 333, 334, 1033,
	336, 335, 0, 337, 1008, 989, 338, 339, 990, 0,
	340, 341, 967, 966, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 355, 353, 991,
	356, 357, 360, 361, 359, 992, 358, 0, 223, 993,
	362, 0, 977, 363, 522, 365, 366, 0, 367, 368,
	369, 0, 1039, 371, 372, 373, 0, 0, 374, 375,
	523, 994, 376, 995, 1002, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 1003, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 527, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 996, 415, 416, 417, 418, 528, 1041,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 431, 433, 434, 435, 432, 438, 439, 440,
	970, 441, 421, 422, 442, 443, 997, 444, 445, 529,
	446, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	457, 453, 454, 455, 1004, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 466, 0, 467, 531,
	532, 533, 534, 0, 474, 0, 468, 469, 1005, 470,
	1006, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 484, 971, 485, 0,
	483, 486, 487, 488, 537, 538, 539, 0, 490, 489,
	540, 1047, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	973, 1037, 0, 1035, 0, 230, 232, 231, 233, 234,
	497, 498, 235, 499, 238, 236, 237, 500, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 972, 246, 501,
	502, 503, 0, 247, 248, 979, 0, 960, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 982,
	264, 265, 963, 961, 962, 969, 965, 964, 968, 266,
	267, 268, 269, 270, 271, 505, 506, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 507, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 1000, 1001, 0,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 510,
	297, 298, 0, 299, 0, 300, 0, 0, 983, 301,
	302, 0, 303, 1007, 0, 512, 304, 0, 305, 306,
	307, 308, 974, 975, 978, 364, 985, 309, 310, 0,
	311, 312, 313, 315, 0, 0, 222, 314, 316, 323,
	0, 984, 317, 516, 319, 318, 320, 321, 322, 517,
	0, 518, 0, 324, 986, 976, 987, 325, 326, 327,
	988, 328, 329, 0, 0, 330, 331, 332, 333, 334,
	1033, 336, 335, 0, 337, 1008, 989, 338, 339, 990,
	0, 340, 341, 967, 966, 342, 343, 344, 345, 0,
	346, 347, 349, 351, 348, 350, 352, 354, 355, 353,
	991, 356, 357, 360, 361, 359, 992, 358, 0, 223,
	993, 362, 0, 977, 363, 522, 365, 366, 0, 367,
	368, 369, 0, 1039, 371, 372, 373, 0, 0, 374,
	375, 523, 994, 376, 995, 1002, 377, 370, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 386, 1003, 387,
	526, 388, 389, 0, 390, 0, 391, 392, 393, 394,
	395, 396, 397, 527, 398, 399, 0, 400, 401, 402,
	403, 404, 405, 0, 407, 408, 409, 406, 410, 411,
	412, 413, 0, 414, 996, 415, 416, 417, 418, 528,
	1041, 0, 420, 424, 425, 426, 427, 428, 429, 430,
	0, 436, 437, 431, 433, 434, 435, 432, 438, 439,
	440, 970, 441, 421, 422, 442, 443, 997, 444, 445,
	529, 446, 447, 0, 448, 449, 450, 451, 423, 452,
	456, 457, 453, 454, 455, 1004, 0, 459, 460, 458,
	0, 461, 462, 463, 464, 465, 288, 466, 0, 467,
	531, 532, 533, 534, 0, 474, 0, 468, 469, 1005,
	470, 1006, 0, 471, 472, 473, 0, 475, 476, 0,
	0, 477, 478, 479, 481, 482, 480, 484, 971, 485,
	0, 483, 486, 487, 488, 537, 538, 539, 0, 490,
	489, 540, 1047, 0, 0, 0, 491, 492, 541, 493,
	494, 495, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 973, 1037, 0, 1035, 0, 230, 232, 231, 233,
	234, 497, 498, 235, 499, 238, 236, 237, 500, 0,
	239, 240, 241, 242, 243, 244, 245, 0, 972, 246,
	501, 502, 503, 0, 247, 248, 979, 0, 960, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	982, 264, 265, 963, 961, 962, 969, 965, 964, 968,
	266, 267, 268, 269, 270, 271, 505, 506, 0, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 283, 507, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 1000, 1001,
	0, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	510, 297, 298, 0, 299, 0, 300, 0, 0, 983,
	301, 302, 0, 303, 1007, 0, 512, 304, 0, 305,
	306, 307, 308, 974, 975, 978, 364, 985, 309, 310,
	0, 311, 312, 313, 315, 0, 0, 222, 314, 316,
	323, 0, 984, 317, 516, 319, 318, 320, 321, 322,
	517, 0, 518, 0, 324, 986, 976, 987, 325, 326,
	327, 988, 328, 329, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 1008, 989, 338, 339,
	990, 0, 340, 341, 967, 966, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 355,
	353, 991, 356, 357, 360, 361, 359, 992, 358, 0,
	223, 993, 362, 0, 977, 363, 522, 365, 366, 0,
	367, 368, 369, 0, 0, 371, 372, 373, 0, 0,
	374, 375, 523, 994, 376, 995, 1002, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 386, 1003,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 527, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 996, 415, 416, 417, 418,
	528, 1041, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 0, 436, 437, 431, 433, 434, 435, 432, 438,
	439, 440, 970, 441, 421, 422, 442, 443, 997, 444,
	445, 529, 446, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 457, 453, 454, 455, 1004, 0, 459, 460,
	458, 0, 461, 462, 463, 464, 465, 288, 466, 0,
	467, 531, 532, 533, 534, 0, 474, 0, 468, 469,
	1005, 470, 1006, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 484, 971,
	485, 0, 483, 486, 487, 488, 537, 538, 539, 0,
	490, 489, 540, 856, 0, 1223, 0, 491, 492, 541,
	493, 494, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 496, 1557, 0, 0, 0, 230,
	232, 231, 233, 234, 497, 498, 235, 499, 238, 236,
	237, 500, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 501, 502, 503, 0, 247, 248, 504,
	0, 1114, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 982, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 505,
	506, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 507, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 508, 509, 0, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 510, 297, 298, 0, 299, 0, 300,
	0, 0, 983, 301, 302, 0, 303, 511, 0, 512,
	304, 0, 305, 306, 307, 308, 513, 514, 515, 364,
	985, 309, 310, 0, 311, 312, 313, 315, 0, 0,
	0, 314, 316, 323, 0, 984, 317, 516, 319, 318,
	320, 321, 322, 517, 0, 518, 0, 324, 986, 519,
	987, 325, 326, 327, 988, 328, 329, 0, 0, 330,
	331, 332, 333, 334, 0, 336, 335, 0, 337, 520,
	989, 338, 339, 990, 0, 340, 341, 0, 0, 342,
	343, 344, 345, 0, 346, 347, 349, 351, 348, 350,
	352, 354, 355, 353, 991, 356, 357, 360, 361, 359,
	992, 358, 0, 0, 993, 362, 0, 521, 363, 522,
	365, 366, 0, 367, 368, 369, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 523, 994, 376, 995, 524,
	377, 370, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 386, 525, 387, 526, 388, 389, 0, 390, 0,
	391, 392, 393, 394, 395, 396, 397, 527, 398, 399,
	0, 400, 401, 402, 403, 404, 405, 0, 407, 408,
	409, 406, 410, 411, 412, 413, 0, 414, 996, 415,
	416, 417, 418, 528, 419, 0, 420, 424, 425, 426,
	427, 428, 429, 430, 187, 436, 437, 431, 433, 434,
	435, 432, 438, 439, 440, 0, 441, 421, 422, 442,
	443, 997, 444, 445, 529, 446, 447, 0, 448, 449,
	450, 451, 423, 452, 456, 457, 453, 454, 455, 530,
	0, 459, 460, 458, 189, 461, 462, 463, 464, 465,
	288, 466, 0, 467, 531, 532, 533, 534, 0, 474,
	0, 468, 469, 535, 470, 536, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 484, 0, 485, 0, 483, 486, 487, 488, 1358,
	538, 539, 0, 490, 489, 540, 1355, 0, 1223, 181,
	491, 492, 541, 493, 494, 495, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 496, 156, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 0, 246, 501, 502, 503, 0,
	247, 248, 504, 0, 1114, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 982, 264, 265, 0,
	0, 0, 0, 0, 0, 0, 266, 267, 268, 269,
	270, 271, 505, 506, 0, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 508, 509, 0, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 0, 300, 0, 0, 983, 301, 302, 0, 303,
	511, 0, 512, 304, 0, 305, 306, 307, 308, 513,
	514, 515, 364, 985, 309, 310, 0, 311, 312, 313,
	315, 0, 0, 0, 314, 316, 323, 0, 984, 317,
	516, 319, 318, 320, 321, 322, 517, 0, 518, 0,
	324, 986, 519, 987, 325, 326, 327, 988, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 520, 989, 338, 339, 990, 0, 340, 341,
	0, 0, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 353, 991, 356, 357,
	360, 361, 359, 992, 358, 0, 0, 993, 362, 0,
	521, 363, 522, 365, 366, 0, 367, 368, 369, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 994,
	376, 995, 524, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 525, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 996, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 187, 436, 437,
	431, 433, 434, 435, 432, 438, 439, 440, 0, 441,
	421, 422, 442, 443, 997, 444, 445, 529, 446, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 530, 0, 459, 460, 458, 189, 461, 462,
	463, 464, 465, 288, 466, 0, 467, 531, 532, 533,
	534, 0, 474, 0, 468, 469, 535, 470, 536, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 484, 0, 485, 0, 483, 486,
	487, 488, 1358, 538, 539, 0, 490, 489, 540, 0,
	0, 0, 181, 491, 492, 541, 493, 494, 495, 0,
	182, 0, 0, 0, 0, 1223, 1222, 0, 0, 0,
	0, 1220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 497, 498, 235, 499, 238, 236,
	237, 500, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 501, 502, 503, 0, 247, 248, 504,
	0, 1114, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 982, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 505,
	506, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 507, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 508, 509, 0, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 510, 297, 298, 0, 299, 0, 300,
	0, 0, 983, 301, 302, 0, 303, 511, 0, 512,
	304, 0, 305, 306, 307, 308, 513, 514, 515, 364,
	985, 309, 310, 0, 311, 312, 313, 315, 0, 0,
	0, 314, 316, 323, 0, 984, 317, 516, 319, 318,
	320, 321, 322, 517, 0, 518, 0, 324, 986, 519,
	987, 325, 326, 327, 988, 328, 329, 0, 0, 330,
	331, 332, 333, 334, 0, 336, 335, 0, 337, 520,
	989, 338, 339, 990, 0, 340, 341, 0, 0, 342,
	343, 344, 345, 0, 346, 347, 349, 351, 348, 350,
	352, 354, 355, 353, 991, 356, 357, 360, 361, 359,
	992, 358, 0, 0, 993, 362, 0, 521, 363, 522,
	365, 366, 0, 367, 368, 369, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 523, 994, 376, 995, 524,
	377, 370, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 386, 525, 387, 526, 388, 389, 0, 390, 0,
	391, 392, 393, 394, 395, 396, 397, 527, 398, 399,
	0, 400, 401, 402, 403, 404, 405, 0, 407, 408,
	409, 406, 410, 411, 412, 413, 0, 414, 996, 415,
	416, 417, 418, 528, 419, 0, 420, 424, 425, 426,
	427, 428, 429, 430, 0, 436, 437, 431, 433, 434,
	435, 432, 438, 439, 440, 0, 441, 421, 422, 442,
	443, 997, 444, 445, 529, 446, 447, 0, 448, 449,
	450, 451, 423, 452, 456, 457, 453, 454, 455, 530,
	0, 459, 460, 458, 0, 461, 462, 463, 464, 465,
	288, 466, 0, 467, 531, 532, 533, 534, 0, 474,
	0, 468, 469, 535, 470, 536, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 484, 0, 485, 0, 483, 486, 487, 488, 537,
	538, 539, 0, 490, 489, 540, 0, 0, 0, 0,
	491, 492, 541, 493, 494, 495, 1223, 1222, 0, 0,
	0, 0, 1220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 2924, 229,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 498, 235, 499, 238,
	236, 237, 500, 0, 239, 240, 241, 242, 243, 244,
	245, 0, 0, 246, 501, 502, 503, 0, 247, 248,
	504, 0, 1114, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 982, 264, 265, 0, 0, 0,
	0, 0, 0, 0, 266, 267, 268, 269, 270, 271,
	505, 506, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 283, 507, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 508, 509, 0, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 510, 297, 298, 0, 299, 0,
	300, 0, 0, 983, 301, 302, 0, 303, 511, 0,
	512, 304, 0, 305, 306, 307, 308, 513, 514, 515,
	364, 985, 309, 310, 0, 311, 312, 313, 315, 0,
	0, 0, 314, 316, 323, 0, 984, 317, 516, 319,
	318, 320, 321, 322, 517, 0, 518, 0, 324, 986,
	519, 987, 325, 326, 327, 988, 328, 329, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	520, 989, 338, 339, 990, 0, 340, 341, 0, 0,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 355, 353, 991, 356, 357, 360, 361,
	359, 992, 358, 0, 0, 993, 362, 0, 521, 363,
	522, 365, 366, 0, 367, 368, 369, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 994, 376, 995,
	524, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 525, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 527, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 996,
	415, 416, 417, 418, 528, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 431, 433,
	434, 435, 432, 438, 439, 440, 0, 441, 421, 422,
	442, 443, 997, 444, 445, 529, 446, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 457, 453, 454, 455,
	530, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 466, 0, 467, 531, 532, 533, 534, 0,
	474, 0, 468, 469, 535, 470, 536, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 484, 0, 485, 0, 483, 486, 487, 488,
	537, 538, 539, 0, 490, 489, 540, 0, 0, 0,
	0, 491, 492, 541, 493, 494, 495, 1223, 1222, 0,
	0, 0, 0, 1220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 1229,
	229, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 497, 498, 235, 499,
	238, 236, 237, 500, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 501, 502, 503, 0, 247,
	248, 504, 0, 1114, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 982, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 505, 506, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 507, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 508, 509, 0, 221, 0, 0, 0,
	0, 0, 294, 295, 296, 510, 297, 298, 0, 299,
	0, 300, 0, 0, 983, 301, 302, 0, 303, 511,
	0, 512, 304, 0, 305, 306, 307, 308, 513, 514,
	515, 364, 985, 309, 310, 0, 311, 312, 313, 315,
	0, 0, 0, 314, 316, 323, 0, 984, 317, 516,
	319, 318, 320, 321, 322, 517, 0, 518, 0, 324,
	986, 519, 987, 325, 326, 327, 988, 328, 329, 0,
	0, 330, 331, 332, 333, 334, 0, 336, 335, 0,
	337, 520, 989, 338, 339, 990, 0, 340, 341, 0,
	0, 342, 343, 344, 345, 0, 346, 347, 349, 351,
	348, 350, 352, 354, 355, 353, 991, 356, 357, 360,
	361, 359, 992, 358, 0, 0, 993, 362, 0, 521,
	363, 522, 365, 366, 0, 367, 368, 369, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 523, 994, 376,
	995, 524, 377, 370, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 386, 525, 387, 526, 388, 389, 0,
	390, 0, 391, 392, 393, 394, 395, 396, 397, 527,
	398, 399, 0, 400, 401, 402, 403, 404, 405, 0,
	407, 408, 409, 406, 410, 411, 412, 413, 0, 414,
	996, 415, 416, 417, 418, 528, 419, 0, 420, 424,
	425, 426, 427, 428, 429, 430, 0, 436, 437, 431,
	433, 434, 435, 432, 438, 439, 440, 0, 441, 421,
	422, 442, 443, 997, 444, 445, 529, 446, 447, 0,
	448, 449, 450, 451, 423, 452, 456, 457, 453, 454,
	455, 530, 0, 459, 460, 458, 0, 461, 462, 463,
	464, 465, 288, 466, 0, 467, 531, 532, 533, 534,
	0, 474, 0, 468, 469, 535, 470, 536, 0, 471,
	472, 473, 0, 475, 476, 0, 0, 477, 478, 479,
	481, 482, 480, 484, 0, 485, 0, 483, 486, 487,
	488, 537, 538, 539, 0, 490, 489, 540, 1047, 0,
	0, 0, 491, 492, 541, 493, 494, 495, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 973, 0, 0,
	1364, 0, 230, 232, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 972, 246, 501, 502, 503, 0,
	247, 248, 979, 0, 960, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 982, 264, 265, 963,
	961, 962, 969, 965, 964, 968, 266, 267, 268, 269,
	270, 271, 505, 506, 0, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 1000, 1001, 0, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 0, 300, 0, 0, 983, 301, 302, 0, 303,
	1007, 0, 512, 304, 0, 305, 306, 307, 308, 974,
	975, 978, 364, 985, 309, 310, 0, 311, 312, 313,
	315, 0, 0, 222, 314, 316, 323, 0, 984, 317,
	516, 319, 318, 320, 321, 322, 517, 0, 518, 0,
	324, 986, 976, 987, 325, 326, 327, 988, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 1008, 989, 338, 339, 990, 0, 340, 341,
	967, 966, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 353, 991, 356, 357,
	360, 361, 359, 992, 358, 0, 223, 993, 362, 0,
	977, 363, 522, 365, 366, 0, 367, 368, 369, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 994,
	376, 995, 1002, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 1003, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 996, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	431, 433, 434, 435, 432, 438, 439, 440, 970, 441,
	421, 422, 442, 443, 997, 444, 445, 529, 446, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 1004, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 466, 0, 467, 531, 532, 533,
	534, 0, 474, 0, 468, 469, 1005, 470, 1006, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 484, 971, 485, 0, 483, 486,
	487, 488, 537, 538, 539, 0, 490, 489, 540, 856,
	0, 218, 0, 491, 492, 541, 493, 494, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	496, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	497, 498, 235, 499, 238, 236, 237, 500, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 501,
	502, 503, 0, 247, 248, 504, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 505, 506, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 507, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 508, 509, 0,
	0, 0, 0, 0, 0, 0, 294, 295, 296, 510,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	302, 0, 303, 511, 0, 512, 304, 0, 305, 306,
	307, 308, 513, 514, 515, 364, 0, 309, 310, 0,
	311, 312, 313, 315, 0, 0, 0, 314, 316, 323,
	0, 0, 317, 516, 319, 318, 320, 321, 322, 517,
	0, 518, 0, 324, 0, 519, 0, 325, 326, 327,
	0, 328, 329, 0, 0, 330, 331, 332, 333, 334,
	0, 336, 335, 0, 337, 520, 0, 338, 339, 0,
	0, 340, 341, 0, 0, 342, 343, 344, 345, 0,
	346, 347, 349, 351, 348, 350, 352, 354, 355, 353,
	0, 356, 357, 360, 361, 359, 0, 358, 0, 0,
	0, 362, 0, 521, 363, 522, 365, 366, 0, 367,
	368, 369, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 523, 0, 376, 0, 524, 377, 370, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 386, 525, 387,
	526, 388, 389, 0, 390, 0, 391, 392, 393, 394,
	395, 396, 397, 527, 398, 399, 0, 400, 401, 402,
	403, 404, 405, 0, 407, 408, 409, 406, 410, 411,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 528,
	419, 0, 420, 424, 425, 426, 427, 428, 429, 430,
	187, 436, 437, 431, 433, 434, 435, 432, 438, 439,
	440, 0, 441, 421, 422, 442, 443, 0, 444, 445,
	529, 446, 447, 0, 448, 449, 450, 451, 423, 452,
	456, 457, 453, 454, 455, 530, 0, 459, 460, 458,
	189, 461, 462, 463, 464, 465, 288, 466, 0, 467,
	531, 532, 533, 534, 0, 474, 0, 468, 469, 535,
	470, 536, 0, 471, 472, 473, 0, 475, 476, 0,
	0, 477, 478, 479, 481, 482, 480, 484, 0, 485,
	0, 483, 486, 487, 488, 1358, 538, 539, 0, 490,
	489, 540, 218, 0, 0, 181, 491, 492, 541, 493,
	494, 495, 0, 182, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 496, 0, 0, 156, 0, 230, 232, 231, 233,
	234, 497, 498, 235, 499, 238, 236, 237, 500, 0,
	239, 240, 241, 242, 243, 244, 245, 0, 0, 246,
	501, 502, 503, 0, 247, 248, 504, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	0, 264, 265, 0, 0, 0, 0, 0, 0, 0,
	266, 267, 268, 269, 270, 271, 505, 506, 0, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 283, 507, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 508, 509,
	0, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	510, 297, 298, 0, 299, 0, 300, 0, 0, 0,
	301, 302, 0, 303, 511, 0, 512, 304, 0, 305,
	306, 307, 308, 513, 514, 515, 364, 0, 309, 310,
	0, 311, 312, 313, 315, 0, 0, 222, 314, 316,
	323, 0, 0, 317, 516, 319, 318, 320, 321, 322,
	517, 0, 518, 0, 324, 0, 519, 0, 325, 326,
	327, 0, 328, 329, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 520, 0, 338, 339,
	0, 0, 340, 341, 0, 0, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 355,
	353, 0, 356, 357, 360, 361, 359, 0, 358, 0,
	223, 0, 362, 0, 521, 363, 522, 365, 366, 0,
	367, 368, 369, 0, 0, 371, 372, 373, 0, 0,
	374, 375, 523, 0, 376, 0, 524, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 386, 525,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 527, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	528, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 0, 436, 437, 431, 433, 434, 435, 432, 438,
	439, 440, 0, 441, 421, 422, 442, 443, 0, 444,
	445, 529, 446, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 457, 453, 454, 455, 530, 0, 459, 460,
	458, 0, 461, 462, 463, 464, 465, 288, 466, 0,
	467, 531, 532, 533, 534, 0, 474, 0, 468, 469,
	535, 470, 536, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 484, 0,
	485, 0, 483, 486, 487, 488, 537, 538, 539, 0,
	490, 489, 540, 1309, 0, 218, 0, 491, 492, 541,
	493, 494, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 496, 1670, 0, 0, 0, 230,
	232, 231, 233, 234, 497, 498, 235, 499, 238, 236,
	237, 500, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 501, 502, 503, 0, 247, 248, 504,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 505,
	506, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 507, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 508, 509, 0, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 510, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 0, 303, 511, 0, 512,
	304, 0, 305, 306, 307, 308, 513, 514, 515, 364,
	0, 309, 310, 0, 311, 312, 313, 315, 0, 0,
	222, 314, 316, 323, 0, 0, 317, 516, 319, 318,
	320, 321, 322, 517, 0, 518, 0, 324, 0, 519,
	0, 325, 326, 327, 0, 328, 329, 0, 0, 330,
	331, 332, 333, 334, 0, 336, 335, 0, 337, 520,
	0, 338, 339, 0, 0, 340, 341, 0, 0, 342,
	343, 344, 345, 0, 346, 347, 349, 351, 348, 350,
	352, 354, 355, 353, 0, 356, 357, 360, 361, 359,
	0, 358, 0, 223, 0, 362, 0, 521, 363, 522,
	365, 366, 0, 367, 368, 369, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 523, 0, 376, 0, 524,
	377, 370, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 386, 525, 387, 526, 388, 389, 0, 390, 0,
	391, 392, 393, 394, 395, 396, 397, 527, 398, 399,
	0, 400, 401, 402, 403, 404, 405, 0, 407, 408,
	409, 406, 410, 411, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 528, 419, 0, 420, 424, 425, 426,
	427, 428, 429, 430, 0, 436, 437, 431, 433, 434,
	435, 432, 438, 439, 440, 0, 441, 421, 422, 442,
	443, 0, 444, 445, 529, 446, 447, 0, 448, 449,
	450, 451, 423, 452, 456, 457, 453, 454, 455, 530,
	0, 459, 460, 458, 0, 461, 462, 463, 464, 465,
	288, 466, 0, 467, 531, 532, 533, 534, 0, 474,
	0, 468, 469, 535, 470, 536, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 484, 0, 485, 0, 483, 486, 487, 488, 537,
	538, 539, 0, 490, 489, 540, 218, 0, 0, 0,
	491, 492, 541, 493, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 496, 1313, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 498, 235, 499, 238,
	236, 237, 500, 0, 239, 240, 241, 242, 243, 244,
	245, 0, 0, 246, 501, 502, 503, 0, 247, 248,
	504, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 0, 264, 265, 0, 0, 0,
	0, 0, 0, 0, 266, 267, 268, 269, 270, 271,
	505, 506, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 283, 507, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 508, 509, 0, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 510, 297, 298, 0, 299, 0,
	300, 0, 0, 0, 301, 302, 0, 303, 511, 0,
	512, 304, 0, 305, 306, 307, 308, 513, 514, 515,
	364, 0, 309, 310, 0, 311, 312, 313, 315, 0,
	0, 222, 314, 316, 323, 0, 0, 317, 516, 319,
	318, 320, 321, 322, 517, 0, 518, 0, 324, 0,
	519, 0, 325, 326, 327, 0, 328, 329, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	520, 0, 338, 339, 0, 0, 340, 341, 0, 0,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 355, 353, 0, 356, 357, 360, 361,
	359, 0, 358, 0, 223, 0, 362, 0, 521, 363,
	522, 365, 366, 0, 367, 368, 369, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 0, 376, 0,
	524, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 525, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 527, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 528, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 431, 433,
	434, 435, 432, 438, 439, 440, 0, 441, 421, 422,
	442, 443, 0, 444, 445, 529, 446, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 457, 453, 454, 455,
	530, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 466, 0, 467, 531, 532, 533, 534, 0,
	474, 0, 468, 469, 535, 470, 536, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 484, 0, 485, 0, 483, 486, 487, 488,
	537, 538, 539, 0, 490, 489, 540, 218, 0, 0,
	0, 491, 492, 541, 493, 494, 495, 0, 0, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 496, 2873, 0, 0,
	0, 230, 232, 231, 233, 234, 497, 498, 235, 499,
	238, 236, 237, 500, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 501, 502, 503, 0, 247,
	248, 504, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 505, 506, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 507, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 508, 509, 0, 221, 0, 0, 0,
	0, 0, 294, 295, 296, 510, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 302, 0, 303, 511,
	0, 512, 304, 0, 305, 306, 307, 308, 513, 514,
	515, 364, 0, 309, 310, 0, 311, 312, 313, 315,
	0, 0, 222, 314, 316, 323, 0, 0, 317, 516,
	319, 318, 320, 321, 322, 517, 0, 518, 0, 324,
	0, 519, 0, 325, 326, 327, 0, 328, 329, 0,
	0, 330, 331, 332, 333, 334, 0, 336, 335, 0,
	337, 520, 0, 338, 339, 0, 0, 340, 341, 0,
	0, 342, 343, 344, 345, 0, 346, 347, 349, 351,
	348, 350, 352, 354, 355, 353, 0, 356, 357, 360,
	361, 359, 0, 358, 0, 223, 0, 362, 0, 521,
	363, 522, 365, 366, 0, 367, 368, 369, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 523, 0, 376,
	0, 524, 377, 370, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 386, 525, 387, 526, 388, 389, 0,
	390, 0, 391, 392, 393, 394, 395, 396, 397, 527,
	398, 399, 0, 400, 401, 402, 403, 404, 405, 0,
	407, 408, 409, 406, 410, 411, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 528, 419, 0, 420, 424,
	425, 426, 427, 428, 429, 430, 0, 436, 437, 431,
	433, 434, 435, 432, 438, 439, 440, 0, 441, 421,
	422, 442, 443, 0, 444, 445, 529, 446, 447, 0,
	448, 449, 450, 451, 423, 452, 456, 457, 453, 454,
	455, 530, 0, 459, 460, 458, 0, 461, 462, 463,
	464, 465, 288, 466, 0, 467, 531, 532, 533, 534,
	0, 474, 0, 468, 469, 535, 470, 536, 0, 471,
	472, 473, 0, 475, 476, 0, 0, 477, 478, 479,
	481, 482, 480, 484, 0, 485, 0, 483, 486, 487,
	488, 537, 538, 539, 0, 490, 489, 540, 218, 0,
	0, 0, 491, 492, 541, 493, 494, 495, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 496, 1313, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 0, 246, 501, 502, 503, 0,
	247, 248, 504, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 0, 264, 265, 0,
	0, 0, 0, 0, 0, 0, 266, 267, 268, 269,
	270, 271, 505, 506, 0, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 508, 509, 0, 0, 0, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 0, 300, 0, 0, 0, 301, 302, 0, 303,
	511, 0, 512, 304, 0, 305, 306, 307, 308, 513,
	514, 515, 364, 0, 309, 310, 0, 311, 312, 313,
	315, 0, 0, 0, 314, 316, 323, 0, 0, 317,
	516, 319, 318, 320, 321, 322, 517, 0, 518, 0,
	324, 0, 519, 0, 325, 326, 327, 0, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 520, 0, 338, 339, 0, 0, 340, 341,
	0, 0, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 353, 0, 356, 357,
	360, 361, 359, 0, 358, 0, 0, 0, 362, 0,
	521, 363, 522, 365, 366, 0, 367, 368, 369, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 0,
	376, 0, 524, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 525, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	431, 433, 434, 435, 432, 438, 439, 440, 0, 441,
	421, 422, 442, 443, 0, 444, 445, 529, 446, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 530, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 466, 0, 467, 531, 532, 533,
	534, 0, 474, 0, 468, 469, 535, 470, 536, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 484, 0, 485, 0, 483, 486,
	487, 488, 537, 538, 539, 0, 490, 489, 540, 218,
	0, 0, 0, 491, 492, 541, 493, 494, 495, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 496, 0,
	0, 2470, 0, 230, 232, 231, 233, 234, 497, 498,
	235, 499, 238, 236, 237, 500, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 501, 502, 503,
	0, 247, 248, 504, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 505, 506, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 507, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 508, 509, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 510, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 302, 0,
	303, 511, 0, 512, 304, 0, 305, 306, 307, 308,
	513, 514, 515, 364, 0, 309, 310, 0, 311, 312,
	313, 315, 0, 0, 0, 314, 316, 323, 0, 0,
	317, 516, 319, 318, 320, 321, 322, 517, 0, 518,
	0, 324, 0, 519, 0, 325, 326, 327, 0, 328,
	329, 0, 0, 330, 331, 332, 333, 334, 0, 336,
	335, 0, 337, 520, 0, 338, 339, 0, 0, 340,
	341, 0, 0, 342, 343, 344, 345, 0, 346, 347,
	349, 351, 348, 350, 352, 354, 355, 353, 0, 356,
	357, 360, 361, 359, 0, 358, 0, 0, 0, 362,
	0, 521, 363, 522, 365, 366, 0, 367, 368, 369,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 523,
	0, 376, 0, 524, 377, 370, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 386, 525, 387, 526, 388,
	389, 0, 390, 0, 391, 392, 393, 394, 395, 396,
	397, 527, 398, 399, 0, 400, 401, 402, 403, 404,
	405, 0, 407, 408, 409, 406, 410, 411, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 528, 419, 0,
	420, 424, 425, 426, 427, 428, 429, 430, 0, 436,
	437, 431, 433, 434, 435, 432, 438, 439, 440, 0,
	441, 421, 422, 442, 443, 0, 444, 445, 529, 446,
	447, 0, 448, 449, 450, 451, 423, 452, 456, 457,
	453, 454, 455, 530, 0, 459, 460, 458, 0, 461,
	462, 463, 464, 465, 288, 466, 0, 467, 531, 532,
	533, 534, 0, 474, 0, 468, 469, 535, 470, 536,
	0, 471, 472, 473, 0, 475, 476, 0, 0, 477,
	478, 479, 481, 482, 480, 484, 0, 485, 0, 483,
	486, 487, 488, 537, 538, 539, 0, 490, 489, 540,
	218, 0, 0, 0, 491, 492, 541, 493, 494, 495,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 496,
	0, 0, 3012, 0, 230, 232, 231, 233, 234, 497,
	498, 235, 499, 238, 236, 237, 500, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 0, 246, 501, 502,
	503, 0, 247, 248, 504, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 0, 264,
	265, 0, 0, 0, 0, 0, 0, 0, 266, 267,
	268, 269, 270, 271, 505, 506, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 507, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 508, 509, 0, 0,
	0, 0, 0, 0, 0, 294, 295, 296, 510, 297,
	298, 0, 299, 0, 300, 0, 0, 0, 301, 302,
	0, 303, 511, 0, 512, 304, 0, 305, 306, 307,
	308, 513, 514, 515, 364, 0, 309, 310, 0, 311,
	312, 313, 315, 0, 0, 0, 314, 316, 323, 0,
	0, 317, 516, 319, 318, 320, 321, 322, 517, 0,
	518, 0, 324, 0, 519, 0, 325, 326, 327, 0,
	328, 329, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 520, 0, 338, 339, 0, 0,
	340, 341, 0, 0, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 355, 353, 0,
	356, 357, 360, 361, 359, 0, 358, 0, 0, 0,
	362, 0, 521, 363, 522, 365, 366, 0, 367, 368,
	369, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 0, 376, 0, 524, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 525, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 527, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 528, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 431, 433, 434, 435, 432, 438, 439, 440,
	0, 441, 421, 422, 442, 443, 0, 444, 445, 529,
	446, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	457, 453, 454, 455, 530, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 466, 0, 467, 531,
	532, 533, 534, 0, 474, 0, 468, 469, 535, 470,
	536, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 484, 0, 485, 0,
	483, 486, 487, 488, 537, 538, 539, 0, 490, 489,
	540, 725, 0, 619, 0, 491, 492, 541, 493, 494,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 496, 1938, 0, 0, 0, 230, 232, 231,
	233, 234, 497, 498, 235, 499, 238, 236, 237, 500,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 501, 502, 503, 0, 247, 248, 504, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 625, 269, 270, 271, 505, 506, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 507,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 508,
	509, 0, 221, 0, 0, 0, 0, 0, 294, 295,
	296, 510, 297, 298, 0, 299, 0, 300, 0, 723,
	0, 301, 302, 0, 303, 511, 0, 512, 304, 0,
	305, 306, 307, 308, 513, 514, 515, 364, 0, 309,
	310, 0, 311, 312, 313, 315, 0, 0, 222, 314,
	316, 323, 0, 0, 317, 516, 319, 318, 320, 321,
	322, 517, 0, 518, 0, 324, 0, 519, 0, 325,
	326, 327, 0, 328, 329, 0, 0, 330, 331, 332,
	333, 334, 0, 336, 335, 0, 337, 520, 0, 338,
	339, 0, 0, 340, 341, 0, 0, 342, 343, 344,
	345, 0, 346, 347, 349, 351, 348, 350, 352, 354,
	355, 353, 0, 356, 357, 360, 361, 359, 0, 358,
	0, 223, 0, 362, 0, 521, 363, 522, 365, 366,
	0, 367, 368, 369, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 523, 0, 376, 0, 524, 377, 370,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 386,
	525, 387, 526, 388, 389, 0, 390, 0, 391, 392,
	393, 394, 395, 396, 397, 527, 398, 399, 0, 400,
	401, 402, 403, 404, 405, 0, 407, 408, 409, 406,
	410, 411, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 528, 419, 0, 420, 424, 425, 426, 427, 428,
	429, 430, 0, 436, 437, 431, 433, 434, 435, 432,
	438, 439, 440, 0, 441, 421, 422, 442, 443, 0,
	444, 445, 529, 446, 447, 0, 448, 449, 450, 451,
	423, 452, 456, 457, 453, 454, 455, 530, 0, 459,
	460, 458, 624, 461, 462, 463, 464, 465, 288, 466,
	0, 467, 531, 532, 533, 534, 0, 474, 0, 468,
	469, 535, 470, 536, 0, 471, 472, 473, 0, 475,
	476, 0, 0, 477, 478, 479, 481, 482, 480, 484,
	0, 485, 0, 483, 486, 487, 488, 537, 538, 539,
	0, 490, 489, 540, 0, 618, 0, 619, 491, 492,
	541, 493, 494, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 628,
	229, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 497, 498, 235, 499,
	238, 236, 237, 500, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 501, 502, 503, 0, 247,
	248, 504, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 625, 269, 270,
	271, 505, 506, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 507, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 508, 509, 0, 221, 0, 0, 0,
	0, 0, 294, 295, 296, 510, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 302, 0, 303, 511,
	0, 512, 304, 0, 305, 306, 307, 308, 513, 514,
	515, 364, 0, 309, 310, 0, 311, 312, 313, 315,
	0, 0, 222, 314, 316, 323, 0, 0, 317, 516,
	319, 318, 320, 321, 322, 517, 0, 518, 0, 324,
	0, 519, 0, 325, 326, 327, 0, 328, 329, 0,
	0, 330, 331, 332, 333, 334, 0, 336, 335, 0,
	337, 520, 0, 338, 339, 0, 0, 340, 341, 0,
	0, 342, 343, 344, 345, 0, 346, 347, 349, 351,
	348, 350, 352, 354, 355, 353, 0, 356, 357, 360,
	361, 359, 0, 358, 0, 223, 0, 362, 0, 521,
	363, 522, 365, 366, 0, 367, 368, 369, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 523, 0, 376,
	0, 524, 377, 370, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 386, 525, 387, 526, 388, 389, 0,
	390, 0, 391, 392, 393, 394, 395, 396, 397, 527,
	398, 399, 0, 400, 401, 402, 403, 404, 405, 0,
	407, 408, 409, 406, 410, 411, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 528, 419, 0, 420, 424,
	425, 426, 427, 428, 429, 430, 0, 436, 437, 431,
	433, 434, 435, 432, 438, 439, 440, 0, 441, 421,
	422, 442, 443, 0, 444, 445, 529, 446, 447, 0,
	448, 449, 450, 451, 423, 452, 456, 457, 453, 454,
	455, 530, 0, 459, 460, 458, 624, 461, 462, 463,
	464, 465, 288, 466, 0, 467, 531, 532, 533, 534,
	616, 474, 0, 468, 469, 535, 470, 536, 0, 471,
	472, 473, 0, 475, 476, 0, 0, 477, 478, 479,
	481, 482, 480, 484, 0, 485, 0, 483, 486, 487,
	488, 537, 538, 539, 0, 490, 489, 540, 0, 0,
	0, 0, 491, 492, 541, 493, 494, 495, 1223, 1222,
	0, 0, 0, 0, 1220, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 0, 246, 501, 502, 503, 0,
	247, 248, 504, 0, 1114, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 982, 264, 265, 0,
	0, 0, 0, 0, 0, 0, 266, 267, 268, 269,
	270, 271, 505, 506, 0, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 508, 509, 0, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 0, 300, 0, 0, 983, 301, 302, 0, 303,
	511, 0, 512, 304, 0, 305, 306, 307, 308, 513,
	514, 515, 364, 985, 309, 310, 0, 311, 312, 313,
	315, 0, 0, 0, 314, 316, 323, 0, 984, 317,
	516, 319, 318, 320, 321, 322, 517, 0, 518, 0,
	324, 986, 519, 987, 325, 326, 327, 988, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 520, 989, 338, 339, 990, 0, 340, 341,
	0, 0, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 353, 991, 356, 357,
	360, 361, 359, 992, 358, 0, 0, 993, 362, 3151,
	521, 363, 522, 365, 366, 0, 367, 368, 369, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 994,
	376, 995, 524, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 525, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 996, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	431, 433, 434, 435, 432, 438, 439, 440, 0, 441,
	421, 422, 442, 443, 997, 444, 445, 529, 446, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 530, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 466, 0, 467, 531, 532, 533,
	534, 0, 474, 0, 468, 469, 535, 470, 536, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 484, 0, 485, 0, 483, 486,
	487, 488, 537, 538, 539, 0, 490, 489, 540, 0,
	0, 0, 0, 491, 492, 541, 493, 494, 495, 1223,
	1222, 0, 0, 0, 0, 1220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 497, 498,
	235, 499, 238, 236, 237, 500, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 501, 502, 503,
	0, 247, 248, 504, 0, 1114, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 982, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 505, 506, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 507, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 508, 509, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 510, 297, 298,
	0, 299, 0, 300, 0, 0, 983, 301, 302, 0,
	303, 511, 0, 512, 304, 0, 305, 306, 307, 308,
	513, 514, 515, 364, 985, 309, 310, 0, 311, 312,
	313, 315, 0, 0, 0, 314, 316, 323, 0, 984,
	317, 516, 319, 318, 320, 321, 322, 517, 0, 518,
	0, 324, 986, 519, 987, 325, 326, 327, 988, 328,
	329, 0, 0, 330, 331, 332, 333, 334, 0, 336,
	335, 0, 337, 520, 989, 338, 339, 990, 0, 340,
	341, 0, 0, 342, 343, 344, 345, 0, 346, 347,
	349, 351, 348, 350, 352, 354, 355, 353, 991, 356,
	357, 360, 361, 359, 992, 358, 0, 0, 993, 362,
	2853, 521, 363, 522, 365, 366, 0, 367, 368, 369,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 523,
	994, 376, 995, 524, 377, 370, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 386, 525, 387, 526, 388,
	389, 0, 390, 0, 391, 392, 393, 394, 395, 396,
	397, 527, 398, 399, 0, 400, 401, 402, 403, 404,
	405, 0, 407, 408, 409, 406, 410, 411, 412, 413,
	0, 414, 996, 415, 416, 417, 418, 528, 419, 0,
	420, 424, 425, 426, 427, 428, 429, 430, 0, 436,
	437, 431, 433, 434, 435, 432, 438, 439, 440, 0,
	441, 421, 422, 442, 443, 997, 444, 445, 529, 446,
	447, 0, 448, 449, 450, 451, 423, 452, 456, 457,
	453, 454, 455, 530, 0, 459, 460, 458, 0, 461,
	462, 463, 464, 465, 288, 466, 0, 467, 531, 532,
	533, 534, 0, 474, 0, 468, 469, 535, 470, 536,
	0, 471, 472, 473, 0, 475, 476, 0, 0, 477,
	478, 479, 481, 482, 480, 484, 0, 485, 0, 483,
	486, 487, 488, 537, 538, 539, 619, 490, 489, 540,
	0, 0, 0, 0, 491, 492, 541, 493, 494, 495,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 498, 235, 499, 238,
	236, 237, 500, 0, 239, 240, 241, 242, 243, 244,
	245, 0, 0, 246, 501, 502, 503, 0, 247, 248,
	504, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 0, 264, 265, 0, 0, 0,
	0, 0, 0, 0, 266, 267, 625, 269, 270, 271,
	505, 506, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 283, 507, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 508, 509, 0, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 510, 297, 298, 0, 299, 0,
	300, 0, 0, 0, 301, 302, 0, 303, 511, 0,
	512, 304, 0, 305, 306, 307, 308, 513, 514, 515,
	364, 0, 309, 310, 0, 311, 312, 313, 315, 0,
	0, 222, 314, 316, 323, 0, 0, 317, 516, 319,
	318, 320, 321, 322, 517, 0, 518, 0, 324, 0,
	519, 0, 325, 326, 327, 0, 328, 329, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	520, 0, 338, 339, 0, 0, 340, 341, 0, 0,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 355, 353, 0, 356, 357, 360, 361,
	359, 0, 358, 0, 223, 0, 362, 0, 521, 363,
	522, 365, 366, 0, 367, 368, 369, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 0, 376, 0,
	524, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 525, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 527, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 0,
	1972, 416, 417, 418, 528, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 431, 433,
	434, 435, 432, 438, 439, 440, 0, 441, 421, 422,
	442, 443, 0, 444, 445, 529, 446, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 457, 453, 454, 455,
	530, 0, 459, 460, 458, 624, 461, 462, 463, 464,
	465, 288, 466, 0, 467, 531, 532, 533, 534, 0,
	474, 0, 468, 469, 535, 470, 536, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 484, 0, 485, 0, 483, 486, 487, 488,
	537, 538, 539, 0, 490, 489, 540, 619, 0, 0,
	0, 491, 492, 541, 493, 494, 495, 0, 0, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 628, 0, 0, 0, 496, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 497, 498, 235, 499,
	238, 236, 237, 500, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 501, 502, 503, 0, 247,
	248, 504, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 625, 269, 270,
	271, 505, 506, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 507, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 508, 509, 0, 221, 0, 0, 0,
	0, 0, 294, 295, 296, 510, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 302, 0, 303, 511,
	0, 512, 304, 0, 305, 306, 307, 308, 513, 514,
	515, 364, 0, 309, 310, 0, 311, 312, 313, 315,
	0, 0, 222, 314, 316, 323, 0, 0, 317, 516,
	319, 318, 320, 321, 322, 517, 0, 518, 0, 324,
	0, 519, 0, 325, 326, 327, 0, 328, 329, 0,
	0, 330, 331, 332, 333, 334, 0, 336, 335, 0,
	337, 520, 0, 338, 339, 0, 0, 340, 341, 0,
	0, 342, 343, 344, 345, 0, 346, 347, 349, 351,
	348, 350, 352, 354, 355, 353, 0, 356, 357, 360,
	361, 359, 0, 358, 0, 223, 0, 362, 0, 521,
	363, 522, 365, 366, 0, 367, 368, 369, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 523, 0, 376,
	0, 524, 377, 370, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 386, 525, 387, 526, 388, 389, 0,
	390, 0, 391, 392, 393, 394, 395, 396, 397, 527,
	398, 399, 0, 400, 401, 402, 403, 404, 405, 0,
	407, 408, 409, 406, 410, 411, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 528, 419, 0, 420, 424,
	425, 426, 427, 428, 429, 430, 0, 436, 437, 431,
	433, 434, 435, 432, 438, 439, 440, 0, 441, 421,
	422, 442, 443, 0, 444, 445, 529, 446, 447, 0,
	448, 449, 450, 451, 423, 452, 456, 457, 453, 454,
	455, 530, 0, 459, 460, 458, 624, 461, 462, 463,
	464, 465, 288, 466, 0, 467, 531, 532, 533, 534,
	0, 474, 0, 468, 469, 535, 470, 536, 0, 471,
	472, 473, 0, 475, 476, 0, 0, 477, 478, 479,
	481, 482, 480, 484, 0, 485, 0, 483, 486, 487,
	488, 537, 538, 539, 0, 490, 489, 540, 0, 0,
	0, 0, 491, 492, 541, 493, 494, 495, 1391, 0,
	1223, 1222, 0, 0, 0, 0, 1220, 0, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	498, 235, 499, 238, 236, 237, 500, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 0, 246, 501, 502,
	503, 0, 247, 248, 504, 0, 1114, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 982, 264,
	265, 0, 0, 0, 0, 0, 0, 0, 266, 267,
	268, 269, 270, 271, 505, 506, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 507, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 508, 509, 0, 221,
	0, 0, 0, 0, 0, 1390, 295, 296, 510, 297,
	298, 0, 299, 0, 300, 0, 0, 983, 301, 302,
	0, 303, 511, 0, 512, 304, 0, 305, 306, 307,
	308, 513, 514, 515, 364, 985, 309, 310, 0, 311,
	312, 313, 315, 0, 0, 0, 314, 316, 323, 0,
	984, 317, 516, 319, 318, 320, 321, 322, 517, 0,
	518, 0, 324, 986, 519, 987, 325, 326, 327, 988,
	328, 329, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 520, 989, 338, 339, 990, 0,
	340, 341, 0, 0, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 355, 353, 991,
	356, 357, 360, 361, 359, 992, 358, 0, 0, 993,
	362, 0, 521, 363, 522, 365, 366, 0, 367, 368,
	369, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 994, 376, 995, 524, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 525, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	1389, 397, 527, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 996, 415, 416, 417, 418, 528, 419,
	0, 420, 424, 425, 426, 1388, 428, 429, 430, 0,
	436, 437, 431, 433, 434, 435, 432, 438, 439, 440,
	0, 441, 421, 422, 442, 443, 997, 444, 445, 529,
	446, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	457, 453, 454, 455, 530, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 466, 0, 467, 531,
	532, 533, 534, 0, 474, 0, 468, 469, 535, 470,
	536, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 484, 0, 485, 0,
	483, 486, 487, 488, 537, 538, 539, 0, 490, 489,
	540, 0, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 1352, 0, 1223, 1222, 0, 0, 0, 0, 1220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 496, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 497, 498, 235, 499, 238, 236, 237, 500,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 501, 502, 503, 0, 247, 248, 504, 0, 1114,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 982, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 505, 506, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 507,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 508,
	509, 0, 221, 0, 0, 0, 0, 0, 294, 295,
	296, 510, 297, 298, 0, 299, 0, 300, 0, 0,
	983, 301, 302, 0, 303, 511, 0, 512, 304, 0,
	305, 306, 307, 308, 1351, 514, 515, 364, 985, 309,
	310, 0, 311, 312, 313, 315, 0, 0, 0, 314,
	316, 323, 0, 984, 317, 516, 319, 318, 320, 321,
	322, 517, 0, 518, 0, 324, 986, 519, 987, 325,
	326, 327, 988, 328, 329, 0, 0, 330, 331, 332,
	333, 334, 0, 336, 335, 0, 337, 520, 989, 338,
	339, 990, 0, 340, 341, 0, 0, 342, 343, 344,
	345, 0, 346, 347, 349, 351, 348, 350, 352, 354,
	355, 353, 991, 356, 357, 360, 361, 359, 992, 358,
	0, 0, 993, 362, 0, 521, 363, 522, 365, 366,
	0, 367, 368, 369, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 523, 994, 376, 995, 524, 377, 370,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 386,
	525, 387, 526, 388, 389, 0, 390, 0, 391, 392,
	393, 394, 395, 396, 397, 527, 398, 399, 0, 400,
	401, 402, 403, 404, 405, 0, 407, 408, 409, 406,
	410, 411, 412, 413, 0, 414, 996, 415, 416, 417,
	418, 528, 419, 0, 420, 424, 425, 426, 427, 428,
	429, 430, 0, 436, 437, 431, 433, 434, 435, 432,
	438, 439, 440, 0, 441, 421, 422, 442, 443, 997,
	444, 445, 529, 446, 447, 0, 448, 449, 450, 451,
	423, 452, 456, 457, 453, 454, 455, 530, 0, 459,
	460, 458, 0, 461, 462, 463, 464, 465, 288, 466,
	0, 467, 531, 532, 533, 534, 0, 474, 0, 468,
	469, 535, 470, 536, 0, 471, 472, 473, 0, 475,
	476, 0, 0, 477, 478, 479, 481, 482, 480, 484,
	0, 485, 0, 483, 486, 487, 488, 537, 538, 539,
	0, 490, 489, 540, 0, 0, 0, 0, 491, 492,
	541, 493, 494, 495, 1289, 0, 1223, 1222, 0, 0,
	0, 0, 1220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 498, 235, 499, 238,
	236, 237, 500, 0, 239, 240, 241, 242, 243, 244,
	245, 0, 0, 246, 501, 502, 503, 0, 247, 248,
	504, 0, 1114, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 982, 264, 265, 0, 0, 0,
	0, 0, 0, 0, 266, 267, 268, 269, 270, 271,
	505, 506, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 283, 507, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 508, 509, 0, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 510, 297, 298, 0, 299, 0,
	300, 0, 0, 983, 301, 302, 0, 303, 511, 0,
	512, 304, 0, 305, 306, 307, 308, 1288, 514, 515,
	364, 985, 309, 310, 0, 311, 312, 313, 315, 0,
	0, 0, 314, 316, 323, 0, 984, 317, 516, 319,
	318, 320, 321, 322, 517, 0, 518, 0, 324, 986,
	519, 987, 325, 326, 327, 988, 328, 329, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	520, 989, 338, 339, 990, 0, 340, 341, 0, 0,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 355, 353, 991, 356, 357, 360, 361,
	359, 992, 358, 0, 0, 993, 362, 0, 521, 363,
	522, 365, 366, 0, 367, 368, 369, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 994, 376, 995,
	524, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 525, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 527, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 996,
	415, 416, 417, 418, 528, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 431, 433,
	434, 435, 432, 438, 439, 440, 0, 441, 421, 422,
	442, 443, 997, 444, 445, 529, 446, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 457, 453, 454, 455,
	530, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 466, 0, 467, 531, 532, 533, 534, 0,
	474, 0, 468, 469, 535, 470, 536, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 484, 0, 485, 0, 483, 486, 487, 488,
	537, 538, 539, 0, 490, 489, 540, 0, 0, 0,
	0, 491, 492, 541, 493, 494, 495, 1218, 0, 1223,
	1222, 0, 0, 0, 0, 1220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 497, 498,
	235, 499, 238, 236, 237, 500, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 501, 502, 503,
	0, 247, 248, 504, 0, 1114, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 982, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 505, 506, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 507, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 508, 509, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 510, 297, 298,
	0, 299, 0, 300, 0, 0, 983, 301, 302, 0,
	303, 511, 0, 512, 304, 0, 305, 306, 307, 308,
	1217, 514, 515, 364, 985, 309, 310, 0, 311, 312,
	313, 315, 0, 0, 0, 314, 316, 323, 0, 984,
	317, 516, 319, 318, 320, 321, 322, 517, 0, 518,
	0, 324, 986, 519, 987, 325, 326, 327, 988, 328,
	329, 0, 0, 330, 331, 332, 333, 334, 0, 336,
	335, 0, 337, 520, 989, 338, 339, 990, 0, 340,
	341, 0, 0, 342, 343, 344, 345, 0, 346, 347,
	349, 351, 348, 350, 352, 354, 355, 353, 991, 356,
	357, 360, 361, 359, 992, 358, 0, 0, 993, 362,
	0, 521, 363, 522, 365, 366, 0, 367, 368, 369,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 523,
	994, 376, 995, 524, 377, 370, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 386, 525, 387, 526, 388,
	389, 0, 390, 0, 391, 392, 393, 394, 395, 396,
	397, 527, 398, 399, 0, 400, 401, 402, 403, 404,
	405, 0, 407, 408, 409, 406, 410, 411, 412, 413,
	0, 414, 996, 415, 416, 417, 418, 528, 419, 0,
	420, 424, 425, 426, 427, 428, 429, 430, 0, 436,
	437, 431, 433, 434, 435, 432, 438, 439, 440, 0,
	441, 421, 422, 442, 443, 997, 444, 445, 529, 446,
	447, 0, 448, 449, 450, 451, 423, 452, 456, 457,
	453, 454, 455, 530, 0, 459, 460, 458, 0, 461,
	462, 463, 464, 465, 288, 466, 0, 467, 531, 532,
	533, 534, 0, 474, 0, 468, 469, 535, 470, 536,
	0, 471, 472, 473, 0, 475, 476, 0, 0, 477,
	478, 479, 481, 482, 480, 484, 0, 485, 0, 483,
	486, 487, 488, 537, 538, 539, 0, 490, 489, 540,
	0, 0, 0, 0, 491, 492, 541, 493, 494, 495,
	1223, 1222, 0, 0, 0, 0, 1220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	498, 235, 499, 238, 236, 237, 500, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 0, 246, 501, 502,
	503, 0, 247, 248, 504, 0, 1114, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 982, 264,
	265, 0, 0, 0, 0, 0, 0, 0, 266, 267,
	268, 269, 270, 271, 505, 506, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 507, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 508, 509, 0, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 510, 297,
	298, 0, 299, 0, 300, 0, 0, 983, 301, 302,
	0, 303, 511, 0, 512, 304, 0, 305, 306, 307,
	308, 513, 514, 515, 364, 985, 309, 310, 0, 311,
	312, 313, 315, 0, 0, 0, 314, 316, 323, 0,
	984, 317, 516, 319, 318, 320, 321, 322, 517, 0,
	518, 0, 324, 986, 519, 987, 325, 326, 327, 988,
	328, 329, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 520, 989, 338, 339, 990, 0,
	340, 341, 0, 0, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 355, 353, 991,
	356, 357, 360, 361, 359, 992, 358, 0, 0, 993,
	362, 0, 521, 363, 522, 365, 366, 0, 367, 368,
	369, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 994, 376, 995, 524, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 525, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 527, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 996, 415, 416, 417, 418, 528, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 431, 433, 434, 435, 432, 438, 439, 440,
	0, 441, 421, 422, 442, 443, 997, 444, 445, 529,
	446, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	457, 453, 454, 455, 530, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 466, 0, 467, 531,
	532, 533, 534, 0, 474, 0, 468, 469, 535, 470,
	536, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 484, 0, 485, 0,
	483, 486, 487, 488, 537, 538, 539, 218, 490, 489,
	540, 0, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 497, 498, 235, 499,
	238, 236, 237, 500, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 501, 502, 503, 0, 247,
	248, 504, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 505, 506, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 507, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 508, 509, 0, 221, 0, 0, 0,
	0, 0, 294, 295, 296, 510, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 302, 0, 303, 511,
	0, 512, 304, 0, 305, 306, 307, 308, 513, 514,
	515, 364, 0, 309, 310, 0, 311, 312, 313, 315,
	0, 0, 222, 314, 316, 323, 0, 0, 317, 516,
	319, 318, 320, 321, 322, 517, 0, 518, 0, 324,
	0, 519, 0, 325, 326, 327, 0, 328, 329, 0,
	0, 330, 331, 332, 333, 334, 0, 336, 335, 0,
	337, 520, 0, 338, 339, 0, 0, 340, 341, 0,
	0, 342, 343, 344, 345, 0, 346, 347, 349, 351,
	348, 350, 352, 354, 355, 353, 0, 356, 357, 360,
	361, 359, 0, 358, 0, 223, 0, 362, 0, 521,
	363, 522, 365, 366, 0, 367, 368, 369, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 523, 0, 376,
	0, 524, 377, 370, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 386, 525, 387, 526, 388, 389, 0,
	390, 0, 391, 392, 393, 394, 395, 396, 397, 527,
	398, 399, 0, 400, 401, 402, 403, 404, 405, 0,
	407, 408, 409, 406, 410, 411, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 528, 419, 0, 420, 424,
	425, 426, 427, 428, 429, 430, 0, 436, 437, 431,
	433, 434, 435, 432, 438, 439, 440, 0, 441, 421,
	422, 442, 443, 0, 444, 445, 529, 446, 447, 0,
	448, 449, 450, 451, 423, 452, 456, 457, 453, 454,
	455, 530, 0, 459, 460, 458, 0, 461, 462, 463,
	464, 465, 288, 466, 0, 467, 531, 532, 533, 534,
	0, 474, 0, 468, 469, 535, 470, 536, 0, 471,
	472, 473, 0, 475, 476, 0, 0, 477, 478, 479,
	481, 482, 480, 484, 0, 485, 0, 483, 486, 487,
	488, 537, 538, 539, 0, 490, 489, 540, 1223, 1222,
	0, 0, 491, 492, 541, 493, 494, 495, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 628, 0, 0, 0, 496, 0, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 0, 246, 501, 502, 503, 0,
	247, 248, 504, 0, 1114, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 982, 264, 265, 0,
	0, 0, 0, 0, 0, 0, 266, 267, 268, 269,
	270, 271, 505, 506, 1759, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 508, 509, 0, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 0, 300, 0, 0, 983, 301, 302, 0, 303,
	511, 0, 512, 304, 0, 305, 306, 307, 308, 513,
	514, 515, 364, 985, 309, 310, 0, 311, 312, 313,
	315, 0, 0, 0, 314, 316, 323, 0, 984, 317,
	516, 319, 318, 320, 321, 322, 517, 0, 518, 0,
	324, 986, 519, 987, 325, 326, 327, 988, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 520, 989, 338, 339, 990, 0, 340, 341,
	0, 0, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 353, 991, 356, 357,
	360, 361, 359, 992, 358, 0, 0, 993, 362, 0,
	521, 363, 522, 365, 366, 0, 367, 368, 369, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 994,
	376, 995, 524, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 525, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 996, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	431, 433, 434, 435, 432, 438, 439, 440, 0, 441,
	421, 422, 442, 443, 997, 444, 445, 529, 446, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 530, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 466, 0, 467, 531, 532, 533,
	534, 0, 474, 0, 468, 469, 535, 470, 536, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 484, 0, 485, 0, 483, 486,
	487, 488, 537, 538, 539, 0, 490, 489, 540, 1223,
	1222, 0, 0, 491, 492, 541, 493, 494, 495, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 497, 498,
	235, 499, 238, 236, 237, 500, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 501, 502, 503,
	0, 247, 248, 504, 0, 1114, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 982, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 505, 506, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 507, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 508, 509, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 510, 297, 298,
	0, 299, 0, 300, 0, 0, 983, 301, 302, 0,
	303, 511, 0, 512, 304, 0, 305, 306, 307, 308,
	513, 514, 515, 364, 985, 309, 310, 0, 311, 312,
	313, 315, 0, 0, 0, 314, 316, 323, 0, 984,
	317, 516, 319, 318, 320, 321, 322, 517, 0, 518,
	0, 324, 986, 519, 987, 325, 326, 327, 988, 328,
	329, 0, 0, 330, 331, 332, 333, 334, 0, 336,
	335, 0, 337, 520, 989, 338, 339, 990, 0, 340,
	341, 0, 0, 342, 343, 344, 345, 0, 346, 347,
	349, 351, 348, 350, 352, 354, 355, 353, 991, 356,
	357, 360, 361, 359, 992, 358, 0, 0, 993, 362,
	0, 521, 363, 522, 365, 366, 0, 367, 368, 369,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 523,
	994, 376, 995, 524, 377, 370, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 386, 525, 387, 526, 388,
	389, 0, 390, 0, 391, 392, 393, 394, 395, 396,
	397, 527, 398, 399, 0, 400, 401, 402, 403, 404,
	405, 0, 407, 408, 409, 406, 410, 411, 412, 413,
	0, 414, 996, 415, 416, 417, 418, 528, 419, 0,
	420, 424, 425, 426, 427, 428, 429, 430, 0, 436,
	437, 431, 433, 434, 435, 432, 438, 439, 440, 0,
	441, 421, 422, 442, 443, 997, 444, 445, 529, 446,
	447, 0, 448, 449, 450, 451, 423, 452, 456, 457,
	453, 454, 455, 530, 0, 459, 460, 458, 0, 461,
	462, 463, 464, 465, 288, 466, 0, 467, 531, 532,
	533, 534, 0, 474, 0, 468, 469, 535, 470, 536,
	0, 471, 472, 473, 0, 475, 476, 0, 0, 477,
	478, 479, 481, 482, 480, 484, 0, 485, 0, 483,
	486, 487, 488, 537, 538, 539, 1223, 490, 489, 540,
	0, 0, 0, 0, 491, 492, 541, 493, 494, 495,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 498, 235, 499, 238,
	236, 237, 500, 0, 239, 240, 241, 242, 243, 244,
	245, 0, 0, 246, 501, 502, 503, 0, 247, 248,
	504, 0, 1114, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 982, 264, 265, 0, 0, 0,
	0, 0, 0, 0, 266, 267, 268, 269, 270, 271,
	505, 506, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 283, 507, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 508, 509, 0, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 510, 297, 298, 0, 299, 0,
	300, 0, 0, 983, 301, 302, 0, 303, 511, 0,
	512, 304, 0, 305, 306, 307, 308, 513, 514, 515,
	364, 985, 309, 310, 0, 311, 312, 313, 315, 0,
	0, 0, 314, 316, 323, 0, 984, 317, 516, 319,
	318, 320, 321, 322, 517, 0, 518, 0, 324, 986,
	519, 987, 325, 326, 327, 988, 328, 329, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	520, 989, 338, 339, 990, 0, 340, 341, 0, 0,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 355, 353, 991, 356, 357, 360, 361,
	359, 992, 358, 0, 0, 993, 362, 0, 521, 363,
	522, 365, 366, 0, 367, 368, 369, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 994, 376, 995,
	524, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 525, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 527, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 996,
	415, 416, 417, 418, 528, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 431, 433,
	434, 435, 432, 438, 439, 440, 0, 441, 421, 422,
	442, 443, 997, 444, 445, 529, 446, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 457, 453, 454, 455,
	530, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 466, 0, 467, 531, 532, 533, 534, 0,
	474, 0, 468, 469, 535, 470, 536, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 484, 0, 485, 0, 483, 486, 487, 488,
	537, 538, 539, 218, 490, 489, 540, 0, 0, 0,
	0, 491, 492, 541, 493, 494, 495, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 496, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 497, 498, 235, 499, 238, 236, 237, 500,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 501, 502, 503, 2345, 247, 248, 504, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 2342, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 505, 506, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 2349, 507,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 508,
	509, 0, 2506, 0, 0, 0, 0, 0, 294, 295,
	296, 510, 297, 298, 0, 299, 0, 300, 2348, 0,
	0, 301, 302, 0, 303, 511, 0, 512, 304, 0,
	305, 306, 307, 308, 513, 514, 515, 364, 0, 309,
	310, 0, 311, 312, 313, 315, 0, 0, 2503, 314,
	316, 323, 0, 0, 317, 516, 319, 318, 320, 321,
	322, 517, 0, 518, 0, 2505, 0, 519, 0, 325,
	326, 327, 0, 328, 329, 0, 0, 330, 331, 332,
	333, 334, 0, 336, 335, 0, 337, 520, 0, 338,
	339, 2502, 0, 340, 341, 0, 0, 342, 343, 344,
	345, 0, 346, 347, 349, 351, 348, 350, 352, 354,
	355, 353, 0, 356, 357, 360, 361, 359, 0, 358,
	0, 0, 0, 362, 0, 521, 363, 522, 365, 366,
	0, 367, 368, 369, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 523, 0, 376, 0, 524, 377, 370,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 386,
	525, 387, 526, 388, 389, 2347, 390, 0, 391, 392,
	393, 394, 395, 396, 397, 527, 398, 399, 0, 400,
	401, 402, 403, 404, 405, 0, 407, 408, 409, 406,
	410, 411, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 528, 419, 0, 420, 424, 425, 426, 427, 428,
	429, 430, 0, 436, 437, 431, 433, 434, 435, 432,
	438, 439, 440, 0, 441, 421, 422, 442, 443, 0,
	444, 445, 529, 446, 447, 0, 448, 449, 450, 451,
	423, 452, 456, 457, 453, 454, 455, 530, 0, 459,
	460, 458, 0, 461, 462, 463, 464, 465, 288, 466,
	0, 467, 531, 532, 533, 534, 0, 474, 0, 468,
	469, 535, 470, 536, 0, 471, 472, 473, 0, 475,
	476, 0, 2504, 477, 478, 479, 481, 482, 480, 484,
	0, 485, 0, 483, 486, 487, 488, 537, 538, 539,
	218, 490, 489, 540, 0, 0, 0, 0, 491, 492,
	541, 493, 494, 495, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	498, 235, 499, 238, 236, 237, 500, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 0, 246, 501, 502,
	503, 2345, 247, 248, 504, 0, 0, 2339, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	2342, 259, 0, 260, 261, 262, 0, 263, 0, 264,
	265, 0, 0, 0, 0, 0, 0, 0, 266, 267,
	268, 269, 270, 271, 505, 506, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 2349, 507, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 508, 509, 0, 0,
	0, 0, 0, 0, 0, 294, 295, 296, 510, 297,
	298, 0, 299, 0, 300, 2348, 0, 0, 301, 302,
	0, 303, 511, 0, 512, 304, 0, 305, 306, 307,
	308, 2338, 514, 515, 364, 0, 309, 310, 0, 311,
	312, 313, 315, 0, 0, 0, 314, 316, 323, 0,
	0, 317, 516, 319, 318, 320, 321, 322, 517, 0,
	518, 0, 324, 0, 519, 0, 325, 326, 327, 0,
	328, 329, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 520, 0, 338, 339, 0, 0,
	340, 341, 0, 0, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 355, 353, 0,
	356, 357, 360, 361, 359, 0, 358, 0, 0, 0,
	362, 0, 521, 363, 522, 365, 366, 0, 367, 368,
	369, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 0, 376, 0, 524, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 525, 387, 526,
	388, 389, 2347, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 527, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 528, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 431, 433, 434, 435, 432, 438, 439, 440,
	0, 441, 421, 422, 442, 443, 0, 444, 445, 529,
	446, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	457, 453, 454, 455, 530, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 466, 0, 467, 531,
	532, 533, 534, 0, 474, 0, 468, 469, 535, 470,
	536, 0, 471, 472, 473, 0, 475, 476, 0, 2346,
	477, 478, 479, 481, 482, 480, 484, 0, 485, 0,
	483, 486, 487, 488, 537, 538, 539, 0, 490, 489,
	540, 1448, 0, 218, 0, 491, 492, 541, 493, 494,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 496, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 497, 498, 235, 499, 238, 236, 237, 500,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 501, 502, 503, 0, 247, 248, 504, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 505, 506, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 507,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 508,
	509, 0, 221, 0, 0, 0, 0, 0, 294, 295,
	296, 510, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 302, 0, 303, 511, 0, 512, 304, 0,
	305, 306, 307, 308, 513, 514, 515, 364, 0, 309,
	310, 0, 311, 312, 313, 315, 0, 0, 222, 314,
	316, 323, 0, 0, 317, 516, 319, 318, 320, 321,
	322, 517, 0, 518, 0, 324, 0, 519, 0, 325,
	326, 327, 0, 328, 329, 0, 0, 330, 331, 332,
	333, 334, 0, 336, 335, 0, 337, 520, 0, 338,
	339, 0, 0, 340, 341, 0, 0, 342, 343, 344,
	345, 0, 346, 347, 349, 351, 348, 350, 352, 354,
	355, 353, 0, 356, 357, 360, 361, 359, 0, 358,
	0, 223, 0, 362, 0, 521, 363, 522, 365, 366,
	0, 367, 368, 369, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 523, 0, 376, 0, 524, 377, 370,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 386,
	525, 387, 526, 388, 389, 0, 390, 0, 391, 392,
	393, 394, 395, 396, 397, 527, 398, 399, 0, 400,
	401, 402, 403, 404, 405, 0, 407, 408, 409, 406,
	410, 411, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 528, 419, 0, 420, 424, 425, 426, 427, 428,
	429, 430, 0, 1451, 437, 431, 433, 434, 435, 432,
	438, 439, 440, 0, 441, 421, 422, 442, 443, 0,
	444, 445, 529, 446, 447, 0, 448, 449, 450, 451,
	423, 452, 456, 457, 453, 454, 455, 530, 0, 459,
	460, 458, 1449, 461, 462, 463, 464, 465, 288, 466,
	0, 467, 531, 532, 533, 534, 0, 474, 0, 468,
	469, 535, 470, 536, 0, 471, 472, 473, 0, 475,
	476, 0, 0, 477, 478, 479, 481, 482, 480, 484,
	0, 485, 0, 483, 486, 487, 488, 537, 538, 539,
	0, 1450, 489, 540, 1199, 0, 218, 0, 491, 492,
	541, 493, 494, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 498, 235, 499, 238,
	236, 237, 500, 0, 239, 240, 241, 242, 243, 244,
	245, 0, 0, 246, 501, 502, 503, 0, 247, 248,
	504, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 0, 264, 265, 0, 0, 0,
	0, 0, 0, 0, 266, 267, 268, 269, 270, 271,
	505, 506, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 283, 507, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 508, 509, 0, 221, 0, 0, 0, 0,
	0, 294, 295, 296, 510, 297, 298, 0, 299, 0,
	300, 0, 0, 0, 301, 302, 0, 303, 511, 0,
	512, 304, 0, 305, 306, 307, 308, 1201, 514, 515,
	364, 0, 309, 310, 0, 311, 312, 313, 315, 0,
	0, 222, 314, 316, 323, 0, 0, 317, 516, 319,
	318, 320, 321, 322, 517, 0, 518, 0, 324, 0,
	519, 0, 325, 326, 327, 0, 328, 329, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	520, 0, 338, 339, 0, 0, 340, 341, 0, 0,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 355, 353, 0, 356, 357, 360, 361,
	359, 0, 358, 0, 223, 0, 362, 0, 521, 363,
	522, 365, 366, 0, 367, 368, 369, 0, 1039, 371,
	372, 373, 0, 0, 374, 375, 523, 0, 376, 0,
	524, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 525, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 527, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 528, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 431, 433,
	434, 435, 432, 438, 439, 440, 0, 441, 421, 422,
	442, 443, 0, 444, 445, 529, 446, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 457, 453, 454, 455,
	530, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 466, 0, 467, 531, 532, 533, 534, 0,
	474, 0, 468, 469, 535, 470, 536, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 484, 0, 485, 0, 483, 486, 487, 488,
	537, 538, 539, 0, 490, 489, 540, 1196, 0, 218,
	0, 491, 492, 541, 493, 494, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 497, 498,
	235, 499, 238, 236, 237, 500, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 501, 502, 503,
	0, 247, 248, 504, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 505, 506, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 507, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 508, 509, 0, 221, 0,
	0, 0, 0, 0, 294, 295, 296, 510, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 302, 0,
	303, 511, 0, 512, 304, 0, 305, 306, 307, 308,
	1198, 514, 515, 364, 0, 309, 310, 0, 311, 312,
	313, 315, 0, 0, 222, 314, 316, 323, 0, 0,
	317, 516, 319, 318, 320, 321, 322, 517, 0, 518,
	0, 324, 0, 519, 0, 325, 326, 327, 0, 328,
	329, 0, 0, 330, 331, 332, 333, 334, 0, 336,
	335, 0, 337, 520, 0, 338, 339, 0, 0, 340,
	341, 0, 0, 342, 343, 344, 345, 0, 346, 347,
	349, 351, 348, 350, 352, 354, 355, 353, 0, 356,
	357, 360, 361, 359, 0, 358, 0, 223, 0, 362,
	0, 521, 363, 522, 365, 366, 0, 367, 368, 369,
	0, 1039, 371, 372, 373, 0, 0, 374, 375, 523,
	0, 376, 0, 524, 377, 370, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 386, 525, 387, 526, 388,
	389, 0, 390, 0, 391, 392, 393, 394, 395, 396,
	397, 527, 398, 399, 0, 400, 401, 402, 403, 404,
	405, 0, 407, 408, 409, 406, 410, 411, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 528, 419, 0,
	420, 424, 425, 426, 427, 428, 429, 430, 0, 436,
	437, 431, 433, 434, 435, 432, 438, 439, 440, 0,
	441, 421, 422, 442, 443, 0, 444, 445, 529, 446,
	447, 0, 448, 449, 450, 451, 423, 452, 456, 457,
	453, 454, 455, 530, 0, 459, 460, 458, 0, 461,
	462, 463, 464, 465, 288, 466, 0, 467, 531, 532,
	533, 534, 0, 474, 0, 468, 469, 535, 470, 536,
	0, 471, 472, 473, 0, 475, 476, 0, 0, 477,
	478, 479, 481, 482, 480, 484, 0, 485, 0, 483,
	486, 487, 488, 537, 538, 539, 0, 490, 489, 540,
	1102, 0, 218, 0, 491, 492, 541, 493, 494, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 230, 232, 231, 233,
	234, 497, 498, 235, 499, 238, 236, 237, 500, 0,
	239, 240, 241, 242, 243, 244, 245, 0, 0, 246,
	501, 502, 503, 0, 247, 248, 504, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	0, 264, 265, 0, 0, 0, 0, 0, 0, 0,
	266, 267, 268, 269, 270, 271, 505, 506, 0, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 283, 507, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 508, 509,
	0, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	510, 297, 298, 0, 299, 0, 300, 0, 0, 0,
	301, 302, 0, 303, 511, 0, 512, 304, 0, 305,
	306, 307, 308, 1104, 514, 515, 364, 0, 309, 310,
	0, 311, 312, 313, 315, 0, 0, 222, 314, 316,
	323, 0, 0, 317, 516, 319, 318, 320, 321, 322,
	517, 0, 518, 0, 324, 0, 519, 0, 325, 326,
	327, 0, 328, 329, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 520, 0, 338, 339,
	0, 0, 340, 341, 0, 0, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 355,
	353, 0, 356, 357, 360, 361, 359, 0, 358, 0,
	223, 0, 362, 0, 521, 363, 522, 365, 366, 0,
	367, 368, 369, 0, 1039, 371, 372, 373, 0, 0,
	374, 375, 523, 0, 376, 0, 524, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 386, 525,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 527, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	528, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 0, 436, 437, 431, 433, 434, 435, 432, 438,
	439, 440, 0, 441, 421, 422, 442, 443, 0, 444,
	445, 529, 446, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 457, 453, 454, 455, 530, 0, 459, 460,
	458, 0, 461, 462, 463, 464, 465, 288, 466, 0,
	467, 531, 532, 533, 534, 0, 474, 0, 468, 469,
	535, 470, 536, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 484, 0,
	485, 0, 483, 486, 487, 488, 537, 538, 539, 0,
	490, 489, 540, 570, 0, 218, 0, 491, 492, 541,
	493, 494, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 569, 228, 559, 229, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 497, 498, 235, 499, 238, 236,
	237, 500, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 501, 502, 503, 0, 247, 248, 504,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 562, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 505,
	506, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 507, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 508, 509, 0, 0, 0, 0, 0, 0, 0,
	294, 295, 296, 510, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 563, 303, 511, 0, 512,
	304, 0, 305, 306, 307, 308, 513, 514, 515, 364,
	0, 309, 310, 0, 311, 312, 313, 315, 0, 0,
	0, 314, 316, 323, 0, 0, 317, 516, 319, 318,
	320, 321, 322, 517, 0, 518, 0, 324, 0, 519,
	0, 325, 326, 327, 0, 328, 329, 0, 0, 330,
	331, 332, 333, 334, 0, 336, 335, 0, 337, 520,
	0, 338, 339, 0, 0, 340, 341, 0, 0, 342,
	343, 344, 345, 0, 346, 347, 349, 351, 348, 350,
	352, 354, 355, 353, 0, 356, 357, 360, 361, 359,
	0, 358, 0, 0, 0, 362, 0, 521, 363, 522,
	365, 366, 0, 367, 368, 369, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 523, 0, 376, 0, 524,
	377, 370, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 386, 525, 387, 526, 388, 389, 0, 390, 0,
	391, 392, 393, 394, 395, 396, 397, 527, 398, 399,
	0, 400, 401, 402, 403, 404, 405, 0, 407, 408,
	409, 406, 410, 411, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 528, 419, 0, 420, 424, 425, 426,
	427, 428, 429, 430, 564, 436, 437, 431, 433, 434,
	435, 432, 438, 439, 440, 0, 441, 421, 422, 442,
	443, 0, 444, 445, 529, 446, 447, 0, 448, 449,
	450, 451, 423, 452, 456, 457, 453, 454, 455, 530,
	0, 459, 460, 458, 0, 461, 462, 463, 464, 465,
	288, 466, 0, 467, 531, 532, 533, 534, 0, 474,
	0, 468, 469, 535, 470, 536, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 484, 0, 485, 0, 483, 486, 487, 488, 537,
	538, 539, 0, 490, 489, 540, 558, 0, 218, 0,
	491, 492, 541, 493, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	559, 229, 0, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 0, 246, 501, 502, 503, 0,
	247, 248, 504, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 562, 263, 0, 264, 265, 0,
	0, 0, 0, 0, 0, 0, 266, 267, 268, 269,
	270, 271, 505, 506, 0, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 508, 509, 0, 0, 0, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 0, 300, 0, 0, 0, 301, 302, 563, 303,
	511, 0, 512, 304, 0, 305, 306, 307, 308, 513,
	514, 515, 364, 0, 309, 310, 0, 311, 312, 313,
	315, 0, 0, 0, 314, 316, 323, 0, 0, 317,
	516, 319, 318, 320, 321, 322, 517, 0, 518, 0,
	324, 0, 519, 0, 325, 326, 327, 0, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 520, 0, 338, 339, 0, 0, 340, 341,
	0, 0, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 353, 0, 356, 357,
	360, 361, 359, 0, 358, 0, 0, 0, 362, 0,
	521, 363, 522, 365, 366, 0, 367, 368, 369, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 0,
	376, 0, 524, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 525, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 564, 436, 437,
	431, 433, 434, 435, 432, 438, 439, 440, 0, 441,
	421, 422, 442, 443, 0, 444, 445, 529, 446, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 530, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 466, 0, 467, 531, 532, 533,
	534, 0, 474, 0, 468, 469, 535, 470, 536, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 484, 0, 485, 0, 483, 486,
	487, 488, 537, 538, 539, 218, 490, 489, 540, 0,
	0, 0, 0, 491, 492, 541, 493, 494, 495, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 497, 498, 235, 499, 238, 236,
	237, 500, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 501, 502, 503, 0, 247, 248, 504,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 505,
	506, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 507, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 508, 509, 0, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 510, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 0, 303, 511, 0, 512,
	304, 0, 305, 306, 307, 308, 513, 514, 515, 364,
	0, 309, 310, 0, 311, 312, 313, 315, 0, 0,
	222, 314, 316, 323, 0, 0, 317, 516, 319, 318,
	320, 321, 322, 517, 0, 518, 0, 324, 0, 519,
	0, 325, 326, 327, 0, 328, 329, 0, 0, 330,
	331, 332, 333, 334, 0, 336, 335, 0, 337, 520,
	0, 338, 339, 0, 0, 340, 341, 0, 0, 342,
	343, 344, 345, 0, 346, 347, 349, 351, 348, 350,
	352, 354, 355, 353, 0, 356, 357, 360, 361, 359,
	2835, 358, 0, 223, 0, 362, 0, 521, 363, 522,
	365, 366, 0, 367, 368, 369, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 523, 0, 376, 0, 524,
	377, 370, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 386, 525, 387, 526, 388, 389, 0, 390, 0,
	391, 392, 393, 394, 395, 396, 397, 527, 398, 399,
	0, 400, 401, 402, 403, 404, 405, 0, 407, 408,
	409, 406, 410, 411, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 528, 419, 0, 420, 424, 425, 426,
	427, 428, 429, 430, 0, 436, 437, 431, 433, 434,
	435, 432, 438, 439, 440, 0, 441, 421, 422, 442,
	443, 0, 444, 445, 529, 446, 447, 0, 448, 449,
	450, 451, 423, 452, 456, 457, 453, 454, 455, 530,
	0, 459, 460, 458, 0, 461, 462, 463, 464, 465,
	288, 466, 0, 467, 531, 532, 533, 534, 0, 474,
	0, 468, 469, 535, 470, 536, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 484, 0, 485, 0, 483, 486, 487, 488, 537,
	538, 539, 218, 490, 489, 540, 0, 0, 0, 0,
	491, 492, 541, 493, 494, 495, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 230, 232, 231, 233,
	234, 497, 498, 235, 499, 238, 236, 237, 500, 0,
	239, 240, 241, 242, 243, 244, 245, 0, 0, 246,
	501, 502, 503, 0, 247, 248, 504, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	0, 264, 265, 0, 0, 0, 0, 0, 0, 0,
	266, 267, 268, 269, 270, 271, 505, 506, 0, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 283, 507, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 508, 509,
	0, 221, 0, 0, 0, 0, 0, 294, 295, 296,
	510, 297, 298, 0, 299, 0, 300, 0, 0, 0,
	301, 302, 0, 303, 511, 0, 512, 304, 0, 305,
	306, 307, 308, 513, 514, 515, 364, 0, 309, 310,
	0, 311, 312, 313, 315, 0, 0, 222, 314, 316,
	323, 0, 0, 317, 516, 319, 318, 320, 321, 322,
	517, 0, 518, 0, 324, 0, 519, 0, 325, 326,
	327, 0, 328, 329, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 520, 0, 338, 339,
	0, 0, 340, 341, 0, 0, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 355,
	353, 0, 356, 357, 360, 361, 359, 0, 358, 0,
	223, 0, 362, 0, 521, 363, 522, 365, 366, 0,
	367, 368, 369, 0, 1039, 371, 372, 373, 0, 0,
	374, 375, 523, 0, 376, 0, 524, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 386, 525,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 527, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	528, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 0, 436, 437, 431, 433, 434, 435, 432, 438,
	439, 440, 0, 441, 421, 422, 442, 443, 0, 444,
	445, 529, 446, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 457, 453, 454, 455, 530, 0, 459, 460,
	458, 0, 461, 462, 463, 464, 465, 288, 466, 0,
	467, 531, 532, 533, 534, 0, 474, 0, 468, 469,
	535, 470, 536, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 484, 0,
	485, 0, 483, 486, 487, 488, 537, 538, 539, 0,
	490, 489, 540, 2442, 0, 218, 0, 491, 492, 541,
	493, 494, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 497, 498, 235, 499, 238, 236,
	237, 500, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 501, 502, 503, 0, 247, 248, 504,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 505,
	506, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 507, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 508, 509, 0, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 510, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 0, 303, 511, 0, 512,
	304, 0, 305, 306, 307, 308, 2441, 514, 515, 364,
	0, 309, 310, 0, 311, 312, 313, 315, 0, 0,
	222, 314, 316, 323, 0, 0, 317, 516, 319, 318,
	320, 321, 322, 517, 0, 518, 0, 324, 0, 519,
	0, 325, 326, 327, 0, 328, 329, 0, 0, 330,
	331, 332, 333, 334, 0, 336, 335, 0, 337, 520,
	0, 338, 339, 0, 0, 340, 341, 0, 0, 342,
	343, 344, 345, 0, 346, 347, 349, 351, 348, 350,
	352, 354, 355, 353, 0, 356, 357, 360, 361, 359,
	0, 358, 0, 223, 0, 362, 0, 521, 363, 522,
	365, 366, 0, 367, 368, 369, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 523, 0, 376, 0, 524,
	377, 370, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 386, 525, 387, 526, 388, 389, 0, 390, 0,
	391, 392, 393, 394, 395, 396, 397, 527, 398, 399,
	0, 400, 401, 402, 403, 404, 405, 0, 407, 408,
	409, 406, 410, 411, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 528, 419, 0, 420, 424, 425, 426,
	427, 428, 429, 430, 0, 436, 437, 431, 433, 434,
	435, 432, 438, 439, 440, 0, 441, 421, 422, 442,
	443, 0, 444, 445, 529, 446, 447, 0, 448, 449,
	450, 451, 423, 452, 456, 457, 453, 454, 455, 530,
	0, 459, 460, 458, 0, 461, 462, 463, 464, 465,
	288, 466, 0, 467, 531, 532, 533, 534, 0, 474,
	0, 468, 469, 535, 470, 536, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 484, 0, 485, 0, 483, 486, 487, 488, 537,
	538, 539, 0, 490, 489, 540, 1948, 0, 218, 0,
	491, 492, 541, 493, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 0, 246, 501, 502, 503, 0,
	247, 248, 504, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 0, 264, 265, 0,
	0, 0, 0, 0, 0, 0, 266, 267, 268, 269,
	270, 271, 505, 506, 0, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 508, 509, 0, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 0, 300, 0, 0, 0, 301, 302, 0, 303,
	511, 0, 512, 304, 0, 305, 306, 307, 308, 513,
	514, 515, 364, 0, 309, 310, 0, 311, 312, 313,
	315, 0, 0, 222, 314, 316, 323, 0, 0, 317,
	516, 319, 318, 320, 321, 322, 517, 0, 518, 0,
	324, 0, 519, 0, 325, 326, 327, 0, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 520, 0, 338, 339, 0, 0, 340, 341,
	0, 0, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 353, 0, 356, 357,
	360, 361, 359, 0, 358, 0, 223, 0, 362, 0,
	521, 363, 522, 365, 366, 0, 367, 368, 369, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 0,
	376, 0, 524, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 525, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	431, 433, 434, 435, 432, 438, 439, 440, 0, 441,
	421, 422, 442, 443, 0, 444, 445, 529, 446, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 530, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 466, 0, 467, 531, 532, 533,
	534, 0, 474, 0, 468, 469, 535, 470, 536, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 484, 0, 485, 0, 483, 486,
	487, 488, 537, 538, 539, 218, 490, 489, 540, 0,
	0, 0, 0, 491, 492, 541, 493, 494, 495, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 497, 498, 235, 499, 238, 236,
	237, 500, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 501, 502, 503, 0, 247, 248, 504,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 505,
	506, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 507, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 508, 509, 0, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 510, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 0, 303, 511, 0, 512,
	304, 0, 305, 306, 307, 308, 513, 514, 515, 364,
	0, 309, 310, 0, 311, 312, 313, 315, 0, 0,
	222, 314, 316, 323, 0, 0, 317, 516, 319, 318,
	320, 321, 322, 517, 0, 518, 0, 324, 0, 519,
	0, 325, 326, 327, 0, 328, 329, 0, 0, 330,
	331, 332, 333, 334, 0, 336, 335, 0, 337, 520,
	0, 338, 339, 0, 0, 340, 341, 0, 0, 342,
	343, 344, 345, 0, 346, 347, 349, 351, 348, 350,
	352, 354, 355, 353, 0, 356, 357, 360, 361, 359,
	0, 358, 0, 223, 0, 362, 0, 521, 363, 522,
	365, 366, 0, 367, 368, 369, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 523, 0, 376, 0, 524,
	377, 370, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 386, 525, 387, 526, 388, 389, 0, 390, 0,
	391, 392, 393, 394, 395, 396, 397, 527, 398, 399,
	0, 400, 401, 402, 403, 404, 405, 0, 407, 408,
	409, 406, 410, 411, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 528, 419, 0, 420, 424, 425, 426,
	427, 428, 429, 430, 0, 436, 437, 431, 433, 434,
	435, 432, 438, 439, 440, 0, 441, 421, 422, 442,
	443, 0, 444, 445, 529, 446, 447, 0, 448, 449,
	450, 451, 423, 452, 456, 457, 453, 454, 455, 530,
	0, 459, 460, 458, 1879, 461, 462, 463, 464, 465,
	288, 466, 0, 467, 531, 532, 533, 534, 0, 474,
	0, 468, 469, 535, 470, 536, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 484, 0, 485, 0, 483, 486, 487, 488, 537,
	538, 539, 0, 490, 489, 540, 1884, 0, 218, 0,
	491, 492, 541, 493, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 0, 246, 501, 502, 503, 0,
	247, 248, 504, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 0, 264, 265, 0,
	0, 0, 0, 0, 0, 0, 266, 267, 268, 269,
	270, 271, 505, 506, 0, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 508, 509, 0, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 0, 300, 0, 0, 0, 301, 302, 0, 303,
	511, 0, 512, 304, 0, 305, 306, 307, 308, 1883,
	514, 515, 364, 0, 309, 310, 0, 311, 312, 313,
	315, 0, 0, 222, 314, 316, 323, 0, 0, 317,
	516, 319, 318, 320, 321, 322, 517, 0, 518, 0,
	324, 0, 519, 0, 325, 326, 327, 0, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 520, 0, 338, 339, 0, 0, 340, 341,
	0, 0, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 353, 0, 356, 357,
	360, 361, 359, 0, 358, 0, 223, 0, 362, 0,
	521, 363, 522, 365, 366, 0, 367, 368, 369, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 0,
	376, 0, 524, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 525, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	431, 433, 434, 435, 432, 438, 439, 440, 0, 441,
	421, 422, 442, 443, 0, 444, 445, 529, 446, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 530, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 466, 0, 467, 531, 532, 533,
	534, 0, 474, 0, 468, 469, 535, 470, 536, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 484, 0, 485, 0, 483, 486,
	487, 488, 537, 538, 539, 0, 490, 489, 540, 1872,
	0, 218, 0, 491, 492, 541, 493, 494, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	496, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	497, 498, 235, 499, 238, 236, 237, 500, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 501,
	502, 503, 0, 247, 248, 504, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 505, 506, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 507, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 508, 509, 0,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 510,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	302, 0, 303, 511, 0, 512, 304, 0, 305, 306,
	307, 308, 1874, 514, 515, 364, 0, 309, 310, 0,
	311, 312, 313, 315, 0, 0, 222, 314, 316, 323,
	0, 0, 317, 516, 319, 318, 320, 321, 322, 517,
	0, 518, 0, 324, 0, 519, 0, 325, 326, 327,
	0, 328, 329, 0, 0, 330, 331, 332, 333, 334,
	0, 336, 335, 0, 337, 520, 0, 338, 339, 0,
	0, 340, 341, 0, 0, 342, 343, 344, 345, 0,
	346, 347, 349, 351, 348, 350, 352, 354, 355, 353,
	0, 356, 357, 360, 361, 359, 0, 358, 0, 223,
	0, 362, 0, 521, 363, 522, 365, 366, 0, 367,
	368, 369, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 523, 0, 376, 0, 524, 377, 370, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 386, 525, 387,
	526, 388, 389, 0, 390, 0, 391, 392, 393, 394,
	395, 396, 397, 527, 398, 399, 0, 400, 401, 402,
	403, 404, 405, 0, 407, 408, 409, 406, 410, 411,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 528,
	419, 0, 420, 424, 425, 426, 427, 428, 429, 430,
	0, 436, 437, 431, 433, 434, 435, 432, 438, 439,
	440, 0, 441, 421, 422, 442, 443, 0, 444, 445,
	529, 446, 447, 0, 448, 449, 450, 451, 423, 452,
	456, 457, 453, 454, 455, 530, 0, 459, 460, 458,
	0, 461, 462, 463, 464, 465, 288, 466, 0, 467,
	531, 532, 533, 534, 0, 474, 0, 468, 469, 535,
	470, 536, 0, 471, 472, 473, 0, 475, 476, 0,
	0, 477, 478, 479, 481, 482, 480, 484, 0, 485,
	0, 483, 486, 487, 488, 537, 538, 539, 0, 490,
	489, 540, 1343, 0, 218, 0, 491, 492, 541, 493,
	494, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 230, 232,
	231, 233, 234, 497, 498, 235, 499, 238, 236, 237,
	500, 0, 239, 240, 241, 242, 243, 244, 245, 0,
	0, 246, 501, 502, 503, 0, 247, 248, 504, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 0, 264, 265, 0, 0, 0, 0, 0,
	0, 0, 266, 267, 268, 269, 270, 271, 505, 506,
	0, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 283,
	507, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	508, 509, 0, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 510, 297, 298, 0, 299, 0, 300, 0,
	0, 0, 301, 302, 0, 303, 511, 0, 512, 304,
	0, 305, 306, 307, 308, 1342, 514, 515, 364, 0,
	309, 310, 0, 311, 312, 313, 315, 0, 0, 222,
	314, 316, 323, 0, 0, 317, 516, 319, 318, 320,
	321, 322, 517, 0, 518, 0, 324, 0, 519, 0,
	325, 326, 327, 0, 328, 329, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 520, 0,
	338, 339, 0, 0, 340, 341, 0, 0, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 355, 353, 0, 356, 357, 360, 361, 359, 0,
	358, 0, 223, 0, 362, 0, 521, 363, 522, 365,
	366, 0, 367, 368, 369, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 0, 376, 0, 524, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 525, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 527, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 528, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 0, 436, 437, 431, 433, 434, 435,
	432, 438, 439, 440, 0, 441, 421, 422, 442, 443,
	0, 444, 445, 529, 446, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 457, 453, 454, 455, 530, 0,
	459, 460, 458, 0, 461, 462, 463, 464, 465, 288,
	466, 0, 467, 531, 532, 533, 534, 0, 474, 0,
	468, 469, 535, 470, 536, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	484, 0, 485, 0, 483, 486, 487, 488, 537, 538,
	539, 0, 490, 489, 540, 1340, 0, 218, 0, 491,
	492, 541, 493, 494, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 497, 498, 235, 499,
	238, 236, 237, 500, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 501, 502, 503, 0, 247,
	248, 504, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 505, 506, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 507, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 508, 509, 0, 221, 0, 0, 0,
	0, 0, 294, 295, 296, 510, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 302, 0, 303, 511,
	0, 512, 304, 0, 305, 306, 307, 308, 1339, 514,
	515, 364, 0, 309, 310, 0, 311, 312, 313, 315,
	0, 0, 222, 314, 316, 323, 0, 0, 317, 516,
	319, 318, 320, 321, 322, 517, 0, 518, 0, 324,
	0, 519, 0, 325, 326, 327, 0, 328, 329, 0,
	0, 330, 331, 332, 333, 334, 0, 336, 335, 0,
	337, 520, 0, 338, 339, 0, 0, 340, 341, 0,
	0, 342, 343, 344, 345, 0, 346, 347, 349, 351,
	348, 350, 352, 354, 355, 353, 0, 356, 357, 360,
	361, 359, 0, 358, 0, 223, 0, 362, 0, 521,
	363, 522, 365, 366, 0, 367, 368, 369, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 523, 0, 376,
	0, 524, 377, 370, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 386, 525, 387, 526, 388, 389, 0,
	390, 0, 391, 392, 393, 394, 395, 396, 397, 527,
	398, 399, 0, 400, 401, 402, 403, 404, 405, 0,
	407, 408, 409, 406, 410, 411, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 528, 419, 0, 420, 424,
	425, 426, 427, 428, 429, 430, 0, 436, 437, 431,
	433, 434, 435, 432, 438, 439, 440, 0, 441, 421,
	422, 442, 443, 0, 444, 445, 529, 446, 447, 0,
	448, 449, 450, 451, 423, 452, 456, 457, 453, 454,
	455, 530, 0, 459, 460, 458, 0, 461, 462, 463,
	464, 465, 288, 466, 0, 467, 531, 532, 533, 534,
	0, 474, 0, 468, 469, 535, 470, 536, 0, 471,
	472, 473, 0, 475, 476, 0, 0, 477, 478, 479,
	481, 482, 480, 484, 0, 485, 0, 483, 486, 487,
	488, 537, 538, 539, 0, 490, 489, 540, 1336, 0,
	218, 0, 491, 492, 541, 493, 494, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	498, 235, 499, 238, 236, 237, 500, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 0, 246, 501, 502,
	503, 0, 247, 248, 504, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 0, 264,
	265, 0, 0, 0, 0, 0, 0, 0, 266, 267,
	268, 269, 270, 271, 505, 506, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 507, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 508, 509, 0, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 510, 297,
	298, 0, 299, 0, 300, 0, 0, 0, 301, 302,
	0, 303, 511, 0, 512, 304, 0, 305, 306, 307,
	308, 1335, 514, 515, 364, 0, 309, 310, 0, 311,
	312, 313, 315, 0, 0, 222, 314, 316, 323, 0,
	0, 317, 516, 319, 318, 320, 321, 322, 517, 0,
	518, 0, 324, 0, 519, 0, 325, 326, 327, 0,
	328, 329, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 520, 0, 338, 339, 0, 0,
	340, 341, 0, 0, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 355, 353, 0,
	356, 357, 360, 361, 359, 0, 358, 0, 223, 0,
	362, 0, 521, 363, 522, 365, 366, 0, 367, 368,
	369, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 0, 376, 0, 524, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 525, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 527, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 528, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 431, 433, 434, 435, 432, 438, 439, 440,
	0, 441, 421, 422, 442, 443, 0, 444, 445, 529,
	446, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	457, 453, 454, 455, 530, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 466, 0, 467, 531,
	532, 533, 534, 0, 474, 0, 468, 469, 535, 470,
	536, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 484, 0, 485, 0,
	483, 486, 487, 488, 537, 538, 539, 0, 490, 489,
	540, 1210, 0, 218, 0, 491, 492, 541, 493, 494,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 496, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 497, 498, 235, 499, 238, 236, 237, 500,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 501, 502, 503, 0, 247, 248, 504, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 505, 506, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 507,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 508,
	509, 0, 221, 0, 0, 0, 0, 0, 294, 295,
	296, 510, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 302, 0, 303, 511, 0, 512, 304, 0,
	305, 306, 307, 308, 1212, 514, 515, 364, 0, 309,
	310, 0, 311, 312, 313, 315, 0, 0, 222, 314,
	316, 323, 0, 0, 317, 516, 319, 318, 320, 321,
	322, 517, 0, 518, 0, 324, 0, 519, 0, 325,
	326, 327, 0, 328, 329, 0, 0, 330, 331, 332,
	333, 334, 0, 336, 335, 0, 337, 520, 0, 338,
	339, 0, 0, 340, 341, 0, 0, 342, 343, 344,
	345, 0, 346, 347, 349, 351, 348, 350, 352, 354,
	355, 353, 0, 356, 357, 360, 361, 359, 0, 358,
	0, 223, 0, 362, 0, 521, 363, 522, 365, 366,
	0, 367, 368, 369, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 523, 0, 376, 0, 524, 377, 370,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 386,
	525, 387, 526, 388, 389, 0, 390, 0, 391, 392,
	393, 394, 395, 396, 397, 527, 398, 399, 0, 400,
	401, 402, 403, 404, 405, 0, 407, 408, 409, 406,
	410, 411, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 528, 419, 0, 420, 424, 425, 426, 427, 428,
	429, 430, 0, 436, 437, 431, 433, 434, 435, 432,
	438, 439, 440, 0, 441, 421, 422, 442, 443, 0,
	444, 445, 529, 446, 447, 0, 448, 449, 450, 451,
	423, 452, 456, 457, 453, 454, 455, 530, 0, 459,
	460, 458, 0, 461, 462, 463, 464, 465, 288, 466,
	0, 467, 531, 532, 533, 534, 0, 474, 0, 468,
	469, 535, 470, 536, 0, 471, 472, 473, 0, 475,
	476, 0, 0, 477, 478, 479, 481, 482, 480, 484,
	0, 485, 0, 483, 486, 487, 488, 537, 538, 539,
	218, 490, 489, 540, 0, 0, 0, 0, 491, 492,
	541, 493, 494, 495, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	498, 235, 499, 238, 236, 237, 500, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 0, 246, 501, 502,
	503, 0, 247, 248, 504, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 0, 264,
	265, 0, 0, 0, 0, 0, 0, 0, 266, 267,
	268, 269, 270, 271, 505, 506, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 507, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 508, 509, 0, 221,
	0, 0, 0, 0, 0, 294, 295, 296, 510, 297,
	298, 0, 299, 0, 300, 0, 0, 0, 301, 302,
	0, 303, 511, 0, 512, 304, 0, 305, 306, 307,
	308, 513, 514, 515, 364, 0, 309, 310, 0, 311,
	312, 313, 315, 0, 0, 222, 314, 316, 323, 0,
	0, 317, 516, 319, 318, 320, 321, 322, 517, 0,
	518, 0, 324, 0, 519, 0, 325, 326, 327, 0,
	328, 329, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 520, 0, 338, 339, 0, 0,
	340, 341, 0, 0, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 355, 353, 0,
	356, 357, 360, 361, 359, 0, 358, 0, 223, 0,
	362, 0, 521, 363, 522, 365, 366, 0, 367, 368,
	369, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 0, 376, 0, 524, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 525, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 527, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 528, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 431, 433, 434, 435, 432, 438, 439, 440,
	0, 441, 421, 422, 442, 443, 0, 444, 445, 529,
	446, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	457, 453, 454, 455, 530, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 466, 0, 467, 531,
	532, 533, 534, 0, 474, 0, 468, 469, 535, 470,
	536, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 484, 0, 485, 0,
	483, 486, 487, 488, 537, 538, 539, 218, 490, 489,
	540, 0, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 497, 498, 235, 499,
	238, 236, 237, 500, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 501, 502, 503, 0, 247,
	248, 504, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 562, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 505, 506, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 507, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 508, 509, 0, 0, 0, 0, 0,
	0, 0, 294, 295, 296, 510, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 302, 563, 303, 511,
	0, 512, 304, 0, 305, 306, 307, 308, 513, 514,
	515, 364, 0, 309, 310, 0, 311, 312, 313, 315,
	0, 0, 0, 314, 316, 323, 0, 0, 317, 516,
	319, 318, 320, 321, 322, 517, 0, 518, 0, 324,
	0, 519, 0, 325, 326, 327, 0, 328, 329, 0,
	0, 330, 331, 332, 333, 334, 0, 336, 335, 0,
	337, 520, 0, 338, 339, 0, 0, 340, 341, 0,
	0, 342, 343, 344, 345, 0, 346, 347, 349, 351,
	348, 350, 352, 354, 355, 353, 0, 356, 357, 360,
	361, 359, 0, 358, 0, 0, 0, 362, 0, 521,
	363, 522, 365, 366, 0, 367, 368, 369, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 523, 0, 376,
	0, 524, 377, 370, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 386, 525, 387, 526, 388, 389, 0,
	390, 0, 391, 392, 393, 394, 395, 396, 397, 527,
	398, 399, 0, 400, 401, 402, 403, 404, 405, 0,
	407, 408, 409, 406, 410, 411, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 528, 419, 0, 420, 424,
	425, 426, 427, 428, 429, 430, 564, 436, 437, 431,
	433, 434, 435, 432, 438, 439, 440, 0, 441, 421,
	422, 442, 443, 0, 444, 445, 529, 446, 447, 0,
	448, 449, 450, 451, 423, 452, 456, 457, 453, 454,
	455, 530, 0, 459, 460, 458, 0, 461, 462, 463,
	464, 465, 288, 466, 0, 467, 531, 532, 533, 534,
	0, 474, 0, 468, 469, 535, 470, 536, 0, 471,
	472, 473, 0, 475, 476, 0, 0, 477, 478, 479,
	481, 482, 480, 484, 0, 485, 0, 483, 486, 487,
	488, 537, 538, 539, 218, 490, 489, 540, 0, 0,
	0, 0, 491, 492, 541, 493, 494, 495, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 230, 232,
	231, 233, 234, 497, 498, 235, 499, 238, 236, 237,
	500, 0, 239, 240, 241, 242, 243, 244, 245, 0,
	0, 246, 501, 502, 503, 0, 247, 248, 504, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 0, 264, 265, 0, 0, 0, 0, 0,
	0, 0, 266, 267, 1979, 269, 270, 271, 505, 506,
	0, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 283,
	507, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	508, 509, 0, 221, 0, 0, 0, 0, 0, 294,
	295, 296, 510, 297, 298, 0, 299, 0, 300, 0,
	0, 0, 301, 302, 0, 303, 511, 0, 512, 304,
	0, 305, 306, 307, 308, 513, 514, 515, 364, 0,
	309, 310, 0, 311, 312, 313, 315, 0, 0, 222,
	314, 316, 323, 0, 0, 317, 516, 319, 318, 320,
	321, 322, 517, 0, 518, 0, 324, 0, 519, 0,
	325, 326, 327, 0, 328, 329, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 520, 0,
	338, 339, 0, 0, 340, 341, 0, 0, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 355, 353, 0, 356, 357, 360, 361, 359, 0,
	358, 0, 223, 0, 362, 0, 521, 363, 522, 365,
	366, 0, 367, 368, 369, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 0, 376, 0, 524, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 525, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 527, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 528, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 0, 436, 437, 431, 433, 434, 435,
	432, 438, 439, 440, 0, 441, 421, 422, 442, 443,
	0, 444, 445, 529, 446, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 457, 453, 454, 455, 530, 0,
	459, 460, 458, 0, 461, 462, 463, 464, 465, 288,
	466, 0, 467, 531, 532, 533, 534, 0, 474, 0,
	468, 469, 535, 470, 536, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	484, 0, 485, 0, 483, 486, 487, 488, 537, 538,
	539, 218, 490, 489, 540, 0, 0, 0, 0, 491,
	492, 541, 493, 494, 495, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	496, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	497, 498, 235, 499, 238, 236, 237, 500, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 501,
	502, 503, 0, 247, 248, 504, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 1977, 269, 270, 271, 505, 506, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 507, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 508, 509, 0,
	221, 0, 0, 0, 0, 0, 294, 295, 296, 510,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	302, 0, 303, 511, 0, 512, 304, 0, 305, 306,
	307, 308, 513, 514, 515, 364, 0, 309, 310, 0,
	311, 312, 313, 315, 0, 0, 222, 314, 316, 323,
	0, 0, 317, 516, 319, 318, 320, 321, 322, 517,
	0, 518, 0, 324, 0, 519, 0, 325, 326, 327,
	0, 328, 329, 0, 0, 330, 331, 332, 333, 334,
	0, 336, 335, 0, 337, 520, 0, 338, 339, 0,
	0, 340, 341, 0, 0, 342, 343, 344, 345, 0,
	346, 347, 349, 351, 348, 350, 352, 354, 355, 353,
	0, 356, 357, 360, 361, 359, 0, 358, 0, 223,
	0, 362, 0, 521, 363, 522, 365, 366, 0, 367,
	368, 369, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 523, 0, 376, 0, 524, 377, 370, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 386, 525, 387,
	526, 388, 389, 0, 390, 0, 391, 392, 393, 394,
	395, 396, 397, 527, 398, 399, 0, 400, 401, 402,
	403, 404, 405, 0, 407, 408, 409, 406, 410, 411,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 528,
	419, 0, 420, 424, 425, 426, 427, 428, 429, 430,
	0, 436, 437, 431, 433, 434, 435, 432, 438, 439,
	440, 0, 441, 421, 422, 442, 443, 0, 444, 445,
	529, 446, 447, 0, 448, 449, 450, 451, 423, 452,
	456, 457, 453, 454, 455, 530, 0, 459, 460, 458,
	0, 461, 462, 463, 464, 465, 288, 466, 0, 467,
	531, 532, 533, 534, 0, 474, 0, 468, 469, 535,
	470, 536, 0, 471, 472, 473, 0, 475, 476, 0,
	0, 477, 478, 479, 481, 482, 480, 484, 0, 485,
	0, 483, 486, 487, 488, 537, 538, 539, 218, 490,
	489, 540, 0, 0, 0, 0, 491, 492, 541, 493,
	494, 495, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 0, 246, 501, 502, 503, 0,
	247, 248, 504, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 0, 264, 265, 0,
	0, 0, 0, 0, 0, 0, 266, 267, 1975, 269,
	270, 271, 505, 506, 0, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 508, 509, 0, 221, 0, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 0, 300, 0, 0, 0, 301, 302, 0, 303,
	511, 0, 512, 304, 0, 305, 306, 307, 308, 513,
	514, 515, 364, 0, 309, 310, 0, 311, 312, 313,
	315, 0, 0, 222, 314, 316, 323, 0, 0, 317,
	516, 319, 318, 320, 321, 322, 517, 0, 518, 0,
	324, 0, 519, 0, 325, 326, 327, 0, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 520, 0, 338, 339, 0, 0, 340, 341,
	0, 0, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 353, 0, 356, 357,
	360, 361, 359, 0, 358, 0, 223, 0, 362, 0,
	521, 363, 522, 365, 366, 0, 367, 368, 369, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 0,
	376, 0, 524, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 525, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	431, 433, 434, 435, 432, 438, 439, 440, 0, 441,
	421, 422, 442, 443, 0, 444, 445, 529, 446, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 530, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 466, 0, 467, 531, 532, 533,
	534, 0, 474, 0, 468, 469, 535, 470, 536, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 484, 0, 485, 0, 483, 486,
	487, 488, 537, 538, 539, 218, 490, 489, 540, 0,
	0, 0, 0, 491, 492, 541, 493, 494, 495, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 497, 498, 235, 499, 238, 236,
	237, 500, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 501, 502, 503, 0, 247, 248, 504,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 505,
	506, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 507, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 508, 509, 0, 221, 0, 0, 0, 0, 0,
	294, 295, 296, 510, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 0, 303, 511, 0, 512,
	304, 0, 305, 306, 307, 308, 1922, 514, 515, 364,
	0, 309, 310, 0, 311, 312, 313, 315, 0, 0,
	222, 314, 316, 323, 0, 0, 317, 516, 319, 318,
	320, 321, 322, 517, 0, 518, 0, 324, 0, 519,
	0, 325, 326, 327, 0, 328, 329, 0, 0, 330,
	331, 332, 333, 334, 0, 336, 335, 0, 337, 520,
	0, 338, 339, 0, 0, 340, 341, 0, 0, 342,
	343, 344, 345, 0, 346, 347, 349, 351, 348, 350,
	352, 354, 355, 353, 0, 356, 357, 360, 361, 359,
	0, 358, 0, 223, 0, 362, 0, 521, 363, 522,
	365, 366, 0, 367, 368, 369, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 523, 0, 376, 0, 524,
	377, 370, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 386, 525, 387, 526, 388, 389, 0, 390, 0,
	391, 392, 393, 394, 395, 396, 397, 527, 398, 399,
	0, 400, 401, 402, 403, 404, 405, 0, 407, 408,
	409, 406, 410, 411, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 528, 419, 0, 420, 424, 425, 426,
	427, 428, 429, 430, 0, 436, 437, 431, 433, 434,
	435, 432, 438, 439, 440, 0, 441, 421, 422, 442,
	443, 0, 444, 445, 529, 446, 447, 0, 448, 449,
	450, 451, 423, 452, 456, 457, 453, 454, 455, 530,
	0, 459, 460, 458, 0, 461, 462, 463, 464, 465,
	288, 466, 0, 467, 531, 532, 533, 534, 0, 474,
	0, 468, 469, 535, 470, 536, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 484, 0, 485, 0, 483, 486, 487, 488, 537,
	538, 539, 0, 490, 489, 540, 716, 0, 218, 0,
	491, 492, 541, 493, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 0, 246, 501, 502, 503, 0,
	247, 248, 504, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 0, 264, 265, 0,
	0, 0, 0, 0, 0, 0, 266, 267, 268, 269,
	270, 271, 505, 506, 0, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 508, 509, 0, 0, 0, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 0, 300, 0, 0, 0, 301, 302, 0, 303,
	511, 0, 512, 304, 0, 305, 306, 307, 308, 513,
	514, 515, 364, 0, 309, 310, 0, 311, 312, 313,
	315, 0, 0, 0, 314, 316, 323, 0, 0, 317,
	516, 319, 318, 320, 321, 322, 517, 0, 518, 715,
	324, 0, 519, 0, 325, 326, 327, 0, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 520, 0, 338, 339, 0, 0, 340, 341,
	0, 0, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 353, 0, 356, 357,
	360, 361, 359, 0, 358, 0, 0, 0, 362, 0,
	521, 363, 522, 365, 366, 0, 367, 368, 369, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 0,
	376, 0, 524, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 525, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	431, 433, 434, 435, 432, 438, 439, 440, 0, 441,
	421, 422, 442, 443, 0, 444, 445, 529, 446, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 530, 0, 459, 460, 458, 714, 461, 462,
	463, 464, 465, 288, 466, 0, 467, 531, 532, 533,
	534, 0, 474, 0, 468, 469, 535, 470, 536, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 484, 0, 485, 0, 483, 486,
	487, 488, 537, 538, 539, 218, 490, 489, 540, 0,
	0, 0, 0, 491, 492, 541, 493, 494, 495, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 497, 498, 235, 499, 238, 236,
	237, 500, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 501, 502, 503, 0, 247, 248, 504,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 505,
	506, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 507, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 508, 509, 0, 2506, 0, 0, 0, 0, 0,
	294, 295, 296, 510, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 0, 303, 511, 0, 512,
	304, 0, 305, 306, 307, 308, 513, 514, 515, 364,
	0, 309, 310, 0, 311, 312, 313, 315, 0, 0,
	0, 314, 316, 323, 0, 0, 317, 516, 319, 318,
	320, 321, 322, 517, 0, 518, 0, 324, 0, 519,
	0, 325, 326, 327, 0, 328, 329, 0, 0, 330,
	331, 332, 333, 334, 0, 336, 335, 0, 337, 520,
	0, 338, 339, 0, 0, 340, 341, 0, 0, 342,
	343, 344, 345, 0, 346, 347, 349, 351, 348, 350,
	352, 354, 355, 353, 0, 356, 357, 360, 361, 359,
	0, 358, 0, 0, 0, 362, 0, 521, 363, 522,
	365, 366, 0, 367, 368, 369, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 523, 0, 376, 0, 524,
	377, 370, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 386, 525, 387, 526, 388, 389, 3349, 390, 0,
	391, 392, 393, 394, 395, 396, 397, 527, 398, 399,
	0, 400, 401, 402, 403, 404, 405, 0, 407, 408,
	409, 406, 410, 411, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 528, 419, 0, 420, 424, 425, 426,
	427, 428, 429, 430, 0, 436, 437, 431, 433, 434,
	435, 432, 438, 439, 440, 0, 441, 421, 422, 442,
	443, 0, 444, 445, 529, 446, 447, 0, 448, 449,
	450, 451, 423, 452, 456, 457, 453, 454, 455, 530,
	0, 459, 460, 458, 0, 461, 462, 463, 464, 465,
	288, 466, 0, 467, 531, 532, 533, 534, 0, 474,
	0, 468, 469, 535, 470, 536, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 484, 0, 485, 0, 483, 486, 487, 488, 537,
	538, 539, 0, 490, 489, 540, 549, 0, 218, 0,
	491, 492, 541, 493, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	548, 229, 0, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 0, 246, 501, 502, 503, 0,
	247, 248, 504, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 0, 264, 265, 0,
	0, 0, 0, 0, 0, 0, 266, 267, 268, 269,
	270, 271, 505, 506, 0, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 508, 509, 0, 0, 0, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 0, 300, 0, 0, 0, 301, 302, 0, 303,
	511, 0, 512, 304, 0, 305, 306, 307, 308, 513,
	514, 515, 364, 0, 309, 310, 0, 311, 312, 313,
	315, 0, 0, 0, 314, 316, 323, 0, 0, 317,
	516, 319, 318, 320, 321, 322, 517, 0, 518, 0,
	324, 0, 519, 0, 325, 326, 327, 0, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 520, 0, 338, 339, 0, 0, 340, 341,
	0, 0, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 353, 0, 356, 357,
	360, 361, 359, 0, 358, 0, 0, 0, 362, 0,
	521, 363, 522, 365, 366, 0, 367, 368, 369, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 0,
	376, 0, 524, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 525, 387, 526, 547, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	431, 433, 434, 435, 432, 438, 439, 440, 0, 441,
	421, 422, 442, 443, 0, 444, 445, 529, 446, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 530, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 466, 0, 467, 531, 532, 533,
	534, 0, 474, 0, 468, 469, 535, 470, 536, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 484, 0, 485, 0, 483, 486,
	487, 488, 537, 538, 539, 0, 490, 489, 540, 218,
	3358, 0, 0, 491, 492, 541, 493, 494, 495, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 497, 498,
	235, 499, 238, 236, 237, 500, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 501, 502, 503,
	0, 247, 248, 504, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 505, 506, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 507, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 508, 509, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 510, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 302, 0,
	303, 511, 0, 512, 304, 0, 305, 306, 307, 308,
	513, 514, 515, 364, 0, 309, 310, 0, 311, 312,
	313, 315, 0, 0, 0, 314, 316, 323, 0, 0,
	317, 516, 319, 318, 320, 321, 322, 517, 0, 518,
	0, 324, 0, 519, 0, 325, 326, 327, 0, 328,
	329, 0, 0, 330, 331, 332, 333, 334, 0, 336,
	335, 0, 337, 520, 0, 338, 339, 0, 0, 340,
	341, 0, 0, 342, 343, 344, 345, 0, 346, 347,
	349, 351, 348, 350, 352, 354, 355, 353, 0, 356,
	357, 360, 361, 359, 0, 358, 0, 0, 0, 362,
	0, 521, 363, 522, 365, 366, 0, 367, 368, 369,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 523,
	0, 376, 0, 524, 377, 370, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 386, 525, 387, 526, 388,
	389, 0, 390, 0, 391, 392, 393, 394, 395, 396,
	397, 527, 398, 399, 0, 400, 401, 402, 403, 404,
	405, 0, 407, 408, 409, 406, 410, 411, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 528, 419, 0,
	420, 424, 425, 426, 427, 428, 429, 430, 0, 436,
	437, 431, 433, 434, 435, 432, 438, 439, 440, 0,
	441, 421, 422, 442, 443, 0, 444, 445, 529, 446,
	447, 0, 448, 449, 450, 451, 423, 452, 456, 457,
	453, 454, 455, 530, 0, 459, 460, 458, 0, 461,
	462, 463, 464, 465, 288, 466, 0, 467, 531, 532,
	533, 534, 0, 474, 0, 468, 469, 535, 470, 536,
	0, 471, 472, 473, 0, 475, 476, 0, 0, 477,
	478, 479, 481, 482, 480, 484, 0, 485, 0, 483,
	486, 487, 488, 537, 538, 539, 0, 490, 489, 540,
	218, 2493, 0, 0, 491, 492, 541, 493, 494, 495,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	498, 235, 499, 238, 236, 237, 500, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 0, 246, 501, 502,
	503, 0, 247, 248, 504, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 0, 264,
	265, 0, 0, 0, 0, 0, 0, 0, 266, 267,
	268, 269, 270, 271, 505, 506, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 507, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 508, 509, 0, 0,
	0, 0, 0, 0, 0, 294, 295, 296, 510, 297,
	298, 0, 299, 0, 300, 0, 0, 0, 301, 302,
	0, 303, 511, 0, 512, 304, 0, 305, 306, 307,
	308, 513, 514, 515, 364, 0, 309, 310, 0, 311,
	312, 313, 315, 0, 0, 0, 314, 316, 323, 0,
	0, 317, 516, 319, 318, 320, 321, 322, 517, 0,
	518, 0, 324, 0, 519, 0, 325, 326, 327, 0,
	328, 329, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 520, 0, 338, 339, 0, 0,
	340, 341, 0, 0, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 355, 353, 0,
	356, 357, 360, 361, 359, 0, 358, 0, 0, 0,
	362, 0, 521, 363, 522, 365, 366, 0, 367, 368,
	369, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 0, 376, 0, 524, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 525, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 527, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 528, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 431, 433, 434, 435, 432, 438, 439, 440,
	0, 441, 421, 422, 442, 443, 0, 444, 445, 529,
	446, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	457, 453, 454, 455, 530, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 466, 0, 467, 531,
	532, 533, 534, 0, 474, 0, 468, 469, 535, 470,
	536, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 484, 0, 485, 0,
	483, 486, 487, 488, 537, 538, 539, 218, 490, 489,
	540, 0, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 497, 498, 235, 499,
	238, 236, 237, 500, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 501, 502, 503, 0, 247,
	248, 504, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 505, 506, 3139, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 507, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 508, 509, 0, 0, 0, 0, 0,
	0, 0, 294, 295, 296, 510, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 302, 0, 303, 511,
	0, 512, 304, 0, 305, 306, 307, 308, 513, 514,
	515, 364, 0, 309, 310, 0, 311, 312, 313, 315,
	0, 0, 0, 314, 316, 323, 0, 0, 317, 516,
	319, 318, 320, 321, 322, 517, 0, 518, 0, 324,
	0, 519, 0, 325, 326, 327, 0, 328, 329, 0,
	0, 330, 331, 332, 333, 334, 0, 336, 335, 0,
	337, 520, 0, 338, 339, 0, 0, 340, 341, 0,
	0, 342, 343, 344, 345, 0, 346, 347, 349, 351,
	348, 350, 352, 354, 355, 353, 0, 356, 357, 360,
	361, 359, 0, 358, 0, 0, 0, 362, 0, 521,
	363, 522, 365, 366, 0, 367, 368, 369, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 523, 0, 376,
	0, 524, 377, 370, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 386, 525, 387, 526, 388, 389, 0,
	390, 0, 391, 392, 393, 394, 395, 396, 397, 527,
	398, 399, 0, 400, 401, 402, 403, 404, 405, 0,
	407, 408, 409, 406, 410, 411, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 528, 419, 0, 420, 424,
	425, 426, 427, 428, 429, 430, 0, 436, 437, 431,
	433, 434, 435, 432, 438, 439, 440, 0, 441, 421,
	422, 442, 443, 0, 444, 445, 529, 446, 447, 0,
	448, 449, 450, 451, 423, 452, 456, 457, 453, 454,
	455, 530, 0, 459, 460, 458, 0, 461, 462, 463,
	464, 465, 288, 466, 0, 467, 531, 532, 533, 534,
	0, 474, 0, 468, 469, 535, 470, 536, 0, 471,
	472, 473, 0, 475, 476, 0, 0, 477, 478, 479,
	481, 482, 480, 484, 0, 485, 0, 483, 486, 487,
	488, 537, 538, 539, 218, 490, 489, 540, 0, 0,
	0, 0, 491, 492, 541, 493, 494, 495, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 496, 0, 2270, 0, 0, 230, 232,
	231, 233, 234, 497, 498, 235, 499, 238, 236, 237,
	500, 0, 239, 240, 241, 242, 243, 244, 245, 0,
	0, 246, 501, 502, 503, 0, 247, 248, 504, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 0, 264, 265, 0, 0, 0, 0, 0,
	0, 0, 266, 267, 268, 269, 270, 271, 505, 506,
	0, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 283,
	507, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	508, 509, 0, 0, 0, 0, 0, 0, 0, 294,
	295, 296, 510, 297, 298, 0, 299, 0, 300, 0,
	0, 0, 301, 302, 0, 303, 511, 0, 512, 304,
	0, 305, 306, 307, 308, 513, 514, 515, 364, 0,
	309, 310, 0, 311, 312, 313, 315, 0, 0, 0,
	314, 316, 323, 0, 0, 317, 516, 319, 318, 320,
	321, 322, 517, 0, 518, 0, 324, 0, 519, 0,
	325, 326, 327, 0, 328, 329, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 520, 0,
	338, 339, 0, 0, 340, 341, 0, 0, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 355, 353, 0, 356, 357, 360, 361, 359, 0,
	358, 0, 0, 0, 362, 0, 521, 363, 522, 365,
	366, 0, 367, 368, 369, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 0, 376, 0, 524, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 525, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 527, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 528, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 0, 436, 437, 431, 433, 434, 435,
	432, 438, 439, 440, 0, 441, 421, 422, 442, 443,
	0, 444, 445, 529, 446, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 457, 453, 454, 455, 530, 0,
	459, 460, 458, 0, 461, 462, 463, 464, 465, 288,
	466, 0, 467, 531, 532, 533, 534, 0, 474, 0,
	468, 469, 535, 470, 536, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	484, 0, 485, 0, 483, 486, 487, 488, 537, 538,
	539, 0, 490, 489, 540, 218, 2493, 0, 0, 491,
	492, 541, 493, 494, 495, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 497, 498, 235, 499, 238, 236,
	237, 500, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 501, 502, 503, 0, 247, 248, 504,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 505,
	506, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 507, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 508, 509, 0, 0, 0, 0, 0, 0, 0,
	294, 295, 296, 510, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 0, 303, 511, 0, 512,
	304, 0, 305, 306, 307, 308, 513, 514, 515, 364,
	0, 309, 310, 0, 311, 312, 313, 315, 0, 0,
	0, 314, 316, 323, 0, 0, 317, 516, 319, 318,
	320, 321, 322, 517, 0, 518, 0, 324, 0, 519,
	0, 325, 326, 327, 0, 328, 329, 0, 0, 330,
	331, 332, 333, 334, 0, 336, 335, 0, 337, 520,
	0, 338, 339, 0, 0, 340, 341, 0, 0, 342,
	343, 344, 345, 0, 346, 347, 349, 351, 348, 350,
	352, 354, 355, 353, 0, 356, 357, 360, 361, 359,
	0, 358, 0, 0, 0, 362, 0, 521, 363, 522,
	365, 366, 0, 367, 368, 369, 0, 0, 371, 372,
	2490, 0, 0, 374, 375, 523, 0, 376, 0, 524,
	377, 370, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 386, 525, 387, 526, 388, 389, 0, 390, 0,
	391, 392, 393, 394, 395, 396, 397, 527, 398, 399,
	0, 400, 401, 402, 403, 404, 405, 0, 407, 408,
	409, 406, 410, 411, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 528, 419, 0, 420, 424, 425, 426,
	427, 428, 429, 430, 0, 436, 437, 431, 433, 434,
	435, 432, 438, 439, 440, 0, 441, 421, 422, 442,
	443, 0, 444, 445, 529, 446, 447, 0, 448, 449,
	450, 451, 423, 452, 456, 457, 453, 454, 455, 530,
	0, 459, 460, 458, 0, 461, 462, 463, 464, 465,
	288, 466, 0, 467, 531, 532, 533, 534, 0, 474,
	0, 468, 469, 535, 470, 536, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 484, 0, 485, 0, 483, 486, 487, 488, 537,
	538, 539, 218, 490, 489, 540, 0, 0, 0, 0,
	491, 492, 541, 493, 494, 495, 0, 0, 0, 224,
	225, 226, 227, 228, 1956, 229, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 230, 232, 231, 233,
	234, 497, 498, 235, 499, 238, 236, 237, 500, 0,
	239, 240, 241, 242, 243, 244, 245, 0, 0, 246,
	501, 502, 503, 0, 247, 248, 504, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	0, 264, 265, 0, 0, 0, 0, 0, 0, 0,
	266, 267, 268, 269, 270, 271, 505, 506, 0, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 283, 507, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 508, 509,
	0, 0, 0, 0, 0, 0, 0, 294, 295, 296,
	510, 297, 298, 0, 299, 0, 300, 0, 0, 0,
	301, 302, 0, 303, 511, 0, 512, 304, 0, 305,
	306, 307, 308, 513, 514, 515, 364, 0, 309, 310,
	0, 311, 312, 313, 315, 0, 0, 0, 314, 316,
	323, 0, 0, 317, 516, 319, 318, 320, 321, 322,
	517, 0, 518, 0, 324, 0, 519, 0, 325, 326,
	327, 0, 328, 329, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 520, 0, 338, 339,
	0, 0, 340, 341, 0, 0, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 355,
	353, 0, 356, 357, 360, 361, 359, 0, 358, 0,
	0, 0, 362, 0, 521, 363, 522, 365, 366, 0,
	367, 368, 369, 0, 0, 371, 372, 373, 0, 0,
	374, 375, 523, 0, 376, 0, 524, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 386, 525,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 527, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	528, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 0, 436, 437, 431, 433, 434, 435, 432, 438,
	439, 440, 0, 441, 421, 422, 442, 443, 0, 444,
	445, 529, 446, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 457, 453, 454, 455, 530, 0, 459, 460,
	458, 0, 461, 462, 463, 464, 465, 288, 466, 0,
	467, 531, 532, 533, 534, 0, 474, 0, 468, 469,
	535, 470, 536, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 484, 0,
	485, 0, 483, 486, 487, 488, 537, 538, 539, 0,
	490, 489, 540, 1946, 0, 218, 0, 491, 492, 541,
	493, 494, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 497, 498, 235, 499, 238, 236,
	237, 500, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 501, 502, 503, 0, 247, 248, 504,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 505,
	506, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 507, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 508, 509, 0, 0, 0, 0, 0, 0, 0,
	294, 295, 296, 510, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 0, 303, 511, 0, 512,
	304, 0, 305, 306, 307, 308, 513, 514, 515, 364,
	0, 309, 310, 0, 311, 312, 313, 315, 0, 0,
	0, 314, 316, 323, 0, 0, 317, 516, 319, 318,
	320, 321, 322, 517, 0, 518, 0, 324, 0, 519,
	0, 325, 326, 327, 0, 328, 329, 0, 0, 330,
	331, 332, 333, 334, 0, 336, 335, 0, 337, 520,
	0, 338, 339, 0, 0, 340, 341, 0, 0, 342,
	343, 344, 345, 0, 346, 347, 349, 351, 348, 350,
	352, 354, 355, 353, 0, 356, 357, 360, 361, 359,
	0, 358, 0, 0, 0, 362, 0, 521, 363, 522,
	365, 366, 0, 367, 368, 369, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 523, 0, 376, 0, 524,
	377, 370, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 386, 525, 387, 526, 388, 389, 0, 390, 0,
	391, 392, 393, 394, 395, 396, 397, 527, 398, 399,
	0, 400, 401, 402, 403, 404, 405, 0, 407, 408,
	409, 406, 410, 411, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 528, 419, 0, 420, 424, 425, 426,
	427, 428, 429, 430, 0, 436, 437, 431, 433, 434,
	435, 432, 438, 439, 440, 0, 441, 421, 422, 442,
	443, 0, 444, 445, 529, 446, 447, 0, 448, 449,
	450, 451, 423, 452, 456, 457, 453, 454, 455, 530,
	0, 459, 460, 458, 0, 461, 462, 463, 464, 465,
	288, 466, 0, 467, 531, 532, 533, 534, 0, 474,
	0, 468, 469, 535, 470, 536, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 484, 0, 485, 0, 483, 486, 487, 488, 537,
	538, 539, 0, 490, 489, 540, 590, 0, 218, 0,
	491, 492, 541, 493, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 230, 1076, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 0, 246, 501, 502, 1074, 0,
	247, 248, 504, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 0, 264, 265, 0,
	0, 0, 0, 0, 0, 0, 266, 267, 268, 269,
	270, 271, 505, 506, 0, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 508, 509, 0, 0, 0, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 0, 300, 0, 0, 0, 301, 302, 0, 303,
	511, 0, 512, 304, 0, 305, 306, 307, 308, 513,
	514, 515, 364, 0, 309, 310, 0, 311, 312, 313,
	315, 0, 0, 0, 314, 316, 323, 0, 0, 317,
	516, 319, 318, 320, 321, 322, 517, 0, 518, 0,
	324, 0, 519, 0, 325, 326, 327, 0, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 520, 0, 338, 339, 0, 0, 340, 341,
	0, 0, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 591, 0, 356, 357,
	360, 361, 359, 0, 358, 0, 0, 0, 362, 0,
	521, 363, 522, 365, 366, 0, 367, 368, 369, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 0,
	376, 0, 524, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 525, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 587, 427, 428, 429, 430, 0, 436, 437,
	431, 433, 434, 435, 432, 438, 1077, 440, 0, 441,
	421, 422, 442, 443, 0, 444, 445, 529, 446, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 530, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 466, 0, 467, 586, 532, 533,
	534, 0, 474, 0, 468, 469, 535, 470, 536, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 484, 0, 485, 0, 483, 486,
	487, 488, 537, 538, 539, 0, 490, 489, 540, 590,
	0, 218, 0, 491, 492, 541, 493, 494, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	496, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	497, 498, 235, 499, 238, 236, 237, 500, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 501,
	502, 503, 0, 247, 580, 504, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 505, 506, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 507, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 508, 509, 0,
	0, 0, 0, 0, 0, 0, 294, 295, 296, 510,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	302, 0, 303, 511, 0, 512, 304, 0, 305, 306,
	307, 308, 513, 514, 515, 364, 0, 309, 310, 0,
	311, 312, 313, 315, 0, 0, 0, 314, 316, 323,
	0, 0, 317, 516, 319, 318, 320, 321, 322, 517,
	0, 518, 0, 324, 0, 519, 0, 325, 326, 327,
	0, 328, 329, 0, 0, 330, 331, 332, 333, 334,
	0, 336, 335, 0, 337, 520, 0, 338, 339, 0,
	0, 340, 341, 0, 0, 342, 343, 344, 345, 0,
	346, 347, 349, 351, 348, 350, 352, 354, 355, 591,
	0, 356, 357, 360, 361, 359, 0, 358, 0, 0,
	0, 362, 0, 521, 363, 522, 365, 366, 0, 367,
	368, 369, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 523, 0, 376, 0, 524, 377, 370, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 386, 525, 387,
	526, 388, 389, 0, 390, 0, 391, 392, 393, 394,
	395, 396, 397, 527, 398, 399, 0, 400, 401, 402,
	403, 404, 405, 0, 407, 408, 409, 406, 410, 411,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 528,
	419, 0, 420, 424, 425, 587, 427, 428, 429, 430,
	0, 436, 437, 431, 433, 434, 435, 432, 438, 1363,
	440, 0, 441, 421, 422, 442, 443, 0, 444, 445,
	529, 446, 447, 0, 448, 449, 450, 451, 423, 452,
	456, 457, 453, 454, 455, 530, 0, 459, 460, 458,
	0, 461, 462, 463, 464, 465, 288, 466, 0, 467,
	586, 532, 533, 534, 0, 474, 0, 468, 469, 535,
	470, 536, 0, 471, 472, 473, 0, 475, 476, 0,
	0, 477, 478, 479, 481, 482, 480, 484, 0, 485,
	0, 483, 486, 487, 488, 537, 538, 539, 0, 490,
	489, 540, 1349, 0, 218, 0, 491, 492, 541, 493,
	494, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 230, 232,
	231, 233, 234, 497, 498, 235, 499, 238, 236, 237,
	500, 0, 239, 240, 241, 242, 243, 244, 245, 0,
	0, 246, 501, 502, 503, 0, 247, 248, 504, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 0, 264, 265, 0, 0, 0, 0, 0,
	0, 0, 266, 267, 268, 269, 270, 271, 505, 506,
	0, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 283,
	507, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	508, 509, 0, 0, 0, 0, 0, 0, 0, 294,
	295, 296, 510, 297, 298, 0, 299, 0, 300, 0,
	0, 0, 301, 302, 0, 303, 511, 0, 512, 304,
	0, 305, 306, 307, 308, 1348, 514, 515, 364, 0,
	309, 310, 0, 311, 312, 313, 315, 0, 0, 0,
	314, 316, 323, 0, 0, 317, 516, 319, 318, 320,
	321, 322, 517, 0, 518, 0, 324, 0, 519, 0,
	325, 326, 327, 0, 328, 329, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 520, 0,
	338, 339, 0, 0, 340, 341, 0, 0, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 355, 353, 0, 356, 357, 360, 361, 359, 0,
	358, 0, 0, 0, 362, 0, 521, 363, 522, 365,
	366, 0, 367, 368, 369, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 0, 376, 0, 524, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 525, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 527, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 528, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 0, 436, 437, 431, 433, 434, 435,
	432, 438, 439, 440, 0, 441, 421, 422, 442, 443,
	0, 444, 445, 529, 446, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 457, 453, 454, 455, 530, 0,
	459, 460, 458, 0, 461, 462, 463, 464, 465, 288,
	466, 0, 467, 531, 532, 533, 534, 0, 474, 0,
	468, 469, 535, 470, 536, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	484, 0, 485, 0, 483, 486, 487, 488, 537, 538,
	539, 0, 490, 489, 540, 1297, 0, 218, 0, 491,
	492, 541, 493, 494, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 497, 498, 235, 499,
	238, 236, 237, 500, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 501, 502, 503, 0, 247,
	248, 504, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 505, 506, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 507, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 508, 509, 0, 0, 0, 0, 0,
	0, 0, 294, 295, 296, 510, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 302, 0, 303, 511,
	0, 512, 304, 0, 305, 306, 307, 308, 1296, 514,
	515, 364, 0, 309, 310, 0, 311, 312, 313, 315,
	0, 0, 0, 314, 316, 323, 0, 0, 317, 516,
	319, 318, 320, 321, 322, 517, 0, 518, 0, 324,
	0, 519, 0, 325, 326, 327, 0, 328, 329, 0,
	0, 330, 331, 332, 333, 334, 0, 336, 335, 0,
	337, 520, 0, 338, 339, 0, 0, 340, 341, 0,
	0, 342, 343, 344, 345, 0, 346, 347, 349, 351,
	348, 350, 352, 354, 355, 353, 0, 356, 357, 360,
	361, 359, 0, 358, 0, 0, 0, 362, 0, 521,
	363, 522, 365, 366, 0, 367, 368, 369, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 523, 0, 376,
	0, 524, 377, 370, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 386, 525, 387, 526, 388, 389, 0,
	390, 0, 391, 392, 393, 394, 395, 396, 397, 527,
	398, 399, 0, 400, 401, 402, 403, 404, 405, 0,
	407, 408, 409, 406, 410, 411, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 528, 419, 0, 420, 424,
	425, 426, 427, 428, 429, 430, 0, 436, 437, 431,
	433, 434, 435, 432, 438, 439, 440, 0, 441, 421,
	422, 442, 443, 0, 444, 445, 529, 446, 447, 0,
	448, 449, 450, 451, 423, 452, 456, 457, 453, 454,
	455, 530, 0, 459, 460, 458, 0, 461, 462, 463,
	464, 465, 288, 466, 0, 467, 531, 532, 533, 534,
	0, 474, 0, 468, 469, 535, 470, 536, 0, 471,
	472, 473, 0, 475, 476, 0, 0, 477, 478, 479,
	481, 482, 480, 484, 0, 485, 0, 483, 486, 487,
	488, 537, 538, 539, 0, 490, 489, 540, 1282, 0,
	218, 0, 491, 492, 541, 493, 494, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	498, 235, 499, 238, 236, 237, 500, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 0, 246, 501, 502,
	503, 0, 247, 248, 504, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 0, 264,
	265, 0, 0, 0, 0, 0, 0, 0, 266, 267,
	268, 269, 270, 271, 505, 506, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 507, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 508, 509, 0, 0,
	0, 0, 0, 0, 0, 294, 295, 296, 510, 297,
	298, 0, 299, 0, 300, 0, 0, 0, 301, 302,
	0, 303, 511, 0, 512, 304, 0, 305, 306, 307,
	308, 1281, 514, 515, 364, 0, 309, 310, 0, 311,
	312, 313, 315, 0, 0, 0, 314, 316, 323, 0,
	0, 317, 516, 319, 318, 320, 321, 322, 517, 0,
	518, 0, 324, 0, 519, 0, 325, 326, 327, 0,
	328, 329, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 520, 0, 338, 339, 0, 0,
	340, 341, 0, 0, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 355, 353, 0,
	356, 357, 360, 361, 359, 0, 358, 0, 0, 0,
	362, 0, 521, 363, 522, 365, 366, 0, 367, 368,
	369, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 0, 376, 0, 524, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 525, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 527, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 528, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 431, 433, 434, 435, 432, 438, 439, 440,
	0, 441, 421, 422, 442, 443, 0, 444, 445, 529,
	446, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	457, 453, 454, 455, 530, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 466, 0, 467, 531,
	532, 533, 534, 0, 474, 0, 468, 469, 535, 470,
	536, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 484, 0, 485, 0,
	483, 486, 487, 488, 537, 538, 539, 0, 490, 489,
	540, 1277, 0, 218, 0, 491, 492, 541, 493, 494,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 496, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 497, 498, 235, 499, 238, 236, 237, 500,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 501, 502, 503, 0, 247, 248, 504, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 505, 506, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 507,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 508,
	509, 0, 0, 0, 0, 0, 0, 0, 294, 295,
	296, 510, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 302, 0, 303, 511, 0, 512, 304, 0,
	305, 306, 307, 308, 513, 514, 515, 364, 0, 309,
	310, 0, 311, 312, 313, 315, 0, 0, 0, 314,
	316, 323, 0, 0, 317, 516, 319, 318, 320, 321,
	322, 517, 0, 518, 0, 324, 0, 519, 0, 325,
	326, 327, 0, 328, 329, 0, 0, 330, 331, 332,
	333, 334, 0, 336, 335, 0, 337, 520, 0, 338,
	339, 0, 0, 340, 341, 0, 0, 342, 343, 344,
	345, 0, 346, 347, 349, 351, 348, 350, 352, 354,
	355, 353, 0, 356, 357, 360, 361, 359, 0, 358,
	0, 0, 0, 362, 0, 521, 363, 522, 365, 366,
	0, 367, 368, 369, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 523, 0, 376, 0, 524, 377, 370,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 386,
	525, 387, 526, 388, 389, 0, 390, 0, 391, 392,
	393, 394, 395, 396, 397, 527, 398, 399, 0, 400,
	401, 402, 403, 404, 405, 0, 407, 408, 409, 406,
	410, 411, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 528, 419, 0, 420, 424, 425, 426, 427, 428,
	429, 430, 0, 436, 437, 431, 433, 434, 435, 432,
	438, 439, 440, 0, 441, 421, 422, 442, 443, 0,
	444, 445, 529, 446, 447, 0, 448, 449, 450, 451,
	423, 452, 456, 457, 453, 454, 455, 530, 0, 459,
	460, 458, 0, 461, 462, 463, 464, 465, 288, 466,
	0, 467, 531, 532, 533, 534, 0, 474, 0, 468,
	469, 535, 470, 536, 0, 471, 472, 473, 0, 475,
	476, 0, 0, 477, 478, 479, 481, 482, 480, 484,
	0, 485, 0, 483, 486, 487, 488, 537, 538, 539,
	0, 490, 489, 540, 1204, 0, 218, 0, 491, 492,
	541, 493, 494, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 498, 235, 499, 238,
	236, 237, 500, 0, 239, 240, 241, 242, 243, 244,
	245, 0, 0, 246, 501, 502, 503, 0, 247, 248,
	504, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 0, 264, 265, 0, 0, 0,
	0, 0, 0, 0, 266, 267, 268, 269, 270, 271,
	505, 506, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 283, 507, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 508, 509, 0, 0, 0, 0, 0, 0,
	0, 294, 295, 296, 510, 297, 298, 0, 299, 0,
	300, 0, 0, 0, 301, 302, 0, 303, 511, 0,
	512, 304, 0, 305, 306, 307, 308, 513, 514, 515,
	364, 0, 309, 310, 0, 311, 312, 313, 315, 0,
	0, 0, 314, 316, 323, 0, 0, 317, 516, 319,
	318, 320, 321, 322, 517, 0, 518, 0, 324, 0,
	519, 0, 325, 326, 327, 0, 328, 329, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	520, 0, 338, 339, 0, 0, 340, 341, 0, 0,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 355, 353, 0, 356, 357, 360, 361,
	359, 0, 358, 0, 0, 0, 362, 0, 521, 363,
	522, 365, 366, 0, 367, 368, 369, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 0, 376, 0,
	524, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 525, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 527, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 528, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 431, 433,
	434, 435, 432, 438, 439, 440, 0, 441, 421, 422,
	442, 443, 0, 444, 445, 529, 446, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 457, 453, 454, 455,
	530, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 466, 0, 467, 531, 532, 533, 534, 0,
	474, 0, 468, 469, 535, 470, 536, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 484, 0, 485, 0, 483, 486, 487, 488,
	537, 538, 539, 0, 490, 489, 540, 590, 0, 218,
	0, 491, 492, 541, 493, 494, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 230, 1076, 231, 233, 234, 497, 498,
	235, 499, 238, 236, 237, 500, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 501, 502, 1074,
	0, 247, 248, 504, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 505, 506, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 507, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 508, 509, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 510, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 302, 0,
	303, 511, 0, 512, 304, 0, 305, 306, 307, 308,
	513, 514, 515, 364, 0, 309, 310, 0, 311, 312,
	313, 315, 0, 0, 0, 314, 316, 323, 0, 0,
	317, 516, 319, 318, 320, 321, 322, 517, 0, 518,
	0, 324, 0, 519, 0, 325, 326, 327, 0, 328,
	329, 0, 0, 330, 331, 332, 333, 334, 0, 336,
	335, 0, 337, 520, 0, 338, 339, 0, 0, 340,
	341, 0, 0, 342, 343, 344, 345, 0, 346, 347,
	349, 351, 348, 350, 352, 354, 355, 591, 0, 356,
	357, 360, 361, 359, 0, 358, 0, 0, 0, 362,
	0, 521, 363, 522, 365, 366, 0, 367, 368, 369,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 523,
	0, 376, 0, 524, 377, 370, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 386, 525, 387, 526, 388,
	389, 0, 390, 0, 391, 392, 393, 394, 395, 396,
	397, 527, 398, 399, 0, 400, 401, 402, 403, 404,
	405, 0, 407, 408, 409, 406, 410, 411, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 528, 419, 0,
	420, 424, 425, 587, 427, 428, 429, 430, 0, 436,
	437, 431, 433, 434, 435, 432, 438, 1077, 440, 0,
	441, 421, 422, 442, 443, 0, 444, 445, 529, 446,
	447, 0, 448, 449, 450, 451, 423, 452, 456, 457,
	453, 454, 455, 530, 0, 459, 460, 458, 0, 461,
	462, 463, 464, 465, 288, 466, 0, 467, 586, 532,
	533, 534, 0, 474, 0, 468, 1075, 535, 470, 536,
	0, 471, 472, 473, 0, 475, 476, 0, 0, 477,
	478, 479, 481, 482, 480, 484, 0, 485, 0, 483,
	486, 487, 488, 537, 538, 539, 218, 490, 489, 540,
	0, 0, 0, 0, 491, 492, 541, 493, 494, 495,
	0, 0, 0, 224, 225, 226, 227, 228, 1058, 229,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 498, 235, 499, 238,
	236, 237, 500, 0, 239, 240, 241, 242, 243, 244,
	245, 0, 0, 246, 501, 502, 503, 0, 247, 248,
	504, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 0, 264, 265, 0, 0, 0,
	0, 0, 0, 0, 266, 267, 268, 269, 270, 271,
	505, 506, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 283, 507, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 508, 509, 0, 0, 0, 0, 0, 0,
	0, 294, 295, 296, 510, 297, 298, 0, 299, 0,
	300, 0, 0, 0, 301, 302, 0, 303, 511, 0,
	512, 304, 0, 305, 306, 307, 308, 513, 514, 515,
	364, 0, 309, 310, 0, 311, 312, 313, 315, 0,
	0, 0, 314, 316, 323, 0, 0, 317, 516, 319,
	318, 320, 321, 322, 517, 0, 518, 0, 324, 0,
	519, 0, 325, 326, 327, 0, 328, 329, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	520, 0, 338, 339, 0, 0, 340, 341, 0, 0,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 355, 353, 0, 356, 357, 360, 361,
	359, 0, 358, 0, 0, 0, 362, 0, 521, 363,
	522, 365, 366, 0, 367, 368, 369, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 0, 376, 0,
	524, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 525, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 527, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 528, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 431, 433,
	434, 435, 432, 438, 439, 440, 0, 441, 421, 422,
	442, 443, 0, 444, 445, 529, 446, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 457, 453, 454, 455,
	530, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 466, 0, 467, 531, 532, 533, 534, 0,
	474, 0, 468, 469, 535, 470, 536, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 484, 0, 485, 0, 483, 486, 487, 488,
	537, 538, 539, 218, 490, 489, 540, 0, 0, 0,
	0, 491, 492, 541, 493, 494, 495, 0, 0, 0,
	224, 225, 226, 227, 228, 596, 229, 0, 0, 0,
	0, 0, 496, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 497, 498, 235, 499, 238, 236, 237, 500,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 501, 502, 503, 0, 247, 248, 504, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 505, 506, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 507,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 508,
	509, 0, 0, 0, 0, 0, 0, 0, 294, 295,
	296, 510, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 302, 0, 303, 511, 0, 512, 304, 0,
	305, 306, 307, 308, 513, 514, 515, 364, 0, 309,
	310, 0, 311, 312, 313, 315, 0, 0, 0, 314,
	316, 323, 0, 0, 317, 516, 319, 318, 320, 321,
	322, 517, 0, 518, 0, 324, 0, 519, 0, 325,
	326, 327, 0, 328, 329, 0, 0, 330, 331, 332,
	333, 334, 0, 336, 335, 0, 337, 520, 0, 338,
	339, 0, 0, 340, 341, 0, 0, 342, 343, 344,
	345, 0, 346, 347, 349, 351, 348, 350, 352, 354,
	355, 353, 0, 356, 357, 360, 361, 359, 0, 358,
	0, 0, 0, 362, 0, 521, 363, 522, 365, 366,
	0, 367, 368, 369, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 523, 0, 376, 0, 524, 377, 370,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 386,
	525, 387, 526, 388, 389, 0, 390, 0, 391, 392,
	393, 394, 395, 396, 397, 527, 398, 399, 0, 400,
	401, 402, 403, 404, 405, 0, 407, 408, 409, 406,
	410, 411, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 528, 419, 0, 420, 424, 425, 426, 427, 428,
	429, 430, 0, 436, 437, 431, 433, 434, 435, 432,
	438, 439, 440, 0, 441, 421, 422, 442, 443, 0,
	444, 445, 529, 446, 447, 0, 448, 449, 450, 451,
	423, 452, 456, 457, 453, 454, 455, 530, 0, 459,
	460, 458, 0, 461, 462, 463, 464, 465, 288, 466,
	0, 467, 531, 532, 533, 534, 0, 474, 0, 468,
	469, 535, 470, 536, 0, 471, 472, 473, 0, 475,
	476, 0, 0, 477, 478, 479, 481, 482, 480, 484,
	0, 485, 0, 483, 486, 487, 488, 537, 538, 539,
	0, 490, 489, 540, 590, 0, 218, 0, 491, 492,
	541, 493, 494, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 498, 235, 499, 238,
	236, 237, 500, 0, 239, 240, 241, 242, 243, 244,
	245, 0, 0, 246, 501, 502, 503, 0, 247, 580,
	504, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 578, 0, 260,
	261, 262, 0, 263, 0, 264, 265, 0, 0, 0,
	0, 0, 0, 0, 266, 267, 268, 269, 270, 271,
	505, 506, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 283, 507, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 508, 509, 0, 0, 0, 0, 0, 0,
	0, 294, 295, 296, 510, 297, 298, 0, 299, 0,
	300, 0, 0, 0, 301, 302, 0, 303, 511, 0,
	512, 304, 0, 305, 306, 307, 308, 513, 514, 515,
	364, 0, 309, 310, 0, 311, 312, 313, 315, 0,
	0, 0, 314, 316, 323, 0, 0, 317, 516, 319,
	318, 320, 321, 322, 517, 0, 518, 0, 324, 0,
	519, 0, 325, 326, 327, 0, 328, 329, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	520, 0, 338, 339, 0, 0, 340, 579, 0, 0,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 355, 591, 0, 356, 357, 360, 361,
	359, 0, 358, 0, 0, 0, 362, 0, 521, 363,
	522, 365, 366, 0, 367, 368, 369, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 0, 376, 0,
	524, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 525, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 527, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 581, 419, 0, 420, 424, 425,
	587, 427, 428, 429, 430, 0, 436, 437, 431, 433,
	434, 435, 432, 438, 582, 440, 0, 441, 421, 422,
	442, 443, 0, 444, 445, 529, 446, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 457, 453, 454, 455,
	530, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 466, 0, 467, 586, 532, 533, 534, 0,
	474, 0, 468, 584, 535, 470, 536, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 484, 0, 485, 0, 483, 486, 487, 488,
	537, 538, 539, 0, 490, 489, 540, 574, 0, 218,
	0, 491, 492, 541, 493, 494, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 497, 498,
	235, 499, 238, 236, 237, 500, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 501, 502, 503,
	0, 247, 248, 504, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 505, 506, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 507, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 508, 509, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 510, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 302, 0,
	303, 511, 0, 512, 304, 0, 305, 306, 307, 308,
	513, 514, 515, 364, 0, 309, 310, 0, 311, 312,
	313, 315, 0, 0, 0, 314, 316, 323, 0, 0,
	317, 516, 319, 318, 320, 321, 322, 517, 0, 518,
	0, 324, 0, 519, 0, 325, 326, 327, 0, 328,
	329, 0, 0, 330, 331, 332, 333, 334, 0, 336,
	335, 0, 337, 520, 0, 338, 339, 0, 0, 340,
	341, 0, 0, 342, 343, 344, 345, 0, 346, 347,
	349, 351, 348, 350, 352, 354, 355, 353, 0, 356,
	357, 360, 361, 359, 0, 358, 0, 0, 0, 362,
	0, 521, 363, 522, 365, 366, 0, 367, 368, 369,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 523,
	0, 376, 0, 524, 377, 370, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 386, 525, 387, 526, 388,
	389, 0, 390, 0, 391, 392, 393, 394, 395, 396,
	397, 527, 398, 399, 0, 400, 401, 402, 403, 404,
	405, 0, 407, 408, 409, 406, 410, 411, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 528, 419, 0,
	420, 575, 425, 426, 427, 428, 429, 430, 0, 436,
	437, 431, 433, 434, 435, 432, 438, 439, 440, 0,
	441, 421, 422, 442, 443, 0, 444, 445, 529, 446,
	447, 0, 448, 449, 450, 451, 423, 452, 456, 457,
	453, 454, 455, 530, 0, 459, 460, 458, 0, 461,
	462, 463, 464, 465, 288, 466, 0, 467, 531, 532,
	533, 534, 0, 474, 0, 468, 469, 535, 470, 536,
	0, 471, 472, 473, 0, 475, 476, 0, 0, 477,
	478, 479, 481, 482, 480, 484, 0, 485, 0, 483,
	486, 487, 488, 537, 538, 539, 0, 490, 489, 540,
	572, 0, 218, 0, 491, 492, 541, 493, 494, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 230, 232, 231, 233,
	234, 497, 498, 235, 499, 238, 236, 237, 500, 0,
	239, 240, 241, 242, 243, 244, 245, 0, 0, 246,
	501, 502, 503, 0, 247, 248, 504, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	0, 264, 265, 0, 0, 0, 0, 0, 0, 0,
	266, 267, 268, 269, 270, 271, 505, 506, 0, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 283, 507, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 508, 509,
	0, 0, 0, 0, 0, 0, 0, 294, 295, 296,
	510, 297, 298, 0, 299, 0, 300, 0, 0, 0,
	301, 302, 0, 303, 511, 0, 512, 304, 0, 305,
	306, 307, 308, 513, 514, 515, 364, 0, 309, 310,
	0, 311, 312, 313, 315, 0, 0, 0, 314, 316,
	323, 0, 0, 317, 516, 319, 318, 320, 321, 322,
	517, 0, 518, 0, 324, 0, 519, 0, 325, 326,
	327, 0, 328, 329, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 520, 0, 338, 339,
	0, 0, 340, 341, 0, 0, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 355,
	353, 0, 356, 357, 360, 361, 359, 0, 358, 0,
	0, 0, 362, 0, 521, 363, 522, 365, 366, 0,
	367, 368, 369, 0, 0, 371, 372, 373, 0, 0,
	374, 375, 523, 0, 376, 0, 524, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 386, 525,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 527, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	528, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 0, 436, 437, 431, 433, 434, 435, 432, 438,
	439, 440, 0, 441, 421, 422, 442, 443, 0, 444,
	445, 529, 446, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 457, 453, 454, 455, 530, 0, 459, 460,
	458, 0, 461, 462, 463, 464, 465, 288, 466, 0,
	467, 531, 532, 533, 534, 0, 474, 0, 468, 469,
	535, 470, 536, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 484, 0,
	485, 0, 483, 486, 487, 488, 537, 538, 539, 0,
	490, 489, 540, 566, 0, 218, 0, 491, 492, 541,
	493, 494, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 497, 498, 235, 499, 238, 236,
	237, 500, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 501, 502, 503, 0, 247, 248, 504,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 505,
	506, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 507, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 508, 509, 0, 0, 0, 0, 0, 0, 0,
	294, 295, 296, 510, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 0, 303, 511, 0, 512,
	304, 0, 305, 306, 307, 308, 513, 514, 515, 364,
	0, 309, 310, 0, 311, 312, 313, 315, 0, 0,
	0, 314, 316, 323, 0, 0, 317, 516, 319, 318,
	320, 321, 322, 517, 0, 518, 0, 324, 0, 519,
	0, 325, 326, 327, 0, 328, 329, 0, 0, 330,
	331, 332, 333, 334, 0, 336, 335, 0, 337, 520,
	0, 338, 339, 0, 0, 340, 341, 0, 0, 342,
	343, 344, 345, 0, 346, 347, 349, 351, 348, 350,
	352, 354, 355, 353, 0, 356, 357, 360, 361, 359,
	0, 358, 0, 0, 0, 362, 0, 521, 363, 522,
	365, 366, 0, 367, 368, 369, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 523, 0, 376, 0, 524,
	377, 370, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 386, 525, 387, 526, 388, 389, 0, 390, 0,
	391, 392, 393, 394, 395, 396, 397, 527, 398, 399,
	0, 400, 401, 402, 403, 404, 405, 0, 407, 408,
	409, 406, 410, 411, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 528, 419, 0, 420, 424, 425, 426,
	427, 428, 429, 430, 0, 436, 437, 431, 433, 434,
	435, 432, 438, 439, 440, 0, 441, 421, 422, 442,
	443, 0, 444, 445, 529, 446, 447, 0, 448, 449,
	450, 451, 423, 452, 456, 457, 453, 454, 455, 530,
	0, 459, 460, 458, 0, 461, 462, 463, 464, 465,
	288, 466, 0, 467, 531, 532, 533, 534, 0, 474,
	0, 468, 469, 535, 470, 536, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 484, 0, 485, 0, 483, 486, 487, 488, 537,
	538, 539, 0, 490, 489, 540, 544, 0, 218, 0,
	491, 492, 541, 493, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 0, 246, 501, 502, 503, 0,
	247, 248, 504, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 0, 264, 265, 0,
	0, 0, 0, 0, 0, 0, 266, 267, 268, 269,
	270, 271, 505, 506, 0, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 508, 509, 0, 0, 0, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 0, 300, 0, 0, 0, 301, 302, 0, 303,
	511, 0, 512, 304, 0, 305, 306, 307, 308, 513,
	514, 515, 364, 0, 309, 310, 0, 311, 312, 313,
	315, 0, 0, 0, 314, 316, 323, 0, 0, 317,
	516, 319, 318, 320, 321, 322, 517, 0, 518, 0,
	324, 0, 519, 0, 325, 326, 327, 0, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 520, 0, 338, 339, 0, 0, 340, 341,
	0, 0, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 353, 0, 356, 357,
	360, 361, 359, 0, 358, 0, 0, 0, 362, 0,
	521, 363, 522, 365, 366, 0, 367, 368, 369, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 0,
	376, 0, 524, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 525, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	431, 433, 434, 435, 432, 438, 439, 440, 0, 441,
	421, 422, 442, 443, 0, 444, 445, 529, 446, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 530, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 466, 0, 467, 531, 532, 533,
	534, 0, 474, 0, 468, 469, 535, 470, 536, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 484, 0, 485, 0, 483, 486,
	487, 488, 537, 538, 539, 218, 490, 489, 540, 0,
	0, 0, 0, 491, 492, 541, 493, 494, 495, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 497, 498, 235, 499, 238, 236,
	237, 500, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 501, 502, 503, 0, 247, 248, 504,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 505,
	506, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 507, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 508, 509, 0, 0, 0, 0, 0, 0, 0,
	294, 295, 296, 510, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 0, 303, 511, 0, 512,
	304, 0, 305, 306, 307, 308, 513, 514, 515, 364,
	0, 309, 310, 0, 311, 312, 313, 315, 0, 0,
	0, 314, 316, 323, 0, 0, 317, 516, 319, 318,
	320, 321, 322, 517, 0, 518, 0, 324, 0, 519,
	0, 325, 326, 327, 0, 328, 329, 0, 0, 330,
	331, 332, 333, 334, 0, 336, 335, 0, 337, 520,
	0, 338, 339, 0, 0, 340, 341, 0, 0, 342,
	343, 344, 345, 0, 346, 347, 349, 351, 348, 350,
	352, 354, 355, 353, 0, 356, 357, 360, 361, 359,
	0, 358, 0, 0, 0, 362, 0, 521, 363, 522,
	365, 366, 0, 367, 368, 369, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 523, 0, 376, 0, 524,
	377, 370, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 386, 525, 387, 526, 388, 389, 0, 390, 0,
	391, 392, 393, 394, 395, 396, 397, 527, 398, 399,
	0, 400, 401, 402, 403, 404, 405, 0, 407, 408,
	409, 406, 410, 411, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 528, 419, 0, 420, 424, 425, 426,
	427, 428, 429, 430, 0, 436, 437, 431, 433, 434,
	435, 432, 438, 439, 440, 0, 441, 421, 422, 442,
	443, 0, 444, 445, 529, 446, 447, 0, 448, 449,
	450, 451, 423, 452, 456, 457, 453, 454, 455, 530,
	0, 459, 460, 458, 0, 461, 462, 463, 464, 465,
	288, 466, 0, 467, 531, 532, 533, 534, 0, 474,
	0, 468, 469, 535, 470, 536, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 484, 0, 485, 0, 483, 486, 487, 488, 537,
	538, 539, 218, 490, 489, 540, 0, 0, 0, 0,
	491, 492, 541, 493, 494, 495, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 230, 232, 231, 233,
	234, 497, 498, 235, 499, 238, 236, 237, 500, 0,
	239, 240, 241, 242, 243, 244, 245, 0, 0, 246,
	501, 502, 503, 0, 247, 248, 504, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	0, 264, 265, 0, 0, 0, 0, 0, 0, 0,
	266, 267, 268, 269, 270, 271, 505, 506, 0, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 283, 507, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 508, 509,
	0, 0, 0, 0, 0, 0, 0, 294, 295, 296,
	510, 297, 298, 0, 299, 0, 300, 0, 0, 0,
	301, 302, 0, 303, 511, 0, 512, 304, 0, 305,
	306, 307, 308, 2888, 514, 515, 364, 0, 309, 310,
	0, 311, 312, 313, 315, 0, 0, 0, 314, 316,
	323, 0, 0, 317, 516, 319, 318, 320, 321, 322,
	517, 0, 518, 0, 324, 0, 519, 0, 325, 326,
	327, 0, 328, 329, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 520, 0, 338, 339,
	0, 0, 340, 341, 0, 0, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 355,
	353, 0, 356, 357, 360, 361, 359, 0, 358, 0,
	0, 0, 362, 0, 521, 363, 522, 365, 366, 0,
	367, 368, 369, 0, 0, 371, 372, 373, 0, 0,
	374, 375, 523, 0, 376, 0, 524, 377, 370, 378,
	379, 380, 381, 382, 383, 384, 0, 385, 386, 525,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 395, 396, 397, 527, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	528, 419, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 0, 436, 437, 431, 433, 434, 435, 432, 438,
	439, 440, 0, 441, 421, 422, 442, 443, 0, 444,
	445, 529, 446, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 457, 453, 454, 455, 530, 0, 459, 460,
	458, 0, 461, 462, 463, 464, 465, 288, 466, 0,
	467, 531, 532, 533, 534, 0, 474, 0, 468, 469,
	535, 470, 536, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 484, 0,
	485, 0, 483, 486, 487, 488, 537, 538, 539, 218,
	490, 489, 540, 0, 0, 0, 0, 491, 492, 541,
	493, 494, 495, 0, 0, 0, 224, 225, 226, 227,
	228, 0, 229, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 230, 232, 231, 233, 234, 497, 498,
	235, 499, 238, 236, 237, 500, 0, 239, 240, 241,
	242, 243, 244, 245, 0, 0, 246, 501, 502, 503,
	0, 247, 248, 504, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 0, 256, 257, 258, 255, 0,
	259, 0, 260, 261, 262, 0, 263, 0, 264, 265,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 505, 506, 0, 272, 273, 0, 275,
	274, 0, 276, 0, 0, 277, 278, 279, 0, 280,
	0, 281, 282, 0, 283, 507, 284, 285, 287, 289,
	286, 290, 291, 292, 293, 508, 509, 0, 0, 0,
	0, 0, 0, 0, 294, 295, 296, 510, 297, 298,
	0, 299, 0, 300, 0, 0, 0, 301, 302, 0,
	303, 511, 0, 512, 304, 0, 305, 306, 307, 308,
	2811, 514, 515, 364, 0, 309, 310, 0, 311, 312,
	313, 315, 0, 0, 0, 314, 316, 323, 0, 0,
	317, 516, 319, 318, 320, 321, 322, 517, 0, 518,
	0, 324, 0, 519, 0, 325, 326, 327, 0, 328,
	329, 0, 0, 330, 331, 332, 333, 334, 0, 336,
	335, 0, 337, 520, 0, 338, 339, 0, 0, 340,
	341, 0, 0, 342, 343, 344, 345, 0, 346, 347,
	349, 351, 348, 350, 352, 354, 355, 353, 0, 356,
	357, 360, 361, 359, 0, 358, 0, 0, 0, 362,
	0, 521, 363, 522, 365, 366, 0, 367, 368, 369,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 523,
	0, 376, 0, 524, 377, 370, 378, 379, 380, 381,
	382, 383, 384, 0, 385, 386, 525, 387, 526, 388,
	389, 0, 390, 0, 391, 392, 393, 394, 395, 396,
	397, 527, 398, 399, 0, 400, 401, 402, 403, 404,
	405, 0, 407, 408, 409, 406, 410, 411, 412, 413,
	0, 414, 0, 415, 416, 417, 418, 528, 419, 0,
	420, 424, 425, 426, 427, 428, 429, 430, 0, 436,
	437, 431, 433, 434, 435, 432, 438, 439, 440, 0,
	441, 421, 422, 442, 443, 0, 444, 445, 529, 446,
	447, 0, 448, 449, 450, 451, 423, 452, 456, 457,
	453, 454, 455, 530, 0, 459, 460, 458, 0, 461,
	462, 463, 464, 465, 288, 466, 0, 467, 531, 532,
	533, 534, 0, 474, 0, 468, 469, 535, 470, 536,
	0, 471, 472, 473, 0, 475, 476, 0, 0, 477,
	478, 479, 481, 482, 480, 484, 0, 485, 0, 483,
	486, 487, 488, 537, 538, 539, 218, 490, 489, 540,
	0, 0, 0, 0, 491, 492, 541, 493, 494, 495,
	0, 0, 0, 224, 225, 226, 227, 228, 0, 229,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	230, 232, 231, 233, 234, 497, 498, 235, 499, 238,
	236, 237, 500, 0, 239, 240, 241, 242, 243, 244,
	245, 0, 0, 246, 501, 502, 503, 0, 247, 248,
	504, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 0, 256, 257, 258, 255, 0, 259, 0, 260,
	261, 262, 0, 263, 0, 264, 265, 0, 0, 0,
	0, 0, 0, 0, 266, 267, 268, 269, 270, 271,
	505, 506, 0, 272, 273, 0, 275, 274, 0, 276,
	0, 0, 277, 278, 279, 0, 280, 0, 281, 282,
	0, 283, 507, 284, 285, 287, 289, 286, 290, 291,
	292, 293, 508, 509, 0, 0, 0, 0, 0, 0,
	0, 294, 295, 296, 510, 297, 298, 0, 299, 0,
	300, 0, 0, 0, 301, 302, 0, 303, 511, 0,
	512, 304, 0, 305, 306, 307, 308, 2809, 514, 515,
	364, 0, 309, 310, 0, 311, 312, 313, 315, 0,
	0, 0, 314, 316, 323, 0, 0, 317, 516, 319,
	318, 320, 321, 322, 517, 0, 518, 0, 324, 0,
	519, 0, 325, 326, 327, 0, 328, 329, 0, 0,
	330, 331, 332, 333, 334, 0, 336, 335, 0, 337,
	520, 0, 338, 339, 0, 0, 340, 341, 0, 0,
	342, 343, 344, 345, 0, 346, 347, 349, 351, 348,
	350, 352, 354, 355, 353, 0, 356, 357, 360, 361,
	359, 0, 358, 0, 0, 0, 362, 0, 521, 363,
	522, 365, 366, 0, 367, 368, 369, 0, 0, 371,
	372, 373, 0, 0, 374, 375, 523, 0, 376, 0,
	524, 377, 370, 378, 379, 380, 381, 382, 383, 384,
	0, 385, 386, 525, 387, 526, 388, 389, 0, 390,
	0, 391, 392, 393, 394, 395, 396, 397, 527, 398,
	399, 0, 400, 401, 402, 403, 404, 405, 0, 407,
	408, 409, 406, 410, 411, 412, 413, 0, 414, 0,
	415, 416, 417, 418, 528, 419, 0, 420, 424, 425,
	426, 427, 428, 429, 430, 0, 436, 437, 431, 433,
	434, 435, 432, 438, 439, 440, 0, 441, 421, 422,
	442, 443, 0, 444, 445, 529, 446, 447, 0, 448,
	449, 450, 451, 423, 452, 456, 457, 453, 454, 455,
	530, 0, 459, 460, 458, 0, 461, 462, 463, 464,
	465, 288, 466, 0, 467, 531, 532, 533, 534, 0,
	474, 0, 468, 469, 535, 470, 536, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 484, 0, 485, 0, 483, 486, 487, 488,
	537, 538, 539, 218, 490, 489, 540, 0, 0, 0,
	0, 491, 492, 541, 493, 494, 495, 0, 0, 0,
	224, 225, 226, 227, 228, 0, 229, 0, 0, 0,
	0, 0, 496, 0, 0, 0, 0, 230, 232, 231,
	233, 234, 497, 498, 235, 499, 238, 236, 237, 500,
	0, 239, 240, 241, 242, 243, 244, 245, 0, 0,
	246, 501, 502, 503, 0, 247, 248, 504, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 0, 256,
	257, 258, 255, 0, 259, 0, 260, 261, 262, 0,
	263, 0, 264, 265, 0, 0, 0, 0, 0, 0,
	0, 266, 267, 268, 269, 270, 271, 505, 506, 0,
	272, 273, 0, 275, 274, 0, 276, 0, 0, 277,
	278, 279, 0, 280, 0, 281, 282, 0, 283, 507,
	284, 285, 287, 289, 286, 290, 291, 292, 293, 508,
	509, 0, 0, 0, 0, 0, 0, 0, 294, 295,
	296, 510, 297, 298, 0, 299, 0, 300, 0, 0,
	0, 301, 302, 0, 303, 511, 0, 512, 304, 0,
	305, 306, 307, 308, 2795, 514, 515, 364, 0, 309,
	310, 0, 311, 312, 313, 315, 0, 0, 0, 314,
	316, 323, 0, 0, 317, 516, 319, 318, 320, 321,
	322, 517, 0, 518, 0, 324, 0, 519, 0, 325,
	326, 327, 0, 328, 329, 0, 0, 330, 331, 332,
	333, 334, 0, 336, 335, 0, 337, 520, 0, 338,
	339, 0, 0, 340, 341, 0, 0, 342, 343, 344,
	345, 0, 346, 347, 349, 351, 348, 350, 352, 354,
	355, 353, 0, 356, 357, 360, 361, 359, 0, 358,
	0, 0, 0, 362, 0, 521, 363, 522, 365, 366,
	0, 367, 368, 369, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 523, 0, 376, 0, 524, 377, 370,
	378, 379, 380, 381, 382, 383, 384, 0, 385, 386,
	525, 387, 526, 388, 389, 0, 390, 0, 391, 392,
	393, 394, 395, 396, 397, 527, 398, 399, 0, 400,
	401, 402, 403, 404, 405, 0, 407, 408, 409, 406,
	410, 411, 412, 413, 0, 414, 0, 415, 416, 417,
	418, 528, 419, 0, 420, 424, 425, 426, 427, 428,
	429, 430, 0, 436, 437, 431, 433, 434, 435, 432,
	438, 439, 440, 0, 441, 421, 422, 442, 443, 0,
	444, 445, 529, 446, 447, 0, 448, 449, 450, 451,
	423, 452, 456, 457, 453, 454, 455, 530, 0, 459,
	460, 458, 0, 461, 462, 463, 464, 465, 288, 466,
	0, 467, 531, 532, 533, 534, 0, 474, 0, 468,
	469, 535, 470, 536, 0, 471, 472, 473, 0, 475,
	476, 0, 0, 477, 478, 479, 481, 482, 480, 484,
	0, 485, 0, 483, 486, 487, 488, 537, 538, 539,
	218, 490, 489, 540, 0, 0, 0, 0, 491, 492,
	541, 493, 494, 495, 0, 0, 0, 224, 225, 226,
	227, 228, 0, 229, 0, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 230, 232, 231, 233, 234, 497,
	498, 235, 499, 238, 236, 237, 500, 0, 239, 240,
	241, 242, 243, 244, 245, 0, 0, 246, 501, 502,
	503, 0, 247, 248, 504, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 0, 256, 257, 258, 255,
	0, 259, 0, 260, 261, 262, 0, 263, 0, 264,
	265, 0, 0, 0, 0, 0, 0, 0, 266, 267,
	268, 269, 270, 271, 505, 506, 0, 272, 273, 0,
	275, 274, 0, 276, 0, 0, 277, 278, 279, 0,
	280, 0, 281, 282, 0, 283, 507, 284, 285, 287,
	289, 286, 290, 291, 292, 293, 508, 509, 0, 0,
	0, 0, 0, 0, 0, 294, 295, 296, 510, 297,
	298, 0, 299, 0, 300, 0, 0, 0, 301, 302,
	0, 303, 511, 0, 512, 304, 0, 305, 306, 307,
	308, 2450, 514, 515, 364, 0, 309, 310, 0, 311,
	312, 313, 315, 0, 0, 0, 314, 316, 323, 0,
	0, 317, 516, 319, 318, 320, 321, 322, 517, 0,
	518, 0, 324, 0, 519, 0, 325, 326, 327, 0,
	328, 329, 0, 0, 330, 331, 332, 333, 334, 0,
	336, 335, 0, 337, 520, 0, 338, 339, 0, 0,
	340, 341, 0, 0, 342, 343, 344, 345, 0, 346,
	347, 349, 351, 348, 350, 352, 354, 355, 353, 0,
	356, 357, 360, 361, 359, 0, 358, 0, 0, 0,
	362, 0, 521, 363, 522, 365, 366, 0, 367, 368,
	369, 0, 0, 371, 372, 373, 0, 0, 374, 375,
	523, 0, 376, 0, 524, 377, 370, 378, 379, 380,
	381, 382, 383, 384, 0, 385, 386, 525, 387, 526,
	388, 389, 0, 390, 0, 391, 392, 393, 394, 395,
	396, 397, 527, 398, 399, 0, 400, 401, 402, 403,
	404, 405, 0, 407, 408, 409, 406, 410, 411, 412,
	413, 0, 414, 0, 415, 416, 417, 418, 528, 419,
	0, 420, 424, 425, 426, 427, 428, 429, 430, 0,
	436, 437, 431, 433, 434, 435, 432, 438, 439, 440,
	0, 441, 421, 422, 442, 443, 0, 444, 445, 529,
	446, 447, 0, 448, 449, 450, 451, 423, 452, 456,
	457, 453, 454, 455, 530, 0, 459, 460, 458, 0,
	461, 462, 463, 464, 465, 288, 466, 0, 467, 531,
	532, 533, 534, 0, 474, 0, 468, 469, 535, 470,
	536, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 484, 0, 485, 0,
	483, 486, 487, 488, 537, 538, 539, 218, 490, 489,
	540, 0, 0, 0, 0, 491, 492, 541, 493, 494,
	495, 0, 0, 0, 224, 225, 226, 227, 228, 0,
	229, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 230, 232, 231, 233, 234, 497, 498, 235, 499,
	238, 236, 237, 500, 0, 239, 240, 241, 242, 243,
	244, 245, 0, 0, 246, 501, 502, 503, 0, 247,
	248, 504, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 0, 256, 257, 258, 255, 0, 259, 0,
	260, 261, 262, 0, 263, 0, 264, 265, 0, 0,
	0, 0, 0, 0, 0, 266, 267, 268, 269, 270,
	271, 505, 506, 0, 272, 273, 0, 275, 274, 0,
	276, 0, 0, 277, 278, 279, 0, 280, 0, 281,
	282, 0, 283, 507, 284, 285, 287, 289, 286, 290,
	291, 292, 293, 508, 509, 0, 0, 0, 0, 0,
	0, 0, 294, 295, 296, 510, 297, 298, 0, 299,
	0, 300, 0, 0, 0, 301, 302, 0, 303, 511,
	0, 512, 304, 0, 305, 306, 307, 308, 513, 514,
	515, 364, 0, 309, 310, 0, 311, 312, 313, 315,
	0, 0, 0, 314, 316, 323, 0, 0, 317, 516,
	319, 318, 320, 321, 322, 517, 0, 518, 0, 324,
	0, 519, 0, 325, 326, 327, 0, 328, 329, 0,
	0, 330, 331, 332, 333, 334, 0, 336, 335, 0,
	337, 520, 0, 338, 339, 0, 0, 340, 341, 0,
	0, 342, 343, 344, 345, 0, 346, 347, 349, 351,
	348, 350, 352, 354, 355, 353, 0, 356, 357, 360,
	361, 359, 0, 358, 0, 0, 0, 362, 0, 521,
	363, 522, 365, 366, 0, 367, 368, 369, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 523, 0, 376,
	0, 524, 377, 370, 378, 379, 380, 381, 382, 383,
	384, 0, 385, 386, 525, 387, 526, 388, 389, 0,
	390, 0, 391, 392, 393, 394, 395, 396, 397, 527,
	398, 399, 0, 400, 401, 402, 403, 404, 405, 0,
	407, 408, 409, 406, 410, 411, 412, 413, 0, 414,
	0, 415, 416, 417, 418, 528, 419, 0, 420, 575,
	425, 426, 427, 428, 429, 430, 0, 436, 437, 431,
	433, 434, 435, 432, 438, 439, 440, 0, 441, 421,
	422, 442, 443, 0, 444, 445, 529, 446, 447, 0,
	448, 449, 450, 451, 423, 452, 456, 457, 453, 454,
	455, 530, 0, 459, 460, 458, 0, 461, 462, 463,
	464, 465, 288, 466, 0, 467, 531, 532, 533, 534,
	0, 474, 0, 468, 469, 535, 470, 536, 0, 471,
	472, 473, 0, 475, 476, 0, 0, 477, 478, 479,
	481, 482, 480, 484, 0, 485, 0, 483, 486, 487,
	488, 537, 538, 539, 218, 490, 489, 540, 0, 0,
	0, 0, 491, 492, 541, 493, 494, 495, 0, 0,
	0, 224, 225, 226, 227, 228, 0, 229, 0, 0,
	0, 0, 0, 496, 0, 1904, 0, 0, 230, 232,
	231, 233, 234, 497, 498, 235, 499, 238, 236, 237,
	500, 0, 239, 240, 241, 242, 243, 244, 245, 0,
	0, 246, 501, 502, 503, 0, 247, 248, 504, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 0,
	256, 257, 258, 255, 0, 259, 0, 260, 261, 262,
	0, 263, 0, 264, 265, 0, 0, 0, 0, 0,
	0, 0, 266, 267, 268, 269, 270, 271, 505, 506,
	0, 272, 273, 0, 275, 274, 0, 276, 0, 0,
	277, 278, 279, 0, 280, 0, 281, 282, 0, 283,
	507, 284, 285, 287, 289, 286, 290, 291, 292, 293,
	508, 509, 0, 0, 0, 0, 0, 0, 0, 294,
	295, 296, 510, 297, 298, 0, 299, 0, 300, 0,
	0, 0, 301, 302, 0, 303, 511, 0, 512, 304,
	0, 305, 306, 307, 308, 513, 514, 515, 364, 0,
	309, 310, 0, 311, 312, 313, 315, 0, 0, 0,
	314, 316, 323, 0, 0, 317, 516, 319, 318, 320,
	321, 322, 517, 0, 518, 0, 324, 0, 519, 0,
	325, 326, 327, 0, 328, 329, 0, 0, 330, 331,
	332, 333, 334, 0, 336, 335, 0, 337, 520, 0,
	338, 339, 0, 0, 340, 341, 0, 0, 342, 343,
	344, 345, 0, 346, 347, 349, 351, 348, 350, 352,
	354, 355, 353, 0, 356, 357, 360, 361, 359, 0,
	358, 0, 0, 0, 362, 0, 521, 363, 522, 365,
	366, 0, 367, 368, 369, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 523, 0, 376, 0, 524, 377,
	370, 378, 379, 380, 381, 382, 383, 384, 0, 385,
	386, 525, 387, 526, 388, 389, 0, 390, 0, 391,
	392, 393, 394, 395, 396, 397, 527, 398, 399, 0,
	400, 401, 402, 403, 404, 405, 0, 407, 408, 409,
	406, 410, 411, 412, 413, 0, 414, 0, 415, 416,
	417, 418, 528, 419, 0, 420, 424, 425, 426, 427,
	428, 429, 430, 0, 436, 437, 431, 433, 434, 435,
	432, 438, 439, 440, 0, 0, 421, 422, 442, 443,
	0, 444, 445, 529, 446, 447, 0, 448, 449, 450,
	451, 423, 452, 456, 457, 453, 454, 455, 530, 0,
	459, 460, 458, 0, 461, 462, 463, 464, 465, 288,
	466, 0, 467, 531, 532, 533, 534, 0, 474, 0,
	468, 469, 535, 470, 536, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	484, 0, 485, 0, 483, 486, 487, 488, 537, 538,
	539, 218, 490, 489, 540, 0, 0, 0, 0, 491,
	492, 541, 493, 494, 495, 0, 0, 0, 224, 225,
	226, 227, 228, 0, 229, 0, 0, 0, 0, 0,
	496, 0, 0, 0, 0, 230, 232, 231, 233, 234,
	497, 498, 235, 499, 238, 236, 237, 500, 0, 239,
	240, 241, 242, 243, 244, 245, 0, 0, 246, 501,
	502, 503, 0, 247, 248, 504, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 0, 256, 257, 258,
	255, 0, 259, 0, 260, 261, 262, 0, 263, 0,
	264, 265, 0, 0, 0, 0, 0, 0, 0, 266,
	267, 268, 269, 270, 271, 505, 506, 0, 272, 273,
	0, 275, 274, 0, 276, 0, 0, 277, 278, 279,
	0, 280, 0, 281, 282, 0, 283, 507, 284, 285,
	287, 289, 286, 290, 291, 292, 293, 508, 509, 0,
	0, 0, 0, 0, 0, 0, 294, 295, 296, 510,
	297, 298, 0, 299, 0, 300, 0, 0, 0, 301,
	302, 0, 303, 511, 0, 512, 304, 0, 305, 306,
	307, 308, 1319, 514, 515, 364, 0, 309, 310, 0,
	311, 312, 313, 315, 0, 0, 0, 314, 316, 323,
	0, 0, 317, 516, 319, 318, 320, 321, 322, 517,
	0, 518, 0, 324, 0, 519, 0, 325, 326, 327,
	0, 328, 329, 0, 0, 330, 331, 332, 333, 334,
	0, 336, 335, 0, 337, 520, 0, 338, 339, 0,
	0, 340, 341, 0, 0, 342, 343, 344, 345, 0,
	346, 347, 349, 351, 348, 350, 352, 354, 355, 353,
	0, 356, 357, 360, 361, 359, 0, 358, 0, 0,
	0, 362, 0, 521, 363, 522, 365, 366, 0, 367,
	368, 369, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 523, 0, 376, 0, 524, 377, 370, 378, 379,
	380, 381, 382, 383, 384, 0, 385, 386, 525, 387,
	526, 388, 389, 0, 390, 0, 391, 392, 393, 394,
	395, 396, 397, 527, 398, 399, 0, 400, 401, 402,
	403, 404, 405, 0, 407, 408, 409, 406, 410, 411,
	412, 413, 0, 414, 0, 415, 416, 417, 418, 528,
	419, 0, 420, 424, 425, 426, 427, 428, 429, 430,
	0, 436, 437, 431, 433, 434, 435, 432, 438, 439,
	440, 0, 441, 421, 422, 442, 443, 0, 444, 445,
	529, 446, 447, 0, 448, 449, 450, 451, 423, 452,
	456, 457, 453, 454, 455, 530, 0, 459, 460, 458,
	0, 461, 462, 463, 464, 465, 288, 466, 0, 467,
	531, 532, 533, 534, 0, 474, 0, 468, 469, 535,
	470, 536, 0, 471, 472, 473, 0, 475, 476, 0,
	0, 477, 478, 479, 481, 482, 480, 484, 0, 485,
	0, 483, 486, 487, 488, 537, 538, 539, 218, 490,
	489, 540, 0, 0, 0, 0, 491, 492, 541, 493,
	494, 495, 0, 0, 0, 224, 225, 226, 227, 228,
	0, 229, 0, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 230, 232, 231, 233, 234, 497, 498, 235,
	499, 238, 236, 237, 500, 0, 239, 240, 241, 242,
	243, 244, 245, 0, 0, 246, 501, 502, 503, 0,
	247, 248, 504, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 0, 256, 257, 258, 255, 0, 259,
	0, 260, 261, 262, 0, 263, 0, 264, 265, 0,
	0, 0, 0, 0, 0, 0, 266, 267, 268, 269,
	270, 271, 505, 506, 0, 272, 273, 0, 275, 274,
	0, 276, 0, 0, 277, 278, 279, 0, 280, 0,
	281, 282, 0, 283, 507, 284, 285, 287, 289, 286,
	290, 291, 292, 293, 508, 509, 0, 0, 0, 0,
	0, 0, 0, 294, 295, 296, 510, 297, 298, 0,
	299, 0, 300, 0, 0, 0, 301, 302, 0, 303,
	511, 0, 512, 304, 0, 305, 306, 307, 308, 1259,
	514, 515, 364, 0, 309, 310, 0, 311, 312, 313,
	315, 0, 0, 0, 314, 316, 323, 0, 0, 317,
	516, 319, 318, 320, 321, 322, 517, 0, 518, 0,
	324, 0, 519, 0, 325, 326, 327, 0, 328, 329,
	0, 0, 330, 331, 332, 333, 334, 0, 336, 335,
	0, 337, 520, 0, 338, 339, 0, 0, 340, 341,
	0, 0, 342, 343, 344, 345, 0, 346, 347, 349,
	351, 348, 350, 352, 354, 355, 353, 0, 356, 357,
	360, 361, 359, 0, 358, 0, 0, 0, 362, 0,
	521, 363, 522, 365, 366, 0, 367, 368, 369, 0,
	0, 371, 372, 373, 0, 0, 374, 375, 523, 0,
	376, 0, 524, 377, 370, 378, 379, 380, 381, 382,
	383, 384, 0, 385, 386, 525, 387, 526, 388, 389,
	0, 390, 0, 391, 392, 393, 394, 395, 396, 397,
	527, 398, 399, 0, 400, 401, 402, 403, 404, 405,
	0, 407, 408, 409, 406, 410, 411, 412, 413, 0,
	414, 0, 415, 416, 417, 418, 528, 419, 0, 420,
	424, 425, 426, 427, 428, 429, 430, 0, 436, 437,
	431, 433, 434, 435, 432, 438, 439, 440, 0, 441,
	421, 422, 442, 443, 0, 444, 445, 529, 446, 447,
	0, 448, 449, 450, 451, 423, 452, 456, 457, 453,
	454, 455, 530, 0, 459, 460, 458, 0, 461, 462,
	463, 464, 465, 288, 466, 0, 467, 531, 532, 533,
	534, 0, 474, 0, 468, 469, 535, 470, 536, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 484, 0, 485, 0, 483, 486,
	487, 488, 537, 538, 539, 218, 490, 489, 540, 0,
	0, 0, 0, 491, 492, 541, 493, 494, 495, 0,
	0, 0, 224, 225, 226, 227, 228, 0, 229, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 230,
	232, 231, 233, 234, 497, 498, 235, 499, 238, 236,
	237, 500, 0, 239, 240, 241, 242, 243, 244, 245,
	0, 0, 246, 501, 502, 503, 0, 247, 248, 504,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	0, 256, 257, 258, 255, 0, 259, 0, 260, 261,
	262, 0, 263, 0, 264, 265, 0, 0, 0, 0,
	0, 0, 0, 266, 267, 268, 269, 270, 271, 505,
	506, 0, 272, 273, 0, 275, 274, 0, 276, 0,
	0, 277, 278, 279, 0, 280, 0, 281, 282, 0,
	283, 507, 284, 285, 287, 289, 286, 290, 291, 292,
	293, 508, 509, 0, 0, 0, 0, 0, 0, 0,
	294, 295, 296, 510, 297, 298, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 0, 303, 511, 0, 512,
	304, 0, 305, 306, 307, 308, 513, 514, 515, 364,
	0, 309, 310, 0, 311, 312, 313, 315, 0, 0,
	0, 314, 316, 323, 0, 0, 317, 516, 319, 318,
	320, 321, 322, 517, 0, 518, 0, 324, 0, 519,
	0, 325, 326, 327, 0, 328, 329, 0, 0, 330,
	331, 332, 333, 334, 0, 336, 335, 0, 337, 520,
	0, 338, 339, 0, 0, 340, 341, 0, 0, 342,
	343, 344, 345, 0, 346, 347, 349, 351, 348, 350,
	352, 354, 355, 353, 0, 356, 357, 360, 361, 359,
	0, 358, 0, 0, 0, 362, 0, 521, 363, 522,
	365, 366, 0, 367, 368, 369, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 523, 0, 376, 0, 524,
	377, 370, 378, 379, 380, 381, 382, 383, 384, 0,
	385, 386, 525, 387, 526, 388, 389, 0, 390, 0,
	391, 392, 393, 394, 395, 396, 397, 527, 1012, 399,
	0, 400, 401, 402, 403, 404, 405, 0, 407, 408,
	409, 406, 410, 411, 412, 413, 0, 414, 0, 415,
	416, 417, 418, 528, 419, 0, 420, 424, 425, 426,
	427, 428, 429, 430, 0, 436, 437, 431, 433, 434,
	435, 432, 438, 439, 440, 0, 441, 421, 422, 442,
	443, 0, 444, 445, 529, 446, 447, 0, 448, 449,
	450, 451, 423, 452, 456, 457, 453, 454, 455, 530,
	0, 459, 460, 458, 0, 461, 462, 463, 464, 465,
	288, 466, 0, 467, 531, 532, 533, 534, 0, 474,
	0, 468, 469, 535, 470, 536, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 484, 0, 485, 0, 483, 486, 487, 488, 537,
	538, 539, 218, 490, 489, 540, 0, 0, 0, 0,
	491, 492, 541, 493, 494, 495, 0, 0, 0, 224,
	225, 226, 227, 228, 0, 229, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 230, 232, 231, 233,
	234, 497, 498, 235, 499, 238, 236, 237, 500, 0,
	239, 240, 241, 242, 243, 244, 245, 0, 0, 246,
	501, 502, 503, 0, 247, 248, 504, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 0, 256, 257,
	258, 255, 0, 259, 0, 260, 261, 262, 0, 263,
	0, 264, 265, 0, 0, 0, 0, 0, 0, 0,
	266, 267, 268, 269, 270, 271, 505, 506, 0, 272,
	273, 0, 275, 274, 0, 276, 0, 0, 277, 278,
	279, 0, 280, 0, 281, 282, 0, 283, 507, 284,
	285, 287, 289, 286, 290, 291, 292, 293, 508, 509,
	0, 0, 0, 0, 0, 0, 0, 294, 295, 296,
	510, 297, 298, 0, 299, 0, 300, 0, 0, 0,
	301, 302, 0, 303, 511, 0, 512, 0, 0, 305,
	306, 307, 308, 513, 514, 515, 364, 0, 309, 310,
	0, 311, 312, 313, 315, 0, 0, 0, 314, 316,
	323, 0, 0, 317, 516, 319, 318, 320, 321, 322,
	517, 0, 518, 0, 324, 0, 519, 0, 325, 326,
	327, 0, 328, 329, 0, 0, 330, 331, 332, 333,
	334, 0, 336, 335, 0, 337, 520, 0, 338, 339,
	0, 0, 340, 341, 0, 0, 342, 343, 344, 345,
	0, 346, 347, 349, 351, 348, 350, 352, 354, 355,
	353, 0, 356, 357, 360, 361, 359, 0, 358, 0,
	0, 0, 362, 0, 521, 363, 522, 365, 366, 0,
	367, 368, 369, 0, 0, 371, 372, 373, 0, 0,
	374, 375, 523, 0, 376, 0, 524, 377, 370, 378,
	379, 0, 381, 382, 383, 384, 0, 385, 386, 525,
	387, 526, 388, 389, 0, 390, 0, 391, 392, 393,
	394, 0, 396, 397, 527, 398, 399, 0, 400, 401,
	402, 403, 404, 405, 0, 407, 408, 409, 406, 410,
	411, 412, 413, 0, 414, 0, 415, 416, 417, 418,
	528, 0, 0, 420, 424, 425, 426, 427, 428, 429,
	430, 0, 436, 437, 431, 433, 434, 435, 432, 438,
	439, 440, 0, 441, 421, 422, 442, 443, 0, 444,
	445, 529, 446, 447, 0, 448, 449, 450, 451, 423,
	452, 456, 457, 453, 454, 455, 530, 0, 459, 460,
	458, 0, 461, 462, 463, 464, 465, 288, 466, 0,
	467, 531, 532, 533, 534, 0, 474, 0, 468, 469,
	535, 470, 536, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 484, 0,
	485, 0, 483, 486, 487, 488, 537, 538, 539, 0,
	490, 489, 540, 0, 0, 0, 0, 491, 492, 541,
	493, 494, 495, 1493, 1494, 0, 1526, 1527, 1528, 1536,
	1537, 1538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1529, 1524, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 1542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 1494, 0, 1526, 1527, 1528, 1536, 1537,
	1538, 1495, 0, 0, 0, 0, 0, 0, 0, 0,
	1515, 1529, 1524, 0, 0, 0, 0, 0, 1512, 1496,
	0, 0, 0, 0, 1542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 0, 1512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 1519, 1520,
	1521, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1493, 1494,
	0, 1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0,
	0, 1533, 0, 0, 1543, 0, 0, 1529, 1524, 1523,
	1525, 0, 0, 0, 0, 1496, 1518, 1519, 1520, 1521,
	1542, 0, 0, 0, 0, 0, 1501, 0, 0, 1539,
	0, 1540, 0, 0, 0, 0, 0, 0, 1510, 1511,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	1533, 0, 0, 1543, 1531, 1515, 0, 0, 1523, 1525,
	0, 0, 0, 1512, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1539, 0,
	1540, 0, 0, 0, 0, 1541, 0, 1510, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 1531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 1519, 1520, 1521, 0, 0, 0, 0,
	0, 0, 1501, 0, 1541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 1530, 0, 0, 0, 0, 1533, 0, 0, 1543,
	0, 0, 0, 0, 1523, 1525, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1539, 0, 1540, 0, 0, 0,
	0, 0, 1534, 1510, 1511, 0, 0, 1522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1531,
	0, 0, 0, 0, 0, 1517, 0, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1541, 1534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1532, 0, 0,
	1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505,
	1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 0, 0,
	0, 0, 0, 1522, 2983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 0, 0, 0, 0, 1532, 0, 0, 1507,
	1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497,
	1498, 1499, 1500, 1502, 1503, 0, 0, 1534, 0, 0,
	0, 1493, 1494, 2662, 1526, 1527, 1528, 1536, 1537, 1538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1529, 1524, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 0, 0, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 1515, 0,
	0, 0, 0, 0, 0, 0, 1512, 0, 0, 0,
	0, 0, 1532, 0, 0, 1507, 1508, 1514, 1535, 1513,
	1509, 0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502,
	1503, 0, 0, 0, 0, 0, 0, 1493, 1494, 2661,
	1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1529, 1524, 0, 0,
	0, 0, 0, 0, 1496, 1518, 1519, 1520, 1521, 1542,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 1494, 0, 1526,
	1527, 1528, 1536, 1537, 1538, 1495, 0, 0, 0, 1533,
	0, 0, 1543, 0, 1515, 1529, 1524, 1523, 1525, 0,
	0, 0, 1512, 1496, 0, 0, 0, 0, 1542, 0,
	0, 0, 0, 0, 0, 0, 0, 1539, 0, 1540,
	0, 0, 0, 0, 0, 0, 1510, 1511, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 0, 1531, 1515, 0, 0, 0, 0, 0, 0,
	0, 1512, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 1519, 1520, 1521, 0, 0, 0, 0, 0,
	0, 1501, 0, 1541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 1533, 0, 0, 1543, 0,
	0, 0, 0, 1523, 1525, 0, 0, 0, 0, 0,
	1518, 1519, 1520, 1521, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 1539, 0, 1540, 0, 0, 0, 0,
	0, 0, 1510, 1511, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 1533, 0, 0, 1543, 1531, 0,
	0, 0, 1523, 1525, 1517, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1539, 0, 1540, 0, 0, 0, 0, 1541,
	1534, 1510, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 1531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1517, 0, 0, 0, 0, 1532, 0, 0, 1507, 1508,
	1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498,
	1499, 1500, 1502, 1503, 0, 0, 1534, 0, 0, 0,
	0, 1522, 2658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1493, 1494, 1534, 1526, 1527, 1528, 1536,
	1537, 1538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1529, 1524, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 1542, 0, 0, 0, 0,
	0, 1532, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509,
	0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503,
	0, 1495, 0, 0, 0, 0, 0, 0, 2657, 0,
	1515, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1532, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509, 0,
	1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 2656, 0, 0,
	0, 0, 0, 1493, 1494, 0, 1526, 1527, 1528, 1536,
	1537, 1538, 0, 0, 0, 0, 0, 1518, 1519, 1520,
	1521, 0, 1529, 1524, 0, 0, 0, 1501, 0, 0,
	1496, 0, 0, 0, 0, 1542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 0, 0, 1543, 0, 0, 0, 0, 1523,
	1525, 1495, 0, 0, 0, 0, 0, 0, 0, 0,
	1515, 0, 0, 0, 0, 0, 0, 0, 1512, 1539,
	0, 1540, 0, 0, 0, 0, 0, 0, 1510, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1541, 0, 1518, 1519, 1520,
	1521, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 0, 0, 1543, 0, 0, 0, 0, 1523,
	1525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 1539,
	0, 1540, 0, 0, 0, 0, 0, 0, 1510, 1511,
	0, 0, 0, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 1534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 1532, 0, 0,
	1507, 1508, 1514, 1535, 1513, 1509, 1517, 1506, 1504, 1505,
	1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 0, 0,
	0, 0, 1493, 1494, 2134, 1526, 1527, 1528, 1536, 1537,
	1538, 0, 1534, 0, 0, 0, 0, 0, 0, 0,
	0, 1529, 1524, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 0, 1542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 1493, 1494, 1515,
	1526, 1527, 1528, 1536, 1537, 1538, 0, 1512, 0, 0,
	0, 0, 0, 0, 0, 0, 1529, 1524, 0, 0,
	0, 0, 0, 0, 1496, 0, 0, 1532, 0, 1542,
	1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505,
	1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 0, 0,
	3618, 0, 0, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 1515, 0, 1518, 1519, 1520, 1521,
	0, 0, 1512, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1533, 0, 0, 1543, 0, 0, 0, 0, 1523, 1525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1539, 0,
	1540, 1518, 1519, 1520, 1521, 0, 0, 1510, 1511, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 1533, 0, 0, 1543, 0,
	0, 0, 0, 1523, 1525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1541, 0, 0, 0, 0, 0,
	0, 0, 0, 1539, 0, 1540, 0, 0, 0, 0,
	0, 1530, 1510, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 1541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1517, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1534, 0, 0, 1493, 1494, 0, 1526, 1527, 1528,
	1536, 1537, 1538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 1529, 1524, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 0, 1542, 0, 0, 0,
	1517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1493, 1494, 0, 1526, 1527, 1528, 1536,
	1537, 1538, 1495, 0, 0, 0, 1534, 0, 0, 0,
	0, 1515, 1529, 1524, 0, 0, 0, 0, 0, 1512,
	1496, 0, 0, 0, 0, 1542, 1532, 0, 0, 1507,
	1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497,
	1498, 1499, 1500, 1502, 1503, 0, 0, 0, 0, 3614,
	0, 1495, 0, 0, 0, 0, 0, 0, 0, 0,
	1515, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 1519,
	1520, 1521, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 1532, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509,
	0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503,
	0, 0, 1533, 0, 3533, 1543, 0, 0, 0, 0,
	1523, 1525, 0, 0, 0, 0, 0, 1518, 1519, 1520,
	1521, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	1539, 0, 1540, 0, 0, 0, 0, 0, 0, 1510,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 0, 0, 1543, 1531, 0, 0, 0, 1523,
	1525, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1539,
	0, 1540, 0, 0, 0, 0, 1541, 0, 1510, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1493, 1494, 0, 1526, 1527, 1528, 1536, 1537, 1538, 0,
	0, 0, 0, 1534, 0, 0, 0, 0, 1522, 1529,
	1524, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 1542, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 1534, 0, 0, 1493, 1494, 1515, 1526, 1527,
	1528, 1536, 1537, 1538, 0, 1512, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 1524, 0, 0, 0, 0,
	0, 0, 1496, 0, 0, 0, 0, 1542, 1532, 0,
	0, 1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504,
	1505, 1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 0,
	0, 3532, 0, 1495, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 1518, 1519, 1520, 1521, 0, 0,
	1512, 0, 0, 0, 1501, 0, 0, 1532, 0, 0,
	1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505,
	1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 1533, 0,
	3415, 1543, 0, 0, 0, 0, 1523, 1525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1539, 0, 1540, 1518,
	1519, 1520, 1521, 0, 0, 1510, 1511, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 1533, 0, 0, 1543, 0, 0, 0,
	0, 1523, 1525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1541, 0, 0, 0, 0, 0, 0, 0,
	0, 1539, 0, 1540, 0, 0, 0, 0, 0, 1530,
	1510, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 1541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1517, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1534,
	0, 0, 1493, 1494, 0, 1526, 1527, 1528, 1536, 1537,
	1538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1522, 1529, 1524, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 0, 1542, 0, 0, 0, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1493, 1494, 0, 1526, 1527, 1528, 1536, 1537, 1538,
	1495, 0, 0, 0, 1534, 0, 0, 0, 0, 1515,
	1529, 1524, 0, 0, 0, 0, 0, 1512, 1496, 0,
	0, 0, 0, 1542, 1532, 0, 0, 1507, 1508, 1514,
	1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 0, 0, 0, 0, 3312, 0, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 1515, 0,
	0, 0, 0, 0, 0, 0, 1512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 1519, 1520, 1521,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 1532,
	0, 0, 1507, 1508, 1514, 1535, 1513, 1509, 0, 1506,
	1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 0, 0,
	1533, 0, 3265, 1543, 0, 0, 0, 0, 1523, 1525,
	0, 0, 0, 0, 0, 1518, 1519, 1520, 1521, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 1539, 0,
	1540, 0, 0, 0, 0, 0, 0, 1510, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1533,
	0, 0, 1543, 1531, 0, 0, 0, 1523, 1525, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1539, 0, 1540,
	0, 0, 0, 0, 1541, 0, 1510, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1493, 1494,
	0, 1526, 1527, 1528, 1536, 1537, 1538, 0, 0, 0,
	0, 1534, 0, 0, 0, 0, 1522, 1529, 1524, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	1542, 0, 0, 0, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	1534, 0, 0, 1493, 1494, 1515, 1526, 1527, 1528, 1536,
	1537, 1538, 0, 1512, 0, 0, 0, 0, 0, 0,
	0, 0, 1529, 1524, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 1542, 1532, 0, 0, 1507,
	1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497,
	1498, 1499, 1500, 1502, 1503, 0, 0, 0, 0, 3264,
	0, 1495, 0, 0, 0, 0, 0, 0, 0, 0,
	1515, 0, 1518, 1519, 1520, 1521, 0, 0, 1512, 0,
	0, 0, 1501, 0, 0, 1532, 0, 0, 1507, 1508,
	1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498,
	1499, 1500, 1502, 1503, 0, 0, 1533, 0, 3263, 1543,
	0, 0, 0, 0, 1523, 1525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1539, 0, 1540, 1518, 1519, 1520,
	1521, 0, 0, 1510, 1511, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	0, 1533, 0, 0, 1543, 0, 0, 0, 0, 1523,
	1525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1541, 0, 0, 0, 0, 0, 0, 0, 0, 1539,
	0, 1540, 0, 0, 0, 0, 0, 1530, 1510, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 1541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1534, 0, 0,
	1493, 1494, 0, 1526, 1527, 1528, 1536, 1537, 1538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 1529,
	1524, 0, 0, 0, 0, 0, 0, 1496, 0, 0,
	0, 0, 1542, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1493,
	1494, 0, 1526, 1527, 1528, 1536, 1537, 1538, 1495, 0,
	0, 0, 1534, 0, 0, 0, 0, 1515, 1529, 1524,
	0, 0, 0, 0, 0, 1512, 1496, 0, 0, 0,
	0, 1542, 1532, 0, 0, 1507, 1508, 1514, 1535, 1513,
	1509, 0, 1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502,
	1503, 0, 0, 0, 0, 3019, 0, 1495, 0, 0,
	0, 0, 0, 0, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 1519, 1520, 1521, 0, 0,
	0, 0, 0, 0, 1501, 0, 0, 1532, 0, 0,
	1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505,
	1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 1533, 0,
	2654, 1543, 0, 0, 0, 0, 1523, 1525, 0, 0,
	0, 0, 0, 1518, 1519, 1520, 1521, 0, 0, 0,
	0, 0, 0, 1501, 0, 0, 1539, 0, 1540, 0,
	0, 0, 0, 0, 0, 1510, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1533, 0, 0,
	1543, 1531, 0, 0, 0, 1523, 1525, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1539, 0, 1540, 0, 0,
	0, 0, 1541, 0, 1510, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	1531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 1494, 0, 1526,
	1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0, 1534,
	0, 0, 0, 0, 1522, 1529, 1524, 0, 0, 0,
	0, 0, 0, 1496, 0, 0, 0, 0, 1542, 0,
	0, 0, 1517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 1534, 0,
	0, 1493, 1494, 1515, 1526, 1527, 1528, 1536, 1537, 1538,
	0, 1512, 0, 0, 0, 0, 0, 0, 0, 0,
	1529, 1524, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 0, 0, 1542, 1532, 0, 0, 1507, 1508, 1514,
	1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499,
	1500, 1502, 1503, 0, 0, 0, 0, 2653, 0, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 1515, 0,
	1518, 1519, 1520, 1521, 0, 0, 1512, 0, 0, 0,
	1501, 0, 0, 1532, 0, 0, 1507, 1508, 1514, 1535,
	1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499, 1500,
	1502, 1503, 0, 0, 1533, 0, 2652, 1543, 0, 0,
	0, 0, 1523, 1525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1539, 0, 1540, 1518, 1519, 1520, 1521, 0,
	0, 1510, 1511, 0, 0, 1501, 3728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 1533,
	0, 0, 1543, 0, 0, 0, 0, 1523, 1525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1541, 0,
	0, 0, 0, 0, 0, 0, 0, 1539, 0, 1540,
	0, 0, 0, 0, 0, 1530, 1510, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 1541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1517,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3727, 0, 0, 1534, 0, 0, 0, 1493,
	1494, 0, 1526, 1527, 1528, 1536, 1537, 1538, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 1529, 1524,
	0, 0, 0, 0, 2580, 0, 1496, 0, 0, 0,
	0, 1542, 0, 0, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1495, 0, 0,
	1534, 0, 0, 0, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 0, 0, 0,
	1532, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509, 0,
	1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 0,
	0, 0, 0, 2651, 2581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 1519, 1520, 1521, 0, 0, 0,
	0, 0, 0, 1501, 0, 1532, 0, 0, 1507, 1508,
	1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498,
	1499, 1500, 1502, 1503, 0, 0, 0, 1533, 0, 0,
	1543, 0, 0, 0, 0, 1523, 1525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1539, 0, 1540, 0, 0,
	0, 0, 0, 0, 1510, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 1494, 0, 1526,
	1527, 1528, 1536, 1537, 1538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 1529, 1524, 0, 0, 0,
	0, 0, 0, 1496, 0, 0, 0, 0, 1542, 0,
	0, 0, 1517, 0, 0, 0, 0, 0, 2244, 0,
	0, 0, 0, 0, 0, 1493, 1494, 0, 1526, 1527,
	1528, 1536, 1537, 1538, 1495, 0, 0, 0, 1534, 0,
	0, 0, 0, 1515, 1529, 1524, 0, 0, 0, 2243,
	0, 1512, 1496, 0, 0, 0, 0, 1542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 0,
	1512, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 1519, 1520, 1521, 0, 0, 0, 0, 0, 0,
	1501, 0, 2701, 1532, 0, 2700, 1507, 1508, 1514, 1535,
	1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499, 1500,
	1502, 1503, 0, 0, 1533, 0, 0, 1543, 0, 0,
	0, 0, 1523, 1525, 0, 0, 0, 0, 0, 1518,
	1519, 1520, 1521, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 1539, 0, 1540, 0, 0, 0, 0, 0,
	0, 1510, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 0, 0, 1543, 1531, 0, 0,
	0, 1523, 1525, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1539, 0, 1540, 0, 0, 0, 0, 1541, 0,
	1510, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 0, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 1494, 0, 1526, 1527, 1528, 1536, 1537,
	1538, 0, 0, 0, 0, 1534, 0, 0, 0, 0,
	1522, 1529, 1524, 0, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 0, 1542, 0, 0, 0, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 0, 0, 0, 1534, 0, 0, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 0, 1512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1532, 0, 0, 1507, 1508, 1514, 1535, 1513, 1509, 0,
	1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 1519, 1520, 1521,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 1532,
	0, 0, 1507, 1508, 1514, 1535, 1513, 1509, 0, 1506,
	1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 0, 0,
	1533, 0, 0, 1543, 0, 0, 0, 0, 1523, 1525,
	0, 0, 0, 0, 0, 0, 1493, 1494, 0, 1526,
	1527, 1528, 1536, 1537, 1538, 0, 0, 0, 1539, 0,
	1540, 0, 0, 0, 0, 1529, 1524, 1510, 1511, 0,
	0, 0, 0, 1496, 0, 0, 0, 0, 1542, 0,
	0, 0, 0, 1531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 1541, 0, 0, 0, 0, 0,
	0, 1512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	1518, 1519, 1520, 1521, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 1517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 0, 0, 1543, 0, 0,
	0, 1534, 1523, 1525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1539, 0, 1540, 0, 0, 0, 0, 0,
	0, 1510, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1541, 0,
	0, 0, 0, 0, 0, 0, 1532, 0, 0, 1507,
	1508, 1514, 1535, 1513, 1509, 1530, 1506, 1504, 1505, 1497,
	1498, 1499, 1500, 1502, 1503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1493, 1494, 0, 1526, 1527, 1528, 1536,
	1537, 1538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 1529, 1524, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 1542, 0, 0, 0, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 1494, 0, 1526, 1527, 1528, 1536, 1537,
	1538, 1495, 0, 0, 0, 1534, 0, 0, 0, 0,
	1515, 1529, 1524, 0, 0, 0, 2702, 0, 1512, 1496,
	0, 0, 0, 0, 1542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2998, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 0, 1512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 1519, 1520,
	1521, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	1532, 0, 2707, 1507, 1508, 1514, 1535, 1513, 1509, 0,
	1506, 1504, 1505, 1497, 1498, 1499, 1500, 1502, 1503, 0,
	0, 1533, 0, 0, 1543, 0, 0, 0, 0, 1523,
	1525, 0, 0, 0, 0, 0, 1518, 1519, 1520, 1521,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 1539,
	0, 1540, 0, 0, 0, 0, 0, 0, 1510, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1533, 0, 0, 1543, 1531, 0, 0, 0, 1523, 1525,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1539, 0,
	1540, 0, 0, 0, 0, 1541, 0, 1510, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 1531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 1530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1493,
	1494, 0, 1526, 1527, 1528, 1536, 1537, 1538, 0, 0,
	0, 0, 1534, 0, 0, 0, 0, 1522, 1529, 1524,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 1542, 0, 0, 0, 1517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1495, 0, 0,
	0, 1534, 0, 0, 1493, 1494, 1515, 1526, 1527, 1528,
	1536, 1537, 1538, 0, 1512, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 1524, 0, 0, 0, 2655, 0,
	0, 1496, 0, 0, 0, 0, 1542, 1532, 0, 0,
	1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505,
	1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 0, 0,
	0, 0, 1495, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 0, 1518, 1519, 1520, 1521, 0, 0, 1512,
	0, 0, 0, 1501, 0, 0, 1532, 0, 0, 1507,
	1508, 1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497,
	1498, 1499, 1500, 1502, 1503, 0, 0, 1533, 0, 0,
	1543, 0, 0, 0, 0, 1523, 1525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1539, 0, 1540, 1518, 1519,
	1520, 1521, 0, 0, 1510, 1511, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 1533, 0, 0, 1543, 0, 0, 0, 0,
	1523, 1525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 0, 0, 0, 0, 0,
	1539, 0, 1540, 0, 0, 0, 0, 0, 1530, 1510,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 2669, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 1541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1534, 0,
	0, 1493, 1494, 0, 1526, 1527, 1528, 1536, 1537, 1538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	1529, 1524, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 0, 0, 1542, 0, 0, 0, 1517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1495,
	0, 0, 0, 1534, 0, 0, 0, 0, 1515, 0,
	0, 0, 0, 0, 0, 0, 1512, 0, 0, 0,
	0, 0, 0, 1532, 0, 0, 1507, 1508, 1514, 1535,
	1513, 1509, 0, 1506, 1504, 1505, 1497, 1498, 1499, 1500,
	1502, 1503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 1519, 1520, 1521, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 1532, 0,
	0, 1507, 1508, 1514, 1535, 1513, 1509, 0, 1506, 1504,
	1505, 1497, 1498, 1499, 1500, 1502, 1503, 0, 0, 1533,
	1712, 0, 1543, 0, 0, 0, 0, 1523, 1525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1539, 0, 1540,
	0, 0, 0, 0, 0, 0, 1510, 1511, 0, 0,
	1729, 1706, 1713, 0, 1696, 1739, 1738, 0, 0, 0,
	1698, 1697, 1531, 0, 0, 0, 0, 0, 1749, 1750,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 0, 0, 0,
	1530, 0, 1740, 0, 1736, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 644, 662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 1733, 1731,
	1732, 645, 0, 0, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1517, 0, 0, 0, 0, 0,
	0, 669, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 1708, 0, 0, 0, 0, 667, 0, 0,
	1534, 0, 1722, 1711, 1724, 1726, 1727, 1728, 1723, 0,
	1716, 0, 0, 0, 0, 0, 648, 0, 0, 0,
	1745, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 649, 0, 0, 650,
	671, 0, 0, 0, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 0, 1709, 0,
	1710, 0, 0, 0, 0, 1532, 0, 0, 1507, 1508,
	1514, 1535, 1513, 1509, 0, 1506, 1504, 1505, 1497, 1498,
	1499, 1500, 1502, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 653, 1730, 0, 0, 0, 1719, 1717, 1718, 1721,
	1720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 0, 0,
	0, 0, 1701, 1702, 1704, 1705, 0, 654, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1725,
	1703, 0, 0, 0, 0, 0, 0, 655, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 1741,
	1742, 1743, 1744, 0, 0, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 656, 0,
	1707, 0, 0, 0, 0, 1714, 1747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 0, 674, 0, 673, 0, 0, 658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 666, 0, 0, 0, 0,
	675, 0, 672, 0, 0, 0, 0, 0, 615,
}
var sqlPact = [...]int{

	4298, -1000, -1000, -1000, -1000, -1000, -1000, 205, 204, 201,
	198, 185, 183, 180, 177, -1000, -1000, -1000, -1000, -1000,
	-1000, 176, -1000, -1000, 175, -1000, 172, 170, 167, 163,
	-1000, 162, 159, 155, -1000, -1000, -1000, -1000, 154, 152,
	150, 59806, 1882, 73024, 63314, 1831, 54514, 72581, 54071, 72138,
	71695, 147, -1000, 71252, 140, 138, 136, -1000, 70809, -1000,
	1525, -1000, 134, 1781, 45183, 125, 124, 123, 2287, 122,
	-1000, 120, -1000, 84777, 1315, -1000, 115, -1000, 3746, 539,
	62434, 2304, 114, 113, 44739, 2282, 2323, -1000, -1000, 1719,
	-1000, -1000, 112, 111, 110, 108, 107, 106, 105, 104,
	102, -1000, 101, 99, 98, 95, 94, 93, 91, -1000,
	90, 85, 82, 81, 78, 77, 76, 75, 73, 71,
	70, 69, -1000, 7795, 1584, 1450, 1445, 1442, 1439, 1436,
	886, 67, 65, 62, 60, 59, 58, 55, -1000, 53,
	52, 50, 48, 47, -1000, 42, 39, 151, 36, 35,
	31, 30, 29, 1764, -1000, 1460, 969, 21314, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 77831, 73461, 28, -19, 27, -1000, 2673, 908, 37196,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	449, -1000, -1000, -1000, 257, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1514, 685, -1000, -1000, -1000, 70372, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1874, -52, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 683, -1000, 1863, 171, 1681,
	-1000, -1000, -1000, -1000, -1000, 73461, -1000, -1000, 2971, 2969,
	1743, 680, 69935, -1000, 1293, -1000, 842, 24122, -1000, 1046,
	-1000, 24122, 256, -1000, -1000, -1000, -1000, -1000, -1000, 2968,
	2967, 2964, 2961, -1000, -1000, 53628, 15666, 53185, 52742, 69492,
	15213, 59369, 48775, -1000, -1000, -1000, 39872, 1104, -1000, -1000,
	-1000, -1000, -1000, -3, 49663, 73461, -1000, 255, -1000, -1000,
	-1000, -1000, -1000, -1000, 30778, 898, 30300, 473, 29822, 248,
	-1000, -1000, -1000, 2958, 2957, 1016, 2956, 2598, 77394, 1504,
	2951, 1428, 1078, 928, 2948, 2947, 2944, 2941, 2940, 2932,
	1216, 69049, 2398, 68606, 1366, 48322, 59806, 59806, 2121, 68163,
	1195, 1187, -1000, -1000, -1000, -1000, 2482, 2322, 2320, 42091,
	-1000, 2929, 2928, 2918, 2916, 2915, 76957, 1476, 2914, 2039,
	2912, 2911, 2910, 2908, 2907, 2905, 2903, 2901, 2900, -1000,
	58926, 58483, 58040, 2713, 67720, 47869, -1000, -1000, -1000, 38964,
	6807, 6429, 67277, 40323, 59806, 59806, -1000, -1000, 31244, 121,
	-1000, -1000, -1000, 39872, 2325, -1000, 31244, 121, -1000, 73461,
	-1000, 2395, 1602, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1870, 1382, 2819, 47416, 1777, 1215, 2656,
	2471, 2442, 1304, 1979, 2436, 2434, 2431, 2416, 2414, 1393,
	2078, 244, 20836, 1309, 1299, 2410, 2403, 2833, 1629, 1913,
	52299, 2899, 2898, 2626, 2374, 2364, 2319, -1000, -1000, -1000,
	-1000, 1242, -1000, -1000, 55388, -1000, -1000, 1051, -1000, -1000,
	1051, -1000, -1000, -1000, -1000, -1000, 1098, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1460, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1875, -1000, 1729, -1000, -1000, 2026,
	2639, 2639, 2639, 2687, 434, 425, -1000, 151, -1000, -1000,
	84530, -1000, -1000, 31244, 31244, 31244, 31244, 31244, 1552, -1000,
	677, -1000, -1000, 719, -1000, 676, 532, -1000, -1000, -1000,
	-1000, -1000, -1000, 673, 2837, -1000, -1000, -1000, -1000, -1000,
	2814, -1000, 17980, -1000, -1000, -1000, 309, 670, 31244, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 782, -1000, 254, 855, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 590, 1516, 586, 586, 586, -1000, -1000, 916, -1000,
	-1000, -1000, 332, 582, 261, 580, -1000, -1000, -1000, -1000,
	2388, 666, 664, -1000, 663, 656, 649, 648, 645, -1000,
	-1000, -1000, 642, 641, 640, 638, 637, 636, 635, 633,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 913, -1000,
	630, 629, 628, 626, 624, 620, 618, 615, 614, -1000,
	-1000, -4, 73461, -1000, 449, -4, -1000, -1000, 611, -1000,
	24588, 24588, 24588, -1000, -1000, 1859, 31244, -1000, 2329, -1000,
	2, 2, 784, 38078, -1000, 36310, 784, 538, 728, 41648,
	-1000, 2318, -1000, -1000, 609, 249, -1000, -1000, 2315, 73461,
	16117, 73461, 59806, 59806, 59806, 2550, 31244, -1000, -1000, 46963,
	73461, 60243, 2771, 84706, 46963, 73461, 2376, -1000, -1000, -1000,
	73461, -1000, 31244, -1000, 2769, 1287, 50104, 2703, -17, -1000,
	-1000, -1000, -1000, -1000, -1000, 2015, 2044, 1023, 1903, 1147,
	-1000, 24122, 2590, -1000, -1000, -1000, 233, 16117, -1000, -1000,
	-1000, -1000, -1000, 1583, 2518, 1167, -1000, 1902, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1461, 2517, -1000,
	1405, 2515, 1458, -1000, -1000, 1820, -1000, -1000, 2615, -1000,
	-1000, 1778, 2513, 3, -1000, -1000, 883, 2510, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 765, -1000, 49226,
	39872, 49663, -10, -1000, -1000, -95, -1000, 14760, 84530, -1000,
	-1000, -1000, 84530, 800, -1000, -1000, 2505, -1000, 84530, 783,
	-1000, -1000, 2504, -1000, -1000, -1000, 2897, -1000, 2893, 1970,
	2892, 2891, 2889, -1000, 1380, 1493, 2886, -1000, 2885, -1000,
	-1000, -1000, -1000, -1000, -1000, 57597, 1845, -1000, -1000, 56711,
	-1000, 1969, -1000, -1000, 57154, 925, -1000, 883, 1968, -1000,
	870, -1000, 2883, 2708, 2141, 883, 1966, -1000, -1000, -1000,
	-1000, -1000, 42973, -1000, 42973, -1000, 42973, -1000, 1276, -1000,
	76520, 2, 2, 2814, -1000, -1000, -1000, -1000, -1000, 2495,
	2882, 2881, 2880, -1000, 73461, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 190, 2492, -1000, -1000, 190, 2488,
	-1000, 190, 2487, -1000, 61991, -1000, -1000, 1745, 2486, -1000,
	-111, 2484, -1000, -1000, -18, -1000, -1000, -1000, 908, -1000,
	38521, -1000, 38521, 66834, 49226, 860, 647, 44296, 84530, -1000,
	-148, -1000, 39872, 84530, -1000, 49226, 56711, -1000, 66391, 56274,
	-1000, -1000, 1208, 2068, -1000, -1000, -1000, 860, 49226, 49226,
	49226, -1000, 65948, -1000, -1000, 1660, 1347, 2617, 1625, 59806,
	-1000, 1604, -1000, -1000, -1000, 2643, 2357, -1000, 46522, 61554,
	-1000, 61117, -1000, 60680, -1000, 59806, -1000, 59806, -1000, 2879,
	2878, 2876, -1000, 2875, 2635, 84530, 2634, -1000, 2407, 1449,
	1432, 73461, -1000, -1000, 73461, -1000, 73461, -1000, -1000, -1000,
	-1000, -1000, 2012, -1000, -1000, -1000, -1000, 59806, -1000, -1000,
	-1000, -1000, -1000, -1000, 2356, -1000, 1416, -1000, 1551, -1000,
	1202, -1000, -1000, 191, -1000, -1000, -17, -1000, 76083, -1000,
	2026, -1000, 73461, -1000, 2037, 2334, 2354, 1431, 1747, 2098,
	-1000, 29344, 2084, 33574, 1897, 151, -1000, -1000, 151, 151,
	23656, -1000, -1000, 84706, 84706, 16117, 1133, 31244, 31244, 31244,
	31244, 31244, 31244, 31244, 31244, 31244, 31244, 31244, 31244, 31244,
	31244, 31244, 31244, 31244, 31244, 31244, 31244, 31244, 31244, 31244,
	31244, 31244, 31244, 31244, 31244, 31244, 31244, 31244, 31244, 31244,
	31244, 31244, 2073, 31244, 1097, 31244, 31244, 31244, 31244, 1950,
	-1000, -1000, 1598, 489, 1667, -1000, 2800, 2800, 2800, 289,
	289, 515, 2874, 719, -1000, 31244, -1000, 121, 31244, 16570,
	-1000, -1000, -1000, 425, 9731, 1855, -1000, 423, 17048, -1000,
	-1000, -1000, 17980, 532, 28866, 31244, 907, 84530, 1179, 2816,
	14309, 2371, 2194, -1000, 2822, -1000, -1000, 2816, -1000, -1000,
	-1000, -1000, 2816, 1130, 1115, 2816, -1000, 2816, 2816, 608,
	730, 717, 20358, 19880, 19402, 18924, 706, 31244, 31244, 31244,
	31244, 31244, 31244, 31244, 31244, -1000, 28400, 27922, 27444, 34040,
	26966, 31244, 18446, 26488, 26010, 73461, -4, 2768, 31244, 156,
	-1000, 83044, -1000, 156, 156, 604, -23, 84530, 2069, 2069,
	37637, 1924, 1613, 1613, 1613, -1000, 784, 10675, 784, 65070,
	1655, 784, 784, 220, 253, 420, 35869, 2329, 65070, 703,
	601, 21, 19, 17, -1000, -1000, 15, 6, -1000, -1000,
	59806, 599, 16570, 16117, 1232, -24, 219, 2106, 2105, 2100,
	-1000, 2095, 1372, -30, 1095, -29, -1000, 6041, -31, -1000,
	1142, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 912, 595, 593, 288, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 590, 1516, 586, 586, 586, -1000, -1000,
	-1000, 332, 582, 261, 580, -1000, -1000, -1000, -1000, -1000,
	-1000, 2312, -95, 60243, 821, -32, 1022, -17, -1000, -1000,
	-1000, 50104, 1051, -1000, 1737, -1000, -1000, -1000, -1000, -1000,
	-1000, 1222, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 782,
	-1000, -1000, -1000, -1000, -1000, -1000, 2808, 2805, -9, -1000,
	-1000, 16117, -1000, -33, 1387, -1000, 51856, 2040, 2620, 2608,
	1265, -1000, 1239, 2686, 55388, 2720, 2760, 894, -1000, 2309,
	-1000, -1000, 840, 1409, 1094, 55388, 1405, -1000, 84706, -1000,
	2136, 2685, 1188, 1221, 1188, 1188, 1197, -1000, 55388, 1087,
	-1000, 1086, -1000, -42, 2718, 2756, 711, -1000, 2306, 1085,
	-1000, -1000, 59806, 16117, -1000, 1478, -1000, 49226, 2147, -1000,
	-39, 765, -10, 49663, 73461, 218, -1000, 31244, 121, 31244,
	121, -1000, -1000, 2480, -1000, -1000, -1000, 2873, 1452, 2030,
	-1000, -1000, -1000, 572, 1963, 2305, 73461, 2081, -13, 59806,
	-1000, 2479, 1405, 1961, -1000, -1000, 55831, -1000, 2476, 569,
	2872, -1000, 75646, -1000, 2621, 1168, 2470, 966, 534, 2767,
	-1000, 534, 43414, -1000, 73461, -1000, -1000, 73461, -1000, -1000,
	-1000, 2871, -1000, 59806, -1000, -1000, 59806, -1000, 59806, -1000,
	59806, 187, 2467, -1000, -1000, 73461, 49226, 49226, 777, 50982,
	-40, -50, 417, -1000, 65511, 73461, 965, 51419, 73461, 2579,
	860, 39872, -148, 860, 860, 765, -1000, 765, -1000, 59806,
	2348, -1000, 860, 860, 860, -1000, -1000, -1000, -1000, 2870,
	2868, -1000, -1000, -1000, 878, 59806, 73461, 59806, -1000, -1000,
	73461, -1000, 73461, -1000, 878, 73461, 878, 73461, 878, 73461,
	-1000, -1000, -1000, -1000, -1000, -1000, 121, 31244, 1305, -1000,
	2345, -1000, 2343, -1000, 46, -1000, -1000, -1000, -1000, 1839,
	59806, 59806, 59806, 59806, 73461, 59806, -1000, 55388, -1000, 2037,
	2334, -1000, -1000, -1000, -1000, -1000, -1000, 1369, 1714, -1000,
	2063, -1000, 1257, -1000, -1000, -1000, 84530, 34506, -1000, -1000,
	84530, 1396, -1000, 33108, 32642, -1000, -1000, 1357, 59806, 2116,
	-1000, 2116, -12, -1000, 82698, 2059, 59806, -1000, -1000, -1000,
	-1000, -1000, 839, 491, 491, 1123, 1123, 1123, 1123, 2706,
	847, 330, 3201, 5301, 5301, 4416, 4416, 4416, 4416, 4416,
	5301, 4316, 1018, 1018, 4316, 4316, 4316, 4316, 4316, 1018,
	1018, 1018, 5301, 5301, 5301, 289, 4966, 9319, 31244, 31244,
	1076, 1575, 489, 9127, 31244, 5572, 5572, 5572, 5572, -1000,
	1744, -1000, -1000, -1000, -1000, 2295, 567, 34040, 34040, -1000,
	-1000, -1000, -1000, 17514, 31244, -1000, -1000, -1000, -1000, 25532,
	-1000, -1000, 7196, -244, 415, -159, 18, -1000, 31244, 31244,
	31244, 410, -1000, 214, 31244, 73461, -1000, 79742, 699, -49,
	-1000, -53, 1246, -1000, 31244, -1000, -1000, 1072, -1000, 1069,
	1065, 1063, -1000, 566, 406, -1000, 212, -1000, 1620, 565,
	562, 405, -60, 403, 838, 836, 397, 396, 394, 31244,
	-1000, -1000, -1000, -1000, -1000, 82335, -1000, -1000, 82038, -1000,
	-1000, 81989, -1000, -1000, 81692, -1000, -1000, -1000, 84233, 79385,
	79336, 79230, 9666, 78867, 78761, -61, 387, -1000, 2293, -159,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 386, -1000,
	385, -1000, 84168, -159, 384, 476, -1000, 34040, 34040, 34040,
	-1000, 378, -1000, 82995, -1000, 83871, 25066, 25066, 25066, 377,
	83822, 31244, -159, -62, -1000, -67, -1000, -1000, 561, -68,
	895, 24588, 36753, 16117, -1000, 895, 895, 31244, -1000, 31244,
	2086, -1000, -1000, -1000, 2079, 1759, 2069, 37637, -1000, -1000,
	-1000, -1000, 65070, -1000, 2814, 2228, -1000, 65070, -1000, -1000,
	73461, 449, -1000, 65070, 65070, 16117, 784, -1000, 784, 65070,
	518, -1000, -1000, -1000, -1000, -1000, 375, 40764, 18, 211,
	860, -1000, 16117, 2191, 2191, 2191, 2191, -1000, -1000, 73461,
	2783, -1000, 1515, -1000, 84706, -1000, 714, 945, 559, -1000,
	2816, 2816, -1000, 2816, 73461, 142, 24122, -1000, 1051, -1000,
	-1000, 1338, -1000, 1474, -1000, 1109, -1000, -1000, -1000, -1000,
	24122, -1000, 1518, 73461, 73461, 59806, -1000, -1000, 1960, 75209,
	1956, 84706, 73461, -1000, -1000, 555, 554, 2054, 2051, 961,
	73461, 73461, 2049, 74772, 74335, 73461, 1618, 31244, 1649, 1511,
	121, 121, -1000, -1000, 121, 551, 1102, 59806, 59806, 59806,
	1444, -1000, -1000, -1000, -1000, -1000, 54951, -1000, -1000, 2820,
	2818, -1000, 1188, -1000, -1000, -1000, 1188, 1405, 1433, 59806,
	73461, 1530, 121, 121, -1000, -1000, 121, 550, 16117, 1479,
	-1000, 1478, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46085,
	974, 883, 860, 2289, -1000, 2147, -1000, -1000, 13858, 84530,
	-1000, 84530, -1000, 73461, -1000, 918, 73461, 51419, 852, 2465,
	42532, -95, 860, 49226, 59806, -13, 73461, -1000, 1405, 2463,
	449, 1947, -1000, -1000, 49226, 2867, 549, 2866, -1000, 1818,
	1946, -1000, -1000, 73898, 2535, 756, 73461, 895, 37637, 1546,
	-1000, 41207, 940, 73461, 1420, 117, -1000, -1000, -1000, 33,
	73461, -1000, 2865, -1000, -1000, 190, 190, 190, -1000, 59806,
	59806, 1745, -1000, -111, -1000, -1000, 777, 777, 860, -15,
	537, -1000, 774, 767, 39421, 49226, -69, -1000, -1000, -1000,
	-1000, -1000, 59806, 73461, 619, 2140, 73461, -74, -1000, 209,
	533, -1000, -1000, 860, 2281, -1000, -1000, 891, -1000, 1150,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1,
	-95, -95, -1000, 878, -1000, 878, -1000, 878, -1000, 84530,
	-1000, 1285, 1280, 73461, -1000, 16117, 73461, 59806, 16117, 59806,
	2331, 2330, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	979, -1000, 1396, 1693, -1000, 532, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2003, -1000, -16, 23656, 1912,
	-1000, -1000, 59806, 0, 31244, 31244, 8965, 8557, 31244, 34040,
	34040, -1000, 31244, 6825, -1000, -1000, -1000, -1000, -1000, 2270,
	531, 31244, 84706, 5539, 4719, -1000, 365, 78712, 4316, -1000,
	31244, -1000, 363, 23190, -1000, 83341, -37, -75, -1000, 11138,
	-159, -76, -1000, -1000, 712, -1000, 2528, -1000, 31244, 83525,
	1987, 1881, 1465, 1343, 2816, 2835, 13407, -1000, 43855, 902,
	1664, -1000, -1000, 2816, 802, -1000, -1000, -1000, 802, -1000,
	81627, -1000, -1000, -1000, -1000, 84706, 84706, 31244, 31244, -1000,
	31244, 31244, 31244, -1000, -1000, 31244, -1000, -1000, 2265, 31244,
	-1000, 84706, 84706, 34040, 34040, 34040, 34040, 34040, 34040, 34040,
	34040, 34040, 34040, 34040, 34040, 34040, 34040, 34040, 34040, 34040,
	34040, 34040, 2027, 34040, 2798, 2798, 2798, -1000, 2326, 2265,
	31244, 31244, 84706, 352, 351, 350, -1000, 31244, -159, -1000,
	-1000, 777, -1000, 2193, -1000, 31244, -1000, -206, -1000, 2329,
	-1000, -1000, 2193, 2193, -77, 84530, 37637, 37637, -1000, 530,
	31244, 2074, -1000, -1000, 698, -242, -1000, 764, -1000, -1000,
	-1000, -1000, -1000, 449, -1000, -1000, -1000, 157, 65070, 65070,
	696, -1000, -82, -1000, -1000, -84, -1000, 2762, 349, 16117,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -95, 1668,
	2834, -1000, 2817, 710, 695, 2816, 347, 346, 344, -95,
	73461, -1000, -17, -1000, -1000, -1000, 31244, -1000, -1000, 2619,
	1060, 1058, -1000, 2459, -1000, 1944, -1000, 946, -1000, 1735,
	-1000, 31244, 31244, 529, 527, 2864, 1539, 2862, 964, 2457,
	1745, 2456, 1745, -1000, -1000, 804, -1000, 84530, 526, 524,
	-1000, -33, 1384, 887, -1000, -1000, 31244, 31244, 64633, -1000,
	359, 2615, -1, -1000, 1056, -1000, -1000, -1000, -1000, 1405,
	1055, -1000, -1000, -1000, 885, -1000, -1000, 31244, -1000, -42,
	1047, -1000, -1000, -1000, 45634, -1000, -1000, 49226, 860, -1000,
	2861, 2860, 2859, 343, -85, -51, 84706, 2758, 1841, 493,
	59806, 831, -1000, 2814, -1000, -1000, -1000, -1000, 59806, 2738,
	2454, 883, -1000, 2858, -1000, 59806, 2450, 1815, 1942, 2022,
	756, 50545, -1000, 883, 1664, -120, -1000, 1420, 22712, 2613,
	-90, -1000, -1000, -1000, 895, 43414, 37637, 31244, 2857, -97,
	-1000, -1000, -1000, -1000, -1000, 187, -1000, -1000, -1000, -1000,
	64196, 64196, 49226, 49226, 49226, 860, 73461, 73461, 51419, 2852,
	523, 73461, 73461, 521, -1000, 73461, 73461, 2851, 49226, -1000,
	121, -1000, 1677, 59806, 12956, -1000, -1000, -1000, -1000, -1000,
	878, -1000, -1000, 1547, 1887, 1547, 1411, 1407, -1000, 1685,
	-1000, -1000, -1000, -1000, 2099, 2627, 16117, 2716, 5572, 31244,
	31244, 5807, 3934, 3837, 5572, 31244, 31244, 84706, 8203, -98,
	31244, 31244, -1000, 31244, 693, 84530, 2831, 31244, 341, 338,
	-1000, -1000, -1000, 2815, -1000, -1000, -1000, 84530, 31244, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 333, -1000, 143, -1000,
	-1000, -1000, 78268, -1000, 31244, 328, 318, -1000, -1000, -1000,
	317, 315, 10138, 6346, 81330, 81281, 80984, 84530, 2326, 84530,
	-1000, -1000, 857, 857, 1170, 1170, 1170, 1170, 2798, 301,
	731, 1082, 379, 379, 379, 552, 1088, 1088, 379, 379,
	379, 2263, 2032, 520, 5726, -1000, -1000, 84530, 84530, 314,
	-1000, -1000, -1000, -159, 311, 2188, 2682, 84530, -1000, 37637,
	2188, 2188, -1000, -1000, 1759, 73461, 84530, 37637, -1000, 2228,
	-1000, 11599, -1000, 16117, -1000, -1000, -1000, -1000, 2814, -1000,
	40764, -1000, 516, -1000, 34, -1000, -1000, 690, 2850, 705,
	307, -1000, -1000, -1000, -95, 84530, 73461, 73461, 73461, 2448,
	-1000, 1997, -1000, 961, 80919, -99, -1000, 82698, 31244, 73461,
	-1000, -1000, 1612, 2103, 1001, -1000, 2641, 73461, -1000, 73461,
	-1000, -1000, 73461, 73461, 59806, 2437, -100, 84530, -96, -1000,
	763, -1000, 1184, -1000, 12505, 59806, 59806, 2421, -105, 16117,
	-1000, -1000, -111, -1000, -1000, -1000, -1000, 2134, -1000, 62871,
	1709, 121, -1000, 63755, 2849, 514, -1000, 1673, -1000, 688,
	1405, 121, 59806, -1000, -1000, 954, 16117, 59806, 2447, 2024,
	756, 50545, -1000, 1168, 2098, -1000, -119, -1000, 502, 121,
	1664, -1000, -120, 84530, -1000, 761, -1000, -1000, -106, -1000,
	-1000, 285, -1000, 2578, 2577, -1000, -1000, 31244, 512, 511,
	73461, 2570, -1000, -1000, -108, -1000, 2020, -1000, -1000, -1000,
	-1000, -1000, 16117, 1402, -1000, 507, 506, -1000, -1000, -1000,
	-1000, 2627, 5572, 5572, 31244, 31244, 31244, 5572, 8203, -113,
	-1000, 5572, 5572, -159, -1000, -1000, 83341, -1000, -1000, -1000,
	84530, -1000, 12054, 1548, -1000, 80622, -1000, -1000, -1000, -1000,
	31244, 31244, -1000, -1000, -1000, -1000, -1000, 34040, 2243, 504,
	84706, -1000, -1000, 897, 31244, 31244, 2329, 897, 897, -1000,
	-118, -1000, -1000, -1000, 2814, 34, -1000, -1000, 2848, 16117,
	702, -1000, 2847, -1000, -1000, -1000, -1000, 73461, -1000, 73461,
	-1000, 16117, 73461, 2198, 1936, -1000, -1000, 2048, 503, 34040,
	59806, 762, 2215, 1545, 31244, 1912, -125, -126, 1934, -1000,
	-1000, 1925, 31244, -1000, 84706, 501, 1745, 1745, -131, -132,
	-1000, 31244, 1038, 73461, 22246, -1000, 2846, 2615, -1000, -1000,
	31244, 1032, -1000, 1530, 2157, -1000, -1000, -1000, -1000, 2047,
	-1000, -1000, 73461, 2035, 861, -133, -1000, 758, 757, -1000,
	51419, 852, 827, -1000, -1000, -1000, 449, 497, 73461, 1814,
	490, 16117, -1000, 756, 50545, -1000, 2535, 1420, -1000, 2542,
	73461, 2602, -1000, 2098, 489, -1000, 860, 488, 482, -134,
	31244, 31244, -139, 480, 860, -128, -1000, 713, 701, -1000,
	-1000, 59806, 59806, 31244, 31244, -1000, 5572, 5572, 5572, -1000,
	275, -1000, -1000, 1664, 2681, -1000, 80573, 80276, 5832, 34040,
	84706, -142, -1000, 73461, 84530, -159, -1000, -1000, -1000, 492,
	-1000, 2845, -1000, -1000, 1802, -1000, -1000, -1000, 73461, 1941,
	-1000, 959, 31244, 5726, 477, 31244, -1000, -1000, 2127, 2249,
	2134, 475, -1000, -1000, -1000, -1000, -1000, 950, 1457, -1000,
	-1000, 84530, 2651, 31244, -1000, -1000, 474, 463, 84530, 462,
	754, 2224, -1000, -1000, -1000, 84530, 460, 852, -1000, 1587,
	1709, 456, -1000, -1000, 1782, 2146, -1000, 63755, 34957, 34957,
	268, 2732, 827, -1000, 2811, -1000, 2724, 31244, -1000, 59806,
	31244, 1813, 50545, -1000, 2022, -1000, 1146, -152, 73461, 1420,
	-1000, -1000, 49226, 49226, 950, -153, -154, -1000, 49226, -1000,
	2020, -1000, 73461, -1000, 73461, -1000, -1000, -160, -161, -1000,
	1740, 31244, -1000, -1000, 5832, -167, -1000, -149, -1000, 2719,
	-1000, -1000, -1000, -1000, 2401, 2182, 80211, 1994, 73461, 79862,
	2231, -1000, -1000, 1530, 73461, 2134, 2176, 59806, 955, 16117,
	-168, 1547, 1547, 31244, 21780, 1579, 31244, 1782, 59806, 73461,
	-1000, 2640, -1000, 2566, -1000, -1000, -1000, 2134, 121, -1000,
	-1000, 121, -185, 954, -186, 59806, -1000, 2024, 1263, -1000,
	895, -1000, -1000, -187, -188, 1545, 950, -1000, -193, -1000,
	-194, -196, -1000, -1000, 267, 32176, 32176, 32176, -159, -1000,
	73461, 451, 2423, 875, -1000, 1797, 1459, 262, 971, -1000,
	-1000, 2215, -199, -1000, 873, 449, -1000, 31244, -1000, 950,
	-204, -1000, 936, -210, -1000, 934, -211, -1000, 2219, -1000,
	-212, -1000, 448, -213, -1000, -1000, 1836, -1000, 1530, 861,
	-1000, 950, 447, 1545, 445, -1000, 43414, -1000, 860, 860,
	2134, 1545, 860, -1000, -1000, -1000, 2443, -1000, 35408, 1799,
	1388, 82400, 2443, 2443, -1000, -1000, 73461, 2694, -1000, 1807,
	1805, 1296, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2679, 1994, 84530, 2134, -1000, 1547, 2155, -1000, 1547, 2211,
	-1000, 1574, -1000, 73461, -1000, 73461, 1368, 1364, 2844, 852,
	1782, 1545, 31244, 2134, 31244, -184, -1000, -1000, 1530, 2134,
	-1000, -1000, 1591, 2765, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 751, -1000, 2553, -1000, 978, 1705, 1705, 749,
	1797, -1000, -1000, 443, -1000, 441, -1000, -218, -1000, -1000,
	2842, -1000, 1782, -1000, 2134, -219, 1530, -221, -1000, -1000,
	1530, 1370, -1000, -1000, 1648, 31710, 31244, -1000, 2786, -1000,
	-1000, 2077, -1000, 31244, 2215, 31244, 31244, 1707, -1000, -1000,
	1530, 950, 888, 1545, -1000, -1000, -1000, -1000, 84530, -1000,
	-1000, -1000, 84530, -1000, -224, -226, -1000, -1000, -1000, 888,
	1545, -1000, 2841, 2134, 1530, 1029, -1000, 2134, -1000, 1530,
	-1000, 440, 1530, 888, 31244, 888, -1000, -235, -1000, 1530,
	-1000,
}
var sqlPgo = [...]int{

	0, 3466, 3465, 3462, 3461, 3459, 3458, 3457, 3455, 3454,
	3453, 3452, 3451, 3450, 3446, 3445, 3444, 3438, 3435, 3434,
	3430, 3429, 3428, 3427, 3426, 3425, 3423, 3422, 3420, 3419,
	3418, 3417, 3416, 3415, 3413, 3412, 3411, 3400, 3397, 3394,
	3392, 3385, 3383, 3382, 3380, 3378, 3373, 32, 3371, 3368,
	3367, 3365, 3363, 3362, 3360, 3359, 3358, 3357, 3355, 3354,
	3352, 3348, 3347, 3345, 3344, 35, 3343, 233, 3342, 3341,
	3338, 3335, 3333, 3332, 3331, 3330, 3329, 231, 3328, 125,
	3327, 3326, 3324, 3322, 3321, 228, 3320, 3319, 3317, 3316,
	3315, 3313, 3306, 3305, 164, 204, 3301, 174, 3299, 3297,
	3296, 3293, 3291, 3289, 3288, 3287, 3286, 3285, 207, 3283,
	227, 3279, 3278, 3276, 3275, 3274, 3273, 3272, 3271, 3269,
	3268, 3267, 3265, 3264, 3263, 3260, 3248, 3245, 3240, 3238,
	3237, 3236, 3235, 3233, 3231, 3230, 3226, 3224, 3222, 235,
	151, 3221, 3219, 226, 225, 3218, 3215, 3214, 3210, 135,
	102, 100, 76, 3209, 112, 36, 3208, 14, 209, 211,
	6925, 187, 3203, 3202, 3197, 208, 154, 3196, 195, 3195,
	3194, 3192, 3190, 75, 70, 149, 150, 140, 141, 180,
	3181, 3180, 78, 56, 34, 33, 3179, 3176, 3172, 2579,
	104, 3171, 221, 201, 136, 3170, 3166, 3165, 1148, 3156,
	3149, 184, 77, 99, 46, 98, 3148, 127, 21, 3144,
	155, 37, 3143, 133, 87, 38, 6053, 6395, 3142, 111,
	238, 88, 171, 190, 188, 132, 192, 172, 143, 129,
	3140, 213, 3139, 82, 134, 3137, 3132, 3131, 60, 160,
	90, 3129, 9, 5, 2, 137, 13, 95, 19, 3126,
	15, 3125, 3124, 3123, 3122, 26, 130, 3121, 124, 61,
	3119, 17, 3117, 18, 175, 3116, 193, 101, 3114, 3113,
	217, 165, 158, 3112, 63, 189, 3111, 3110, 3106, 3105,
	3104, 106, 24, 103, 3103, 3102, 110, 197, 159, 3101,
	53, 3100, 142, 79, 117, 230, 138, 191, 93, 176,
	147, 194, 3098, 3097, 3095, 232, 3093, 3092, 167, 146,
	3091, 3090, 163, 236, 28, 57, 196, 58, 157, 131,
	3088, 162, 3087, 3086, 3085, 237, 144, 178, 6, 1,
	92, 96, 29, 10, 179, 122, 214, 83, 3083, 3742,
	1442, 1580, 40, 115, 89, 55, 86, 123, 223, 43,
	3081, 3080, 1386, 3079, 3078, 3077, 3075, 148, 3074, 3073,
	3072, 116, 139, 173, 3071, 126, 72, 12, 91, 210,
	239, 84, 177, 170, 218, 3070, 156, 3069, 69, 113,
	3068, 161, 215, 73, 3067, 80, 119, 3066, 186, 3065,
	3062, 3061, 3060, 3059, 3057, 3056, 52, 3055, 118, 3054,
	3053, 222, 152, 3052, 220, 128, 198, 94, 31, 3049,
	67, 426, 3045, 169, 62, 3043, 109, 68, 0, 7146,
	5547, 6964, 3042, 1603, 3038, 166, 108, 3029, 3028, 3027,
	97, 3026, 64, 3024, 3020, 41, 3019, 16, 8, 11,
	22, 20, 489, 234, 3018, 3017, 107, 105, 120, 3016,
	229, 181, 3015, 3014, 3012, 71, 3011, 27, 3010, 30,
	3004, 3003, 39, 7, 23, 3001, 3000, 202, 2998, 206,
	2997, 2995, 2751, 114, 2994, 2992, 219, 66, 2989, 216,
	2988, 2722, 145, 185, 2987, 2986, 2985, 2984, 212, 2982,
	2981, 25, 4, 2980, 2979, 168, 3, 2559, 2978, 2977,
	74, 2976, 2974, 153,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 11, 11, 7, 7, 8,
	8, 8, 35, 35, 9, 9, 9, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 14, 14,
	25, 25, 15, 15, 27, 27, 16, 16, 28, 28,
	476, 476, 19, 30, 20, 31, 13, 477, 477, 477,
	477, 24, 21, 32, 22, 22, 22, 22, 22, 153,
	153, 153, 153, 18, 18, 26, 26, 176, 176, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 475, 475, 178, 178, 177, 172, 172, 478, 478,
	179, 179, 179, 181, 181, 36, 36, 36, 93, 93,
	93, 94, 94, 95, 95, 154, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 81, 81, 416, 416, 417,
	417, 149, 149, 150, 150, 150, 150, 151, 151, 152,
	152, 152, 50, 38, 38, 38, 38, 38, 38, 38,
	39, 39, 39, 39, 40, 40, 40, 40, 40, 40,
	41, 41, 41, 41, 41, 41, 48, 48, 48, 48,
	140, 140, 51, 51, 51, 51, 51, 51, 51, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 486,
	486, 487, 487, 488, 488, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 62, 62, 257, 257, 232, 232, 63, 63,
	63, 64, 64, 65, 65, 52, 52, 469, 469, 271,
	271, 380, 380, 67, 67, 291, 291, 68, 68, 68,
	68, 68, 68, 69, 69, 69, 69, 69, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 75, 75,
	75, 76, 76, 76, 74, 74, 74, 72, 72, 72,
	71, 71, 71, 73, 73, 73, 272, 272, 77, 77,
	77, 77, 77, 77, 77, 77, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 382, 382, 78, 78, 78, 350, 350, 82, 82,
	82, 306, 306, 83, 83, 83, 83, 83, 84, 84,
	84, 84, 96, 96, 96, 96, 472, 472, 264, 264,
	192, 192, 192, 192, 89, 89, 89, 89, 90, 90,
	90, 91, 91, 145, 145, 102, 102, 102, 102, 102,
	101, 101, 101, 101, 101, 101, 42, 42, 42, 43,
	43, 44, 44, 45, 45, 46, 46, 47, 47, 47,
	47, 47, 104, 104, 482, 482, 106, 103, 103, 103,
	105, 105, 105, 105, 107, 108, 108, 108, 108, 108,
	108, 108, 108, 109, 109, 410, 410, 280, 280, 408,
	408, 424, 424, 409, 409, 236, 236, 236, 236, 236,
	237, 237, 237, 415, 415, 415, 415, 415, 415, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 146, 146, 147, 148, 148, 148, 148,
	129, 129, 129, 139, 139, 139, 139, 139, 139, 139,
	132, 132, 132, 119, 119, 111, 111, 111, 111, 111,
	115, 115, 115, 115, 115, 115, 115, 115, 112, 112,
	121, 121, 121, 121, 121, 116, 116, 118, 118, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 113, 113,
	113, 113, 123, 123, 123, 123, 313, 313, 313, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 135,
	135, 135, 135, 135, 135, 364, 364, 130, 130, 130,
	130, 134, 134, 134, 134, 296, 296, 127, 127, 127,
	128, 128, 128, 133, 133, 131, 131, 136, 136, 136,
	136, 114, 114, 114, 490, 490, 490, 137, 137, 126,
	126, 138, 138, 138, 138, 138, 138, 138, 138, 125,
	125, 125, 124, 124, 124, 124, 117, 470, 470, 467,
	467, 467, 467, 467, 467, 467, 468, 468, 471, 471,
	87, 87, 87, 57, 57, 57, 58, 58, 157, 157,
	157, 157, 242, 242, 242, 242, 155, 155, 156, 156,
	59, 59, 491, 491, 491, 479, 479, 479, 480, 480,
	480, 480, 480, 480, 238, 238, 239, 239, 331, 331,
	331, 331, 331, 243, 243, 180, 180, 180, 246, 247,
	247, 244, 244, 245, 245, 245, 249, 249, 248, 251,
	251, 250, 330, 431, 431, 433, 433, 433, 433, 433,
	433, 433, 435, 435, 435, 435, 435, 435, 435, 435,
	435, 435, 435, 429, 429, 429, 430, 425, 425, 426,
	426, 426, 426, 426, 240, 240, 241, 241, 241, 241,
	427, 428, 262, 262, 367, 432, 432, 434, 434, 436,
	492, 492, 492, 492, 492, 492, 493, 493, 493, 329,
	329, 328, 328, 255, 255, 437, 437, 437, 437, 438,
	438, 438, 438, 438, 441, 440, 439, 439, 439, 439,
	439, 61, 61, 61, 293, 293, 292, 292, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 142, 142, 195, 195, 56, 56, 56,
	12, 12, 12, 481, 481, 481, 60, 60, 60, 60,
	194, 194, 194, 194, 194, 194, 474, 474, 473, 473,
	196, 196, 495, 495, 66, 66, 66, 66, 66, 66,
	55, 55, 55, 55, 55, 496, 496, 314, 314, 312,
	312, 311, 311, 261, 261, 366, 199, 199, 173, 173,
	173, 23, 17, 17, 33, 33, 34, 34, 29, 29,
	483, 483, 484, 484, 88, 88, 92, 92, 92, 100,
	100, 141, 141, 141, 141, 141, 141, 141, 37, 37,
	37, 37, 49, 49, 49, 49, 98, 498, 498, 498,
	99, 99, 99, 497, 497, 193, 193, 325, 325, 326,
	326, 499, 499, 327, 327, 327, 327, 187, 186, 188,
	188, 54, 54, 54, 182, 182, 183, 183, 184, 184,
	185, 185, 500, 500, 85, 85, 85, 144, 144, 231,
	231, 231, 321, 321, 321, 256, 256, 205, 205, 324,
	324, 322, 322, 322, 322, 290, 290, 290, 143, 143,
	269, 269, 282, 282, 283, 283, 377, 377, 284, 97,
	97, 160, 160, 158, 158, 158, 158, 158, 158, 158,
	158, 165, 165, 166, 166, 167, 167, 168, 169, 169,
	169, 169, 273, 273, 170, 170, 170, 159, 159, 159,
	161, 161, 161, 161, 161, 161, 161, 164, 164, 164,
	164, 171, 171, 171, 163, 163, 448, 448, 448, 450,
	450, 451, 447, 447, 449, 449, 494, 494, 295, 295,
	295, 253, 254, 252, 252, 259, 259, 258, 260, 260,
	365, 365, 365, 174, 174, 174, 287, 287, 287, 287,
	288, 288, 317, 317, 315, 315, 315, 315, 316, 316,
	318, 318, 318, 319, 319, 320, 320, 286, 286, 346,
	346, 162, 162, 162, 266, 266, 266, 267, 267, 337,
	337, 337, 337, 337, 337, 338, 338, 336, 336, 336,
	336, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	369, 370, 370, 268, 268, 371, 323, 323, 465, 465,
	465, 466, 466, 363, 363, 372, 372, 372, 372, 372,
	372, 361, 361, 362, 362, 378, 379, 379, 299, 299,
	299, 299, 297, 297, 300, 300, 300, 300, 298, 298,
	373, 373, 373, 373, 289, 289, 374, 374, 374, 374,
	375, 332, 333, 333, 383, 383, 383, 383, 398, 265,
	265, 265, 265, 265, 501, 501, 384, 384, 384, 384,
	384, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 388, 388, 388, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 397, 397, 397, 397, 397, 389,
	389, 394, 394, 395, 395, 395, 390, 391, 396, 396,
	396, 396, 502, 502, 400, 400, 392, 392, 392, 392,
	392, 392, 392, 392, 392, 386, 386, 386, 393, 393,
	393, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 307, 307, 309, 309, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 341, 341, 341, 341, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 442, 442, 442, 442, 442, 442, 442, 442,
	445, 445, 446, 446, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 452, 452, 453, 453, 455, 455, 456,
	456, 457, 458, 458, 458, 459, 460, 460, 454, 454,
	461, 461, 461, 461, 462, 462, 463, 463, 463, 463,
	463, 464, 464, 464, 464, 464, 352, 352, 353, 353,
	359, 359, 359, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 197,
	197, 197, 197, 197, 278, 278, 276, 276, 276, 279,
	279, 277, 277, 275, 275, 274, 274, 349, 349, 347,
	347, 351, 351, 301, 301, 399, 399, 399, 399, 399,
	399, 399, 399, 302, 302, 302, 310, 303, 303, 304,
	304, 304, 304, 304, 343, 344, 305, 305, 305, 345,
	345, 354, 358, 358, 357, 356, 356, 355, 355, 334,
	334, 335, 335, 285, 285, 503, 503, 281, 281, 376,
	376, 376, 376, 234, 234, 270, 270, 233, 233, 226,
	226, 227, 227, 227, 227, 263, 263, 360, 360, 401,
	401, 402, 402, 403, 403, 404, 404, 405, 406, 407,
	348, 348, 215, 214, 202, 203, 213, 212, 211, 201,
	204, 208, 209, 210, 206, 207, 221, 220, 219, 225,
	217, 218, 381, 200, 228, 228, 229, 229, 229, 230,
	230, 230, 230, 198, 198, 222, 222, 223, 224, 224,
	216, 216, 216, 189, 189, 189, 190, 190, 191, 191,
	414, 414, 412, 412, 412, 413, 413, 413, 413, 411,
	411, 411, 411, 411, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	420, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 423, 423,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 3, 1,
	1, 3, 4, 6, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 5, 5, 6, 6, 4, 4, 4, 4,
	3, 4, 4, 4, 7, 7, 9, 8, 9, 5,
	3, 5, 7, 4, 12, 4, 12, 1, 3, 5,
	5, 2, 5, 3, 6, 4, 6, 5, 6, 6,
	4, 8, 3, 4, 10, 3, 6, 4, 3, 1,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 0,
	1, 1, 0, 2, 0, 6, 7, 2, 5, 6,
	2, 1, 3, 1, 3, 1, 6, 4, 9, 7,
	12, 12, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 6, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 6, 6, 6, 6,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 3,
	3, 4, 3, 4, 7, 4, 4, 4, 3, 5,
	7, 4, 3, 3, 4, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 6, 4,
	7, 2, 6, 4, 7, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 2, 6,
	3, 3, 4, 4, 3, 1, 3, 2, 3, 3,
	1, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 2, 1, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 2, 2,
	5, 7, 3, 3, 3, 4, 5, 5, 5, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 4, 3, 5, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 3, 3, 4, 3, 3,
	3, 3, 4, 3, 1, 1, 1, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 3, 4, 10,
	10, 3, 5, 5, 5, 3, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 1, 2, 0,
	3, 3, 2, 3, 6, 3, 11, 14, 0, 2,
	4, 3, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 1, 3, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 9, 9, 3, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 1, 2, 8, 4, 2, 5,
	5, 5, 2, 9, 10, 6, 5, 3, 1, 5,
	8, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 11, 7, 5,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 6, 7, 6, 5, 3, 4,
	16, 19, 15, 18, 4, 0, 2, 2, 0, 1,
	0, 1, 0, 1, 3, 3, 2, 0, 1, 1,
	0, 6, 6, 8, 6, 8, 6, 8, 6, 8,
	1, 0, 2, 0, 2, 2, 3, 3, 2, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 2, 3, 2,
	2, 8, 11, 3, 3, 0, 3, 0, 3, 0,
	3, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 8,
	5, 3, 4, 3, 0, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 6, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 3, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	2, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 2, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 480, -79, -50, -48, -82, -83, -68,
	-84, -78, -96, -100, -88, -102, -141, -146, -147, -148,
	-3, -36, -38, -51, -67, -69, -77, -86, -85, -87,
	-89, -93, -92, -81, -42, -97, -101, -110, -142, -143,
	-144, 88, 73, 131, 111, 117, 164, 304, 336, 346,
	330, -105, -106, 365, -37, -49, -99, -98, 66, 112,
	325, -4, -12, 27, 41, -39, -40, -41, 57, -56,
	-53, -62, -485, 90, -449, -70, -73, -489, 122, 137,
	181, 296, -90, -91, 332, 334, 138, -44, -43, 132,
	-158, -160, -103, -104, -145, -111, -112, -113, -114, -115,
	-116, -117, -118, -119, -120, -121, -122, -123, -124, -125,
	-126, -131, -127, -128, -129, -130, -132, -133, -134, -135,
	-136, -137, -138, 369, 416, 42, 379, 74, 125, 340,
	21, -5, -6, -7, -8, -9, -10, -11, -52, -54,
	-55, -57, -58, -59, -66, -60, -61, -448, -71, -72,
	-74, -75, -76, 331, -161, -159, 477, 430, -14, -19,
	-20, -15, -16, -18, -21, -17, -25, -30, -31, -27,
	-28, -26, -29, -32, -33, -34, -35, -23, -24, -13,
	-22, 448, 456, -164, -162, -163, -171, 353, 438, 393,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	-217, -222, -223, -224, -216, -189, -420, -423, 4, -418,
	-421, 143, 189, 262, 21, 22, 23, 24, 25, 27,
	38, 40, 39, 41, 42, 45, 48, 49, 47, 52,
	53, 54, 55, 56, 57, 58, 61, 66, 67, 72,
	73, 74, 75, 76, 77, 83, 80, 81, 82, 85,
	87, 88, 89, 91, 93, 94, 102, 103, 104, 105,
	106, 107, 111, 112, 115, 114, 117, 120, 121, 122,
	124, 126, 127, 129, 131, 132, 135, 133, 399, 134,
	136, 137, 138, 139, 149, 150, 151, 153, 154, 156,
	158, 162, 163, 165, 169, 171, 172, 173, 174, 180,
	181, 183, 184, 185, 190, 186, 191, 195, 198, 197,
	199, 200, 201, 192, 206, 210, 211, 212, 214, 215,
	218, 219, 220, 221, 222, 225, 224, 227, 230, 231,
	234, 235, 238, 239, 240, 241, 243, 244, 247, 245,
	248, 246, 249, 252, 250, 251, 254, 255, 260, 258,
	256, 257, 264, 267, 178, 269, 270, 272, 273, 274,
	290, 277, 278, 279, 282, 283, 286, 289, 291, 292,
	293, 294, 295, 296, 297, 299, 300, 302, 304, 305,
	307, 309, 310, 311, 312, 313, 314, 315, 317, 318,
	320, 321, 322, 323, 324, 325, 330, 327, 328, 329,
	331, 332, 333, 334, 336, 338, 339, 340, 341, 343,
	345, 366, 367, 381, 346, 347, 348, 349, 350, 351,
	352, 356, 360, 357, 358, 359, 354, 355, 361, 362,
	363, 365, 368, 369, 371, 372, 374, 375, 377, 378,
	379, 380, 382, 385, 386, 387, 383, 384, 392, 390,
	391, 394, 395, 396, 397, 398, 400, 402, 410, 411,
	413, 416, 417, 418, 408, 420, 421, 424, 425, 426,
	429, 427, 428, 434, 430, 432, 435, 436, 437, 443,
	442, 449, 450, 452, 453, 454, 33, 43, 44, 46,
	50, 62, 63, 64, 68, 108, 109, 130, 140, 141,
	152, 166, 168, 175, 176, 177, 196, 202, 204, 208,
	228, 266, 268, 284, 288, 301, 303, 316, 342, 373,
	388, 403, 404, 405, 406, 412, 414, 438, 439, 440,
	444, 451, 275, -210, 2, -189, -189, 304, 26, 2,
	26, 300, 355, 395, 397, 2, -472, -264, 2, 26,
	-192, -189, 90, 164, 353, -210, 2, -472, -264, 24,
	2, -189, 2, -193, 2, 346, -189, 480, 85, 235,
	67, 342, 362, -108, 411, -107, 403, 348, -109, -410,
	2, 252, -189, 480, 480, 480, 26, -200, -189, 393,
	189, 104, 391, 480, 2, 393, 293, 442, 354, 104,
	313, 189, -481, 338, 167, 431, 407, -467, 2, 4,
	-421, -418, -227, -226, 393, 104, -224, -216, 470, -223,
	480, 480, 480, 2, 211, 212, 312, 311, 362, 363,
	480, 480, 2, 25, 60, 84, 87, 110, 139, 159,
	162, 280, -486, 244, 290, 310, 361, 392, 400, 413,
	-480, 380, 61, 348, -479, -481, 418, 120, -311, 104,
	235, 163, 425, 397, 395, 423, 115, 195, 428, 427,
	480, 25, 60, 70, 87, 120, 139, 159, 162, -488,
	290, 310, 345, 348, 361, 392, 400, 418, 413, 2,
	442, 354, 393, 189, 104, -481, 308, -79, 2, 477,
	29, 28, 365, -154, 393, 205, 2, -189, 211, 212,
	2, 480, 480, 160, -467, 2, 211, 212, 2, 205,
	2, 61, 350, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 2, -139, 362, 380, 173, 41, 67, 26, 309,
	72, 294, 105, 165, 189, 190, 219, 84, 85, -313,
	40, 212, 211, -364, 394, 349, 355, 390, 346, 411,
	90, 432, 339, 454, 313, 314, 133, 4, 104, 252,
	364, 403, 235, 76, -494, 2, 393, -497, 2, 411,
	411, 2, -497, 2, -497, 2, -497, 2, -498, 411,
	451, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, -159, -161, -160, 480, 480,
	480, 480, 480, -139, 362, 2, 67, 26, -258, -259,
	422, 203, 128, 281, -158, -160, 2, -448, -408, 2,
	-339, -424, -341, 468, 469, 461, 261, 455, -352, 110,
	423, 275, -423, -342, -354, 130, 342, -279, 8, 9,
	5, 6, 7, -198, -385, -348, 415, 142, 265, -230,
	481, 10, 477, -445, -160, -353, 34, 168, 59, -412,
	-229, -387, -395, -391, -392, -501, 48, 55, 54, 400,
	251, 356, 357, 374, 358, 359, 45, 434, 186, 272,
	274, 197, 4, 204, -228, -216, -442, -443, -418, -419,
	196, 202, 198, 373, 199, 200, 201, 44, 316, 153,
	154, 152, 121, 109, 108, 268, 50, 49, 46, 439,
	-396, 106, 403, 404, 405, 406, 214, 215, -189, -420,
	70, 96, 97, 95, 100, 99, 237, 236, 101, 98,
	364, 431, 60, 33, 175, 176, 208, 266, 177, 68,
	-444, 384, 92, 161, 194, 179, 207, 209, 213, 229,
	232, 253, 259, 263, 285, 287, 337, 370, -502, 440,
	140, 141, 288, 301, 388, 412, 414, 166, 228, 62,
	63, -450, 317, -451, -210, -450, 480, 480, 482, 480,
	-252, -253, -254, 2, 26, 118, 477, 2, -368, 2,
	-369, -373, -160, 223, -372, 477, -370, 475, -217, 276,
	-446, 343, -442, -443, -198, -216, -229, 4, -255, 477,
	479, 104, 393, 71, 189, -306, 477, -189, 26, 275,
	407, 482, -350, 477, 275, 160, 278, -189, 2, 2,
	366, 2, 477, -108, 64, 411, 39, 362, -326, 2,
	-327, -186, -187, -188, -378, 210, 307, 315, 457, 454,
	-408, -482, 160, 460, 407, -408, -280, 479, 2, 2,
	2, 2, 2, -373, 175, -217, 2, -214, -411, 4,
	-418, -421, -419, -422, 70, -420, 26, 28, 29, 30,
	32, 34, 35, 36, 37, 51, 59, 60, 65, 69,
	71, 79, 84, 90, 95, 96, 98, 97, 99, 100,
	101, 110, 113, 116, 118, 119, 123, 125, 128, 142,
	144, 157, 159, 160, 164, 167, 170, 182, 193, 203,
	205, 223, 226, 233, 236, 237, 261, 265, 271, 275,
	276, 280, 281, 298, 306, 319, 335, 353, 364, 376,
	389, 393, 401, 407, 409, 415, 422, 423, 431, 433,
	441, 445, 446, 447, 448, -423, 2, -373, 175, 2,
	-219, 175, -373, -222, 2, -201, -189, 2, -213, -411,
	2, -233, 175, -217, -218, -222, -416, 175, 2, -414,
	10, -413, 5, 4, -418, -421, -419, -94, -416, 477,
	407, 482, -270, -226, -227, -263, -189, 479, -339, 2,
	-97, 2, -339, 175, 2, -97, 175, 2, -339, 175,
	2, -97, 175, 2, 2, 2, 413, 2, 87, 175,
	-189, 393, 103, 2, 329, -487, 345, 417, 442, 2,
	2, 2, 2, 2, 2, 393, -206, 2, -189, 157,
	-225, 175, 2, -189, 354, -495, 317, -416, 175, 2,
	-220, -222, -220, 189, 206, -201, 175, 2, 397, 395,
	397, 395, 160, 2, 205, 2, 205, 2, -374, 2,
	-375, -369, -217, 475, 2, 2, 2, 2, 2, 175,
	-189, 393, 103, 2, 221, 2, 2, 2, 2, 2,
	2, 2, 2, 2, -272, 175, 2, -217, -272, 175,
	2, -272, 175, 2, -312, 2, 79, -201, 175, 2,
	-417, 175, 2, -416, -382, 2, -381, -413, 438, -79,
	477, -79, 477, 362, 477, -416, -217, -217, -339, -97,
	-95, -94, 160, -339, -97, -154, 157, 2, 104, 393,
	-139, 2, 157, 433, 2, 8, 2, -416, 349, 314,
	149, 2, 366, 2, 367, 67, -313, 454, 67, 160,
	2, 160, 2, -296, 2, 448, -470, 2, 275, 160,
	2, 160, 2, 160, 2, 160, 2, 160, 2, 311,
	363, 212, 2, -97, 445, -339, 445, 2, 410, 220,
	134, 160, -296, 2, 160, 2, 160, 2, 5, 2,
	381, 2, 210, 307, 381, 2, -217, -490, 2, 393,
	442, 354, 2, 2, 80, 81, 160, 2, 160, 2,
	160, 454, 2, -289, -373, -325, -326, -325, 407, -258,
	-259, -139, 366, 2, -165, -287, -167, 157, -315, -316,
	-168, 233, 144, 271, -169, -295, 26, 118, -295, -295,
	53, 478, 478, 11, 12, 69, 38, 468, 469, 470,
	471, 155, 472, 473, 466, 467, 465, 458, 459, 463,
	216, 217, 86, 462, 460, 78, 242, 344, 145, 146,
	147, 148, 326, 187, 31, 188, 14, 15, 16, 30,
	280, 232, 455, 179, 370, 461, 17, 18, 19, 207,
	209, 263, 43, 182, -197, -235, -339, -339, -339, -339,
	-339, 287, 477, -285, -334, 475, -160, 477, 477, 477,
	5, -407, 8, -160, -339, -352, 478, -277, 477, -160,
	-352, -347, 477, 342, 475, 477, -355, -339, 5, 477,
	479, -452, 449, -389, 477, 303, -388, 477, -388, -388,
	443, -386, 477, 456, 450, 477, -386, 477, 477, 157,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 443, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 482, -450, -255, 477, -281,
	-376, -339, 470, -281, -281, 275, -274, -339, 92, -299,
	213, 253, 161, 229, 337, 194, -336, 481, -336, -363,
	456, -160, -370, -216, -160, -372, 477, -368, -363, -80,
	-407, -67, -77, -85, -97, -110, -143, -144, 470, -217,
	477, 160, 477, 479, 160, -263, -411, -201, -217, -228,
	-229, -233, 117, -274, -467, -263, -192, 35, -349, -383,
	-384, -385, -394, -390, -393, -397, 48, 55, 54, 400,
	251, 356, 357, 374, 358, 359, 45, 434, 186, 272,
	274, 197, 4, 46, 439, -396, 204, 321, 322, 320,
	324, 323, 196, 202, 198, 373, 199, 200, 201, 44,
	316, 153, 154, 152, 121, 109, 108, 268, 50, 49,
	106, 403, 404, 405, 406, 214, 215, 440, 384, 62,
	63, -467, -263, 157, -410, -274, 35, -326, 2, 110,
	-414, 39, -499, 482, 231, -237, 241, 260, 172, 276,
	452, 269, -415, 5, 4, -348, -360, 110, 235, 204,
	-401, -403, 8, -402, 9, -404, 468, 469, -409, -408,
	94, 479, -411, -176, 327, -175, 23, 27, 122, 436,
	135, -245, 191, 293, 130, 377, 426, -476, -477, 347,
	398, 399, 82, 269, 327, 130, -292, -294, 35, 102,
	255, 289, 56, 184, 246, 247, 379, 444, 130, 327,
	-477, 327, -477, -178, 377, 426, -476, -477, 347, 327,
	-177, -245, 130, 481, -473, -447, 448, 130, -379, -378,
	-417, -94, -270, 482, 482, -411, 470, 130, 130, 130,
	130, 2, 2, 261, 2, 2, 2, 162, -479, -488,
	2, 2, 2, -217, 175, -257, 275, -469, -271, 393,
	-217, 261, -219, 175, 2, -222, 442, -473, 261, 35,
	477, 2, -312, 2, 189, -447, 261, -374, -231, -217,
	-369, -231, 365, -210, 35, -336, -336, 130, 2, 2,
	2, -189, -179, 482, 58, 333, 130, -179, 130, -179,
	130, -234, 175, -233, -179, 130, 482, 130, 478, 482,
	-382, -382, -416, -152, 448, 160, 90, 477, 477, -154,
	-379, 482, -95, -416, -469, -201, 2, -217, 2, 393,
	214, -152, -416, -416, -416, -410, 26, 367, 2, 311,
	363, 81, 367, 2, -217, 393, 104, 189, 73, -471,
	157, -468, 338, -467, -217, 104, -217, 104, -217, 104,
	-217, -217, 2, 2, 2, 2, 77, 77, 157, 2,
	410, 2, 410, 2, -189, -189, -189, 231, -217, 157,
	393, 189, 393, 189, 104, 393, -179, 482, -193, -165,
	-287, -410, -288, -287, -166, -165, -168, 157, 315, 427,
	255, 368, 218, -316, -315, 26, -339, -320, 151, 254,
	-339, -318, -341, 468, 469, -402, -404, -273, 269, -159,
	-159, -159, -260, -365, -339, 306, 189, -398, -383, -383,
	-215, -411, 403, -339, -339, -339, -339, -339, -339, -339,
	-339, -339, -339, -339, -339, -339, -339, -339, -339, -339,
	-339, -339, -339, -339, -339, -339, -339, -339, -339, -339,
	-339, -339, -339, -339, -339, -339, -339, -339, 232, 179,
	370, 43, 182, -339, 407, -339, -339, -339, -339, 250,
	261, 265, 415, 142, 424, 118, 269, -503, 389, 37,
	-345, -160, -278, 477, -359, 32, 376, 26, -352, 477,
	2, -334, -339, -335, -275, -274, -274, 478, 441, 26,
	118, 470, 2, 478, 482, 35, 478, -339, -275, -351,
	-347, -274, -358, -357, 445, -307, -308, 453, 249, 107,
	174, 248, -309, 352, -405, 8, -411, 470, -453, 150,
	167, 8, -405, -405, 403, 403, -405, -405, -405, 477,
	478, 2, 478, 2, 478, -339, 2, 478, -339, 2,
	478, -339, 2, 478, -339, 2, 478, 2, -339, -339,
	-339, -339, -339, -339, -339, -274, -301, 2, -399, -274,
	4, 453, 249, 107, 174, 248, 352, 5, -301, 2,
	-302, 2, -339, -274, -303, -340, -341, 468, 469, 461,
	-352, -304, 2, -339, -275, -339, 51, 226, 409, -305,
	-339, 160, -274, -274, 2, -274, 2, -451, 35, -274,
	-266, 482, 160, 35, 4, -266, -266, 477, 478, 482,
	-300, 171, 245, 240, -300, -368, -299, 213, -297, 285,
	-297, -297, -363, -202, 475, 483, -411, -363, -362, -361,
	35, -210, 282, -363, -363, 479, 478, -362, 476, -465,
	477, 480, 480, 480, 480, 480, -217, 477, -274, -411,
	382, 478, 479, 207, 207, 207, 207, 343, 478, 407,
	448, -79, 277, 478, 482, -265, 34, 475, -400, 443,
	477, 477, -308, 477, 160, -264, -482, 478, 411, -327,
	-236, 315, 375, 328, 360, 391, 8, 9, 8, 9,
	482, -411, 482, -483, 84, 407, 71, -330, 175, 71,
	-425, -204, 84, -426, -189, 65, 423, 306, 159, 129,
	-483, 84, 306, -483, 84, 84, 365, 380, 53, -373,
	38, 38, 26, -97, 227, 160, 454, 393, 189, 407,
	-373, -294, -383, 102, 246, 247, 53, -406, -401, 468,
	469, -406, 53, -406, -406, -406, 448, -219, -373, 407,
	407, 482, 38, 38, 26, -97, 227, 160, 407, -233,
	-202, -474, -194, 91, 256, 239, 257, -195, -196, 295,
	435, -416, -149, 185, 478, -379, -226, -189, 479, -339,
	-97, -339, -97, 130, 2, -495, 221, 477, -240, 261,
	160, -263, -380, 205, 482, -271, 130, -293, -292, 261,
	-221, 175, 2, -217, 130, 477, 126, 313, 2, -203,
	175, -190, -189, -312, -182, 396, 130, -291, 433, -321,
	-97, 477, 110, 35, -321, -282, -283, -377, -284, -204,
	477, -210, -189, 2, -217, -272, -272, -272, -179, 482,
	130, -201, -416, -417, -79, -381, 478, 478, 478, -151,
	279, -150, -189, 5, -154, 433, -239, -331, -330, -429,
	-430, -425, 232, 189, 423, 206, 143, -256, -205, -204,
	103, -152, -94, -379, -152, -152, -379, -379, -217, 157,
	-152, -152, -152, 2, 2, -296, -217, -201, -233, -217,
	-263, -263, -296, -201, -296, -201, -296, -201, -97, -339,
	362, 157, 157, 479, -296, 313, 104, 393, 293, 189,
	-217, -233, -217, -233, -201, -217, -373, -288, -166, 276,
	218, 368, -318, -319, -341, 342, 343, -319, 342, 343,
	8, 9, 8, 9, -170, 372, 264, -272, 482, -173,
	36, 116, 218, -217, 454, 127, -339, -339, 407, -503,
	389, -345, 127, -339, 250, 265, 415, 142, 424, 118,
	269, 160, 477, -340, -340, 478, -276, -339, -339, 476,
	485, 478, -259, 482, -258, -339, -274, -274, 478, 479,
	-274, -263, 476, 476, 482, 478, -356, -357, 123, -339,
	407, 407, 407, 407, 477, 478, 479, -458, 286, 477,
	477, 478, 478, 482, 478, 454, 454, 478, 478, 478,
	-339, 478, 478, 478, 478, 35, 482, 482, 482, 478,
	482, 482, 482, 478, 478, 160, 478, 478, -310, 298,
	478, 11, 12, 468, 469, 470, 471, 155, 472, 473,
	466, 467, 465, 458, 459, 460, 78, 242, 344, 14,
	15, 16, 207, 182, -340, -340, -340, 478, -343, -344,
	160, 157, 35, -305, -305, -305, 478, 160, -274, 478,
	478, 477, 478, -333, -332, 446, -376, -267, 2, -368,
	-212, -411, -333, -333, -274, -339, 213, 213, -298, 433,
	275, -300, -368, -362, -407, -338, -337, 158, 36, 116,
	258, 178, -362, -210, -255, -362, -362, -411, -363, -363,
	-361, 478, -466, -407, 478, -268, -371, -446, -259, 479,
	-152, -411, -140, 5, 265, -140, -140, -140, -263, 24,
	299, -383, 475, 476, 8, 477, -405, -405, -405, -263,
	160, -408, -326, 421, 75, 315, 403, -408, -175, 327,
	-204, -204, -217, 261, -330, 175, -181, 261, -383, -211,
	-189, 477, 477, 218, 218, 433, -204, -211, 218, 175,
	-204, 175, -211, -211, -475, 315, 270, -339, 234, 313,
	262, -176, 327, -97, -97, -97, 477, -482, 433, 117,
	-217, -233, -217, -221, 327, 259, -228, -406, -406, -292,
	327, -219, -201, -177, -97, -97, -97, 477, -202, -178,
	327, -194, -416, 265, 429, -473, -152, 160, -149, 470,
	-189, 442, -189, -238, -241, -239, -204, -157, 450, 448,
	130, -232, -217, 475, -152, -416, -217, -225, 130, -255,
	261, -416, 2, 477, 2, 275, 261, -203, 175, -183,
	124, -500, 460, -201, -333, -267, -290, -324, 335, 275,
	-256, 438, -210, -290, -269, 482, 160, 460, 479, -256,
	2, -179, -179, -179, -233, -234, -179, -79, -79, -152,
	482, 477, 460, 460, 477, -416, -416, 478, 482, -217,
	-203, 189, 189, -209, -190, 478, 482, 479, 477, -152,
	160, -45, 448, 393, 481, -296, -296, -296, 362, 362,
	-189, -213, -201, -217, -214, -233, 157, 157, 427, -319,
	276, 238, -365, -174, 267, -217, 481, -339, -339, 127,
	127, -339, -340, -340, -339, 127, 160, 477, -339, -349,
	30, 30, 478, 482, -335, -339, 478, 441, -259, -259,
	478, 470, -411, 481, 478, -347, 125, -339, 401, 249,
	174, 248, -309, 248, -309, -309, -405, 5, -411, 470,
	-459, -207, 477, -189, 446, -258, -405, -386, -386, 478,
	-398, -383, -339, -339, -339, -339, -339, -339, -343, -339,
	-398, -383, -340, -340, -340, -340, -340, -340, -340, -340,
	-340, -340, -340, -340, -340, -340, -340, -340, -340, -340,
	-340, 118, 261, 269, -340, -344, -343, -339, -339, -383,
	478, 478, 478, -274, -79, -286, 167, -339, -379, 482,
	-286, -286, 478, -368, -368, 477, -339, 213, 476, 482,
	484, 460, -255, 479, -361, -362, 476, 478, 482, 478,
	482, -323, 35, 478, -411, 278, 5, 8, 475, 476,
	-405, 478, 478, 478, -263, -339, 407, 407, 130, 261,
	435, -431, -426, 129, -339, -261, -366, -339, 477, 477,
	2, -172, 122, 365, -484, 2, 433, 130, -179, 130,
	-179, 452, 477, 477, 407, 448, -274, -339, -153, 110,
	-410, -477, 481, -477, 481, 407, 407, 448, -274, 407,
	-416, 265, -417, -152, 2, 2, 2, 478, 478, 482,
	-432, 35, 273, 477, 273, -217, -63, 448, -378, -407,
	-219, 35, 130, -473, 2, -217, 130, 275, 261, -184,
	225, -500, -414, -447, -259, -290, -281, 262, 83, 478,
	-333, -283, -267, -339, 2, 478, -179, -150, -151, -416,
	-416, -416, -152, -154, -154, -331, 2, 477, -203, -190,
	477, -154, -205, 2, -417, -97, 279, -217, 470, -296,
	-247, -246, 293, 269, -247, 342, 342, 276, 151, 222,
	-173, -202, -339, -339, 127, 30, 30, -339, -339, -349,
	478, -339, -339, -274, 476, 5, -339, 478, 478, 8,
	-339, 478, 479, -460, -189, -339, 478, 478, 478, 478,
	482, 482, 478, 478, 478, 478, -344, 160, 118, 269,
	477, 478, 478, -346, 170, 53, -368, -346, -346, -298,
	-263, -368, -337, -202, 475, -411, -407, -371, 477, 479,
	476, 2, 475, 478, -204, -204, -330, 130, -433, 84,
	-435, 69, 143, 90, 261, 265, 423, 306, 65, 110,
	319, 35, 478, 478, 482, -173, -261, -263, 261, 386,
	110, 261, 110, 103, 418, 72, -204, -211, -263, -263,
	-217, 136, 478, 482, 460, 2, 470, 470, -221, -219,
	136, 478, -202, -243, 192, -204, -430, -427, -428, 306,
	-434, -436, 143, 306, -97, -156, -155, -189, 5, 2,
	477, -240, 279, 476, -293, -97, -221, -314, 433, -202,
	-217, 130, -185, 224, -500, -414, -182, -317, -315, -322,
	477, 275, -97, -259, 460, 478, 478, 103, 103, -261,
	477, 477, -263, 103, 478, -46, -47, 189, 84, 297,
	-214, 393, 189, 477, 477, -173, -339, -339, -339, 478,
	-259, -411, 470, -454, 293, 478, -339, -339, -340, 160,
	477, -349, -455, 447, -339, -274, -455, -455, 478, -407,
	2, 475, 2, -330, -211, -215, -208, -189, 143, 175,
	265, 218, 477, -340, -217, 477, 2, -492, 113, 193,
	-329, -493, 89, 387, 183, -366, -174, 478, 478, 265,
	265, -339, -383, 477, -179, -179, 478, 478, -339, 407,
	-410, 88, -408, 2, -477, -339, 407, -244, -245, 182,
	-432, 218, -208, 218, -491, 448, 478, 482, 460, 460,
	-238, -157, -64, -65, 408, -378, -255, 477, -189, 275,
	477, -202, -500, -414, -183, -290, 119, -263, 84, -317,
	-345, -152, 477, 477, 478, -261, -261, 478, 477, -152,
	482, 26, 477, 26, 477, -217, -233, -274, -274, 478,
	-259, 53, 478, 478, -340, -349, 478, -456, -457, -207,
	476, 2, -435, -208, 261, 433, -339, -191, 477, -339,
	193, 114, 180, -243, 477, -328, 433, 319, -199, 69,
	-261, 477, 477, 477, 460, 160, 477, -157, 291, 477,
	-242, 275, 103, 255, -155, -342, -342, 478, 35, -65,
	9, 35, -261, -217, -261, 275, -414, -184, 427, 262,
	478, -211, -290, -417, -417, -328, 478, 478, -417, -47,
	-263, -263, 478, 478, -461, 313, 343, 169, -274, 478,
	482, 35, 130, 171, 478, -437, 243, -189, 478, 114,
	180, -244, -263, -243, 171, -217, -478, 433, -215, 478,
	-249, -248, -246, -251, -250, -246, -274, -408, 88, 291,
	-274, -242, -217, -262, -367, -204, 74, 103, -243, -97,
	-97, 478, -314, 478, -217, -185, 365, -332, 478, 478,
	-329, -328, 478, 478, 478, 478, -462, -463, 43, 420,
	94, -339, -462, -462, -457, -459, 143, 448, -438, -441,
	-440, 275, 371, 161, 292, 478, 386, 444, -492, 478,
	448, -255, -339, -328, 478, 482, 438, 478, 482, 438,
	478, 160, 478, 477, 478, 482, 305, 115, 122, -244,
	-491, -328, 477, -329, 477, -282, -152, -152, -243, -329,
	-152, -464, 129, -463, 302, 156, 342, 302, 156, -464,
	-464, -208, 47, -440, 275, -441, 275, 427, 115, 47,
	-437, -243, -248, 182, -250, 160, 291, -263, -367, 343,
	343, 2, -157, -242, -329, -261, -243, -261, -333, -244,
	-243, 94, 167, 402, 255, 30, 460, -439, 255, 333,
	58, 365, -439, 460, -438, 477, 477, 478, 2, -242,
	-243, 478, -244, 478, -244, 342, 283, -463, -339, 22,
	265, 110, -339, -492, -274, -274, -180, 58, 333, -244,
	-328, -496, 446, -329, 478, 478, -496, -329, 2, -243,
	-244, 407, -243, -244, 477, -244, -496, -274, -496, 478,
	-244,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 24, 25, 26,
	366, 367, 369, 370, 371, 373, 374, 376, 378, 380,
	382, 383, 385, 387, 389, 390, 391, 392, 393, 395,
	397, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 457, 0, 971, 973, 975, 977, 0, 585,
	0, 28, 29, 0, 0, 193, 195, 197, 0, 222,
	224, 225, 227, -2, 0, 323, 324, 326, -2, -2,
	0, 0, 444, 446, 0, 0, 0, 466, 467, 0,
	1059, -2, 460, 462, 464, 529, 531, 533, 535, 537,
	539, 541, 542, 544, 546, 548, 550, 552, 554, 556,
	557, 559, 561, 563, 565, 567, 569, 571, 573, 575,
	577, 579, 581, -2, -2, -2, 0, -2, -2, -2,
	989, 32, 34, 36, 38, 40, 42, 44, 275, 276,
	278, 280, 282, 284, 287, 288, 290, 1114, 328, 330,
	332, 334, 336, 0, -2, 1126, 0, 0, 46, 47,
	48, 49, 50, 51, 52, 53, 69, 70, 71, 72,
	73, 74, 75, 76, 57, 59, 60, 64, 65, 67,
	55, 0, 0, 1090, 1092, 1094, 1096, -2, 0, 0,
	7, 9, 11, 13, 15, 17, 19, 21, 368, 372,
	375, 377, 379, 381, 384, 386, 388, 394, 396, 398,
	854, 1750, 1765, 1766, 1767, 1770, 1771, 1772, 1773, 1774,
	1775, 2130, 2211, 2212, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 0, 422, 420, 1743, 423, 1958, 425, 427,
	317, 318, 319, 320, 321, 322, 0, 437, 431, 436,
	438, 440, 441, 442, 443, 417, 415, 0, 437, 1797,
	435, 969, 970, 964, 965, 1994, 996, 456, -2, -2,
	-2, 2098, -2, 488, -2, 495, 2101, 1996, 500, 0,
	502, -2, 505, 972, 974, 976, 583, 584, 1753, 0,
	0, 0, 0, 30, 31, 0, 0, 0, 0, 0,
	0, 0, 0, 903, 904, 905, 0, 0, 157, -2,
	-2, -2, -2, 0, 0, 1838, 1711, 1767, 1714, 1709,
	194, 196, 198, 199, 0, 0, 0, 0, 0, 0,
	223, 226, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 763, 755, 756, 941, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, -2, 0, 0, 253, 358, 359, 0,
	1115, 1115, 0, 0, 0, 0, 174, 165, 0, 0,
	732, 445, 447, 0, 0, 160, 0, 0, 968, 0,
	176, 0, 0, 461, 463, 465, 530, 532, 534, 536,
	538, 540, 543, 545, 547, 549, 551, 553, 555, 558,
	560, 562, 564, 566, 568, 570, 572, 574, 576, 578,
	580, 582, 590, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, -2, -2, -2, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 593, 595, 596,
	597, 0, 648, 665, 0, 894, 1116, 998, 979, 993,
	998, 981, 982, 983, 984, 985, 990, 992, 986, 987,
	988, 33, 35, 37, 39, 41, 43, 45, 277, 279,
	281, 283, 285, 289, 291, -2, 1088, 1089, 329, 331,
	333, 335, 337, 448, 0, 450, 0, 594, -2, 0,
	1120, 1120, 1120, 0, 0, 1089, 1087, 0, 453, 454,
	509, 510, 1358, 0, 0, 0, 0, 0, 1608, 1442,
	0, 511, -2, 1473, 1475, 2077, 2098, 1607, 1477, 1478,
	1479, 1480, 1481, 0, 0, 1484, 1485, 1486, 1487, 1488,
	0, 1490, 0, 1495, 1496, 1497, 0, 2082, 1688, 1763,
	-2, 1261, 1262, 1263, 1264, 1265, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 2088, 1759, 0, 1574, 1511, -2, 1784,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1848, -2, -2, -2, -2, -2, -2, -2,
	1317, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	2112, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 0, 2066, 2083, 2084, 2089, 2091, 2085, 2074,
	1536, -2, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 1318, -2,
	2078, 2079, 2094, 2095, 2100, 2105, 2106, 2081, 2090, -2,
	-2, 1106, 1968, 1109, 854, 1107, 1091, 1093, 0, 1095,
	0, 0, 0, 1100, 1123, 1121, 0, 1162, 1104, 1105,
	1180, 1180, 1204, 0, 1185, 0, 1204, 1115, 1230, 0,
	1191, 1989, 1512, 1513, 0, 1767, 1764, -2, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 424, 426, 0,
	0, 0, 0, 0, 0, 0, 0, 995, 458, 459,
	0, 483, 0, 487, 2073, -2, 1802, 2009, -2, 491,
	999, 1003, 1004, 1005, 1006, 0, 0, 0, 0, 0,
	497, 0, 0, 484, 485, 503, 506, 0, 586, 587,
	588, 589, 54, 0, 2083, 1230, 56, 0, 1733, 1789,
	1790, 1791, 1792, 1793, 2112, 2129, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 58, 0, 2083, 61,
	0, 2083, 0, -2, 66, 0, 1739, 68, 0, 1736,
	77, 0, 2083, 0, 1708, -2, -2, 2083, 902, 177,
	178, 1780, 1781, 1785, 1786, 1787, 1788, 1217, 161, 0,
	0, 0, 724, 1705, 1710, 725, 1715, 0, 200, 201,
	202, 203, 204, 2083, 206, 207, 0, 209, 210, 2083,
	212, 213, 0, 215, 229, 230, 0, 232, 0, 2083,
	0, 0, 0, 238, -2, 254, 0, 251, 0, 242,
	243, 245, 246, 247, 248, 0, 295, 293, 1744, 0,
	733, 2083, 735, 1749, 0, 0, 923, -2, 2083, 899,
	928, 1747, 0, -2, 0, 1113, 2083, 1013, 759, 760,
	761, 762, 0, 314, 0, 1026, 0, 1028, 0, 1049,
	1236, 1180, 1180, 0, 255, 256, 257, 258, 259, 2083,
	0, 0, 0, 264, 0, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 152, 2083, 340, 356, 152, 2083,
	343, 152, 2083, 346, 0, 349, 939, 152, 2083, 352,
	353, 2083, 355, 179, 0, -2, 411, 1752, -2, 361,
	0, 362, 0, -2, 0, 191, 0, 0, 730, 731,
	1217, 163, 0, 966, 967, 0, 0, 468, 0, 0,
	591, 592, 0, 0, 602, 603, 604, 191, 1997, 1966,
	1864, 609, 0, 612, 615, -2, 0, 0, 0, 0,
	619, 0, 624, 625, 626, 0, 729, 628, 0, 0,
	630, 0, 634, 0, 637, 0, 639, 0, 641, -2,
	-2, -2, 652, -2, 0, 656, 0, 658, 0, 0,
	0, 0, 673, 674, 0, 679, 0, 682, 683, 684,
	685, 686, 0, 688, 689, 690, 691, 0, 693, 694,
	-2, -2, 698, 700, 0, 707, 0, 711, 0, 715,
	0, 598, 599, 152, 1234, 978, -2, 980, 0, -2,
	0, 449, 0, 452, 1141, 1074, 1071, 0, 1138, 1139,
	1075, 0, 0, 0, 1082, 0, 1118, 1119, 0, 0,
	0, 1061, 1062, 0, 0, 0, 0, 1613, 1614, 1615,
	1616, 1617, 1618, 1621, 1622, 1619, 1620, 1623, 1624, 0,
	0, 0, 0, 0, 1625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 1627, 1628, 0,
	0, 1630, 0, 1632, 0, 0, 0, 0, 0, 0,
	1421, 1423, 1696, 0, 0, 1629, 1363, 1364, 1365, 1400,
	1401, 0, 0, 1474, 1693, 1692, 1476, 0, 1644, 0,
	1483, 1489, 1729, -2, 0, 1608, 1639, 0, 0, 1498,
	1499, 1500, 0, 0, 1644, 0, 0, 1687, 1355, 0,
	0, 1576, 0, 1297, 0, 1298, 1299, 0, 1300, 1301,
	1314, 1327, 0, 0, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1319, 0, 0, 0, 1668,
	-2, 0, 0, 0, 0, 0, 1108, 0, 0, 1166,
	1697, 1701, 1702, 1166, 1166, 0, 0, 1645, 1227, 1227,
	0, 0, 1223, 1223, 1223, 1221, 1204, 0, 1204, 1214,
	0, 1204, 1204, 0, -2, 1185, 0, 0, 1214, 0,
	1198, 399, 401, 403, 405, 406, 407, 409, 1231, 1232,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	1755, 0, 0, 0, 0, 429, 439, 1115, 0, 1647,
	1253, 1256, 1257, 1258, 1259, 1260, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, -2, 1315, 1317, 1338, 1304, 1305, 1306,
	1307, 1308, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1310, 0, 1285, 1285, 1285, 1302, 1303,
	1326, 1337, 1329, 1337, 1333, 1254, 1255, 1320, 1321, 1322,
	1323, 0, 433, 0, 0, 0, 0, -2, 493, 498,
	499, 0, 0, 1001, 0, 1007, 520, 521, 522, 1009,
	1010, 0, 496, 523, 524, 525, 526, 527, 528, 0,
	1717, 1718, 1719, 1720, 1723, 1724, 0, 0, 494, 513,
	501, 0, 507, 78, 961, 117, 0, 961, 961, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 102, 113,
	90, 91, 0, 0, 0, 0, 62, 876, 0, 879,
	0, 0, 0, 0, 0, 0, 0, 892, 0, 0,
	101, 0, 96, 80, 0, 0, 0, 103, 115, 0,
	143, 145, 0, 0, 900, 0, 1112, 0, 182, 1216,
	0, 1217, 723, 0, 0, 1768, 1713, 0, 0, 0,
	0, 231, 233, 0, 235, 236, 237, 0, 922, 0,
	244, 241, 286, 825, 2083, 0, 0, 312, 307, 0,
	309, 0, 875, 2083, 873, 1748, 0, 897, 0, 0,
	0, 929, 1777, 934, 940, 1015, 0, 316, 0, 1029,
	1031, 0, 0, 1237, 0, 1239, 1240, 0, 261, 262,
	263, 0, 338, 0, 150, 151, 0, 341, 0, 344,
	0, 152, 2083, 1703, 350, 0, 0, 0, 1115, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	191, 0, 1217, 191, 191, 1217, 470, 1217, 472, 0,
	0, 605, 191, 191, 191, 610, 611, 613, 614, -2,
	-2, 708, 616, 617, 676, 0, 0, 0, 675, 627,
	0, 717, 1985, 727, 676, 1838, 676, 1838, 676, 1838,
	638, 640, 643, 668, 651, 655, 0, 0, 0, 660,
	0, 662, 0, 664, 676, 677, 680, 687, 692, 0,
	0, 0, 0, 0, 0, 0, 893, 0, 991, 1141,
	1074, 451, 1065, 1140, 1066, 1073, 1076, 0, 0, 1078,
	0, 1080, 0, 1136, 1137, 1144, 1145, 0, 1155, 1156,
	1148, 0, -2, 0, 0, 1151, 1152, 1084, 0, 1101,
	1102, 1103, 1127, 1128, 950, 0, 2211, 1359, 1248, 1360,
	1361, 1732, 0, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, -2, -2, -2, -2, -2, -2, -2,
	-2, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, -2, -2, -2, 1398, 1399, -2, 1631, 1633,
	0, 1696, 0, -2, 0, -2, -2, -2, -2, 1418,
	0, 1420, 1425, 1427, 1429, 0, 0, 0, 0, 1695,
	1439, 1679, 1680, 0, 0, 1610, 1611, 1612, 1424, 0,
	1443, 1694, 1691, 0, 0, 1643, 1126, 1502, 0, 0,
	0, 0, 1509, 1494, 1641, 0, 1640, 0, 0, 0,
	1651, 0, 1686, 1682, 0, 1730, 1354, 1341, 1342, 1343,
	1344, 1345, 1346, 1356, 0, 1727, 1756, 1762, 1584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1537, 1538, 1539, 1540, 1541, 0, 1543, 1544, 0, 1546,
	1547, 0, 1549, 1550, 0, 1552, 1553, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1556, 0, 1654,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 1558,
	0, 1560, 1645, 1665, 0, 0, 1444, 0, 0, 0,
	1608, 0, 1563, 1645, 1673, 0, 0, 0, 0, 0,
	1645, 0, 1678, 0, 1570, 0, 1572, 1110, 0, 0,
	1243, 0, 0, 0, 1700, 1243, 1243, 0, 1161, 0,
	0, 1224, 1225, 1226, 0, 0, 1227, 0, 1218, 1222,
	1219, 1220, 1214, 1177, 0, 0, 1734, 1214, 1183, 1213,
	0, 854, 1203, 1214, 1214, 0, -2, 1187, 1204, 0,
	0, 400, 402, 404, 408, 410, 0, 0, 1126, -2,
	191, 853, 0, 0, 0, 0, 0, 419, 421, 0,
	0, 413, 0, 416, 0, 1244, 1247, 0, 0, -2,
	0, 0, 1339, 0, 0, 0, 0, 486, 0, 1000,
	1008, 0, 517, 0, 519, 0, 1721, 1725, 1722, 1726,
	0, 508, 0, 0, 0, 0, 960, 121, 2083, 0,
	154, 0, 0, 818, 1740, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 92, 0, 0, 0, 0, 0, 0,
	0, 877, 878, 880, 887, 889, 0, 883, 1728, 0,
	0, 884, 0, 886, 888, 890, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 93, 0, 0, 0, 0,
	1707, 918, 916, 910, 911, 912, 913, 914, 915, 0,
	0, -2, 191, 0, 162, 182, 1706, 1716, 0, 205,
	208, 211, 214, 0, 239, 0, 0, 765, 738, 0,
	0, 294, 191, 0, 0, 308, 0, 871, 874, 0,
	854, 2083, 909, 1746, 0, 0, 0, 0, 927, 0,
	2083, 1735, 1776, 1777, 1017, 1023, 0, 1243, 0, 1047,
	1032, 0, 0, 0, 1047, 1051, 1052, 1054, 1055, 0,
	0, 1238, 0, 265, 357, 152, 152, 152, 347, 0,
	0, 152, 180, 354, 360, 412, 1115, 1115, 191, 189,
	1943, 187, 184, 186, 0, 0, 0, 766, 768, 769,
	770, 771, 0, 1777, 0, 1894, 1777, 0, 1035, 1037,
	0, 158, 164, 191, 0, 306, 469, 474, 600, 0,
	606, 607, 608, 645, 670, 618, 620, 621, 622, 0,
	728, 726, 629, 676, 632, 676, 635, 676, 654, 657,
	659, 0, 0, 0, 672, 0, 0, 0, 0, 0,
	0, 0, 712, 713, 714, 716, 1235, 1069, 1070, 1072,
	0, 1081, 0, 0, 1150, -2, -2, 1149, 1153, 1154,
	-2, -2, -2, -2, 1077, 0, 1086, 1083, 0, 1135,
	948, 949, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 1440, 0, -2, 1419, 1422, 1426, 1428, 1430, 0,
	0, 0, 0, 0, 0, 1634, 0, 1636, 1441, 1689,
	1692, 1606, 0, 0, 1125, 1126, 1126, 0, 1508, 0,
	1642, 0, 1649, 1650, 0, 1501, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 1309, 1283, 0, 1337, 1335, 1336, 1330, 1337, 1334,
	0, 1542, 1545, 1548, 1551, 0, 0, 0, 0, 1531,
	0, 0, 0, 1535, 1555, 0, 1557, 1559, 0, 0,
	1561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1447, 1448, 1449, 1562, 1671, 1672,
	0, 0, 0, 0, 0, 0, 1568, 0, 1677, 1569,
	1571, 1115, 1163, 1158, 1242, 0, 1698, 1217, 1165, 1167,
	1699, 1737, 1158, 1158, 0, 1646, 0, 0, 1208, 0,
	0, 0, 1210, 1181, 0, 0, 1175, 0, 1171, 1172,
	1173, 1174, 1182, 854, 1212, 1184, 1188, 1756, 0, 1214,
	0, 1199, 0, 1201, 1233, 0, 1193, 1196, 0, 0,
	192, 1769, 216, 220, 221, 217, 218, 219, 428, 0,
	0, 1648, 0, 1249, 0, 0, 0, 0, 0, 432,
	0, 482, -2, 515, 516, 518, 0, 514, 118, 961,
	0, 0, 952, 0, 123, 2083, 132, 0, 794, 0,
	1738, 0, 0, 0, 0, 0, 963, 0, 0, 2083,
	152, 2083, 152, 135, 138, 0, 142, 140, 0, 0,
	785, 79, 961, 82, 86, 94, 0, 0, 0, 100,
	0, 0, 0, 954, 0, 881, 882, 885, 891, 63,
	0, 956, 951, 144, 84, 88, 95, 0, 958, 81,
	0, 917, 895, 896, 0, 901, 155, 0, 191, 1712,
	0, 0, 0, 0, 0, 764, 836, 0, 0, 0,
	0, 300, 296, 0, 305, 311, 310, 734, 0, 0,
	0, -2, 924, 0, 926, 0, 0, 0, 2083, 1019,
	1023, 0, 1022, 1113, 1126, 315, 1024, 1047, 0, 0,
	0, 1034, 1030, 1027, 1243, 0, 0, 0, 0, 0,
	260, 339, 342, 345, 1704, 152, 351, 363, 364, 166,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 1777, 1777, 0, 1742, 0, 0, 0, 0, 159,
	0, 471, 0, 0, 0, 631, 633, 636, 661, 663,
	676, 701, 702, 780, 0, 780, 0, 0, 1079, 0,
	1147, 1085, 1129, 1130, 0, 950, 0, 1362, 1403, 0,
	0, -2, 0, 0, 1407, 0, 0, 0, -2, 0,
	0, 0, 1635, 1637, 0, 1691, 1503, 0, 0, 0,
	1507, 1491, 1492, 0, 1609, 1652, 1681, 1685, 0, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 0, 1731, 1757, 1761,
	1582, 1583, 1587, 1745, 0, 0, 0, 1328, 1332, 1514,
	0, 0, 0, 0, 0, 0, 0, 1653, 1664, 1666,
	1445, 1446, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, -2, -2, -2, 1463, 1464, 1465, -2, -2,
	-2, 0, 0, 0, 1667, 1669, 1670, 1674, 1675, 0,
	1565, 1566, 1567, 1676, 0, 1160, 0, 1241, 1164, 0,
	1160, 1160, 1122, 1206, 0, 0, 1229, 0, 1178, 0,
	1179, 0, 1211, 0, 1186, 1189, 1190, 1200, 0, 1192,
	0, 1195, 0, 1503, -2, 430, 414, 0, 0, 1251,
	0, 1312, 1316, 1340, 434, 1215, 0, 0, 0, 0,
	153, 792, 817, 0, 0, 0, 943, 950, 0, 0,
	823, 125, 0, 0, 0, 133, 0, 0, 130, 0,
	137, 141, 0, 0, 0, 0, 0, 97, 98, 99,
	0, 104, 0, 105, 0, 0, 0, 0, 0, 0,
	920, 921, 181, 156, 234, 908, 240, 774, 824, 0,
	826, 0, 739, 0, 0, 825, 292, 0, 299, 0,
	875, 0, 0, 898, 925, 938, 0, 0, 0, 1021,
	1023, 0, 1014, 1015, 1143, 1025, 1045, -2, 1044, 0,
	1126, 1053, 1050, 1056, 1057, 0, 348, 188, 0, 183,
	185, 0, 169, 0, 0, 767, 772, 0, 0, 0,
	0, 0, 1036, 1038, 0, 175, 0, 601, 623, 671,
	703, 779, 0, 0, 705, 0, 0, 1146, 1133, 1134,
	1131, 950, 1405, 1409, 0, 0, 0, 1411, -2, 0,
	1433, -2, -2, 1638, 1690, 1482, 1126, 1504, 1506, 1493,
	1684, 1357, 0, 1589, 1586, 0, 1573, 1284, 1526, 1527,
	0, 0, 1530, 1532, 1533, 1534, 1663, 0, 0, 0,
	0, 1564, 1111, 1578, 0, 0, 1168, 1578, 1578, 1207,
	0, 1209, 1176, 1169, 0, 1757, 1202, 1194, 0, 0,
	1245, 1250, 0, 1311, 119, 120, 122, 0, 793, 0,
	796, 0, 0, 0, 0, 803, 804, 0, 0, 0,
	0, 0, 840, 850, 0, 1135, 0, 0, 0, 127,
	147, 0, 0, 962, 0, 0, 152, 152, 0, 0,
	953, 0, 0, 0, 0, 107, 0, 0, 955, 957,
	0, 0, 959, 782, 0, 836, 828, 829, 830, 0,
	835, 837, 0, 0, 752, 0, 748, 0, 0, 741,
	765, 738, 0, 297, 872, 906, 854, 0, 0, 0,
	0, 0, 1011, 1023, 0, 1016, 1017, 1047, 1142, 0,
	0, 0, 1033, 1143, 0, 190, 191, 0, 0, 0,
	0, 0, 0, 0, 191, 473, 475, 0, 0, 481,
	778, 0, 0, 0, 0, 1132, 1413, -2, -2, 1434,
	0, 1758, 1760, 1126, 0, 1575, 0, 0, -2, 0,
	0, 0, 1097, 0, 1159, 1157, 1098, 1099, 1228, 0,
	1197, 0, 1252, 124, 0, 797, 798, 1741, 800, 0,
	802, 805, 0, 808, 1779, 0, 812, 819, 841, 0,
	774, 0, 846, 847, 848, 944, 945, 852, 0, 126,
	128, 146, 947, 0, 129, 136, 0, 0, 83, 0,
	0, 1831, 110, 108, 106, 85, 0, 738, 781, 0,
	827, 0, 838, 839, 742, 0, 740, 0, 0, 0,
	0, 0, 298, 301, 0, 304, 0, 0, 937, 0,
	0, 0, 0, 1018, 1019, 313, 0, 0, 0, 1047,
	1058, 168, 0, 0, 852, 0, 0, 816, 0, 173,
	0, 477, 0, 479, 0, 704, 706, 0, 0, 1505,
	1593, 0, 1528, 1529, -2, 0, 1471, 1577, 1579, 0,
	1170, 1246, 795, 799, 0, 0, 0, 858, 0, 0,
	0, 844, 845, 782, 0, 774, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 742, 0, 0,
	750, 0, 753, 0, 749, 746, 747, 774, 0, 302,
	303, 0, 0, 938, 0, 0, 1020, 1021, 0, 1040,
	1041, 1043, 1048, 0, 0, 850, 852, 815, 0, 476,
	0, 0, 709, 710, 0, 0, 0, 0, 1588, 1472,
	0, 0, 0, 0, 807, 863, 0, 0, 0, 842,
	843, 840, 0, 821, 0, 854, 131, 0, 946, 852,
	0, 786, 0, 0, 789, 0, 0, 111, 1831, 109,
	0, 736, 0, 0, 832, 834, 0, 754, 782, 752,
	907, 852, 0, 850, 0, 1012, 0, 1042, 191, 191,
	774, 850, 191, 478, 480, 1585, 1605, 1594, -2, 2045,
	1835, 0, 1605, 1605, 1580, 1581, 0, 0, 809, 859,
	860, 0, 855, 856, 857, 1778, 810, 811, 820, 849,
	0, 858, 148, 774, 783, 0, 0, 784, 0, 0,
	114, 0, 116, 0, 831, 0, 0, 0, 0, 738,
	742, 850, 0, 774, 0, 1243, 170, 171, 782, 774,
	172, 1590, 0, 0, 1596, 1597, 1598, 1599, 1600, 1591,
	1592, 801, 0, 861, 0, 862, 0, 0, 0, 0,
	863, 134, 787, 0, 790, 0, 112, 0, 833, 743,
	0, 745, 742, 751, 774, 0, 782, 0, 1039, 813,
	782, 0, 1602, 1603, 0, 0, 0, 864, 0, 867,
	868, 0, 865, 0, 840, 0, 0, 777, 744, 737,
	782, 852, 935, 850, 814, 1601, 1604, 1595, 806, 866,
	869, 870, 851, 822, 0, 0, 773, 775, 776, 935,
	850, 932, 0, 774, 782, 0, 930, 774, 936, 782,
	788, 0, 782, 935, 0, 935, 933, 0, 931, 782,
	791,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 466, 3, 472, 467, 3,
	477, 478, 470, 468, 482, 469, 479, 471, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 485, 3,
	458, 460, 459, 463, 481, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 475, 3, 476, 473, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 483, 465, 484, 461,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 462, 57801, 464, 57802, 474, 57803, 480, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1129
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1134
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1138
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1139
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1140
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1141
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1142
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1143
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1144
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1145
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1152
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1161
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1162
		{
			return helpWith(sqllex, "ALTER")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1165
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1166
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1167
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1168
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1169
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1170
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1171
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1225
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1262
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1281
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 63:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1285
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 66:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1354
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1358
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1364
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1368
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1374
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1383
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1394
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1398
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1404
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1412
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1422
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1426
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1436
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1447
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1454
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1466
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1473
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1481
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1486
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1490
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1495
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1501
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1509
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1520
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1530
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 105:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1540
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1549
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 107:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1560
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 108:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1566
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1574
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1578
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1582
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 112:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1586
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1592
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1597
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1608
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1612
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1618
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1622
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1629
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1634
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1644
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1649
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1659
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1669
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1674
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1700
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1710
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1717
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1766
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1774
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1775
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1779
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1783
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1801
		{
			sqlVAL.union.val = nil
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = nil
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1832
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1862
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1869
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1899
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1960
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1969
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1975
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1980
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1985
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1990
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1995
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1999
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2018
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2026
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2034
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2044
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2076
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2086
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2090
		{
			sqlVAL.union.val = nil
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2096
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2110
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2111
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2112
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2113
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2131
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2136
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2163
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2172
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2199
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2208
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2220
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2239
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2244
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2256
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2258
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2259
		{
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2260
		{
			return helpWith(sqllex, "CREATE")
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2263
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2264
		{
			return unimplemented(sqllex, "create cast")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2265
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2266
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2267
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2268
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2269
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2270
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2271
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2272
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2273
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2274
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2275
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2276
		{
			return unimplemented(sqllex, "create operator")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2277
		{
			return unimplemented(sqllex, "create publication")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2278
		{
			return unimplemented(sqllex, "create rule")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2279
		{
			return unimplemented(sqllex, "create server")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2280
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2281
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2282
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2285
		{
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2286
		{
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2289
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2290
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2293
		{
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2294
		{
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2300
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2303
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2304
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2305
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2306
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2307
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2308
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2309
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2310
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2311
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2312
		{
			return unimplemented(sqllex, "drop server")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2313
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2314
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2315
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2316
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2320
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2321
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2322
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2323
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2324
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2326
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2327
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2328
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2329
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2347
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2365
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2374
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2397
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2408
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2436
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2471
		{

			sqlVAL.union.val = nil
		}
	case 313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2495
		{
			return helpWith(sqllex, "DELETE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2498
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2499
		{
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2510
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2511
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2512
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2513
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2514
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2523
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2524
		{
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2525
		{
			return helpWith(sqllex, "DROP")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2528
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2529
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2530
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2531
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2532
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2547
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2559
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2562
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2577
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2594
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2602
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2625
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2640
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2644
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2649
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2672
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2679
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2681
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2697
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2705
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2713
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2724
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2728
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2731
		{
			return helpWith(sqllex, "DELETE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2733
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2734
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2735
		{
			return helpWith(sqllex, "INSERT")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2736
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2738
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2739
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2740
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2743
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2749
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2750
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2755
		{
			return helpWith(sqllex, "DELETE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2757
		{
			return helpWith(sqllex, "INSERT")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2759
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2763
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2764
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2768
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2790
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2798
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2823
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2831
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2864
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2895
		{
			return helpWith(sqllex, "GRANT")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2931
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2935
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2963
		{
			return helpWith(sqllex, "RESET")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2964
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2976
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2979
		{
			return helpWith(sqllex, "RESET")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3004
		{
			return helpWith(sqllex, "USE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3008
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3009
		{
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3010
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3011
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3016
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3017
		{
			return helpWith(sqllex, "USE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3033
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3051
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3077
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3131
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3186
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3191
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3221
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3226
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3236
		{
			return unimplemented(sqllex, "set from current")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3245
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = tree.Low
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = tree.Normal
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = tree.High
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3395
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3396
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3398
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3400
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3402
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3403
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3404
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3405
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "SHOW")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3413
		{
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3417
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3421
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3431
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.str = "client_encoding"
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3462
		{
			sqlVAL.str = "timezone"
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3463
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3481
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3529
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3538
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3546
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3570
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3577
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3585
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3635
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3654
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3669
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3687
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3703
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3708
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = true
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = true
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = false
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3726
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3730
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3733
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3761
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3773
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3780
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = true
		}
	case 666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = false
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3796
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3799
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3822
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3832
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = true
		}
	case 676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = false
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3853
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3867
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3874
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3878
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3888
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3896
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3901
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3906
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3922
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3926
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3953
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3965
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3973
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4010
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4024
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4033
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4045
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4049
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4181
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4189
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4232
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4257
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4285
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4293
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4305
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4344
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4359
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = nil
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{

			sqlVAL.union.val = nil
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4386
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4391
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4401
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4406
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4411
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 750:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4438
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4451
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4465
		{
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4467
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = true
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = true
		}
	case 757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = false
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = true
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = true
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = true
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = true
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4495
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 773:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4529
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4545
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4550
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4555
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.str = ""
		}
	case 782:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 783:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4595
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 788:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 791:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4666
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4739
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4753
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 813:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4810
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4821
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4850
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4861
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4872
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4888
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4903
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4968
		{
		}
	case 841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4969
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4970
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4971
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4972
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4973
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5013
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5045
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5070
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5074
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5086
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5106
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5129
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5138
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5157
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5162
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5172
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5175
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5177
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5179
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5182
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5185
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5187
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5240
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = true
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5250
		{

			sqlVAL.union.val = true
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = false
		}
	case 906:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5265
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5276
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5286
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5287
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = nil
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5340
		{
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5341
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5347
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 925:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5349
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5351
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5353
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5355
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5357
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5373
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:5389
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5406
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5421
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5436
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5439
		{
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5440
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5444
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = false
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = true
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = false
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = true
		}
	case 942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = false
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5498
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.str = ""
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = tree.Descending
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5545
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5551
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5559
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5565
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5573
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5579
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5596
		{
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5597
		{
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5600
		{
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5601
		{
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5612
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5634
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5645
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5649
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5650
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5651
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5675
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5688
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5693
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5702
		{
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5703
		{
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5704
		{
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5721
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5724
		{
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5725
		{
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5753
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5766
		{
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5768
		{
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5772
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5837
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.str = ""
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5851
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.str = ""
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5861
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.str = ""
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.str = ""
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5880
		{
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5881
		{
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5907
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5925
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5929
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5938
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5953
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5987
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6001
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6004
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6005
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6013
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6083
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6140
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6233
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6305
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6331
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6375
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6391
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6420
		{
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6421
		{
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6429
		{
			sqlVAL.union.val = nil
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6434
		{
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6435
		{
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = true
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = false
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = false
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = true
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6464
		{
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6465
		{
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6495
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6516
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6521
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6550
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6638
		{
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6639
		{
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6642
		{
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6643
		{
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6696
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6698
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6713
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6735
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6740
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6745
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6756
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6768
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6787
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6826
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6836
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6871
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6882
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6906
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6912
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6935
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6945
		{
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6947
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = nil
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = true
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = false
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.str = tree.AstFull
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.str = tree.AstRight
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.str = tree.AstInner
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7064
		{
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7065
		{
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.str = tree.AstHash
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.str = ""
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7127
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7132
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7150
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7156
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7162
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7172
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7201
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7214
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7222
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7223
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7241
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7243
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7251
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = types.String
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = types.Name
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7304
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = types.INet
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = types.Oid
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7353
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7384
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7392
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = nil
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = types.Int2
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = types.Int2
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = types.Int4
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = types.Int
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = types.Int
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = types.Int
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = types.Float4
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = types.Float4
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = types.Float
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = types.Float
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7459
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7475
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = types.Bool
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = types.Bool
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = types.RegType
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7516
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = types.Float
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7535
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7541
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7563
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = types.String
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = true
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = false
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = types.Date
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7612
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7620
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7634
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7643
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7651
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7668
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = true
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = false
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = false
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = types.Interval
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7692
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7776
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7791
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = nil
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7821
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7881
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8125
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8191
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8213
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8407
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8412
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8438
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8447
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8462
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8492
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8503
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8504
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8519
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8530
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8650
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8655
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8664
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8673
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8682
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8691
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8696
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8701
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8706
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8711
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8720
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8721
		{
			return unimplemented(sqllex, "treat")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8742
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8747
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8752
		{
			return unimplemented(sqllex, "within group")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8753
		{
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8788
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.str = ""
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8877
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8890
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8958
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8987
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = tree.Any
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = tree.Some
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = tree.All
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9012
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = tree.Div
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = tree.LT
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = tree.GT
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = tree.LE
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = tree.GE
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = tree.NE
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = tree.Like
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9348
		{
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9349
		{
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9421
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9429
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9502
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9518
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9527
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9538
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9547
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9555
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9567
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9749
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9756
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.str = ""
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
