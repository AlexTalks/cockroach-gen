// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}

//line sql-gen.y:926
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14526

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1719,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	272, 451,
	-2, 0,
	-1, 71,
	8, 900,
	29, 900,
	621, 900,
	622, 900,
	-2, 0,
	-1, 72,
	8, 900,
	29, 900,
	621, 900,
	622, 900,
	-2, 0,
	-1, 79,
	254, 268,
	543, 268,
	-2, 0,
	-1, 92,
	242, 1452,
	256, 1452,
	272, 447,
	410, 447,
	422, 1199,
	463, 447,
	477, 1199,
	527, 1199,
	555, 447,
	582, 1199,
	-2, 0,
	-1, 98,
	137, 1719,
	249, 1719,
	566, 1719,
	567, 1719,
	-2, 0,
	-1, 116,
	156, 1690,
	176, 1690,
	189, 1690,
	252, 1690,
	285, 1690,
	359, 1690,
	370, 1690,
	561, 1690,
	-2, 1661,
	-1, 158,
	164, 1030,
	271, 1030,
	413, 991,
	482, 991,
	526, 991,
	546, 1030,
	548, 991,
	-2, 0,
	-1, 163,
	4, 1721,
	21, 1721,
	22, 1721,
	23, 1721,
	24, 1721,
	25, 1721,
	26, 1721,
	27, 1721,
	28, 1721,
	30, 1721,
	31, 1721,
	37, 1721,
	41, 1721,
	43, 1721,
	44, 1721,
	46, 1721,
	47, 1721,
	48, 1721,
	49, 1721,
	50, 1721,
	51, 1721,
	52, 1721,
	53, 1721,
	54, 1721,
	56, 1721,
	57, 1721,
	58, 1721,
	59, 1721,
	61, 1721,
	62, 1721,
	63, 1721,
	64, 1721,
	65, 1721,
	66, 1721,
	67, 1721,
	71, 1721,
	72, 1721,
	73, 1721,
	74, 1721,
	76, 1721,
	77, 1721,
	78, 1721,
	82, 1721,
	83, 1721,
	84, 1721,
	85, 1721,
	86, 1721,
	87, 1721,
	88, 1721,
	89, 1721,
	92, 1721,
	93, 1721,
	94, 1721,
	95, 1721,
	96, 1721,
	98, 1721,
	100, 1721,
	101, 1721,
	102, 1721,
	103, 1721,
	104, 1721,
	105, 1721,
	107, 1721,
	108, 1721,
	109, 1721,
	111, 1721,
	112, 1721,
	113, 1721,
	121, 1721,
	122, 1721,
	123, 1721,
	124, 1721,
	125, 1721,
	127, 1721,
	128, 1721,
	129, 1721,
	130, 1721,
	132, 1721,
	133, 1721,
	134, 1721,
	136, 1721,
	137, 1721,
	138, 1721,
	140, 1721,
	141, 1721,
	142, 1721,
	145, 1721,
	146, 1721,
	147, 1721,
	149, 1721,
	150, 1721,
	151, 1721,
	153, 1721,
	154, 1721,
	155, 1721,
	157, 1721,
	158, 1721,
	159, 1721,
	160, 1721,
	161, 1721,
	162, 1721,
	163, 1721,
	164, 1721,
	165, 1721,
	166, 1721,
	167, 1721,
	168, 1721,
	169, 1721,
	170, 1721,
	171, 1721,
	172, 1721,
	173, 1721,
	175, 1721,
	181, 1721,
	182, 1721,
	183, 1721,
	184, 1721,
	188, 1721,
	190, 1721,
	191, 1721,
	192, 1721,
	194, 1721,
	195, 1721,
	198, 1721,
	199, 1721,
	200, 1721,
	201, 1721,
	202, 1721,
	203, 1721,
	204, 1721,
	205, 1721,
	206, 1721,
	207, 1721,
	208, 1721,
	209, 1721,
	210, 1721,
	211, 1721,
	213, 1721,
	214, 1721,
	216, 1721,
	217, 1721,
	219, 1721,
	220, 1721,
	221, 1721,
	222, 1721,
	223, 1721,
	224, 1721,
	225, 1721,
	226, 1721,
	227, 1721,
	228, 1721,
	229, 1721,
	231, 1721,
	232, 1721,
	234, 1721,
	235, 1721,
	236, 1721,
	237, 1721,
	238, 1721,
	242, 1721,
	243, 1721,
	244, 1721,
	245, 1721,
	248, 1721,
	249, 1721,
	250, 1721,
	251, 1721,
	253, 1721,
	255, 1721,
	256, 1721,
	258, 1721,
	260, 1721,
	261, 1721,
	262, 1721,
	264, 1721,
	268, 1721,
	269, 1721,
	270, 1721,
	271, 1721,
	272, 1721,
	273, 1721,
	275, 1721,
	276, 1721,
	277, 1721,
	279, 1721,
	280, 1721,
	282, 1721,
	283, 1721,
	286, 1721,
	287, 1721,
	288, 1721,
	289, 1721,
	290, 1721,
	291, 1721,
	292, 1721,
	295, 1721,
	296, 1721,
	297, 1721,
	298, 1721,
	300, 1721,
	301, 1721,
	302, 1721,
	303, 1721,
	304, 1721,
	305, 1721,
	306, 1721,
	307, 1721,
	308, 1721,
	309, 1721,
	310, 1721,
	311, 1721,
	312, 1721,
	313, 1721,
	314, 1721,
	315, 1721,
	316, 1721,
	317, 1721,
	318, 1721,
	319, 1721,
	320, 1721,
	321, 1721,
	322, 1721,
	324, 1721,
	326, 1721,
	327, 1721,
	328, 1721,
	329, 1721,
	330, 1721,
	331, 1721,
	332, 1721,
	333, 1721,
	334, 1721,
	335, 1721,
	336, 1721,
	337, 1721,
	338, 1721,
	339, 1721,
	340, 1721,
	341, 1721,
	342, 1721,
	344, 1721,
	345, 1721,
	347, 1721,
	349, 1721,
	350, 1721,
	351, 1721,
	352, 1721,
	354, 1721,
	355, 1721,
	356, 1721,
	357, 1721,
	358, 1721,
	361, 1721,
	363, 1721,
	365, 1721,
	366, 1721,
	367, 1721,
	368, 1721,
	371, 1721,
	372, 1721,
	373, 1721,
	375, 1721,
	377, 1721,
	378, 1721,
	379, 1721,
	380, 1721,
	381, 1721,
	382, 1721,
	383, 1721,
	384, 1721,
	385, 1721,
	386, 1721,
	387, 1721,
	388, 1721,
	389, 1721,
	391, 1721,
	392, 1721,
	393, 1721,
	394, 1721,
	395, 1721,
	396, 1721,
	397, 1721,
	398, 1721,
	399, 1721,
	400, 1721,
	401, 1721,
	402, 1721,
	403, 1721,
	404, 1721,
	405, 1721,
	407, 1721,
	408, 1721,
	409, 1721,
	411, 1721,
	412, 1721,
	413, 1721,
	414, 1721,
	415, 1721,
	416, 1721,
	417, 1721,
	418, 1721,
	419, 1721,
	420, 1721,
	421, 1721,
	422, 1721,
	423, 1721,
	424, 1721,
	426, 1721,
	428, 1721,
	429, 1721,
	430, 1721,
	436, 1721,
	437, 1721,
	438, 1721,
	440, 1721,
	441, 1721,
	442, 1721,
	443, 1721,
	444, 1721,
	445, 1721,
	446, 1721,
	447, 1721,
	448, 1721,
	449, 1721,
	451, 1721,
	452, 1721,
	453, 1721,
	455, 1721,
	456, 1721,
	457, 1721,
	458, 1721,
	459, 1721,
	460, 1721,
	461, 1721,
	463, 1721,
	464, 1721,
	465, 1721,
	466, 1721,
	467, 1721,
	468, 1721,
	469, 1721,
	470, 1721,
	471, 1721,
	472, 1721,
	473, 1721,
	474, 1721,
	475, 1721,
	477, 1721,
	478, 1721,
	479, 1721,
	480, 1721,
	481, 1721,
	482, 1721,
	484, 1721,
	485, 1721,
	486, 1721,
	487, 1721,
	488, 1721,
	489, 1721,
	491, 1721,
	492, 1721,
	493, 1721,
	494, 1721,
	495, 1721,
	496, 1721,
	497, 1721,
	498, 1721,
	500, 1721,
	502, 1721,
	503, 1721,
	504, 1721,
	505, 1721,
	506, 1721,
	507, 1721,
	508, 1721,
	509, 1721,
	510, 1721,
	511, 1721,
	512, 1721,
	513, 1721,
	514, 1721,
	515, 1721,
	516, 1721,
	517, 1721,
	518, 1721,
	519, 1721,
	520, 1721,
	522, 1721,
	523, 1721,
	525, 1721,
	526, 1721,
	528, 1721,
	529, 1721,
	530, 1721,
	531, 1721,
	532, 1721,
	533, 1721,
	535, 1721,
	536, 1721,
	538, 1721,
	539, 1721,
	540, 1721,
	541, 1721,
	542, 1721,
	544, 1721,
	546, 1721,
	547, 1721,
	548, 1721,
	549, 1721,
	550, 1721,
	551, 1721,
	552, 1721,
	554, 1721,
	555, 1721,
	556, 1721,
	557, 1721,
	559, 1721,
	560, 1721,
	563, 1721,
	564, 1721,
	565, 1721,
	566, 1721,
	567, 1721,
	568, 1721,
	569, 1721,
	570, 1721,
	572, 1721,
	575, 1721,
	576, 1721,
	577, 1721,
	578, 1721,
	579, 1721,
	580, 1721,
	582, 1721,
	583, 1721,
	584, 1721,
	585, 1721,
	586, 1721,
	587, 1721,
	588, 1721,
	589, 1721,
	594, 1721,
	595, 1721,
	596, 1721,
	597, 1721,
	598, 1721,
	599, 1721,
	-2, 0,
	-1, 164,
	1, 1569,
	135, 1569,
	260, 1569,
	346, 1569,
	408, 1569,
	418, 1569,
	603, 1569,
	634, 1569,
	-2, 0,
	-1, 166,
	1, 1569,
	634, 1569,
	-2, 0,
	-1, 167,
	1, 1569,
	634, 1569,
	-2, 0,
	-1, 168,
	1, 1569,
	543, 1569,
	634, 1569,
	-2, 0,
	-1, 200,
	156, 1689,
	176, 1689,
	189, 1689,
	252, 1689,
	285, 1689,
	359, 1689,
	370, 1689,
	561, 1689,
	-2, 1664,
	-1, 251,
	4, 1728,
	5, 1728,
	6, 1728,
	7, 1728,
	8, 1728,
	9, 1728,
	10, 1728,
	21, 1728,
	22, 1728,
	23, 1728,
	24, 1728,
	25, 1728,
	26, 1728,
	27, 1728,
	28, 1728,
	30, 1728,
	31, 1728,
	37, 1728,
	38, 1728,
	41, 1728,
	43, 1728,
	44, 1728,
	45, 1728,
	46, 1728,
	47, 1728,
	48, 1728,
	49, 1728,
	50, 1728,
	51, 1728,
	52, 1728,
	53, 1728,
	54, 1728,
	56, 1728,
	57, 1728,
	58, 1728,
	59, 1728,
	61, 1728,
	62, 1728,
	63, 1728,
	64, 1728,
	65, 1728,
	66, 1728,
	67, 1728,
	68, 1728,
	69, 1728,
	70, 1728,
	71, 1728,
	72, 1728,
	73, 1728,
	74, 1728,
	76, 1728,
	77, 1728,
	78, 1728,
	80, 1728,
	82, 1728,
	83, 1728,
	84, 1728,
	85, 1728,
	86, 1728,
	87, 1728,
	88, 1728,
	89, 1728,
	92, 1728,
	93, 1728,
	94, 1728,
	95, 1728,
	96, 1728,
	98, 1728,
	100, 1728,
	101, 1728,
	102, 1728,
	103, 1728,
	104, 1728,
	105, 1728,
	107, 1728,
	108, 1728,
	109, 1728,
	110, 1728,
	111, 1728,
	112, 1728,
	113, 1728,
	114, 1728,
	115, 1728,
	116, 1728,
	117, 1728,
	118, 1728,
	119, 1728,
	120, 1728,
	121, 1728,
	122, 1728,
	123, 1728,
	124, 1728,
	125, 1728,
	126, 1728,
	127, 1728,
	128, 1728,
	129, 1728,
	130, 1728,
	131, 1728,
	132, 1728,
	133, 1728,
	134, 1728,
	136, 1728,
	137, 1728,
	138, 1728,
	140, 1728,
	141, 1728,
	142, 1728,
	145, 1728,
	146, 1728,
	147, 1728,
	149, 1728,
	150, 1728,
	151, 1728,
	153, 1728,
	154, 1728,
	155, 1728,
	157, 1728,
	158, 1728,
	159, 1728,
	160, 1728,
	161, 1728,
	162, 1728,
	163, 1728,
	164, 1728,
	165, 1728,
	166, 1728,
	167, 1728,
	168, 1728,
	169, 1728,
	170, 1728,
	171, 1728,
	172, 1728,
	173, 1728,
	174, 1728,
	175, 1728,
	181, 1728,
	182, 1728,
	183, 1728,
	184, 1728,
	188, 1728,
	190, 1728,
	191, 1728,
	192, 1728,
	194, 1728,
	195, 1728,
	197, 1728,
	198, 1728,
	199, 1728,
	200, 1728,
	201, 1728,
	202, 1728,
	203, 1728,
	204, 1728,
	205, 1728,
	206, 1728,
	207, 1728,
	208, 1728,
	209, 1728,
	210, 1728,
	211, 1728,
	213, 1728,
	214, 1728,
	216, 1728,
	217, 1728,
	219, 1728,
	220, 1728,
	221, 1728,
	222, 1728,
	223, 1728,
	224, 1728,
	225, 1728,
	226, 1728,
	227, 1728,
	228, 1728,
	229, 1728,
	230, 1728,
	231, 1728,
	232, 1728,
	234, 1728,
	235, 1728,
	236, 1728,
	237, 1728,
	238, 1728,
	242, 1728,
	243, 1728,
	244, 1728,
	245, 1728,
	247, 1728,
	248, 1728,
	249, 1728,
	250, 1728,
	251, 1728,
	253, 1728,
	255, 1728,
	256, 1728,
	257, 1728,
	258, 1728,
	259, 1728,
	260, 1728,
	261, 1728,
	262, 1728,
	263, 1728,
	264, 1728,
	268, 1728,
	269, 1728,
	270, 1728,
	271, 1728,
	272, 1728,
	273, 1728,
	275, 1728,
	276, 1728,
	277, 1728,
	279, 1728,
	280, 1728,
	281, 1728,
	282, 1728,
	283, 1728,
	284, 1728,
	286, 1728,
	287, 1728,
	288, 1728,
	289, 1728,
	290, 1728,
	291, 1728,
	292, 1728,
	293, 1728,
	294, 1728,
	295, 1728,
	296, 1728,
	297, 1728,
	298, 1728,
	300, 1728,
	301, 1728,
	302, 1728,
	303, 1728,
	304, 1728,
	305, 1728,
	306, 1728,
	307, 1728,
	308, 1728,
	309, 1728,
	310, 1728,
	311, 1728,
	312, 1728,
	313, 1728,
	314, 1728,
	315, 1728,
	316, 1728,
	317, 1728,
	318, 1728,
	319, 1728,
	320, 1728,
	321, 1728,
	322, 1728,
	324, 1728,
	325, 1728,
	326, 1728,
	327, 1728,
	328, 1728,
	329, 1728,
	330, 1728,
	331, 1728,
	332, 1728,
	333, 1728,
	334, 1728,
	335, 1728,
	336, 1728,
	337, 1728,
	338, 1728,
	339, 1728,
	340, 1728,
	341, 1728,
	342, 1728,
	343, 1728,
	344, 1728,
	345, 1728,
	346, 1728,
	347, 1728,
	348, 1728,
	349, 1728,
	350, 1728,
	351, 1728,
	352, 1728,
	353, 1728,
	354, 1728,
	355, 1728,
	356, 1728,
	357, 1728,
	358, 1728,
	361, 1728,
	363, 1728,
	366, 1728,
	367, 1728,
	368, 1728,
	371, 1728,
	372, 1728,
	373, 1728,
	374, 1728,
	375, 1728,
	376, 1728,
	377, 1728,
	378, 1728,
	379, 1728,
	380, 1728,
	381, 1728,
	382, 1728,
	383, 1728,
	384, 1728,
	385, 1728,
	386, 1728,
	387, 1728,
	388, 1728,
	389, 1728,
	391, 1728,
	392, 1728,
	393, 1728,
	394, 1728,
	395, 1728,
	396, 1728,
	397, 1728,
	398, 1728,
	399, 1728,
	400, 1728,
	401, 1728,
	402, 1728,
	403, 1728,
	404, 1728,
	405, 1728,
	407, 1728,
	408, 1728,
	409, 1728,
	411, 1728,
	412, 1728,
	413, 1728,
	414, 1728,
	415, 1728,
	416, 1728,
	417, 1728,
	418, 1728,
	419, 1728,
	420, 1728,
	421, 1728,
	422, 1728,
	423, 1728,
	424, 1728,
	426, 1728,
	428, 1728,
	429, 1728,
	430, 1728,
	436, 1728,
	437, 1728,
	438, 1728,
	440, 1728,
	441, 1728,
	442, 1728,
	443, 1728,
	444, 1728,
	445, 1728,
	446, 1728,
	447, 1728,
	448, 1728,
	449, 1728,
	451, 1728,
	452, 1728,
	453, 1728,
	454, 1728,
	455, 1728,
	456, 1728,
	457, 1728,
	458, 1728,
	459, 1728,
	460, 1728,
	461, 1728,
	463, 1728,
	464, 1728,
	465, 1728,
	466, 1728,
	467, 1728,
	468, 1728,
	469, 1728,
	470, 1728,
	471, 1728,
	472, 1728,
	473, 1728,
	474, 1728,
	475, 1728,
	477, 1728,
	478, 1728,
	479, 1728,
	480, 1728,
	481, 1728,
	482, 1728,
	483, 1728,
	484, 1728,
	485, 1728,
	486, 1728,
	487, 1728,
	488, 1728,
	489, 1728,
	490, 1728,
	491, 1728,
	492, 1728,
	493, 1728,
	494, 1728,
	495, 1728,
	496, 1728,
	497, 1728,
	498, 1728,
	500, 1728,
	502, 1728,
	503, 1728,
	504, 1728,
	505, 1728,
	506, 1728,
	507, 1728,
	508, 1728,
	509, 1728,
	510, 1728,
	511, 1728,
	512, 1728,
	513, 1728,
	514, 1728,
	515, 1728,
	516, 1728,
	517, 1728,
	518, 1728,
	519, 1728,
	520, 1728,
	522, 1728,
	523, 1728,
	524, 1728,
	525, 1728,
	526, 1728,
	528, 1728,
	529, 1728,
	530, 1728,
	531, 1728,
	532, 1728,
	533, 1728,
	535, 1728,
	536, 1728,
	538, 1728,
	539, 1728,
	540, 1728,
	541, 1728,
	542, 1728,
	544, 1728,
	546, 1728,
	547, 1728,
	548, 1728,
	549, 1728,
	550, 1728,
	551, 1728,
	552, 1728,
	553, 1728,
	554, 1728,
	555, 1728,
	556, 1728,
	557, 1728,
	559, 1728,
	560, 1728,
	562, 1728,
	563, 1728,
	564, 1728,
	565, 1728,
	566, 1728,
	567, 1728,
	568, 1728,
	569, 1728,
	570, 1728,
	571, 1728,
	572, 1728,
	575, 1728,
	576, 1728,
	577, 1728,
	578, 1728,
	579, 1728,
	580, 1728,
	582, 1728,
	583, 1728,
	584, 1728,
	585, 1728,
	586, 1728,
	587, 1728,
	588, 1728,
	589, 1728,
	594, 1728,
	595, 1728,
	596, 1728,
	597, 1728,
	598, 1728,
	599, 1728,
	600, 1728,
	614, 1728,
	621, 1728,
	622, 1728,
	623, 1728,
	631, 1728,
	635, 1728,
	-2, 0,
	-1, 796,
	4, 1450,
	21, 1450,
	22, 1450,
	23, 1450,
	24, 1450,
	25, 1450,
	26, 1450,
	27, 1450,
	28, 1450,
	30, 1450,
	31, 1450,
	37, 1450,
	41, 1450,
	43, 1450,
	44, 1450,
	46, 1450,
	47, 1450,
	48, 1450,
	49, 1450,
	50, 1450,
	51, 1450,
	52, 1450,
	53, 1450,
	54, 1450,
	56, 1450,
	57, 1450,
	58, 1450,
	59, 1450,
	61, 1450,
	62, 1450,
	63, 1450,
	64, 1450,
	65, 1450,
	66, 1450,
	67, 1450,
	71, 1450,
	72, 1450,
	73, 1450,
	74, 1450,
	76, 1450,
	77, 1450,
	78, 1450,
	82, 1450,
	83, 1450,
	84, 1450,
	85, 1450,
	86, 1450,
	87, 1450,
	88, 1450,
	89, 1450,
	92, 1450,
	93, 1450,
	94, 1450,
	95, 1450,
	96, 1450,
	98, 1450,
	100, 1450,
	101, 1450,
	102, 1450,
	103, 1450,
	104, 1450,
	105, 1450,
	107, 1450,
	108, 1450,
	109, 1450,
	111, 1450,
	112, 1450,
	113, 1450,
	121, 1450,
	122, 1450,
	123, 1450,
	124, 1450,
	125, 1450,
	127, 1450,
	128, 1450,
	129, 1450,
	130, 1450,
	132, 1450,
	133, 1450,
	134, 1450,
	136, 1450,
	137, 1450,
	138, 1450,
	140, 1450,
	141, 1450,
	142, 1450,
	145, 1450,
	146, 1450,
	147, 1450,
	149, 1450,
	150, 1450,
	151, 1450,
	153, 1450,
	154, 1450,
	155, 1450,
	157, 1450,
	158, 1450,
	159, 1450,
	160, 1450,
	161, 1450,
	162, 1450,
	163, 1450,
	164, 1450,
	165, 1450,
	166, 1450,
	167, 1450,
	168, 1450,
	169, 1450,
	170, 1450,
	171, 1450,
	172, 1450,
	173, 1450,
	175, 1450,
	181, 1450,
	182, 1450,
	183, 1450,
	184, 1450,
	188, 1450,
	190, 1450,
	191, 1450,
	192, 1450,
	194, 1450,
	195, 1450,
	198, 1450,
	199, 1450,
	200, 1450,
	201, 1450,
	202, 1450,
	203, 1450,
	204, 1450,
	205, 1450,
	206, 1450,
	207, 1450,
	208, 1450,
	209, 1450,
	210, 1450,
	211, 1450,
	213, 1450,
	214, 1450,
	216, 1450,
	217, 1450,
	219, 1450,
	220, 1450,
	221, 1450,
	222, 1450,
	223, 1450,
	224, 1450,
	225, 1450,
	226, 1450,
	227, 1450,
	228, 1450,
	229, 1450,
	231, 1450,
	232, 1450,
	234, 1450,
	235, 1450,
	236, 1450,
	237, 1450,
	238, 1450,
	242, 1450,
	243, 1450,
	244, 1450,
	245, 1450,
	248, 1450,
	249, 1450,
	250, 1450,
	251, 1450,
	253, 1450,
	255, 1450,
	256, 1450,
	258, 1450,
	260, 1450,
	261, 1450,
	262, 1450,
	264, 1450,
	268, 1450,
	269, 1450,
	270, 1450,
	271, 1450,
	272, 1450,
	273, 1450,
	275, 1450,
	276, 1450,
	277, 1450,
	279, 1450,
	280, 1450,
	282, 1450,
	283, 1450,
	286, 1450,
	287, 1450,
	288, 1450,
	289, 1450,
	290, 1450,
	291, 1450,
	292, 1450,
	295, 1450,
	296, 1450,
	297, 1450,
	298, 1450,
	300, 1450,
	301, 1450,
	302, 1450,
	303, 1450,
	304, 1450,
	305, 1450,
	306, 1450,
	307, 1450,
	308, 1450,
	309, 1450,
	310, 1450,
	311, 1450,
	312, 1450,
	313, 1450,
	314, 1450,
	315, 1450,
	316, 1450,
	317, 1450,
	318, 1450,
	319, 1450,
	320, 1450,
	321, 1450,
	322, 1450,
	324, 1450,
	326, 1450,
	327, 1450,
	328, 1450,
	329, 1450,
	330, 1450,
	331, 1450,
	332, 1450,
	333, 1450,
	334, 1450,
	335, 1450,
	336, 1450,
	337, 1450,
	338, 1450,
	339, 1450,
	340, 1450,
	341, 1450,
	342, 1450,
	344, 1450,
	345, 1450,
	347, 1450,
	349, 1450,
	350, 1450,
	351, 1450,
	352, 1450,
	354, 1450,
	355, 1450,
	356, 1450,
	357, 1450,
	358, 1450,
	361, 1450,
	363, 1450,
	366, 1450,
	367, 1450,
	368, 1450,
	371, 1450,
	372, 1450,
	373, 1450,
	375, 1450,
	377, 1450,
	378, 1450,
	379, 1450,
	380, 1450,
	381, 1450,
	382, 1450,
	383, 1450,
	384, 1450,
	385, 1450,
	386, 1450,
	387, 1450,
	388, 1450,
	389, 1450,
	391, 1450,
	392, 1450,
	393, 1450,
	394, 1450,
	395, 1450,
	396, 1450,
	397, 1450,
	398, 1450,
	399, 1450,
	400, 1450,
	401, 1450,
	402, 1450,
	403, 1450,
	404, 1450,
	405, 1450,
	407, 1450,
	408, 1450,
	409, 1450,
	411, 1450,
	412, 1450,
	413, 1450,
	414, 1450,
	415, 1450,
	416, 1450,
	417, 1450,
	418, 1450,
	419, 1450,
	420, 1450,
	421, 1450,
	422, 1450,
	423, 1450,
	424, 1450,
	426, 1450,
	428, 1450,
	429, 1450,
	430, 1450,
	436, 1450,
	437, 1450,
	438, 1450,
	440, 1450,
	441, 1450,
	442, 1450,
	443, 1450,
	444, 1450,
	445, 1450,
	446, 1450,
	447, 1450,
	448, 1450,
	449, 1450,
	451, 1450,
	452, 1450,
	453, 1450,
	455, 1450,
	456, 1450,
	457, 1450,
	458, 1450,
	459, 1450,
	460, 1450,
	461, 1450,
	463, 1450,
	464, 1450,
	465, 1450,
	466, 1450,
	467, 1450,
	468, 1450,
	469, 1450,
	470, 1450,
	471, 1450,
	472, 1450,
	473, 1450,
	474, 1450,
	475, 1450,
	477, 1450,
	478, 1450,
	479, 1450,
	480, 1450,
	481, 1450,
	482, 1450,
	484, 1450,
	485, 1450,
	486, 1450,
	487, 1450,
	488, 1450,
	489, 1450,
	491, 1450,
	492, 1450,
	493, 1450,
	494, 1450,
	495, 1450,
	496, 1450,
	497, 1450,
	498, 1450,
	500, 1450,
	502, 1450,
	503, 1450,
	504, 1450,
	505, 1450,
	506, 1450,
	507, 1450,
	508, 1450,
	509, 1450,
	510, 1450,
	511, 1450,
	512, 1450,
	513, 1450,
	514, 1450,
	515, 1450,
	516, 1450,
	517, 1450,
	518, 1450,
	519, 1450,
	520, 1450,
	522, 1450,
	523, 1450,
	525, 1450,
	526, 1450,
	528, 1450,
	529, 1450,
	530, 1450,
	531, 1450,
	532, 1450,
	533, 1450,
	535, 1450,
	536, 1450,
	538, 1450,
	539, 1450,
	540, 1450,
	541, 1450,
	542, 1450,
	544, 1450,
	546, 1450,
	547, 1450,
	548, 1450,
	549, 1450,
	550, 1450,
	551, 1450,
	552, 1450,
	554, 1450,
	555, 1450,
	556, 1450,
	557, 1450,
	559, 1450,
	560, 1450,
	563, 1450,
	564, 1450,
	565, 1450,
	566, 1450,
	567, 1450,
	568, 1450,
	569, 1450,
	570, 1450,
	572, 1450,
	575, 1450,
	576, 1450,
	577, 1450,
	578, 1450,
	579, 1450,
	580, 1450,
	582, 1450,
	583, 1450,
	584, 1450,
	585, 1450,
	586, 1450,
	587, 1450,
	588, 1450,
	589, 1450,
	594, 1450,
	595, 1450,
	596, 1450,
	597, 1450,
	598, 1450,
	599, 1450,
	-2, 0,
	-1, 815,
	196, 2524,
	543, 2524,
	613, 2524,
	633, 2524,
	-2, 0,
	-1, 816,
	196, 2510,
	543, 2510,
	613, 2510,
	633, 2510,
	-2, 0,
	-1, 818,
	196, 2791,
	543, 2791,
	613, 2791,
	633, 2791,
	-2, 0,
	-1, 821,
	196, 2640,
	543, 2640,
	613, 2640,
	633, 2640,
	-2, 0,
	-1, 822,
	196, 2835,
	543, 2835,
	613, 2835,
	633, 2835,
	-2, 0,
	-1, 830,
	196, 2668,
	543, 2668,
	613, 2668,
	633, 2668,
	-2, 766,
	-1, 846,
	8, 899,
	29, 899,
	621, 899,
	622, 899,
	-2, 904,
	-1, 850,
	1, 2578,
	634, 2578,
	-2, 904,
	-1, 851,
	1, 2628,
	634, 2628,
	-2, 904,
	-1, 854,
	1, 2673,
	634, 2673,
	-2, 897,
	-1, 855,
	1, 2729,
	634, 2729,
	-2, 898,
	-1, 856,
	1, 2583,
	634, 2583,
	-2, 901,
	-1, 857,
	1, 2497,
	634, 2497,
	-2, 902,
	-1, 892,
	633, 2456,
	636, 2456,
	-2, 1116,
	-1, 893,
	633, 2458,
	636, 2458,
	-2, 1117,
	-1, 894,
	633, 2457,
	636, 2457,
	-2, 1118,
	-1, 895,
	636, 2382,
	-2, 1119,
	-1, 920,
	189, 287,
	-2, 0,
	-1, 943,
	45, 2429,
	-2, 0,
	-1, 944,
	582, 1428,
	-2, 1200,
	-1, 960,
	4, 1862,
	21, 1862,
	22, 1862,
	23, 1862,
	24, 1862,
	25, 1862,
	26, 1862,
	27, 1862,
	28, 1862,
	30, 1862,
	31, 1862,
	37, 1862,
	41, 1862,
	43, 1862,
	44, 1862,
	46, 1862,
	47, 1862,
	48, 1862,
	49, 1862,
	50, 1862,
	51, 1862,
	52, 1862,
	53, 1862,
	54, 1862,
	56, 1862,
	57, 1862,
	58, 1862,
	59, 1862,
	61, 1862,
	62, 1862,
	63, 1862,
	64, 1862,
	65, 1862,
	66, 1862,
	67, 1862,
	71, 1862,
	72, 1862,
	73, 1862,
	74, 1862,
	76, 1862,
	77, 1862,
	78, 1862,
	82, 1862,
	83, 1862,
	84, 1862,
	85, 1862,
	86, 1862,
	87, 1862,
	88, 1862,
	89, 1862,
	92, 1862,
	93, 1862,
	94, 1862,
	95, 1862,
	96, 1862,
	98, 1862,
	100, 1862,
	101, 1862,
	102, 1862,
	103, 1862,
	104, 1862,
	105, 1862,
	107, 1862,
	108, 1862,
	109, 1862,
	111, 1862,
	112, 1862,
	113, 1862,
	121, 1862,
	122, 1862,
	123, 1862,
	124, 1862,
	125, 1862,
	127, 1862,
	128, 1862,
	129, 1862,
	130, 1862,
	132, 1862,
	133, 1862,
	134, 1862,
	136, 1862,
	137, 1862,
	138, 1862,
	140, 1862,
	141, 1862,
	142, 1862,
	145, 1862,
	146, 1862,
	147, 1862,
	149, 1862,
	150, 1862,
	151, 1862,
	153, 1862,
	154, 1862,
	155, 1862,
	157, 1862,
	158, 1862,
	159, 1862,
	160, 1862,
	161, 1862,
	162, 1862,
	163, 1862,
	164, 1862,
	165, 1862,
	166, 1862,
	167, 1862,
	168, 1862,
	169, 1862,
	170, 1862,
	171, 1862,
	172, 1862,
	173, 1862,
	175, 1862,
	181, 1862,
	182, 1862,
	183, 1862,
	184, 1862,
	188, 1862,
	190, 1862,
	191, 1862,
	192, 1862,
	194, 1862,
	195, 1862,
	198, 1862,
	199, 1862,
	200, 1862,
	201, 1862,
	202, 1862,
	203, 1862,
	204, 1862,
	205, 1862,
	206, 1862,
	207, 1862,
	208, 1862,
	209, 1862,
	210, 1862,
	211, 1862,
	213, 1862,
	214, 1862,
	216, 1862,
	217, 1862,
	219, 1862,
	220, 1862,
	221, 1862,
	222, 1862,
	223, 1862,
	224, 1862,
	225, 1862,
	226, 1862,
	227, 1862,
	228, 1862,
	229, 1862,
	231, 1862,
	232, 1862,
	234, 1862,
	235, 1862,
	236, 1862,
	237, 1862,
	238, 1862,
	242, 1862,
	243, 1862,
	244, 1862,
	245, 1862,
	248, 1862,
	249, 1862,
	250, 1862,
	251, 1862,
	253, 1862,
	255, 1862,
	256, 1862,
	258, 1862,
	260, 1862,
	261, 1862,
	262, 1862,
	264, 1862,
	268, 1862,
	269, 1862,
	270, 1862,
	271, 1862,
	272, 1862,
	273, 1862,
	275, 1862,
	276, 1862,
	277, 1862,
	279, 1862,
	280, 1862,
	282, 1862,
	283, 1862,
	286, 1862,
	287, 1862,
	288, 1862,
	289, 1862,
	290, 1862,
	291, 1862,
	292, 1862,
	295, 1862,
	296, 1862,
	297, 1862,
	298, 1862,
	300, 1862,
	301, 1862,
	302, 1862,
	303, 1862,
	304, 1862,
	305, 1862,
	306, 1862,
	307, 1862,
	308, 1862,
	309, 1862,
	310, 1862,
	311, 1862,
	312, 1862,
	313, 1862,
	314, 1862,
	315, 1862,
	316, 1862,
	317, 1862,
	318, 1862,
	319, 1862,
	320, 1862,
	321, 1862,
	322, 1862,
	324, 1862,
	326, 1862,
	327, 1862,
	328, 1862,
	329, 1862,
	330, 1862,
	331, 1862,
	332, 1862,
	333, 1862,
	334, 1862,
	335, 1862,
	336, 1862,
	337, 1862,
	338, 1862,
	339, 1862,
	340, 1862,
	341, 1862,
	342, 1862,
	344, 1862,
	345, 1862,
	347, 1862,
	349, 1862,
	350, 1862,
	351, 1862,
	352, 1862,
	354, 1862,
	355, 1862,
	356, 1862,
	357, 1862,
	358, 1862,
	361, 1862,
	363, 1862,
	366, 1862,
	367, 1862,
	368, 1862,
	371, 1862,
	372, 1862,
	373, 1862,
	375, 1862,
	377, 1862,
	378, 1862,
	379, 1862,
	380, 1862,
	381, 1862,
	382, 1862,
	383, 1862,
	384, 1862,
	385, 1862,
	386, 1862,
	387, 1862,
	388, 1862,
	389, 1862,
	391, 1862,
	392, 1862,
	393, 1862,
	394, 1862,
	395, 1862,
	396, 1862,
	397, 1862,
	398, 1862,
	399, 1862,
	400, 1862,
	401, 1862,
	402, 1862,
	403, 1862,
	404, 1862,
	405, 1862,
	407, 1862,
	408, 1862,
	409, 1862,
	411, 1862,
	412, 1862,
	413, 1862,
	414, 1862,
	415, 1862,
	416, 1862,
	417, 1862,
	418, 1862,
	419, 1862,
	420, 1862,
	421, 1862,
	422, 1862,
	423, 1862,
	424, 1862,
	426, 1862,
	428, 1862,
	429, 1862,
	430, 1862,
	436, 1862,
	437, 1862,
	438, 1862,
	440, 1862,
	441, 1862,
	442, 1862,
	443, 1862,
	444, 1862,
	445, 1862,
	446, 1862,
	447, 1862,
	448, 1862,
	449, 1862,
	451, 1862,
	452, 1862,
	453, 1862,
	455, 1862,
	456, 1862,
	457, 1862,
	458, 1862,
	459, 1862,
	460, 1862,
	461, 1862,
	463, 1862,
	464, 1862,
	465, 1862,
	466, 1862,
	467, 1862,
	468, 1862,
	469, 1862,
	470, 1862,
	471, 1862,
	472, 1862,
	473, 1862,
	474, 1862,
	475, 1862,
	477, 1862,
	478, 1862,
	479, 1862,
	480, 1862,
	481, 1862,
	482, 1862,
	484, 1862,
	485, 1862,
	486, 1862,
	487, 1862,
	488, 1862,
	489, 1862,
	491, 1862,
	492, 1862,
	493, 1862,
	494, 1862,
	495, 1862,
	496, 1862,
	497, 1862,
	498, 1862,
	500, 1862,
	502, 1862,
	503, 1862,
	504, 1862,
	505, 1862,
	506, 1862,
	507, 1862,
	508, 1862,
	509, 1862,
	510, 1862,
	511, 1862,
	512, 1862,
	513, 1862,
	514, 1862,
	515, 1862,
	516, 1862,
	517, 1862,
	518, 1862,
	519, 1862,
	520, 1862,
	522, 1862,
	523, 1862,
	525, 1862,
	526, 1862,
	528, 1862,
	529, 1862,
	530, 1862,
	531, 1862,
	532, 1862,
	533, 1862,
	535, 1862,
	536, 1862,
	538, 1862,
	539, 1862,
	540, 1862,
	541, 1862,
	542, 1862,
	544, 1862,
	546, 1862,
	547, 1862,
	548, 1862,
	549, 1862,
	550, 1862,
	551, 1862,
	552, 1862,
	554, 1862,
	555, 1862,
	556, 1862,
	557, 1862,
	559, 1862,
	560, 1862,
	563, 1862,
	564, 1862,
	565, 1862,
	566, 1862,
	567, 1862,
	568, 1862,
	569, 1862,
	570, 1862,
	572, 1862,
	575, 1862,
	576, 1862,
	577, 1862,
	578, 1862,
	579, 1862,
	580, 1862,
	582, 1862,
	583, 1862,
	584, 1862,
	585, 1862,
	586, 1862,
	587, 1862,
	588, 1862,
	589, 1862,
	594, 1862,
	595, 1862,
	596, 1862,
	597, 1862,
	598, 1862,
	599, 1862,
	-2, 0,
	-1, 970,
	272, 451,
	-2, 0,
	-1, 1049,
	413, 992,
	482, 992,
	526, 992,
	548, 992,
	-2, 0,
	-1, 1050,
	413, 991,
	482, 991,
	526, 991,
	548, 991,
	-2, 917,
	-1, 1054,
	1, 1044,
	630, 1044,
	632, 1044,
	634, 1044,
	-2, 0,
	-1, 1056,
	1, 966,
	630, 966,
	632, 966,
	634, 966,
	-2, 0,
	-1, 1057,
	1, 970,
	630, 970,
	632, 970,
	634, 970,
	-2, 0,
	-1, 1058,
	1, 1115,
	189, 1115,
	630, 1115,
	632, 1115,
	634, 1115,
	-2, 0,
	-1, 1066,
	1, 997,
	630, 997,
	632, 997,
	634, 997,
	-2, 0,
	-1, 1073,
	1, 1044,
	630, 1044,
	632, 1044,
	634, 1044,
	-2, 0,
	-1, 1074,
	1, 1046,
	630, 1046,
	632, 1046,
	634, 1046,
	-2, 0,
	-1, 1075,
	1, 1049,
	630, 1049,
	632, 1049,
	634, 1049,
	-2, 0,
	-1, 1083,
	1, 1079,
	630, 1079,
	632, 1079,
	634, 1079,
	-2, 0,
	-1, 1084,
	1, 1081,
	630, 1081,
	632, 1081,
	634, 1081,
	-2, 0,
	-1, 1089,
	1, 1109,
	630, 1109,
	632, 1109,
	634, 1109,
	-2, 0,
	-1, 1143,
	176, 1732,
	189, 1732,
	285, 1732,
	359, 1732,
	-2, 1668,
	-1, 1159,
	176, 1731,
	189, 1731,
	285, 1731,
	359, 1731,
	-2, 1665,
	-1, 1186,
	633, 2455,
	-2, 774,
	-1, 1215,
	5, 2447,
	631, 2445,
	-2, 2436,
	-1, 1223,
	5, 2468,
	631, 2465,
	-2, 2456,
	-1, 1224,
	5, 2469,
	631, 2466,
	-2, 2457,
	-1, 1232,
	633, 2453,
	-2, 2435,
	-1, 1233,
	631, 2923,
	-2, 2454,
	-1, 1256,
	631, 2922,
	-2, 2470,
	-1, 1257,
	5, 1937,
	-2, 2893,
	-1, 1258,
	5, 1938,
	-2, 2894,
	-1, 1259,
	5, 1939,
	-2, 2908,
	-1, 1260,
	5, 1940,
	-2, 2872,
	-1, 1261,
	5, 1941,
	-2, 2906,
	-1, 1262,
	5, 1949,
	-2, 2885,
	-1, 1263,
	5, 1936,
	-2, 2881,
	-1, 1264,
	5, 1936,
	-2, 2880,
	-1, 1265,
	5, 1936,
	-2, 2899,
	-1, 1266,
	5, 1947,
	-2, 2874,
	-1, 1267,
	5, 1952,
	-2, 2873,
	-1, 1268,
	5, 1954,
	-2, 2918,
	-1, 1271,
	5, 1976,
	-2, 2911,
	-1, 1272,
	5, 1968,
	-2, 2912,
	-1, 1273,
	5, 1976,
	-2, 2913,
	-1, 1274,
	5, 1972,
	-2, 2914,
	-1, 1275,
	5, 1922,
	-2, 2886,
	-1, 1276,
	5, 1923,
	-2, 2887,
	-1, 1277,
	5, 1924,
	-2, 2875,
	-1, 1305,
	5, 1959,
	-2, 2919,
	-1, 1306,
	5, 1960,
	-2, 2909,
	-1, 1307,
	5, 1961,
	583, 1961,
	-2, 2876,
	-1, 1308,
	5, 1962,
	583, 1962,
	-2, 2877,
	-1, 1346,
	631, 2465,
	-2, 2456,
	-1, 1347,
	631, 2466,
	-2, 2457,
	-1, 1445,
	196, 2835,
	543, 2835,
	613, 2835,
	633, 2835,
	-2, 0,
	-1, 1450,
	1, 750,
	634, 750,
	-2, 1577,
	-1, 1597,
	379, 2430,
	440, 2430,
	484, 2430,
	623, 2430,
	-2, 2420,
	-1, 1603,
	196, 147,
	279, 147,
	344, 147,
	589, 147,
	-2, 2831,
	-1, 1604,
	196, 148,
	279, 148,
	344, 148,
	589, 148,
	-2, 2569,
	-1, 1605,
	196, 149,
	279, 149,
	344, 149,
	589, 149,
	-2, 2752,
	-1, 1611,
	635, 2430,
	-2, 2432,
	-1, 1635,
	1, 1425,
	445, 1380,
	484, 1380,
	606, 1380,
	630, 1425,
	632, 1425,
	634, 1425,
	-2, 1717,
	-1, 1641,
	212, 1522,
	233, 1522,
	453, 1522,
	-2, 0,
	-1, 1690,
	422, 1199,
	582, 1199,
	-2, 446,
	-1, 1706,
	45, 2428,
	-2, 1162,
	-1, 1713,
	1, 1425,
	630, 1425,
	632, 1425,
	634, 1425,
	-2, 1717,
	-1, 1721,
	4, 1450,
	21, 1450,
	22, 1450,
	23, 1450,
	24, 1450,
	25, 1450,
	26, 1450,
	27, 1450,
	28, 1450,
	30, 1450,
	31, 1450,
	37, 1450,
	41, 1450,
	43, 1450,
	44, 1450,
	46, 1450,
	47, 1450,
	48, 1450,
	49, 1450,
	50, 1450,
	51, 1450,
	52, 1450,
	53, 1450,
	54, 1450,
	56, 1450,
	57, 1450,
	58, 1450,
	59, 1450,
	61, 1450,
	62, 1450,
	63, 1450,
	64, 1450,
	65, 1450,
	66, 1450,
	67, 1450,
	71, 1450,
	72, 1450,
	73, 1450,
	74, 1450,
	76, 1450,
	77, 1450,
	78, 1450,
	82, 1450,
	83, 1450,
	84, 1450,
	85, 1450,
	86, 1450,
	87, 1450,
	88, 1450,
	89, 1450,
	92, 1450,
	93, 1450,
	94, 1450,
	95, 1450,
	96, 1450,
	98, 1450,
	100, 1450,
	101, 1450,
	102, 1450,
	103, 1450,
	104, 1450,
	105, 1450,
	107, 1450,
	108, 1450,
	109, 1450,
	111, 1450,
	112, 1450,
	113, 1450,
	121, 1450,
	122, 1450,
	123, 1450,
	124, 1450,
	125, 1450,
	127, 1450,
	128, 1450,
	129, 1450,
	130, 1450,
	132, 1450,
	133, 1450,
	134, 1450,
	136, 1450,
	137, 1450,
	138, 1450,
	140, 1450,
	141, 1450,
	142, 1450,
	145, 1450,
	146, 1450,
	147, 1450,
	149, 1450,
	150, 1450,
	151, 1450,
	153, 1450,
	154, 1450,
	155, 1450,
	157, 1450,
	158, 1450,
	159, 1450,
	160, 1450,
	161, 1450,
	162, 1450,
	163, 1450,
	164, 1450,
	165, 1450,
	166, 1450,
	167, 1450,
	168, 1450,
	169, 1450,
	170, 1450,
	171, 1450,
	172, 1450,
	173, 1450,
	181, 1450,
	182, 1450,
	183, 1450,
	184, 1450,
	188, 1450,
	190, 1450,
	191, 1450,
	192, 1450,
	194, 1450,
	195, 1450,
	198, 1450,
	199, 1450,
	200, 1450,
	201, 1450,
	202, 1450,
	203, 1450,
	204, 1450,
	205, 1450,
	206, 1450,
	207, 1450,
	208, 1450,
	209, 1450,
	210, 1450,
	211, 1450,
	213, 1450,
	214, 1450,
	216, 1450,
	217, 1450,
	219, 1450,
	220, 1450,
	221, 1450,
	222, 1450,
	223, 1450,
	224, 1450,
	225, 1450,
	226, 1450,
	227, 1450,
	228, 1450,
	229, 1450,
	231, 1450,
	232, 1450,
	234, 1450,
	235, 1450,
	236, 1450,
	237, 1450,
	238, 1450,
	243, 1450,
	244, 1450,
	245, 1450,
	248, 1450,
	249, 1450,
	250, 1450,
	251, 1450,
	253, 1450,
	255, 1450,
	256, 1450,
	258, 1450,
	260, 1450,
	261, 1450,
	262, 1450,
	264, 1450,
	268, 1450,
	269, 1450,
	270, 1450,
	271, 1450,
	272, 1450,
	273, 1450,
	275, 1450,
	276, 1450,
	277, 1450,
	279, 1450,
	280, 1450,
	282, 1450,
	283, 1450,
	286, 1450,
	287, 1450,
	288, 1450,
	289, 1450,
	290, 1450,
	291, 1450,
	292, 1450,
	295, 1450,
	296, 1450,
	297, 1450,
	298, 1450,
	300, 1450,
	301, 1450,
	302, 1450,
	303, 1450,
	304, 1450,
	305, 1450,
	306, 1450,
	307, 1450,
	308, 1450,
	309, 1450,
	310, 1450,
	311, 1450,
	312, 1450,
	313, 1450,
	314, 1450,
	315, 1450,
	316, 1450,
	317, 1450,
	318, 1450,
	319, 1450,
	320, 1450,
	321, 1450,
	322, 1450,
	324, 1450,
	326, 1450,
	327, 1450,
	328, 1450,
	329, 1450,
	330, 1450,
	331, 1450,
	332, 1450,
	333, 1450,
	334, 1450,
	335, 1450,
	336, 1450,
	337, 1450,
	338, 1450,
	339, 1450,
	340, 1450,
	341, 1450,
	342, 1450,
	344, 1450,
	345, 1450,
	349, 1450,
	350, 1450,
	351, 1450,
	352, 1450,
	354, 1450,
	355, 1450,
	356, 1450,
	357, 1450,
	358, 1450,
	361, 1450,
	363, 1450,
	364, 1450,
	366, 1450,
	367, 1450,
	368, 1450,
	371, 1450,
	372, 1450,
	373, 1450,
	375, 1450,
	377, 1450,
	378, 1450,
	379, 1450,
	380, 1450,
	381, 1450,
	382, 1450,
	383, 1450,
	384, 1450,
	385, 1450,
	386, 1450,
	387, 1450,
	388, 1450,
	389, 1450,
	391, 1450,
	392, 1450,
	393, 1450,
	394, 1450,
	395, 1450,
	396, 1450,
	397, 1450,
	398, 1450,
	399, 1450,
	400, 1450,
	401, 1450,
	402, 1450,
	403, 1450,
	404, 1450,
	405, 1450,
	407, 1450,
	408, 1450,
	409, 1450,
	411, 1450,
	412, 1450,
	413, 1450,
	414, 1450,
	415, 1450,
	416, 1450,
	417, 1450,
	418, 1450,
	419, 1450,
	420, 1450,
	421, 1450,
	422, 1450,
	423, 1450,
	424, 1450,
	426, 1450,
	428, 1450,
	429, 1450,
	430, 1450,
	436, 1450,
	437, 1450,
	438, 1450,
	440, 1450,
	441, 1450,
	442, 1450,
	443, 1450,
	444, 1450,
	445, 1450,
	446, 1450,
	447, 1450,
	448, 1450,
	449, 1450,
	451, 1450,
	452, 1450,
	453, 1450,
	455, 1450,
	456, 1450,
	457, 1450,
	458, 1450,
	459, 1450,
	460, 1450,
	461, 1450,
	463, 1450,
	464, 1450,
	465, 1450,
	466, 1450,
	467, 1450,
	468, 1450,
	469, 1450,
	470, 1450,
	471, 1450,
	472, 1450,
	473, 1450,
	474, 1450,
	475, 1450,
	477, 1450,
	478, 1450,
	479, 1450,
	480, 1450,
	481, 1450,
	482, 1450,
	484, 1450,
	485, 1450,
	486, 1450,
	487, 1450,
	488, 1450,
	489, 1450,
	491, 1450,
	492, 1450,
	493, 1450,
	494, 1450,
	495, 1450,
	496, 1450,
	497, 1450,
	498, 1450,
	500, 1450,
	502, 1450,
	503, 1450,
	504, 1450,
	505, 1450,
	506, 1450,
	507, 1450,
	508, 1450,
	509, 1450,
	510, 1450,
	511, 1450,
	512, 1450,
	513, 1450,
	514, 1450,
	515, 1450,
	516, 1450,
	517, 1450,
	518, 1450,
	519, 1450,
	520, 1450,
	522, 1450,
	523, 1450,
	525, 1450,
	526, 1450,
	528, 1450,
	529, 1450,
	530, 1450,
	531, 1450,
	532, 1450,
	533, 1450,
	535, 1450,
	536, 1450,
	538, 1450,
	539, 1450,
	540, 1450,
	541, 1450,
	542, 1450,
	544, 1450,
	546, 1450,
	547, 1450,
	548, 1450,
	549, 1450,
	550, 1450,
	551, 1450,
	552, 1450,
	554, 1450,
	555, 1450,
	556, 1450,
	557, 1450,
	559, 1450,
	560, 1450,
	563, 1450,
	564, 1450,
	565, 1450,
	566, 1450,
	567, 1450,
	568, 1450,
	569, 1450,
	570, 1450,
	572, 1450,
	575, 1450,
	576, 1450,
	577, 1450,
	578, 1450,
	579, 1450,
	580, 1450,
	582, 1450,
	583, 1450,
	584, 1450,
	585, 1450,
	586, 1450,
	587, 1450,
	588, 1450,
	589, 1450,
	594, 1450,
	595, 1450,
	596, 1450,
	597, 1450,
	598, 1450,
	599, 1450,
	-2, 0,
	-1, 1744,
	1, 585,
	630, 585,
	632, 585,
	634, 585,
	-2, 1688,
	-1, 1747,
	4, 2917,
	11, 2917,
	12, 2917,
	14, 2917,
	15, 2917,
	16, 2917,
	17, 2917,
	18, 2917,
	19, 2917,
	21, 2917,
	22, 2917,
	23, 2917,
	24, 2917,
	25, 2917,
	26, 2917,
	27, 2917,
	28, 2917,
	30, 2917,
	31, 2917,
	34, 2917,
	35, 2917,
	37, 2917,
	39, 2917,
	41, 2917,
	43, 2917,
	44, 2917,
	46, 2917,
	47, 2917,
	48, 2917,
	49, 2917,
	50, 2917,
	51, 2917,
	52, 2917,
	53, 2917,
	54, 2917,
	56, 2917,
	57, 2917,
	58, 2917,
	59, 2917,
	61, 2917,
	62, 2917,
	63, 2917,
	64, 2917,
	65, 2917,
	66, 2917,
	67, 2917,
	70, 2917,
	71, 2917,
	72, 2917,
	73, 2917,
	74, 2917,
	76, 2917,
	77, 2917,
	78, 2917,
	79, 2917,
	82, 2917,
	83, 2917,
	84, 2917,
	85, 2917,
	86, 2917,
	87, 2917,
	88, 2917,
	89, 2917,
	90, 2917,
	92, 2917,
	93, 2917,
	94, 2917,
	95, 2917,
	96, 2917,
	98, 2917,
	99, 2917,
	100, 2917,
	101, 2917,
	102, 2917,
	103, 2917,
	104, 2917,
	105, 2917,
	107, 2917,
	108, 2917,
	109, 2917,
	110, 2917,
	111, 2917,
	112, 2917,
	113, 2917,
	121, 2917,
	122, 2917,
	123, 2917,
	124, 2917,
	125, 2917,
	127, 2917,
	128, 2917,
	129, 2917,
	130, 2917,
	132, 2917,
	133, 2917,
	134, 2917,
	136, 2917,
	137, 2917,
	138, 2917,
	140, 2917,
	141, 2917,
	142, 2917,
	145, 2917,
	146, 2917,
	147, 2917,
	149, 2917,
	150, 2917,
	151, 2917,
	153, 2917,
	154, 2917,
	155, 2917,
	157, 2917,
	158, 2917,
	159, 2917,
	160, 2917,
	161, 2917,
	162, 2917,
	163, 2917,
	164, 2917,
	165, 2917,
	166, 2917,
	167, 2917,
	168, 2917,
	169, 2917,
	170, 2917,
	171, 2917,
	172, 2917,
	173, 2917,
	177, 2917,
	178, 2917,
	179, 2917,
	180, 2917,
	181, 2917,
	182, 2917,
	183, 2917,
	184, 2917,
	187, 2917,
	188, 2917,
	190, 2917,
	191, 2917,
	192, 2917,
	194, 2917,
	195, 2917,
	197, 2917,
	198, 2917,
	199, 2917,
	200, 2917,
	201, 2917,
	202, 2917,
	203, 2917,
	204, 2917,
	205, 2917,
	206, 2917,
	207, 2917,
	208, 2917,
	209, 2917,
	210, 2917,
	211, 2917,
	213, 2917,
	214, 2917,
	216, 2917,
	217, 2917,
	219, 2917,
	220, 2917,
	221, 2917,
	222, 2917,
	223, 2917,
	224, 2917,
	225, 2917,
	226, 2917,
	227, 2917,
	228, 2917,
	229, 2917,
	230, 2917,
	231, 2917,
	232, 2917,
	233, 2917,
	234, 2917,
	235, 2917,
	236, 2917,
	237, 2917,
	238, 2917,
	240, 2917,
	241, 2917,
	243, 2917,
	244, 2917,
	245, 2917,
	247, 2917,
	248, 2917,
	249, 2917,
	250, 2917,
	251, 2917,
	253, 2917,
	255, 2917,
	256, 2917,
	257, 2917,
	258, 2917,
	259, 2917,
	260, 2917,
	261, 2917,
	262, 2917,
	263, 2917,
	264, 2917,
	266, 2917,
	267, 2917,
	268, 2917,
	269, 2917,
	270, 2917,
	271, 2917,
	272, 2917,
	273, 2917,
	275, 2917,
	276, 2917,
	277, 2917,
	279, 2917,
	280, 2917,
	281, 2917,
	282, 2917,
	283, 2917,
	284, 2917,
	286, 2917,
	287, 2917,
	288, 2917,
	289, 2917,
	290, 2917,
	291, 2917,
	292, 2917,
	295, 2917,
	296, 2917,
	297, 2917,
	298, 2917,
	299, 2917,
	300, 2917,
	301, 2917,
	302, 2917,
	303, 2917,
	304, 2917,
	305, 2917,
	306, 2917,
	307, 2917,
	308, 2917,
	309, 2917,
	310, 2917,
	311, 2917,
	312, 2917,
	313, 2917,
	314, 2917,
	315, 2917,
	316, 2917,
	317, 2917,
	318, 2917,
	319, 2917,
	320, 2917,
	321, 2917,
	322, 2917,
	324, 2917,
	325, 2917,
	326, 2917,
	327, 2917,
	328, 2917,
	329, 2917,
	330, 2917,
	331, 2917,
	332, 2917,
	333, 2917,
	334, 2917,
	335, 2917,
	336, 2917,
	337, 2917,
	338, 2917,
	339, 2917,
	340, 2917,
	341, 2917,
	342, 2917,
	344, 2917,
	345, 2917,
	348, 2917,
	349, 2917,
	350, 2917,
	351, 2917,
	352, 2917,
	354, 2917,
	355, 2917,
	356, 2917,
	357, 2917,
	358, 2917,
	361, 2917,
	363, 2917,
	366, 2917,
	367, 2917,
	368, 2917,
	369, 2917,
	371, 2917,
	372, 2917,
	373, 2917,
	375, 2917,
	377, 2917,
	378, 2917,
	379, 2917,
	380, 2917,
	381, 2917,
	382, 2917,
	383, 2917,
	384, 2917,
	385, 2917,
	386, 2917,
	387, 2917,
	388, 2917,
	389, 2917,
	391, 2917,
	392, 2917,
	393, 2917,
	394, 2917,
	395, 2917,
	396, 2917,
	397, 2917,
	398, 2917,
	399, 2917,
	400, 2917,
	401, 2917,
	402, 2917,
	403, 2917,
	404, 2917,
	405, 2917,
	407, 2917,
	408, 2917,
	409, 2917,
	411, 2917,
	412, 2917,
	413, 2917,
	414, 2917,
	415, 2917,
	416, 2917,
	417, 2917,
	418, 2917,
	419, 2917,
	420, 2917,
	421, 2917,
	422, 2917,
	423, 2917,
	424, 2917,
	426, 2917,
	428, 2917,
	429, 2917,
	430, 2917,
	436, 2917,
	437, 2917,
	438, 2917,
	439, 2917,
	440, 2917,
	441, 2917,
	442, 2917,
	443, 2917,
	444, 2917,
	445, 2917,
	446, 2917,
	447, 2917,
	448, 2917,
	449, 2917,
	451, 2917,
	452, 2917,
	453, 2917,
	454, 2917,
	455, 2917,
	456, 2917,
	457, 2917,
	458, 2917,
	459, 2917,
	460, 2917,
	461, 2917,
	462, 2917,
	463, 2917,
	464, 2917,
	465, 2917,
	466, 2917,
	467, 2917,
	468, 2917,
	469, 2917,
	470, 2917,
	471, 2917,
	472, 2917,
	473, 2917,
	474, 2917,
	475, 2917,
	477, 2917,
	478, 2917,
	479, 2917,
	480, 2917,
	481, 2917,
	482, 2917,
	484, 2917,
	485, 2917,
	486, 2917,
	487, 2917,
	488, 2917,
	489, 2917,
	490, 2917,
	491, 2917,
	492, 2917,
	493, 2917,
	494, 2917,
	495, 2917,
	496, 2917,
	497, 2917,
	498, 2917,
	500, 2917,
	502, 2917,
	503, 2917,
	504, 2917,
	505, 2917,
	506, 2917,
	507, 2917,
	508, 2917,
	509, 2917,
	510, 2917,
	511, 2917,
	512, 2917,
	513, 2917,
	514, 2917,
	515, 2917,
	516, 2917,
	517, 2917,
	518, 2917,
	519, 2917,
	520, 2917,
	522, 2917,
	523, 2917,
	524, 2917,
	525, 2917,
	526, 2917,
	528, 2917,
	529, 2917,
	530, 2917,
	531, 2917,
	532, 2917,
	533, 2917,
	535, 2917,
	536, 2917,
	538, 2917,
	539, 2917,
	540, 2917,
	541, 2917,
	542, 2917,
	544, 2917,
	546, 2917,
	547, 2917,
	548, 2917,
	549, 2917,
	550, 2917,
	551, 2917,
	552, 2917,
	554, 2917,
	555, 2917,
	556, 2917,
	557, 2917,
	559, 2917,
	560, 2917,
	563, 2917,
	564, 2917,
	565, 2917,
	566, 2917,
	567, 2917,
	568, 2917,
	569, 2917,
	570, 2917,
	572, 2917,
	575, 2917,
	576, 2917,
	577, 2917,
	578, 2917,
	579, 2917,
	580, 2917,
	582, 2917,
	583, 2917,
	584, 2917,
	585, 2917,
	586, 2917,
	587, 2917,
	588, 2917,
	589, 2917,
	594, 2917,
	595, 2917,
	596, 2917,
	597, 2917,
	598, 2917,
	599, 2917,
	600, 2917,
	602, 2917,
	611, 2917,
	612, 2917,
	613, 2917,
	614, 2917,
	615, 2917,
	616, 2917,
	618, 2917,
	619, 2917,
	620, 2917,
	621, 2917,
	622, 2917,
	623, 2917,
	624, 2917,
	625, 2917,
	626, 2917,
	629, 2917,
	632, 2917,
	633, 2917,
	635, 2917,
	636, 2917,
	-2, 0,
	-1, 1752,
	196, 2791,
	543, 2791,
	613, 2791,
	633, 2791,
	-2, 0,
	-1, 1806,
	413, 992,
	482, 992,
	526, 992,
	548, 992,
	-2, 0,
	-1, 1817,
	1, 1522,
	630, 1522,
	632, 1522,
	634, 1522,
	-2, 0,
	-1, 1834,
	1, 987,
	630, 987,
	632, 987,
	634, 987,
	-2, 0,
	-1, 1835,
	1, 1031,
	630, 1031,
	632, 1031,
	634, 1031,
	-2, 0,
	-1, 1836,
	1, 1039,
	630, 1039,
	632, 1039,
	634, 1039,
	-2, 0,
	-1, 1839,
	1, 996,
	630, 996,
	632, 996,
	634, 996,
	-2, 0,
	-1, 1841,
	1, 1002,
	630, 1002,
	632, 1002,
	634, 1002,
	-2, 0,
	-1, 1844,
	1, 998,
	630, 998,
	632, 998,
	634, 998,
	-2, 0,
	-1, 1849,
	1, 1012,
	630, 1012,
	632, 1012,
	634, 1012,
	-2, 0,
	-1, 1883,
	1, 2773,
	630, 2773,
	632, 2773,
	633, 2773,
	634, 2773,
	-2, 0,
	-1, 1887,
	1, 1090,
	630, 1090,
	632, 1090,
	634, 1090,
	-2, 0,
	-1, 1904,
	1, 1572,
	634, 1572,
	-2, 1577,
	-1, 1907,
	176, 1731,
	189, 1731,
	285, 1731,
	359, 1731,
	-2, 1669,
	-1, 2007,
	156, 1690,
	176, 1690,
	189, 1690,
	252, 1690,
	285, 1690,
	359, 1690,
	370, 1690,
	561, 1690,
	-2, 2141,
	-1, 2068,
	632, 2316,
	-2, 0,
	-1, 2104,
	156, 1690,
	176, 1690,
	189, 1690,
	252, 1690,
	285, 1690,
	359, 1690,
	370, 1690,
	561, 1690,
	-2, 1823,
	-1, 2144,
	543, 2788,
	633, 2788,
	636, 2788,
	-2, 0,
	-1, 2161,
	631, 1964,
	-2, 1952,
	-1, 2193,
	196, 2788,
	633, 2788,
	636, 2788,
	-2, 0,
	-1, 2236,
	1, 752,
	634, 752,
	-2, 1577,
	-1, 2411,
	233, 282,
	-2, 2464,
	-1, 2412,
	233, 283,
	-2, 338,
	-1, 2522,
	1, 989,
	630, 989,
	632, 989,
	634, 989,
	-2, 0,
	-1, 2523,
	1, 1033,
	630, 1033,
	632, 1033,
	634, 1033,
	-2, 0,
	-1, 2524,
	1, 1041,
	630, 1041,
	632, 1041,
	634, 1041,
	-2, 0,
	-1, 2525,
	1, 1092,
	630, 1092,
	632, 1092,
	634, 1092,
	-2, 0,
	-1, 2566,
	1, 1014,
	630, 1014,
	632, 1014,
	634, 1014,
	-2, 0,
	-1, 2588,
	1, 1075,
	630, 1075,
	632, 1075,
	634, 1075,
	-2, 0,
	-1, 2635,
	460, 1758,
	461, 1758,
	-2, 1997,
	-1, 2666,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2017,
	-1, 2667,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2018,
	-1, 2668,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2019,
	-1, 2669,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2020,
	-1, 2670,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2021,
	-1, 2671,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2022,
	-1, 2672,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2023,
	-1, 2673,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2024,
	-1, 2685,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2036,
	-1, 2686,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2037,
	-1, 2687,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2038,
	-1, 2691,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2045,
	-1, 2697,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2049,
	-1, 2699,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2057,
	-1, 2700,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2058,
	-1, 2701,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2059,
	-1, 2702,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2060,
	-1, 2876,
	5, 2468,
	196, 2327,
	631, 2465,
	-2, 2456,
	-1, 2877,
	196, 2328,
	-2, 2868,
	-1, 2878,
	196, 2329,
	-2, 2666,
	-1, 2879,
	196, 2330,
	-2, 2542,
	-1, 2880,
	196, 2331,
	-2, 2604,
	-1, 2881,
	196, 2332,
	-2, 2651,
	-1, 2882,
	196, 2333,
	-2, 2786,
	-1, 2883,
	196, 2334,
	-2, 2124,
	-1, 2955,
	1, 1824,
	2, 1824,
	110, 1824,
	156, 1824,
	176, 1824,
	189, 1824,
	197, 1824,
	215, 1824,
	218, 1824,
	247, 1824,
	252, 1824,
	263, 1824,
	281, 1824,
	285, 1824,
	325, 1824,
	359, 1824,
	364, 1824,
	370, 1824,
	450, 1824,
	454, 1824,
	561, 1824,
	573, 1824,
	591, 1824,
	592, 1824,
	593, 1824,
	603, 1824,
	630, 1824,
	632, 1824,
	634, 1824,
	636, 1824,
	-2, 1823,
	-1, 2968,
	631, 2437,
	-2, 2451,
	-1, 2970,
	1, 355,
	591, 355,
	-2, 1717,
	-1, 3000,
	631, 1963,
	-2, 1953,
	-1, 3215,
	1, 1425,
	445, 1380,
	484, 1380,
	606, 1380,
	630, 1425,
	632, 1425,
	634, 1425,
	-2, 1717,
	-1, 3395,
	365, 1761,
	-2, 2907,
	-1, 3396,
	365, 1762,
	-2, 2770,
	-1, 3400,
	460, 2393,
	461, 2393,
	-2, 2122,
	-1, 3401,
	460, 2397,
	461, 2397,
	-2, 2123,
	-1, 3402,
	460, 2394,
	461, 2394,
	-2, 2122,
	-1, 3403,
	460, 2398,
	461, 2398,
	-2, 2123,
	-1, 3416,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2047,
	-1, 3417,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2051,
	-1, 3423,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2053,
	-1, 3650,
	1, 747,
	630, 747,
	632, 747,
	634, 747,
	-2, 1577,
	-1, 3848,
	45, 2428,
	-2, 1163,
	-1, 3853,
	1, 1425,
	630, 1425,
	632, 1425,
	634, 1425,
	-2, 1717,
	-1, 3962,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2055,
	-1, 3969,
	257, 0,
	259, 0,
	348, 0,
	-2, 2074,
	-1, 4037,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2103,
	-1, 4038,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2104,
	-1, 4039,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2105,
	-1, 4043,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2109,
	-1, 4044,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2110,
	-1, 4045,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2111,
	-1, 4093,
	631, 2438,
	-2, 2452,
	-1, 4308,
	633, 3024,
	-2, 1643,
	-1, 4367,
	257, 0,
	259, 0,
	348, 0,
	-2, 2075,
	-1, 4370,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2078,
	-1, 4371,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2080,
	-1, 4494,
	633, 2453,
	-2, 1460,
	-1, 4652,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2079,
	-1, 4653,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2081,
	-1, 4664,
	257, 0,
	-2, 2114,
	-1, 4855,
	257, 0,
	-2, 2115,
	-1, 5072,
	53, 0,
	230, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2871,
}

const sqlPrivate = 57344

const sqlLast = 147089

var sqlAct = [...]int{
	291, 3288, 5008, 5007, 5263, 3554, 4896, 5190, 4725, 1426,
	3139, 5134, 3169, 5118, 5058, 5071, 4948, 5204, 3835, 4904,
	4964, 5084, 3834, 1215, 5022, 5041, 2408, 5085, 4998, 5019,
	5086, 4350, 5143, 4804, 1482, 4824, 4791, 4775, 4002, 5082,
	2296, 4859, 3846, 4611, 4606, 4545, 4600, 4110, 5070, 4572,
	2485, 3954, 3676, 1350, 4730, 3258, 4673, 2645, 1418, 4641,
	1621, 2497, 1222, 4300, 4292, 3870, 1339, 4933, 4217, 4810,
	3679, 4491, 4471, 1423, 1221, 3819, 2908, 3409, 2205, 2714,
	894, 3072, 755, 1416, 3310, 2495, 1169, 4616, 1651, 2218,
	3154, 1916, 2128, 3864, 4267, 4250, 2653, 2148, 3682, 4248,
	3808, 1160, 3071, 4669, 3898, 3277, 2305, 894, 3739, 3900,
	1409, 3274, 1501, 3247, 3824, 3664, 3823, 827, 2110, 3666,
	3272, 3665, 3801, 3826, 2646, 1770, 3800, 3560, 4096, 3577,
	2458, 2982, 3600, 4490, 972, 3305, 3569, 1594, 4349, 766,
	3289, 3537, 4406, 3558, 2397, 3222, 1768, 2384, 1168, 190,
	2079, 2395, 3607, 968, 4, 5119, 2333, 3170, 2317, 3703,
	285, 891, 284, 4063, 3536, 2650, 4860, 2054, 2015, 1985,
	3393, 963, 2948, 2727, 3304, 2950, 2446, 1708, 2396, 2493,
	1421, 1198, 2792, 823, 2794, 1330, 889, 3184, 2382, 2355,
	2362, 2288, 2374, 3259, 1219, 2284, 1465, 2216, 2783, 1395,
	1904, 2928, 2711, 1814, 1224, 1226, 2905, 1484, 2634, 2617,
	800, 2615, 2080, 2983, 1745, 3282, 2947, 1711, 2377, 895,
	3097, 3096, 1623, 2445, 3011, 896, 3827, 742, 3057, 4965,
	1452, 764, 2786, 2918, 1333, 1043, 2089, 2099, 2937, 1312,
	900, 2096, 903, 2764, 843, 1187, 2838, 190, 2872, 1480,
	115, 200, 1918, 1999, 1347, 2049, 201, 1406, 1849, 1917,
	2405, 2616, 2618, 819, 1329, 808, 1834, 900, 989, 903,
	1645, 1743, 2471, 1736, 119, 105, 2386, 1345, 1602, 756,
	2639, 768, 5135, 5191, 1200, 759, 46, 45, 43, 884,
	783, 34, 944, 1477, 32, 30, 1335, 1310, 1903, 3446,
	1064, 1923, 1657, 945, 4077, 3440, 4078, 5274, 2207, 2149,
	2207, 2927, 3556, 4111, 836, 839, 1342, 2207, 5266, 2207,
	2207, 2207, 3781, 5254, 78, 5080, 4698, 2927, 1341, 1931,
	1932, 4695, 1964, 1965, 1966, 1975, 1976, 1977, 1164, 5253,
	5223, 5221, 79, 2927, 4729, 4729, 5164, 5120, 3880, 1164,
	2417, 5121, 1968, 1962, 5110, 4692, 2228, 3879, 2927, 84,
	5108, 1934, 5105, 5102, 2927, 5068, 5106, 5103, 5067, 2417,
	5066, 1981, 2417, 3253, 3315, 5056, 5054, 1671, 1650, 4729,
	4729, 1327, 5045, 5044, 3635, 5017, 4729, 4729, 1987, 4729,
	4984, 4977, 4976, 1461, 2991, 2927, 2927, 1933, 4969, 4947,
	92, 4944, 2417, 2417, 1461, 4729, 4926, 4857, 1953, 4838,
	4562, 2991, 4806, 4326, 4748, 4747, 4144, 1950, 2417, 2417,
	4736, 1313, 1313, 4442, 2417, 4735, 2494, 3507, 3508, 4729,
	3525, 3526, 3527, 1840, 1153, 1343, 4728, 4067, 3617, 4680,
	4729, 970, 1144, 2417, 3632, 4654, 3455, 1143, 2225, 2991,
	4365, 4627, 3456, 1165, 51, 3315, 114, 4624, 2920, 2486,
	4540, 3781, 98, 111, 2927, 4518, 2228, 4369, 4316, 2927,
	4310, 2991, 3893, 4264, 3893, 4175, 4143, 4265, 4088, 4176,
	4144, 4086, 4089, 4070, 3986, 4087, 3982, 2927, 2417, 3892,
	2927, 2987, 3781, 3893, 3013, 1956, 1957, 1958, 1959, 3553,
	3548, 1159, 3252, 2927, 2927, 1939, 3522, 3547, 3498, 3496,
	3488, 2927, 3499, 3497, 3489, 3486, 3457, 3314, 3299, 2927,
	2927, 3315, 2481, 3298, 3036, 2990, 99, 2481, 2927, 2991,
	1373, 2225, 2980, 2972, 2228, 2926, 2927, 2417, 98, 2927,
	3507, 3508, 2480, 2417, 1314, 1365, 2481, 1316, 1972, 1317,
	2228, 1982, 3408, 2927, 4985, 4861, 4852, 4840, 1961, 1963,
	2740, 2741, 2742, 2759, 2760, 2761, 3315, 251, 4067, 2919,
	4604, 4562, 2225, 4519, 4326, 1978, 4266, 1979, 3146, 3056,
	2310, 2762, 2242, 2206, 1948, 1949, 2222, 2228, 3252, 1366,
	2416, 3164, 3047, 2075, 1644, 4193, 3957, 3929, 2097, 2367,
	1816, 1670, 1970, 3513, 2927, 3881, 2964, 2963, 2962, 2961,
	2960, 1318, 251, 3267, 1315, 3445, 1987, 1954, 253, 3522,
	1659, 1152, 1151, 1150, 1149, 3882, 1650, 1148, 1147, 1146,
	1142, 964, 1141, 1140, 1139, 1138, 2752, 1137, 1366, 2789,
	3364, 2461, 1136, 1135, 1134, 2748, 1133, 1132, 1131, 1130,
	1129, 1128, 1127, 1126, 1125, 1124, 1123, 3507, 3508, 78,
	1105, 967, 966, 253, 1041, 1040, 1980, 1039, 1038, 252,
	1037, 1036, 1035, 3529, 1034, 1033, 1032, 79, 1031, 1030,
	103, 1029, 1028, 1027, 245, 1026, 1025, 1969, 2208, 1024,
	2208, 1023, 1022, 246, 84, 1021, 1020, 2208, 1984, 2208,
	2208, 2208, 1019, 1018, 1017, 1016, 1015, 1014, 1013, 1012,
	1011, 1010, 1780, 1009, 252, 3523, 3513, 1761, 1658, 1008,
	1007, 1006, 202, 2753, 2754, 2755, 2756, 1005, 1665, 994,
	993, 992, 987, 2747, 986, 92, 2790, 979, 3285, 198,
	106, 978, 977, 110, 962, 961, 919, 918, 917, 916,
	907, 906, 905, 2558, 904, 3252, 866, 1960, 865, 834,
	833, 832, 814, 4720, 4424, 2225, 2225, 202, 279, 5095,
	251, 2225, 278, 3507, 3508, 277, 970, 276, 971, 275,
	1955, 274, 273, 158, 272, 271, 3064, 270, 3879, 51,
	269, 114, 268, 267, 266, 265, 1984, 98, 111, 264,
	263, 1428, 1224, 262, 3507, 3508, 261, 260, 1973, 259,
	258, 257, 2757, 2758, 256, 255, 254, 4381, 2791, 4120,
	2788, 253, 4082, 4618, 1366, 3894, 3603, 3468, 3523, 1224,
	1224, 1224, 3451, 3513, 3442, 3344, 3232, 2057, 2995, 2969,
	2954, 2100, 1986, 2821, 2056, 2750, 251, 2819, 163, 2607,
	2269, 251, 2227, 2805, 2803, 2057, 2123, 2026, 1898, 158,
	1653, 99, 2056, 1473, 203, 3064, 3551, 1349, 5094, 1784,
	1504, 1930, 252, 2060, 1224, 2024, 3269, 2228, 3524, 3023,
	1224, 1626, 1224, 5091, 2225, 1428, 2206, 245, 2225, 2222,
	2610, 2055, 4843, 5069, 1635, 5053, 246, 253, 2919, 1659,
	199, 4952, 253, 4849, 1659, 1659, 4841, 251, 1456, 1984,
	1224, 3552, 1224, 4864, 1224, 1469, 1470, 1471, 1971, 1765,
	4668, 1626, 4625, 4603, 2017, 202, 2424, 3507, 3508, 1945,
	1946, 1952, 1974, 1951, 1947, 4448, 1944, 1942, 1943, 1935,
	1936, 1937, 1938, 1940, 1941, 3523, 1428, 4404, 252, 3513,
	4391, 4403, 1664, 252, 4390, 1713, 4397, 4396, 253, 1612,
	4395, 4388, 4387, 245, 1607, 4181, 1626, 4385, 245, 4380,
	1366, 4377, 246, 1626, 4376, 4263, 4277, 246, 4124, 1434,
	3513, 4123, 1224, 1599, 1224, 4122, 4092, 2793, 4058, 1626,
	4057, 3524, 4056, 3978, 1400, 1403, 3973, 3598, 1224, 3544,
	1224, 202, 4866, 3535, 1167, 1448, 202, 1326, 2751, 252,
	3506, 3503, 1413, 3502, 3500, 103, 3495, 1648, 3494, 3493,
	3490, 1842, 3487, 1450, 245, 3467, 1984, 3519, 3520, 3521,
	3450, 1717, 1720, 246, 3518, 3516, 3517, 3509, 3510, 3511,
	3512, 3514, 3515, 4620, 3062, 3443, 3441, 3300, 5269, 1626,
	2955, 2776, 1931, 1932, 1497, 1930, 1591, 1596, 900, 2019,
	903, 1723, 202, 2017, 1633, 1931, 1932, 1929, 5212, 1224,
	1986, 2422, 1224, 5211, 198, 106, 1962, 5133, 110, 5131,
	1351, 4004, 1442, 251, 1934, 5009, 3507, 3508, 4278, 1476,
	4931, 3268, 3523, 2018, 4916, 2016, 4912, 1934, 1487, 1488,
	4911, 4910, 4890, 3513, 4889, 251, 4887, 4863, 3524, 4862,
	2787, 1987, 4836, 971, 2717, 190, 190, 1647, 158, 4822,
	1933, 4191, 4819, 1646, 1706, 3061, 4818, 1629, 4802, 4801,
	4744, 1953, 4715, 1933, 253, 4666, 1785, 4649, 1748, 1750,
	1479, 4648, 1984, 3004, 1489, 1490, 4592, 3518, 3516, 3517,
	3509, 3510, 3511, 3512, 3514, 3515, 253, 2737, 2738, 2739,
	2763, 2749, 2743, 4588, 2745, 2746, 2744, 2731, 2732, 2733,
	2734, 2735, 2736, 1984, 4585, 1224, 1224, 1224, 1224, 1224,
	1224, 1224, 1224, 163, 4563, 252, 251, 4423, 1746, 4402,
	4327, 251, 251, 4179, 4178, 1456, 3549, 4159, 1456, 203,
	245, 4158, 251, 4156, 3061, 3061, 4073, 252, 1224, 246,
	4061, 3968, 2004, 3895, 1224, 3523, 1165, 3889, 1956, 1957,
	1958, 1959, 245, 3507, 3508, 1739, 3856, 251, 1939, 1931,
	1932, 246, 3761, 2462, 2723, 199, 3714, 253, 3284, 3681,
	3626, 1939, 253, 253, 3624, 1908, 4278, 3472, 3471, 1737,
	3595, 3466, 3432, 253, 3246, 3524, 3089, 2063, 2062, 2061,
	965, 1934, 3513, 2058, 3518, 3516, 3517, 3509, 3510, 3511,
	3512, 3514, 3515, 2050, 2048, 3002, 3001, 1858, 253, 2966,
	1790, 1961, 1963, 2959, 2925, 1760, 2801, 2003, 252, 2122,
	2078, 2072, 1902, 252, 252, 2071, 1984, 1933, 2070, 2069,
	2068, 1779, 2067, 245, 252, 2066, 2065, 2064, 245, 245,
	4619, 2045, 246, 2044, 2043, 2042, 2041, 246, 246, 245,
	1224, 1224, 1224, 2040, 2006, 2039, 1224, 2038, 246, 252,
	2037, 2036, 2035, 1347, 2034, 1347, 2033, 2032, 2031, 2030,
	1954, 202, 2019, 251, 245, 2005, 202, 202, 2002, 1997,
	1504, 1807, 1269, 246, 1441, 1370, 1345, 202, 1345, 1361,
	4865, 4595, 1224, 4444, 4373, 894, 1428, 2077, 4119, 1843,
	4085, 2166, 894, 4076, 1428, 3454, 1428, 2957, 3524, 2132,
	1483, 1742, 202, 3509, 3510, 3511, 3512, 3514, 3515, 2310,
	1909, 3885, 4719, 251, 253, 1342, 2993, 1342, 2040, 3513,
	1931, 1932, 2086, 4693, 4446, 1939, 4118, 1341, 2018, 1341,
	3622, 1905, 3516, 3517, 3509, 3510, 3511, 3512, 3514, 3515,
	1144, 1984, 1913, 1912, 2000, 1143, 4521, 2118, 2134, 3140,
	1466, 3717, 1934, 5203, 1984, 3115, 1428, 4920, 2139, 2145,
	2126, 2059, 1224, 1907, 253, 252, 2133, 2195, 1483, 2197,
	4913, 41, 1468, 251, 3955, 4623, 4566, 4565, 1165, 4564,
	245, 2308, 2107, 2127, 1926, 1927, 1224, 4520, 1933, 246,
	1483, 2083, 2084, 2820, 1504, 3507, 3508, 2818, 251, 2212,
	1960, 4426, 2214, 2804, 2802, 190, 1483, 1313, 2219, 4334,
	5087, 4333, 2221, 4332, 4844, 252, 4331, 2224, 202, 2260,
	2299, 2025, 4330, 1955, 253, 4329, 4328, 1481, 4842, 2230,
	245, 3523, 4145, 4080, 1343, 4079, 1343, 3897, 2234, 246,
	2051, 2052, 1467, 3896, 3785, 900, 2140, 903, 3783, 253,
	5160, 1456, 900, 2189, 903, 3782, 3517, 3509, 3510, 3511,
	3512, 3514, 3515, 2040, 5158, 1461, 4281, 4811, 202, 2345,
	2131, 2057, 2267, 5083, 2100, 252, 1461, 2233, 2056, 1900,
	4208, 3492, 3491, 3414, 3100, 1986, 1806, 1464, 4174, 2105,
	245, 1121, 2098, 2108, 2248, 3837, 2160, 3836, 4271, 246,
	252, 4139, 3683, 4140, 1462, 1165, 2028, 4882, 3182, 4883,
	2486, 1859, 1984, 4805, 1815, 245, 3460, 5116, 4670, 2210,
	4601, 3311, 3809, 4552, 246, 1816, 1461, 4883, 202, 2076,
	2364, 3751, 1742, 2399, 2254, 2253, 4260, 3556, 1483, 2262,
	1122, 4214, 4205, 2117, 2116, 2115, 4184, 3923, 2113, 2102,
	2398, 2112, 2111, 202, 4006, 3648, 1325, 2579, 3333, 2491,
	2789, 2430, 2784, 1626, 1626, 1741, 2236, 5092, 3331, 3000,
	4739, 3329, 2146, 4711, 1504, 2073, 2053, 5107, 2514, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 3817, 2455,
	2237, 1716, 1640, 1437, 3524, 1935, 1936, 1937, 1938, 1940,
	1941, 3098, 1399, 5104, 4533, 4531, 3142, 3875, 3158, 4505,
	4150, 3343, 3161, 2351, 3156, 2232, 4905, 4502, 3511, 3512,
	3514, 3515, 1794, 4607, 5016, 1773, 2341, 3224, 2349, 1458,
	2344, 3686, 4169, 3281, 2359, 3792, 5195, 5162, 2378, 5093,
	5161, 4742, 2274, 4738, 2275, 4717, 3949, 4770, 3652, 4507,
	1692, 1684, 4227, 2309, 2282, 2283, 1119, 2790, 1856, 1838,
	2588, 2257, 1117, 2585, 3037, 2263, 2354, 3060, 1115, 2255,
	1626, 2354, 1626, 2572, 1626, 1113, 5265, 1110, 2354, 4921,
	957, 2570, 2306, 3058, 1642, 4763, 4750, 4555, 2409, 2414,
	5140, 4554, 1626, 1626, 2276, 2277, 4225, 1468, 2304, 4647,
	1101, 2280, 2281, 4224, 4216, 1857, 1626, 4199, 2316, 4198,
	1451, 3654, 4196, 3060, 4195, 1463, 4183, 2302, 1626, 2586,
	1626, 1626, 1626, 1462, 4226, 900, 2249, 903, 2523, 3058,
	1163, 2625, 4142, 4141, 2834, 3798, 3797, 2401, 2402, 2791,
	3753, 2788, 1693, 2352, 894, 3616, 2403, 3465, 2587, 2338,
	2307, 3464, 1468, 3509, 3510, 3511, 3512, 3514, 3515, 3463,
	2379, 1937, 1938, 1940, 1941, 1855, 1224, 1467, 2451, 2513,
	3462, 3418, 1837, 3180, 3179, 3163, 3152, 1459, 3144, 3134,
	2303, 3133, 3716, 2259, 1647, 2456, 3623, 1460, 2468, 2833,
	1646, 3125, 958, 2623, 2524, 3124, 1741, 806, 3123, 4780,
	2350, 3105, 2337, 2334, 1224, 4740, 2358, 3104, 4712, 1792,
	3065, 2489, 2981, 806, 2698, 1906, 2655, 2074, 1729, 2506,
	1728, 2258, 1467, 4453, 2388, 2387, 1162, 2388, 2387, 2391,
	5198, 1727, 4501, 1726, 2476, 2415, 3278, 1688, 2118, 2499,
	1224, 2518, 1224, 1462, 2436, 3102, 3008, 2985, 1458, 1224,
	4503, 3683, 2166, 2166, 1504, 5196, 1224, 1224, 1224, 1224,
	1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224,
	1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224,
	1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224,
	1224, 1224, 1746, 1224, 1746, 1224, 1224, 1224, 1224, 2465,
	2609, 2478, 2438, 2437, 900, 2543, 903, 2994, 2793, 5141,
	2399, 2353, 3749, 1485, 1486, 1739, 2353, 2473, 2486, 2473,
	1165, 1224, 1165, 2353, 2470, 1224, 1224, 2474, 2486, 2627,
	2505, 2486, 5199, 1224, 1463, 1941, 1442, 1224, 2486, 1224,
	1224, 2482, 3074, 2483, 1164, 4463, 2600, 1504, 2614, 1787,
	3924, 2624, 2530, 1224, 1224, 1224, 1224, 1107, 2784, 1224,
	1224, 1224, 1224, 1224, 1224, 1224, 1224, 4522, 1458, 1385,
	2605, 1217, 1461, 1643, 2625, 3119, 2510, 1896, 2413, 2597,
	1701, 1485, 1486, 3044, 4646, 1224, 1224, 1224, 1224, 1224,
	1224, 1224, 1224, 1224, 2522, 1224, 1459, 863, 2533, 1224,
	2347, 2765, 2766, 1485, 1486, 2713, 1460, 3132, 1808, 3318,
	3515, 1347, 4462, 1869, 3359, 2765, 2781, 4898, 1504, 1485,
	1486, 3088, 3128, 2713, 4153, 2577, 2971, 1347, 3406, 2622,
	2566, 2787, 1875, 3391, 1345, 2564, 2623, 805, 2721, 5227,
	1854, 1873, 2829, 1224, 1504, 2719, 3126, 5201, 3936, 2638,
	1345, 1838, 2793, 805, 1463, 5197, 3087, 2160, 2160, 4781,
	3077, 2875, 2875, 2889, 2599, 2765, 5161, 754, 2909, 2911,
	2531, 1788, 4779, 1342, 4504, 2917, 1899, 3372, 4777, 4499,
	5089, 2891, 1804, 3750, 1440, 1341, 2475, 2619, 2389, 1342,
	2613, 2612, 2611, 2729, 749, 1144, 2626, 2380, 1144, 1144,
	2642, 1341, 1816, 2643, 2644, 1816, 2527, 2780, 2942, 960,
	959, 3160, 3129, 2521, 3935, 861, 1459, 1911, 3361, 2967,
	1835, 2984, 3651, 2318, 2621, 2088, 1460, 2390, 4776, 4180,
	3101, 3995, 4873, 4553, 1712, 1161, 3127, 3657, 2934, 3507,
	3508, 3157, 3525, 3526, 3527, 3159, 4900, 3155, 2322, 1428,
	1428, 2264, 2265, 807, 2107, 2831, 4197, 4778, 3031, 4166,
	2832, 2651, 2652, 2835, 1837, 2836, 2837, 4194, 3405, 807,
	3007, 1313, 2725, 1165, 1433, 3059, 955, 1003, 954, 1851,
	4127, 2381, 2778, 1165, 4114, 5207, 1836, 1165, 4240, 1710,
	1504, 1461, 1343, 1793, 2624, 3375, 3804, 3010, 3796, 3747,
	3162, 1111, 2709, 2392, 3122, 3029, 2319, 1111, 1343, 3018,
	4486, 2933, 2092, 1111, 3733, 3022, 190, 2571, 3522, 3992,
	1112, 2988, 1111, 3032, 3103, 2569, 3026, 3051, 5173, 3033,
	2871, 2606, 2900, 2707, 2884, 2915, 5229, 2923, 2924, 2166,
	2913, 1687, 3006, 2421, 2420, 2956, 4479, 1456, 2935, 4241,
	5182, 3025, 2939, 2940, 2941, 5200, 2946, 2996, 5181, 2952,
	2953, 2105, 2095, 2979, 2596, 5090, 5148, 289, 2059, 4981,
	3725, 4355, 2622, 3076, 4354, 3734, 3930, 1165, 2090, 3398,
	3399, 4164, 1656, 3034, 1663, 3805, 1669, 2695, 1504, 3802,
	3872, 3368, 3219, 4239, 4497, 1690, 2093, 2207, 2330, 1870,
	2793, 3993, 4480, 3873, 1626, 2313, 2365, 2394, 4993, 4703,
	3138, 1461, 4500, 3746, 3745, 3513, 3040, 3003, 3742, 3732,
	2323, 1428, 3141, 5060, 3066, 5061, 3028, 2368, 4906, 3017,
	3215, 3726, 2375, 3020, 3670, 3021, 3374, 4928, 1712, 3042,
	2091, 3012, 1224, 1224, 862, 1224, 1867, 3309, 2310, 2598,
	3035, 2051, 2052, 3220, 1759, 2529, 1764, 3027, 3308, 2331,
	3429, 3530, 3063, 3764, 3698, 1817, 2314, 3050, 2393, 3371,
	1778, 1428, 1783, 1384, 5088, 3724, 3153, 3043, 3653, 3571,
	3257, 2703, 804, 1093, 1641, 3529, 3120, 2324, 2325, 3872,
	3173, 3427, 3038, 1368, 2348, 3107, 864, 3218, 3041, 908,
	860, 5147, 1626, 2329, 995, 2704, 2289, 3092, 1157, 3060,
	2312, 2290, 2705, 2046, 2320, 1626, 2710, 1626, 4582, 3301,
	2308, 3106, 3620, 1626, 3697, 3080, 915, 3523, 4899, 3075,
	2346, 996, 3265, 3789, 3121, 1626, 3069, 4643, 1841, 3079,
	3082, 3052, 3053, 3131, 2160, 3054, 3055, 1871, 5205, 2369,
	3174, 2365, 4942, 3250, 4351, 3704, 2300, 750, 4659, 1428,
	5171, 1428, 2321, 4498, 2693, 5225, 5027, 2696, 4979, 2094,
	2793, 1186, 4534, 3181, 1789, 3321, 3322, 773, 3216, 3217,
	3373, 1996, 1108, 1224, 3420, 3470, 3328, 3330, 3332, 3130,
	2565, 3143, 3113, 3114, 3116, 3117, 3118, 900, 3292, 903,
	3150, 3136, 2712, 1094, 2938, 5230, 3261, 4934, 1984, 3227,
	2720, 3306, 3706, 4980, 3229, 3166, 2088, 4475, 2692, 1868,
	3347, 4935, 3167, 3168, 4476, 1155, 2775, 1093, 2291, 2951,
	3803, 1164, 3345, 2970, 3346, 4481, 1874, 3225, 4008, 3424,
	3312, 3341, 3303, 751, 980, 5214, 2295, 1872, 3108, 190,
	4594, 1224, 1157, 3671, 4341, 4936, 1647, 1224, 1224, 4690,
	4558, 3340, 3230, 3313, 4115, 5206, 1803, 1805, 1439, 3319,
	3425, 985, 3296, 3294, 3430, 3244, 3350, 4478, 3352, 1004,
	3354, 3705, 4642, 5126, 4771, 4435, 1374, 1372, 3570, 2326,
	3524, 2526, 4436, 5127, 4356, 752, 4482, 753, 2520, 3316,
	1156, 1910, 5208, 2092, 1822, 3951, 3323, 3377, 3324, 3379,
	3287, 3389, 2706, 1224, 1224, 5146, 3297, 2092, 4165, 1224,
	4949, 4486, 2708, 4938, 1746, 2292, 2297, 3137, 5033, 4963,
	4821, 3380, 1224, 1224, 3382, 4557, 4556, 2365, 1224, 1224,
	4298, 3295, 3860, 2163, 1224, 3276, 2389, 1094, 4937, 4583,
	3634, 2978, 3338, 2095, 4434, 1099, 1098, 4479, 909, 910,
	2444, 4472, 2085, 997, 998, 3225, 4939, 2095, 3349, 2090,
	3351, 2327, 3353, 1371, 3355, 3356, 3348, 2208, 1364, 4470,
	741, 2372, 4276, 2936, 1921, 2390, 1920, 2093, 4474, 1224,
	1224, 1224, 2309, 1920, 2361, 1224, 3421, 3365, 2576, 1915,
	4400, 2093, 4352, 1095, 2641, 1224, 2311, 2250, 2114, 4737,
	4253, 2293, 3608, 4480, 4687, 4830, 3386, 5235, 4047, 2247,
	4251, 2360, 1224, 3677, 2694, 3397, 4880, 2631, 4644, 4299,
	4220, 2091, 4200, 4477, 3081, 4151, 4149, 3861, 3852, 3519,
	3520, 3521, 2370, 3388, 3387, 3673, 3518, 3516, 3517, 3509,
	3510, 3511, 3512, 3514, 3515, 3266, 2356, 4473, 2638, 3392,
	1173, 3407, 3260, 3248, 2300, 2469, 3448, 3449, 2463, 4950,
	3426, 3452, 2457, 2449, 2429, 4487, 4488, 1355, 2428, 3177,
	3428, 3991, 1681, 4815, 3453, 1376, 2371, 4135, 3444, 2307,
	3109, 4062, 813, 1357, 4999, 1919, 2245, 3952, 3064, 1099,
	1098, 4966, 1919, 981, 982, 2578, 4301, 4255, 2929, 2243,
	912, 911, 4253, 4612, 1224, 1224, 1224, 1224, 3419, 2357,
	1352, 3659, 4251, 1224, 1224, 1224, 2298, 4357, 1224, 4797,
	3245, 1920, 1387, 4795, 1096, 4714, 3689, 2511, 3685, 4254,
	1224, 1347, 1504, 2246, 3684, 2932, 1224, 1095, 1224, 3563,
	3564, 5125, 3412, 3390, 4075, 3568, 3567, 1347, 2503, 1619,
	2094, 2492, 1097, 1996, 1345, 3660, 1358, 1845, 1844, 1921,
	999, 1000, 2426, 2632, 2094, 1504, 1921, 1839, 913, 914,
	1345, 4109, 2977, 2976, 2975, 2974, 2931, 1347, 1165, 2973,
	1504, 2930, 1721, 1735, 1359, 4259, 1733, 1162, 1002, 1676,
	4893, 3459, 1428, 1342, 3546, 4573, 1722, 2273, 4272, 4255,
	1345, 3085, 2166, 3812, 4401, 1341, 1504, 4358, 1100, 1342,
	4157, 4048, 3565, 2467, 3588, 4799, 1428, 852, 4475, 4726,
	4940, 1341, 4049, 2385, 1428, 4476, 4941, 4249, 1356, 5234,
	1919, 4254, 5168, 3636, 4701, 4699, 4481, 3223, 4146, 1342,
	3920, 1754, 3633, 3601, 3618, 3317, 1224, 2294, 3228, 3226,
	2496, 1341, 2398, 1797, 853, 4722, 1823, 1769, 1224, 3765,
	4721, 3110, 3111, 4457, 4456, 3615, 4951, 5013, 1096, 2299,
	3579, 4709, 3575, 4996, 3573, 4064, 1428, 5005, 4478, 3602,
	4814, 4894, 2166, 4407, 4136, 3672, 2800, 4691, 3597, 3630,
	4439, 5035, 4798, 1892, 1154, 1894, 1097, 4482, 5172, 1224,
	983, 984, 5170, 5109, 4924, 2299, 3638, 1891, 1889, 3640,
	3641, 4252, 1343, 4914, 3644, 1428, 3645, 1798, 3646, 3541,
	3542, 3543, 4710, 3642, 3722, 3606, 1863, 1791, 1343, 1093,
	4727, 4697, 3649, 1456, 1428, 3587, 1428, 3610, 3611, 3612,
	3613, 3594, 3557, 3736, 3655, 3738, 2132, 3572, 4665, 2592,
	3609, 1861, 1100, 4450, 1157, 1224, 1224, 1833, 1343, 2364,
	4399, 3688, 3752, 1504, 3693, 3669, 2364, 3695, 3574, 3580,
	3661, 3662, 5006, 3586, 1428, 1831, 4895, 4783, 4258, 3589,
	3590, 812, 4455, 3775, 1829, 3538, 1186, 1186, 1186, 1827,
	1825, 1428, 3687, 3674, 3539, 3691, 3627, 3628, 1819, 3629,
	3787, 1813, 3719, 3592, 2272, 3593, 3721, 2160, 4147, 1811,
	3967, 1731, 3921, 4252, 3918, 3754, 3631, 3501, 3431, 3701,
	3249, 3578, 3585, 1626, 3151, 3735, 2568, 1588, 3780, 3639,
	3145, 2383, 3643, 3099, 4477, 1734, 1428, 1626, 1732, 1626,
	1001, 3005, 2601, 1504, 2502, 2487, 3723, 3743, 3650, 1094,
	894, 1626, 2125, 3762, 2121, 3748, 1895, 1353, 3658, 3584,
	1772, 2535, 3947, 2407, 1626, 3774, 3946, 3938, 1915, 3767,
	3363, 3769, 3737, 3362, 3773, 1428, 4487, 4488, 3779, 3326,
	3766, 2620, 3786, 1850, 3853, 2538, 2427, 2160, 2196, 1893,
	2194, 2029, 1347, 1786, 2163, 2163, 3868, 4439, 3707, 3866,
	1705, 1890, 1888, 1309, 2799, 5081, 2559, 3715, 3845, 3806,
	3255, 3621, 3842, 1354, 1626, 1345, 4535, 3728, 4207, 4206,
	1862, 4539, 4995, 4517, 3731, 3851, 1626, 4610, 1626, 4544,
	4530, 1109, 3865, 4468, 4467, 3793, 2594, 4297, 4288, 4223,
	1626, 5144, 1626, 2593, 1626, 1860, 3988, 3757, 4202, 4172,
	4170, 1832, 4148, 3763, 1342, 4605, 3855, 3850, 2138, 3822,
	3838, 3888, 3807, 3877, 3810, 3859, 1341, 3776, 2251, 1830,
	3581, 3582, 3583, 3279, 3784, 3729, 3131, 3794, 1828, 3730,
	3271, 3788, 1504, 1826, 1824, 1504, 3264, 3256, 3925, 3241,
	3240, 3680, 1818, 3221, 3024, 1812, 3019, 3306, 2425, 2423,
	3867, 1099, 1098, 1810, 3795, 1730, 3306, 3862, 2400, 2366,
	900, 3916, 903, 2567, 2328, 2315, 2301, 3799, 5139, 1224,
	5065, 2229, 2226, 2223, 2220, 1224, 1224, 2215, 3107, 1224,
	1224, 1224, 2154, 1224, 2213, 3869, 3814, 2209, 2200, 3843,
	3777, 1924, 1224, 2166, 3849, 2375, 5162, 3848, 2534, 1095,
	2406, 1224, 4892, 3410, 3383, 1322, 1224, 190, 190, 2239,
	2240, 3381, 1504, 2604, 3214, 5047, 4957, 3939, 4626, 3874,
	4551, 1224, 3876, 1343, 3917, 3945, 4454, 3307, 3883, 1504,
	3886, 3887, 1323, 3656, 2268, 1686, 4832, 3086, 3060, 2166,
	2166, 1224, 1224, 3942, 1224, 1224, 1224, 3944, 1114, 1116,
	1118, 3060, 3948, 3914, 3058, 4825, 4309, 1408, 2310, 3919,
	2525, 2602, 1224, 1886, 1887, 2466, 1224, 3083, 2166, 2166,
	1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224,
	1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224,
	3970, 1224, 4020, 3953, 4021, 1165, 2562, 1407, 2557, 1224,
	1224, 2166, 3411, 5046, 2532, 1925, 1224, 4508, 2603, 3980,
	3981, 4546, 3778, 3178, 3932, 1156, 3933, 1224, 3934, 1931,
	1932, 1931, 1932, 3950, 1809, 3090, 4219, 1478, 1347, 1347,
	1096, 4851, 1224, 4724, 4408, 4386, 2238, 841, 3702, 3091,
	3112, 1928, 1435, 1375, 5156, 1475, 1324, 4285, 2945, 5117,
	4218, 1345, 1345, 1934, 1408, 3239, 280, 2450, 1097, 3091,
	1446, 3158, 3156, 3165, 1504, 3149, 3095, 3147, 3093, 1866,
	5004, 4094, 3977, 4986, 3975, 5202, 3135, 1428, 1428, 3148,
	3094, 4956, 4059, 4953, 4891, 3987, 1408, 1933, 1182, 1933,
	1342, 1342, 1428, 1428, 4816, 894, 1428, 4003, 2160, 844,
	844, 4081, 1341, 1341, 4010, 738, 3994, 3996, 3997, 4790,
	858, 3998, 4702, 4295, 1100, 1224, 4287, 4275, 4018, 4091,
	3854, 3286, 4019, 2916, 2235, 2147, 4723, 5037, 1639, 4023,
	1638, 2163, 5038, 4025, 4017, 1632, 1158, 3619, 4051, 2385,
	5233, 5037, 1224, 4955, 2160, 2160, 5038, 1232, 3507, 3508,
	4112, 4113, 1650, 5175, 4378, 4071, 4072, 1588, 190, 1931,
	1932, 2795, 4052, 4060, 4117, 4125, 4126, 2335, 283, 4132,
	2279, 3046, 2340, 2160, 2160, 1224, 1224, 1796, 4133, 2278,
	3045, 1649, 4134, 1795, 3366, 1650, 2830, 4068, 4069, 2279,
	2278, 1865, 4294, 4817, 1864, 287, 287, 287, 4066, 744,
	745, 4764, 760, 744, 760, 771, 2160, 4548, 811, 1343,
	1343, 4543, 831, 4098, 1224, 1224, 4542, 838, 838, 838,
	838, 4152, 1224, 4437, 4433, 4083, 4432, 287, 4374, 4348,
	4171, 4116, 4173, 3999, 3771, 3768, 2310, 3369, 2023, 2022,
	3385, 2608, 5218, 1626, 1626, 2342, 1626, 976, 2651, 4011,
	1626, 4185, 5183, 1626, 287, 900, 4128, 903, 1428, 5051,
	4990, 4989, 4988, 4923, 4922, 4869, 4867, 4237, 4099, 4793,
	4084, 4121, 2484, 1186, 4754, 4694, 4689, 2651, 4026, 4688,
	4686, 1588, 4685, 2166, 4683, 4190, 4192, 4590, 4570, 2336,
	2498, 2500, 4506, 4445, 4189, 4100, 4431, 4097, 4215, 4430,
	4429, 4322, 4315, 4262, 2504, 4168, 4108, 4160, 4222, 3858,
	4055, 4221, 4106, 3857, 3694, 3637, 2512, 3370, 2515, 2516,
	2517, 4209, 4177, 4245, 3360, 4182, 3337, 1626, 3336, 3335,
	3334, 3270, 3233, 1224, 3243, 3236, 4302, 3238, 3242, 3084,
	4268, 1347, 1224, 3015, 4311, 4242, 4243, 4107, 4284, 4236,
	3107, 1626, 4103, 3009, 2998, 2997, 1626, 1626, 1626, 2986,
	2724, 2595, 4317, 2563, 1345, 2556, 2555, 2554, 2553, 2552,
	2464, 4231, 4257, 2439, 2435, 2434, 2433, 4104, 2432, 1626,
	2431, 1626, 2203, 3283, 2202, 4282, 3283, 4303, 2201, 4238,
	1504, 2199, 3174, 744, 744, 2137, 2136, 4306, 1885, 4228,
	1884, 287, 4319, 1342, 4274, 1820, 1700, 1699, 4261, 1698,
	4270, 4246, 4235, 1697, 1696, 1341, 1695, 4323, 1504, 1694,
	4283, 1224, 1224, 1689, 1685, 1683, 1682, 1224, 1224, 2166,
	4305, 1616, 1224, 1224, 1615, 1224, 1614, 4343, 4344, 4345,
	1224, 1495, 3292, 2154, 2154, 1494, 4291, 4247, 4286, 1493,
	4256, 1224, 1492, 3910, 1491, 1438, 3306, 1394, 1393, 4335,
	1392, 1588, 1391, 1390, 4338, 4289, 3908, 1224, 1389, 3357,
	1388, 1386, 4304, 1381, 1380, 1379, 3901, 1378, 1377, 1304,
	4312, 969, 8, 4307, 4313, 2241, 1120, 4320, 2160, 4321,
	1106, 4897, 4485, 4484, 4359, 4483, 2591, 97, 1691, 932,
	91, 2373, 4167, 1070, 4337, 5034, 4927, 1674, 4360, 940,
	4101, 4372, 5015, 3696, 3183, 2537, 1821, 2539, 4102, 3596,
	2958, 2332, 1343, 4978, 4382, 3469, 4368, 4339, 1347, 4858,
	4658, 2346, 2798, 2027, 3550, 93, 1347, 1208, 1254, 4581,
	1504, 1504, 4580, 1504, 4353, 4469, 4154, 3825, 2348, 4577,
	1347, 1345, 4576, 2151, 2153, 1172, 1507, 4336, 5059, 1345,
	2252, 1626, 1626, 3912, 5224, 1214, 2266, 2261, 2999, 2874,
	1231, 1228, 4105, 1345, 2155, 2157, 1230, 1229, 2156, 2047,
	3903, 1504, 2343, 1227, 2150, 4293, 3251, 2345, 3290, 3884,
	1342, 1740, 3680, 1738, 1072, 3902, 2256, 2718, 1342, 2782,
	3458, 4347, 1341, 2020, 1188, 1210, 1224, 2779, 1369, 1199,
	1341, 3576, 1342, 3555, 3871, 4090, 3601, 1347, 2630, 1347,
	4440, 4441, 4413, 949, 1341, 4398, 2339, 3504, 2785, 1360,
	4416, 4418, 2897, 4443, 2160, 2890, 2886, 3647, 3280, 1901,
	1345, 4672, 1345, 1998, 1428, 3291, 4449, 1897, 1472, 4452,
	1192, 2716, 3911, 4516, 1504, 4409, 1428, 2011, 3436, 1428,
	2640, 2347, 3878, 4414, 3599, 4525, 4421, 4415, 4528, 4412,
	190, 4410, 4411, 2992, 1224, 4405, 5040, 1504, 4007, 1342,
	3367, 1342, 4422, 4492, 4425, 4492, 2443, 1321, 1320, 1367,
	1319, 1341, 4461, 1341, 5021, 5018, 2363, 4584, 3820, 3821,
	2244, 3039, 2728, 4510, 4458, 4459, 3839, 1204, 4496, 1343,
	1610, 2583, 3940, 3561, 4273, 1702, 4464, 1343, 4731, 1626,
	1626, 4451, 4438, 4466, 1216, 1983, 4460, 4512, 4513, 3210,
	3209, 1343, 4886, 4509, 4515, 1457, 1455, 1454, 1453, 5192,
	3176, 1588, 2376, 4163, 4162, 4161, 1428, 4524, 2344, 250,
	4527, 3404, 4495, 1922, 1914, 4596, 4511, 247, 1504, 249,
	248, 3700, 4095, 1626, 3605, 5115, 4187, 4541, 3811, 25,
	4550, 4532, 4613, 845, 846, 4571, 847, 3049, 2271, 1474,
	4568, 4138, 24, 23, 22, 21, 4547, 4526, 4549, 1626,
	1626, 1626, 1626, 1626, 1626, 1626, 120, 4529, 1343, 44,
	1343, 20, 4597, 162, 2163, 4602, 160, 137, 4561, 157,
	156, 129, 1504, 155, 154, 153, 152, 4567, 3909, 3904,
	3905, 3906, 3907, 4614, 1224, 1224, 1224, 151, 4574, 4560,
	2154, 159, 150, 4559, 1588, 149, 144, 148, 147, 146,
	145, 143, 1504, 4579, 4587, 4569, 141, 1224, 4608, 4575,
	1224, 1224, 4586, 4593, 4591, 142, 136, 4617, 3913, 140,
	1224, 139, 138, 2166, 135, 134, 133, 132, 1224, 1224,
	4615, 131, 130, 4622, 128, 161, 127, 126, 204, 4599,
	125, 4637, 124, 123, 2163, 1504, 122, 1626, 121, 824,
	825, 63, 4629, 62, 1362, 117, 4628, 118, 4650, 19,
	42, 14, 3175, 67, 68, 1588, 18, 13, 37, 96,
	109, 1428, 108, 107, 38, 4631, 104, 36, 1502, 4635,
	17, 16, 15, 102, 4645, 101, 100, 35, 1383, 33,
	11, 1588, 9, 1504, 39, 2109, 12, 4655, 5, 195,
	287, 1224, 287, 287, 194, 1412, 287, 1422, 197, 193,
	196, 95, 192, 191, 1224, 94, 31, 10, 1436, 187,
	4667, 4809, 4280, 1224, 87, 189, 831, 1417, 2166, 831,
	1631, 4661, 188, 186, 4678, 4679, 4708, 4638, 1224, 4639,
	185, 1224, 184, 88, 4696, 85, 183, 90, 182, 86,
	89, 29, 838, 6, 66, 7, 4681, 1224, 4682, 4705,
	1224, 4706, 4640, 3922, 112, 3711, 3712, 1504, 3713, 4734,
	113, 40, 83, 82, 81, 1428, 287, 80, 287, 287,
	1412, 3320, 287, 287, 4773, 1626, 1626, 1626, 28, 4707,
	65, 1422, 27, 3327, 179, 2299, 4713, 228, 227, 226,
	1597, 225, 4704, 1611, 1417, 287, 1347, 1652, 4745, 4746,
	224, 223, 222, 221, 216, 4782, 4769, 220, 218, 3758,
	3759, 217, 3760, 1672, 219, 215, 241, 4753, 2160, 1345,
	1679, 1504, 240, 4792, 1626, 239, 4808, 1588, 238, 237,
	4757, 231, 4758, 4826, 4765, 4796, 4767, 230, 4768, 1704,
	4755, 1422, 236, 235, 234, 287, 287, 4751, 1412, 4756,
	233, 232, 229, 4766, 244, 4759, 4772, 76, 1342, 1224,
	1224, 214, 4492, 4813, 213, 212, 1417, 1417, 4784, 831,
	1341, 287, 287, 4785, 210, 206, 1224, 2166, 4807, 4794,
	4789, 209, 211, 1766, 4827, 208, 4835, 4803, 4837, 207,
	4812, 205, 4829, 243, 1774, 242, 4774, 77, 177, 976,
	178, 4787, 4788, 1428, 75, 3822, 1428, 176, 1428, 1428,
	175, 4823, 174, 4834, 173, 172, 171, 170, 4831, 4828,
	4833, 74, 181, 2160, 4617, 1588, 1224, 180, 1224, 4800,
	1224, 26, 2, 1, 4839, 4847, 4848, 0, 0, 0,
	1347, 0, 0, 4881, 0, 0, 0, 4846, 0, 0,
	0, 0, 0, 1224, 0, 1347, 0, 0, 0, 0,
	0, 0, 4879, 1345, 0, 0, 0, 0, 0, 0,
	4850, 0, 2635, 0, 4856, 0, 4868, 1343, 1345, 4870,
	287, 4871, 4872, 0, 0, 0, 0, 0, 0, 4878,
	0, 0, 0, 0, 0, 2163, 0, 4877, 0, 4908,
	0, 0, 1342, 0, 287, 0, 4492, 0, 0, 0,
	0, 4901, 1347, 1347, 1341, 0, 0, 1342, 0, 4902,
	4874, 4492, 0, 0, 4930, 0, 4932, 4743, 0, 1341,
	1347, 0, 0, 1347, 0, 1345, 1345, 1626, 0, 0,
	0, 2163, 2163, 4917, 0, 0, 2009, 1626, 0, 0,
	2014, 0, 0, 1345, 0, 0, 1345, 0, 4918, 0,
	0, 0, 1224, 1224, 4919, 0, 0, 0, 0, 0,
	2163, 2163, 1224, 0, 1342, 1342, 4925, 4943, 4492, 4492,
	0, 0, 2160, 3433, 3434, 0, 1341, 1341, 4909, 4954,
	0, 0, 1342, 4959, 0, 1342, 4492, 4967, 0, 4492,
	0, 0, 4968, 2163, 1341, 4812, 0, 1341, 4972, 4971,
	4973, 0, 0, 4970, 0, 0, 0, 0, 2892, 0,
	4983, 1343, 0, 1224, 1224, 0, 4991, 1224, 4987, 0,
	0, 1626, 1428, 5012, 0, 1428, 1343, 0, 4982, 0,
	4994, 4974, 4992, 4975, 0, 4945, 4946, 0, 2124, 0,
	0, 0, 5020, 5023, 0, 5002, 5003, 5039, 0, 0,
	0, 0, 0, 4960, 5010, 5036, 4962, 0, 5011, 0,
	0, 0, 0, 0, 5043, 5029, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5064, 0, 5062, 0, 0,
	1224, 1224, 1224, 1343, 1343, 0, 0, 0, 0, 5024,
	0, 0, 0, 5028, 0, 5031, 0, 0, 5032, 744,
	5025, 1343, 5048, 0, 1343, 5052, 5055, 0, 0, 0,
	0, 0, 5063, 0, 0, 0, 5096, 1224, 0, 0,
	287, 0, 287, 0, 0, 5079, 287, 5078, 2289, 5076,
	5077, 0, 0, 2290, 5042, 0, 0, 5101, 0, 1652,
	1412, 2129, 287, 2154, 287, 2135, 5030, 0, 0, 5124,
	5122, 2299, 287, 5098, 760, 3531, 3532, 3533, 3534, 287,
	0, 0, 2270, 5132, 5123, 1611, 0, 0, 5099, 0,
	5136, 5114, 0, 1224, 5130, 2204, 0, 0, 0, 5112,
	0, 1428, 0, 5129, 0, 5128, 0, 287, 5145, 4792,
	0, 0, 0, 0, 287, 0, 0, 5137, 5097, 5138,
	0, 5155, 5163, 0, 0, 0, 0, 0, 5111, 5151,
	5152, 5113, 0, 0, 5159, 1611, 5157, 5142, 0, 0,
	5166, 0, 0, 2154, 5154, 0, 5178, 831, 5165, 0,
	5179, 5169, 1347, 5167, 1347, 5020, 5188, 5186, 5023, 5176,
	0, 0, 0, 5180, 5174, 0, 5185, 5177, 0, 0,
	2291, 5184, 0, 0, 5153, 1345, 0, 1345, 0, 5194,
	0, 0, 0, 0, 0, 838, 0, 838, 2295, 0,
	0, 0, 0, 1428, 0, 2163, 0, 838, 838, 0,
	5209, 0, 0, 5216, 0, 0, 5217, 5210, 0, 0,
	5220, 0, 0, 0, 1342, 0, 1342, 5215, 4492, 5228,
	4492, 5219, 0, 1224, 1224, 0, 1341, 5222, 1341, 5226,
	0, 0, 1224, 1224, 0, 0, 0, 0, 5231, 5236,
	0, 5242, 0, 0, 5042, 5193, 0, 5240, 5247, 5251,
	5248, 0, 0, 5244, 5252, 5243, 5249, 0, 5250, 5245,
	0, 5246, 2418, 0, 0, 0, 5213, 2292, 2297, 5256,
	1428, 5257, 5259, 5258, 5255, 0, 5264, 5262, 5261, 5260,
	0, 0, 5267, 0, 0, 5187, 0, 5189, 0, 1588,
	1224, 3790, 0, 0, 5271, 0, 5273, 5264, 5268, 5275,
	0, 0, 0, 0, 0, 0, 5270, 0, 5237, 5238,
	0, 0, 5239, 0, 0, 0, 0, 0, 0, 3815,
	3292, 0, 1588, 0, 0, 2289, 4290, 0, 0, 0,
	2290, 0, 3844, 1343, 0, 1343, 0, 1588, 0, 0,
	0, 2163, 0, 0, 0, 0, 0, 0, 287, 0,
	3292, 0, 287, 2293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1588, 0, 0, 5272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4340, 3915, 0, 0, 0, 0, 0,
	0, 0, 3710, 1186, 0, 0, 2300, 0, 3926, 287,
	3927, 0, 3928, 287, 0, 1186, 0, 0, 287, 0,
	3910, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 3908, 0, 0, 0, 0, 0, 2454,
	287, 0, 287, 3901, 0, 0, 744, 2291, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	831, 0, 0, 3708, 976, 2295, 0, 0, 2298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3394, 0, 0, 287, 0, 1412, 287, 0, 0,
	0, 0, 0, 0, 2154, 3507, 3508, 3709, 3525, 3526,
	3527, 831, 0, 0, 0, 0, 0, 0, 287, 0,
	1588, 0, 0, 0, 0, 0, 2536, 0, 4364, 0,
	3912, 287, 287, 0, 287, 0, 287, 0, 287, 0,
	287, 0, 2654, 0, 2292, 2297, 0, 3903, 0, 0,
	2154, 2154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3902, 0, 0, 2573, 0, 0, 2574, 0,
	2575, 0, 2892, 2892, 0, 0, 0, 0, 0, 2154,
	2154, 0, 0, 0, 3522, 287, 287, 287, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 1931, 1932, 2294,
	1588, 3963, 3964, 0, 0, 0, 0, 0, 0, 2584,
	0, 0, 2154, 0, 811, 0, 0, 0, 831, 3911,
	0, 1962, 0, 0, 0, 0, 0, 0, 0, 1934,
	2293, 0, 0, 0, 0, 2796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	3899, 2009, 0, 0, 0, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 2287,
	0, 3513, 0, 2300, 4537, 1950, 0, 0, 0, 0,
	0, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035,
	4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045,
	4046, 2730, 4050, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 2968, 0, 0, 0, 0, 0, 0, 1588,
	2285, 4363, 1588, 0, 0, 2298, 0, 4589, 0, 0,
	0, 3529, 0, 0, 2892, 2892, 2892, 2892, 0, 4598,
	0, 0, 0, 1956, 1957, 1958, 1959, 0, 0, 0,
	0, 0, 0, 1939, 0, 2163, 0, 0, 0, 0,
	0, 0, 4621, 744, 2286, 3909, 3904, 3905, 3906, 3907,
	0, 0, 0, 3523, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 744, 0, 0,
	0, 0, 0, 0, 287, 0, 744, 0, 0, 1588,
	0, 0, 0, 1931, 1932, 3913, 1961, 1963, 287, 0,
	0, 0, 0, 0, 0, 0, 1588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 0, 287,
	1422, 0, 1948, 1949, 0, 1934, 0, 0, 0, 0,
	0, 4229, 4230, 0, 0, 0, 0, 0, 4232, 0,
	1417, 4233, 0, 0, 1984, 0, 2294, 0, 3048, 0,
	2163, 0, 1987, 0, 0, 1954, 0, 0, 0, 0,
	0, 1933, 0, 0, 2154, 0, 0, 0, 287, 1422,
	0, 0, 760, 0, 760, 0, 0, 0, 3014, 0,
	0, 0, 0, 0, 287, 0, 0, 287, 0, 1417,
	0, 287, 0, 287, 0, 0, 0, 4700, 1412, 0,
	287, 287, 0, 1422, 1422, 3030, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1417, 1417, 0, 0, 0, 3524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 4318,
	0, 1588, 0, 0, 2498, 4324, 4325, 0, 0, 0,
	0, 0, 0, 0, 838, 838, 0, 0, 838, 838,
	0, 0, 0, 0, 0, 0, 0, 3073, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 2163,
	2154, 0, 0, 0, 0, 0, 0, 831, 1955, 0,
	0, 0, 1961, 1963, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 1179, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 287, 3171, 1652,
	0, 0, 0, 0, 0, 1611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3519, 3520, 3521, 78, 0,
	1986, 1954, 3518, 3516, 3517, 3509, 3510, 3511, 3512, 3514,
	3515, 0, 0, 0, 287, 3231, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 1652, 78, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 3275, 0, 0, 0, 0, 0, 4427,
	4428, 0, 0, 3073, 92, 744, 0, 0, 84, 0,
	0, 0, 1984, 0, 3171, 976, 3073, 0, 0, 0,
	0, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937,
	1938, 1940, 1941, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 970, 0, 0, 0, 92,
	0, 0, 0, 4915, 0, 0, 0, 287, 1412, 287,
	114, 0, 0, 0, 0, 0, 98, 111, 0, 1422,
	287, 0, 0, 1412, 0, 1412, 0, 1412, 0, 0,
	1611, 0, 4929, 0, 0, 0, 0, 0, 0, 0,
	970, 1417, 0, 0, 1955, 0, 0, 0, 0, 1631,
	2892, 2892, 0, 51, 0, 114, 0, 0, 4958, 0,
	0, 98, 111, 0, 0, 0, 0, 1588, 0, 0,
	0, 0, 0, 0, 287, 287, 287, 287, 1412, 0,
	99, 1412, 0, 287, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 1588, 1611, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 1986, 2498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 99, 0, 287, 0, 0,
	1631, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	2892, 2892, 2892, 2892, 2892, 2892, 2892, 2892, 2892, 2892,
	2892, 2892, 2892, 2892, 2892, 2892, 2892, 2892, 2892, 2892,
	0, 2892, 0, 0, 1931, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4630, 0, 4632,
	4633, 4634, 0, 4636, 0, 0, 0, 0, 1962, 0,
	0, 0, 0, 0, 0, 5049, 1934, 0, 5050, 0,
	1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0,
	0, 0, 0, 0, 2989, 0, 0, 1588, 1588, 0,
	1588, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2154, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 0, 0, 0, 1588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4684, 0, 0, 0, 103,
	0, 0, 0, 1186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 106, 0, 0, 110, 0, 0,
	3562, 0, 0, 0, 3507, 3508, 0, 3525, 3526, 3527,
	0, 0, 1631, 1631, 1631, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 3972, 0, 0,
	0, 1588, 971, 3591, 0, 0, 0, 158, 198, 106,
	1939, 0, 110, 0, 0, 0, 0, 0, 3604, 2154,
	0, 4664, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 3625, 253, 0, 971, 0, 0,
	0, 0, 158, 3522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1961, 1963, 0, 0, 0, 287, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4786, 287, 0, 0, 0, 203, 744,
	253, 0, 0, 0, 744, 0, 252, 744, 0, 0,
	744, 744, 4716, 0, 0, 1588, 744, 0, 0, 0,
	0, 245, 0, 0, 287, 0, 0, 163, 0, 0,
	246, 0, 1954, 0, 199, 0, 287, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 202,
	3513, 0, 0, 0, 0, 0, 245, 0, 0, 1588,
	0, 0, 0, 0, 0, 246, 0, 287, 0, 199,
	0, 287, 287, 0, 0, 0, 0, 0, 2154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1588,
	0, 0, 1611, 1611, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 3073, 3073, 287, 0, 3667,
	2129, 0, 0, 0, 0, 0, 3073, 0, 2135, 0,
	3529, 0, 0, 0, 0, 0, 0, 3073, 2135, 0,
	3073, 2135, 1588, 0, 2135, 0, 0, 3667, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	287, 2129, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 3523, 0, 0, 0, 0, 0, 0, 0,
	2129, 1611, 287, 0, 3741, 0, 3741, 0, 0, 0,
	1588, 3604, 1412, 0, 0, 1955, 0, 4855, 0, 0,
	0, 0, 0, 2454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3073, 0, 3073, 0, 3772, 3073,
	2129, 0, 0, 3073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2129, 1186, 0,
	831, 0, 0, 78, 0, 0, 0, 0, 0, 4885,
	0, 0, 0, 1984, 0, 0, 0, 1986, 0, 0,
	0, 79, 0, 0, 1588, 2498, 0, 0, 0, 0,
	0, 0, 1412, 0, 4907, 0, 0, 0, 84, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 3816,
	0, 0, 0, 3818, 3073, 0, 0, 287, 0, 0,
	287, 0, 0, 3847, 1422, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 0, 0, 0, 0, 1588, 287,
	3941, 0, 0, 1502, 3275, 3524, 0, 1412, 0, 287,
	0, 0, 3073, 0, 744, 0, 0, 0, 0, 0,
	1417, 3073, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 0, 114, 0, 0, 0, 0,
	0, 98, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 1932, 0, 0, 0, 0, 1975, 1976,
	1977, 0, 3931, 0, 0, 0, 0, 0, 0, 0,
	3984, 0, 0, 0, 0, 0, 1962, 0, 1631, 1631,
	0, 0, 3937, 0, 1934, 0, 1652, 4000, 0, 0,
	1412, 287, 0, 287, 1981, 0, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 99, 0, 0, 0, 0,
	0, 1987, 0, 0, 1611, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 0, 0, 3519, 3520, 3521, 0, 0, 0,
	0, 3518, 3516, 3517, 3509, 3510, 3511, 3512, 3514, 3515,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 1631,
	1631, 1631, 1631, 1631, 1631, 1631, 1631, 1631, 1631, 1631,
	1631, 1631, 1631, 1631, 1631, 1631, 1631, 1631, 4005, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 4093, 0, 1968, 1962, 0, 0, 1939, 0,
	0, 0, 0, 1934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1981, 0, 0, 0, 1967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 1933,
	2892, 1972, 0, 0, 1982, 0, 0, 0, 0, 0,
	1953, 1961, 1963, 0, 0, 287, 287, 0, 0, 1950,
	0, 1186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 1949, 0,
	744, 744, 0, 0, 0, 0, 0, 0, 198, 106,
	0, 0, 110, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 2892, 287, 0, 0, 0, 0, 971, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 1956, 1957, 1958,
	1959, 0, 0, 0, 0, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 1984, 0, 1982, 0, 0, 0, 163, 0, 0,
	1961, 1963, 0, 0, 831, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 1978, 0, 1979,
	0, 252, 0, 0, 0, 0, 1948, 1949, 0, 0,
	4201, 0, 0, 4203, 4204, 0, 245, 0, 0, 0,
	3741, 0, 0, 0, 1970, 246, 0, 0, 0, 199,
	1960, 0, 0, 0, 0, 287, 0, 0, 0, 1954,
	0, 0, 0, 0, 1931, 1932, 0, 0, 0, 3171,
	0, 0, 0, 1955, 1749, 0, 1417, 1967, 0, 0,
	0, 0, 0, 0, 2129, 0, 287, 0, 1962, 0,
	760, 760, 1422, 0, 0, 0, 1934, 0, 0, 0,
	0, 1973, 0, 0, 0, 287, 2892, 0, 1980, 0,
	1931, 1932, 0, 0, 0, 0, 287, 3275, 0, 0,
	3275, 2135, 0, 1987, 0, 0, 287, 0, 0, 1969,
	0, 0, 1933, 3847, 1962, 1986, 0, 0, 287, 0,
	1984, 0, 1934, 287, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2892, 2454,
	0, 0, 0, 0, 0, 0, 0, 3073, 287, 1987,
	0, 0, 0, 0, 0, 0, 0, 3171, 1933, 0,
	976, 3073, 0, 2892, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 0, 0, 1974, 1951, 1947, 0, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 1967, 3507, 3508,
	1973, 3525, 3526, 3527, 3966, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 0, 0, 0, 0, 0, 0,
	0, 4420, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 0, 0, 0, 1986, 0, 1939, 0, 0, 0,
	0, 0, 4383, 1961, 1963, 0, 0, 0, 0, 0,
	1967, 0, 0, 0, 0, 0, 1967, 0, 0, 4447,
	0, 0, 1967, 0, 0, 0, 0, 0, 3507, 3508,
	0, 3525, 3526, 3527, 0, 0, 0, 3522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	1963, 3971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 287, 0, 0, 0, 0,
	1971, 1652, 0, 287, 0, 1948, 1949, 0, 0, 1931,
	1932, 1945, 1946, 1952, 1974, 1951, 1947, 287, 1944, 1942,
	1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 0,
	0, 0, 3482, 1962, 0, 0, 3483, 3522, 1954, 0,
	0, 1934, 1422, 1967, 0, 0, 0, 0, 1967, 0,
	0, 0, 0, 0, 0, 1422, 0, 287, 1422, 0,
	0, 0, 1967, 0, 3513, 0, 0, 1967, 1987, 3073,
	3073, 0, 3667, 1984, 0, 3741, 3073, 1933, 1417, 0,
	0, 0, 0, 0, 4494, 0, 4494, 1652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3073, 0,
	2135, 0, 0, 0, 3667, 0, 1652, 1652, 287, 2129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 2129, 0, 287, 2129, 0, 287, 0, 0,
	3741, 0, 1967, 0, 3513, 0, 0, 0, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2454, 0,
	0, 3073, 0, 3073, 287, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1417, 3523, 0, 1960, 0,
	1502, 0, 0, 0, 0, 1939, 0, 0, 0, 0,
	0, 0, 0, 3073, 3073, 0, 0, 0, 0, 3275,
	3275, 1955, 0, 0, 3529, 0, 3667, 0, 0, 0,
	4656, 0, 0, 0, 0, 0, 287, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 1963,
	0, 0, 0, 0, 0, 0, 3523, 0, 0, 0,
	0, 0, 0, 4656, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 1967, 1967, 1967, 1967, 1967, 1967,
	1967, 1967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1967, 0, 0, 1954, 0, 0,
	0, 2654, 0, 0, 0, 0, 0, 1967, 0, 0,
	0, 0, 0, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	0, 0, 0, 2896, 1951, 1947, 0, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 1967, 0, 0,
	0, 0, 0, 1967, 0, 2654, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3073, 2135, 0, 2135, 0,
	0, 3847, 0, 0, 0, 0, 0, 0, 0, 3524,
	287, 0, 0, 0, 3507, 3508, 0, 3525, 3526, 3527,
	4732, 0, 4732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3741, 1652,
	1955, 1652, 1412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2129, 0, 287, 0, 0, 0, 0, 3519, 3520,
	3521, 0, 0, 3522, 0, 3518, 3516, 3517, 3509, 3510,
	3511, 3512, 3514, 3515, 0, 0, 0, 0, 0, 0,
	3847, 0, 0, 4494, 0, 0, 1652, 0, 0, 0,
	3073, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 4820, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3519, 3520,
	3521, 0, 2087, 0, 0, 3518, 3516, 3517, 3509, 3510,
	3511, 3512, 3514, 3515, 287, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	3513, 0, 0, 0, 0, 0, 1611, 0, 4005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 0, 1935,
	1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0, 3741,
	4876, 0, 0, 0, 0, 0, 0, 3847, 0, 0,
	0, 0, 0, 0, 1931, 1932, 0, 1964, 1965, 1966,
	1975, 1976, 1977, 0, 0, 0, 0, 4494, 0, 0,
	3529, 0, 0, 0, 0, 0, 0, 1968, 1962, 0,
	0, 0, 4494, 0, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 3523, 1987, 0, 0, 0, 0, 0, 0,
	0, 760, 1933, 0, 0, 0, 0, 0, 0, 1417,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 4494,
	4494, 0, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4494, 0, 287,
	4494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2135, 0, 1931, 1932, 0, 0, 1171, 0, 0, 0,
	1652, 0, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 1962, 0, 0, 0,
	0, 0, 0, 0, 1934, 0, 0, 0, 0, 0,
	0, 1422, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 1957, 1958, 1959, 0, 5000, 0, 0, 0, 0,
	1939, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	1933, 4732, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 1967, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 3073,
	0, 0, 0, 1972, 0, 3524, 1982, 0, 0, 0,
	0, 0, 0, 1961, 1963, 1967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1978, 287, 1979, 0, 0, 0, 0, 0, 0, 1948,
	1949, 0, 0, 0, 0, 0, 3961, 0, 0, 0,
	0, 0, 0, 4005, 0, 1967, 0, 1970, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 1954, 1967, 0, 0, 0, 1652, 1939, 0,
	0, 0, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
	1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
	1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
	1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 0, 0,
	0, 1980, 0, 1967, 0, 1967, 1967, 1967, 1967, 0,
	0, 1961, 1963, 0, 0, 0, 0, 2896, 2896, 0,
	0, 78, 1969, 0, 0, 0, 0, 0, 0, 3847,
	0, 0, 1967, 1984, 3519, 3520, 3521, 1948, 1949, 79,
	0, 3518, 3516, 3517, 3509, 3510, 3511, 3512, 3514, 3515,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3073,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 4494,
	0, 4494, 0, 1967, 1652, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 0, 1955, 1967, 0, 0, 1967,
	0, 0, 1967, 0, 0, 0, 0, 0, 1967, 1967,
	1967, 1967, 1967, 1967, 1967, 0, 0, 0, 970, 0,
	0, 0, 0, 1973, 0, 3073, 0, 0, 0, 0,
	0, 1984, 0, 114, 0, 0, 0, 0, 0, 98,
	111, 0, 3171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3073, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3171,
	0, 0, 0, 0, 1967, 0, 0, 3528, 0, 2896,
	2896, 2896, 2896, 0, 0, 1967, 0, 1967, 0, 0,
	1960, 0, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1955, 0, 0, 0, 2867, 2868, 2869,
	2870, 2863, 2864, 2865, 2866, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951, 1947,
	0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 0, 0, 0, 0, 2773, 0, 0, 0, 2774,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2843, 2844, 2845, 2846, 0, 0, 0, 0, 0,
	0, 0, 0, 3201, 0, 0, 867, 0, 0, 0,
	0, 0, 0, 0, 0, 2855, 2856, 2857, 2858, 2851,
	2852, 2853, 2854, 2859, 2860, 2861, 2862, 0, 0, 0,
	0, 0, 878, 0, 0, 0, 0, 3191, 3189, 0,
	0, 0, 0, 0, 3193, 3195, 3185, 103, 0, 0,
	0, 0, 880, 0, 1431, 0, 1951, 1947, 0, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	0, 0, 0, 0, 0, 879, 0, 0, 0, 0,
	0, 1171, 1171, 1171, 0, 0, 0, 3211, 0, 1931,
	1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 2839, 2840,
	2841, 2842, 2847, 2848, 2849, 2850, 198, 106, 0, 0,
	110, 0, 1968, 1962, 0, 0, 0, 0, 0, 0,
	0, 1934, 0, 0, 0, 0, 1601, 0, 872, 0,
	0, 1981, 1617, 0, 0, 888, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 971, 0, 0, 1987, 877,
	158, 0, 0, 0, 0, 0, 0, 1933, 0, 0,
	0, 0, 1654, 0, 1660, 0, 1666, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 1950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 876, 0, 0, 0, 0, 0, 0, 0,
	1967, 1967, 0, 1967, 0, 163, 0, 0, 0, 806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 3187, 1757, 0, 1762, 0, 0, 252,
	0, 0, 0, 0, 3203, 0, 874, 0, 0, 0,
	1776, 0, 1781, 0, 245, 1956, 1957, 1958, 1959, 0,
	0, 0, 0, 246, 0, 1939, 0, 199, 3202, 3192,
	3190, 3194, 3196, 3186, 3188, 3204, 3206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3198, 3200, 3208, 0,
	0, 0, 202, 0, 0, 0, 1931, 1932, 0, 1964,
	1965, 1966, 1975, 1976, 1977, 887, 0, 0, 1972, 0,
	0, 1982, 0, 0, 0, 0, 0, 0, 1961, 1963,
	1962, 1846, 3212, 0, 1852, 0, 0, 0, 1934, 0,
	0, 0, 0, 0, 1967, 1978, 0, 1979, 1981, 0,
	0, 0, 0, 0, 1948, 1949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 1970, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 1954, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 869, 0, 0,
	0, 0, 1967, 1967, 0, 2896, 2896, 0, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3528,
	3528, 0, 0, 1967, 1967, 0, 0, 0, 0, 0,
	873, 0, 0, 1967, 0, 0, 1980, 1988, 1989, 1990,
	1991, 1992, 1993, 1994, 1995, 0, 0, 1967, 0, 0,
	0, 3205, 0, 0, 0, 0, 0, 1969, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 1984, 805,
	2008, 0, 1956, 1957, 1958, 1959, 2021, 0, 0, 0,
	0, 0, 1939, 0, 0, 883, 0, 0, 0, 0,
	0, 871, 0, 0, 0, 2896, 2896, 2896, 2896, 2896,
	2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896,
	2896, 2896, 2896, 2896, 2896, 0, 2896, 3528, 3528, 3528,
	3528, 0, 3213, 0, 0, 1972, 0, 1960, 1982, 0,
	0, 3197, 3199, 3207, 0, 1961, 1963, 0, 0, 0,
	0, 868, 0, 0, 0, 0, 0, 881, 0, 0,
	1955, 0, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 1948, 1949, 0, 0, 0, 0, 0, 0, 0,
	875, 0, 0, 0, 0, 0, 0, 0, 1973, 1970,
	0, 0, 2081, 2081, 2081, 807, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 885, 886, 0, 882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1220, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1945,
	1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935,
	1936, 1937, 1938, 1940, 1941, 0, 286, 286, 286, 0,
	0, 0, 0, 0, 4389, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 1967, 1967, 0, 0, 0, 0, 0, 901, 0,
	0, 0, 0, 0, 0, 0, 0, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 901, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1931, 1932, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1962, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	1209, 116, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 1971, 0, 0, 0, 0,
	0, 0, 1950, 0, 0, 0, 1945, 1946, 1952, 1974,
	1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938,
	1940, 1941, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1967, 1967, 0, 0, 1967, 3528,
	3528, 1967, 0, 0, 0, 1967, 0, 0, 3960, 0,
	0, 0, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 0, 0, 0, 116,
	1956, 1957, 1958, 1959, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 1967, 1967,
	1967, 1967, 1967, 0, 0, 0, 0, 0, 1967, 0,
	1967, 0, 0, 3528, 3528, 3528, 3528, 3528, 3528, 3528,
	3528, 3528, 3528, 3528, 3528, 3528, 3528, 3528, 3528, 3528,
	3528, 3528, 3528, 0, 0, 0, 3528, 0, 0, 1967,
	1967, 0, 0, 1961, 1963, 0, 0, 0, 0, 0,
	0, 1967, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 2560, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 0, 0, 0, 0,
	0, 1967, 0, 0, 0, 0, 2589, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2629, 1984, 2633, 0, 0, 0, 0, 0,
	0, 2647, 0, 0, 0, 0, 1967, 1967, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 0, 2697, 0, 2699, 2700, 2701,
	2702, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2726, 0, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 0, 0, 0, 2777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2807, 2810, 2813, 2816, 0,
	1967, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 2888,
	0, 2899, 2901, 2906, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1967, 0,
	0, 0, 1967, 1967, 0, 1256, 1967, 1967, 0, 0,
	0, 1967, 0, 0, 0, 1967, 0, 0, 0, 0,
	1967, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1951, 1947,
	0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 286, 286, 0, 2896, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1931, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1962, 0, 0, 0, 0, 0, 0, 0, 1934, 0,
	0, 0, 0, 0, 1967, 1931, 1932, 0, 1964, 1965,
	1966, 1975, 1976, 1977, 0, 0, 0, 286, 0, 286,
	286, 0, 0, 286, 286, 1987, 0, 0, 1968, 1962,
	0, 0, 0, 0, 1933, 0, 0, 1934, 0, 0,
	0, 0, 0, 0, 0, 1953, 901, 1981, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 1933, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 1348,
	0, 0, 0, 1950, 0, 0, 286, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3422, 0, 0, 0, 0, 0, 0, 1967, 1967, 1967,
	0, 0, 286, 286, 0, 0, 0, 0, 1967, 1967,
	3528, 2896, 1956, 1957, 1958, 1959, 0, 1967, 0, 0,
	1967, 0, 1939, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 3234, 3235, 0, 3237, 0, 0,
	0, 1956, 1957, 1958, 1959, 0, 0, 0, 0, 0,
	0, 1939, 3528, 2896, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 1963, 0, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 1967, 2896, 0,
	0, 0, 0, 0, 0, 1967, 0, 0, 0, 0,
	0, 1948, 1949, 0, 1972, 0, 1967, 1982, 1967, 0,
	0, 286, 0, 0, 1961, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 1979, 1954, 286, 0, 0, 0, 0,
	1948, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 116, 0, 116, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3528, 0, 0, 0, 0, 1166, 116, 116, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 1980, 116, 0, 116, 0, 0, 0, 0,
	1967, 3528, 0, 0, 1967, 0, 0, 0, 0, 116,
	0, 116, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3528, 1984, 0, 0, 0, 0, 1988,
	1989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 0,
	0, 0, 0, 1960, 0, 3416, 3417, 0, 0, 0,
	0, 3423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	3437, 3438, 0, 0, 0, 0, 2777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 2103, 0, 1344, 1973, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 2103, 286, 0, 0, 0, 0,
	0, 3447, 0, 901, 0, 0, 0, 0, 1986, 0,
	901, 0, 0, 0, 0, 0, 0, 3461, 0, 1145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 0, 0, 3473, 0, 0, 0, 286, 0,
	2001, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1967, 0, 2007, 0,
	1951, 1947, 2013, 1944, 1942, 1943, 1935, 1936, 1937, 1938,
	1940, 1941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951,
	1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940,
	1941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2906, 2906, 2906, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2081, 0, 0, 0, 0, 0, 0, 0,
	3566, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2101, 0, 2104, 0, 116, 1967, 0,
	0, 0, 0, 0, 0, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	1171, 0, 0, 901, 1931, 1932, 0, 0, 0, 0,
	0, 1348, 0, 0, 0, 0, 0, 0, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1962, 0,
	0, 1337, 0, 0, 1348, 0, 1934, 0, 0, 0,
	0, 3699, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 1987, 286, 1968, 1962, 0, 0, 286,
	0, 0, 1933, 0, 1934, 286, 0, 0, 0, 282,
	282, 740, 0, 1953, 1981, 0, 0, 0, 0, 0,
	0, 286, 1950, 286, 1348, 0, 0, 3755, 3756, 286,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 1931, 1932, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1962,
	0, 0, 0, 0, 0, 0, 0, 1934, 0, 286,
	1956, 1957, 1958, 1959, 0, 0, 0, 0, 0, 0,
	1939, 0, 901, 286, 0, 286, 0, 286, 0, 286,
	0, 286, 0, 0, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 1933, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 0, 0, 1953, 0, 0, 0, 1939, 0,
	0, 0, 0, 1950, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1961, 1963, 0, 286, 286, 286, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1972, 0, 0, 1982, 0, 0, 0, 0, 0,
	0, 1961, 1963, 0, 0, 0, 0, 0, 0, 3415,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	1979, 0, 1954, 0, 0, 0, 0, 1948, 1949, 0,
	0, 1956, 1957, 1958, 1959, 791, 0, 0, 0, 0,
	0, 1939, 0, 0, 0, 1970, 0, 0, 0, 0,
	1166, 0, 1166, 0, 0, 0, 774, 0, 0, 0,
	1954, 775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2647, 0, 0, 1961, 1963, 0, 3958, 3959, 0,
	0, 3962, 776, 1984, 0, 3965, 0, 0, 1348, 1980,
	1348, 0, 0, 777, 3969, 0, 0, 0, 0, 0,
	1948, 1949, 0, 3976, 0, 1348, 0, 0, 3566, 0,
	1969, 0, 0, 0, 0, 778, 0, 0, 0, 0,
	0, 1984, 0, 3989, 0, 116, 2167, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 797, 0, 0,
	0, 0, 1960, 4012, 4013, 0, 4014, 4015, 4016, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 779, 1344,
	0, 0, 0, 0, 4022, 1955, 0, 0, 4024, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	1960, 0, 0, 780, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4053, 4054, 1955, 1145, 0, 781, 1145, 1145, 0,
	286, 782, 0, 0, 1984, 0, 0, 0, 0, 4065,
	0, 0, 0, 0, 0, 0, 0, 1986, 806, 1348,
	0, 1973, 0, 0, 4074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 796, 0, 0, 0, 286,
	0, 0, 0, 2715, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 1960, 0, 286, 0, 0, 286, 0,
	0, 0, 286, 1166, 286, 0, 0, 0, 0, 0,
	0, 286, 286, 2007, 0, 0, 1955, 2007, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 793, 0, 0, 4137, 1951, 1947,
	0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 4155, 0, 0, 0, 0, 0,
	0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 1986, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	286, 1331, 0, 0, 0, 0, 0, 3485, 4186, 0,
	0, 0, 0, 0, 286, 0, 0, 2104, 0, 0,
	0, 803, 0, 784, 0, 0, 0, 286, 1348, 1348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1348,
	0, 0, 0, 0, 0, 0, 4210, 4211, 0, 0,
	0, 0, 0, 804, 0, 785, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 286, 1951,
	1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940,
	1941, 0, 0, 0, 0, 791, 0, 0, 805, 0,
	0, 0, 0, 0, 0, 0, 786, 0, 0, 0,
	0, 801, 802, 0, 799, 901, 774, 0, 0, 0,
	794, 775, 0, 787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1348, 0, 1348, 0, 1348,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 1348, 1348, 0,
	0, 0, 776, 0, 1398, 2081, 1398, 1398, 788, 0,
	795, 1348, 0, 777, 4314, 0, 0, 0, 0, 789,
	0, 0, 0, 1348, 0, 1348, 1348, 1348, 0, 0,
	0, 0, 0, 0, 790, 778, 0, 0, 0, 798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 807, 0, 0, 797, 0, 0,
	0, 0, 0, 0, 0, 792, 0, 0, 286, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 779, 0,
	1499, 286, 0, 0, 0, 0, 1609, 0, 0, 0,
	0, 0, 0, 4361, 4362, 0, 0, 0, 0, 4366,
	4367, 0, 0, 780, 4370, 4371, 0, 0, 0, 0,
	0, 0, 4375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4379, 0, 0, 781, 0, 0, 0,
	0, 782, 0, 0, 0, 286, 286, 286, 286, 4384,
	0, 0, 0, 0, 286, 0, 0, 0, 806, 286,
	0, 0, 0, 0, 0, 0, 0, 2167, 2167, 1348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 116, 796, 116, 0, 0, 0,
	286, 0, 0, 0, 0, 1755, 1756, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 0, 0, 116, 0, 0, 0, 0,
	0, 116, 0, 0, 793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 784, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 1348, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 804, 0, 785, 4538, 0, 0, 1348,
	0, 0, 0, 0, 0, 0, 0, 0, 1931, 1932,
	0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 1962, 0, 0, 0, 0, 0, 805, 0,
	1934, 0, 0, 0, 0, 0, 786, 0, 0, 0,
	1981, 801, 802, 0, 799, 0, 0, 0, 0, 0,
	794, 0, 0, 787, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 2715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 788, 1344,
	795, 0, 0, 0, 0, 0, 0, 0, 2007, 789,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 790, 0, 0, 0, 0, 798,
	0, 0, 0, 0, 0, 1348, 4651, 4652, 4653, 0,
	0, 0, 0, 0, 807, 2103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 792, 0, 286, 0, 2647,
	0, 0, 4662, 4663, 1956, 1957, 1958, 1959, 0, 0,
	0, 0, 0, 0, 1939, 0, 0, 0, 0, 0,
	4671, 4674, 0, 0, 2167, 0, 0, 0, 0, 0,
	2119, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 286, 286, 0, 0, 2130, 0, 1609, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 1961, 1963, 0,
	0, 0, 0, 1348, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 1978, 0, 1979, 0, 0, 1348,
	0, 1398, 0, 1948, 1949, 0, 0, 0, 1609, 0,
	0, 0, 0, 0, 0, 0, 4733, 0, 0, 0,
	0, 1970, 0, 0, 0, 4741, 0, 0, 0, 0,
	286, 286, 0, 0, 286, 0, 1954, 0, 0, 0,
	4749, 2103, 0, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 4760,
	0, 1331, 4762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1331, 0, 0,
	0, 0, 921, 0, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1348, 0, 0,
	0, 0, 0, 923, 0, 0, 1969, 0, 924, 0,
	1348, 0, 1348, 0, 0, 0, 0, 1984, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 925,
	286, 942, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 901, 0,
	0, 0, 0, 0, 0, 0, 1960, 926, 286, 0,
	0, 286, 927, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	286, 0, 0, 0, 950, 0, 0, 0, 0, 0,
	1344, 928, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 948, 0, 1973, 0, 0,
	0, 0, 0, 0, 116, 116, 0, 116, 4884, 0,
	0, 0, 4888, 0, 0, 0, 0, 0, 0, 0,
	922, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 929, 0, 0, 0, 0, 930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 116,
	952, 116, 0, 0, 0, 806, 0, 0, 0, 0,
	0, 0, 286, 2441, 286, 0, 0, 2448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2472, 0, 2472, 1971, 0, 0,
	0, 286, 2479, 0, 0, 0, 0, 0, 1945, 1946,
	1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936,
	1937, 1938, 1940, 1941, 0, 0, 0, 0, 0, 0,
	0, 951, 0, 3484, 0, 2647, 0, 0, 0, 0,
	0, 946, 0, 0, 4674, 0, 0, 0, 2448, 0,
	0, 2508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 1166, 2544, 0, 2546, 0,
	2548, 0, 2550, 0, 2551, 0, 1171, 0, 0, 116,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 931,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	933, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2580,
	2581, 2582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 934, 0, 0, 0, 1344, 1344, 0, 0,
	0, 0, 5075, 5075, 5075, 0, 0, 0, 0, 288,
	288, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 805, 1348, 1348, 0, 5100,
	0, 288, 0, 0, 0, 0, 0, 0, 920, 0,
	0, 943, 1348, 0, 0, 0, 0, 0, 0, 0,
	935, 0, 0, 901, 0, 0, 0, 0, 288, 0,
	1348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 1348, 0, 941, 0, 0,
	0, 0, 0, 0, 0, 5075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 936, 0, 2167, 169, 937,
	955, 1348, 954, 0, 0, 0, 938, 78, 0, 48,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 939, 0, 0, 0, 79, 947, 0, 0, 164,
	0, 0, 956, 0, 953, 0, 0, 0, 0, 0,
	0, 807, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 0, 0, 0, 0, 0, 0,
	50, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2167, 0, 0,
	116, 49, 0, 92, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1331, 1331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 70, 2965, 0, 0, 5075, 5232, 286, 0, 53,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 286, 51, 0, 114,
	0, 0, 0, 0, 0, 98, 111, 286, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 286, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 54,
	0, 0, 0, 0, 292, 0, 0, 0, 3016, 1344,
	0, 1398, 0, 0, 0, 1398, 0, 1398, 0, 99,
	0, 0, 0, 0, 0, 0, 0, 0, 1348, 0,
	0, 0, 0, 0, 2460, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 1348, 0, 0, 0, 1348, 0,
	0, 0, 0, 286, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 893, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 72, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 893, 0, 0, 0, 0, 0, 0, 0, 1348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1348, 0, 1348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1348, 0, 1348, 0, 1348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1609, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	2448, 2448, 0, 0, 0, 0, 0, 1348, 0, 0,
	1348, 55, 0, 0, 0, 116, 1344, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 58, 0,
	0, 0, 0, 61, 0, 0, 0, 0, 2103, 0,
	0, 1331, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 60, 198, 106, 0, 0, 110, 0, 0, 0,
	56, 0, 0, 0, 168, 0, 0, 0, 2167, 3254,
	0, 0, 57, 0, 0, 0, 0, 2460, 286, 0,
	0, 0, 116, 251, 0, 0, 0, 1348, 0, 0,
	0, 64, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 1348, 2103, 0, 2103, 0, 0,
	0, 0, 165, 0, 2167, 2167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 3325, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 2167, 2167, 286, 0, 0, 286, 0,
	0, 3339, 0, 3342, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 2167, 203, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 1348, 1348, 0, 0, 0, 0, 246,
	0, 0, 0, 199, 0, 0, 0, 0, 3376, 1609,
	3378, 1609, 116, 0, 0, 0, 0, 3384, 1331, 0,
	0, 0, 0, 0, 0, 0, 1331, 286, 202, 1348,
	0, 3, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1398, 0, 0, 0, 0, 0, 0,
	0, 3413, 0, 0, 288, 0, 288, 288, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 1508, 288, 288, 0, 0, 288, 288, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1348, 1348,
	0, 1348, 0, 0, 0, 1348, 0, 0, 1348, 288,
	288, 286, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 116, 0,
	0, 0, 0, 0, 1508, 288, 288, 0, 2167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 0,
	1508, 1348, 1348, 1348, 2103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1348, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 288, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 1348, 0, 286, 286, 0, 0, 0,
	3614, 0, 0, 0, 2167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1398, 0, 0, 0, 1609, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2103, 0,
	0, 3663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2103, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 1348, 0, 1627, 0, 0, 0, 0,
	0, 1348, 0, 0, 0, 1348, 1348, 0, 1348, 286,
	0, 0, 0, 3718, 3720, 1348, 0, 2460, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 1348, 0, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	2103, 2103, 0, 0, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2103, 0,
	286, 2103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2715, 0, 0, 0, 0, 0,
	1627, 0, 1348, 0, 1348, 0, 0, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1627, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 1348,
	0, 1508, 0, 0, 0, 0, 288, 288, 288, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 1348, 288, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3840, 0, 1627, 2448, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 1348, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	1931, 1932, 116, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 0, 0, 1348, 0, 0, 0, 0, 1348, 0,
	0, 0, 0, 1968, 1962, 0, 0, 0, 0, 0,
	0, 116, 1934, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 1981, 0, 1348, 1348, 1348, 1348, 1348, 1348,
	1348, 0, 0, 0, 0, 0, 0, 116, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 1348, 1933, 0,
	0, 0, 0, 0, 0, 3943, 0, 1609, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3956, 0, 0, 0, 2167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1348, 0, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2103, 0, 2103, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 0, 0, 0, 0, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1348, 0,
	0, 0, 0, 0, 116, 0, 0, 116, 0, 0,
	0, 0, 288, 0, 1508, 1508, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 1972,
	0, 0, 1982, 2167, 0, 0, 0, 0, 0, 1961,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 0, 1979, 0,
	0, 0, 0, 0, 1505, 1948, 1949, 0, 0, 0,
	0, 0, 1348, 288, 0, 0, 0, 288, 0, 893,
	0, 0, 288, 1970, 0, 0, 893, 0, 288, 0,
	1348, 1348, 1348, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 288, 0, 288, 0, 0, 0,
	0, 1348, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 1508, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 1348,
	0, 0, 0, 1508, 1508, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 288, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 1969, 1508,
	0, 1508, 1508, 1508, 0, 0, 0, 0, 0, 1984,
	0, 0, 288, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 2167, 0, 0, 288, 288, 0, 288, 0,
	288, 0, 288, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	288, 288, 288, 0, 0, 1348, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	1348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	2460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 1348, 1348, 2460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4269, 0, 0, 0, 0, 1348, 0, 0, 1348, 0,
	4279, 0, 1348, 0, 0, 0, 0, 1627, 1627, 0,
	0, 0, 1348, 0, 0, 0, 0, 2460, 1505, 0,
	0, 0, 4296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 3481, 4342, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 1931,
	1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0,
	0, 0, 0, 0, 1627, 0, 1627, 0, 1627, 1508,
	0, 0, 1968, 1962, 0, 0, 0, 0, 0, 1628,
	0, 1934, 0, 0, 0, 0, 1627, 1627, 0, 0,
	0, 1981, 288, 0, 0, 1508, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 1627, 288, 1627, 1627, 1627, 1933, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 1953, 0,
	0, 1628, 0, 0, 0, 0, 0, 1950, 893, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 288, 0, 0, 0, 288, 0, 288, 0, 0,
	0, 0, 0, 0, 288, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 1958, 1959, 0,
	0, 0, 0, 0, 0, 1939, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 1348, 0, 1348,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 1982, 0, 288, 0, 0, 0, 0, 1961, 1963,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 4514, 0, 0, 1978, 0, 1979, 0, 0,
	288, 0, 0, 0, 1948, 1949, 0, 0, 2460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 288, 1508,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 288, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2460, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	4609, 0, 1505, 0, 0, 0, 0, 0, 1984, 288,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 1508, 0,
	0, 0, 0, 0, 1508, 0, 0, 1960, 0, 0,
	0, 0, 288, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 288, 0, 288, 0, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1931,
	1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 288, 288,
	288, 288, 1968, 1962, 0, 0, 0, 288, 0, 0,
	0, 1934, 288, 0, 1505, 0, 0, 0, 0, 0,
	0, 1981, 0, 0, 4718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 288, 0, 0, 0, 1933, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 1506, 0, 0, 0, 0, 1950, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1945,
	1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935,
	1936, 1937, 1938, 1940, 1941, 0, 0, 2460, 0, 0,
	0, 0, 0, 0, 3480, 0, 0, 0, 0, 0,
	0, 0, 1505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 1958, 1959, 0,
	0, 0, 0, 0, 0, 1939, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4845, 1609,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 1982, 0, 0, 0, 0, 0, 0, 1961, 1963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1978, 1627, 1979, 0, 0,
	0, 1628, 1628, 0, 1948, 1949, 0, 0, 0, 1627,
	0, 1627, 1506, 0, 0, 0, 0, 1627, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 1628, 0,
	1628, 0, 1628, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	1628, 1628, 0, 4961, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 1628, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 1628, 0, 1628, 1628,
	1628, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 288, 288, 0, 0, 0,
	1955, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 288, 5057, 0, 288, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1945,
	1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935,
	1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 1506, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 1508, 0,
	1508, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 288, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 288, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 1506, 0, 1505, 0, 0, 1508, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 1508, 0, 1508, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 288, 1508, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1931, 1932,
	0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 1968, 1962, 0, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 1987, 1506, 0,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 1627, 0, 0,
	0, 0, 0, 0, 1956, 1957, 1958, 1959, 0, 0,
	0, 1627, 1628, 1627, 1939, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 893, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 1961, 1963, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 1978, 0, 1979, 0, 1627, 0,
	0, 0, 0, 1948, 1949, 0, 0, 0, 0, 0,
	1627, 0, 1627, 0, 0, 0, 0, 0, 0, 0,
	1628, 1970, 0, 0, 1627, 0, 1627, 0, 1627, 0,
	0, 0, 0, 1628, 0, 1628, 1954, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 1508, 0, 1508, 0, 0,
	0, 1508, 0, 0, 1508, 0, 1505, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	0, 0, 288, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 1508, 1508, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 1508, 0, 0, 0, 288, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 893,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 1946,
	1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936,
	1937, 1938, 1940, 1941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 1508, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 1508, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 1627, 1627, 0,
	1627, 288, 0, 0, 1627, 0, 0, 1627, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 288, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1627, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	1627, 1627, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 1508, 0, 1627, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	288, 0, 1505, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 1508, 1508, 1508, 1508, 1508, 1508, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 1628, 0, 0,
	0, 1506, 0, 0, 1505, 1505, 1508, 1505, 1508, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 1627, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 0,
	1628, 0, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	1506, 1505, 0, 1506, 0, 0, 1508, 1508, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1931, 1932, 0, 1964, 1965, 1966,
	1975, 1976, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1627, 1627, 0, 0, 1968, 1962, 0,
	0, 0, 1508, 0, 0, 1508, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 1505, 1987, 0, 0, 0, 1627, 288, 288,
	0, 0, 1933, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 1627, 1627, 1627, 1627, 1627, 1627, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 1957, 1958, 1959, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 1627, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 0, 0, 1982, 0, 0, 0,
	0, 0, 0, 1961, 1963, 0, 0, 1505, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 1508, 0,
	1978, 0, 1979, 0, 0, 0, 0, 0, 1508, 1948,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 1627,
	1627, 1627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1980, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 1505, 0, 0, 1627, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 1628, 1628, 0, 1628, 0, 0, 0, 1628, 0,
	0, 1628, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 1962, 0, 0, 0,
	0, 0, 1960, 0, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1955, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 1953, 0, 1973, 0, 0, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 1628, 1628, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 1956, 1957,
	1958, 1959, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1627, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 1627, 0, 0, 1945, 1946, 1952, 1974, 1951, 1947,
	0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 1972, 0, 0, 1982, 5001, 0, 0, 0, 0,
	0, 1961, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	1979, 0, 0, 0, 0, 0, 0, 1948, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 1506, 1506,
	1954, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	1960, 0, 0, 1968, 1962, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 1628, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 1933, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 0,
	0, 1628, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 1628, 1628,
	1628, 1628, 1628, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 0, 0, 0, 0, 0, 1939, 0, 0, 0,
	1506, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	0, 0, 0, 4997, 0, 0, 0, 0, 0, 1972,
	0, 0, 1982, 1506, 0, 1628, 0, 0, 0, 1961,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 0, 1979, 0,
	0, 0, 0, 0, 0, 1948, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 1628, 1628, 1628, 0, 0, 0, 1984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0,
	0, 4903, 0, 0, 1503, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 1509,
	304, 305, 1510, 1511, 1512, 0, 1513, 686, 1514, 1515,
	1516, 306, 1517, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	1518, 691, 318, 319, 320, 321, 322, 323, 1519, 1520,
	0, 324, 692, 693, 694, 1521, 325, 326, 695, 1522,
	1589, 1523, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 1524, 336, 337, 338, 335, 339, 1525, 340, 1628,
	341, 342, 343, 344, 345, 346, 1526, 347, 348, 349,
	1288, 350, 351, 352, 1527, 1528, 1530, 1529, 1531, 1532,
	1533, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 1534, 363, 359, 361, 1535, 364, 362, 365, 1536,
	366, 367, 368, 1537, 1538, 369, 370, 371, 1539, 372,
	373, 374, 1540, 375, 376, 377, 1541, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 1542, 293, 1543, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 1544,
	396, 397, 398, 1545, 399, 400, 1546, 1289, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 1547, 413, 704, 1548, 705, 414, 1549, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	1291, 422, 423, 1550, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 1551, 1290, 511, 432,
	709, 710, 1552, 711, 1553, 433, 434, 1292, 712, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 1554, 445, 447, 446, 1555, 448,
	713, 1295, 449, 450, 1296, 1556, 451, 452, 453, 454,
	455, 456, 459, 1557, 1558, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1559, 295, 1299, 505,
	506, 507, 508, 1560, 714, 509, 715, 512, 513, 1561,
	0, 514, 0, 515, 1562, 1563, 517, 518, 519, 1564,
	1565, 520, 521, 716, 1300, 522, 1301, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	1566, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 1567, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 1568, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	1569, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 1570, 604, 605, 603,
	606, 607, 608, 1571, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 1572, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 1573, 639, 640, 0, 635, 626, 1574, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 1575, 649, 727,
	728, 729, 730, 1576, 659, 1577, 650, 651, 652, 653,
	731, 654, 732, 1578, 655, 656, 657, 658, 0, 660,
	661, 1579, 1580, 662, 663, 665, 667, 668, 664, 666,
	669, 1581, 670, 1582, 0, 671, 672, 673, 733, 734,
	735, 1583, 675, 674, 676, 677, 678, 736, 679, 680,
	1584, 1585, 1586, 1587, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 0, 0, 0, 0, 0, 2943,
	0, 0, 0, 0, 0, 0, 0, 2944, 296, 297,
	299, 298, 300, 301, 302, 303, 1509, 304, 305, 1510,
	1511, 1512, 0, 1513, 686, 1514, 1515, 1516, 306, 1517,
	307, 308, 1287, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 1518, 691, 318,
	319, 320, 321, 322, 323, 1519, 1520, 0, 324, 692,
	693, 694, 1521, 325, 326, 695, 1522, 1589, 1523, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 1524, 336,
	337, 338, 335, 339, 1525, 340, 0, 341, 342, 343,
	344, 345, 346, 1526, 347, 348, 349, 1288, 350, 351,
	352, 1527, 1528, 1530, 1529, 1531, 1532, 1533, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 1534, 363,
	359, 361, 1535, 364, 362, 365, 1536, 366, 367, 368,
	1537, 1538, 369, 370, 371, 1539, 372, 373, 374, 1540,
	375, 376, 377, 1541, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 1542, 293, 1543, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 1544, 396, 397, 398,
	1545, 399, 400, 1546, 1289, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 1547,
	413, 704, 1548, 705, 414, 1549, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1291, 422, 423,
	1550, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 1551, 1290, 511, 432, 709, 710, 1552,
	711, 1553, 433, 434, 1292, 712, 1293, 435, 436, 437,
	1294, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 1554, 445, 447, 446, 1555, 448, 713, 1295, 449,
	450, 1296, 1556, 451, 452, 453, 454, 455, 456, 459,
	1557, 1558, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1297, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1298, 503, 491, 1559, 295, 1299, 505, 506, 507, 508,
	1560, 714, 509, 715, 512, 513, 1561, 0, 514, 0,
	515, 1562, 1563, 517, 518, 519, 1564, 1565, 520, 521,
	716, 1300, 522, 1301, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 1566, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 1567, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 1568, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 1569, 578, 579,
	580, 1302, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 1570, 604, 605, 603, 606, 607, 608,
	1571, 609, 610, 592, 593, 611, 612, 1303, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 1572, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 1573, 639,
	640, 0, 635, 626, 1574, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 1575, 649, 727, 728, 729, 730,
	1576, 659, 1577, 650, 651, 652, 653, 731, 654, 732,
	1578, 655, 656, 657, 658, 0, 660, 661, 1579, 1580,
	662, 663, 665, 667, 668, 664, 666, 669, 1581, 670,
	1582, 0, 671, 672, 673, 733, 734, 735, 1583, 675,
	674, 676, 677, 678, 736, 679, 680, 1584, 1585, 1586,
	1587, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1503, 0, 0, 0,
	3983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3985, 296, 297, 299, 298, 300, 301, 302,
	303, 1509, 304, 305, 1510, 1511, 1512, 0, 1513, 686,
	1514, 1515, 1516, 306, 1517, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 1518, 691, 318, 319, 320, 321, 322, 323,
	1519, 1520, 0, 324, 692, 693, 694, 1521, 325, 326,
	695, 1522, 1589, 1523, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 1524, 336, 337, 338, 335, 339, 1525,
	340, 0, 341, 342, 343, 344, 345, 346, 1526, 347,
	348, 349, 1288, 350, 351, 352, 1527, 1528, 1530, 1529,
	1531, 1532, 1533, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 1534, 363, 359, 361, 1535, 364, 362,
	365, 1536, 366, 367, 368, 1537, 1538, 369, 370, 371,
	1539, 372, 373, 374, 1540, 375, 376, 377, 1541, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 1542, 293, 1543, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 1544, 396, 397, 398, 1545, 399, 400, 1546, 1289,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 1547, 413, 704, 1548, 705, 414,
	1549, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 1291, 422, 423, 1550, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 1551, 1290,
	511, 432, 709, 710, 1552, 711, 1553, 433, 434, 1292,
	712, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 1554, 445, 447, 446,
	1555, 448, 713, 1295, 449, 450, 1296, 1556, 451, 452,
	453, 454, 455, 456, 459, 1557, 1558, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1559, 295,
	1299, 505, 506, 507, 508, 1560, 714, 509, 715, 512,
	513, 1561, 0, 514, 0, 515, 1562, 1563, 517, 518,
	519, 1564, 1565, 520, 521, 716, 1300, 522, 1301, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 1566, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 1567, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 1568, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 1569, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 1570, 604,
	605, 603, 606, 607, 608, 1571, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 1572, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 1573, 639, 640, 0, 635, 626, 1574,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 1575,
	649, 727, 728, 729, 730, 1576, 659, 1577, 650, 651,
	652, 653, 731, 654, 732, 1578, 655, 656, 657, 658,
	0, 660, 661, 1579, 1580, 662, 663, 665, 667, 668,
	664, 666, 669, 1581, 670, 1582, 0, 671, 672, 673,
	733, 734, 735, 1583, 675, 674, 676, 677, 678, 736,
	679, 680, 1584, 1585, 1586, 1587, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4419, 296, 297, 299, 298, 300, 301, 302, 303,
	1509, 304, 305, 1510, 1511, 1512, 0, 1513, 686, 1514,
	1515, 1516, 306, 1517, 307, 308, 1287, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 1518, 691, 318, 319, 320, 321, 322, 323, 1519,
	1520, 0, 324, 692, 693, 694, 1521, 325, 326, 695,
	1522, 1589, 1523, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 1524, 336, 337, 338, 335, 339, 1525, 340,
	0, 341, 342, 343, 344, 345, 346, 1526, 347, 348,
	349, 1288, 350, 351, 352, 1527, 1528, 1530, 1529, 1531,
	1532, 1533, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 1534, 363, 359, 361, 1535, 364, 362, 365,
	1536, 366, 367, 368, 1537, 1538, 369, 370, 371, 1539,
	372, 373, 374, 1540, 375, 376, 377, 1541, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 1542, 293, 1543, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	1544, 396, 397, 398, 1545, 399, 400, 1546, 1289, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1547, 413, 704, 1548, 705, 414, 1549,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1291, 422, 423, 1550, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 1551, 1290, 511,
	432, 709, 710, 1552, 711, 1553, 433, 434, 1292, 712,
	1293, 435, 436, 437, 1294, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 1554, 445, 447, 446, 1555,
	448, 713, 1295, 449, 450, 1296, 1556, 451, 452, 453,
	454, 455, 456, 459, 1557, 1558, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1297, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1298, 503, 491, 1559, 295, 1299,
	505, 506, 507, 508, 1560, 714, 509, 715, 512, 513,
	1561, 0, 514, 0, 515, 1562, 1563, 517, 518, 519,
	1564, 1565, 520, 521, 716, 1300, 522, 1301, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 1566, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 1567, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 1568, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 1569, 578, 579, 580, 1302, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 1570, 604, 605,
	603, 606, 607, 608, 1571, 609, 610, 592, 593, 611,
	612, 1303, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 1572, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 1573, 639, 640, 0, 635, 626, 1574, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 1575, 649,
	727, 728, 729, 730, 1576, 659, 1577, 650, 651, 652,
	653, 731, 654, 732, 1578, 655, 656, 657, 658, 0,
	660, 661, 1579, 1580, 662, 663, 665, 667, 668, 664,
	666, 669, 1581, 670, 1582, 0, 671, 672, 673, 733,
	734, 735, 1583, 675, 674, 676, 677, 678, 736, 679,
	680, 1584, 1585, 1586, 1587, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4417, 296, 297, 299, 298, 300, 301, 302, 303, 1509,
	304, 305, 1510, 1511, 1512, 0, 1513, 686, 1514, 1515,
	1516, 306, 1517, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	1518, 691, 318, 319, 320, 321, 322, 323, 1519, 1520,
	0, 324, 692, 693, 694, 1521, 325, 326, 695, 1522,
	1589, 1523, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 1524, 336, 337, 338, 335, 339, 1525, 340, 0,
	341, 342, 343, 344, 345, 346, 1526, 347, 348, 349,
	1288, 350, 351, 352, 1527, 1528, 1530, 1529, 1531, 1532,
	1533, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 1534, 363, 359, 361, 1535, 364, 362, 365, 1536,
	366, 367, 368, 1537, 1538, 369, 370, 371, 1539, 372,
	373, 374, 1540, 375, 376, 377, 1541, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 1542, 293, 1543, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 1544,
	396, 397, 398, 1545, 399, 400, 1546, 1289, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 1547, 413, 704, 1548, 705, 414, 1549, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	1291, 422, 423, 1550, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 1551, 1290, 511, 432,
	709, 710, 1552, 711, 1553, 433, 434, 1292, 712, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 1554, 445, 447, 446, 1555, 448,
	713, 1295, 449, 450, 1296, 1556, 451, 452, 453, 454,
	455, 456, 459, 1557, 1558, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1559, 295, 1299, 505,
	506, 507, 508, 1560, 714, 509, 715, 512, 513, 1561,
	0, 514, 0, 515, 1562, 1563, 517, 518, 519, 1564,
	1565, 520, 521, 716, 1300, 522, 1301, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	1566, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 1567, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 1568, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	1569, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 1570, 604, 605, 603,
	606, 607, 608, 1571, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 1572, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 1573, 639, 640, 0, 635, 626, 1574, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 1575, 649, 727,
	728, 729, 730, 1576, 659, 1577, 650, 651, 652, 653,
	731, 654, 732, 1578, 655, 656, 657, 658, 0, 660,
	661, 1579, 1580, 662, 663, 665, 667, 668, 664, 666,
	669, 1581, 670, 1582, 0, 671, 672, 673, 733, 734,
	735, 1583, 675, 674, 676, 677, 678, 736, 679, 680,
	1584, 1585, 1586, 1587, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4657, 296, 297, 299, 298, 300, 301,
	302, 303, 1509, 304, 305, 1510, 1511, 1512, 0, 1513,
	686, 1514, 1515, 1516, 306, 1517, 307, 308, 1287, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 1518, 691, 318, 319, 320, 321, 322,
	323, 1519, 1520, 0, 324, 692, 693, 694, 1521, 325,
	326, 695, 1522, 1589, 1523, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 1524, 336, 337, 338, 335, 339,
	1525, 340, 0, 341, 342, 343, 344, 345, 346, 1526,
	347, 348, 349, 1288, 350, 351, 352, 1527, 1528, 1530,
	1529, 1531, 1532, 1533, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 1534, 363, 359, 361, 1535, 364,
	362, 365, 1536, 366, 367, 368, 1537, 1538, 369, 370,
	371, 1539, 372, 373, 374, 1540, 375, 376, 377, 1541,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 1542, 293, 1543,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 1544, 396, 397, 398, 1545, 399, 400, 1546,
	1289, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 1547, 413, 704, 1548, 705,
	414, 1549, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 1291, 422, 423, 1550, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 1551,
	1290, 511, 432, 709, 710, 1552, 711, 1553, 433, 434,
	1292, 712, 1293, 435, 436, 437, 1294, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 1554, 445, 447,
	446, 1555, 448, 713, 1295, 449, 450, 1296, 1556, 451,
	452, 453, 454, 455, 456, 459, 1557, 1558, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1297, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1298, 503, 491, 1559,
	295, 1299, 505, 506, 507, 508, 1560, 714, 509, 715,
	512, 513, 1561, 0, 514, 0, 515, 1562, 1563, 517,
	518, 519, 1564, 1565, 520, 521, 716, 1300, 522, 1301,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 1566, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 1567,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 1568, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 1569, 578, 579, 580, 1302, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 1570,
	604, 605, 603, 606, 607, 608, 1571, 609, 610, 592,
	593, 611, 612, 1303, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 1572, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 1573, 639, 640, 0, 635, 626,
	1574, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	1575, 649, 727, 728, 729, 730, 1576, 659, 1577, 650,
	651, 652, 653, 731, 654, 732, 1578, 655, 656, 657,
	658, 0, 660, 661, 1579, 1580, 662, 663, 665, 667,
	668, 664, 666, 669, 1581, 670, 1582, 0, 671, 672,
	673, 733, 734, 735, 1583, 675, 674, 676, 677, 678,
	736, 679, 680, 1584, 1585, 1586, 1587, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4523, 296, 297, 299,
	298, 300, 301, 302, 303, 1509, 304, 305, 1510, 1511,
	1512, 0, 1513, 686, 1514, 1515, 1516, 306, 1517, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 1518, 691, 318, 319,
	320, 321, 322, 323, 1519, 1520, 0, 324, 692, 693,
	694, 1521, 325, 326, 695, 1522, 1589, 1523, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 1524, 336, 337,
	338, 335, 339, 1525, 340, 0, 341, 342, 343, 344,
	345, 346, 1526, 347, 348, 349, 1288, 350, 351, 352,
	1527, 1528, 1530, 1529, 1531, 1532, 1533, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 1534, 363, 359,
	361, 1535, 364, 362, 365, 1536, 366, 367, 368, 1537,
	1538, 369, 370, 371, 1539, 372, 373, 374, 1540, 375,
	376, 377, 1541, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	1542, 293, 1543, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 1544, 396, 397, 398, 1545,
	399, 400, 1546, 1289, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 1547, 413,
	704, 1548, 705, 414, 1549, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 1291, 422, 423, 1550,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 1551, 1290, 511, 432, 709, 710, 1552, 711,
	1553, 433, 434, 1292, 712, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	1554, 445, 447, 446, 1555, 448, 713, 1295, 449, 450,
	1296, 1556, 451, 452, 453, 454, 455, 456, 459, 1557,
	1558, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1559, 295, 1299, 505, 506, 507, 508, 1560,
	714, 509, 715, 512, 513, 1561, 0, 514, 0, 515,
	1562, 1563, 517, 518, 519, 1564, 1565, 520, 521, 716,
	1300, 522, 1301, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 1566, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 1567, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 1568, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 1569, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 1570, 604, 605, 603, 606, 607, 608, 1571,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 1572, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 1573, 639, 640,
	0, 635, 626, 1574, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 1575, 649, 727, 728, 729, 730, 1576,
	659, 1577, 650, 651, 652, 653, 731, 654, 732, 1578,
	655, 656, 657, 658, 0, 660, 661, 1579, 1580, 662,
	663, 665, 667, 668, 664, 666, 669, 1581, 670, 1582,
	0, 671, 672, 673, 733, 734, 735, 1583, 675, 674,
	676, 677, 678, 736, 679, 680, 1584, 1585, 1586, 1587,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4346,
	296, 297, 299, 298, 300, 301, 302, 303, 1509, 304,
	305, 1510, 1511, 1512, 0, 1513, 686, 1514, 1515, 1516,
	306, 1517, 307, 308, 1287, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 1518,
	691, 318, 319, 320, 321, 322, 323, 1519, 1520, 0,
	324, 692, 693, 694, 1521, 325, 326, 695, 1522, 1589,
	1523, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	1524, 336, 337, 338, 335, 339, 1525, 340, 0, 341,
	342, 343, 344, 345, 346, 1526, 347, 348, 349, 1288,
	350, 351, 352, 1527, 1528, 1530, 1529, 1531, 1532, 1533,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	1534, 363, 359, 361, 1535, 364, 362, 365, 1536, 366,
	367, 368, 1537, 1538, 369, 370, 371, 1539, 372, 373,
	374, 1540, 375, 376, 377, 1541, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 1542, 293, 1543, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 1544, 396,
	397, 398, 1545, 399, 400, 1546, 1289, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 1547, 413, 704, 1548, 705, 414, 1549, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 1291,
	422, 423, 1550, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 1551, 1290, 511, 432, 709,
	710, 1552, 711, 1553, 433, 434, 1292, 712, 1293, 435,
	436, 437, 1294, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 1554, 445, 447, 446, 1555, 448, 713,
	1295, 449, 450, 1296, 1556, 451, 452, 453, 454, 455,
	456, 459, 1557, 1558, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1297, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1298, 503, 491, 1559, 295, 1299, 505, 506,
	507, 508, 1560, 714, 509, 715, 512, 513, 1561, 0,
	514, 0, 515, 1562, 1563, 517, 518, 519, 1564, 1565,
	520, 521, 716, 1300, 522, 1301, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 1566,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 1567, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 1568, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 1569,
	578, 579, 580, 1302, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 1570, 604, 605, 603, 606,
	607, 608, 1571, 609, 610, 592, 593, 611, 612, 1303,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	1572, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	1573, 639, 640, 0, 635, 626, 1574, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 1575, 649, 727, 728,
	729, 730, 1576, 659, 1577, 650, 651, 652, 653, 731,
	654, 732, 1578, 655, 656, 657, 658, 0, 660, 661,
	1579, 1580, 662, 663, 665, 667, 668, 664, 666, 669,
	1581, 670, 1582, 0, 671, 672, 673, 733, 734, 735,
	1583, 675, 674, 676, 677, 678, 736, 679, 680, 1584,
	1585, 1586, 1587, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 1503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4001, 296, 297, 299, 298, 300, 301, 302,
	303, 1509, 304, 305, 1510, 1511, 1512, 0, 1513, 686,
	1514, 1515, 1516, 306, 1517, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 1518, 691, 318, 319, 320, 321, 322, 323,
	1519, 1520, 0, 324, 692, 693, 694, 1521, 325, 326,
	695, 1522, 1589, 1523, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 1524, 336, 337, 338, 335, 339, 1525,
	340, 0, 341, 342, 343, 344, 345, 346, 1526, 347,
	348, 349, 1288, 350, 351, 352, 1527, 1528, 1530, 1529,
	1531, 1532, 1533, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 1534, 363, 359, 361, 1535, 364, 362,
	365, 1536, 366, 367, 368, 1537, 1538, 369, 370, 371,
	1539, 372, 373, 374, 1540, 375, 376, 377, 1541, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 1542, 293, 1543, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 1544, 396, 397, 398, 1545, 399, 400, 1546, 1289,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 1547, 413, 704, 1548, 705, 414,
	1549, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 1291, 422, 423, 1550, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 1551, 1290,
	511, 432, 709, 710, 1552, 711, 1553, 433, 434, 1292,
	712, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 1554, 445, 447, 446,
	1555, 448, 713, 1295, 449, 450, 1296, 1556, 451, 452,
	453, 454, 455, 456, 459, 1557, 1558, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1559, 295,
	1299, 505, 506, 507, 508, 1560, 714, 509, 715, 512,
	513, 1561, 0, 514, 0, 515, 1562, 1563, 517, 518,
	519, 1564, 1565, 520, 521, 716, 1300, 522, 1301, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 1566, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 1567, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 1568, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 1569, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 1570, 604,
	605, 603, 606, 607, 608, 1571, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 1572, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 1573, 639, 640, 0, 635, 626, 1574,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 1575,
	649, 727, 728, 729, 730, 1576, 659, 1577, 650, 651,
	652, 653, 731, 654, 732, 1578, 655, 656, 657, 658,
	0, 660, 661, 1579, 1580, 662, 663, 665, 667, 668,
	664, 666, 669, 1581, 670, 1582, 0, 671, 672, 673,
	733, 734, 735, 1583, 675, 674, 676, 677, 678, 736,
	679, 680, 1584, 1585, 1586, 1587, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3813, 296, 297, 299, 298,
	300, 301, 302, 303, 1509, 304, 305, 1510, 1511, 1512,
	0, 1513, 686, 1514, 1515, 1516, 306, 1517, 307, 308,
	1287, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 1518, 691, 318, 319, 320,
	321, 322, 323, 1519, 1520, 0, 324, 692, 693, 694,
	1521, 325, 326, 695, 1522, 1589, 1523, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 1524, 336, 337, 338,
	335, 339, 1525, 340, 0, 341, 342, 343, 344, 345,
	346, 1526, 347, 348, 349, 1288, 350, 351, 352, 1527,
	1528, 1530, 1529, 1531, 1532, 1533, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 1534, 363, 359, 361,
	1535, 364, 362, 365, 1536, 366, 367, 368, 1537, 1538,
	369, 370, 371, 1539, 372, 373, 374, 1540, 375, 376,
	377, 1541, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 1542,
	293, 1543, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 1544, 396, 397, 398, 1545, 399,
	400, 1546, 1289, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 1547, 413, 704,
	1548, 705, 414, 1549, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 1291, 422, 423, 1550, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 1551, 1290, 511, 432, 709, 710, 1552, 711, 1553,
	433, 434, 1292, 712, 1293, 435, 436, 437, 1294, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 1554,
	445, 447, 446, 1555, 448, 713, 1295, 449, 450, 1296,
	1556, 451, 452, 453, 454, 455, 456, 459, 1557, 1558,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1297, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1298, 503,
	491, 1559, 295, 1299, 505, 506, 507, 508, 1560, 714,
	509, 715, 512, 513, 1561, 0, 514, 0, 515, 1562,
	1563, 517, 518, 519, 1564, 1565, 520, 521, 716, 1300,
	522, 1301, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 1566, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 1567, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	1568, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 1569, 578, 579, 580, 1302,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 1570, 604, 605, 603, 606, 607, 608, 1571, 609,
	610, 592, 593, 611, 612, 1303, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 1572, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 1573, 639, 640, 0,
	635, 626, 1574, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 1575, 649, 727, 728, 729, 730, 1576, 659,
	1577, 650, 651, 652, 653, 731, 654, 732, 1578, 655,
	656, 657, 658, 0, 660, 661, 1579, 1580, 662, 663,
	665, 667, 668, 664, 666, 669, 1581, 670, 1582, 0,
	671, 672, 673, 733, 734, 735, 1583, 675, 674, 676,
	677, 678, 736, 679, 680, 1584, 1585, 1586, 1587, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2797, 296,
	297, 299, 298, 300, 301, 302, 303, 1509, 304, 305,
	1510, 1511, 1512, 0, 1513, 686, 1514, 1515, 1516, 306,
	1517, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 1518, 691,
	318, 319, 320, 321, 322, 323, 1519, 1520, 0, 324,
	692, 693, 694, 1521, 325, 326, 695, 1522, 1589, 1523,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1524,
	336, 337, 338, 335, 339, 1525, 340, 0, 341, 342,
	343, 344, 345, 346, 1526, 347, 348, 349, 1288, 350,
	351, 352, 1527, 1528, 1530, 1529, 1531, 1532, 1533, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 1534,
	363, 359, 361, 1535, 364, 362, 365, 1536, 366, 367,
	368, 1537, 1538, 369, 370, 371, 1539, 372, 373, 374,
	1540, 375, 376, 377, 1541, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 1542, 293, 1543, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 1544, 396, 397,
	398, 1545, 399, 400, 1546, 1289, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	1547, 413, 704, 1548, 705, 414, 1549, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 1291, 422,
	423, 1550, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 1551, 1290, 511, 432, 709, 710,
	1552, 711, 1553, 433, 434, 1292, 712, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 1554, 445, 447, 446, 1555, 448, 713, 1295,
	449, 450, 1296, 1556, 451, 452, 453, 454, 455, 456,
	459, 1557, 1558, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1559, 295, 1299, 505, 506, 507,
	508, 1560, 714, 509, 715, 512, 513, 1561, 0, 514,
	0, 515, 1562, 1563, 517, 518, 519, 1564, 1565, 520,
	521, 716, 1300, 522, 1301, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 1566, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 1567, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 1568, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 1569, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 1570, 604, 605, 603, 606, 607,
	608, 1571, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 1572,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 1573,
	639, 640, 0, 635, 626, 1574, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 1575, 649, 727, 728, 729,
	730, 1576, 659, 1577, 650, 651, 652, 653, 731, 654,
	732, 1578, 655, 656, 657, 658, 0, 660, 661, 1579,
	1580, 662, 663, 665, 667, 668, 664, 666, 669, 1581,
	670, 1582, 0, 671, 672, 673, 733, 734, 735, 1583,
	675, 674, 676, 677, 678, 736, 679, 680, 1584, 1585,
	1586, 1587, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 1500, 0, 1503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2419, 296, 297, 299, 298, 300, 301, 302, 303,
	1509, 304, 305, 1510, 1511, 1512, 0, 1513, 686, 1514,
	1515, 1516, 306, 1517, 307, 308, 1287, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 1518, 691, 318, 319, 320, 321, 322, 323, 1519,
	1520, 0, 324, 692, 693, 694, 1521, 325, 326, 695,
	1522, 1589, 1523, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 1524, 336, 337, 338, 335, 339, 1525, 340,
	0, 341, 342, 343, 344, 345, 346, 1526, 347, 348,
	349, 1288, 350, 351, 352, 1527, 1528, 1530, 1529, 1531,
	1532, 1533, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 1534, 363, 359, 361, 1535, 364, 362, 365,
	1536, 366, 367, 368, 1537, 1538, 369, 370, 371, 1539,
	372, 373, 374, 1540, 375, 376, 377, 1541, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 1542, 293, 1543, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	1544, 396, 397, 398, 1545, 399, 400, 1546, 1289, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1547, 413, 704, 1548, 705, 414, 1549,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1291, 422, 423, 1550, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 1551, 1290, 511,
	432, 709, 710, 1552, 711, 1553, 433, 434, 1292, 712,
	1293, 435, 436, 437, 1294, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 1554, 445, 447, 446, 1555,
	448, 713, 1295, 449, 450, 1296, 1556, 451, 452, 453,
	454, 455, 456, 459, 1557, 1558, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1297, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1298, 503, 491, 1559, 295, 1299,
	505, 506, 507, 508, 1560, 714, 509, 715, 512, 513,
	1561, 0, 514, 0, 515, 1562, 1563, 517, 518, 519,
	1564, 1565, 520, 521, 716, 1300, 522, 1301, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 1566, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 1567, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 1568, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 1569, 578, 579, 580, 1302, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 1570, 604, 605,
	603, 606, 607, 608, 1571, 609, 610, 592, 593, 611,
	612, 1303, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 1572, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 1573, 639, 640, 0, 635, 626, 1574, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 1575, 649,
	727, 728, 729, 730, 1576, 659, 1577, 650, 651, 652,
	653, 731, 654, 732, 1578, 655, 656, 657, 658, 0,
	660, 661, 1579, 1580, 662, 663, 665, 667, 668, 664,
	666, 669, 1581, 670, 1582, 0, 671, 672, 673, 733,
	734, 735, 1583, 675, 674, 676, 677, 678, 736, 679,
	680, 1584, 1585, 1586, 1587, 681, 682, 737, 683, 684,
	685, 1503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 1509, 304, 305, 1510,
	1511, 1512, 0, 1513, 686, 1514, 1515, 1516, 306, 1517,
	307, 308, 1287, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 1518, 691, 318,
	319, 320, 321, 322, 323, 1519, 1520, 0, 324, 692,
	693, 694, 1521, 325, 326, 695, 1522, 1589, 1523, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 1524, 336,
	337, 338, 335, 339, 1525, 340, 0, 341, 342, 343,
	344, 345, 346, 1526, 347, 348, 349, 1288, 350, 351,
	352, 1527, 1528, 1530, 1529, 1531, 1532, 1533, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 1534, 363,
	359, 361, 1535, 364, 362, 365, 1536, 366, 367, 368,
	1537, 1538, 369, 370, 371, 1539, 372, 373, 374, 1540,
	375, 376, 377, 1541, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 1542, 293, 1543, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 1544, 396, 397, 398,
	1545, 399, 400, 1546, 1289, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 1547,
	413, 704, 1548, 705, 414, 1549, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1291, 422, 423,
	1550, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 1551, 1290, 511, 432, 709, 710, 1552,
	711, 1553, 433, 434, 1292, 712, 1293, 435, 436, 437,
	1294, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 1554, 445, 447, 446, 1555, 448, 713, 1295, 449,
	450, 1296, 1556, 451, 452, 453, 454, 455, 456, 459,
	1557, 1558, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1297, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1298, 503, 491, 1559, 295, 1299, 505, 506, 507, 508,
	1560, 714, 509, 715, 512, 513, 1561, 0, 514, 0,
	515, 1562, 1563, 517, 518, 519, 1564, 1565, 520, 521,
	716, 1300, 522, 1301, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 1566, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 1567, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 1568, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 1569, 578, 579,
	580, 1302, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 1570, 604, 605, 603, 606, 607, 608,
	1571, 609, 610, 592, 593, 611, 612, 1303, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 1572, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 1573, 639,
	640, 0, 635, 626, 1574, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 1575, 649, 727, 728, 729, 730,
	1576, 659, 1577, 650, 651, 652, 653, 731, 654, 732,
	1578, 655, 656, 657, 658, 0, 660, 661, 1579, 1580,
	662, 663, 665, 667, 668, 664, 666, 669, 1581, 670,
	1582, 0, 671, 672, 673, 733, 734, 735, 1583, 675,
	674, 676, 677, 678, 736, 679, 680, 1584, 1585, 1586,
	1587, 681, 682, 737, 683, 684, 685, 2772, 0, 1223,
	1195, 1196, 1197, 1193, 1194, 1206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 2769, 304, 305, 0, 0, 0,
	0, 0, 1247, 1211, 0, 0, 306, 0, 307, 308,
	1287, 309, 310, 311, 312, 313, 314, 315, 687, 1260,
	0, 316, 1267, 317, 1266, 0, 1277, 318, 319, 320,
	321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694,
	0, 325, 326, 1253, 0, 1234, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1288, 350, 351, 352, 1237,
	1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356,
	357, 1270, 358, 360, 1264, 1263, 1183, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 2770, 0,
	369, 1255, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1189, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1278, 1279, 391, 1202,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1262,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1289, 401, 402, 403, 1275, 1276, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1285,
	0, 1212, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1248, 1249, 1252, 510, 1291, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1290, 511, 432, 1257, 1258, 0, 1218, 0,
	433, 434, 1292, 1250, 1293, 435, 436, 437, 1294, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1286, 1295, 449, 450, 1296,
	0, 451, 452, 453, 454, 455, 456, 459, 1241, 1240,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1297, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1298, 503,
	491, 1180, 295, 1299, 505, 506, 507, 508, 1203, 1251,
	509, 1265, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1300,
	522, 1301, 1280, 523, 524, 1190, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1281, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1261, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1302,
	581, 582, 583, 584, 585, 1191, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1244, 609,
	610, 592, 593, 611, 612, 1303, 613, 614, 615, 616,
	617, 618, 619, 1259, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1306, 629, 630,
	631, 632, 1282, 636, 637, 638, 0, 639, 640, 1177,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1271, 1272, 1273, 1274, 0, 659,
	0, 650, 651, 652, 653, 1283, 654, 1284, 1201, 655,
	656, 657, 658, 0, 660, 661, 0, 1184, 662, 663,
	665, 667, 668, 664, 666, 669, 1245, 670, 0, 0,
	671, 672, 673, 733, 1268, 1305, 2768, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1176,
	0, 0, 0, 0, 0, 0, 1174, 1175, 2771, 0,
	0, 0, 0, 0, 0, 0, 1207, 2767, 0, 1167,
	1205, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1247, 1211, 0, 0, 306, 0,
	307, 308, 1287, 309, 310, 311, 312, 313, 314, 315,
	687, 1260, 0, 316, 1267, 317, 1266, 0, 1277, 318,
	319, 320, 321, 322, 323, 1213, 1246, 1178, 324, 1307,
	1308, 694, 0, 325, 326, 1253, 0, 1234, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1288, 350, 351,
	352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354,
	355, 356, 357, 1270, 358, 360, 1264, 1263, 1183, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1255, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1189, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1278, 1279,
	391, 1202, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1262, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1289, 401, 402, 403, 1275, 1276,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1285, 0, 1212, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1248, 1249, 1252, 510, 1291, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1290, 511, 432, 1257, 1258, 0,
	1218, 0, 433, 434, 1292, 1250, 1293, 435, 436, 437,
	1294, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1286, 1295, 449,
	450, 1296, 0, 451, 452, 453, 454, 455, 456, 459,
	1241, 1240, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1297, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1298, 503, 491, 1180, 295, 1299, 505, 506, 507, 508,
	1203, 1251, 509, 1265, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1300, 522, 1301, 1280, 523, 524, 1190, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1281, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1261, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1302, 581, 582, 583, 584, 585, 1191, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 251, 604, 605, 603, 606, 607, 608,
	1244, 609, 610, 592, 593, 611, 612, 1303, 613, 614,
	615, 616, 617, 618, 619, 1259, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 1306,
	629, 630, 631, 632, 1282, 636, 637, 638, 0, 639,
	640, 1177, 635, 626, 253, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 1271, 1272, 1273, 1274,
	0, 659, 0, 650, 651, 652, 653, 1283, 654, 1284,
	1201, 655, 656, 657, 658, 0, 660, 661, 0, 1184,
	662, 663, 665, 667, 668, 664, 666, 669, 1245, 670,
	0, 0, 671, 672, 673, 1747, 1268, 1305, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	245, 681, 682, 737, 683, 684, 685, 1181, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1176, 0, 0, 0, 0, 0, 0, 1174, 1175,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 2012, 2010,
	0, 0, 1205, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 251, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 253, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 1747, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 245,
	681, 682, 737, 683, 684, 685, 1181, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 1223,
	1195, 1196, 1197, 1193, 1194, 1206, 0, 2012, 3435, 0,
	0, 1205, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1247, 1211, 0, 0, 306, 0, 307, 308,
	1287, 309, 310, 311, 312, 313, 314, 315, 687, 1260,
	0, 316, 1267, 317, 1266, 0, 1277, 318, 319, 320,
	321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694,
	0, 325, 326, 1253, 0, 1234, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1288, 350, 351, 352, 1237,
	1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356,
	357, 1270, 358, 360, 1264, 1263, 1183, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1255, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1189, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1278, 1279, 391, 1202,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1262,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1289, 401, 402, 403, 1275, 1276, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1285,
	0, 1212, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1248, 1249, 1252, 510, 1291, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1290, 511, 432, 1257, 1258, 0, 1218, 0,
	433, 434, 1292, 1250, 1293, 435, 436, 437, 1294, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1286, 1295, 449, 450, 1296,
	0, 451, 452, 453, 454, 455, 456, 459, 1241, 1240,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1297, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1298, 503,
	491, 1180, 295, 1299, 505, 506, 507, 508, 1203, 1251,
	509, 1265, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1300,
	522, 1301, 1280, 523, 524, 1190, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1281, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1261, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1302,
	581, 582, 583, 584, 585, 1191, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 251, 604, 605, 603, 606, 607, 608, 1244, 609,
	610, 592, 593, 611, 612, 1303, 613, 614, 615, 616,
	617, 618, 619, 1259, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 1306, 629, 630,
	631, 632, 1282, 636, 637, 638, 0, 639, 640, 1177,
	635, 626, 253, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 1271, 1272, 1273, 1274, 0, 659,
	0, 650, 651, 652, 653, 1283, 654, 1284, 1201, 655,
	656, 657, 658, 0, 660, 661, 0, 1184, 662, 663,
	665, 667, 668, 664, 666, 669, 1245, 670, 0, 0,
	671, 672, 673, 1747, 1268, 1305, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 245, 681,
	682, 737, 683, 684, 685, 1181, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1176,
	0, 0, 0, 0, 0, 0, 1174, 1175, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 2012, 2010, 0, 0,
	1205, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 2902, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	2907, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 2903, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 2904,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 2817, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 0,
	0, 0, 0, 0, 0, 0, 0, 1207, 2815, 0,
	2814, 1205, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 0, 0, 0, 0, 0, 0, 0, 0, 1207,
	2812, 0, 2811, 1205, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 1207, 2809, 0, 2808, 1205, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 0, 0, 0, 0, 0,
	0, 0, 0, 1207, 2806, 0, 1848, 1205, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 1847, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 1170, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	1185, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	0, 0, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 5026, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 1185, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 0, 0, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 2649, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 2648, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 0, 0, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 4752, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 1185, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 0, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 1185, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 0, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 4308, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 2082,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 1207, 0, 0,
	0, 1205, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 3979, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	0, 0, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 2082, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 1207,
	0, 0, 0, 1205, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 2907, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 0, 0, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 1207, 2010, 0, 2912, 1205, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 2910, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 2898, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	2887, 0, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 2885, 0, 2876, 2883, 1196, 1197, 1193, 1194,
	1206, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 2879, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 2880, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 2881, 469, 2878, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 2882, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 2877, 685,
	1181, 0, 0, 0, 2873, 0, 2876, 2883, 1196, 1197,
	1193, 1194, 1206, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 2879,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 2880, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 2881, 469,
	2878, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 2882, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	2877, 685, 1181, 0, 0, 0, 0, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 0, 0, 0,
	0, 0, 0, 2018, 0, 1207, 0, 0, 0, 1205,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 2628, 304, 305, 0, 0,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	2590, 0, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 2561, 0, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 1853, 0, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 1782, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 1777, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	1763, 0, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 1758, 0, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 1668, 0, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1667, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 1662, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1661, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 1655, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	1618, 0, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 1600, 0, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 1604, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 1605, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 1603, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 1432, 0, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 0, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 0, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 5074,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 5073, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	0, 0, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 5072, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 5074, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 5073, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 0, 0, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 4676, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 4677, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 4675, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 0, 0, 1223, 1195, 1196, 1197,
	3402, 3403, 1206, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 0, 0, 1223, 1195,
	1196, 1197, 3400, 3401, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 0, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	0, 0, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	1176, 0, 0, 0, 0, 0, 0, 2636, 2637, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 0, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 0, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 2895, 0, 0, 0, 0, 0, 0, 2893,
	2894, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	0, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 0, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	3395, 3396, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 0, 0, 0, 0, 0, 0,
	0, 2264, 2265, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 0, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 5074, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 0,
	1250, 0, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	0, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 5073, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 2914, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 0, 1246, 0, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	0, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 1630, 0, 1223, 1195, 1196,
	1197, 1193, 1194, 1206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 1207, 0, 0, 0, 1205,
	1247, 1211, 0, 0, 306, 0, 307, 308, 1287, 309,
	310, 311, 312, 313, 314, 315, 687, 1260, 0, 316,
	1267, 317, 1266, 0, 1277, 318, 319, 320, 321, 322,
	323, 0, 1246, 0, 324, 1307, 1308, 694, 0, 325,
	326, 1253, 0, 1234, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1288, 350, 351, 352, 1237, 1235, 1236,
	1243, 1239, 1238, 1242, 353, 354, 355, 356, 357, 1270,
	358, 360, 1264, 1263, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1255,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1278, 1279, 391, 1202, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1262, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1289, 401, 402, 403, 1275, 1276, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1285, 0, 1212,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1248,
	1249, 1252, 510, 1291, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1290, 511, 432, 1257, 1258, 0, 1218, 0, 433, 434,
	1292, 1250, 1293, 435, 436, 437, 1294, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1286, 1295, 449, 450, 1296, 0, 451,
	452, 453, 454, 455, 456, 459, 1241, 1240, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1297, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1298, 503, 491, 0,
	295, 1299, 505, 506, 507, 508, 1203, 1251, 509, 1265,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1300, 522, 1301,
	1280, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1281, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1261, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1302, 581, 582,
	583, 584, 585, 1191, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1244, 609, 610, 592,
	593, 611, 612, 1303, 613, 614, 615, 616, 617, 618,
	619, 1259, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1306, 629, 630, 631, 632,
	1282, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1271, 1272, 1273, 1274, 0, 659, 0, 650,
	651, 652, 653, 1283, 654, 1284, 1201, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 1245, 670, 0, 0, 671, 672,
	673, 733, 1268, 1305, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 1167, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 1207, 0, 0, 0, 1205, 1247,
	0, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 1246, 0, 324, 692, 693, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 1332, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 0, 295,
	1299, 505, 506, 507, 508, 0, 1251, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 1338, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 723, 1340, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 251, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 253,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	1747, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 245, 681, 682, 737, 683,
	684, 685, 1346, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 1336, 0, 2106, 0, 1247, 0, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 1246, 0, 324,
	692, 693, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 1332, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 0, 295, 1299, 505, 506, 507,
	508, 0, 1251, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 1338, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 723, 1340,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 251, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 253, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 1747, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 245, 681, 682, 737, 683, 684, 685, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3559, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 2106,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 1247, 0, 0, 0,
	306, 0, 307, 308, 1287, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 1246, 0,
	324, 692, 693, 694, 0, 325, 326, 1253, 0, 1234,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1288,
	350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1278, 1279, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1289, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1285, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1248, 1249, 1252, 510, 1291,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1290, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 1292, 1250, 1293, 435,
	436, 437, 1294, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 1332, 445, 447, 446, 0, 448, 1286,
	1295, 449, 450, 1296, 0, 451, 452, 453, 454, 455,
	456, 459, 1241, 1240, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1297, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1298, 503, 491, 0, 295, 1299, 505, 506,
	507, 508, 0, 1251, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 1338, 517, 518, 519, 0, 0,
	520, 521, 716, 1300, 522, 1301, 1280, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1281, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1302, 581, 582, 583, 584, 585, 723,
	1340, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1244, 609, 610, 592, 593, 611, 612, 1303,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 1282, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 1283,
	654, 1284, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	1245, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	1328, 0, 1346, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 1247, 0, 0, 1336, 306,
	1334, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 1246, 0, 324,
	692, 693, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 1332, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 0, 295, 1299, 505, 506, 507,
	508, 0, 1251, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 1338, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 723, 1340,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 1346, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1247, 0, 0, 1336, 306, 1334,
	307, 308, 1287, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 1246, 0, 324, 692,
	693, 694, 0, 325, 326, 1253, 0, 1234, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1288, 350, 351,
	352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1278, 1279,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1289, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1285, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1248, 1249, 1252, 510, 1291, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1290, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1292, 1250, 1293, 435, 436, 437,
	1294, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 1332, 445, 447, 446, 0, 448, 1286, 1295, 449,
	450, 1296, 0, 451, 452, 453, 454, 455, 456, 459,
	1241, 1240, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1297, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1298, 503, 491, 0, 295, 1299, 505, 506, 507, 508,
	0, 1251, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 1338, 517, 518, 519, 0, 0, 520, 521,
	716, 1300, 522, 1301, 1280, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 1281, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1302, 581, 582, 583, 584, 585, 723, 1340, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1244, 609, 610, 592, 593, 611, 612, 1303, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 1282, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 1283, 654, 1284,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 1245, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	1346, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 1247, 0, 0, 1336, 306, 1334, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 1246, 0, 324, 692, 693,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 0, 295, 1299, 505, 506, 507, 508, 0,
	1251, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 1346,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1247, 0, 0, 0, 306, 4493, 307, 308,
	1287, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 1246, 0, 324, 692, 693, 694,
	0, 325, 326, 1253, 0, 1234, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1288, 350, 351, 352, 1237,
	1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1278, 1279, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1289, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1285,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1248, 1249, 1252, 510, 1291, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1290, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 1292, 1250, 1293, 435, 436, 437, 1294, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1286, 1295, 449, 450, 1296,
	0, 451, 452, 453, 454, 455, 456, 459, 1241, 1240,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1297, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1298, 503,
	491, 0, 295, 1299, 505, 506, 507, 508, 0, 1251,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1300,
	522, 1301, 1280, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1281, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1302,
	581, 582, 583, 584, 585, 723, 1340, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1244, 609,
	610, 592, 593, 611, 612, 1303, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 1282, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 1283, 654, 1284, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 1245, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 2740, 2741, 2742, 2759, 2760,
	2761, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 2762, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 2002, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 1987, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 2752, 0, 336, 337, 338, 335, 339, 0, 340,
	2748, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 2753, 2754,
	2755, 2756, 392, 393, 394, 701, 0, 0, 2747, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 2757, 2758, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	2750, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 2751, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 1986, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 1167,
	0, 1625, 2737, 2738, 2739, 2763, 2749, 2743, 0, 2745,
	2746, 2744, 2731, 2732, 2733, 2734, 2735, 2736, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 1287, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 1589, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1288, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1289, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1291, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 1290, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1292, 712, 1293, 435, 436, 437,
	1294, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 1295, 449,
	450, 1296, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1297, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1298, 503, 491, 0, 0, 1299, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1300, 522, 1301, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1302, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 251, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 1303, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 253, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 1747, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	245, 681, 682, 737, 683, 684, 685, 0, 1744, 246,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 202, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 1589, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 1290, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 1292, 712, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 0, 0, 1299, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 251, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 253, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 1747, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 245,
	681, 682, 737, 683, 684, 685, 1625, 1624, 246, 0,
	0, 0, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 202, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 1589, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 1290,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 1292,
	712, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 0, 0,
	1299, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1625, 1624, 0, 0, 0, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 1771, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 1589, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 1290, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 1292, 712, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 0, 0, 1299, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1625, 1624,
	0, 0, 0, 0, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 3890,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 1589, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 1290, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 1292, 712, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	0, 0, 1299, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 2501, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1625, 2411, 0, 0, 0, 0,
	2412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 1771, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	1589, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 1290, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 1292, 712, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 2410, 447, 446, 0, 448,
	713, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 0, 0, 1299, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1625, 1624, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 1771, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 1589, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 1290, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 1292, 712, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 0, 0, 1299, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 1167, 0, 290,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 1753, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 251, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 253, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 1747, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 245, 681,
	682, 737, 683, 684, 685, 0, 0, 246, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 202, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 3172, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 2120, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 5241, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 290, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 306, 3841, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 0, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 0, 712, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 295, 0, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 0, 522, 0, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 0, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	0, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 290, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 1741,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	1346, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 1247, 0, 0, 0, 306, 3293, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 1246, 0, 324, 692, 693,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 0, 295, 1299, 505, 506, 507, 508, 0,
	1251, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 290, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 290, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 4004, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 991,
	0, 892, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 2488,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 899, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 988, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	990, 0, 635, 626, 897, 641, 642, 643, 644, 645,
	898, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 2165, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	902, 0, 0, 0, 306, 0, 307, 308, 1287, 309,
	310, 311, 312, 313, 314, 315, 0, 2171, 0, 316,
	2161, 317, 2177, 0, 2184, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 2187, 2188, 0, 0, 325,
	326, 0, 0, 1589, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1288, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 1270,
	358, 360, 2175, 2174, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1255,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 0, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 2173, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1289, 401, 402, 403, 2182, 2183, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 0,
	0, 0, 510, 1291, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	1290, 511, 432, 2168, 2169, 0, 2164, 0, 433, 434,
	1292, 0, 1293, 435, 436, 437, 1294, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 0, 1295, 449, 450, 1296, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1297, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1298, 503, 491, 0,
	0, 1299, 505, 506, 507, 508, 0, 0, 509, 2176,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 0, 1300, 522, 1301,
	0, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 2158, 536, 537, 538,
	2159, 539, 540, 541, 0, 542, 0, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 2172, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1302, 581, 582,
	583, 584, 585, 0, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 1303, 613, 614, 615, 616, 617, 618,
	619, 2170, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 2186, 629, 630, 631, 632,
	0, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 2178, 2179, 2180, 2181, 0, 659, 0, 650,
	651, 652, 653, 0, 654, 0, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 0, 2162, 2185, 0, 675, 674, 676, 677, 678,
	0, 679, 680, 0, 0, 0, 0, 681, 682, 0,
	683, 684, 685, 892, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 4131, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 2152, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 899, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	4130, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 897, 641, 642, 643,
	644, 645, 898, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 4129, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	892, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 2192, 304, 305, 0, 0,
	0, 0, 902, 686, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	899, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 295, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 2191, 599, 600,
	601, 602, 0, 2193, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 897, 641, 642, 643, 644, 645, 898,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 2190, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 892, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 2143, 304, 305, 0, 0, 0, 0, 902,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 899, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 2142, 599, 600, 601, 602, 0,
	2144, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	897, 641, 642, 643, 644, 645, 898, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 2141,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 890, 0, 892, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 902, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 899, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 897, 641,
	642, 643, 644, 645, 898, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 892, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 902, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 899, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 295, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 897, 641, 642, 643, 644,
	645, 898, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 892,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 902, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 899,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	2540, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 2541, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 897, 641, 642, 643, 644, 645, 898, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 2542, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 290, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 902, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 1625,
	1624, 0, 0, 0, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 902, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	1287, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 1589, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1288, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1289, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 1291, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 1290, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 1292, 712, 1293, 435, 436, 437, 1294, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 1295, 449, 450, 1296,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1297, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1298, 503,
	491, 0, 0, 1299, 505, 506, 507, 508, 4234, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1300,
	522, 1301, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1302,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 1303, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1625, 1624, 0, 0, 0,
	0, 1622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 1287, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 1589, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1288, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1289, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1291, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 1290, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 1292, 712,
	1293, 435, 436, 437, 1294, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 1295, 449, 450, 1296, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1297, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1298, 503, 491, 0, 0, 1299,
	505, 506, 507, 508, 3791, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1300, 522, 1301, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1302, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 1303, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1802, 0, 1625, 1624, 0, 0, 0, 0, 1622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 1287, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 1589,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1288,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	1801, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1289, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 1291,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 1290, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 1292, 712, 1293, 435,
	436, 437, 1294, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	1295, 449, 450, 1296, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1297, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1298, 503, 491, 0, 0, 1299, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1300, 522, 1301, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 1800, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1302, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 1799, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 1303,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 1675,
	0, 1625, 1624, 0, 0, 0, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 1287, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 1589, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1288, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1289, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1677, 707, 708, 510, 1291, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 1290, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1292, 712, 1293, 435, 436, 437,
	1294, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 1295, 449,
	450, 1296, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1297, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1298, 503, 491, 0, 0, 1299, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1300, 522, 1301, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1302, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 1303, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1620, 0, 1625,
	1624, 0, 0, 0, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	1287, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 1589, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1288, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1289, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 1291, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 1290, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 1292, 712, 1293, 435, 436, 437, 1294, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 1295, 449, 450, 1296,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1297, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1298, 503,
	491, 0, 0, 1299, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1300,
	522, 1301, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1302,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 1303, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1625, 1624, 0, 0, 0,
	0, 1622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 1287, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 1589, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1288, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1289, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1291, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 1290, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 1292, 712,
	1293, 435, 436, 437, 1294, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 1295, 449, 450, 1296, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1297, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1298, 503, 491, 0, 0, 1299,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1300, 522, 1301, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1302, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 1303, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1625, 1624, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 1287, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 1589, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1288, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1289, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1291, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 1290, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1292, 712, 1293, 435, 436, 437,
	1294, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 1295, 449,
	450, 1296, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1297, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1298, 503, 491, 0, 0, 1299, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1300, 522, 1301, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1302, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 1303, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1625, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 1287, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 1589, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1288, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1289, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 1291, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	1290, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	1292, 712, 1293, 435, 436, 437, 1294, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 1295, 449, 450, 1296, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1297, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1298, 503, 491, 0,
	0, 1299, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1300, 522, 1301,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1302, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 1303, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 3074, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 3833, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 3078, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 3832, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 3077, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 3829, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 3831, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 3828, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 3076, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 3830, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	3074, 325, 326, 695, 0, 0, 3068, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 3070, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 3078, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 3077, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 3067, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 3076, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 3075, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1882, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 1881, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 1880, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 1883, 590, 591, 598, 599, 600, 601, 602, 0,
	1879, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	1877, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 1878, 674, 676, 677, 678,
	736, 679, 680, 1593, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1595, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 1338, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1590, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1592, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 1338, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1496,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1498, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 1338, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 770, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 769, 302, 303, 758, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 761, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 767, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 763, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 757, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 758, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 761,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 762, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 763,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 758, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 761, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 762, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 763, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 758, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 761, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 4244, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 763, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 2447, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 1338, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 3727, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 3263, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 3262, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 2509, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 2453,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 2452, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 2440, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 2442, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 2404, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 1338, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1719, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1718, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1613,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1606, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1608, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1415, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1414,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 1405, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1404, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1402, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1401, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1397,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1396, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 739, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 281, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 761, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 762, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 763, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 2549, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 2547, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 2545, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 2459, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 2217, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 2211, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 975, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 974, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 973, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 859,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 848,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 857, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	850, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 856, 400, 852, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	853, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	851, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 854, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 855, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 849, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 842, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 848, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 857, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 850, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 856,
	400, 852, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 853, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 851, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 854, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 855, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 849, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 3832, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 4578, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1443, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 1446, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 1444, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 830, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 829, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	828, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	1447, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 826, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1443,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 1446, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 1444, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 830, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 829, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 828, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 1447, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 826, 728, 729, 730,
	0, 659, 0, 650, 1445, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 837, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 835, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 748, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 747, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 746, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 3172, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 4875, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 3668, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 4465, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 4188, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 2949, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	3172, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 3302, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 2348, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 829, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 828, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	826, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 2519, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 2507, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1775, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 1767, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 820, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 816, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	821, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 830, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 829, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	828, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	1752, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 826, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1725,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1724, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1709, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1707, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1703, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 1680, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1678, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1673, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1634,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1598, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1449, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 829, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 828, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 826, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 1420, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1419, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1411, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1410, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 1363, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 840, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 820, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 816, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 815,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 821, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 830, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 829, 582, 583, 584,
	585, 817, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 828, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 818, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	826, 728, 729, 730, 0, 659, 0, 650, 822, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 809, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 810, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 772,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 765, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 743, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 3863, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 829, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 828, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	826, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 3770, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 3744,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 3740, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 3692, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 3690, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 3678, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 3675,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 3273, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	810, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	2477, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 0, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1382, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 1311, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 0, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 0, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 0, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	0, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1715,
	0, 1427, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 0, 317, 0, 0, 0, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 0,
	0, 0, 0, 325, 326, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 1429, 353, 354,
	355, 356, 357, 0, 358, 360, 0, 0, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 0, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 0, 0,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 0, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1714, 0, 0, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 0, 0, 0,
	0, 0, 433, 434, 0, 0, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 0, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 509, 0, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	0, 0, 522, 0, 0, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 0, 542,
	0, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 0, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1430, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 0, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 0,
	629, 630, 631, 632, 0, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 0, 0, 0, 0,
	0, 659, 0, 650, 651, 652, 653, 0, 654, 0,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 0, 0, 0, 0, 675,
	674, 676, 677, 678, 0, 679, 680, 1637, 0, 1427,
	0, 681, 682, 0, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 0, 317, 0, 0, 0, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 0, 0, 0,
	0, 325, 326, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 1429, 353, 354, 355, 356,
	357, 0, 358, 360, 0, 0, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 0, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 0,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1636, 0, 0, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 0, 0, 0, 0, 0,
	433, 434, 0, 0, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 0, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 0,
	509, 0, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 0, 0,
	522, 0, 0, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 0, 542, 0, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 0, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1430, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 0, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 0, 629, 630,
	631, 632, 0, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 0, 0, 0, 0, 0, 659,
	0, 650, 651, 652, 653, 0, 654, 0, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 0, 0, 0, 0, 675, 674, 676,
	677, 678, 0, 679, 680, 1425, 0, 1427, 0, 681,
	682, 0, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	0, 317, 0, 0, 0, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 0, 0, 0, 0, 325,
	326, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 1429, 353, 354, 355, 356, 357, 0,
	358, 360, 0, 0, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 0, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 0, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1424,
	0, 0, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 0, 0, 0, 0, 0, 433, 434,
	0, 0, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 0, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 0, 509, 0,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 0, 0, 522, 0,
	0, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 0, 542, 0, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 0, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1430, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 0, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 0, 629, 630, 631, 632,
	0, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 0, 0, 0, 0, 0, 659, 0, 650,
	651, 652, 653, 0, 654, 0, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 0, 0, 0, 0, 675, 674, 676, 677, 678,
	0, 679, 680, 2231, 0, 1427, 0, 681, 682, 0,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 0, 317,
	0, 0, 0, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 0, 0, 0, 0, 325, 326, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 1429, 353, 354, 355, 356, 357, 0, 358, 360,
	0, 0, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	0, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 0, 0, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 0, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 0, 0, 0,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 0, 0, 0, 0, 0, 433, 434, 0, 0,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 0, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 0, 509, 0, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 0, 0, 522, 0, 0, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 0, 542, 0, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 0, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1430, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 0,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 0, 629, 630, 631, 632, 0, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	0, 0, 0, 0, 0, 659, 0, 650, 651, 652,
	653, 0, 654, 0, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 0,
	0, 0, 0, 675, 674, 676, 677, 678, 0, 679,
	680, 2198, 0, 1427, 0, 681, 682, 0, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 0, 317, 0, 0,
	0, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 0, 0, 0, 0, 325, 326, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 1429,
	353, 354, 355, 356, 357, 0, 358, 360, 0, 0,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 0, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	0, 0, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 0, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 0, 0, 0, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 0,
	0, 0, 0, 0, 433, 434, 0, 0, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 0,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 509, 0, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 0, 0, 522, 0, 0, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 0, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 0,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1430, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 0, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 0, 629, 630, 631, 632, 0, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 0, 0,
	0, 0, 0, 659, 0, 650, 651, 652, 653, 0,
	654, 0, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 0, 0, 0,
	0, 675, 674, 676, 677, 678, 1427, 679, 680, 0,
	0, 0, 0, 681, 682, 0, 683, 684, 685, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 0, 0, 0, 316, 0,
	317, 0, 0, 0, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 0, 0, 0, 0, 325, 326,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 1429, 353, 354, 355, 356, 357, 0, 358,
	360, 0, 0, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 0, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 0, 0, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 0, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 0, 0,
	0, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 0, 0, 0, 0, 0, 433, 434, 0,
	0, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 0, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 0, 509, 0, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 0, 0, 522, 0, 0,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 0, 536, 537, 538, 0,
	539, 540, 541, 0, 542, 0, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 0, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1430, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	0, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 0, 629, 630, 631, 632, 0,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 0, 0, 0, 0, 0, 659, 0, 650, 651,
	652, 653, 0, 654, 0, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	0, 0, 0, 0, 675, 674, 676, 677, 678, 0,
	679, 680, 0, 0, 0, 0, 681, 682, 0, 683,
	684, 685, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 1962, 0, 0, 0,
	0, 0, 1931, 1932, 1934, 1964, 1965, 1966, 1975, 1976,
	1977, 0, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 1962, 0, 0, 0,
	0, 1987, 0, 0, 1934, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	1950, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 1982, 0, 0, 0, 0, 0,
	0, 1961, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	1979, 1972, 0, 0, 1982, 0, 0, 1948, 1949, 0,
	0, 1961, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 1978, 0,
	1979, 0, 0, 0, 0, 0, 0, 1948, 1949, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1955, 0, 0, 0, 0, 0, 0,
	1960, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 1955, 0, 1968, 1962, 0, 0, 0,
	0, 0, 0, 0, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 1986, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	0, 1971, 0, 4854, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 1945, 1946, 1952, 1974, 1951, 1947, 1939, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	0, 0, 0, 4853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 1972, 0, 0, 1982, 0, 0, 0, 0, 0,
	0, 1961, 1963, 1968, 1962, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 0, 1978, 0,
	1979, 0, 1981, 0, 0, 0, 0, 1948, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 1970, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	1954, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 0, 0, 0, 0, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1931, 1932,
	0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0, 1972,
	1960, 0, 1982, 0, 0, 0, 0, 0, 0, 1961,
	1963, 1968, 1962, 0, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 1955, 0, 0, 1978, 0, 1979, 0,
	1981, 0, 0, 0, 0, 1948, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 1973, 0, 1970, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 1954, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 1956, 1957, 1958, 1959, 0, 0,
	0, 1971, 0, 0, 1939, 0, 0, 0, 0, 0,
	0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	0, 0, 0, 4660, 0, 0, 1931, 1932, 0, 1964,
	1965, 1966, 1975, 1976, 1977, 0, 0, 1972, 1960, 0,
	1982, 0, 0, 0, 0, 0, 0, 1961, 1963, 1968,
	1962, 0, 0, 0, 0, 0, 0, 0, 1934, 0,
	0, 1955, 0, 0, 1978, 0, 1979, 0, 1981, 0,
	0, 0, 0, 1948, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 1973,
	0, 1970, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 1954, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 1956, 1957, 1958, 1959, 0, 0, 0, 1971,
	0, 0, 1939, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0,
	0, 4489, 0, 0, 1931, 1932, 0, 1964, 1965, 1966,
	1975, 1976, 1977, 0, 0, 1972, 1960, 0, 1982, 0,
	0, 0, 0, 0, 0, 1961, 1963, 1968, 1962, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 1955,
	0, 0, 1978, 0, 1979, 0, 1981, 0, 0, 0,
	0, 1948, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 1973, 0, 1970,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 1954, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	1956, 1957, 1958, 1959, 0, 0, 0, 1971, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 1945, 1946,
	1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936,
	1937, 1938, 1940, 1941, 0, 0, 0, 0, 0, 4394,
	0, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976,
	1977, 0, 0, 1972, 1960, 0, 1982, 0, 0, 0,
	0, 0, 0, 1961, 1963, 1968, 1962, 0, 0, 0,
	0, 0, 0, 0, 1934, 0, 0, 1955, 0, 0,
	1978, 0, 1979, 0, 1981, 0, 0, 0, 0, 1948,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 1973, 0, 1970, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 1954, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 0, 0, 0, 1971, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 1945, 1946, 1952, 1974,
	1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938,
	1940, 1941, 0, 0, 0, 0, 0, 4393, 0, 0,
	1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 1972, 1960, 0, 1982, 0, 0, 0, 0, 0,
	0, 1961, 1963, 1968, 1962, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 1955, 0, 0, 1978, 0,
	1979, 0, 1981, 0, 0, 0, 0, 1948, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 1973, 0, 1970, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	1954, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 0, 0, 1971, 0, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951, 1947,
	0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 0, 0, 0, 0, 4392, 0, 0, 1931, 1932,
	0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0, 1972,
	1960, 0, 1982, 0, 0, 0, 0, 0, 0, 1961,
	1963, 1968, 1962, 0, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 1955, 0, 0, 1978, 0, 1979, 0,
	1981, 0, 0, 0, 0, 1948, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 1973, 0, 1970, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 1954, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 1956, 1957, 1958, 1959, 0, 0,
	0, 1971, 0, 0, 1939, 0, 0, 0, 0, 0,
	0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	0, 0, 0, 4009, 0, 0, 1931, 1932, 0, 1964,
	1965, 1966, 1975, 1976, 1977, 0, 0, 1972, 1960, 0,
	1982, 0, 0, 0, 0, 0, 0, 1961, 1963, 1968,
	1962, 0, 0, 0, 0, 0, 0, 0, 1934, 0,
	0, 1955, 0, 0, 1978, 0, 1979, 0, 1981, 0,
	0, 0, 0, 1948, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 1973,
	0, 1970, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 1954, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 1956, 1957, 1958, 1959, 0, 0, 0, 1971,
	0, 0, 1939, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0,
	0, 3477, 0, 0, 1931, 1932, 0, 1964, 1965, 1966,
	1975, 1976, 1977, 0, 0, 1972, 1960, 0, 1982, 0,
	0, 0, 0, 0, 0, 1961, 1963, 1968, 1962, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 1955,
	0, 0, 1978, 0, 1979, 0, 1981, 0, 0, 0,
	0, 1948, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 1973, 0, 1970,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 1954, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	1956, 1957, 1958, 1959, 0, 0, 0, 1971, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 1945, 1946,
	1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936,
	1937, 1938, 1940, 1941, 0, 0, 0, 0, 0, 3476,
	0, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976,
	1977, 0, 0, 1972, 1960, 0, 1982, 0, 0, 0,
	0, 0, 0, 1961, 1963, 1968, 1962, 0, 0, 0,
	0, 0, 0, 0, 1934, 0, 0, 1955, 0, 0,
	1978, 0, 1979, 0, 1981, 0, 0, 0, 0, 1948,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 1973, 0, 1970, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 1954, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 0, 0, 0, 1971, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 1945, 1946, 1952, 1974,
	1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938,
	1940, 1941, 0, 0, 0, 0, 0, 3475, 0, 0,
	0, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976,
	1977, 1972, 1960, 0, 1982, 0, 2378, 0, 0, 0,
	0, 1961, 1963, 0, 0, 1968, 1962, 0, 0, 0,
	0, 0, 0, 0, 1934, 1955, 0, 0, 1978, 0,
	1979, 0, 0, 0, 1981, 0, 0, 1948, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 1973, 0, 1970, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 2379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 0, 1971, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951, 1947,
	0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 0, 0, 0, 0, 3474, 0, 0, 0, 0,
	1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	1960, 1972, 0, 0, 1982, 0, 0, 0, 0, 0,
	0, 1961, 1963, 1968, 1962, 0, 0, 0, 0, 0,
	0, 0, 1934, 1955, 0, 0, 0, 0, 1978, 0,
	1979, 0, 1981, 0, 0, 0, 0, 1948, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 1973, 0, 0, 0, 1970, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	1954, 0, 0, 2310, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 2308, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 1971, 0, 0, 0, 0, 1939, 0, 0, 0,
	0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	0, 3439, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	1960, 0, 1982, 0, 0, 0, 0, 0, 0, 1961,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1955, 0, 0, 1978, 0, 1979, 0,
	0, 0, 0, 0, 0, 1948, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 2380, 0, 0, 0, 0,
	0, 1973, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1931, 1932, 1954, 1964,
	1965, 1966, 1975, 1976, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 1968,
	1962, 0, 0, 0, 0, 0, 0, 0, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1981, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 2381,
	0, 0, 0, 0, 1933, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 1984,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2309, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 1956, 1957, 1958, 1959, 0, 0, 0, 0,
	0, 0, 1939, 5150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1931, 1932, 0, 1964, 1965, 1966,
	1975, 1976, 1977, 0, 0, 1972, 0, 0, 1982, 0,
	0, 0, 0, 1986, 0, 1961, 1963, 1968, 1962, 0,
	0, 0, 0, 0, 2307, 0, 1934, 0, 0, 0,
	0, 0, 1978, 0, 1979, 0, 1981, 0, 0, 0,
	0, 1948, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 1970,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 1954, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	1956, 1957, 1958, 1959, 0, 0, 0, 0, 0, 0,
	1939, 0, 3539, 0, 0, 0, 0, 5149, 0, 3538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976,
	1977, 0, 0, 1972, 1960, 0, 1982, 0, 0, 0,
	0, 0, 0, 1961, 1963, 1968, 1962, 0, 0, 0,
	0, 3410, 0, 0, 1934, 0, 0, 1955, 0, 0,
	1978, 0, 1979, 0, 1981, 0, 0, 0, 0, 1948,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 1973, 0, 1970, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 1954, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3411, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 0, 0, 0, 1971, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 1945, 1946, 1952, 1974,
	1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938,
	1940, 1941, 0, 2922, 0, 0, 0, 0, 0, 0,
	1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 1972, 1960, 0, 1982, 0, 0, 0, 0, 0,
	0, 1961, 1963, 1968, 1962, 0, 0, 0, 2921, 0,
	0, 0, 1934, 0, 0, 1955, 0, 0, 1978, 0,
	1979, 0, 1981, 0, 0, 0, 0, 1948, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 1973, 0, 1970, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	1954, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 0, 0, 1971, 0, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951, 1947,
	0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 0, 0, 0, 0, 0, 0, 0, 1931, 1932,
	0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0, 1972,
	1960, 0, 1982, 0, 0, 0, 0, 0, 0, 1961,
	1963, 1968, 1962, 0, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 1955, 0, 0, 1978, 0, 1979, 0,
	1981, 0, 0, 0, 0, 1948, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 1973, 0, 1970, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 1954, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 1956, 1957, 1958, 1959, 0, 0,
	0, 1971, 0, 0, 1939, 0, 4761, 0, 0, 0,
	0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	0, 0, 0, 0, 0, 0, 1931, 1932, 0, 1964,
	1965, 1966, 1975, 1976, 1977, 0, 0, 1972, 1960, 0,
	1982, 0, 0, 0, 0, 0, 0, 1961, 1963, 1968,
	1962, 0, 0, 0, 0, 0, 0, 0, 1934, 0,
	0, 1955, 0, 0, 1978, 0, 1979, 0, 1981, 0,
	0, 0, 0, 1948, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 1973,
	0, 1970, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 1954, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 1956, 1957, 1958, 1959, 0, 0, 0, 1971,
	0, 0, 1939, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0,
	0, 0, 0, 0, 1931, 1932, 0, 1964, 1965, 1966,
	1975, 1976, 1977, 0, 0, 1972, 1960, 0, 1982, 0,
	0, 0, 0, 0, 0, 1961, 1963, 1968, 1962, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 1955,
	0, 0, 1978, 0, 1979, 0, 1981, 0, 0, 0,
	0, 1948, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 1973, 0, 1970,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 1954, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 1164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	1956, 1957, 1958, 1959, 0, 0, 0, 1971, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 1945, 1946,
	1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936,
	1937, 1938, 1940, 1941, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976,
	1977, 0, 0, 1972, 1960, 0, 1982, 0, 0, 0,
	0, 0, 0, 1961, 1963, 1968, 1962, 0, 0, 0,
	0, 0, 0, 0, 1934, 0, 0, 1955, 0, 0,
	1978, 0, 1979, 0, 1981, 0, 0, 0, 0, 1948,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 1973, 0, 1970, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 1954, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 0, 0, 0, 1971, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 1945, 1946, 1952, 1974,
	1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938,
	1940, 1941, 0, 0, 0, 0, 0, 0, 0, 0,
	1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 1972, 1960, 0, 1982, 0, 0, 0, 0, 0,
	0, 1961, 1963, 1968, 1962, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 1955, 0, 0, 1978, 0,
	1979, 0, 1981, 0, 0, 0, 0, 1948, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 1973, 0, 1970, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	1954, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 0, 0, 1971, 0, 0, 1939, 0, 4212, 0,
	0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951, 1947,
	0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 0, 0, 0, 0, 0, 0, 0, 1931, 1932,
	0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0, 1972,
	1960, 0, 1982, 0, 0, 0, 0, 0, 0, 1961,
	1963, 1968, 1962, 0, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 1955, 0, 0, 1978, 0, 1979, 0,
	1981, 0, 0, 0, 0, 1948, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 1973, 0, 1970, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 1954, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 1956, 1957, 1958, 1959, 0, 0,
	0, 1971, 0, 0, 1939, 0, 0, 0, 0, 0,
	0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 1960, 0,
	1982, 0, 0, 0, 0, 0, 0, 1961, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 1978, 0, 1979, 0, 0, 0,
	0, 0, 0, 1948, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1931, 1932, 1954, 1964, 1965, 1966,
	1975, 1976, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 1968, 1962, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 0, 0,
	0, 0, 0, 0, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 1984, 0, 0,
	0, 0, 1950, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	1956, 1957, 1958, 1959, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 3545,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1931, 1932, 0, 1964, 1965, 1966,
	1975, 1976, 1977, 1972, 0, 0, 1982, 0, 0, 0,
	0, 1986, 0, 1961, 1963, 0, 0, 1968, 1962, 0,
	0, 0, 3540, 0, 3990, 0, 1934, 0, 0, 0,
	1978, 0, 1979, 0, 0, 0, 1981, 0, 0, 1948,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 1970, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 1946,
	1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936,
	1937, 1938, 1940, 1941, 0, 0, 0, 0, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	1956, 1957, 1958, 1959, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976,
	1977, 0, 1960, 1972, 0, 0, 1982, 0, 0, 0,
	0, 0, 0, 1961, 1963, 1968, 1962, 0, 0, 0,
	0, 0, 0, 0, 1934, 1955, 0, 0, 0, 0,
	1978, 0, 1979, 0, 1981, 0, 0, 0, 0, 1948,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 1973, 0, 0, 0, 1970, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 1954, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 0, 1971, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951, 1947,
	0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 1972, 1960, 0, 1982, 0, 0, 0, 0, 0,
	0, 1961, 1963, 1968, 1962, 0, 0, 0, 3478, 0,
	0, 0, 1934, 0, 0, 1955, 0, 0, 1978, 0,
	1979, 0, 1981, 0, 0, 0, 0, 1948, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 1973, 0, 1970, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	1954, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 3505, 0, 1971, 0, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951, 1947,
	0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 0, 0, 0, 0, 0, 0, 0, 1931, 1932,
	0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0, 1972,
	1960, 0, 1982, 0, 0, 0, 0, 0, 0, 1961,
	1963, 1968, 1962, 0, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 1955, 0, 0, 1978, 0, 1979, 0,
	1981, 0, 0, 0, 0, 1948, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 1973, 0, 1970, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 1954, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 1956, 1957, 1958, 1959, 0, 0,
	0, 1971, 0, 0, 1939, 0, 0, 0, 0, 0,
	0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	0, 0, 0, 0, 0, 0, 1931, 1932, 0, 1964,
	1965, 1966, 1975, 1976, 1977, 0, 0, 1972, 1960, 0,
	1982, 0, 0, 0, 0, 0, 0, 1961, 1963, 1968,
	1962, 0, 0, 0, 0, 0, 0, 0, 1934, 0,
	0, 1955, 0, 0, 1978, 0, 1979, 0, 1981, 0,
	0, 0, 0, 1948, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 1973,
	0, 1970, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 1954, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 1956, 1957, 1958, 1959, 0, 0, 0, 1971,
	0, 0, 1939, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1931, 1932, 0, 1964,
	1965, 1966, 1975, 1976, 1977, 1972, 1960, 0, 1982, 0,
	0, 0, 0, 0, 0, 1961, 1963, 0, 0, 1968,
	1962, 0, 0, 0, 0, 0, 0, 0, 1934, 1955,
	0, 0, 1978, 0, 1979, 0, 0, 0, 1981, 0,
	0, 1948, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 1973, 0, 1970,
	0, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	2490, 0, 1956, 1957, 1958, 1959, 0, 1971, 0, 0,
	0, 0, 1939, 0, 0, 0, 0, 0, 1945, 1946,
	1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936,
	1937, 1938, 1940, 1941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975,
	1976, 1977, 0, 0, 1960, 1972, 0, 0, 1982, 0,
	0, 0, 0, 0, 0, 1961, 1963, 1962, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 1955, 0, 0,
	0, 0, 1978, 0, 1979, 1981, 0, 0, 0, 0,
	0, 1948, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 1973, 0, 0, 0, 1970,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 1954, 0, 0, 0, 0, 0,
	0, 1950, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 1956,
	1957, 1958, 1959, 0, 0, 1971, 0, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 1945, 1946, 1952, 1974,
	1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938,
	1940, 1941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 1960, 1982, 0, 0, 0, 0,
	0, 0, 1961, 1963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1955, 0, 1978,
	0, 1979, 0, 0, 0, 0, 0, 0, 1948, 1949,
	0, 1042, 0, 1093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1973, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1050, 0,
	0, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1065, 0, 1048, 1047, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1067, 0, 0, 0, 0, 0, 1049, 0, 0, 0,
	1980, 1052, 0, 0, 0, 0, 1104, 0, 1077, 0,
	0, 0, 0, 0, 0, 0, 1062, 1063, 0, 0,
	0, 0, 0, 0, 0, 1082, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1094, 1054, 1971, 0, 0, 0, 0,
	1055, 0, 0, 0, 0, 0, 1945, 1946, 1952, 1974,
	1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938,
	1940, 1941, 0, 1056, 0, 0, 0, 0, 0, 0,
	0, 0, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1955, 0, 1092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 0,
	0, 1046, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1059, 1060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	1068, 1066, 0, 0, 0, 0, 0, 0, 1061, 0,
	0, 0, 1078, 0, 0, 1099, 1098, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1101, 1090, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 0,
	1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 0, 1103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1051, 0, 0, 0, 0, 1086, 1087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1096, 1084, 0, 0, 0, 0,
	0, 0, 0, 1102, 1079, 0, 0, 1071, 1069, 0,
	0, 1074, 0, 0, 0, 0, 0, 1075, 0, 0,
	1044, 0, 1097, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 1076, 0, 0, 0, 0, 0, 1073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 1080, 0, 1081, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1085,
}

var sqlPact = [...]int{
	13387, -1000, -1000, -1000, -1000, 182, -1000, -1000, 181, 180,
	177, 176, 175, 173, 172, 169, 166, 165, 161, -1000,
	-1000, 160, 159, 158, 156, -1000, -1000, 153, -1000, -1000,
	151, -1000, 150, 148, 147, -1000, -1000, 145, -1000, 143,
	-1000, -1000, -1000, -1000, 141, 138, 134, 98863, 98275, 99449,
	2396, 125873, 108253, 2145, 87703, 125285, 87115, 124697, 2179, 11673,
	124109, 2870, 128, -1000, 123521, 127, 126, 125, -1000, 107665,
	122933, 105315, 104727, 1953, -1000, 124, 122, -1000, 9074, 76481,
	120, 118, 117, 116, 2477, 115, -1000, 114, 113, -1000,
	112, -1000, 12880, 1623, -1000, 111, 110, -1000, 629, 104139,
	108, 107, 103, 2622, 100, 98, 73537, 97, 96, 95,
	2482, 2976, -1000, -1000, 2186, -1000, -1000, 93, 87, 86,
	85, 79, 77, 76, 75, 74, 73, 72, 71, 70,
	-1000, 69, 68, 62, 61, 58, -1000, 57, 55, 52,
	-1000, 51, -1000, 49, 48, 47, 45, 44, 42, 41,
	40, 38, 37, 36, 34, 33, 31, 30, 146489, -1000,
	-1000, 26, -1000, 2035, 1755, 1753, 1746, 1740, 1734, 1024,
	22, 21, 20, 19, 18, 17, 16, 15, 14, 13,
	12, 10, 9, 8, 3, 1, 0, -1, -2, -4,
	136, -5, -6, -7, -10, -11, -12, -13, 2603, 3647,
	-1000, 1654, 1002, 33356, 3104, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 134663, 126459, -20, -87, -23,
	-1000, 3443, 1005, 61128, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 234, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	449, 2776, 728, -1000, -1000, -1000, 122345, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2394, 2, -1000, 2064, -1000,
	-1000, -1000, -1000, -1000, 724, -1000, 2389, 2300, 334, 2299,
	-1000, -1000, -1000, 3520, 2560, 4016, 4015, 4013, 4012, 4011,
	134077, 1926, 4009, 2640, 4008, 4006, 4001, 4000, 3998, 3996,
	3995, -1000, 97687, 1100, 97099, 96511, 3535, 121759, 95923, 121171,
	137013, 51512, 977, 3519, -1000, -1000, -1000, -1000, -1000, -1000,
	126459, -1000, 1091, -1000, -1000, 3993, 2162, 723, 107077, -1000,
	-1000, 120583, 1788, -1000, -1000, -1000, 968, 1234, 35764, 35764,
	35764, 230, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3529,
	-1000, -1000, -1000, -1000, 126459, 2811, 2811, 1478, 1440, 1440,
	2811, 2811, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3992, 3990, 3987, 3983, 3979, -1000, -1000, -1000, 86527, 25941,
	85939, 85351, 119995, 50910, 95335, 94747, 3974, 3972, 3969, 50308,
	81235, 58733, 3646, 119407, 136425, 3641, 3639, 1090, 2055, 1510,
	-1000, -1000, -1000, -1000, -1000, -1000, -42, 78242, 3717, 126459,
	-1000, 227, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 49706,
	716, 49104, 726, 48502, 375, 118819, -1000, -1000, -1000, -1000,
	80637, -1000, 118231, 2557, 3964, 3963, 1180, 3962, 3373, 1794,
	3961, 1933, 1267, 3957, 3954, 3952, 3951, 3947, 3945, 3944,
	1533, 117643, 3101, 117055, 1792, 135837, 1089, 94159, 99449, 2730,
	116467, 1381, 1368, -1000, -1000, -1000, -1000, 3199, 2974, 2971,
	1247, -1000, -1000, -1000, -1000, 64686, 6843, 6103, -1000, -1000,
	12123, 115879, 67666, 99449, 99449, -1000, -1000, -1000, -1000, -1000,
	-1000, 47900, 715, 47298, 917, 115291, -1000, -1000, 65282, 3054,
	1133, -1000, -1000, -1000, -1000, -1000, 114703, 46696, 710, 46094,
	867, 126459, -1000, 3094, 2027, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3115, 1700, 3715, 2810, 80039, 2160,
	1489, 3487, 3197, 3189, 1592, 2036, 3186, 3943, 2682, 3178,
	3177, 3172, 3163, 3145, 1718, 2695, 431, 2686, 32754, 3084,
	1790, 45492, 1574, 1589, 3139, 3114, 3729, 3566, 2012, 2091,
	2119, 2110, 84763, 3938, 3936, 3411, 3096, 3095, 2872, 3083,
	-1000, 3050, 1530, 225, -1000, -1000, -1000, -1000, -1000, -1000,
	1557, -1000, -1000, -1000, -1000, -1000, 90047, -1000, -1000, 1449,
	-1000, -1000, 1449, -1000, -1000, -1000, -1000, -1000, 1352, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1654, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2459, -1000, 2195, -1000, -1000, -1000,
	2590, 3402, 3402, 3402, 3518, 435, 423, -1000, 136, -1000,
	-1000, 145805, -1000, -1000, 52114, 52114, 52114, 52114, 52114, 52114,
	52114, 52114, 2185, -1000, 718, -1000, -1000, 795, -1000, 717,
	656, 581, -1000, -1000, -1000, -1000, -1000, -1000, 714, -1000,
	-1000, -1000, -1000, -1000, -1000, 3684, -1000, 29005, -1000, -1000,
	-1000, 464, 711, 52114, -1000, -1000, 3774, 3773, 870, -1000,
	224, 992, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3092, 708, 707, -1000, 706, 705,
	703, 701, 700, -1000, 699, -1000, 696, 694, 692, 685,
	684, 683, 682, 680, -1000, 2090, -1000, -1000, -1000, -1000,
	-1000, -1000, 643, 642, 642, 642, -1000, 1073, -1000, -1000,
	-1000, 260, 632, 242, 628, 627, 626, -1000, 676, 675,
	674, 671, 669, 668, 667, 664, 660, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1072, -1000, -1000, -1000, -1000, 1364,
	-43, 126459, -1000, 449, -43, -1000, -1000, 659, -1000, 37588,
	37588, 37588, -1000, -1000, 2378, 52114, -1000, 2486, -1000, -37,
	-37, 952, 62895, -1000, 59928, 952, 370, 804, 68841, -1000,
	3048, -1000, -1000, 658, 223, -1000, -1000, -1000, -1000, 26537,
	3046, 126459, 126459, 126459, 99449, 99449, 99449, 126459, 3934, 3933,
	3206, 52114, -1000, -1000, 75893, 138772, 100035, -1000, -1000, 3626,
	74123, 75306, 3091, 138772, 3089, 138189, 3929, -1000, -1000, -1000,
	-1000, -1000, 3269, 3926, 3922, 3920, -1000, 126459, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 250, 3268, -1000, -1000, 103551,
	250, 3265, -1000, 250, 3258, -1000, 102965, -1000, -1000, 2310,
	3255, -1000, -1000, 253, 3254, -1000, -1000, -1000, 252, 3253,
	-1000, -1000, 219, -86, 3252, -1000, -1000, -1000, -1000, -1000,
	-1000, 145805, -1000, -1000, -1000, 137601, -1000, 3406, -1000, 126459,
	-1000, 52114, -1000, -1000, 3625, 1668, 3445, 3555, -1000, -1000,
	-54, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2606, 2578,
	1209, 2430, -1000, 3223, 1610, 35764, 3361, -1000, -1000, -1000,
	-1000, -1000, 217, 26537, 2946, -1000, -1000, 126459, -1000, 126459,
	2811, 2811, -1000, -1000, -1000, 3722, 3721, 2811, 2811, 126459,
	126459, -1000, -1000, -1000, -1000, -1000, -1000, 5280, 3247, 1295,
	-1000, 2429, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2006, 3246, -1000, 2164, 3245, 1999, -1000, -1000, 3682,
	-1000, 142319, 1414, -1000, -1000, -1000, -1000, 2334, 3240, -36,
	-1000, -1000, 2382, -1000, -1000, -1000, -1000, 142111, -1000, 2988,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1723,
	-1000, -1000, 2281, 2008, -1000, 1397, 3239, -1000, 2809, 2809,
	93571, 3251, 67070, 65282, 78242, -46, -1000, -1000, -1000, -1000,
	-1000, -93, -1000, 25338, 145805, -1000, -1000, -1000, -1000, 1855,
	145805, 912, -1000, -1000, 3230, -1000, 145805, 767, -1000, -1000,
	3229, -1000, 2690, -1000, 3087, -1000, -1000, 2512, 2508, 1048,
	-1000, 3918, -1000, -1000, 3916, -1000, 3914, 3913, 3912, -1000,
	1726, 2052, 3911, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 92985, 2376, -1000, -1000, 89461, -1000, 2507, 3552, -1000,
	92397, 1087, -1000, 1020, 2506, -1000, 102379, 602, 2502, -1000,
	3908, 3503, 2761, 1020, 2499, -1000, -1000, -1000, -1000, -1000,
	1016, -1000, 70600, -1000, 70600, -1000, 1682, -1000, 133491, -37,
	99449, 3684, -1000, -90, -1000, -1000, -1000, 1005, -1000, 64087,
	-1000, 64087, 106489, 81831, 997, 3039, 72948, 145597, -1000, 1046,
	-1000, -1000, 145805, -1000, -1000, -1000, 2679, -1000, -210, 2807,
	-1000, 81831, 66474, 3038, 2676, -1000, 145805, -1000, -1000, -1000,
	-1000, 145805, -1000, -1000, -1000, 81831, 89461, -1000, 114115, 91809,
	-1000, -1000, 1529, 2653, -1000, -1000, -1000, 81831, 1425, 81831,
	81831, 81831, -1000, 113527, -1000, -1000, 2191, 1326, 3407, 2184,
	99449, -1000, 1908, -1000, -1000, -1000, 3461, 3249, 126459, -1000,
	-1000, 3086, -1000, 77655, 101793, -1000, 101207, -1000, 100621, -1000,
	99449, -1000, 99449, -1000, 3907, 3906, 3905, -1000, -1000, 3904,
	-1000, 3903, 3450, -1000, 751, 44890, 145805, 3448, -1000, 3901,
	2067, 3084, 145805, -1000, 3214, 1759, 1751, 126459, -1000, -1000,
	126459, -1000, 126459, -1000, -1000, -1000, 2419, 1598, -1000, -1000,
	2602, -1000, -1000, -1000, 1044, -1000, -1000, 99449, 99449, 99449,
	99449, 1271, -1000, 44288, -1000, -1000, 3137, 3899, 1817, -1000,
	1902, -1000, 3036, 3424, -1000, 1523, 1845, 216, 3777, -1000,
	-1000, 254, -1000, -1000, -54, -1000, 132905, -1000, 2590, -1000,
	126459, -1000, 2597, 3069, 3082, 1786, 2405, 2735, -1000, 43686,
	2624, 55726, 2427, 136, -1000, -1000, 136, 136, 34560, -1000,
	-1000, 74123, 74123, 26537, 1357, 52114, 52114, 52114, 52114, 52114,
	52114, 52114, 52114, 52114, 52114, 52114, 52114, 52114, 52114, 52114,
	52114, 52114, 52114, 52114, 52114, 52114, 52114, 52114, 52114, 52114,
	52114, 52114, 52114, 52114, 52114, 52114, 52114, 52114, 52114, 52114,
	52114, 2314, 52114, 1351, 52114, 52114, 52114, 52114, 2139, -1000,
	-1000, 2061, 483, 2089, 656, -1000, -1000, -1000, 3688, 3688,
	3688, 1054, 1054, 1054, 146222, 146222, 603, 3898, 795, -1000,
	52114, -1000, 91, 63481, 52114, 27135, -1000, 423, 8393, 2567,
	-1000, 419, 27767, -1000, -1000, -1000, 29005, 581, 43054, 52114,
	1052, 145805, -1000, -1000, 1513, 3693, 24735, 3112, 2861, 655,
	852, 851, 32122, 31490, 30858, 30226, 845, 841, 52114, 52114,
	52114, 52114, 52114, 52114, 52114, 52114, -1000, -1000, 3718, -1000,
	3693, -1000, -1000, -1000, -1000, 3693, 1330, 1275, 3693, -1000,
	3693, 3693, 8775, 8775, 42452, 41850, 41248, 56328, 40646, 52114,
	29624, 40044, 39442, -1000, 58134, 126459, -43, 3624, 52114, 262,
	-1000, 143229, -1000, 262, 262, 653, -97, 145805, 2669, 2669,
	61717, 2500, 2210, 2210, 2210, -1000, 952, 19270, 952, 111769,
	2238, 952, 952, 207, 239, 418, 59332, 2486, 111769, 747,
	652, -24, -25, -26, -1000, -1000, -27, -28, -1000, -1000,
	99449, 648, 27135, 26537, 206, 2104, -99, 2712, 2708, -1000,
	2707, 2706, -1000, 2705, 2367, -1000, -1000, -1000, 1882, -100,
	1349, 99449, 126459, 1399, 3897, -102, -1000, 6058, -107, -1000,
	1358, 205, 3693, -1000, -1000, -1000, -1000, -1000, 3893, 3892,
	-1000, 1066, 645, 644, 512, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 643, 642, 642, 642, -1000, 260, 632,
	242, 628, 627, 626, -1000, -1000, -1000, -1000, -1000, 3035,
	99449, 126459, 1398, 3891, 88289, -86, 100035, -49, -1000, -1000,
	126459, -1000, -1000, -1000, 3881, -1000, 99449, -1000, -1000, 99449,
	250, 3227, -1000, 99449, -1000, 99449, 243, 3225, -1000, -1000,
	126459, -1000, 99449, 99449, -1000, 126459, 126459, 126459, 138772, 138772,
	241, -1000, 99449, 909, -108, 1197, -54, -1000, -1000, -1000,
	-1000, 1449, -1000, 1978, -1000, -1000, -1000, -1000, -1000, -1000,
	1540, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 870,
	-1000, -1000, -1000, -1000, 3711, 3702, -44, -1000, -1000, 26537,
	-1000, 1977, -1000, -1000, -1000, -1000, 126459, 126459, -1000, -1000,
	126459, 126459, -1000, -1000, -57, 1712, 573, 1347, -1000, 84175,
	2408, 3410, 3877, 2747, 3380, 1652, -1000, 1594, 625, -1000,
	3536, 90047, 3565, 3577, 1402, -1000, 3027, -1000, -1000, -1000,
	965, 1683, 1833, 1344, 1338, 90047, 2164, -1000, 74123, -1000,
	2748, 3517, 1440, 1372, 1440, 1440, 1462, -1000, 90047, 1813,
	1335, 1332, 1328, -1000, -1000, 1698, 1674, -1000, -1000, 112941,
	1569, -1000, 1318, 1316, 3587, 2459, 2259, 816, 1974, -1000,
	1407, 1315, 3024, -1000, -1000, -58, 3564, 3576, 1402, -1000,
	3018, 1313, -1000, -1000, -1000, 3516, 99449, 26537, 1650, 1644,
	1648, 1809, 1312, -45, -1000, 3559, 1693, -1000, 89461, 89461,
	108839, 126459, 3654, 81831, -1000, 2531, -1000, -1000, -1000, 3478,
	3476, -1000, -1000, 1311, 1310, -1000, 1104, 9007, 3330, -1000,
	138772, 1104, 1104, 1993, 3224, 2794, 1678, -1000, 2806, 942,
	2805, -1000, -1000, -1000, 942, -46, 78242, 126459, 203, -1000,
	91, 52114, 52114, 91, 52114, 91, -1000, 3547, 3221, 3220,
	3876, -1000, -1000, -1000, -1000, -1000, 3872, 1996, 2638, -1000,
	-1000, 623, 2497, 3014, 126459, 119, -1000, 99449, 3125, 3218,
	138772, 2164, 2496, -1000, -1000, 91221, -1000, 3217, 449, 2489,
	-1000, 460, 3869, 3211, -1000, 132319, -1000, 3406, 1385, 3204,
	1140, 607, 3622, -1000, 607, 71187, -1000, 126459, -1000, -37,
	294, 83003, -109, -114, 415, -1000, 112355, 126459, 126459, 3344,
	2018, 2007, -1000, 1008, 65282, -1000, 65282, -115, -1000, -210,
	2802, 1579, 65282, -1000, 997, -134, 942, -1000, 942, -1000,
	99449, 3080, -1000, -1000, 81831, 1418, 1415, 1405, -1000, -1000,
	-1000, -1000, 3868, 3867, 3866, 3864, -1000, -1000, 1012, 99449,
	126459, 99449, -1000, -1000, 1662, -1000, 202, -1000, 138772, -1000,
	138772, 126459, 99449, -1000, 1012, 126459, 1012, 126459, 1012, 126459,
	1012, 1012, -1000, -1000, -1000, -1000, -1000, 91, -1000, -1000,
	145805, -1000, 52114, -1000, -1000, 1587, 3862, 1717, -1000, 3074,
	-1000, 3071, -1000, 7, -1000, -1000, 3716, 1921, -1000, 3772,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3855, 145805,
	-1000, 2033, -1000, -1000, -1000, -1000, 99449, 99449, 99449, 99449,
	126459, 3327, -1000, 126459, 3319, 99449, -1000, 3776, -1000, -1000,
	90047, -1000, 2597, 3069, -1000, -1000, -1000, -1000, -1000, -1000,
	1543, 2326, -1000, 2665, -1000, 1625, -1000, -1000, -1000, 145805,
	56930, -1000, -1000, 145805, 1899, -1000, 55124, 54522, -1000, -1000,
	1756, 99449, 2725, -1000, 2725, -84, -1000, 143021, 2664, 99449,
	-1000, -1000, -1000, -1000, -1000, 964, 1218, 1218, 1389, 1389,
	1389, 1389, 3550, 7453, 7758, 6363, 7011, 7011, 1041, 1041,
	1041, 1041, 1041, 7011, 5792, 1054, 1054, 5792, 5792, 5792,
	5792, 5792, 1054, 1054, 1054, 7011, 7011, 7011, 1054, 146222,
	146015, 11494, 52114, 52114, 1308, 2043, 483, 10535, 52114, 11363,
	11363, 11363, 11363, -1000, 2297, -1000, -1000, -1000, -1000, 3012,
	621, 56328, 56328, -1000, -1000, -1000, -1000, 28386, 52114, -1000,
	-1000, -1000, -1000, 38810, -1000, -1000, 141901, -334, 414, -1000,
	201, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 413, -83, -21, -1000, 52114, 52114,
	52114, 398, -1000, 199, 52114, 126459, -1000, 16647, 745, -184,
	-1000, -116, 1448, -1000, 52114, -1000, -1000, 1307, -1000, 1296,
	1288, 1284, -1000, 620, 393, -1000, 194, -1000, 2190, 617,
	616, 52114, -1000, -1000, -1000, -1000, -1000, 141693, -1000, -1000,
	141485, -1000, -1000, 141277, -1000, -1000, 141069, -1000, -1000, -1000,
	-1000, -1000, 145389, 15828, 15328, 14689, 7160, 12537, 11401, -117,
	390, -122, 388, 963, 962, 387, 386, 384, -123, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -124, 382, -1000, 3011, -83, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 381, -1000, 379, -1000, 145181, -83,
	378, 2208, -1000, 56328, 56328, 56328, 56328, 371, -1000, 142813,
	-1000, 144973, 38208, 38208, 38208, 367, 144763, 52114, -83, -125,
	-1000, -132, -1000, -1000, -1000, -1000, 565, -133, 1026, 37588,
	60539, 26537, -1000, 1026, 1026, 52114, -1000, 52114, 2673, -1000,
	-1000, -1000, -1000, 2672, 2095, 2669, 61717, -1000, -1000, -1000,
	-1000, 111769, -1000, 3684, 3020, -1000, 111769, -1000, -1000, 126459,
	449, -1000, 111769, 111769, 26537, 952, -1000, 952, 111769, 618,
	-1000, -1000, -1000, -1000, -1000, 365, 71776, -21, 193, 26537,
	1020, -1000, -1000, 2787, 2787, 2787, 2787, 2787, 99449, -1000,
	-1000, 138772, 1282, -50, -105, 2801, -1000, 3651, -1000, 2111,
	-1000, 74123, -1000, 781, 1236, 26537, -1000, -1000, -1000, 609,
	-1000, 3693, 3693, -1000, 3693, 138772, 3010, 248, 2799, -1000,
	2366, -47, 188, 138772, 3853, -1000, -1000, 250, -1000, 99449,
	250, 250, -1000, 99449, 99449, 2310, -1000, 253, -1000, 252,
	-1000, -1000, -86, -1000, 1042, 35764, -1000, 1449, -1000, -1000,
	1642, -1000, 2040, -1000, 1252, -1000, -1000, 35764, -1000, 3352,
	-1000, 1747, -1000, -1000, -1000, -1000, 2461, 126459, 126459, 99449,
	-1000, 110011, 126459, -1000, 2204, 138772, -1000, 2479, 131733, 2457,
	131147, 74123, -1000, -1000, 608, 987, 2656, 2650, 1138, 126459,
	126459, 2648, 130561, 129975, -1000, 3852, 126459, 2086, 52114, 110011,
	3515, 2245, 5003, 91, 91, -1000, 91, -1000, -1000, 605,
	1289, 99449, 99449, 126459, 138772, 99449, 1971, -1000, -1000, -1000,
	-1000, -1000, 90633, -1000, -1000, 1440, -1000, -1000, -1000, 1440,
	2164, 1915, 126459, 138772, 99449, 138772, 129389, 1970, 128803, 1966,
	-1000, -1000, 1965, 1808, 126459, -1000, -1000, -1000, -1000, 1564,
	-1000, 816, 1277, 3009, 52114, 52114, 2148, 91, 91, -1000,
	91, 601, 26537, 2003, -1000, 3044, 126459, 3770, 128217, 3769,
	126459, 126459, 126459, 138772, 3405, 126459, -1000, -134, -48, -144,
	-1000, 922, 915, -93, -1000, 3654, -1000, 911, 2162, 126459,
	138772, -1000, 127631, 9007, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2128, 79441, 1146, 126459, 1397, -1000, -1000, 1807, 1273,
	1272, 90047, 2157, 1805, 1909, 138772, 65282, 1009, 65282, 2756,
	-1000, -1000, 24132, -1000, 145805, 145805, -1000, 145805, -1000, 77068,
	81831, 126459, -1000, -1000, 1086, 126459, 83589, 982, 3191, 70013,
	-93, 997, 89461, 81831, 3123, 126459, 126459, -1000, -1000, 2164,
	3188, 449, 2472, -1000, 138772, 3621, 3187, 595, 3851, 3847,
	-1000, 99449, 2358, 2471, -1000, -1000, 127045, 3173, 816, 126459,
	1026, 61717, 2019, -1000, 68255, 1109, 126459, 1920, 152, -1000,
	-1000, -1000, -8, 126459, -1000, 768, -1000, -1000, 294, 294,
	997, -144, 586, 65878, -143, -1000, 192, 582, 910, 904,
	-1000, 5272, -1000, -210, -1000, 81831, 1008, 65282, 3008, -210,
	2797, 3006, -1000, -1000, 1034, -1000, 1503, 997, -1000, 81831,
	-1000, 81831, -1000, 81831, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -38, 1900, 126459, -86, -86, -64, -50, -1000,
	1012, -1000, 1012, -1000, 1012, -1000, -1000, -1000, 145805, -1000,
	-1000, -1000, 1713, 1647, 126459, -1000, 3068, -1000, 126459, -1000,
	-1000, 26537, 126459, 99449, 26537, 99449, 3067, 3063, -1000, -1000,
	-1000, 126459, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1160, -1000, 1899, 2320, -1000, 581, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2582, -1000, -53, 34560, 853,
	-1000, -1000, 99449, -39, 52114, 52114, 9863, 8511, 52114, 56328,
	56328, -1000, 52114, 7499, -1000, -1000, -1000, -1000, -1000, 3004,
	580, 52114, 74123, 7707, 6503, -1000, 364, 10574, 5792, -1000,
	52114, -1000, 546, -1000, 361, 36986, -1000, 143645, -32, -146,
	-1000, 19887, -83, -148, -1000, -1000, 779, -1000, 3184, -1000,
	52114, 144477, 2553, 2075, 1905, 1657, 3693, 3768, 23529, -1000,
	72362, 1043, 2248, 140861, -1000, -1000, -1000, -1000, 74123, 74123,
	52114, 52114, -1000, 52114, 52114, 52114, -1000, -1000, -1000, 3693,
	956, -1000, -1000, -1000, 956, -1000, -1000, 1440, -1000, 1440,
	-1000, 52114, -1000, -1000, 2979, 52114, -1000, 74123, 74123, 56328,
	56328, 56328, 56328, 56328, 56328, 56328, 56328, 56328, 56328, 56328,
	56328, 56328, 56328, 56328, 56328, 56328, 56328, 56328, 56328, 2655,
	56328, 3677, 3677, 3677, 762, -1000, 2995, 2979, 52114, 52114,
	74123, 360, 358, 356, -1000, 52114, -83, -1000, -1000, 8731,
	579, -1000, 2570, -1000, 2850, -1000, 52114, -1000, -199, -1000,
	2486, -1000, -1000, 2850, 2850, -149, 145805, 61717, 61717, -1000,
	575, 52114, 2671, -1000, -1000, 743, -332, -1000, 902, -1000,
	-1000, -1000, -1000, -1000, -1000, 900, -1000, 449, -1000, -1000,
	-1000, 189, 111769, 111769, 740, -1000, -151, -1000, -1000, -154,
	-1000, 3620, 354, 26537, -1000, 1026, 3697, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2704, -280, 138772, 138772, 1793, 2277,
	3766, -1000, 3696, 777, 738, 186, 3693, 353, 349, 346,
	-86, 138772, 138772, 1789, 74719, 138772, -1000, -1000, -1000, 250,
	-1000, -1000, -1000, 243, -1000, -1000, -1000, -1000, 2744, -1000,
	-54, -1000, -1000, -1000, 52114, -1000, 988, -1000, -1000, 3397,
	574, 1270, 1269, -1000, -156, -1000, 899, -1000, -1000, -1000,
	-1000, 2965, -1000, 3183, -1000, 2470, -1000, 1115, 2469, 1947,
	-1000, 52114, 572, 2758, 570, 566, 3845, 2214, 3843, 1139,
	3181, 2310, 3180, 2310, -1000, -1000, -1000, 971, -1000, 145805,
	-157, -1000, 2245, -1000, 563, 562, -1000, -57, 1666, 494,
	1253, 1033, -1000, -1000, 52114, 52114, 111183, -1000, 486, 3404,
	-40, -1000, -1000, -1000, 1776, 1251, 1249, -1000, -1000, -1000,
	-1000, 2164, 1765, 1246, 1244, -1000, -1000, -1000, -1000, -1000,
	2466, -1000, 126459, -1000, 3179, 126459, 126459, 1029, -1000, 3136,
	3135, 961, 126459, 52114, 52114, 144269, 144061, -1000, 1028, -1000,
	-1000, 52114, -1000, -58, 1241, 3539, 2464, 99449, -1000, 2310,
	3170, 1240, -1000, 1233, -1000, -1000, -1000, 3558, 3557, 1248,
	-1000, 108839, 81831, 81831, 3654, 65282, -1000, -1000, -1000, 81831,
	-1000, -1000, 78845, -1000, -1000, 1104, 126459, 138772, 99449, 1889,
	-1000, -1000, 88289, 88875, 126459, 2794, -86, 942, -1000, 2649,
	942, 1009, 2972, -1000, 2721, -1000, 1023, 99449, 3841, 343,
	-159, -60, 74123, -1000, -1000, -1000, -1000, 2457, 99449, 126459,
	1336, 2746, 126459, 126459, 3618, -1000, 2401, 615, 99449, 953,
	-1000, 3684, -1000, -1000, -1000, 126459, -1000, -1000, -1000, 3542,
	99449, 3617, 3169, 1020, 91, 99449, 3727, -1000, -1000, 3614,
	99449, 3168, 2356, 2463, 2609, 816, 82417, 1020, 2241, -68,
	-1000, 1920, 36366, 3401, -162, -1000, -1000, -1000, 1026, 71187,
	61717, 52114, 3840, -164, -1000, -1000, -1000, -1000, -1000, 108839,
	81831, 997, 126459, 126459, 3839, 81831, 81831, 81831, -62, 559,
	-1000, 893, 892, 889, -1000, -1000, -1000, -1000, -1000, -1000,
	883, 880, 878, 876, 1008, -1000, -1000, -210, 65282, 1008,
	65282, 91, -1000, 2266, 99449, -1000, 997, 997, 997, 22926,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1012, 3764, -93,
	-1000, -1000, -1000, 2151, 2425, 2151, 1894, 1891, -1000, -1000,
	2309, -1000, -1000, -1000, -1000, 2724, 3403, 26537, 3548, 11363,
	52114, 52114, 5566, 5474, 416, 11363, 52114, 52114, 74123, 9355,
	-165, 52114, 52114, -1000, 52114, 734, 145805, -1000, 3763, 52114,
	342, 339, -1000, -1000, -1000, 3686, -1000, -1000, -1000, 145805,
	52114, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 337, -1000,
	184, -1000, -1000, -1000, 135249, -1000, 52114, 335, 3512, -1000,
	330, 329, 9148, 318, 140653, 140445, 140237, 328, -1000, -1000,
	325, 324, 145805, 2995, 145805, -1000, -1000, 1075, 1075, 1464,
	1464, 1464, 1464, 3677, 916, 1212, 793, 529, 529, 529,
	646, 762, 762, 529, 529, 529, 762, 2954, 2637, 558,
	8163, -1000, -1000, 145805, 145805, 319, -1000, -1000, -1000, -83,
	315, 8731, -1000, 2855, 3511, 145805, -1000, 61717, 2855, 2855,
	-1000, -1000, 2095, 126459, 145805, 61717, -1000, 3020, -1000, 21111,
	20502, -1000, 26537, -1000, -1000, -1000, -1000, 3684, -1000, 71776,
	-1000, 556, -1000, 131, -1000, 3697, -1000, 868, -1000, -1000,
	81831, 81831, 3838, 3837, 3834, 3761, 3759, 2319, 3758, 2787,
	-1000, 2868, -280, -170, 126459, -1000, -1000, 733, 3831, 775,
	26537, 303, -1000, -1000, -1000, -86, -86, 126459, 2947, 99449,
	126459, 1375, -86, -1000, -1000, -1000, 3343, 145805, 2983, 2831,
	2830, 126459, 126459, -1000, 110011, 35764, 1565, 110597, 126459, 3165,
	-1000, 3164, -1000, 1138, 2662, 140029, 62306, -1000, 62306, 126459,
	-1000, -1000, -1000, -1000, 2028, 1566, 3830, 1173, -1000, 3465,
	126459, -1000, 126459, -1000, -1000, -1000, 110011, -1000, 126459, 126459,
	99449, 126459, -1000, 138772, 3146, -167, 145805, -63, -1000, 854,
	-1000, 1424, -1000, 22323, 126459, 138772, 99449, 126459, 138772, 99449,
	3161, 1107, 126459, -1000, 1106, 2171, -1000, -1000, 3133, -1000,
	145805, 143853, 91, 52114, 3144, -172, 26537, -1000, 3751, 3746,
	3160, 3472, -1000, 126459, 3742, 126459, 99449, 3337, -1000, -1000,
	-1000, 1010, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1742,
	1228, 1224, 2352, 2351, 2273, -64, 2157, 1009, -65, 553,
	-1000, 846, -1000, -1000, 844, 843, 1009, -1000, 81831, 65282,
	3826, 449, -1000, 2741, -1000, 105901, 83589, 2323, -1000, -1000,
	543, 126459, 126459, 532, -1000, 91, -1000, 3825, 110011, 515,
	-1000, 2262, -1000, 731, -1000, 138772, 2164, 91, 99449, -1000,
	1007, 449, 291, -66, -1000, 3192, 1130, 26537, 99449, 3158,
	2617, 816, 82417, -1000, 1385, 2735, -1000, -67, -1000, 679,
	91, 2241, -1000, -68, 145805, -1000, 842, -175, 290, -1000,
	3335, -1000, -1000, -181, -1000, -1000, 3865, 3865, 81831, 65282,
	81831, 81831, 81831, 65282, 81831, -1000, 1008, 942, -1000, -210,
	-1000, 2420, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 26537, 1537, -1000, 510, 506, -1000, -1000, -1000, -1000,
	3403, 11363, 11363, 52114, 52114, 52114, 11363, 9355, -187, -1000,
	11363, 11363, -83, -1000, -1000, 143645, -1000, -1000, -1000, 145805,
	-1000, 21720, 2155, -1000, 139821, -1000, 34560, -1000, -1000, 52114,
	52114, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 56328,
	2942, 504, 74123, -1000, -1000, 288, 1006, 52114, 53920, 2486,
	1006, 1006, -1000, -193, -1000, -1000, -1000, 3684, -1000, 3684,
	131, -1000, -1000, 3822, 26537, -1000, 81831, -1000, -1000, -1000,
	-1000, -1000, -1000, 3820, 3818, 2441, 3817, 3814, -1000, 2272,
	-1000, -1000, 3075, -188, 774, -1000, 3813, -1000, -1000, 135,
	138772, 2925, 130, 2792, -1000, 91, -1000, -1000, -1000, -1000,
	-1000, -1000, 2791, 3613, -1000, 1961, -1000, 126459, 126459, -1000,
	126459, -1000, 26537, 126459, 2886, 1300, -1000, 987, 2647, 501,
	56328, 1159, 99449, 761, 2825, 2820, -1000, 3635, 3510, 2874,
	-196, -1000, 126459, 52114, 126459, -207, -212, 2436, -1000, -1000,
	1157, 1297, 52114, 1155, -1000, -1000, -1000, 74123, 499, 2310,
	2310, -1000, -217, -218, -1000, -1000, -1000, 52114, 1223, 126459,
	35162, -1000, 3812, 3404, -1000, -1000, -1000, -1000, -1000, -1000,
	126459, 126459, -1000, 126459, 126459, -1000, 52114, -1000, 143437, 52114,
	1222, -1000, -1000, -1000, 3736, 2310, 26537, 2310, -1000, 2310,
	3472, 1171, 2301, 126459, 138772, 99449, 1680, 1680, 2978, -1000,
	-1000, -1000, 2751, 2751, 81831, 65282, 65282, -1000, -70, 1009,
	-1000, 3610, 2153, 3807, -1000, -1000, -1000, -1000, 2645, -1000,
	-1000, -1000, 126459, 2641, 2847, 62306, 498, 497, 126459, 1000,
	-1000, -220, 83589, 982, 1003, -1000, -1000, -1000, -1000, 449,
	-1000, 2740, 3595, -1000, 3728, 495, 491, 126459, 2346, 488,
	26537, 3399, 816, 82417, -1000, 3173, 1920, -1000, 2448, 126459,
	3379, -1000, 2735, 483, -1000, 997, 481, 997, -1000, -223,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1008,
	-79, -1000, 877, 863, -1000, -1000, 99449, 99449, 52114, 52114,
	-1000, 11363, 11363, 11363, -1000, 271, -1000, -1000, 2241, 3508,
	-1000, -80, 139391, 139361, 7637, 56328, 74123, -225, -1000, -1000,
	126459, 145805, -81, -1000, 145805, 478, 476, 428, -1000, -1000,
	-1000, 730, 372, -1000, -1000, -1000, -1000, 3804, -1000, -1000,
	-1000, -1000, 138772, 3803, -1000, 138772, -86, 138772, 138772, 1741,
	-1000, 109425, 126459, -1000, -1000, 1947, 2251, -1000, -1000, 126459,
	2460, -1000, -1000, -1000, 1014, 52114, 8163, 56328, 475, 52114,
	-1000, 473, 471, 3585, 3311, -1000, 2734, 2935, 1992, 62306,
	-1000, 3403, -1000, 18639, -1000, 1123, 1983, -1000, -1000, -1000,
	-1000, 145805, 56328, 3472, 62306, -1000, -1000, 470, 469, 145805,
	465, 837, 2907, -1000, -1000, -1000, -1000, -93, -93, -1000,
	145805, 91, 145805, 463, 3539, -1000, -1000, -1000, -1000, 2310,
	99449, 824, -1000, -1000, -1000, 1216, -1000, -1000, -1000, -1000,
	3802, 3801, 2898, 88289, -1000, -226, -1000, -1000, -1000, 1994,
	91, 982, -1000, -1000, 2323, 459, -1000, 996, 2503, 2503,
	-231, 62306, 62306, -233, 2336, 2726, -1000, 269, 3584, 1003,
	-1000, 3674, -1000, 3582, 3333, -1000, 91, -1000, 3727, 62306,
	-1000, 99449, 62306, 2345, 2068, 2596, 82417, -1000, 2609, -1000,
	-1000, -234, 126459, 1920, -1000, -1000, 81831, -1000, -1000, -1000,
	2420, -1000, 126459, -1000, 126459, -1000, -1000, -240, -241, -1000,
	2132, 52114, 34560, -1000, -1000, 7637, -242, -1000, -82, -1000,
	3574, 53920, 3800, 3799, 3798, -1000, -1000, -1000, -280, -1000,
	-86, -86, -86, 126459, -1000, 1960, -1000, 2457, -1000, -1000,
	3153, -1000, 2844, 457, 18231, 8163, 2574, 126459, 17833, 2164,
	2164, -1000, 3571, 2931, -1000, -1000, 2148, 454, -1000, -1000,
	-1000, -1000, 853, 126459, 996, 2838, 99449, 8163, 1131, -247,
	2151, 2151, 52114, 33958, 2165, -1000, 52114, -1000, -1000, 3472,
	65282, 138772, -1000, -1000, 138772, 2344, -1000, 2884, 3676, -1000,
	2336, 126459, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1123, -249, -250, -1000, -1000, 3458,
	-1000, 3332, 2741, 91, -1000, -1000, 91, 3797, 1007, 263,
	-256, 1130, -257, 99449, 1975, -1000, 816, -1000, 2617, 1026,
	3266, -1000, -262, -1000, -264, -267, -1000, -1000, 261, 53318,
	53318, 53318, -83, -84, -1000, 126459, 450, -1000, -1000, -1000,
	-1000, -1000, 129, -1000, -1000, 3120, 951, -1000, 881, 1963,
	251, 1132, 236, 137, -1000, -1000, -1000, 2874, -1000, 126459,
	-1000, -1000, -1000, 951, 449, -1000, 52114, 1123, -269, -1000,
	1105, -270, -1000, 1079, -272, -1000, 2897, -1000, -278, 2310,
	-1000, -280, 241, 1680, 1004, 3541, -1000, -1000, -1000, 2586,
	-285, -1000, -1000, 1992, 1123, 2148, 2526, -1000, 2153, 1000,
	-1000, -1000, -1000, -1000, 1123, 448, 1992, 446, 1561, 816,
	-1000, -1000, 1440, 3399, 3264, 1423, 997, -1000, -1000, -1000,
	3174, -1000, 57532, 2293, 1886, 142605, 3174, 3174, -1000, -1000,
	138772, 126459, 996, 3526, -1000, 935, 921, 1580, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1026, -286, -1000, 2574,
	145805, 996, -1000, 2151, 2789, -1000, 2151, 2896, -1000, 2159,
	-1000, -1000, -1000, -1000, 2892, -1000, 1840, 3662, -1000, -1000,
	996, 126459, 2148, 1992, 996, 1877, 1869, 3790, 982, 2336,
	1992, 62306, 2148, 62306, 2121, -1000, 126459, -1000, 2068, 1369,
	-1000, 1651, -1000, -1000, 1797, 3581, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -86, -1000, -1000, 820, -1000, 3299, -1000,
	1154, 2198, 2198, -1000, -1000, 881, -1000, -1000, 442, -1000,
	437, -1000, 138772, 2257, -1000, -1000, -1000, -1000, 996, 2148,
	1026, -1000, 3780, -1000, 2336, -1000, 2148, -291, 996, -292,
	2166, -1000, -1000, -93, 1975, -1000, 1635, 71187, 1856, -1000,
	-1000, 2213, 52716, 52114, -1000, 3656, -1000, -1000, 2666, -1000,
	2874, 52114, 52114, 241, 69427, 1026, 996, -1000, -1000, 2586,
	996, 1123, 1026, 1992, -1000, 816, 1561, 71187, -279, -1000,
	-1000, -1000, 145805, -1000, -1000, -1000, -1000, -293, -309, -1000,
	-144, 108839, -1000, 1026, -1000, 1026, 1992, -1000, 2148, 138772,
	2121, -279, -1000, 2148, 1213, -314, -1000, -1000, 2148, 996,
	-1000, -1000, -1000, -1000, -1000, 417, -1000, 996, 1026, 52114,
	1026, -1000, -325, -1000, 2148, -1000,
}

var sqlPgo = [...]int{
	0, 4723, 4722, 4721, 4717, 4712, 4711, 4707, 4706, 4705,
	4704, 4702, 4700, 4697, 4694, 156, 4690, 4688, 4687, 4685,
	4683, 4681, 4679, 4675, 4672, 4671, 4665, 4664, 4655, 4654,
	4651, 4647, 4644, 4642, 4641, 4640, 4634, 4633, 4632, 4627,
	4621, 4619, 4618, 4615, 4612, 4606, 4605, 4604, 4601, 4598,
	4597, 4594, 4593, 4592, 4591, 4590, 4581, 4579, 4578, 4577,
	4574, 4572, 4570, 4568, 4557, 4554, 4553, 4552, 4551, 4550,
	4544, 4543, 4542, 59, 4535, 4534, 4533, 4531, 4530, 4529,
	4528, 4527, 4526, 4525, 4523, 4522, 4520, 4513, 4512, 4505,
	4504, 4502, 4501, 69, 4499, 295, 4497, 4496, 4495, 4493,
	4492, 4491, 4490, 4489, 4488, 4484, 4479, 4478, 294, 4476,
	153, 171, 4475, 4474, 4021, 4472, 4470, 291, 4469, 4467,
	4466, 4465, 4463, 302, 4462, 4461, 4460, 4457, 4456, 275,
	4454, 4453, 4452, 4450, 4449, 4448, 125, 146, 4447, 4446,
	1451, 4444, 4443, 4441, 4440, 4439, 4437, 4435, 274, 276,
	4433, 4431, 4430, 263, 183, 4429, 288, 4428, 4426, 4423,
	4422, 4420, 4418, 4417, 4416, 4415, 4414, 4412, 4411, 4407,
	4406, 4405, 4404, 4402, 4401, 4399, 4396, 4395, 4386, 4381,
	4380, 4379, 4378, 4377, 4376, 4375, 4372, 4371, 4367, 4356,
	4355, 4354, 4353, 4351, 4350, 4349, 4347, 4346, 4343, 266,
	235, 152, 4341, 4339, 287, 286, 4336, 4325, 4324, 4323,
	4322, 3577, 4321, 4319, 4318, 4317, 4316, 4314, 4313, 4309,
	4308, 157, 12, 50, 4306, 4305, 100, 95, 99, 84,
	109, 104, 4304, 128, 4302, 134, 119, 4301, 121, 115,
	22, 18, 250, 256, 9940, 251, 4300, 4299, 4297, 262,
	209, 4294, 252, 4293, 4291, 4289, 4285, 4284, 4283, 77,
	51, 218, 4282, 4280, 147, 188, 191, 195, 190, 189,
	78, 52, 105, 93, 63, 43, 14, 108, 229, 20,
	7, 283, 4279, 282, 11, 155, 13, 35, 4278, 4277,
	4276, 4275, 3687, 111, 4272, 285, 265, 187, 4270, 4269,
	4265, 181, 4264, 4258, 45, 244, 110, 90, 120, 102,
	135, 4255, 166, 178, 42, 4254, 175, 70, 4253, 4252,
	112, 96, 9728, 11401, 4251, 4250, 137, 83, 130, 3708,
	162, 160, 213, 92, 180, 177, 58, 225, 219, 194,
	23, 4247, 272, 4246, 3596, 89, 197, 169, 6045, 4242,
	4241, 4240, 75, 4239, 113, 4238, 4237, 67, 16, 4,
	2, 159, 36, 40, 3, 4236, 31, 138, 49, 29,
	4235, 24, 4234, 4230, 4229, 4228, 46, 4227, 53, 174,
	4226, 4220, 299, 4218, 101, 57, 133, 4216, 88, 224,
	4213, 233, 143, 4204, 4202, 270, 199, 4200, 76, 243,
	4198, 4197, 4191, 4190, 4188, 4187, 150, 1, 140, 4185,
	4183, 163, 4181, 56, 261, 211, 4179, 65, 4178, 4177,
	193, 55, 158, 301, 203, 238, 136, 236, 201, 248,
	4176, 4175, 4172, 206, 4169, 4168, 232, 182, 4167, 4163,
	257, 300, 98, 44, 91, 259, 87, 208, 170, 4158,
	215, 4155, 4154, 298, 200, 230, 39, 19, 6, 114,
	116, 4153, 5, 253, 173, 241, 129, 4151, 8322, 2161,
	2840, 245, 4149, 164, 141, 79, 142, 168, 284, 97,
	4148, 4147, 3628, 4145, 4144, 4143, 4140, 198, 4139, 4137,
	4136, 172, 216, 237, 4134, 124, 71, 54, 25, 127,
	264, 296, 132, 234, 185, 273, 4133, 4131, 4129, 212,
	4128, 85, 179, 4126, 214, 271, 64, 4125, 309, 4124,
	165, 2051, 68, 167, 4123, 255, 4119, 4118, 4117, 4116,
	4115, 4114, 4111, 1352, 246, 4110, 4109, 4108, 34, 207,
	4107, 280, 184, 249, 118, 86, 4106, 117, 3588, 4105,
	205, 222, 60, 9, 4104, 73, 4100, 2058, 61, 4098,
	0, 14448, 10415, 13261, 13604, 4096, 2347, 4095, 4094, 4093,
	226, 81, 4092, 4089, 4087, 123, 4086, 94, 4085, 4082,
	72, 4079, 28, 21, 17, 30, 27, 74, 62, 4078,
	4077, 66, 144, 148, 4075, 297, 239, 4074, 4073, 4072,
	4070, 103, 4069, 41, 4065, 38, 4064, 4063, 48, 15,
	32, 4060, 4059, 161, 4057, 131, 223, 176, 4056, 186,
	4055, 82, 151, 4054, 4053, 278, 221, 220, 106, 4052,
	292, 4049, 210, 4047, 4046, 26, 4045, 4043, 258, 126,
	122, 47, 260, 145, 37, 196, 228, 4042, 4041, 192,
	4040, 4039, 4038, 290, 4037, 3567, 293, 4036, 33, 4035,
	4033, 4032, 8, 4031, 4030, 217, 3321, 4026, 4025, 10,
	4019, 202,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 57, 57, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 40, 42, 41, 35, 35, 36, 36, 37, 38,
	38, 43, 45, 44, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 46, 46, 22,
	22, 48, 48, 23, 23, 49, 49, 625, 625, 625,
	626, 626, 627, 627, 627, 26, 51, 19, 20, 20,
	20, 20, 628, 628, 628, 628, 39, 27, 52, 32,
	32, 32, 32, 32, 224, 224, 224, 224, 25, 25,
	47, 47, 267, 267, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 624, 624, 269, 269, 268, 256,
	256, 257, 257, 258, 258, 629, 629, 270, 270, 270,
	271, 271, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 522, 522, 522, 553, 553, 553, 553, 555,
	555, 648, 648, 649, 649, 649, 649, 649, 139, 139,
	419, 419, 419, 61, 61, 61, 61, 61, 619, 619,
	226, 226, 226, 228, 228, 227, 227, 227, 227, 227,
	84, 84, 635, 635, 634, 633, 633, 633, 636, 636,
	636, 225, 225, 225, 135, 135, 135, 135, 135, 135,
	135, 135, 136, 136, 137, 137, 229, 229, 229, 231,
	231, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 235, 18, 18, 18, 118, 118,
	118, 118, 118, 118, 118, 113, 113, 557, 557, 558,
	558, 220, 220, 221, 221, 221, 221, 222, 222, 223,
	223, 223, 76, 76, 232, 232, 234, 234, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 64, 64, 64, 64, 64, 65, 65, 65, 65,
	65, 65, 66, 66, 66, 66, 66, 66, 67, 67,
	74, 74, 74, 74, 74, 74, 74, 74, 201, 201,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 81, 81, 81, 81, 81, 650, 650, 650,
	650, 650, 650, 650, 650, 650, 650, 650, 650, 650,
	650, 650, 650, 650, 650, 650, 651, 651, 652, 652,
	653, 653, 654, 654, 654, 654, 654, 654, 654, 654,
	654, 654, 654, 654, 654, 654, 654, 654, 654, 654,
	654, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 90, 90,
	380, 380, 343, 343, 91, 91, 91, 92, 92, 93,
	93, 78, 78, 616, 616, 617, 617, 617, 617, 513,
	513, 95, 95, 418, 418, 96, 96, 96, 96, 96,
	96, 97, 97, 97, 97, 97, 97, 97, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 105, 105, 105, 105, 105, 106, 106, 106,
	103, 103, 103, 100, 100, 100, 99, 99, 99, 104,
	104, 104, 615, 332, 332, 102, 102, 102, 101, 101,
	101, 396, 396, 107, 107, 107, 107, 344, 108, 108,
	108, 108, 108, 108, 108, 108, 111, 111, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 515, 515, 4, 4, 262, 262, 261, 261, 261,
	261, 5, 5, 5, 265, 265, 264, 263, 109, 109,
	109, 480, 480, 114, 114, 114, 434, 434, 115, 115,
	115, 115, 115, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 621, 621, 389, 389, 295, 295,
	295, 295, 127, 127, 127, 127, 128, 128, 128, 128,
	129, 129, 206, 206, 145, 145, 145, 145, 144, 144,
	144, 144, 144, 144, 144, 144, 68, 68, 68, 69,
	69, 70, 70, 71, 71, 72, 72, 73, 73, 73,
	73, 73, 148, 148, 31, 31, 31, 31, 149, 149,
	645, 645, 151, 147, 147, 147, 147, 147, 146, 146,
	150, 150, 150, 150, 152, 154, 154, 154, 154, 154,
	153, 153, 153, 153, 153, 155, 155, 547, 547, 404,
	404, 545, 545, 567, 567, 546, 546, 350, 350, 350,
	350, 350, 351, 351, 351, 556, 556, 556, 556, 556,
	556, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 207, 207, 207,
	208, 208, 213, 213, 214, 214, 214, 215, 215, 215,
	212, 212, 212, 209, 209, 210, 210, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 218, 218, 216,
	216, 217, 217, 656, 656, 655, 655, 219, 219, 219,
	219, 219, 182, 182, 182, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 405, 405, 185, 185,
	185, 169, 169, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 162, 162, 162, 162, 162, 162, 162,
	162, 163, 163, 163, 158, 158, 171, 171, 171, 171,
	171, 164, 164, 165, 165, 165, 166, 166, 166, 166,
	193, 193, 168, 168, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 159, 159, 159, 159, 173, 173, 173,
	173, 441, 441, 441, 199, 199, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 196, 196, 196, 196, 196, 196, 637, 637,
	638, 638, 638, 189, 189, 189, 189, 189, 189, 494,
	494, 183, 183, 183, 183, 188, 188, 188, 188, 191,
	191, 191, 191, 424, 424, 180, 180, 180, 181, 181,
	181, 186, 186, 198, 187, 381, 381, 184, 184, 190,
	190, 190, 190, 192, 192, 192, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 161, 161, 161, 161, 194,
	194, 179, 179, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 657, 657, 175, 175, 175, 174,
	174, 174, 174, 177, 177, 178, 178, 178, 178, 178,
	178, 176, 167, 197, 618, 618, 613, 613, 613, 613,
	613, 613, 613, 613, 613, 614, 614, 614, 614, 620,
	620, 119, 119, 119, 119, 119, 119, 119, 130, 130,
	130, 130, 130, 130, 130, 133, 133, 120, 120, 120,
	120, 120, 120, 120, 123, 123, 121, 121, 121, 121,
	122, 122, 85, 85, 85, 85, 85, 17, 17, 17,
	86, 86, 286, 286, 240, 240, 240, 368, 368, 241,
	241, 358, 358, 358, 358, 236, 236, 237, 237, 238,
	239, 239, 87, 87, 658, 658, 658, 630, 630, 630,
	631, 631, 631, 631, 631, 631, 352, 352, 353, 353,
	460, 460, 460, 460, 460, 356, 356, 356, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 366, 367, 367,
	359, 359, 365, 364, 364, 363, 363, 362, 362, 360,
	361, 361, 361, 370, 370, 369, 372, 372, 371, 459,
	576, 576, 578, 578, 578, 578, 578, 578, 578, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 442, 442, 659, 659,
	660, 661, 574, 574, 574, 575, 570, 570, 571, 571,
	571, 571, 571, 354, 354, 355, 355, 355, 355, 572,
	573, 387, 387, 498, 577, 577, 579, 579, 581, 662,
	662, 662, 662, 662, 662, 663, 663, 663, 458, 458,
	457, 457, 456, 456, 378, 378, 582, 582, 582, 582,
	583, 583, 583, 583, 583, 586, 585, 584, 584, 584,
	584, 584, 89, 89, 89, 421, 421, 420, 420, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 203, 203, 298, 298, 298, 83,
	83, 83, 14, 14, 14, 14, 14, 14, 14, 313,
	313, 15, 15, 15, 632, 632, 632, 88, 88, 88,
	88, 88, 88, 376, 376, 376, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 623, 623, 622, 622, 299, 299, 665, 665,
	94, 94, 94, 94, 94, 94, 94, 94, 516, 516,
	517, 517, 82, 82, 82, 82, 82, 443, 443, 440,
	440, 439, 439, 386, 386, 496, 496, 496, 497, 303,
	303, 304, 304, 259, 259, 259, 34, 33, 24, 24,
	28, 28, 29, 29, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 30, 30, 54, 54, 54, 54, 55,
	55, 55, 55, 58, 58, 59, 59, 53, 53, 53,
	53, 56, 56, 50, 50, 60, 60, 60, 60, 60,
	639, 641, 641, 640, 640, 644, 644, 644, 644, 644,
	644, 642, 642, 643, 643, 646, 646, 647, 647, 126,
	126, 131, 131, 131, 131, 131, 132, 132, 132, 132,
	134, 134, 134, 134, 143, 143, 202, 202, 202, 202,
	202, 202, 202, 62, 62, 62, 62, 75, 75, 75,
	75, 141, 667, 667, 667, 142, 142, 142, 666, 666,
	296, 296, 453, 453, 454, 454, 668, 668, 455, 455,
	455, 455, 455, 289, 288, 290, 290, 291, 291, 80,
	80, 80, 279, 279, 278, 280, 280, 281, 281, 276,
	276, 559, 559, 283, 283, 283, 284, 284, 272, 272,
	273, 273, 274, 274, 275, 275, 287, 287, 554, 554,
	669, 669, 117, 117, 117, 205, 205, 342, 342, 342,
	450, 450, 450, 379, 379, 310, 310, 452, 452, 452,
	452, 452, 417, 417, 417, 204, 204, 394, 394, 407,
	407, 408, 408, 510, 510, 409, 124, 124, 125, 125,
	140, 140, 244, 244, 242, 242, 242, 242, 242, 242,
	242, 242, 249, 249, 250, 250, 251, 251, 252, 253,
	253, 253, 253, 397, 397, 254, 254, 254, 243, 243,
	243, 245, 245, 245, 245, 245, 245, 245, 248, 248,
	248, 248, 255, 255, 255, 247, 247, 593, 593, 593,
	595, 595, 597, 597, 596, 596, 592, 592, 594, 594,
	664, 664, 423, 423, 423, 375, 377, 373, 373, 374,
	374, 384, 384, 382, 383, 383, 385, 385, 495, 495,
	495, 260, 260, 260, 414, 414, 414, 414, 415, 415,
	446, 446, 444, 444, 444, 444, 445, 445, 447, 447,
	447, 448, 448, 449, 449, 411, 411, 412, 412, 413,
	413, 413, 413, 476, 476, 246, 246, 246, 391, 391,
	391, 392, 392, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 467, 467, 465, 465, 465, 465,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 500,
	501, 501, 393, 393, 502, 451, 451, 611, 611, 611,
	612, 612, 493, 493, 503, 503, 503, 503, 503, 503,
	491, 491, 492, 492, 511, 512, 512, 427, 427, 427,
	427, 425, 425, 428, 428, 428, 428, 428, 426, 426,
	504, 504, 504, 504, 416, 416, 505, 505, 505, 505,
	506, 507, 507, 508, 508, 461, 462, 462, 518, 518,
	518, 518, 520, 390, 390, 390, 390, 390, 569, 568,
	568, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 535, 535, 535, 535, 535, 535, 535, 521,
	521, 521, 521, 521, 525, 525, 525, 524, 524, 524,
	524, 524, 524, 524, 524, 524, 524, 524, 526, 526,
	531, 531, 532, 532, 532, 527, 528, 533, 533, 533,
	533, 670, 670, 537, 537, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 523, 523, 523, 530, 530, 530,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 435, 435, 437, 437, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 470, 470,
	470, 470, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 587, 587, 587,
	587, 587, 587, 587, 587, 472, 472, 590, 590, 591,
	591, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 598, 598, 599, 599, 601, 601, 602, 602,
	603, 604, 604, 604, 605, 606, 606, 600, 600, 607,
	607, 607, 607, 608, 608, 609, 609, 609, 609, 609,
	610, 610, 610, 610, 610, 482, 482, 483, 483, 489,
	489, 489, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 349, 349, 348,
	300, 300, 300, 300, 300, 300, 402, 402, 400, 400,
	400, 403, 403, 401, 401, 399, 399, 398, 398, 479,
	479, 477, 477, 481, 481, 429, 429, 536, 536, 536,
	536, 536, 536, 536, 536, 430, 430, 430, 438, 431,
	431, 432, 432, 432, 432, 432, 473, 474, 433, 433,
	433, 475, 475, 484, 488, 488, 487, 486, 486, 485,
	485, 463, 463, 464, 464, 410, 410, 671, 671, 406,
	406, 509, 509, 509, 509, 346, 346, 395, 395, 345,
	345, 337, 337, 338, 338, 338, 338, 388, 388, 490,
	490, 538, 538, 539, 539, 540, 540, 541, 541, 542,
	543, 544, 478, 478, 321, 320, 307, 308, 319, 318,
	317, 306, 309, 314, 315, 316, 311, 312, 328, 327,
	326, 277, 282, 333, 334, 334, 336, 336, 335, 335,
	323, 324, 325, 514, 305, 339, 339, 340, 340, 340,
	341, 341, 341, 341, 301, 301, 302, 302, 329, 329,
	330, 331, 331, 322, 322, 322, 292, 292, 292, 293,
	293, 294, 294, 552, 552, 549, 549, 549, 550, 550,
	550, 551, 551, 551, 551, 548, 548, 548, 548, 548,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 561, 561, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 563, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 566, 566,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 4, 6, 9, 6, 8, 4, 4,
	5, 9, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 3, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 2, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 6, 3, 8, 5, 3, 4, 3, 3,
	4, 3, 4, 4, 4, 3, 5, 7, 3, 3,
	4, 3, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 4, 3, 3, 3, 3, 3, 6, 4,
	4, 4, 3, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 7, 3,
	2, 0, 1, 3, 3, 1, 0, 1, 2, 2,
	1, 6, 5, 1, 3, 2, 1, 4, 3, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 4, 3, 1, 2, 3, 2, 2,
	2, 4, 6, 3, 1, 2, 2, 7, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 7, 4, 7, 8, 8, 9, 11,
	5, 2, 6, 9, 4, 7, 7, 10, 7, 10,
	10, 13, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 4, 4, 3, 4, 1, 1,
	1, 1, 5, 3, 3, 2, 2, 6, 3, 3,
	3, 3, 4, 4, 3, 1, 3, 3, 2, 2,
	1, 3, 3, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 1, 2, 2, 2,
	9, 2, 1, 0, 1, 1, 0, 1, 2, 0,
	2, 2, 0, 2, 2, 2, 2, 1, 2, 3,
	3, 4, 4, 4, 4, 3, 3, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 3, 5, 7,
	3, 3, 3, 4, 4, 6, 5, 7, 5, 7,
	5, 7, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 1, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 4, 6, 4, 2, 6, 4, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 5, 3, 5, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 3, 4,
	3, 4, 3, 5, 3, 4, 4, 3, 4, 5,
	3, 4, 3, 4, 4, 5, 3, 3, 1, 1,
	0, 2, 3, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 3,
	4, 4, 5, 2, 0, 4, 2, 3, 4, 2,
	3, 3, 3, 7, 5, 2, 0, 3, 3, 4,
	3, 3, 3, 5, 3, 3, 3, 4, 4, 4,
	4, 4, 4, 4, 3, 4, 5, 4, 4, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 4,
	3, 4, 4, 5, 1, 1, 10, 10, 3, 5,
	5, 5, 3, 5, 6, 4, 4, 5, 5, 2,
	3, 2, 5, 4, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 7, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	12, 15, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 1, 1, 1, 3, 3,
	1, 3, 10, 13, 0, 2, 3, 1, 1, 0,
	1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
	1, 1, 1, 2, 3, 3, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 0,
	1, 0, 1, 1, 0, 1, 4, 1, 0, 3,
	7, 7, 1, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 2, 2, 3, 6, 4, 2, 3, 5, 5,
	5, 2, 5, 5, 2, 2, 2, 0, 1, 1,
	3, 4, 10, 11, 9, 5, 3, 1, 5, 9,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	6, 1, 3, 1, 2, 0, 1, 2, 3, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	3, 0, 4, 0, 3, 0, 2, 2, 2, 0,
	1, 1, 2, 2, 0, 3, 3, 2, 1, 1,
	2, 2, 5, 8, 4, 1, 0, 1, 2, 2,
	1, 2, 3, 3, 2, 2, 3, 2, 2, 2,
	2, 2, 3, 1, 4, 2, 3, 2, 2, 4,
	7, 3, 4, 6, 5, 7, 5, 5, 3, 3,
	0, 2, 2, 2, 1, 1, 1, 8, 10, 11,
	8, 11, 5, 4, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 11, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 16, 19, 15, 18, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 2, 4, 2, 3, 1,
	0, 2, 0, 1, 1, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 4, 5,
	2, 4, 6, 6, 8, 6, 7, 8, 9, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 6, 8, 8, 4,
	7, 3, 0, 7, 10, 1, 1, 1, 1, 2,
	2, 3, 0, 3, 0, 1, 0, 2, 0, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 3, 2, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 0, 2, 4, 2, 1, 0,
	2, 1, 1, 0, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 2, 3, 2, 2, 1, 2, 14,
	16, 3, 1, 0, 4, 1, 0, 2, 2, 3,
	0, 1, 1, 4, 4, 5, 1, 0, 3, 0,
	3, 0, 3, 0, 3, 0, 4, 0, 3, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 4, 8, 11,
	7, 10, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 6, 4, 5, 4,
	1, 1, 3, 3, 1, 2, 4, 4, 2, 3,
	5, 5, 1, 3, 1, 0, 1, 2, 3, 2,
	4, 2, 3, 0, 2, 0, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 8, 8,
	8, 2, 4, 4, 4, 2, 2, 2, 2, 3,
	1, 3, 1, 2, 6, 7, 1, 0, 1, 0,
	1, 0, 1, 1, 0, 1, 5, 1, 0, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 3, 1,
	3, 3, 3, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	4, 1, 0, 1, 0, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 634, -110, -107, -76, -74, -114, -115,
	-96, -116, -109, -138, -143, -124, -125, -126, -139, -145,
	-202, -207, -208, -209, -210, -219, -3, -61, -63, -77,
	-95, -97, -108, -118, -117, -119, -127, -135, -130, -113,
	-68, -140, -144, -156, -203, -204, -205, 33, 32, 104,
	83, 160, 133, 142, 212, 404, 453, 465, 421, 147,
	444, 426, -150, -151, 484, -62, -75, -142, -141, 76,
	134, 176, 309, 436, -6, -14, -31, -18, 30, 48,
	-64, -65, -66, -67, 65, -83, -79, -90, -84, -78,
	-81, -650, 106, -594, -98, -101, -134, -654, 168, 232,
	-120, -121, -122, 386, -128, -129, 446, -131, -132, -133,
	449, 169, -70, -69, 162, -242, -244, -147, -146, -148,
	-206, -157, -158, -159, -160, -161, -163, -164, -166, -193,
	-167, -168, -169, -170, -171, -172, -176, -196, -173, -174,
	-175, -178, -177, -179, -184, -180, -181, -182, -183, -185,
	-186, -188, -189, -190, -191, -192, -194, -195, 489, -187,
	-197, -165, -198, 554, 52, 505, 85, 152, 457, 21,
	-7, -8, -9, -10, -11, -12, -13, -17, -16, -60,
	-4, -5, -80, -82, -85, -86, -87, -94, -88, -89,
	-593, -99, -100, -103, -105, -106, -102, -104, 445, 606,
	-245, -243, 631, 570, -162, -21, -26, -22, -23, -25,
	-27, -24, -28, -29, -30, -46, -51, -48, -49, -47,
	-50, -52, -53, -54, -55, -56, -57, -58, -59, -33,
	-39, -40, -34, -35, -36, -37, -38, -41, -42, -43,
	-44, -45, -19, -20, -32, 593, 602, -248, -246, -247,
	-255, 476, 578, 527, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	-344, 2, -323, -329, -330, -331, -322, -292, -563, -566,
	4, -560, -564, 175, 242, 347, 21, 22, 24, 23,
	25, 26, 27, 28, 30, 31, 41, 43, 44, 46,
	47, 48, 49, 50, 51, 52, 56, 58, 62, 63,
	64, 65, 66, 67, 71, 76, 77, 82, 83, 84,
	85, 86, 87, 88, 89, 95, 92, 93, 94, 96,
	98, 100, 101, 102, 103, 104, 105, 107, 108, 109,
	111, 112, 113, 121, 122, 123, 124, 125, 127, 133,
	128, 134, 137, 132, 136, 138, 140, 141, 142, 145,
	146, 147, 149, 150, 151, 153, 154, 155, 157, 158,
	160, 161, 162, 165, 163, 166, 164, 167, 168, 169,
	170, 173, 181, 182, 183, 188, 190, 191, 192, 194,
	195, 198, 199, 200, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 213, 217, 219, 220, 221, 222, 223,
	224, 225, 231, 232, 234, 235, 236, 237, 238, 243,
	244, 245, 249, 255, 256, 260, 261, 262, 264, 268,
	269, 270, 271, 272, 273, 275, 277, 276, 279, 282,
	283, 286, 287, 288, 289, 290, 291, 295, 296, 292,
	297, 298, 300, 301, 304, 302, 305, 306, 303, 307,
	310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
	320, 321, 308, 309, 324, 322, 326, 327, 328, 329,
	330, 345, 340, 341, 342, 334, 335, 331, 336, 332,
	333, 337, 338, 344, 339, 349, 350, 351, 352, 355,
	229, 248, 357, 358, 361, 363, 380, 366, 367, 368,
	371, 372, 375, 378, 379, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 391, 392, 394, 395, 396, 398,
	399, 400, 402, 404, 405, 407, 408, 409, 411, 412,
	413, 414, 415, 416, 417, 418, 420, 421, 423, 422,
	424, 426, 428, 429, 430, 436, 437, 444, 438, 440,
	441, 442, 443, 445, 446, 447, 448, 449, 451, 452,
	453, 455, 456, 457, 458, 459, 461, 463, 464, 468,
	469, 470, 486, 487, 508, 465, 466, 467, 471, 472,
	473, 474, 475, 479, 477, 478, 480, 481, 482, 484,
	485, 488, 489, 491, 492, 493, 494, 495, 496, 497,
	500, 502, 503, 504, 505, 506, 526, 507, 509, 513,
	514, 515, 516, 510, 511, 525, 518, 519, 520, 522,
	523, 528, 529, 530, 531, 532, 533, 535, 536, 538,
	546, 547, 548, 549, 551, 554, 555, 556, 557, 544,
	559, 560, 563, 564, 568, 565, 569, 566, 567, 570,
	572, 575, 576, 577, 583, 582, 584, 585, 586, 588,
	589, 594, 595, 597, 598, 599, 37, 53, 54, 57,
	59, 61, 72, 73, 74, 78, 129, 130, 159, 171,
	172, 184, 201, 202, 214, 216, 226, 227, 228, 250,
	251, 253, 258, 280, 354, 356, 373, 377, 393, 397,
	401, 403, 419, 460, 498, 512, 517, 539, 540, 541,
	542, 550, 552, 578, 579, 580, 587, 596, -344, 2,
	-323, 364, -316, 2, -292, -292, 404, 29, 2, 29,
	392, 478, 530, 532, 2, -621, -389, 2, 29, -295,
	-292, 106, 212, 476, -316, 2, -621, 212, -389, 26,
	2, -292, 2, 378, 23, 28, 69, 80, 102, 145,
	170, 193, 198, -653, 380, 412, 463, 480, 525, 536,
	551, 2, 582, 301, 477, 527, 242, 124, 556, 471,
	-632, 468, 469, 378, 410, 455, 215, 571, -296, 2,
	465, -292, 301, 2, 634, 98, 77, 460, 481, -153,
	2, 291, 547, -154, -155, -152, 539, -547, 471, 455,
	324, -292, 634, 634, 634, 29, -305, 2, -292, -305,
	2, -211, 2, -305, -655, -218, -217, -216, 22, 437,
	183, 273, 196, 233, 329, 407, 194, 50, -211, 2,
	527, 242, 471, 124, 523, 634, 634, 2, 527, 383,
	582, 477, 124, 416, 242, 556, 198, 145, 28, 71,
	48, 533, 610, 471, -632, 607, 608, 301, 131, -619,
	2, -613, 4, -564, -560, -338, -337, 527, 533, 124,
	-331, -322, 623, -330, 634, 634, 634, 634, 2, 261,
	262, 414, 413, 481, 482, 29, 634, 634, 634, 634,
	468, 2, 170, 23, 28, 69, 97, 102, 131, 193,
	198, 369, -651, 380, 412, 480, 525, 529, 536, 551,
	-631, 507, 71, 471, -630, -632, 301, 556, 145, -439,
	124, 291, 210, 564, 532, 530, 562, 137, 249, 567,
	566, 634, 634, -111, 2, 631, 33, 32, -110, -114,
	147, 484, -235, 527, 254, 2, -292, 634, 634, 634,
	2, 261, 262, 468, 469, 29, 634, 634, 196, -613,
	523, 2, 634, 634, 634, 2, 29, 261, 262, 468,
	469, 254, 2, 71, 473, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 2, -200, 481, 507, 222, 49, 48, 77,
	29, 411, 82, 384, 125, 131, 154, 557, 213, 242,
	243, 269, 97, 98, -441, 46, 262, 71, 261, 469,
	-637, 468, -494, 528, 472, 478, 522, 89, 273, 465,
	547, 549, 106, 572, 456, 599, 416, 417, 520, 430,
	292, 163, 197, 4, 124, 324, 455, 483, 277, 276,
	539, 291, 464, 387, 87, 634, -664, 2, 527, -666,
	2, 547, 547, 2, -666, 2, -666, 2, -666, 2,
	-667, 547, 596, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, -243, -245, -244, 634, 634, 634, 634,
	634, 634, 634, -200, 481, 2, 77, 29, 29, -382,
	-384, 561, 252, 156, 370, -242, -244, 2, -593, -545,
	2, -468, -567, -470, 621, 622, 614, 524, 70, -348,
	346, 600, -482, 131, 562, 364, -566, -471, -484, 159,
	380, 460, -403, 8, 9, 5, 6, 7, -301, -472,
	-478, 553, 174, 353, -341, 635, 10, 631, -590, -244,
	-483, 38, 216, 68, -549, -340, -302, -521, 253, -339,
	-322, -587, -588, 4, -560, -561, -550, -524, -532, -528,
	-529, -535, -292, -563, 80, 115, 116, 114, 119, 118,
	294, 293, 120, 117, 483, 571, 69, 37, 226, 227,
	258, 354, 228, 78, -589, 146, -562, 250, 251, 498,
	54, 419, 184, 130, 129, 356, 59, 57, 579, -533,
	126, 539, 540, 541, 542, 201, 202, 61, 171, 172,
	377, 401, 517, 550, 552, 214, 280, 45, 110, 197,
	247, 230, 257, 259, 263, 281, 284, 325, 343, 348,
	374, 376, 454, 490, -670, 580, 512, 72, 73, 189,
	-595, 422, -596, -316, -595, 634, 634, 636, 634, -373,
	-375, -377, 2, 29, 143, 631, 2, -499, 2, -500,
	-504, -244, 274, -503, 631, -501, 629, -323, 365, -591,
	461, -587, -588, -301, -322, -340, 4, -560, -562, 633,
	-378, 631, 124, 471, 527, 81, 242, 97, 170, 198,
	-434, 631, -292, 29, 364, 543, 636, -374, 409, -480,
	631, 364, 367, 196, 367, 63, 305, 2, 2, 2,
	2, 2, 226, -292, 527, 123, 2, 272, 2, 2,
	2, 2, 2, 2, 2, -396, 226, 2, -323, 582,
	-396, 226, 2, -396, 226, 2, -440, 2, 91, -306,
	226, 2, -292, -332, 226, 2, -327, -329, -336, 226,
	2, -334, -292, -555, 226, 2, -553, 4, -560, 120,
	483, -468, 2, -140, 2, 63, -292, 582, 2, 486,
	2, 631, -153, 2, 74, 547, 45, 481, -154, 2,
	-454, 2, -455, -288, -289, -290, -511, -291, 260, 408,
	418, 603, 135, 346, 599, -645, 196, 613, 543, -545,
	-545, -545, -404, 633, -213, 56, -305, -656, -655, -656,
	-543, 29, -538, 8, -539, 621, 622, -543, -543, -656,
	-656, 2, 2, 2, 2, 2, 2, -504, 226, -323,
	2, -320, -548, 4, -560, -564, -561, -565, -563, 29,
	32, 33, 34, 36, 38, 39, 40, 42, 60, 68,
	69, 75, 79, 81, 91, 97, 106, 114, 115, 117,
	116, 118, 119, 120, 131, 135, 139, 143, 144, 148,
	152, 156, 174, 176, 189, 193, 196, 212, 215, 218,
	233, 246, 252, 254, 274, 278, 285, 293, 294, 346,
	353, 359, 364, 365, 369, 370, 390, 406, 425, 450,
	476, 483, 501, 521, 527, 537, 543, 545, 553, 561,
	562, 571, 573, 581, 590, 591, 592, 593, -566, 80,
	2, -504, 226, 2, -326, 226, -504, -329, 2, -306,
	2, -468, -625, 535, 166, 438, 2, -345, 226, -323,
	-325, -329, -327, 2, 2, 2, 2, -468, 2, -557,
	2, -552, 10, -551, 5, 4, -560, -564, -561, -471,
	2, -482, 29, -334, 2, -553, 226, 2, 29, 29,
	582, 409, 254, 543, 636, -395, -337, -338, -544, 4,
	8, -388, -292, 633, -468, 2, -140, -123, 2, 189,
	-468, 226, 2, -140, 226, 2, -468, 226, 2, -140,
	226, 2, -292, 2, -633, 2, -557, 226, 226, -292,
	2, 305, 2, 2, 551, 2, 102, 527, 123, 2,
	442, -652, 463, 555, 2, 2, 2, 2, 2, 2,
	2, 527, -311, 2, -292, 189, -334, 226, -335, 2,
	477, -665, 422, -553, 226, 2, 582, -327, 226, 2,
	-327, 242, 256, -306, 226, 2, 532, 530, 532, 530,
	196, 2, 254, 2, 254, 2, -505, 2, -506, -500,
	-507, 629, 365, -515, 2, -514, -551, 578, -111, 631,
	-111, 631, 481, 631, -557, -323, -323, -468, 2, -140,
	-123, 2, -468, 2, -140, 2, -292, 2, -137, -557,
	-136, 631, 196, 572, -292, 2, -468, 2, -140, -123,
	2, -468, 2, -140, 2, -235, 189, 2, 124, 527,
	-200, 2, 189, 573, 2, 8, 2, 233, -557, 472,
	417, 181, 2, 486, 2, 487, 77, -441, 599, 77,
	196, 2, 196, 2, -424, 2, 593, 409, 196, 2,
	2, -618, 2, 364, 196, 2, 196, 2, 196, 2,
	196, 2, 196, 2, -199, 482, 548, 526, 413, 262,
	2, -140, 590, -123, 262, 261, -468, 590, 2, -638,
	189, 469, -468, 2, 546, 271, 164, 196, -424, 2,
	196, 2, 196, 2, 5, 2, 43, 414, 508, 2,
	260, 408, 508, 2, 506, 2, -323, 527, 582, 477,
	124, 29, 2, 468, 2, 2, 92, 93, 196, 2,
	196, 2, 211, 196, 2, 196, 527, -405, 633, 599,
	2, -416, -504, -453, -454, -453, 543, -382, -384, -200,
	486, 2, -249, -414, -251, 189, -444, -445, -252, 285,
	176, 359, -253, -423, 29, 143, -423, -423, 63, 632,
	632, 11, 12, 79, 43, 621, 622, 623, 624, 187,
	625, 626, 619, 620, 618, 611, 612, 616, 266, 267,
	99, 615, 613, 90, 299, 462, 177, 178, 179, 180,
	439, 240, 35, 241, 14, 15, 16, -348, 34, 369,
	284, 600, 230, 490, 614, 17, 18, 19, 257, 259,
	348, 53, 233, -300, 380, -347, 524, 70, -468, -468,
	-468, -468, -468, -468, -468, -468, 376, 631, -410, -463,
	629, -244, 631, 631, 631, 631, -544, -244, -468, -482,
	632, -401, 631, -244, -482, -477, 631, 460, 629, 631,
	-485, -468, 5, 5, 5, 631, 633, -598, 594, 189,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 403, -526, 631, -525,
	631, -525, -525, 583, -523, 631, 602, 595, 631, -523,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 583, 533, 636, -595, -378, 631, -406,
	-509, -468, 623, -406, -406, 364, -398, -468, 110, -427,
	263, 325, 197, 281, 454, 247, -465, 635, -465, -493,
	602, -244, -501, -322, -244, -503, 631, -499, -493, -112,
	-544, -95, -108, -117, -140, -156, -204, -205, 623, -323,
	631, 196, 631, 633, -548, 196, -388, -306, -333, -292,
	-323, -339, -340, -345, -317, -292, 2, 2, 142, -398,
	-613, 556, 471, 29, 477, -555, -295, 39, -479, -518,
	-519, -569, 635, -568, -521, -531, -527, -530, 393, 397,
	-550, 57, 579, -533, 253, 4, -560, -562, 250, 251,
	498, 54, 419, 184, 130, 129, 356, 59, 539, 540,
	541, 542, 201, 202, 61, 580, 512, 72, 73, -613,
	556, 471, 29, 477, 189, -555, 189, -555, 2, 2,
	159, 2, 2, 2, -292, -270, 636, 67, 447, 159,
	-396, 226, -270, 159, -270, 159, -346, 226, -345, -270,
	159, -270, 636, 159, -270, 636, 159, 633, 636, 159,
	-555, 2, -440, -547, -398, 39, -454, 2, 131, 4,
	5, -668, 636, 283, -351, 298, 345, 221, 365, 597,
	357, 135, -556, 5, 4, -478, -490, 131, 291, 253,
	-538, -540, 9, -541, 621, 622, -546, -545, 113, 633,
	-548, -214, 248, 41, -305, -305, -656, -656, 8, 8,
	-656, -656, -305, -305, -267, 440, 484, 379, -266, 25,
	30, 147, 244, 330, 576, 165, -363, 245, 445, -360,
	383, 159, 502, 565, -625, -628, 467, 535, 166, 438,
	94, 357, 484, 379, 440, 159, -420, -422, 39, 122,
	330, 378, 64, 236, 303, 304, 505, 587, 159, 484,
	379, 440, 379, -15, -281, 25, 147, -283, -278, 484,
	30, -628, 103, 440, 606, 445, 389, 519, 406, -628,
	-625, 279, -627, 589, 344, -269, 502, 565, -625, -628,
	467, 440, -268, -365, -360, 383, 159, 635, 25, 147,
	440, 484, 379, -648, -649, 30, -262, -261, 25, 147,
	484, 568, -265, 233, -264, 25, -149, -129, -148, 445,
	484, -149, 2, 440, 379, -622, -313, -592, 233, 593,
	159, -313, -313, -504, 226, -642, 189, 2, -635, -136,
	275, 5, 10, -557, -136, -395, 636, 636, -548, 623,
	469, 468, 159, 159, 159, 159, 262, 189, 346, 346,
	593, 2, 2, 2, 2, 2, 198, -630, -653, 2,
	2, -323, 226, -380, 364, -616, -617, 527, -323, 346,
	45, -326, 226, 2, -329, 582, -622, 346, -328, 226,
	-323, 39, 631, 346, 2, -440, 2, 242, -592, 346,
	-505, -342, -323, -500, -342, 484, -316, 39, -465, -323,
	632, 636, -515, -515, -557, -223, 593, 196, 631, -235,
	593, 593, 262, -512, 636, -511, 233, -558, -557, -137,
	-557, 443, 196, 262, -557, -616, -306, 2, -323, 2,
	527, 264, -557, -223, 233, -557, -557, -557, -547, 29,
	487, 2, -199, 482, 548, 93, 487, 2, -323, 527,
	124, 242, 83, -642, 189, 2, -292, -620, 189, -614,
	455, 471, 556, -613, -323, 124, -323, 124, -323, 124,
	-323, -323, 2, 2, 2, 2, 2, 88, 2, -140,
	-468, 2, 88, 2, 48, 503, -638, 189, 2, 546,
	2, 546, 2, -292, -292, -292, 359, 507, 283, 593,
	-323, -323, -323, -324, -329, 472, 528, 557, 469, -468,
	2, -657, 2, 196, 189, 2, 527, 242, 527, 242,
	124, 196, 77, 124, 29, 527, 466, 633, 4, -270,
	636, -296, -249, -414, -547, -415, -414, -250, -249, -252,
	189, 418, 566, 330, 488, 268, -445, -444, 29, -468,
	-449, 183, 329, -468, -447, -470, 621, 622, -539, -541,
	-397, 357, -243, -243, -243, -385, -495, -468, 406, 242,
	-520, -518, -518, -321, -548, 539, -468, -468, -468, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, -468, 284, 230, 490, 53, 233, -468, 543, -468,
	-468, -468, -468, 322, 346, 353, 553, 174, 563, 143,
	357, -671, 521, 42, -475, -244, -402, 631, -489, 36,
	501, 29, -482, 631, 2, -463, -468, -464, -349, -347,
	-292, 621, 622, 623, 624, 625, 626, 611, 612, 613,
	14, 15, 16, 616, 620, 618, 619, 187, 99, 615,
	299, 462, 90, 177, 178, 179, 180, 266, 267, 17,
	18, 19, 35, 614, -399, -398, -398, 632, 581, 29,
	143, 623, 2, 632, 636, 39, 632, -468, -399, -481,
	-477, -398, -488, -487, 590, -435, -436, 598, 308, 127,
	224, 306, -437, 475, -542, 8, -548, 623, -599, 182,
	215, 631, 632, 2, 632, 2, 632, -468, 2, 632,
	-468, 2, 632, -468, 2, 632, -468, 2, 632, 2,
	632, 2, -468, -468, -468, -468, -468, -468, -468, -398,
	8, -542, -542, 539, 539, -542, -542, -542, -534, 393,
	394, 395, 396, 286, 287, 288, 289, 397, 398, 399,
	400, 314, 315, 316, 317, 310, 311, 312, 313, 318,
	319, 320, 321, 206, 207, 208, 209, 202, 203, 204,
	205, -534, -429, 2, -536, -398, 4, 598, 308, 127,
	224, 306, 475, 5, -429, 2, -430, 2, -468, -398,
	-431, -469, -470, 621, 622, 614, -348, -432, 2, -468,
	-399, -468, 60, 278, 545, -433, -468, 196, -398, -398,
	2, -398, 2, -471, 2, -596, 39, -398, -391, 636,
	196, 39, 4, -391, -391, 631, 632, 636, -428, 219,
	302, 297, 256, -428, -499, -427, 263, -425, 374, -425,
	-425, -493, -307, 629, 637, -548, -493, -492, -491, 39,
	-316, 371, -493, -493, 633, 632, -492, 630, -611, 631,
	634, 634, 634, 634, 634, -323, 631, -398, -548, 633,
	509, 2, 632, 257, 257, 257, 257, 257, 364, 461,
	632, 543, -615, -332, -336, 528, 2, 593, -110, 366,
	632, 636, -390, 38, 629, 633, -542, 2, 2, -537,
	583, 631, 631, -436, 631, 196, -615, -336, 528, 2,
	-621, -389, -389, 543, -292, 2, -323, -396, -270, 159,
	-396, -396, -270, 636, 159, -306, -327, -332, -334, -336,
	-292, -553, -555, -270, -328, -645, 632, 547, -455, -350,
	418, 500, 441, 479, 523, 9, 9, 636, -548, -215,
	470, 330, -305, -305, -305, -305, 636, -646, 97, 543,
	81, 631, 471, -285, 292, 543, -459, 226, 81, -570,
	97, -309, -571, -292, 75, 562, 406, 193, 157, -646,
	97, 406, -646, 97, 2, 244, 97, 484, 507, 631,
	29, 63, -504, 43, 43, 29, -626, -627, 279, 196,
	599, 527, 242, 471, 543, 543, -504, -422, -518, 122,
	303, 304, 63, -543, -543, 63, -543, -543, -543, 593,
	-326, -504, 471, 543, 543, 543, 428, 518, 428, 518,
	-278, -154, 518, 543, 543, 29, -200, 448, 131, -669,
	613, 428, 279, -627, 543, 196, 636, 43, 43, 29,
	-626, 196, 543, -345, -307, 577, 44, 577, 44, 577,
	543, 44, 471, 543, 636, 44, -261, -616, -616, -222,
	-221, -292, 5, -388, -264, -557, -263, 328, 77, 543,
	543, -15, 484, -623, -297, 109, 336, 296, 337, 101,
	333, 100, 332, 107, 334, 108, 335, 584, 349, 585,
	350, 66, 331, 307, 338, 504, 339, 586, 351, -298,
	-299, 150, 385, 575, 124, -553, -15, -15, 484, 379,
	440, 159, -643, 233, 29, -632, 233, -512, 233, -512,
	-337, -292, 633, -140, -468, -468, -140, -468, -140, 48,
	159, 159, 2, 2, -665, 272, 631, -354, 346, 196,
	-388, -513, 636, 254, -323, 175, 159, -553, -421, -420,
	346, -328, 226, 2, 159, -378, 346, 153, 631, 416,
	2, 159, -308, 226, -293, -292, -440, -272, 531, 159,
	-418, 573, -450, -140, 631, 131, 39, -450, -407, -408,
	-510, -409, -309, 631, -316, -465, -111, -514, 632, 632,
	632, -222, 368, -235, -379, -310, -309, 123, 420, 420,
	-229, 593, -136, -137, 632, 636, -512, 233, 510, -137,
	-557, -223, -223, -512, -512, -323, 189, -557, -223, 233,
	-223, 233, -223, 233, 2, 2, 2, 2, -424, -323,
	-306, -345, -323, 29, 633, -555, -555, -336, -332, -424,
	-306, -424, -306, -424, -306, -424, -424, -140, -468, 507,
	2, 481, 189, 189, 633, -424, 8, -381, 450, 5,
	2, 416, 124, 527, 383, 242, -323, -345, -323, -345,
	-306, 124, -306, 125, -323, 4, -504, -415, -250, 365,
	268, 488, -447, -448, -470, 460, 461, -448, 460, 461,
	8, 9, 8, 9, -254, 492, 352, -396, 636, -259,
	40, 139, 268, -323, 599, 155, -468, -468, 543, -671,
	521, -475, 155, -468, 322, 353, 553, 174, 563, 143,
	357, 196, 631, -469, -469, 632, -400, -468, -468, 630,
	639, 632, 633, 632, -384, 636, -382, -468, -398, -398,
	632, 633, -398, -388, 630, 630, 636, 632, -486, -487,
	148, -468, 543, 543, 543, 543, 631, 632, 633, -604,
	375, 631, 631, -468, 632, 632, 632, 632, 39, 636,
	636, 636, 632, 636, 636, 636, 632, 632, 632, 636,
	632, 599, 599, 632, 632, 632, 632, 636, 632, 636,
	632, 196, 632, 632, -438, 390, 632, 11, 12, 621,
	622, 623, 624, 187, 625, 626, 619, 620, 618, 611,
	612, 613, 90, 299, 462, 14, 15, 16, -348, 257,
	233, -469, -469, -469, -469, 632, -473, -474, 196, 189,
	39, -433, -433, -433, 632, 196, -398, 632, 632, 631,
	-597, 301, 346, 632, -462, -461, 591, -509, -392, 2,
	-499, -318, -548, -462, -462, -398, -468, 263, 263, -426,
	573, 364, -428, -499, -492, -544, -467, -466, 191, 40,
	139, 340, 341, 342, 229, 192, -492, -316, -378, -492,
	-492, -548, -493, -493, -491, 632, -612, -544, 632, -393,
	-502, -591, -384, 633, -548, -232, -592, -201, 5, 353,
	-201, -201, -201, -201, -323, -555, 543, 543, 233, 26,
	391, -518, 629, 630, 8, -548, 631, -542, -542, -542,
	-555, 196, 196, 233, 364, 196, -553, 2, -270, -396,
	-270, -270, -345, -346, -270, -270, -270, -419, 593, -545,
	-454, 560, 86, 418, 539, -545, 121, 470, -266, 440,
	484, -309, -309, -323, -239, -238, -236, -292, 5, -333,
	210, 429, -553, 346, -459, 226, -271, 346, 226, -317,
	-518, 631, -442, 595, 268, 268, 573, -309, -317, 268,
	226, -309, 226, -317, 2, -317, -624, 418, 358, -468,
	-237, -236, 63, -361, 290, 416, 347, -267, 440, 484,
	379, -140, -140, -140, 631, -645, 573, 142, -323, -345,
	-323, -333, -553, -328, 484, 379, 440, 343, -339, -543,
	-543, -420, 484, 379, 440, -333, -553, -326, -553, -277,
	226, -292, 428, -277, 226, 428, 428, 471, -306, 428,
	599, 47, -669, 543, 196, -468, -468, -268, -140, -140,
	-140, 631, -307, -269, 440, 5, 226, -309, 5, -309,
	226, 5, -292, -309, -333, -553, -649, 25, 147, -309,
	-223, 636, 613, 613, -265, 613, -333, -553, -297, 385,
	-557, 353, 569, -306, -622, -313, 471, 543, 543, -504,
	-639, -640, 212, 453, 471, 456, -555, -136, -226, 593,
	-136, -220, 237, 623, -619, -557, -292, 582, -292, -352,
	-355, -353, -309, -460, -459, -574, -575, -570, 284, 242,
	562, 256, 175, 97, -240, -241, 595, 593, 159, -343,
	-323, 629, -223, -617, -557, 175, -314, -292, -334, -335,
	159, -378, 346, -553, 39, 159, 631, 2, 2, -327,
	364, 346, -308, 226, -273, 149, -669, -306, -462, -392,
	-417, -452, 450, 364, -379, 578, -316, -417, -394, 636,
	196, 613, 633, -379, -508, 623, -111, -111, -223, 631,
	631, -557, 632, 636, 633, 631, 613, 613, -231, 368,
	-230, 151, 270, 255, 494, 495, 496, 497, 141, 493,
	128, 327, 238, 533, -512, -557, -229, -137, 196, -512,
	233, 196, -71, 593, 527, -223, -557, -557, -557, 635,
	456, -292, -424, -424, -424, 481, 481, -292, 189, -388,
	-319, -548, -306, -323, -320, -345, 189, 189, -306, 566,
	-448, 365, 295, -495, -260, 601, -323, 635, -468, -468,
	155, 155, -468, -469, -469, -468, 155, 196, 631, -468,
	-479, 34, 34, 632, 636, -464, -468, -347, 632, 581,
	-384, -384, 632, 623, -548, 635, 632, -477, 152, -468,
	537, 308, 224, 306, -437, 306, -437, -437, -542, 5,
	-548, 623, -605, -312, 631, -292, 591, -383, 370, 632,
	-520, -518, -468, -468, -468, -468, -468, -542, -523, -523,
	-538, -538, -468, -473, -468, -520, -518, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, 143, 346, 357,
	-469, -474, -473, -468, -468, -518, 632, 632, 632, -398,
	-110, 631, 301, -411, 215, -468, -512, 636, -411, -411,
	632, -499, -499, 631, -468, 263, 630, 636, 638, 613,
	613, -378, 633, -491, -492, 630, 632, 636, 632, 636,
	-451, 39, 632, -548, -462, -234, -233, 140, 56, 111,
	138, 353, 361, 195, 220, 415, 155, 190, 149, 257,
	-641, 593, -555, -555, 471, 367, 5, 8, 629, 630,
	633, -542, 632, 632, 632, -555, -555, 471, -613, 556,
	471, 29, -555, -270, -270, 123, 330, -468, -212, 593,
	595, 543, 543, 632, 636, 613, 63, 233, 159, 346,
	575, 346, -571, 157, -576, -468, 631, 242, 631, 631,
	2, -256, -257, -258, 147, 484, 25, -647, 2, 573,
	159, -270, 159, -270, 597, 632, 636, -361, 631, 631,
	543, 471, -285, 543, 593, -398, -468, -224, 131, -547,
	-628, 635, -628, 635, 471, 543, 543, 471, 543, 543,
	346, -292, 159, -292, -292, 593, 173, 173, 599, -277,
	-468, -468, 189, 543, 593, -398, 543, -522, 51, 27,
	346, -327, -270, 159, 543, 543, 556, 484, -221, -557,
	-557, -136, -557, -557, 353, -15, -333, -553, -328, 484,
	379, 440, -621, -621, 212, -336, -643, -512, -228, 368,
	-227, 151, 452, 141, 270, 238, -512, -226, 196, 254,
	593, -328, 2, 632, 632, 636, 636, -577, -271, -323,
	-308, 242, 242, -315, -293, 39, 361, 361, 631, -323,
	-91, 593, -511, -544, -314, 45, -326, 39, 159, -622,
	-140, -328, -516, -517, 5, 39, -323, 159, 364, 346,
	-274, 277, -669, -552, -592, -384, -417, -406, 347, 95,
	632, -462, -408, -392, -468, 2, 632, -222, -557, -223,
	-235, -310, 2, -558, -557, -557, 636, 631, 613, 613,
	613, 613, 613, 613, 613, -229, -512, -136, -229, -137,
	-140, 368, -323, -223, -223, -223, 623, -424, 5, -367,
	-366, 383, 357, -367, 460, 460, 365, 183, 273, -259,
	-307, -468, -468, 155, 34, 34, -468, -468, -479, 632,
	-468, -468, -398, 630, 5, -468, 632, 632, 8, -468,
	632, 633, -606, -292, -468, 632, 63, 632, 632, 636,
	636, 632, 632, 632, 632, 632, 632, 632, -474, 196,
	143, 357, 631, 632, 632, -110, -476, 218, 63, -499,
	-476, -476, -426, -388, -499, -466, -307, 629, -307, 629,
	-548, -544, -502, 631, 633, -233, 613, -557, -557, 2,
	2, 2, 5, 5, 415, 346, 353, 5, -201, 212,
	-641, -641, 593, -336, 630, 2, 629, -548, 632, -336,
	196, -615, -336, 528, 123, 189, 223, 223, -309, -309,
	-238, -545, 527, 460, -277, 406, -459, 159, 159, -578,
	97, -580, 79, 175, 106, 346, 353, 562, 406, 75,
	131, 364, 425, -659, -660, -661, 39, 604, 605, 632,
	-386, -496, -591, 631, -292, -386, -388, 346, 515, 131,
	364, 346, 131, 364, 588, 123, 2, 556, 82, -309,
	-317, -236, -388, -388, -323, -333, -553, 167, 632, 636,
	613, 2, 623, 623, -333, -553, -328, -333, -553, -326,
	159, 578, -277, 578, 381, 173, 543, -140, -468, 167,
	632, -307, 5, 5, 159, -304, 79, -309, 5, -309,
	-327, 123, 593, 471, 543, 543, 364, 364, 367, -639,
	-640, -226, 636, 631, 613, 613, 613, -226, -558, -136,
	2, -378, -368, 244, -309, -575, -572, -573, 406, -460,
	-579, -581, 175, 406, -356, 631, -308, -293, 631, -140,
	2, -239, 631, -354, 368, 630, -553, -421, -140, -328,
	-376, 593, -378, 632, 636, 153, -443, 573, -307, -323,
	159, -275, 276, -669, -552, -272, -446, -444, 144, 631,
	364, -140, -384, 613, 632, 632, 123, 632, -230, -231,
	-557, -136, -557, -557, -557, -136, -557, -229, -512, -512,
	-72, -73, 242, 97, 388, -320, 527, 242, 631, 631,
	-259, -468, -468, -468, 632, -384, -548, 623, -600, 383,
	632, -495, -468, -468, -469, 196, 631, -479, 632, -601,
	592, -468, -412, -413, -468, 458, 112, 216, -601, -601,
	632, -544, -544, 2, -557, 2, 2, 353, 2, 2,
	367, 2, 543, 629, 2, 196, -555, 196, 196, 233,
	-140, 233, 39, 428, -459, -317, -317, -321, -314, 175,
	226, 353, 588, -442, 268, 631, -469, 566, -323, 631,
	2, 225, 225, 31, 63, -662, 135, 246, 632, 636,
	-497, -303, -292, -468, -497, 632, 632, 353, 566, 353,
	588, -468, 566, -518, 631, -270, -270, 632, 632, -468,
	543, -547, 104, -545, 2, -628, -277, -388, -388, -306,
	-468, 189, -468, 543, 5, -270, -321, -270, -270, -304,
	556, 363, -333, -553, -328, -644, 528, 478, 557, 472,
	199, 459, -644, 189, -227, -228, -557, -136, -136, -226,
	39, -362, -363, 2, -577, 268, -314, 268, 235, 158,
	-386, 631, 631, -388, -658, 593, 632, -352, -240, -92,
	-93, 544, -511, -378, 330, 123, 39, 5, 631, 631,
	-292, 364, 631, -307, -287, 96, -669, -552, -273, -417,
	347, -388, 97, -446, -475, -223, 631, -223, 632, -229,
	636, 29, 631, 29, 631, -323, -345, -398, -398, 632,
	-384, 63, 636, 632, 632, -469, -479, 632, -602, -603,
	-312, 636, 631, 631, 485, 630, 630, 2, -555, 2,
	-555, -555, -555, 471, -277, 406, -292, -571, -580, -314,
	346, -241, 573, 593, -468, -469, -294, 631, -468, 631,
	631, 39, 131, 246, 136, 231, -458, -663, 105, 516,
	234, -496, -259, 632, -457, 573, 425, -469, -304, -386,
	631, 631, 631, 613, 196, -140, 631, -522, -270, -327,
	613, 543, 2, 2, 196, -621, 632, -634, 423, -140,
	-240, 631, -241, -357, 84, 98, 132, 225, 200, 243,
	507, 513, 29, -357, 632, -386, -386, 632, -358, 364,
	123, 330, 632, 39, -93, 9, 39, 123, -140, -516,
	-386, -323, -386, 364, -279, -278, 285, -552, -274, 632,
	-317, -417, -558, -73, -388, -388, 632, 632, -607, 416,
	461, 217, -398, -385, 632, 636, 39, -413, 2, 2,
	2, -641, -336, 428, -271, 159, 219, 632, -582, 300,
	-292, 632, -421, -421, 39, 136, 231, -364, -360, 631,
	-260, -497, -241, 219, -323, -629, 573, 632, -370, -369,
	-366, -372, -371, -366, -398, -545, 104, 381, -398, -304,
	-136, -555, -555, 364, -636, 197, -635, 5, 10, -358,
	-387, -498, -309, -457, 632, 632, 85, 123, -368, -140,
	-140, 2, -376, 632, 632, -443, 632, -323, -276, -559,
	428, 430, -669, -275, -462, 144, 632, 632, 632, 632,
	-608, -609, 53, 559, 113, -468, -608, -608, -603, -605,
	196, 175, -456, 602, -583, -586, -585, 609, 491, 197,
	382, 632, 515, 587, 632, 632, -662, -388, -456, -378,
	-468, -457, 632, 636, 578, 632, 636, 578, 632, 196,
	632, -270, -641, -270, -644, -225, 593, 48, -286, -285,
	632, 636, -458, -457, -364, 405, 137, 147, -362, -658,
	-457, 631, -458, 631, -284, -283, -669, -538, -287, 144,
	347, 566, -223, -610, 157, -609, 402, 188, 460, 402,
	188, -610, -610, -555, -314, -241, 58, -585, 609, -586,
	609, 566, 137, -462, 632, -582, -241, -369, 233, -371,
	196, 381, 196, 468, -635, 31, -241, -498, -364, -458,
	-241, 461, 461, 2, -240, -358, -458, -386, -364, -386,
	-280, -281, -282, -388, -279, 347, 566, 484, 113, 215,
	538, 330, 34, 613, -584, 330, 447, 67, 484, -584,
	-583, 631, 631, -555, 368, -241, -364, -462, 2, -358,
	-364, 632, -241, 632, -554, 379, -276, 484, -407, 460,
	372, -609, -468, 24, 353, 131, -662, -398, -398, -270,
	-222, 631, -462, -241, -286, -241, -457, -462, -458, -669,
	-284, -407, -462, 632, 632, -222, -462, -462, -458, -364,
	-553, -280, -462, -359, -360, 543, 632, -364, -241, 631,
	-241, -462, -398, -462, 632, -359,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 588, 589, 591, 592,
	593, 595, 596, 598, 600, 602, 603, 604, 606, 607,
	609, 610, 611, 612, 613, 615, 617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 704, 706, 0, 1546, 1548, 1550, 1552, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	372, 374, 376, 378, 0, 410, 412, 413, 415, 417,
	418, 420, -2, 0, 521, 522, 524, 526, -2, 0,
	1131, 1133, 1135, 0, 692, 694, 0, 1138, 1140, 1142,
	0, 0, 716, 717, 0, 1660, -2, 708, 710, 712,
	714, 791, 793, 795, 797, 799, 801, 803, 805, 807,
	809, 810, 812, 814, 816, 818, 820, 821, 823, 825,
	827, 828, 830, 831, 833, 835, 837, 839, 841, 843,
	845, 847, 849, 851, 853, 855, 857, 859, -2, 862,
	863, 864, 866, -2, -2, 0, -2, -2, -2, 1564,
	49, 51, 53, 55, 57, 59, 61, 63, 65, 67,
	69, 71, 471, 473, 475, 477, 479, 482, 484, 486,
	1718, 528, 530, 532, 534, 536, 538, 540, 0, 0,
	-2, 1732, 0, 0, 951, 73, 74, 75, 76, 77,
	78, 79, 80, 81, 82, 127, 128, 129, 130, 131,
	132, 133, 86, 87, 88, 90, 91, 92, 93, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 124, 125, 84, 0, 0, 1691, 1693, 1695,
	1697, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 33, 35, 37, 39,
	590, 594, 597, 599, 601, 605, 608, 614, 616, 618,
	573, 574, 577, 2430, 2448, 2449, 2450, 2453, 2454, 2455,
	2456, 2457, 2458, 2942, 3023, 3024, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563,
	2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573,
	2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583,
	2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593,
	2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613,
	2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633,
	2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763,
	2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773,
	2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
	2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793,
	2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
	2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813,
	2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833,
	2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843,
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873,
	2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883,
	2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893,
	2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903,
	2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913,
	2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 575, 576,
	1325, 0, 657, 655, 2415, 658, 2727, 660, 662, 515,
	516, 517, 518, 519, 520, 0, 685, 671, 1730, 686,
	688, 689, 690, 691, 652, 650, 0, 690, 685, 2485,
	683, 1544, 1545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 527, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 450, 1384, 1385, 1386, 1529, 1530,
	2779, 1571, 0, 259, 705, -2, -2, 2907, -2, 745,
	746, -2, -2, 760, 764, 755, 2911, 0, 2782, 2765,
	-2, 767, 1547, 1549, 1551, 867, 868, 869, 2434, 873,
	871, 883, 884, 887, 0, 904, -2, 0, 2481, 2750,
	-2, -2, 905, 906, -2, -2, -2, -2, 885, 886,
	0, 0, 0, 0, 0, 44, 46, 48, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 269, -2, -2, -2, -2, 0, 0, 2830, 2540,
	2383, 2450, 2386, 2381, 373, 375, 377, 379, 380, 0,
	0, 0, 0, 0, 0, 0, 411, 414, 416, 419,
	-2, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 1205, 1197, 1198, 1451, 0, 0, 0,
	-2, 523, 525, 578, 579, 0, 1719, 1719, 586, 587,
	-2, 0, 0, 0, 0, 334, 324, 1132, 1134, 1136,
	1137, 0, 0, 0, 0, 0, 693, 695, 0, 0,
	2824, 301, 1139, 1141, 1143, 1144, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 709, 711, 713, 715, 792,
	794, 796, 798, 800, 802, 804, 806, 808, 811, 813,
	815, 817, 819, 822, 824, 826, 829, 832, 834, 836,
	838, 840, 842, 844, 846, 848, 850, 852, 854, 856,
	858, 860, 861, 912, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, -2, 0, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 1020,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	1111, 0, 0, 915, 918, 919, 920, 921, 922, 923,
	0, 993, 1018, 1019, 1029, 865, 0, 1365, 1720, 1573,
	1554, 1568, 1573, 1556, 1557, 1558, 1559, 1560, 1565, 1567,
	1561, 1562, 1563, 50, 52, 54, 56, 58, 60, 62,
	64, 66, 68, 70, 72, 472, 474, 476, 478, 480,
	483, 485, 487, -2, 1689, 1690, 529, 531, 533, 535,
	537, 539, 541, 696, 0, 699, 0, 917, 698, -2,
	0, 1724, 1724, 1724, 0, 0, 1690, 1688, 0, 702,
	703, 771, 772, 1997, 0, 0, 0, 0, 0, 0,
	0, 0, 2257, 2085, 0, 773, -2, 2118, 2120, 2882,
	2700, 2907, 2256, 2122, 2123, 2124, 2125, 2126, 0, 2128,
	2129, 2130, 2131, 2132, 2133, 0, 2135, 0, 2140, 2141,
	2142, 0, 2889, 2360, 2444, -2, 0, 0, 2895, 2440,
	0, 2223, 2158, -2, -2, 2467, 2446, 1929, 1930, 1931,
	1932, 1933, -2, -2, 2925, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 0, 2870, 2890, 2891,
	2896, 2898, 2892, 2879, 2183, 2554, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1956,
	1965, -2, -2, -2, -2, -2, -2, -2, 2883, 2884,
	2901, 2904, 2910, 2915, 2916, 2888, 2897, 2924, 2926, 2927,
	2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937,
	2938, 2939, 2940, 2941, 1957, -2, -2, -2, -2, 0,
	1707, 2743, 1710, 1325, 1708, 1692, 1694, 0, 1696, 0,
	0, 0, 1701, 1727, 1725, 0, 1776, 1705, 1706, 1799,
	1799, 1823, 0, 1804, 0, 1823, 1719, 1850, 0, 1810,
	2770, 2159, 2160, 0, 2450, 2445, -2, -2, 2922, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	653, 0, 659, 661, 0, 0, 0, 684, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 454, 455,
	456, 457, 2890, 0, 0, 0, 462, 0, 464, 465,
	466, 467, 468, 469, 470, 229, 2890, 546, 571, 0,
	229, 2890, 549, 229, 2890, 552, 0, 555, 1449, 229,
	2890, 558, 2411, 229, 2890, 561, 563, 2419, 229, 2890,
	567, 2426, 2424, 568, 0, 570, 249, 245, 246, 247,
	248, 1540, 1541, 1542, 1543, 0, 1570, 1450, 707, 0,
	733, 0, 743, 744, 2878, -2, 0, 2791, 748, 749,
	-2, 751, 1574, 1578, 1579, 1580, 1581, 1582, 0, 0,
	0, 0, 1587, 0, 0, 0, 0, 740, 741, 758,
	759, 765, 768, 0, 876, 872, 888, 0, 903, 0,
	904, 904, 2400, 2391, 2392, 0, 0, 904, 904, 0,
	0, 907, 908, 909, 910, 911, 83, 0, 2890, 1850,
	85, 0, 2405, 2475, 2476, 2477, 2478, 2479, 2923, 2943,
	2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953,
	2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963,
	2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973,
	2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983,
	2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993,
	2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003,
	3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013,
	3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 2925,
	89, 0, 2890, 94, 0, 2890, 0, -2, 110, 0,
	126, 0, 153, -2, -2, -2, 134, 0, 2890, 0,
	2380, -2, 0, 241, 325, 326, 327, 0, 634, 0,
	643, 337, 338, 2463, 2464, 2471, 2472, 2473, 2474, 0,
	736, 2257, 0, 0, 1169, -2, 0, 1378, 1380, 1380,
	0, -2, 0, 0, 0, 1121, 2377, 2382, 1122, 1123,
	2401, 1124, 2387, 0, 381, 382, 383, 384, 385, 0,
	386, 2890, 388, 389, 0, 391, 392, 2890, 394, 395,
	0, 397, 0, 399, 0, 281, 285, 2890, 2890, 423,
	426, 0, 428, 429, 0, 431, 0, 0, 0, 435,
	-2, 451, 0, 448, 438, 439, 441, 442, 443, 444,
	445, 0, 491, 489, 2416, 0, -2, 2890, 0, 1166,
	0, 0, 1429, -2, 0, 1371, 0, 1436, 2890, 1432,
	0, -2, 0, 1717, 2890, 1591, 1201, 1202, 1203, 1204,
	1862, 512, 0, 1624, 0, 1626, 0, 1646, 1856, 1799,
	0, 0, 1861, 0, -2, 631, 2433, -2, 581, 0,
	582, 0, -2, 0, 351, 0, 0, 1147, 1149, 1150,
	1152, 1153, 1156, 1157, 1158, 1159, 0, 1161, 1836, 302,
	304, 0, 0, 0, 0, 1146, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 0, 0, 718, 0, 0,
	913, 914, 0, 0, 930, 931, 932, 0, 351, 2783,
	2738, 2576, 942, 0, 945, 948, -2, 0, 0, 0,
	0, 955, 0, 960, 961, 962, 0, -2, 0, 969,
	971, 1130, 973, 0, 0, 975, 0, 979, 0, 982,
	0, 984, 0, 986, -2, -2, -2, 994, 995, -2,
	1000, -2, 0, 1004, -2, 0, 1007, 0, 1010, -2,
	0, 1020, 1016, 1017, 0, 0, 0, 0, 1037, 1038,
	0, 1047, 0, 1050, 1051, 1052, 0, 0, 1057, 1058,
	0, 1060, 1061, 1062, 1064, 1065, 1066, 0, 2859, 2788,
	2540, 0, 1074, -2, 1080, 1082, 0, -2, 0, 1098,
	0, 1102, 0, 0, 1110, 0, 0, 916, 0, 924,
	925, 229, 1854, 1553, -2, 1555, 0, -2, 0, 697,
	0, 701, 1749, 1675, 1672, 0, 1746, 1747, 1676, 0,
	0, 0, 1683, 0, 1722, 1723, 0, 0, 0, 1662,
	1663, 0, 0, 0, 0, 2262, 2263, 2264, 2265, 2278,
	2266, 2267, 2277, 2275, 2276, 2268, 2269, 2274, 2288, 2289,
	2279, 2280, 2270, 2283, 2281, 2282, 2284, 2285, 2286, 2287,
	0, 0, 2293, 0, 2271, 2272, 2273, 2301, 0, 0,
	2302, 0, 2304, 0, 2294, 2290, 2291, 2292, 0, 2064,
	2066, 2368, 0, 0, 0, 2300, 2295, 2296, 2002, 2003,
	2004, 2005, 2006, 2039, 2043, 2044, 0, 0, 2119, 2365,
	2364, 2121, 0, 0, 2316, 0, 2134, -2, 0, 2257,
	2311, 0, 0, 2143, 2144, 2145, 0, 0, 2316, 0,
	0, 2359, 2155, 2156, 1994, 0, 0, 2225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 1942, 0, 1944,
	0, 1945, 1946, 1953, 1966, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 2340, -2, 0,
	0, 0, 0, 1958, 0, 0, 1709, 0, 0, 1780,
	2369, 2373, 2374, 1780, 1780, 0, 0, 2317, 1847, 1847,
	0, 0, 1842, 1842, 1842, 1840, 1823, 0, 1823, 1833,
	0, 1823, 1823, 0, -2, 1804, 0, 0, 1833, 0,
	1817, 619, 621, 623, 625, 626, 627, 629, 1851, 1852,
	0, 0, 0, 0, 2451, 0, 0, 0, 0, 2423,
	0, 0, 2436, 0, 0, 2410, 406, 407, 0, 0,
	0, 2841, 2782, 0, -2, 664, 687, 1719, 0, 2319,
	1877, 1881, 0, 1883, 1884, 1885, 1886, 1887, 0, 0,
	1878, -2, 1954, 1956, 1977, 2468, 2469, 2470, 1937, 1938,
	1939, 1940, 1941, 1949, 1936, 1936, 1936, 1947, 1976, 1968,
	1976, 1972, 1922, 1923, 1924, 1959, 1960, 1961, 1962, 0,
	2841, 2782, 0, -2, 0, 674, 0, 0, 1657, 452,
	0, 459, 460, 461, 0, 542, 0, 227, 228, 0,
	229, 2890, 547, 0, 550, 0, 229, 2890, 2375, 556,
	0, 559, 0, 0, 565, 0, 0, 0, 0, 0,
	229, 1659, 0, 0, 0, 0, -2, 753, 761, 762,
	763, 0, 1576, 0, 1583, 782, 783, 784, 1585, 1586,
	0, 1588, 756, 785, 786, 787, 788, 789, 790, 0,
	2389, 2390, 2395, 2396, 0, 0, 754, 775, 757, 0,
	769, 879, 874, 875, 889, 890, 0, 0, 2393, 2394,
	0, 0, 895, 896, 135, 1526, 0, 0, 182, 0,
	1526, 1526, 0, 0, 0, 0, 210, 0, 0, 1235,
	0, 0, 0, 0, 153, 167, 178, 147, 148, 149,
	0, 0, 0, 0, 0, 0, 95, 1347, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 1363, 0, 0,
	0, 0, 0, 112, 113, 0, 0, 118, 119, 0,
	0, 166, 0, 0, 0, 0, 0, 1621, 0, 157,
	153, 0, 0, 152, 154, 137, 0, 0, 153, 168,
	180, 0, 216, 218, 1232, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 251, 0, 633, 635, 0, 0,
	0, 0, 641, 0, 644, 0, 734, 738, 739, 0,
	0, 735, 737, 0, 0, 1372, 0, 0, 0, 1716,
	0, 0, 0, 0, 2890, 1524, 0, 1509, 0, 1836,
	2629, -2, -2, 302, 1836, 1120, 0, 0, 2451, 2385,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 427, 430, 432, 433, 434, 0, 1428, 0, 440,
	481, 1294, 2890, 0, 0, 510, 503, 0, 506, 0,
	0, 1346, 2890, 1344, 2420, 0, 1369, 0, 1325, 2890,
	2418, 0, 0, 0, 1437, 2460, 1446, 1450, 1609, 0,
	514, 0, 1627, 1629, 0, 0, 1857, 0, 1859, 1799,
	1719, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 1160, 308, 0, 1835, 0, 0, 339, 1836,
	302, 2756, 0, 1145, 351, 351, 1836, 720, 1836, 722,
	0, 0, 933, 934, 0, 351, 351, 351, 943, 944,
	946, 947, -2, -2, -2, -2, 949, 950, 1044, 0,
	0, 0, 1043, 963, 0, 965, 968, 972, 0, 1114,
	2765, 2782, 2841, 1128, 1044, 2540, 1044, 2540, 1044, 2540,
	1044, 1044, 988, 1032, 1040, 999, 1006, 0, 1001, 1005,
	1008, 1011, 0, 1013, 1021, 0, -2, 0, 1024, 0,
	1026, 0, 1028, 1044, 1045, 1048, 0, 1056, 1059, 0,
	1067, 1068, 1069, 1070, 2431, 1071, 1072, 1073, -2, 1077,
	1078, 0, 1089, 1094, 1095, 1091, 0, 0, 0, 0,
	0, 0, 1105, 1106, 0, 0, 1113, 0, 926, 1364,
	0, 1566, 1749, 1675, 700, 1666, 1748, 1667, 1674, 1677,
	0, 0, 1679, 0, 1681, 0, 1744, 1745, 1752, 1753,
	0, 1763, 1764, 1756, 0, -2, 0, 0, 1759, 1760,
	1685, 0, 1702, 1703, 1704, 1733, 1736, 1465, 0, 3023,
	1998, 1872, 1999, 2000, 2404, 0, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, -2, -2, -2, -2,
	-2, -2, -2, -2, 2025, 2026, 2027, 2028, 2029, 2030,
	2031, 2032, 2033, 2034, 2035, -2, -2, -2, 2040, 2041,
	2042, -2, 2303, 2305, 0, 2368, 0, -2, 0, -2,
	-2, -2, -2, 2061, 0, 2063, 2068, 2070, 2072, 0,
	0, 0, 0, 2367, 2082, 2351, 2352, 0, 0, 2259,
	2260, 2261, 2067, 0, 2086, 2366, 2363, 0, 0, 2297,
	0, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 0, 2315, 1732, 2147, 0, 0,
	0, 0, 2154, 2139, 2313, 0, 2312, 0, 0, 0,
	2323, 0, 2358, 2354, 0, 2402, 1993, 1980, 1981, 1982,
	1983, 1984, 1985, 1995, 0, 2399, 2437, 2443, 2233, 0,
	0, 0, 2184, 2185, 2186, 2187, 2188, 0, 2190, 2191,
	0, 2193, 2194, 0, 2196, 2197, 0, 2199, 2200, 2201,
	2202, 2203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1890,
	1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910,
	1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920,
	1921, 0, 0, 2205, 0, 2326, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2207, 0, 2209, 2317, 2337,
	0, 0, 2087, 0, 0, 0, 0, 0, 2212, 2317,
	2345, 0, 0, 0, 0, 0, 2317, 0, 2350, 0,
	2219, 0, 2221, 952, 953, 1711, 0, 0, 1867, 0,
	0, 0, 2372, 1867, 1867, 0, 1775, 0, 0, 1843,
	1844, 1845, 1846, 0, 0, 1847, 0, 1837, 1841, 1838,
	1839, 1833, 1796, 0, 0, 2406, 1833, 1802, 1832, 0,
	1325, 1822, 1833, 1833, 0, -2, 1806, 1823, 0, 0,
	620, 622, 624, 628, 630, 0, 0, 1732, -2, 0,
	-2, 353, 1324, 0, 0, 0, 0, 0, 0, 654,
	656, 0, 0, 562, 0, 0, 670, 0, 648, 0,
	651, 0, 1868, 1871, 0, 0, 1882, 1888, 1889, 0,
	-2, 0, 0, 1978, 0, 0, 0, 0, 0, 682,
	0, 685, 0, 0, 0, 463, 572, 229, 544, 0,
	229, 229, 553, 0, 0, 229, 564, 229, 2427, 229,
	2425, 250, 569, 1658, 262, 0, 742, 0, 1575, 1584,
	0, 779, 0, 781, 0, 2397, 2398, 0, 770, 0,
	877, 0, 891, 892, 893, 894, 0, 0, 0, 0,
	1525, 0, 0, 1472, 0, 0, 186, 2890, 0, 231,
	0, 0, 1287, 2412, 0, 1277, 0, 0, 2562, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 150, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 1348, 1349, 1351,
	1358, 1360, 0, 1354, 1355, 0, 1357, 1359, 1361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 1381, 0, 0, 0, 1382, 1383, 1597, 1598, 0,
	1620, 1621, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 2379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 351, 638, 639,
	347, 344, 346, 640, 645, 0, 646, 0, 0, 0,
	0, 1374, 0, 1424, 1422, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 0, 0, 0, 0, -2, 1376, 1377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 342,
	2378, 2388, 0, 1154, 1155, 387, 390, 393, 396, 268,
	0, 0, 425, 436, 0, 0, 1207, 1179, 0, 0,
	490, 351, 0, 0, 505, 0, 2429, 1164, 1342, 1345,
	0, 1325, 2890, 1392, 0, 0, 0, 0, 0, 0,
	1435, 0, 0, 2890, 2407, 2459, 2460, 1611, 1621, 0,
	1867, 0, 1644, 1630, 0, 0, 0, 1644, 1648, 1649,
	1651, 1652, 0, 0, 1858, 1864, 580, 632, 1719, 1719,
	351, 349, 2703, 0, 0, 1633, 1635, 0, 0, 0,
	294, 0, 305, 1836, 303, 0, 308, 0, 0, 1836,
	302, 0, 502, 719, 724, 928, 0, 351, 936, 0,
	938, 0, 940, 0, 990, 1034, 1042, 1093, 954, 956,
	957, 958, 0, 0, 0, 1129, 1125, 1126, 1127, 974,
	1044, 977, 1044, 980, 1044, 983, 985, 1003, 1009, 1022,
	1015, 1023, 0, 0, 0, 1036, 0, 1054, 0, 1063,
	1076, 0, 0, 0, 0, 0, 0, 0, 1099, 1100,
	1101, 1103, 1108, 1107, 1112, 927, 1855, 1670, 1671, 1673,
	0, 1682, 0, 0, 1758, -2, -2, 1757, 1761, 1762,
	-2, -2, -2, -2, 1678, 0, 1687, 1684, 0, 1743,
	1463, 1464, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 2083, 0, -2, 2062, 2065, 2069, 2071, 2073, 0,
	0, 0, 0, 0, 0, 2306, 0, 2308, 2084, 2361,
	2364, 2299, 0, 2255, 0, 0, 1731, 1732, 1732, 0,
	2153, 0, 2314, 0, 2321, 2322, 0, 2146, 0, 2355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2157,
	0, 0, 0, 0, 2189, 2192, 2195, 2198, 0, 0,
	0, 0, 2178, 0, 0, 0, 2182, 1948, 1934, 0,
	1976, 1974, 1975, 1969, 1976, 1973, 1926, 0, 1925, 0,
	2204, 0, 2206, 2208, 0, 0, 2210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2090, 2091, 2092, 2112, 2211, 2343, 2344, 0, 0,
	0, 0, 0, 0, 2217, 0, 2349, 2218, 2220, 1719,
	0, 1712, 0, 1777, 1766, 1866, 0, 2370, 1836, 1779,
	1781, 2371, 2409, 1766, 1766, 0, 2318, 0, 0, 1827,
	0, 0, 0, 1829, 1800, 0, 0, 1794, 0, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1801, 1325, 1831, 1803,
	1807, 2437, 0, 1833, 0, 1818, 0, 1820, 1853, 0,
	1812, 1815, 0, 0, 2452, 1867, 0, 400, 408, 409,
	401, 402, 403, 404, 0, 1512, 0, 0, 0, 0,
	0, 2320, 0, 1873, 0, 1879, 0, 0, 0, 0,
	672, 0, 0, 0, 0, 0, 1656, 458, 543, 229,
	548, 551, 2376, 229, 557, 560, 566, 258, 0, 732,
	-2, 777, 778, 780, 0, 776, 882, 878, 183, 1526,
	0, 0, 0, 1468, 0, 1190, 0, 1185, 1186, 1470,
	1474, 1480, 1483, 0, 188, 2890, 200, 0, 2890, 0,
	1251, 0, 0, 0, 0, 0, 0, 1528, 0, 0,
	2890, 229, 2890, 229, 204, 206, 209, 0, 215, 211,
	0, 1187, 0, 1239, 0, 0, 1242, 136, 1526, 0,
	0, 139, 143, 155, 0, 0, 0, 165, 0, 0,
	0, 1485, 1489, 1497, 0, 0, 0, 1352, 1353, 1356,
	1362, 96, 0, 0, 0, 1493, 1495, 1501, 111, 114,
	2890, 2421, 0, 116, 2890, 0, 0, 0, 1467, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 141, 145,
	156, 0, 1503, 138, 0, 244, 0, 0, 234, 229,
	2890, 0, 236, 0, 237, 238, 252, 0, 0, 0,
	637, 0, 0, 0, 642, 0, 1167, 1168, 1423, 0,
	1367, 1368, 0, 1379, 1373, 0, 0, 0, 0, 0,
	1505, 1506, 0, 0, 0, 1524, 1521, 1836, 264, 0,
	1836, 272, 0, 2384, 0, 286, 422, 0, 0, 0,
	0, 1206, 1305, 1208, 1210, 1211, 1212, 231, 0, 2460,
	1277, 2618, 2460, 0, 0, 1174, 0, 0, 0, 496,
	492, 0, 501, 504, 509, 0, 508, 2413, -2, 0,
	0, 0, 0, -2, 0, 0, 1439, 1433, 1434, 0,
	0, 0, 0, 2890, 1613, 1621, 0, 1717, 1732, 513,
	1622, 1644, 0, 0, 0, 1632, 1628, 1625, 1867, 0,
	0, 0, 0, 0, 1860, 1863, 583, 584, 328, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 306, 0,
	309, 0, 0, 0, 314, 315, 316, 317, 318, 319,
	0, 0, 0, 0, 308, 340, 296, 1836, 0, 308,
	0, 0, 721, 0, 0, 935, 351, 351, 351, 0,
	964, 967, 976, 978, 981, 1025, 1027, 1044, 0, 1055,
	1083, 2408, 1084, 1229, 0, 1229, 0, 0, 1104, 1680,
	0, 1755, 1686, 1737, 1738, 0, 1465, 0, 2001, 2046,
	0, 0, -2, 0, 0, 2050, 0, 0, 0, -2,
	0, 0, 0, 2307, 2309, 0, 2363, 2298, 2148, 0,
	0, 0, 2152, 2136, 2137, 0, 2258, 2324, 2353, 2357,
	0, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 0, 2403,
	2438, 2442, 2231, 2232, 2236, 2417, 0, 0, 0, 2161,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 1971,
	0, 0, 2325, 2336, 2338, 2088, 2089, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, -2, -2, -2,
	2106, 2107, 2108, -2, -2, -2, 2113, 0, 0, 0,
	2339, 2341, 2342, 2346, 2347, 0, 2214, 2215, 2216, 2348,
	0, 1719, 1713, 1774, 0, 1865, 1778, 0, 1774, 1774,
	1726, 1825, 0, 0, 1849, 0, 1797, 0, 1798, 0,
	0, 1830, 0, 1805, 1808, 1809, 1819, 0, 1811, 0,
	1814, 0, 2148, -2, 352, 354, 356, 0, 359, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	663, 0, 1512, 1512, 0, 665, 649, 0, 0, 1875,
	0, 0, 1951, 1955, 1979, 676, 678, 0, 0, 2841,
	2782, 0, 675, 545, 554, 260, 0, 1834, 0, 0,
	0, 0, 0, 212, 0, 0, 0, 0, 0, 0,
	230, 0, 1286, 0, 1249, 0, 0, 1276, 0, 0,
	1292, 190, 191, 192, 0, 0, 0, 0, 202, 0,
	0, 198, 0, 208, 214, 213, 0, 1236, 0, 0,
	0, 0, 1473, 0, 0, 0, 162, 163, 164, 0,
	169, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 0, 0, 1603, 1604, 0, 1594,
	159, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 1462, 254, 0, 0, 0, 0, 0, 348, 343,
	345, 0, 1366, 1426, 1427, 1375, 1486, 1490, 1498, 0,
	0, 0, 0, 0, 690, 1523, 0, 272, 270, 0,
	273, 0, 276, 277, 0, 0, 272, 266, 0, 0,
	0, 1325, 437, 1177, 1293, 0, 0, 1295, 1213, 1217,
	0, 2460, 2460, 0, 2414, 0, 1175, 0, 0, 1294,
	488, 0, 495, 0, 507, 0, 1346, 0, 0, 1370,
	1395, 1325, 0, 1438, 1440, 0, 1448, 0, 0, 0,
	1615, 1621, 0, 1608, 1609, 1751, 1623, 1642, -2, 0,
	0, 1732, 1650, 1647, 1653, 1654, 0, 0, 0, 331,
	0, 1634, 1636, 0, 1148, 1151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 308, 1836, 298, 1836,
	335, 0, 929, 937, 939, 941, 959, 1035, 1053, 1085,
	1228, 0, 0, 1087, 0, 0, 1754, 1741, 1742, 1739,
	1465, 2048, 2052, 0, 0, 0, 2054, -2, 0, 2076,
	-2, -2, 2310, 2362, 2127, 1732, 2149, 2151, 2138, 2356,
	1996, 0, 2238, 2235, 0, 2222, 0, 2173, 2174, 0,
	0, 2177, 2179, 2180, 2181, 1935, 1928, 1927, 2335, 0,
	0, 0, 0, 2213, 1714, 0, 2227, 0, 0, 1782,
	2227, 2227, 1826, 0, 1828, 1795, 1783, 0, 1792, 0,
	2438, 1821, 1813, 0, 0, 357, 0, 361, 362, 363,
	364, 365, 366, 0, 0, 0, 0, 0, 405, 0,
	666, 667, 0, 0, 1869, 1874, 0, 1880, 1950, 0,
	0, 0, 0, 0, 261, 0, 880, 881, 184, 185,
	1191, 1189, 1477, 1481, 1478, 0, 187, 0, 0, 1250,
	0, 1253, 0, 0, 0, 0, 1260, 1277, 0, 0,
	0, 0, 0, 0, 1279, 0, 1278, 0, 0, 1309,
	0, 1453, 1460, 0, -2, 0, 0, 0, 194, 220,
	0, 0, 0, 0, 223, 1527, 196, 0, 0, 229,
	229, 1188, 0, 0, 1469, 1471, 1484, 0, 0, 0,
	0, 172, 0, 0, 1487, 1491, 1499, 1494, 1496, 1502,
	0, 0, 117, 0, 0, 1605, 0, 158, 0, 0,
	0, 1504, 242, 243, 0, 229, 0, 229, 235, 229,
	1462, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	1508, 263, 0, 0, 0, 0, 0, 265, 341, 272,
	424, 0, 1238, 0, 1305, 1297, 1298, 1299, 0, 1209,
	1304, 1306, 0, 0, 1214, 0, 0, 0, 0, 1194,
	1176, 0, 1207, 1179, 0, 493, 1165, 1343, 1387, 1325,
	1390, 0, 0, 1430, 0, 0, 0, 0, 0, 0,
	0, 1617, 1621, 0, 1610, 1611, 1644, 1750, 0, 0,
	0, 1631, 1751, 0, 350, 351, 0, 351, 310, 0,
	311, 312, 313, 320, 321, 322, 323, 297, 300, 308,
	723, 725, 0, 0, 731, 1227, 0, 0, 0, 0,
	1740, 2056, -2, -2, 2077, 0, 2439, 2441, 1732, 0,
	2224, 1734, 0, 0, -2, 0, 0, 0, 1715, 1698,
	0, 1773, 1765, 1767, 1769, 2768, 2535, 2889, 1699, 1700,
	1848, 0, 0, 1816, 358, 367, 368, 0, 370, 371,
	1511, 668, 0, 0, 1876, 0, 673, 0, 0, 0,
	870, 0, 0, 1479, 189, 0, 0, 1254, 1255, 1257,
	0, 1259, 1261, 1262, 1179, 0, 1266, 0, 2462, 0,
	1271, 1274, 1275, 0, 0, 1288, 1310, 0, 1319, 0,
	1455, 1465, 1459, 0, 1457, 1321, 0, 193, 222, 195,
	224, 219, 0, 1462, 0, 197, 207, 0, 0, 140,
	0, 0, 2529, 175, 173, 171, 115, 121, 123, 1466,
	161, 0, 142, 0, 244, 253, 1461, 255, 239, 229,
	0, 0, 1488, 1492, 1500, 0, 1515, 1516, 1517, 1518,
	0, 0, 0, 0, 274, 0, 275, 278, 279, 0,
	0, 1179, 1237, 1178, 1296, 0, 1307, 1179, 0, 0,
	0, 0, 0, 0, 1181, 0, 1180, 0, 0, 494,
	497, 0, 500, 0, 0, 1394, 0, 1441, 1439, 0,
	1447, 0, 0, 0, 1593, 0, 0, 1612, 1613, 511,
	1637, 0, 0, 1644, 1655, 330, 0, 333, 307, 299,
	0, 727, 0, 729, 0, 1086, 1088, 0, 0, 2150,
	2242, 0, 0, 2175, 2176, -2, 0, 2116, 2226, 2228,
	0, 0, 0, 0, 0, 1784, 1793, 369, 1512, 1870,
	680, 677, 679, 0, 1475, 0, 1482, 231, 1252, 1256,
	0, 1263, 0, 0, 0, 1267, 1329, 0, 0, 1346,
	1346, 1280, 0, 0, 1313, 1314, 1234, 0, 1315, 1316,
	1317, 1454, 1743, 1460, 1179, 0, 0, 221, 226, 0,
	0, 0, 0, 0, 0, 160, 0, 233, 256, 1462,
	0, 0, 1519, 1520, 0, 0, 271, 290, 0, 1388,
	1181, 0, 1308, 1215, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1216, 1321, 0, 0, 1285, 1192, 0,
	1195, 0, 1177, 0, 498, 499, 0, 0, 1395, 0,
	0, 1448, 0, 0, 1600, 1592, 1621, 1614, 1615, 1867,
	0, 1645, 0, 726, 0, 0, 1096, 1097, 0, 0,
	0, 0, 2237, 1735, 2117, 0, 0, 1768, 1770, 1771,
	1772, 669, 0, 1476, 201, 0, 1323, 1265, 1334, 0,
	0, 0, 0, 0, 1281, 1311, 1312, 1309, 1233, 0,
	1458, 1456, 1290, 1323, 1325, 199, 0, 1321, 0, 1243,
	0, 0, 1246, 0, 0, 176, 2529, 174, 0, 229,
	647, 1512, 229, 0, 293, 0, 284, 282, 283, 1173,
	0, 1301, 1303, 1319, 1321, 1234, 0, 1196, 1238, 1194,
	1389, 1393, 1391, 1431, 1321, 0, 1319, 0, 1607, 1621,
	1601, 1602, 0, 1617, 0, 0, 351, 728, 730, 2234,
	2254, 2243, -2, 2844, 2536, 0, 2254, 2254, 2229, 2230,
	0, 0, 1179, 0, 1268, 1330, 1331, 0, 1326, 1327,
	1328, 2461, 1269, 1270, 1272, 1273, 1867, 0, 1320, 1329,
	225, 1179, 1240, 0, 0, 1241, 0, 0, 179, 0,
	181, 257, 1510, 1513, 0, 280, 0, 0, 1170, 1172,
	1179, 0, 1234, 1319, 1179, 0, 0, 0, 1179, 1181,
	1319, 0, 1234, 0, 1596, 1606, 0, 1616, 1593, 0,
	1640, 0, 332, 2239, 0, 0, 2245, 2246, 2247, 2248,
	2249, 2240, 2241, 681, 1258, 1264, 0, 1332, 0, 1333,
	0, 0, 0, 1289, 1318, 1334, 205, 1244, 0, 1247,
	0, 177, 0, 0, 288, 289, 1300, 1302, 1179, 1234,
	1867, 1182, 0, 1184, 1181, 1193, 1234, 0, 1179, 0,
	1619, 1595, 1599, 2422, 1600, 1638, 0, 0, 0, 2251,
	2252, 0, 0, 0, 1335, 0, 1338, 1339, 0, 1336,
	1309, 0, 0, 229, 0, 1867, 1179, 1284, 1183, 1173,
	1179, 1321, 1867, 1319, 1589, 1621, 1607, 0, 1867, 2250,
	2253, 2244, 1322, 1337, 1340, 1341, 1291, 0, 0, 1514,
	291, 0, 1282, 1867, 1171, 1867, 1319, 1444, 1234, 0,
	1596, 1867, 1641, 1231, 0, 0, 1283, 1442, 1234, 1179,
	1618, 1590, 1639, 1245, 1230, 0, 292, 1179, 1867, 0,
	1867, 1445, 0, 1443, 1231, 1248,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 619, 3, 625, 620, 3,
	631, 632, 623, 621, 636, 622, 633, 624, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 639, 3,
	611, 613, 612, 616, 635, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 629, 3, 630, 626, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 637, 618, 638, 614,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 615, 57954, 617,
	57955, 627, 57956, 628, 57957, 634, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1558
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1563
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1565
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1568
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1570
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1575
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1583
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1587
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1596
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1597
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1599
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1602
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1604
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1605
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1607
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1609
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1611
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1674
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1700
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1714
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1733
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1776
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1780
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1787
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1799
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1809
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1816
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1833
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1878
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1917
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1949
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1973
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1982
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1997
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2003
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2011
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2021
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2047
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2058
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2070
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2091
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2153
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2162
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2173
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2181
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2192
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2202
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2212
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2221
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2232
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2238
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2264
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2269
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2316
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2336
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2360
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2404
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2414
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2417
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2423
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2475
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2482
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = true
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = false
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2559
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2670
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2674
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2721
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2761
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2828
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2858
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2866
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2874
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2889
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2893
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3011
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3020
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3160
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3177
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3221
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3230
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3290
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3294
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3298
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3325
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3334
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3340
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3345
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3350
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3354
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3382
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = nil
		}
	case 352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3458
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3492
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "header")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3544
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3548
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3552
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3610
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3637
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3654
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3686
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3690
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3703
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3711
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3712
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3716
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3721
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3733
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3738
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3739
		{
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "CREATE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3754
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3757
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3763
		{
			return unimplemented(sqllex, "create access method")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3764
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3765
		{
			return unimplemented(sqllex, "create cast")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3766
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3767
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3768
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3769
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3770
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3771
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3772
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3773
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3774
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3775
		{
			return unimplemented(sqllex, "create publication")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3776
		{
			return unimplemented(sqllex, "create rule")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3777
		{
			return unimplemented(sqllex, "create server")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3779
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3781
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3784
		{
		}
	case 447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3785
		{
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3788
		{
		}
	case 449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3789
		{
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3792
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3793
		{
		}
	case 452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3796
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3797
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3798
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3799
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3800
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3801
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3802
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3803
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3804
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3805
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3806
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3811
		{
			return unimplemented(sqllex, "drop server")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3812
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3813
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3817
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3836
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3844
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3848
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3862
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3871
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3894
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3940
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3992
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3996
		{

			sqlVAL.union.val = nil
		}
	case 511:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4020
		{
			return helpWith(sqllex, "DELETE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4023
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4024
		{
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4035
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4036
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4037
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4038
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4039
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4049
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4050
		{
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{
			return helpWith(sqllex, "DROP")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4060
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4101
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4105
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4108
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4116
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4164
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4171
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4197
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4243
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4250
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4255
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4273
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4280
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4307
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4314
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4316
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4324
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4332
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4340
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4348
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "DELETE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "INSERT")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4382
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4388
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4389
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "DELETE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "INSERT")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4403
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4481
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4538
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4571
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4612
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4635
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4662
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4666
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4678
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4681
		{
			return helpWith(sqllex, "GRANT")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4774
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4777
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4787
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "RESET")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4835
		{
			return helpWith(sqllex, "RESET")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4846
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "USE")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4865
		{
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4866
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "USE")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4933
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4997
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5005
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5013
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5027
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5051
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5054
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5068
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5073
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5093
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5098
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5102
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5121
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5125
		{
			return unimplemented(sqllex, "set from current")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5129
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5134
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5152
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5164
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5169
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = tree.Low
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = tree.Normal
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = tree.High
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5302
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5303
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5305
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5307
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5309
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5311
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5313
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5314
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5315
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5317
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5318
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5319
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5321
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5323
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5325
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5326
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5331
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5333
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5337
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5338
		{
			return helpWith(sqllex, "SHOW")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5341
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5361
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = true
		}
	case 873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = false
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = true
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = false
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = false
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5446
		{
			return helpWith(sqllex, "FETCH")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5459
		{
			return helpWith(sqllex, "MOVE")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5498
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = int64(1)
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = int64(-1)
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 900:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = int64(1)
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = int64(1)
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = int64(-1)
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5553
		{
		}
	case 904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5554
		{
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5557
		{
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5558
		{
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5562
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5567
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5572
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5577
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5582
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5594
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.str = "client_encoding"
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.str = "timezone"
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5616
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5640
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5644
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5648
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5667
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				InCollection:         sqlDollar[6].union.expr(),
				Options:              sqlDollar[7].union.kvOptions(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5717
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5726
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupRangeDetails,
				Path:         sqlDollar[4].union.expr(),
				InCollection: sqlDollar[6].union.expr(),
				Options:      sqlDollar[7].union.kvOptions(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5736
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5745
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupFileDetails,
				Path:         sqlDollar[4].union.expr(),
				InCollection: sqlDollar[6].union.expr(),
				Options:      sqlDollar[7].union.kvOptions(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5754
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5771
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5776
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5785
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5791
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5805
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5813
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5816
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5839
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5850
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5861
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5866
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5896
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5906
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5919
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5927
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5938
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5940
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5944
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5951
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5953
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5960
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5971
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5976
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5987
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5992
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = true
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = true
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = false
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6028
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6029
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6030
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6047
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6073
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6074
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6090
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6098
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6106
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6139
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6142
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6147
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6149
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6153
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = true
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = false
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6168
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6173
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6204
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6214
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6219
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = true
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = false
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6237
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6251
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6258
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6262
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6266
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6276
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6287
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6301
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6309
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6314
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6319
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6323
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6337
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6353
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6358
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6363
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6368
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6384
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6397
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6402
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6413
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6424
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6442
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6450
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6471
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6476
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6481
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6485
		{
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6494
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6508
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6517
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6529
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6588
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6598
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6611
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6744
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6787
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6806
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6856
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6857
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6858
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6859
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6869
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6870
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6871
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6872
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6911
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6924
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6956
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6964
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6975
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7011
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7039
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7075
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7090
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7118
		{

			sqlVAL.union.val = nil
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7124
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.str = ""
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7134
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = nil
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7157
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7161
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7197
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7210
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7224
		{
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7225
		{
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7226
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7281
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7307
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7318
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7324
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7325
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.str = ""
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7463
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7570
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7615
		{

			sqlVAL.union.val = true
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = false
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7625
		{
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7629
		{
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7632
		{
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7705
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7717
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7729
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7740
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7757
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7767
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7782
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7850
		{
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7851
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7852
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7853
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7854
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7855
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7873
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7937
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8022
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8031
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8039
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8050
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8063
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8073
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8075
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8077
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8079
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8082
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8085
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8087
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8100
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8104
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8131
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8165
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.str = ""
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = true
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8199
		{

			sqlVAL.union.val = true
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = false
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8214
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8228
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8240
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8252
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8262
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8272
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8276
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = true
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = true
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = nil
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8419
		{
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8420
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8445
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8447
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8449
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8451
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8453
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8455
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8490
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8507
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8525
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8541
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8557
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8561
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = false
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = true
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = false
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = true
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = false
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8615
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8621
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8627
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8635
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.str = ""
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.str = ""
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8694
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8700
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8753
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8925
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8931
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8943
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8949
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8963
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8969
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9028
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = true
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = false
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = tree.Types
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9088
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9092
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9116
		{
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9117
		{
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9120
		{
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9121
		{
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9132
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9150
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9159
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9180
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9209
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9217
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9228
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9232
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9233
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9234
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9253
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9258
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9271
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9276
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9285
		{
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9286
		{
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9287
		{
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9304
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9307
		{
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9308
		{
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9336
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9349
		{
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9351
		{
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9355
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9445
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.str = ""
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9468
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9473
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9490
		{

		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9505
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.str = ""
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.str = ""
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.str = ""
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.str = ""
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9560
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9585
		{
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9586
		{
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9615
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9633
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9637
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9646
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9695
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9740
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9778
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9810
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9831
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9846
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9990
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10025
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10026
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10027
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10088
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10132
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10148
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = true
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = false
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10201
		{
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10202
		{
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = nil
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10215
		{
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10216
		{
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = true
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = false
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = false
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = true
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10245
		{
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10246
		{
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10249
		{
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10250
		{
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10303
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10308
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10334
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10367
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10427
		{
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10461
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10463
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10493
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10495
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10510
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10532
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10537
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10542
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10579
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10591
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10610
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10652
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10662
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10697
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10708
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10738
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10771
		{
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10773
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = nil
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = true
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = false
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.str = tree.AstFull
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.str = tree.AstRight
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.str = tree.AstInner
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10890
		{
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10891
		{
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.str = tree.AstHash
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.str = ""
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10960
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10965
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10983
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10989
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10995
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11005
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = true
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = false
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = true
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = false
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11054
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11067
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11075
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11076
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11094
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11104
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11117
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11124
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11133
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11173
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11185
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11186
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = types.Geography
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11235
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11243
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11269
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11277
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = nil
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = types.Int2
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = types.Int
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = types.Float4
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = types.Float
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11320
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11328
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11336
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = types.Bool
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11350
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = types.Float
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11369
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11375
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11397
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = types.String
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = true
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = false
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = types.Date
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11446
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11454
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11468
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11477
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11485
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11502
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = true
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = false
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = false
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = types.Interval
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11526
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11610
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11625
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = nil
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11655
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11715
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11864
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11872
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11993
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12059
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12081
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12189
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12197
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12293
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12298
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12300
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12324
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12333
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12348
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12382
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12390
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12393
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12394
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12402
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12409
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12418
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12484
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12515
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12519
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12529
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12533
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12537
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12571
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12595
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12599
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12609
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12614
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12623
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12625
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12629
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12632
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12641
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12643
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12647
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12650
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12652
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12655
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12660
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12662
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12665
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12670
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12675
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12684
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12685
		{
			return unimplemented(sqllex, "treat")
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12687
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12691
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12695
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12706
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12708
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12711
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12727
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12731
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12742
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12758
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12766
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12770
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12774
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12781
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12801
		{
			sqlVAL.str = ""
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12807
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12811
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12817
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12833
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12841
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12847
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12860
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12888
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12892
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12896
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12900
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12907
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12916
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12920
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12928
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12933
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12946
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12950
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12957
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12973
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12977
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12996
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12997
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12998
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12999
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13001
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13002
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13004
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13006
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13008
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13009
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13010
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13011
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13012
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13014
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13015
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13016
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13017
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13018
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13019
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13020
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13021
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13022
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13023
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13024
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13027
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13028
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13033
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13059
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13092
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13096
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13100
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13115
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13138
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13142
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13148
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13152
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13158
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13162
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13168
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13178
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13182
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13205
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13209
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13213
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13219
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13226
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13230
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13247
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13251
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13255
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13259
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13263
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13269
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13275
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13281
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13285
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13289
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13295
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13307
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13314
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13318
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13324
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13330
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13334
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13341
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13347
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13351
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13358
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13364
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13368
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13373
		{
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13374
		{
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13378
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13382
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13388
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13397
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13401
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13405
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13413
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13417
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13423
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13427
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13446
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13454
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13477
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13486
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13490
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13494
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13498
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13504
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13508
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13523
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13527
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13539
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13543
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13552
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13563
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13572
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13580
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13597
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13682
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13690
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13694
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13700
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13704
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13712
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13739
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13746
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13750
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13754
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13768
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13772
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13776
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13789
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13798
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13816
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13829
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13836
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13861
		{
			sqlVAL.str = ""
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13867
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13871
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
