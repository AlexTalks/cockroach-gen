// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:881
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13835

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1605,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 418,
	-2, 0,
	-1, 74,
	245, 248,
	520, 248,
	-2, 0,
	-1, 88,
	234, 1341,
	247, 1341,
	263, 414,
	394, 414,
	405, 1096,
	445, 414,
	458, 1096,
	505, 1096,
	531, 414,
	557, 1096,
	-2, 0,
	-1, 94,
	133, 1605,
	240, 1605,
	542, 1605,
	543, 1605,
	-2, 0,
	-1, 112,
	152, 1576,
	172, 1576,
	185, 1576,
	243, 1576,
	276, 1576,
	345, 1576,
	355, 1576,
	537, 1576,
	-2, 1547,
	-1, 153,
	160, 935,
	262, 935,
	397, 896,
	463, 896,
	504, 896,
	523, 935,
	525, 896,
	-2, 0,
	-1, 157,
	4, 1607,
	21, 1607,
	22, 1607,
	23, 1607,
	24, 1607,
	25, 1607,
	26, 1607,
	27, 1607,
	29, 1607,
	30, 1607,
	36, 1607,
	41, 1607,
	42, 1607,
	44, 1607,
	45, 1607,
	46, 1607,
	47, 1607,
	48, 1607,
	49, 1607,
	50, 1607,
	51, 1607,
	53, 1607,
	54, 1607,
	55, 1607,
	56, 1607,
	58, 1607,
	59, 1607,
	60, 1607,
	61, 1607,
	62, 1607,
	63, 1607,
	64, 1607,
	68, 1607,
	69, 1607,
	70, 1607,
	71, 1607,
	73, 1607,
	74, 1607,
	75, 1607,
	79, 1607,
	80, 1607,
	81, 1607,
	82, 1607,
	83, 1607,
	84, 1607,
	85, 1607,
	88, 1607,
	89, 1607,
	90, 1607,
	91, 1607,
	92, 1607,
	94, 1607,
	96, 1607,
	97, 1607,
	98, 1607,
	99, 1607,
	100, 1607,
	101, 1607,
	103, 1607,
	104, 1607,
	105, 1607,
	107, 1607,
	108, 1607,
	109, 1607,
	117, 1607,
	118, 1607,
	119, 1607,
	120, 1607,
	121, 1607,
	123, 1607,
	124, 1607,
	125, 1607,
	126, 1607,
	128, 1607,
	129, 1607,
	130, 1607,
	132, 1607,
	133, 1607,
	134, 1607,
	136, 1607,
	137, 1607,
	138, 1607,
	141, 1607,
	142, 1607,
	143, 1607,
	145, 1607,
	146, 1607,
	147, 1607,
	149, 1607,
	150, 1607,
	151, 1607,
	153, 1607,
	154, 1607,
	155, 1607,
	156, 1607,
	157, 1607,
	158, 1607,
	159, 1607,
	160, 1607,
	161, 1607,
	162, 1607,
	163, 1607,
	164, 1607,
	165, 1607,
	166, 1607,
	167, 1607,
	168, 1607,
	169, 1607,
	171, 1607,
	177, 1607,
	178, 1607,
	179, 1607,
	180, 1607,
	184, 1607,
	186, 1607,
	187, 1607,
	188, 1607,
	192, 1607,
	193, 1607,
	194, 1607,
	195, 1607,
	196, 1607,
	197, 1607,
	198, 1607,
	199, 1607,
	200, 1607,
	201, 1607,
	202, 1607,
	203, 1607,
	204, 1607,
	205, 1607,
	207, 1607,
	208, 1607,
	210, 1607,
	211, 1607,
	213, 1607,
	214, 1607,
	215, 1607,
	216, 1607,
	217, 1607,
	218, 1607,
	219, 1607,
	220, 1607,
	221, 1607,
	223, 1607,
	224, 1607,
	226, 1607,
	227, 1607,
	228, 1607,
	229, 1607,
	230, 1607,
	234, 1607,
	235, 1607,
	236, 1607,
	237, 1607,
	240, 1607,
	241, 1607,
	242, 1607,
	244, 1607,
	246, 1607,
	247, 1607,
	249, 1607,
	251, 1607,
	252, 1607,
	253, 1607,
	255, 1607,
	259, 1607,
	260, 1607,
	261, 1607,
	262, 1607,
	263, 1607,
	264, 1607,
	266, 1607,
	267, 1607,
	268, 1607,
	270, 1607,
	271, 1607,
	273, 1607,
	274, 1607,
	277, 1607,
	278, 1607,
	279, 1607,
	280, 1607,
	281, 1607,
	282, 1607,
	283, 1607,
	286, 1607,
	287, 1607,
	288, 1607,
	289, 1607,
	291, 1607,
	292, 1607,
	293, 1607,
	294, 1607,
	295, 1607,
	296, 1607,
	297, 1607,
	298, 1607,
	299, 1607,
	300, 1607,
	301, 1607,
	302, 1607,
	303, 1607,
	304, 1607,
	305, 1607,
	306, 1607,
	307, 1607,
	308, 1607,
	309, 1607,
	310, 1607,
	311, 1607,
	312, 1607,
	314, 1607,
	316, 1607,
	317, 1607,
	318, 1607,
	319, 1607,
	320, 1607,
	321, 1607,
	322, 1607,
	323, 1607,
	324, 1607,
	325, 1607,
	326, 1607,
	327, 1607,
	328, 1607,
	329, 1607,
	330, 1607,
	332, 1607,
	333, 1607,
	335, 1607,
	337, 1607,
	338, 1607,
	340, 1607,
	341, 1607,
	342, 1607,
	343, 1607,
	344, 1607,
	347, 1607,
	350, 1607,
	351, 1607,
	352, 1607,
	353, 1607,
	356, 1607,
	357, 1607,
	358, 1607,
	360, 1607,
	362, 1607,
	363, 1607,
	364, 1607,
	365, 1607,
	366, 1607,
	367, 1607,
	368, 1607,
	369, 1607,
	370, 1607,
	371, 1607,
	372, 1607,
	373, 1607,
	374, 1607,
	376, 1607,
	377, 1607,
	378, 1607,
	379, 1607,
	380, 1607,
	381, 1607,
	382, 1607,
	383, 1607,
	384, 1607,
	385, 1607,
	386, 1607,
	387, 1607,
	388, 1607,
	389, 1607,
	390, 1607,
	392, 1607,
	393, 1607,
	395, 1607,
	396, 1607,
	397, 1607,
	398, 1607,
	399, 1607,
	400, 1607,
	401, 1607,
	402, 1607,
	403, 1607,
	404, 1607,
	405, 1607,
	406, 1607,
	407, 1607,
	409, 1607,
	411, 1607,
	412, 1607,
	413, 1607,
	419, 1607,
	420, 1607,
	422, 1607,
	423, 1607,
	424, 1607,
	425, 1607,
	426, 1607,
	427, 1607,
	428, 1607,
	429, 1607,
	430, 1607,
	431, 1607,
	433, 1607,
	434, 1607,
	435, 1607,
	437, 1607,
	438, 1607,
	439, 1607,
	440, 1607,
	441, 1607,
	442, 1607,
	443, 1607,
	445, 1607,
	446, 1607,
	447, 1607,
	448, 1607,
	449, 1607,
	450, 1607,
	451, 1607,
	452, 1607,
	453, 1607,
	454, 1607,
	455, 1607,
	456, 1607,
	458, 1607,
	459, 1607,
	460, 1607,
	461, 1607,
	462, 1607,
	463, 1607,
	465, 1607,
	466, 1607,
	467, 1607,
	468, 1607,
	469, 1607,
	470, 1607,
	472, 1607,
	473, 1607,
	474, 1607,
	475, 1607,
	476, 1607,
	477, 1607,
	478, 1607,
	479, 1607,
	481, 1607,
	483, 1607,
	484, 1607,
	485, 1607,
	486, 1607,
	487, 1607,
	488, 1607,
	489, 1607,
	490, 1607,
	491, 1607,
	492, 1607,
	493, 1607,
	494, 1607,
	495, 1607,
	496, 1607,
	497, 1607,
	498, 1607,
	500, 1607,
	501, 1607,
	503, 1607,
	504, 1607,
	506, 1607,
	507, 1607,
	508, 1607,
	509, 1607,
	510, 1607,
	511, 1607,
	512, 1607,
	513, 1607,
	515, 1607,
	516, 1607,
	517, 1607,
	518, 1607,
	519, 1607,
	521, 1607,
	523, 1607,
	524, 1607,
	525, 1607,
	526, 1607,
	527, 1607,
	528, 1607,
	530, 1607,
	531, 1607,
	532, 1607,
	533, 1607,
	535, 1607,
	536, 1607,
	539, 1607,
	540, 1607,
	541, 1607,
	542, 1607,
	543, 1607,
	544, 1607,
	545, 1607,
	547, 1607,
	550, 1607,
	551, 1607,
	552, 1607,
	553, 1607,
	554, 1607,
	555, 1607,
	557, 1607,
	558, 1607,
	559, 1607,
	560, 1607,
	561, 1607,
	562, 1607,
	567, 1607,
	568, 1607,
	569, 1607,
	570, 1607,
	571, 1607,
	572, 1607,
	-2, 0,
	-1, 158,
	1, 1458,
	131, 1458,
	251, 1458,
	334, 1458,
	392, 1458,
	401, 1458,
	576, 1458,
	606, 1458,
	-2, 0,
	-1, 160,
	1, 1458,
	606, 1458,
	-2, 0,
	-1, 161,
	1, 1458,
	606, 1458,
	-2, 0,
	-1, 162,
	1, 1458,
	520, 1458,
	606, 1458,
	-2, 0,
	-1, 191,
	152, 1575,
	172, 1575,
	185, 1575,
	243, 1575,
	276, 1575,
	345, 1575,
	355, 1575,
	537, 1575,
	-2, 1550,
	-1, 238,
	4, 1614,
	5, 1614,
	6, 1614,
	7, 1614,
	8, 1614,
	9, 1614,
	10, 1614,
	21, 1614,
	22, 1614,
	23, 1614,
	24, 1614,
	25, 1614,
	26, 1614,
	27, 1614,
	29, 1614,
	30, 1614,
	36, 1614,
	37, 1614,
	41, 1614,
	42, 1614,
	43, 1614,
	44, 1614,
	45, 1614,
	46, 1614,
	47, 1614,
	48, 1614,
	49, 1614,
	50, 1614,
	51, 1614,
	53, 1614,
	54, 1614,
	55, 1614,
	56, 1614,
	58, 1614,
	59, 1614,
	60, 1614,
	61, 1614,
	62, 1614,
	63, 1614,
	64, 1614,
	65, 1614,
	66, 1614,
	67, 1614,
	68, 1614,
	69, 1614,
	70, 1614,
	71, 1614,
	73, 1614,
	74, 1614,
	75, 1614,
	77, 1614,
	79, 1614,
	80, 1614,
	81, 1614,
	82, 1614,
	83, 1614,
	84, 1614,
	85, 1614,
	88, 1614,
	89, 1614,
	90, 1614,
	91, 1614,
	92, 1614,
	94, 1614,
	96, 1614,
	97, 1614,
	98, 1614,
	99, 1614,
	100, 1614,
	101, 1614,
	103, 1614,
	104, 1614,
	105, 1614,
	106, 1614,
	107, 1614,
	108, 1614,
	109, 1614,
	110, 1614,
	111, 1614,
	112, 1614,
	113, 1614,
	114, 1614,
	115, 1614,
	116, 1614,
	117, 1614,
	118, 1614,
	119, 1614,
	120, 1614,
	121, 1614,
	122, 1614,
	123, 1614,
	124, 1614,
	125, 1614,
	126, 1614,
	127, 1614,
	128, 1614,
	129, 1614,
	130, 1614,
	132, 1614,
	133, 1614,
	134, 1614,
	136, 1614,
	137, 1614,
	138, 1614,
	141, 1614,
	142, 1614,
	143, 1614,
	145, 1614,
	146, 1614,
	147, 1614,
	149, 1614,
	150, 1614,
	151, 1614,
	153, 1614,
	154, 1614,
	155, 1614,
	156, 1614,
	157, 1614,
	158, 1614,
	159, 1614,
	160, 1614,
	161, 1614,
	162, 1614,
	163, 1614,
	164, 1614,
	165, 1614,
	166, 1614,
	167, 1614,
	168, 1614,
	169, 1614,
	170, 1614,
	171, 1614,
	177, 1614,
	178, 1614,
	179, 1614,
	180, 1614,
	184, 1614,
	186, 1614,
	187, 1614,
	188, 1614,
	191, 1614,
	192, 1614,
	193, 1614,
	194, 1614,
	195, 1614,
	196, 1614,
	197, 1614,
	198, 1614,
	199, 1614,
	200, 1614,
	201, 1614,
	202, 1614,
	203, 1614,
	204, 1614,
	205, 1614,
	207, 1614,
	208, 1614,
	210, 1614,
	211, 1614,
	213, 1614,
	214, 1614,
	215, 1614,
	216, 1614,
	217, 1614,
	218, 1614,
	219, 1614,
	220, 1614,
	221, 1614,
	222, 1614,
	223, 1614,
	224, 1614,
	226, 1614,
	227, 1614,
	228, 1614,
	229, 1614,
	230, 1614,
	234, 1614,
	235, 1614,
	236, 1614,
	237, 1614,
	239, 1614,
	240, 1614,
	241, 1614,
	242, 1614,
	244, 1614,
	246, 1614,
	247, 1614,
	248, 1614,
	249, 1614,
	250, 1614,
	251, 1614,
	252, 1614,
	253, 1614,
	254, 1614,
	255, 1614,
	259, 1614,
	260, 1614,
	261, 1614,
	262, 1614,
	263, 1614,
	264, 1614,
	266, 1614,
	267, 1614,
	268, 1614,
	270, 1614,
	271, 1614,
	272, 1614,
	273, 1614,
	274, 1614,
	275, 1614,
	277, 1614,
	278, 1614,
	279, 1614,
	280, 1614,
	281, 1614,
	282, 1614,
	283, 1614,
	284, 1614,
	285, 1614,
	286, 1614,
	287, 1614,
	288, 1614,
	289, 1614,
	291, 1614,
	292, 1614,
	293, 1614,
	294, 1614,
	295, 1614,
	296, 1614,
	297, 1614,
	298, 1614,
	299, 1614,
	300, 1614,
	301, 1614,
	302, 1614,
	303, 1614,
	304, 1614,
	305, 1614,
	306, 1614,
	307, 1614,
	308, 1614,
	309, 1614,
	310, 1614,
	311, 1614,
	312, 1614,
	314, 1614,
	315, 1614,
	316, 1614,
	317, 1614,
	318, 1614,
	319, 1614,
	320, 1614,
	321, 1614,
	322, 1614,
	323, 1614,
	324, 1614,
	325, 1614,
	326, 1614,
	327, 1614,
	328, 1614,
	329, 1614,
	330, 1614,
	331, 1614,
	332, 1614,
	333, 1614,
	334, 1614,
	335, 1614,
	336, 1614,
	337, 1614,
	338, 1614,
	339, 1614,
	340, 1614,
	341, 1614,
	342, 1614,
	343, 1614,
	344, 1614,
	347, 1614,
	351, 1614,
	352, 1614,
	353, 1614,
	356, 1614,
	357, 1614,
	358, 1614,
	359, 1614,
	360, 1614,
	361, 1614,
	362, 1614,
	363, 1614,
	364, 1614,
	365, 1614,
	366, 1614,
	367, 1614,
	368, 1614,
	369, 1614,
	370, 1614,
	371, 1614,
	372, 1614,
	373, 1614,
	374, 1614,
	376, 1614,
	377, 1614,
	378, 1614,
	379, 1614,
	380, 1614,
	381, 1614,
	382, 1614,
	383, 1614,
	384, 1614,
	385, 1614,
	386, 1614,
	387, 1614,
	388, 1614,
	389, 1614,
	390, 1614,
	392, 1614,
	393, 1614,
	395, 1614,
	396, 1614,
	397, 1614,
	398, 1614,
	399, 1614,
	400, 1614,
	401, 1614,
	402, 1614,
	403, 1614,
	404, 1614,
	405, 1614,
	406, 1614,
	407, 1614,
	409, 1614,
	411, 1614,
	412, 1614,
	413, 1614,
	419, 1614,
	420, 1614,
	422, 1614,
	423, 1614,
	424, 1614,
	425, 1614,
	426, 1614,
	427, 1614,
	428, 1614,
	429, 1614,
	430, 1614,
	431, 1614,
	433, 1614,
	434, 1614,
	435, 1614,
	436, 1614,
	437, 1614,
	438, 1614,
	439, 1614,
	440, 1614,
	441, 1614,
	442, 1614,
	443, 1614,
	445, 1614,
	446, 1614,
	447, 1614,
	448, 1614,
	449, 1614,
	450, 1614,
	451, 1614,
	452, 1614,
	453, 1614,
	454, 1614,
	455, 1614,
	456, 1614,
	458, 1614,
	459, 1614,
	460, 1614,
	461, 1614,
	462, 1614,
	463, 1614,
	464, 1614,
	465, 1614,
	466, 1614,
	467, 1614,
	468, 1614,
	469, 1614,
	470, 1614,
	471, 1614,
	472, 1614,
	473, 1614,
	474, 1614,
	475, 1614,
	476, 1614,
	477, 1614,
	478, 1614,
	479, 1614,
	481, 1614,
	483, 1614,
	484, 1614,
	485, 1614,
	486, 1614,
	487, 1614,
	488, 1614,
	489, 1614,
	490, 1614,
	491, 1614,
	492, 1614,
	493, 1614,
	494, 1614,
	495, 1614,
	496, 1614,
	497, 1614,
	498, 1614,
	500, 1614,
	501, 1614,
	502, 1614,
	503, 1614,
	504, 1614,
	506, 1614,
	507, 1614,
	508, 1614,
	509, 1614,
	510, 1614,
	511, 1614,
	512, 1614,
	513, 1614,
	515, 1614,
	516, 1614,
	517, 1614,
	518, 1614,
	519, 1614,
	521, 1614,
	523, 1614,
	524, 1614,
	525, 1614,
	526, 1614,
	527, 1614,
	528, 1614,
	529, 1614,
	530, 1614,
	531, 1614,
	532, 1614,
	533, 1614,
	535, 1614,
	536, 1614,
	538, 1614,
	539, 1614,
	540, 1614,
	541, 1614,
	542, 1614,
	543, 1614,
	544, 1614,
	545, 1614,
	546, 1614,
	547, 1614,
	550, 1614,
	551, 1614,
	552, 1614,
	553, 1614,
	554, 1614,
	555, 1614,
	557, 1614,
	558, 1614,
	559, 1614,
	560, 1614,
	561, 1614,
	562, 1614,
	567, 1614,
	568, 1614,
	569, 1614,
	570, 1614,
	571, 1614,
	572, 1614,
	573, 1614,
	586, 1614,
	593, 1614,
	594, 1614,
	595, 1614,
	603, 1614,
	607, 1614,
	-2, 0,
	-1, 753,
	4, 1339,
	21, 1339,
	22, 1339,
	23, 1339,
	24, 1339,
	25, 1339,
	26, 1339,
	27, 1339,
	29, 1339,
	30, 1339,
	36, 1339,
	41, 1339,
	42, 1339,
	44, 1339,
	45, 1339,
	46, 1339,
	47, 1339,
	48, 1339,
	49, 1339,
	50, 1339,
	51, 1339,
	53, 1339,
	54, 1339,
	55, 1339,
	56, 1339,
	58, 1339,
	59, 1339,
	60, 1339,
	61, 1339,
	62, 1339,
	63, 1339,
	64, 1339,
	68, 1339,
	69, 1339,
	70, 1339,
	71, 1339,
	73, 1339,
	74, 1339,
	75, 1339,
	79, 1339,
	80, 1339,
	81, 1339,
	82, 1339,
	83, 1339,
	84, 1339,
	85, 1339,
	88, 1339,
	89, 1339,
	90, 1339,
	91, 1339,
	92, 1339,
	94, 1339,
	96, 1339,
	97, 1339,
	98, 1339,
	99, 1339,
	100, 1339,
	101, 1339,
	103, 1339,
	104, 1339,
	105, 1339,
	107, 1339,
	108, 1339,
	109, 1339,
	117, 1339,
	118, 1339,
	119, 1339,
	120, 1339,
	121, 1339,
	123, 1339,
	124, 1339,
	125, 1339,
	126, 1339,
	128, 1339,
	129, 1339,
	130, 1339,
	132, 1339,
	133, 1339,
	134, 1339,
	136, 1339,
	137, 1339,
	138, 1339,
	141, 1339,
	142, 1339,
	143, 1339,
	145, 1339,
	146, 1339,
	147, 1339,
	149, 1339,
	150, 1339,
	151, 1339,
	153, 1339,
	154, 1339,
	155, 1339,
	156, 1339,
	157, 1339,
	158, 1339,
	159, 1339,
	160, 1339,
	161, 1339,
	162, 1339,
	163, 1339,
	164, 1339,
	165, 1339,
	166, 1339,
	167, 1339,
	168, 1339,
	169, 1339,
	171, 1339,
	177, 1339,
	178, 1339,
	179, 1339,
	180, 1339,
	184, 1339,
	186, 1339,
	187, 1339,
	188, 1339,
	192, 1339,
	193, 1339,
	194, 1339,
	195, 1339,
	196, 1339,
	197, 1339,
	198, 1339,
	199, 1339,
	200, 1339,
	201, 1339,
	202, 1339,
	203, 1339,
	204, 1339,
	205, 1339,
	207, 1339,
	208, 1339,
	210, 1339,
	211, 1339,
	213, 1339,
	214, 1339,
	215, 1339,
	216, 1339,
	217, 1339,
	218, 1339,
	219, 1339,
	220, 1339,
	221, 1339,
	223, 1339,
	224, 1339,
	226, 1339,
	227, 1339,
	228, 1339,
	229, 1339,
	230, 1339,
	234, 1339,
	235, 1339,
	236, 1339,
	237, 1339,
	240, 1339,
	241, 1339,
	242, 1339,
	244, 1339,
	246, 1339,
	247, 1339,
	249, 1339,
	251, 1339,
	252, 1339,
	253, 1339,
	255, 1339,
	259, 1339,
	260, 1339,
	261, 1339,
	262, 1339,
	263, 1339,
	264, 1339,
	266, 1339,
	267, 1339,
	268, 1339,
	270, 1339,
	271, 1339,
	273, 1339,
	274, 1339,
	277, 1339,
	278, 1339,
	279, 1339,
	280, 1339,
	281, 1339,
	282, 1339,
	283, 1339,
	286, 1339,
	287, 1339,
	288, 1339,
	289, 1339,
	291, 1339,
	292, 1339,
	293, 1339,
	294, 1339,
	295, 1339,
	296, 1339,
	297, 1339,
	298, 1339,
	299, 1339,
	300, 1339,
	301, 1339,
	302, 1339,
	303, 1339,
	304, 1339,
	305, 1339,
	306, 1339,
	307, 1339,
	308, 1339,
	309, 1339,
	310, 1339,
	311, 1339,
	312, 1339,
	314, 1339,
	316, 1339,
	317, 1339,
	318, 1339,
	319, 1339,
	320, 1339,
	321, 1339,
	322, 1339,
	323, 1339,
	324, 1339,
	325, 1339,
	326, 1339,
	327, 1339,
	328, 1339,
	329, 1339,
	330, 1339,
	332, 1339,
	333, 1339,
	335, 1339,
	337, 1339,
	338, 1339,
	340, 1339,
	341, 1339,
	342, 1339,
	343, 1339,
	344, 1339,
	347, 1339,
	351, 1339,
	352, 1339,
	353, 1339,
	356, 1339,
	357, 1339,
	358, 1339,
	360, 1339,
	362, 1339,
	363, 1339,
	364, 1339,
	365, 1339,
	366, 1339,
	367, 1339,
	368, 1339,
	369, 1339,
	370, 1339,
	371, 1339,
	372, 1339,
	373, 1339,
	374, 1339,
	376, 1339,
	377, 1339,
	378, 1339,
	379, 1339,
	380, 1339,
	381, 1339,
	382, 1339,
	383, 1339,
	384, 1339,
	385, 1339,
	386, 1339,
	387, 1339,
	388, 1339,
	389, 1339,
	390, 1339,
	392, 1339,
	393, 1339,
	395, 1339,
	396, 1339,
	397, 1339,
	398, 1339,
	399, 1339,
	400, 1339,
	401, 1339,
	402, 1339,
	403, 1339,
	404, 1339,
	405, 1339,
	406, 1339,
	407, 1339,
	409, 1339,
	411, 1339,
	412, 1339,
	413, 1339,
	419, 1339,
	420, 1339,
	422, 1339,
	423, 1339,
	424, 1339,
	425, 1339,
	426, 1339,
	427, 1339,
	428, 1339,
	429, 1339,
	430, 1339,
	431, 1339,
	433, 1339,
	434, 1339,
	435, 1339,
	437, 1339,
	438, 1339,
	439, 1339,
	440, 1339,
	441, 1339,
	442, 1339,
	443, 1339,
	445, 1339,
	446, 1339,
	447, 1339,
	448, 1339,
	449, 1339,
	450, 1339,
	451, 1339,
	452, 1339,
	453, 1339,
	454, 1339,
	455, 1339,
	456, 1339,
	458, 1339,
	459, 1339,
	460, 1339,
	461, 1339,
	462, 1339,
	463, 1339,
	465, 1339,
	466, 1339,
	467, 1339,
	468, 1339,
	469, 1339,
	470, 1339,
	472, 1339,
	473, 1339,
	474, 1339,
	475, 1339,
	476, 1339,
	477, 1339,
	478, 1339,
	479, 1339,
	481, 1339,
	483, 1339,
	484, 1339,
	485, 1339,
	486, 1339,
	487, 1339,
	488, 1339,
	489, 1339,
	490, 1339,
	491, 1339,
	492, 1339,
	493, 1339,
	494, 1339,
	495, 1339,
	496, 1339,
	497, 1339,
	498, 1339,
	500, 1339,
	501, 1339,
	503, 1339,
	504, 1339,
	506, 1339,
	507, 1339,
	508, 1339,
	509, 1339,
	510, 1339,
	511, 1339,
	512, 1339,
	513, 1339,
	515, 1339,
	516, 1339,
	517, 1339,
	518, 1339,
	519, 1339,
	521, 1339,
	523, 1339,
	524, 1339,
	525, 1339,
	526, 1339,
	527, 1339,
	528, 1339,
	530, 1339,
	531, 1339,
	532, 1339,
	533, 1339,
	535, 1339,
	536, 1339,
	539, 1339,
	540, 1339,
	541, 1339,
	542, 1339,
	543, 1339,
	544, 1339,
	545, 1339,
	547, 1339,
	550, 1339,
	551, 1339,
	552, 1339,
	553, 1339,
	554, 1339,
	555, 1339,
	557, 1339,
	558, 1339,
	559, 1339,
	560, 1339,
	561, 1339,
	562, 1339,
	567, 1339,
	568, 1339,
	569, 1339,
	570, 1339,
	571, 1339,
	572, 1339,
	-2, 0,
	-1, 772,
	190, 2406,
	520, 2406,
	585, 2406,
	605, 2406,
	-2, 0,
	-1, 773,
	190, 2393,
	520, 2393,
	585, 2393,
	605, 2393,
	-2, 0,
	-1, 775,
	190, 2658,
	520, 2658,
	585, 2658,
	605, 2658,
	-2, 0,
	-1, 778,
	190, 2518,
	520, 2518,
	585, 2518,
	605, 2518,
	-2, 0,
	-1, 779,
	190, 2699,
	520, 2699,
	585, 2699,
	605, 2699,
	-2, 0,
	-1, 787,
	190, 2545,
	520, 2545,
	585, 2545,
	605, 2545,
	-2, 717,
	-1, 822,
	605, 2342,
	608, 2342,
	-2, 1017,
	-1, 823,
	605, 2344,
	608, 2344,
	-2, 1018,
	-1, 824,
	605, 2343,
	608, 2343,
	-2, 1019,
	-1, 825,
	608, 2268,
	-2, 1020,
	-1, 850,
	185, 267,
	-2, 0,
	-1, 874,
	43, 2315,
	-2, 0,
	-1, 875,
	557, 1317,
	-2, 1097,
	-1, 891,
	4, 1748,
	21, 1748,
	22, 1748,
	23, 1748,
	24, 1748,
	25, 1748,
	26, 1748,
	27, 1748,
	29, 1748,
	30, 1748,
	36, 1748,
	41, 1748,
	42, 1748,
	44, 1748,
	45, 1748,
	46, 1748,
	47, 1748,
	48, 1748,
	49, 1748,
	50, 1748,
	51, 1748,
	53, 1748,
	54, 1748,
	55, 1748,
	56, 1748,
	58, 1748,
	59, 1748,
	60, 1748,
	61, 1748,
	62, 1748,
	63, 1748,
	64, 1748,
	68, 1748,
	69, 1748,
	70, 1748,
	71, 1748,
	73, 1748,
	74, 1748,
	75, 1748,
	79, 1748,
	80, 1748,
	81, 1748,
	82, 1748,
	83, 1748,
	84, 1748,
	85, 1748,
	88, 1748,
	89, 1748,
	90, 1748,
	91, 1748,
	92, 1748,
	94, 1748,
	96, 1748,
	97, 1748,
	98, 1748,
	99, 1748,
	100, 1748,
	101, 1748,
	103, 1748,
	104, 1748,
	105, 1748,
	107, 1748,
	108, 1748,
	109, 1748,
	117, 1748,
	118, 1748,
	119, 1748,
	120, 1748,
	121, 1748,
	123, 1748,
	124, 1748,
	125, 1748,
	126, 1748,
	128, 1748,
	129, 1748,
	130, 1748,
	132, 1748,
	133, 1748,
	134, 1748,
	136, 1748,
	137, 1748,
	138, 1748,
	141, 1748,
	142, 1748,
	143, 1748,
	145, 1748,
	146, 1748,
	147, 1748,
	149, 1748,
	150, 1748,
	151, 1748,
	153, 1748,
	154, 1748,
	155, 1748,
	156, 1748,
	157, 1748,
	158, 1748,
	159, 1748,
	160, 1748,
	161, 1748,
	162, 1748,
	163, 1748,
	164, 1748,
	165, 1748,
	166, 1748,
	167, 1748,
	168, 1748,
	169, 1748,
	171, 1748,
	177, 1748,
	178, 1748,
	179, 1748,
	180, 1748,
	184, 1748,
	186, 1748,
	187, 1748,
	188, 1748,
	192, 1748,
	193, 1748,
	194, 1748,
	195, 1748,
	196, 1748,
	197, 1748,
	198, 1748,
	199, 1748,
	200, 1748,
	201, 1748,
	202, 1748,
	203, 1748,
	204, 1748,
	205, 1748,
	207, 1748,
	208, 1748,
	210, 1748,
	211, 1748,
	213, 1748,
	214, 1748,
	215, 1748,
	216, 1748,
	217, 1748,
	218, 1748,
	219, 1748,
	220, 1748,
	221, 1748,
	223, 1748,
	224, 1748,
	226, 1748,
	227, 1748,
	228, 1748,
	229, 1748,
	230, 1748,
	234, 1748,
	235, 1748,
	236, 1748,
	237, 1748,
	240, 1748,
	241, 1748,
	242, 1748,
	244, 1748,
	246, 1748,
	247, 1748,
	249, 1748,
	251, 1748,
	252, 1748,
	253, 1748,
	255, 1748,
	259, 1748,
	260, 1748,
	261, 1748,
	262, 1748,
	263, 1748,
	264, 1748,
	266, 1748,
	267, 1748,
	268, 1748,
	270, 1748,
	271, 1748,
	273, 1748,
	274, 1748,
	277, 1748,
	278, 1748,
	279, 1748,
	280, 1748,
	281, 1748,
	282, 1748,
	283, 1748,
	286, 1748,
	287, 1748,
	288, 1748,
	289, 1748,
	291, 1748,
	292, 1748,
	293, 1748,
	294, 1748,
	295, 1748,
	296, 1748,
	297, 1748,
	298, 1748,
	299, 1748,
	300, 1748,
	301, 1748,
	302, 1748,
	303, 1748,
	304, 1748,
	305, 1748,
	306, 1748,
	307, 1748,
	308, 1748,
	309, 1748,
	310, 1748,
	311, 1748,
	312, 1748,
	314, 1748,
	316, 1748,
	317, 1748,
	318, 1748,
	319, 1748,
	320, 1748,
	321, 1748,
	322, 1748,
	323, 1748,
	324, 1748,
	325, 1748,
	326, 1748,
	327, 1748,
	328, 1748,
	329, 1748,
	330, 1748,
	332, 1748,
	333, 1748,
	335, 1748,
	337, 1748,
	338, 1748,
	340, 1748,
	341, 1748,
	342, 1748,
	343, 1748,
	344, 1748,
	347, 1748,
	351, 1748,
	352, 1748,
	353, 1748,
	356, 1748,
	357, 1748,
	358, 1748,
	360, 1748,
	362, 1748,
	363, 1748,
	364, 1748,
	365, 1748,
	366, 1748,
	367, 1748,
	368, 1748,
	369, 1748,
	370, 1748,
	371, 1748,
	372, 1748,
	373, 1748,
	374, 1748,
	376, 1748,
	377, 1748,
	378, 1748,
	379, 1748,
	380, 1748,
	381, 1748,
	382, 1748,
	383, 1748,
	384, 1748,
	385, 1748,
	386, 1748,
	387, 1748,
	388, 1748,
	389, 1748,
	390, 1748,
	392, 1748,
	393, 1748,
	395, 1748,
	396, 1748,
	397, 1748,
	398, 1748,
	399, 1748,
	400, 1748,
	401, 1748,
	402, 1748,
	403, 1748,
	404, 1748,
	405, 1748,
	406, 1748,
	407, 1748,
	409, 1748,
	411, 1748,
	412, 1748,
	413, 1748,
	419, 1748,
	420, 1748,
	422, 1748,
	423, 1748,
	424, 1748,
	425, 1748,
	426, 1748,
	427, 1748,
	428, 1748,
	429, 1748,
	430, 1748,
	431, 1748,
	433, 1748,
	434, 1748,
	435, 1748,
	437, 1748,
	438, 1748,
	439, 1748,
	440, 1748,
	441, 1748,
	442, 1748,
	443, 1748,
	445, 1748,
	446, 1748,
	447, 1748,
	448, 1748,
	449, 1748,
	450, 1748,
	451, 1748,
	452, 1748,
	453, 1748,
	454, 1748,
	455, 1748,
	456, 1748,
	458, 1748,
	459, 1748,
	460, 1748,
	461, 1748,
	462, 1748,
	463, 1748,
	465, 1748,
	466, 1748,
	467, 1748,
	468, 1748,
	469, 1748,
	470, 1748,
	472, 1748,
	473, 1748,
	474, 1748,
	475, 1748,
	476, 1748,
	477, 1748,
	478, 1748,
	479, 1748,
	481, 1748,
	483, 1748,
	484, 1748,
	485, 1748,
	486, 1748,
	487, 1748,
	488, 1748,
	489, 1748,
	490, 1748,
	491, 1748,
	492, 1748,
	493, 1748,
	494, 1748,
	495, 1748,
	496, 1748,
	497, 1748,
	498, 1748,
	500, 1748,
	501, 1748,
	503, 1748,
	504, 1748,
	506, 1748,
	507, 1748,
	508, 1748,
	509, 1748,
	510, 1748,
	511, 1748,
	512, 1748,
	513, 1748,
	515, 1748,
	516, 1748,
	517, 1748,
	518, 1748,
	519, 1748,
	521, 1748,
	523, 1748,
	524, 1748,
	525, 1748,
	526, 1748,
	527, 1748,
	528, 1748,
	530, 1748,
	531, 1748,
	532, 1748,
	533, 1748,
	535, 1748,
	536, 1748,
	539, 1748,
	540, 1748,
	541, 1748,
	542, 1748,
	543, 1748,
	544, 1748,
	545, 1748,
	547, 1748,
	550, 1748,
	551, 1748,
	552, 1748,
	553, 1748,
	554, 1748,
	555, 1748,
	557, 1748,
	558, 1748,
	559, 1748,
	560, 1748,
	561, 1748,
	562, 1748,
	567, 1748,
	568, 1748,
	569, 1748,
	570, 1748,
	571, 1748,
	572, 1748,
	-2, 0,
	-1, 901,
	263, 418,
	-2, 0,
	-1, 978,
	397, 897,
	463, 897,
	504, 897,
	525, 897,
	-2, 0,
	-1, 979,
	397, 896,
	463, 896,
	504, 896,
	525, 896,
	-2, 828,
	-1, 983,
	1, 949,
	602, 949,
	604, 949,
	606, 949,
	-2, 0,
	-1, 985,
	1, 871,
	602, 871,
	604, 871,
	606, 871,
	-2, 0,
	-1, 986,
	1, 875,
	602, 875,
	604, 875,
	606, 875,
	-2, 0,
	-1, 987,
	1, 1016,
	185, 1016,
	602, 1016,
	604, 1016,
	606, 1016,
	-2, 0,
	-1, 995,
	1, 902,
	602, 902,
	604, 902,
	606, 902,
	-2, 0,
	-1, 1002,
	1, 949,
	602, 949,
	604, 949,
	606, 949,
	-2, 0,
	-1, 1003,
	1, 951,
	602, 951,
	604, 951,
	606, 951,
	-2, 0,
	-1, 1004,
	1, 954,
	602, 954,
	604, 954,
	606, 954,
	-2, 0,
	-1, 1010,
	1, 980,
	602, 980,
	604, 980,
	606, 980,
	-2, 0,
	-1, 1011,
	1, 982,
	602, 982,
	604, 982,
	606, 982,
	-2, 0,
	-1, 1016,
	1, 1010,
	602, 1010,
	604, 1010,
	606, 1010,
	-2, 0,
	-1, 1068,
	172, 1618,
	185, 1618,
	276, 1618,
	345, 1618,
	-2, 1554,
	-1, 1083,
	172, 1617,
	185, 1617,
	276, 1617,
	345, 1617,
	-2, 1551,
	-1, 1110,
	605, 2341,
	-2, 725,
	-1, 1139,
	5, 2333,
	603, 2331,
	-2, 2322,
	-1, 1147,
	5, 2354,
	603, 2351,
	-2, 2342,
	-1, 1148,
	5, 2355,
	603, 2352,
	-2, 2343,
	-1, 1156,
	605, 2339,
	-2, 2321,
	-1, 1157,
	603, 2783,
	-2, 2340,
	-1, 1180,
	603, 2782,
	-2, 2356,
	-1, 1181,
	5, 1823,
	-2, 2753,
	-1, 1182,
	5, 1824,
	-2, 2754,
	-1, 1183,
	5, 1825,
	-2, 2768,
	-1, 1184,
	5, 1826,
	-2, 2732,
	-1, 1185,
	5, 1827,
	-2, 2766,
	-1, 1186,
	5, 1835,
	-2, 2745,
	-1, 1187,
	5, 1822,
	-2, 2741,
	-1, 1188,
	5, 1822,
	-2, 2740,
	-1, 1189,
	5, 1822,
	-2, 2759,
	-1, 1190,
	5, 1833,
	-2, 2734,
	-1, 1191,
	5, 1838,
	-2, 2733,
	-1, 1192,
	5, 1840,
	-2, 2778,
	-1, 1195,
	5, 1862,
	-2, 2771,
	-1, 1196,
	5, 1854,
	-2, 2772,
	-1, 1197,
	5, 1862,
	-2, 2773,
	-1, 1198,
	5, 1858,
	-2, 2774,
	-1, 1199,
	5, 1808,
	-2, 2746,
	-1, 1200,
	5, 1809,
	-2, 2747,
	-1, 1201,
	5, 1810,
	-2, 2735,
	-1, 1229,
	5, 1845,
	-2, 2779,
	-1, 1230,
	5, 1846,
	-2, 2769,
	-1, 1231,
	5, 1847,
	558, 1847,
	-2, 2736,
	-1, 1232,
	5, 1848,
	558, 1848,
	-2, 2737,
	-1, 1269,
	603, 2351,
	-2, 2342,
	-1, 1270,
	603, 2352,
	-2, 2343,
	-1, 1367,
	190, 2699,
	520, 2699,
	585, 2699,
	605, 2699,
	-2, 0,
	-1, 1372,
	1, 701,
	606, 701,
	-2, 1466,
	-1, 1502,
	364, 2316,
	422, 2316,
	465, 2316,
	595, 2316,
	-2, 2306,
	-1, 1508,
	190, 129,
	270, 129,
	332, 129,
	562, 129,
	-2, 2695,
	-1, 1509,
	190, 130,
	270, 130,
	332, 130,
	562, 130,
	-2, 2451,
	-1, 1510,
	190, 131,
	270, 131,
	332, 131,
	562, 131,
	-2, 2620,
	-1, 1516,
	607, 2316,
	-2, 2318,
	-1, 1524,
	1, 1314,
	427, 1275,
	465, 1275,
	579, 1275,
	602, 1314,
	604, 1314,
	606, 1314,
	-2, 1603,
	-1, 1530,
	206, 1411,
	225, 1411,
	435, 1411,
	-2, 0,
	-1, 1586,
	405, 1096,
	557, 1096,
	-2, 413,
	-1, 1603,
	43, 2314,
	-2, 1062,
	-1, 1610,
	1, 1314,
	602, 1314,
	604, 1314,
	606, 1314,
	-2, 1603,
	-1, 1618,
	4, 1339,
	21, 1339,
	22, 1339,
	23, 1339,
	24, 1339,
	25, 1339,
	26, 1339,
	27, 1339,
	29, 1339,
	30, 1339,
	36, 1339,
	41, 1339,
	42, 1339,
	44, 1339,
	45, 1339,
	46, 1339,
	47, 1339,
	48, 1339,
	49, 1339,
	50, 1339,
	51, 1339,
	53, 1339,
	54, 1339,
	55, 1339,
	56, 1339,
	58, 1339,
	59, 1339,
	60, 1339,
	61, 1339,
	62, 1339,
	63, 1339,
	64, 1339,
	68, 1339,
	69, 1339,
	70, 1339,
	71, 1339,
	73, 1339,
	74, 1339,
	75, 1339,
	79, 1339,
	80, 1339,
	81, 1339,
	82, 1339,
	83, 1339,
	84, 1339,
	85, 1339,
	88, 1339,
	89, 1339,
	90, 1339,
	91, 1339,
	92, 1339,
	94, 1339,
	96, 1339,
	97, 1339,
	98, 1339,
	99, 1339,
	100, 1339,
	101, 1339,
	103, 1339,
	104, 1339,
	105, 1339,
	107, 1339,
	108, 1339,
	109, 1339,
	117, 1339,
	118, 1339,
	119, 1339,
	120, 1339,
	121, 1339,
	123, 1339,
	124, 1339,
	125, 1339,
	126, 1339,
	128, 1339,
	129, 1339,
	130, 1339,
	132, 1339,
	133, 1339,
	134, 1339,
	136, 1339,
	137, 1339,
	138, 1339,
	141, 1339,
	142, 1339,
	143, 1339,
	145, 1339,
	146, 1339,
	147, 1339,
	149, 1339,
	150, 1339,
	151, 1339,
	153, 1339,
	154, 1339,
	155, 1339,
	156, 1339,
	157, 1339,
	158, 1339,
	159, 1339,
	160, 1339,
	161, 1339,
	162, 1339,
	163, 1339,
	164, 1339,
	165, 1339,
	166, 1339,
	167, 1339,
	168, 1339,
	169, 1339,
	177, 1339,
	178, 1339,
	179, 1339,
	180, 1339,
	184, 1339,
	186, 1339,
	187, 1339,
	188, 1339,
	192, 1339,
	193, 1339,
	194, 1339,
	195, 1339,
	196, 1339,
	197, 1339,
	198, 1339,
	199, 1339,
	200, 1339,
	201, 1339,
	202, 1339,
	203, 1339,
	204, 1339,
	205, 1339,
	207, 1339,
	208, 1339,
	210, 1339,
	211, 1339,
	213, 1339,
	214, 1339,
	215, 1339,
	216, 1339,
	217, 1339,
	218, 1339,
	219, 1339,
	220, 1339,
	221, 1339,
	223, 1339,
	224, 1339,
	226, 1339,
	227, 1339,
	228, 1339,
	229, 1339,
	230, 1339,
	235, 1339,
	236, 1339,
	237, 1339,
	240, 1339,
	241, 1339,
	242, 1339,
	244, 1339,
	246, 1339,
	247, 1339,
	249, 1339,
	251, 1339,
	252, 1339,
	253, 1339,
	255, 1339,
	259, 1339,
	260, 1339,
	261, 1339,
	262, 1339,
	263, 1339,
	264, 1339,
	266, 1339,
	267, 1339,
	268, 1339,
	270, 1339,
	271, 1339,
	273, 1339,
	274, 1339,
	277, 1339,
	278, 1339,
	279, 1339,
	280, 1339,
	281, 1339,
	282, 1339,
	283, 1339,
	286, 1339,
	287, 1339,
	288, 1339,
	289, 1339,
	291, 1339,
	292, 1339,
	293, 1339,
	294, 1339,
	295, 1339,
	296, 1339,
	297, 1339,
	298, 1339,
	299, 1339,
	300, 1339,
	301, 1339,
	302, 1339,
	303, 1339,
	304, 1339,
	305, 1339,
	306, 1339,
	307, 1339,
	308, 1339,
	309, 1339,
	310, 1339,
	311, 1339,
	312, 1339,
	314, 1339,
	316, 1339,
	317, 1339,
	318, 1339,
	319, 1339,
	320, 1339,
	321, 1339,
	322, 1339,
	323, 1339,
	324, 1339,
	325, 1339,
	326, 1339,
	327, 1339,
	328, 1339,
	329, 1339,
	330, 1339,
	332, 1339,
	333, 1339,
	337, 1339,
	338, 1339,
	340, 1339,
	341, 1339,
	342, 1339,
	343, 1339,
	344, 1339,
	347, 1339,
	349, 1339,
	351, 1339,
	352, 1339,
	353, 1339,
	356, 1339,
	357, 1339,
	358, 1339,
	360, 1339,
	362, 1339,
	363, 1339,
	364, 1339,
	365, 1339,
	366, 1339,
	367, 1339,
	368, 1339,
	369, 1339,
	370, 1339,
	371, 1339,
	372, 1339,
	373, 1339,
	374, 1339,
	376, 1339,
	377, 1339,
	378, 1339,
	379, 1339,
	380, 1339,
	381, 1339,
	382, 1339,
	383, 1339,
	384, 1339,
	385, 1339,
	386, 1339,
	387, 1339,
	388, 1339,
	389, 1339,
	390, 1339,
	392, 1339,
	393, 1339,
	395, 1339,
	396, 1339,
	397, 1339,
	398, 1339,
	399, 1339,
	400, 1339,
	401, 1339,
	402, 1339,
	403, 1339,
	404, 1339,
	405, 1339,
	406, 1339,
	407, 1339,
	409, 1339,
	411, 1339,
	412, 1339,
	413, 1339,
	419, 1339,
	420, 1339,
	422, 1339,
	423, 1339,
	424, 1339,
	425, 1339,
	426, 1339,
	427, 1339,
	428, 1339,
	429, 1339,
	430, 1339,
	431, 1339,
	433, 1339,
	434, 1339,
	435, 1339,
	437, 1339,
	438, 1339,
	439, 1339,
	440, 1339,
	441, 1339,
	442, 1339,
	443, 1339,
	445, 1339,
	446, 1339,
	447, 1339,
	448, 1339,
	449, 1339,
	450, 1339,
	451, 1339,
	452, 1339,
	453, 1339,
	454, 1339,
	455, 1339,
	456, 1339,
	458, 1339,
	459, 1339,
	460, 1339,
	461, 1339,
	462, 1339,
	463, 1339,
	465, 1339,
	466, 1339,
	467, 1339,
	468, 1339,
	469, 1339,
	470, 1339,
	472, 1339,
	473, 1339,
	474, 1339,
	475, 1339,
	476, 1339,
	477, 1339,
	478, 1339,
	479, 1339,
	481, 1339,
	483, 1339,
	484, 1339,
	485, 1339,
	486, 1339,
	487, 1339,
	488, 1339,
	489, 1339,
	490, 1339,
	491, 1339,
	492, 1339,
	493, 1339,
	494, 1339,
	495, 1339,
	496, 1339,
	497, 1339,
	498, 1339,
	500, 1339,
	501, 1339,
	503, 1339,
	504, 1339,
	506, 1339,
	507, 1339,
	508, 1339,
	509, 1339,
	510, 1339,
	511, 1339,
	512, 1339,
	513, 1339,
	515, 1339,
	516, 1339,
	517, 1339,
	518, 1339,
	519, 1339,
	521, 1339,
	523, 1339,
	524, 1339,
	525, 1339,
	526, 1339,
	527, 1339,
	528, 1339,
	530, 1339,
	531, 1339,
	532, 1339,
	533, 1339,
	535, 1339,
	536, 1339,
	539, 1339,
	540, 1339,
	541, 1339,
	542, 1339,
	543, 1339,
	544, 1339,
	545, 1339,
	547, 1339,
	550, 1339,
	551, 1339,
	552, 1339,
	553, 1339,
	554, 1339,
	555, 1339,
	557, 1339,
	558, 1339,
	559, 1339,
	560, 1339,
	561, 1339,
	562, 1339,
	567, 1339,
	568, 1339,
	569, 1339,
	570, 1339,
	571, 1339,
	572, 1339,
	-2, 0,
	-1, 1641,
	1, 558,
	602, 558,
	604, 558,
	606, 558,
	-2, 1574,
	-1, 1644,
	4, 2777,
	11, 2777,
	12, 2777,
	14, 2777,
	15, 2777,
	16, 2777,
	17, 2777,
	18, 2777,
	19, 2777,
	21, 2777,
	22, 2777,
	23, 2777,
	24, 2777,
	25, 2777,
	26, 2777,
	27, 2777,
	29, 2777,
	30, 2777,
	33, 2777,
	34, 2777,
	36, 2777,
	38, 2777,
	41, 2777,
	42, 2777,
	44, 2777,
	45, 2777,
	46, 2777,
	47, 2777,
	48, 2777,
	49, 2777,
	50, 2777,
	51, 2777,
	53, 2777,
	54, 2777,
	55, 2777,
	56, 2777,
	58, 2777,
	59, 2777,
	60, 2777,
	61, 2777,
	62, 2777,
	63, 2777,
	64, 2777,
	67, 2777,
	68, 2777,
	69, 2777,
	70, 2777,
	71, 2777,
	73, 2777,
	74, 2777,
	75, 2777,
	76, 2777,
	79, 2777,
	80, 2777,
	81, 2777,
	82, 2777,
	83, 2777,
	84, 2777,
	85, 2777,
	86, 2777,
	88, 2777,
	89, 2777,
	90, 2777,
	91, 2777,
	92, 2777,
	94, 2777,
	95, 2777,
	96, 2777,
	97, 2777,
	98, 2777,
	99, 2777,
	100, 2777,
	101, 2777,
	103, 2777,
	104, 2777,
	105, 2777,
	106, 2777,
	107, 2777,
	108, 2777,
	109, 2777,
	117, 2777,
	118, 2777,
	119, 2777,
	120, 2777,
	121, 2777,
	123, 2777,
	124, 2777,
	125, 2777,
	126, 2777,
	128, 2777,
	129, 2777,
	130, 2777,
	132, 2777,
	133, 2777,
	134, 2777,
	136, 2777,
	137, 2777,
	138, 2777,
	141, 2777,
	142, 2777,
	143, 2777,
	145, 2777,
	146, 2777,
	147, 2777,
	149, 2777,
	150, 2777,
	151, 2777,
	153, 2777,
	154, 2777,
	155, 2777,
	156, 2777,
	157, 2777,
	158, 2777,
	159, 2777,
	160, 2777,
	161, 2777,
	162, 2777,
	163, 2777,
	164, 2777,
	165, 2777,
	166, 2777,
	167, 2777,
	168, 2777,
	169, 2777,
	173, 2777,
	174, 2777,
	175, 2777,
	176, 2777,
	177, 2777,
	178, 2777,
	179, 2777,
	180, 2777,
	183, 2777,
	184, 2777,
	186, 2777,
	187, 2777,
	188, 2777,
	191, 2777,
	192, 2777,
	193, 2777,
	194, 2777,
	195, 2777,
	196, 2777,
	197, 2777,
	198, 2777,
	199, 2777,
	200, 2777,
	201, 2777,
	202, 2777,
	203, 2777,
	204, 2777,
	205, 2777,
	207, 2777,
	208, 2777,
	210, 2777,
	211, 2777,
	213, 2777,
	214, 2777,
	215, 2777,
	216, 2777,
	217, 2777,
	218, 2777,
	219, 2777,
	220, 2777,
	221, 2777,
	222, 2777,
	223, 2777,
	224, 2777,
	225, 2777,
	226, 2777,
	227, 2777,
	228, 2777,
	229, 2777,
	230, 2777,
	232, 2777,
	233, 2777,
	235, 2777,
	236, 2777,
	237, 2777,
	239, 2777,
	240, 2777,
	241, 2777,
	242, 2777,
	244, 2777,
	246, 2777,
	247, 2777,
	248, 2777,
	249, 2777,
	250, 2777,
	251, 2777,
	252, 2777,
	253, 2777,
	254, 2777,
	255, 2777,
	257, 2777,
	258, 2777,
	259, 2777,
	260, 2777,
	261, 2777,
	262, 2777,
	263, 2777,
	264, 2777,
	266, 2777,
	267, 2777,
	268, 2777,
	270, 2777,
	271, 2777,
	272, 2777,
	273, 2777,
	274, 2777,
	275, 2777,
	277, 2777,
	278, 2777,
	279, 2777,
	280, 2777,
	281, 2777,
	282, 2777,
	283, 2777,
	286, 2777,
	287, 2777,
	288, 2777,
	289, 2777,
	290, 2777,
	291, 2777,
	292, 2777,
	293, 2777,
	294, 2777,
	295, 2777,
	296, 2777,
	297, 2777,
	298, 2777,
	299, 2777,
	300, 2777,
	301, 2777,
	302, 2777,
	303, 2777,
	304, 2777,
	305, 2777,
	306, 2777,
	307, 2777,
	308, 2777,
	309, 2777,
	310, 2777,
	311, 2777,
	312, 2777,
	314, 2777,
	315, 2777,
	316, 2777,
	317, 2777,
	318, 2777,
	319, 2777,
	320, 2777,
	321, 2777,
	322, 2777,
	323, 2777,
	324, 2777,
	325, 2777,
	326, 2777,
	327, 2777,
	328, 2777,
	329, 2777,
	330, 2777,
	332, 2777,
	333, 2777,
	336, 2777,
	337, 2777,
	338, 2777,
	340, 2777,
	341, 2777,
	342, 2777,
	343, 2777,
	344, 2777,
	347, 2777,
	351, 2777,
	352, 2777,
	353, 2777,
	354, 2777,
	356, 2777,
	357, 2777,
	358, 2777,
	360, 2777,
	362, 2777,
	363, 2777,
	364, 2777,
	365, 2777,
	366, 2777,
	367, 2777,
	368, 2777,
	369, 2777,
	370, 2777,
	371, 2777,
	372, 2777,
	373, 2777,
	374, 2777,
	376, 2777,
	377, 2777,
	378, 2777,
	379, 2777,
	380, 2777,
	381, 2777,
	382, 2777,
	383, 2777,
	384, 2777,
	385, 2777,
	386, 2777,
	387, 2777,
	388, 2777,
	389, 2777,
	390, 2777,
	392, 2777,
	393, 2777,
	395, 2777,
	396, 2777,
	397, 2777,
	398, 2777,
	399, 2777,
	400, 2777,
	401, 2777,
	402, 2777,
	403, 2777,
	404, 2777,
	405, 2777,
	406, 2777,
	407, 2777,
	409, 2777,
	411, 2777,
	412, 2777,
	413, 2777,
	419, 2777,
	420, 2777,
	421, 2777,
	422, 2777,
	423, 2777,
	424, 2777,
	425, 2777,
	426, 2777,
	427, 2777,
	428, 2777,
	429, 2777,
	430, 2777,
	431, 2777,
	433, 2777,
	434, 2777,
	435, 2777,
	436, 2777,
	437, 2777,
	438, 2777,
	439, 2777,
	440, 2777,
	441, 2777,
	442, 2777,
	443, 2777,
	444, 2777,
	445, 2777,
	446, 2777,
	447, 2777,
	448, 2777,
	449, 2777,
	450, 2777,
	451, 2777,
	452, 2777,
	453, 2777,
	454, 2777,
	455, 2777,
	456, 2777,
	458, 2777,
	459, 2777,
	460, 2777,
	461, 2777,
	462, 2777,
	463, 2777,
	465, 2777,
	466, 2777,
	467, 2777,
	468, 2777,
	469, 2777,
	470, 2777,
	471, 2777,
	472, 2777,
	473, 2777,
	474, 2777,
	475, 2777,
	476, 2777,
	477, 2777,
	478, 2777,
	479, 2777,
	481, 2777,
	483, 2777,
	484, 2777,
	485, 2777,
	486, 2777,
	487, 2777,
	488, 2777,
	489, 2777,
	490, 2777,
	491, 2777,
	492, 2777,
	493, 2777,
	494, 2777,
	495, 2777,
	496, 2777,
	497, 2777,
	498, 2777,
	500, 2777,
	501, 2777,
	502, 2777,
	503, 2777,
	504, 2777,
	506, 2777,
	507, 2777,
	508, 2777,
	509, 2777,
	510, 2777,
	511, 2777,
	512, 2777,
	513, 2777,
	515, 2777,
	516, 2777,
	517, 2777,
	518, 2777,
	519, 2777,
	521, 2777,
	523, 2777,
	524, 2777,
	525, 2777,
	526, 2777,
	527, 2777,
	528, 2777,
	530, 2777,
	531, 2777,
	532, 2777,
	533, 2777,
	535, 2777,
	536, 2777,
	539, 2777,
	540, 2777,
	541, 2777,
	542, 2777,
	543, 2777,
	544, 2777,
	545, 2777,
	547, 2777,
	550, 2777,
	551, 2777,
	552, 2777,
	553, 2777,
	554, 2777,
	555, 2777,
	557, 2777,
	558, 2777,
	559, 2777,
	560, 2777,
	561, 2777,
	562, 2777,
	567, 2777,
	568, 2777,
	569, 2777,
	570, 2777,
	571, 2777,
	572, 2777,
	573, 2777,
	575, 2777,
	583, 2777,
	584, 2777,
	585, 2777,
	586, 2777,
	587, 2777,
	588, 2777,
	590, 2777,
	591, 2777,
	592, 2777,
	593, 2777,
	594, 2777,
	595, 2777,
	596, 2777,
	597, 2777,
	598, 2777,
	601, 2777,
	604, 2777,
	605, 2777,
	607, 2777,
	608, 2777,
	-2, 0,
	-1, 1649,
	190, 2658,
	520, 2658,
	585, 2658,
	605, 2658,
	-2, 0,
	-1, 1702,
	397, 897,
	463, 897,
	504, 897,
	525, 897,
	-2, 0,
	-1, 1713,
	1, 1411,
	602, 1411,
	604, 1411,
	606, 1411,
	-2, 0,
	-1, 1730,
	1, 892,
	602, 892,
	604, 892,
	606, 892,
	-2, 0,
	-1, 1731,
	1, 936,
	602, 936,
	604, 936,
	606, 936,
	-2, 0,
	-1, 1732,
	1, 944,
	602, 944,
	604, 944,
	606, 944,
	-2, 0,
	-1, 1735,
	1, 901,
	602, 901,
	604, 901,
	606, 901,
	-2, 0,
	-1, 1737,
	1, 907,
	602, 907,
	604, 907,
	606, 907,
	-2, 0,
	-1, 1740,
	1, 903,
	602, 903,
	604, 903,
	606, 903,
	-2, 0,
	-1, 1745,
	1, 917,
	602, 917,
	604, 917,
	606, 917,
	-2, 0,
	-1, 1776,
	1, 2641,
	602, 2641,
	604, 2641,
	605, 2641,
	606, 2641,
	-2, 0,
	-1, 1780,
	1, 991,
	602, 991,
	604, 991,
	606, 991,
	-2, 0,
	-1, 1797,
	1, 1461,
	606, 1461,
	-2, 1466,
	-1, 1800,
	172, 1617,
	185, 1617,
	276, 1617,
	345, 1617,
	-2, 1555,
	-1, 1900,
	152, 1576,
	172, 1576,
	185, 1576,
	243, 1576,
	276, 1576,
	345, 1576,
	355, 1576,
	537, 1576,
	-2, 2027,
	-1, 1961,
	604, 2202,
	-2, 0,
	-1, 1996,
	152, 1576,
	172, 1576,
	185, 1576,
	243, 1576,
	276, 1576,
	345, 1576,
	355, 1576,
	537, 1576,
	-2, 1709,
	-1, 2035,
	520, 2655,
	605, 2655,
	608, 2655,
	-2, 0,
	-1, 2052,
	603, 1850,
	-2, 1838,
	-1, 2084,
	190, 2655,
	605, 2655,
	608, 2655,
	-2, 0,
	-1, 2127,
	1, 703,
	606, 703,
	-2, 1466,
	-1, 2272,
	225, 262,
	-2, 2350,
	-1, 2273,
	225, 263,
	-2, 315,
	-1, 2382,
	1, 894,
	602, 894,
	604, 894,
	606, 894,
	-2, 0,
	-1, 2383,
	1, 938,
	602, 938,
	604, 938,
	606, 938,
	-2, 0,
	-1, 2384,
	1, 946,
	602, 946,
	604, 946,
	606, 946,
	-2, 0,
	-1, 2385,
	1, 993,
	602, 993,
	604, 993,
	606, 993,
	-2, 0,
	-1, 2426,
	1, 919,
	602, 919,
	604, 919,
	606, 919,
	-2, 0,
	-1, 2446,
	1, 976,
	602, 976,
	604, 976,
	606, 976,
	-2, 0,
	-1, 2493,
	442, 1644,
	443, 1644,
	-2, 1883,
	-1, 2524,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1903,
	-1, 2525,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1904,
	-1, 2526,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1905,
	-1, 2527,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1906,
	-1, 2528,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1907,
	-1, 2529,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1908,
	-1, 2530,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1909,
	-1, 2531,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1910,
	-1, 2543,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1922,
	-1, 2544,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1923,
	-1, 2545,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1924,
	-1, 2549,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1931,
	-1, 2555,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1935,
	-1, 2557,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1943,
	-1, 2558,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1944,
	-1, 2559,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1945,
	-1, 2560,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1946,
	-1, 2734,
	5, 2354,
	190, 2213,
	603, 2351,
	-2, 2342,
	-1, 2735,
	190, 2214,
	-2, 2728,
	-1, 2736,
	190, 2215,
	-2, 2544,
	-1, 2737,
	190, 2216,
	-2, 2424,
	-1, 2738,
	190, 2217,
	-2, 2482,
	-1, 2739,
	190, 2218,
	-2, 2529,
	-1, 2740,
	190, 2219,
	-2, 2653,
	-1, 2741,
	190, 2220,
	-2, 2010,
	-1, 2812,
	1, 1710,
	2, 1710,
	106, 1710,
	152, 1710,
	172, 1710,
	185, 1710,
	191, 1710,
	209, 1710,
	212, 1710,
	239, 1710,
	243, 1710,
	254, 1710,
	272, 1710,
	276, 1710,
	315, 1710,
	345, 1710,
	349, 1710,
	355, 1710,
	432, 1710,
	436, 1710,
	537, 1710,
	548, 1710,
	564, 1710,
	565, 1710,
	566, 1710,
	576, 1710,
	602, 1710,
	604, 1710,
	606, 1710,
	608, 1710,
	-2, 1709,
	-1, 2825,
	603, 2323,
	-2, 2337,
	-1, 2827,
	1, 332,
	564, 332,
	-2, 1603,
	-1, 2857,
	603, 1849,
	-2, 1839,
	-1, 3046,
	1, 1314,
	427, 1275,
	465, 1275,
	579, 1275,
	602, 1314,
	604, 1314,
	606, 1314,
	-2, 1603,
	-1, 3221,
	350, 1647,
	-2, 2767,
	-1, 3222,
	350, 1648,
	-2, 2638,
	-1, 3226,
	442, 2279,
	443, 2279,
	-2, 2008,
	-1, 3227,
	442, 2283,
	443, 2283,
	-2, 2009,
	-1, 3228,
	442, 2280,
	443, 2280,
	-2, 2008,
	-1, 3229,
	442, 2284,
	443, 2284,
	-2, 2009,
	-1, 3242,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1933,
	-1, 3243,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1937,
	-1, 3249,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1939,
	-1, 3476,
	1, 698,
	602, 698,
	604, 698,
	606, 698,
	-2, 1466,
	-1, 3653,
	43, 2314,
	-2, 1063,
	-1, 3658,
	1, 1314,
	602, 1314,
	604, 1314,
	606, 1314,
	-2, 1603,
	-1, 3763,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1941,
	-1, 3770,
	248, 0,
	250, 0,
	336, 0,
	-2, 1960,
	-1, 3838,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1989,
	-1, 3839,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1990,
	-1, 3840,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1991,
	-1, 3844,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1995,
	-1, 3845,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1996,
	-1, 3846,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1997,
	-1, 3894,
	603, 2324,
	-2, 2338,
	-1, 4088,
	605, 2884,
	-2, 1529,
	-1, 4143,
	248, 0,
	250, 0,
	336, 0,
	-2, 1961,
	-1, 4146,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1964,
	-1, 4147,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1966,
	-1, 4256,
	605, 2339,
	-2, 1349,
	-1, 4416,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1965,
	-1, 4417,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1967,
	-1, 4428,
	248, 0,
	-2, 2000,
	-1, 4616,
	248, 0,
	-2, 2001,
	-1, 4832,
	50, 0,
	222, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 2731,
}

const sqlPrivate = 57344

const sqlLast = 136759

var sqlAct = [...]int{
	274, 4770, 4654, 5014, 3642, 4946, 3380, 4893, 4662, 3118,
	4819, 4877, 3131, 4831, 4704, 2922, 4843, 4959, 4726, 4769,
	3641, 1139, 4760, 4484, 4801, 4844, 4780, 2269, 2346, 4783,
	4900, 4126, 4845, 4560, 4586, 2176, 4547, 4252, 4466, 1273,
	3803, 4377, 1262, 1345, 2989, 2964, 4531, 4620, 4830, 4366,
	4372, 4330, 2503, 4489, 4304, 3755, 3904, 3494, 4405, 3497,
	4080, 1566, 2358, 4072, 4437, 4357, 3675, 4569, 4350, 3088,
	4359, 712, 4689, 2356, 1338, 824, 4000, 1539, 3235, 2767,
	4233, 1093, 2096, 4253, 2923, 1809, 2572, 3669, 4046, 4382,
	1340, 3004, 2511, 3555, 3626, 4027, 3500, 2039, 4029, 3631,
	1406, 3143, 2109, 824, 2002, 3706, 1084, 4433, 2184, 2354,
	3615, 3077, 3107, 3630, 3708, 3633, 3897, 3608, 784, 3607,
	3104, 2020, 3395, 1499, 4182, 2839, 723, 3102, 2504, 3363,
	3426, 2040, 4125, 3133, 903, 1092, 182, 3403, 1710, 3138,
	2319, 3384, 1971, 2258, 899, 4, 2256, 1667, 3119, 4878,
	3519, 3864, 821, 2196, 3362, 2508, 2650, 2805, 3053, 1947,
	4621, 2652, 1908, 1878, 2585, 268, 3219, 3433, 2807, 894,
	1343, 780, 2257, 3137, 3081, 2212, 3386, 267, 3021, 1605,
	2252, 819, 2240, 3089, 2233, 2164, 1797, 1143, 1317, 2168,
	1387, 2107, 2963, 2641, 2785, 1148, 2569, 2154, 1991, 1972,
	2492, 2475, 2840, 757, 2473, 1642, 3112, 2306, 1608, 1665,
	825, 2946, 826, 3634, 2644, 1331, 2947, 972, 699, 2868,
	2909, 1253, 721, 1942, 1374, 1256, 1568, 4727, 2794, 2804,
	182, 1235, 1981, 2775, 2622, 2730, 1892, 191, 2696, 1988,
	830, 1270, 192, 1810, 2764, 1745, 111, 1811, 765, 2474,
	1730, 2332, 833, 2266, 776, 920, 1640, 2305, 1252, 1328,
	1534, 1633, 1268, 2476, 4894, 4947, 1507, 1150, 830, 2497,
	1124, 44, 713, 716, 725, 43, 41, 814, 875, 740,
	833, 32, 1258, 30, 28, 1233, 1816, 3272, 993, 1796,
	1545, 3878, 876, 3879, 5025, 3266, 5017, 2098, 2784, 2098,
	3694, 3382, 2098, 4840, 3905, 2098, 4457, 895, 2098, 5006,
	2098, 5005, 1538, 2784, 4979, 2784, 4977, 4920, 4488, 4879,
	4488, 2278, 1736, 4880, 4869, 4867, 4864, 4861, 2784, 2784,
	4865, 4862, 4454, 4451, 73, 4828, 898, 897, 4827, 2278,
	4826, 1088, 2278, 4817, 3148, 3684, 2119, 4488, 4815, 4810,
	4805, 74, 4488, 4572, 4488, 4804, 4778, 4746, 1088, 4488,
	4488, 2848, 1146, 3685, 4739, 4738, 4731, 79, 2784, 2784,
	2278, 4703, 4700, 4683, 4618, 2278, 4488, 4320, 2848, 4600,
	4209, 4562, 4507, 4109, 1676, 4563, 2278, 3333, 3334, 4506,
	4495, 4494, 4487, 2278, 2278, 4488, 4488, 1383, 3461, 4444,
	4418, 1236, 1236, 2278, 2848, 4393, 4390, 88, 1078, 3148,
	3694, 4299, 4279, 1383, 4145, 2784, 2784, 1250, 2848, 4096,
	1069, 2116, 2119, 3701, 4090, 1068, 1824, 1825, 3701, 2355,
	4043, 3889, 3887, 3871, 4044, 3890, 3888, 2784, 3787, 3783,
	1089, 3281, 2278, 2784, 3458, 3868, 3700, 3282, 901, 1855,
	3701, 3443, 2870, 3379, 3374, 3373, 1827, 2784, 2784, 2784,
	3324, 49, 3322, 110, 3325, 1287, 3323, 3314, 94, 94,
	107, 3315, 1824, 1825, 3312, 3283, 2844, 3147, 2784, 2784,
	1083, 3148, 1880, 3129, 3128, 2893, 2847, 2342, 2342, 2784,
	2848, 1826, 2837, 2829, 2783, 1855, 2784, 2278, 2784, 3694,
	2777, 1295, 1827, 2647, 2341, 1547, 3333, 3334, 2342, 3351,
	3352, 3353, 1239, 2278, 1240, 2119, 3234, 2784, 2119, 1237,
	4747, 4622, 4613, 4601, 4572, 3148, 3868, 2776, 1880, 95,
	4370, 4320, 2116, 4280, 4109, 1145, 4045, 1826, 2996, 2116,
	2119, 2908, 2133, 2097, 1658, 238, 2189, 1846, 2113, 3083,
	1288, 2277, 3014, 1288, 2906, 1967, 1843, 1533, 3979, 3339,
	3758, 3731, 1989, 2245, 2821, 1712, 3686, 1547, 2820, 2819,
	2818, 2817, 1241, 1238, 1077, 1076, 1075, 1074, 1073, 1072,
	1071, 3348, 1067, 1066, 1824, 1825, 3687, 1857, 1858, 1859,
	1868, 1869, 1870, 240, 2784, 1065, 2648, 1064, 1832, 1063,
	1062, 1061, 1060, 1265, 3192, 4200, 1861, 1855, 238, 4384,
	1059, 3271, 4139, 1058, 1827, 1057, 1056, 1055, 1054, 1053,
	1052, 1559, 1553, 1874, 1051, 1050, 1032, 3333, 3334, 970,
	3351, 3352, 3353, 969, 1849, 1850, 1851, 1852, 968, 967,
	1880, 239, 1824, 1825, 1832, 966, 965, 1854, 1856, 1826,
	964, 963, 1824, 1825, 232, 962, 240, 961, 960, 1846,
	959, 958, 2099, 233, 2099, 957, 3349, 2099, 1843, 956,
	2099, 955, 1827, 2099, 954, 2099, 99, 2649, 3339, 2646,
	953, 952, 1827, 951, 2418, 950, 949, 948, 947, 1546,
	946, 193, 945, 1854, 1856, 944, 943, 942, 941, 940,
	939, 938, 3348, 937, 239, 1847, 936, 1826, 935, 924,
	923, 922, 918, 917, 910, 909, 908, 1826, 1841, 1842,
	3356, 2116, 4854, 893, 2116, 892, 849, 1547, 848, 847,
	846, 837, 190, 102, 836, 835, 106, 834, 2274, 1122,
	800, 1877, 791, 3355, 790, 789, 1849, 1850, 1851, 1852,
	2116, 1847, 771, 262, 193, 261, 1832, 4157, 1350, 1148,
	260, 238, 238, 259, 258, 257, 256, 255, 254, 253,
	902, 252, 251, 250, 153, 153, 1264, 238, 249, 3914,
	1877, 3684, 248, 247, 246, 3349, 1148, 1148, 1148, 245,
	244, 243, 242, 241, 3883, 1865, 3702, 3429, 1875, 3339,
	3294, 3277, 3268, 1538, 1409, 1854, 1856, 3172, 1148, 240,
	240, 3097, 3063, 2679, 1832, 1350, 1288, 2852, 4386, 3377,
	3350, 1871, 2826, 1872, 1832, 240, 1877, 1992, 2811, 2677,
	1841, 1842, 2465, 2162, 1680, 157, 2651, 1558, 1552, 238,
	1148, 2119, 1148, 2880, 1148, 2663, 2097, 2661, 1863, 2116,
	194, 1571, 2113, 1378, 2468, 2118, 1823, 239, 239, 1848,
	1877, 3378, 2116, 1847, 3355, 2015, 1919, 1391, 1392, 1393,
	232, 232, 1547, 239, 1791, 1541, 1910, 1350, 1662, 233,
	233, 1395, 1853, 1738, 1517, 1272, 232, 240, 1193, 1950,
	4853, 1950, 4850, 4829, 4814, 233, 1949, 1571, 1949, 1356,
	4711, 4610, 4625, 4604, 1571, 1848, 3349, 193, 896, 1873,
	4602, 1512, 4479, 1148, 1917, 1148, 4432, 1879, 2776, 1288,
	1571, 3115, 1091, 193, 1953, 2322, 1948, 1862, 1148, 4391,
	1148, 4369, 4215, 1537, 4180, 239, 4179, 4173, 1877, 3350,
	1322, 1325, 3333, 3334, 4172, 4171, 4164, 4163, 232, 4161,
	1370, 2645, 4156, 1614, 1617, 4153, 4152, 233, 1335, 4056,
	4042, 3918, 3917, 1879, 3333, 3334, 1372, 3342, 3343, 3335,
	3336, 3337, 3338, 3340, 3341, 3916, 3893, 3859, 1571, 3858,
	1266, 1877, 1141, 2861, 1522, 193, 1910, 3857, 3779, 3774,
	3424, 3370, 3361, 830, 1853, 3332, 1877, 3329, 1148, 238,
	3328, 1148, 3326, 3321, 3320, 833, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 3319, 3316, 3313, 1848, 3293, 2285,
	3276, 3269, 1504, 3267, 1402, 3130, 1496, 1501, 2812, 2634,
	1364, 1823, 1249, 182, 182, 1911, 2283, 1909, 1536, 1912,
	1535, 1822, 5020, 4057, 1866, 1603, 4968, 240, 1844, 1840,
	4967, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	3350, 3099, 4892, 3977, 2850, 4890, 1681, 1645, 1647, 1274,
	3805, 4771, 4385, 4688, 4674, 1879, 238, 238, 3345, 3346,
	3347, 4670, 4669, 4668, 4648, 3344, 3342, 3343, 3335, 3336,
	3337, 3338, 3340, 3341, 4647, 239, 4645, 1620, 3450, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 4624, 232, 4623,
	1378, 4598, 2575, 1378, 3339, 4584, 4581, 233, 4580, 4573,
	4558, 4557, 4503, 1643, 240, 240, 4474, 4430, 4413, 4412,
	3375, 4353, 1148, 4346, 4343, 4321, 3339, 4199, 1148, 238,
	4178, 1754, 4110, 1089, 238, 193, 1864, 2581, 3965, 3964,
	1636, 3947, 3946, 3944, 3874, 3862, 1838, 1839, 1845, 1867,
	1844, 1840, 3769, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 239, 239, 1897, 1801, 4627, 4167, 3703, 3695,
	3661, 4166, 3574, 3530, 3499, 232, 232, 240, 73, 3452,
	3298, 1686, 240, 3297, 233, 233, 3292, 3258, 3076, 3345,
	3346, 3347, 1956, 1955, 1657, 74, 3344, 3342, 3343, 3335,
	3336, 3337, 3338, 3340, 3341, 4057, 1954, 1951, 1943, 1675,
	1941, 79, 193, 193, 1828, 1829, 1830, 1831, 1833, 1834,
	2859, 2858, 2823, 2816, 1899, 239, 1830, 1831, 1833, 1834,
	239, 2782, 2659, 1148, 1148, 1148, 1896, 2014, 232, 1148,
	1970, 238, 1965, 232, 1964, 1795, 1270, 233, 1270, 1963,
	1962, 88, 233, 1961, 1960, 3098, 1959, 1958, 1703, 1957,
	1938, 1937, 1936, 1409, 1935, 1934, 1969, 1268, 1933, 1268,
	1932, 1931, 1930, 1929, 1148, 193, 1739, 824, 1350, 238,
	193, 1928, 1927, 2057, 824, 1926, 1350, 1802, 1350, 240,
	2024, 1925, 901, 1924, 39, 1923, 1912, 1898, 1895, 1890,
	1363, 1292, 1634, 1283, 4626, 49, 4356, 110, 1877, 4211,
	4149, 3913, 3886, 94, 107, 3877, 3280, 2814, 1978, 1798,
	1069, 2036, 1639, 238, 1806, 1068, 4452, 240, 4213, 2086,
	2026, 2088, 3912, 1911, 3448, 1893, 3690, 239, 1805, 2010,
	4282, 1390, 2018, 3533, 238, 1388, 1800, 1952, 1350, 4965,
	232, 4958, 2990, 2030, 1148, 3333, 3334, 4671, 4574, 233,
	4565, 4564, 4389, 1819, 1820, 4324, 4323, 238, 1089, 4846,
	4916, 240, 2025, 95, 2153, 239, 1975, 1976, 1148, 1824,
	1825, 4322, 3333, 3334, 4281, 182, 1409, 3114, 232, 3421,
	2153, 2121, 240, 1236, 2178, 2103, 4202, 233, 2105, 4116,
	4115, 4114, 1944, 1945, 2110, 2678, 1389, 2223, 2112, 1827,
	4113, 4112, 4111, 2115, 3881, 240, 3880, 3705, 4914, 239,
	1383, 2676, 2151, 3704, 1999, 193, 2153, 3697, 3696, 2031,
	3348, 1378, 232, 2125, 4570, 1992, 2080, 2662, 3756, 2660,
	239, 233, 830, 1950, 1826, 3019, 1384, 2000, 4060, 830,
	1949, 3991, 3564, 232, 833, 1793, 2023, 1933, 1383, 2160,
	1702, 833, 233, 239, 3318, 3317, 3240, 2950, 4605, 193,
	2124, 3962, 2139, 1997, 1933, 4603, 232, 1386, 2968, 1048,
	2323, 2019, 3644, 1990, 3643, 233, 3501, 1921, 4936, 1383,
	193, 2347, 4561, 4875, 1089, 1755, 1711, 4857, 4842, 4367,
	2101, 3616, 1918, 4478, 2242, 3144, 1712, 2260, 4064, 4434,
	1968, 4039, 3997, 193, 3988, 3970, 3337, 3338, 3340, 3341,
	99, 2009, 1571, 1571, 1049, 2008, 2007, 3339, 1994, 2259,
	4050, 2005, 1409, 2004, 2003, 3728, 3335, 3336, 3337, 3338,
	3340, 3341, 3474, 2352, 2127, 3382, 3807, 2642, 4498, 4267,
	2051, 2374, 2037, 3286, 4470, 4851, 2857, 4264, 1966, 2222,
	1946, 3624, 2316, 1613, 1529, 1359, 1380, 1321, 3011, 4866,
	3008, 4863, 2647, 1638, 3680, 3006, 190, 102, 3938, 1564,
	106, 4663, 2948, 1690, 4373, 4777, 4641, 3504, 3957, 2992,
	3111, 888, 3599, 4951, 3171, 4918, 4917, 4501, 4497, 4476,
	3750, 4527, 4269, 2219, 3055, 2227, 238, 2894, 1265, 2123,
	1265, 2237, 2229, 3478, 902, 1580, 1046, 1588, 2851, 153,
	5016, 4852, 2446, 1248, 2443, 4678, 4010, 1752, 1044, 1042,
	1734, 2432, 1651, 2128, 3349, 1040, 1037, 1571, 2430, 1571,
	2189, 1571, 3480, 4520, 2232, 1531, 2156, 2146, 1666, 1385,
	1639, 2232, 2912, 4509, 240, 4313, 2912, 4312, 4008, 1571,
	1571, 2183, 4007, 3999, 1734, 2648, 1373, 2910, 1028, 2270,
	2275, 2910, 1571, 2195, 2232, 1390, 3985, 2444, 3984, 157,
	3982, 1584, 3449, 1753, 1571, 3981, 1571, 1571, 1571, 830,
	2262, 2263, 2140, 4009, 194, 3969, 2383, 3933, 889, 3932,
	3605, 833, 239, 1589, 2445, 1087, 1694, 1381, 3604, 1877,
	824, 3566, 2187, 2373, 2230, 232, 1382, 3442, 3291, 3290,
	3289, 2312, 2217, 3288, 233, 1390, 3244, 3017, 3016, 1751,
	1731, 3013, 1148, 3002, 1536, 3108, 1535, 1733, 2994, 2984,
	1389, 2264, 1824, 1825, 2983, 2978, 2649, 2317, 2646, 2977,
	2976, 2955, 193, 3532, 2329, 2954, 2916, 2838, 2384, 2216,
	2213, 2556, 1384, 2228, 4263, 1855, 1688, 1148, 1799, 2236,
	4499, 1733, 1827, 2692, 4220, 763, 4471, 2691, 2350, 4265,
	2513, 1264, 2865, 1264, 2276, 763, 2296, 1097, 3350, 1626,
	1389, 1625, 1732, 1683, 2337, 1384, 1086, 1624, 1880, 1623,
	4952, 4411, 2952, 1148, 2842, 1148, 1307, 1826, 2378, 4953,
	1034, 3729, 1148, 2463, 4225, 2057, 2057, 1409, 3562, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 2297, 1148, 2298, 1148, 1148,
	1148, 1148, 2403, 1643, 3501, 1643, 2339, 2467, 2326, 2360,
	2260, 2901, 2458, 2335, 2231, 830, 1636, 4224, 2334, 2331,
	2334, 2231, 1380, 1089, 1148, 1089, 2485, 833, 1148, 1148,
	2366, 1383, 2347, 2343, 1364, 2344, 1148, 2925, 2370, 2455,
	1148, 1638, 1148, 1148, 2231, 2651, 1789, 1597, 1088, 4954,
	1409, 1684, 2472, 2225, 1832, 1380, 1148, 1148, 1148, 1148,
	1532, 3151, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	2365, 2571, 2972, 4283, 3344, 3342, 3343, 3335, 3336, 3337,
	3338, 3340, 3341, 1602, 2382, 2571, 2509, 2510, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 2393, 1704, 2965,
	2966, 1148, 3187, 1854, 1856, 1385, 1834, 2623, 2624, 3341,
	2188, 2828, 2642, 1270, 4656, 2965, 2966, 1764, 3941, 3563,
	1409, 2623, 2639, 2426, 2939, 1266, 2457, 1266, 4248, 1270,
	1750, 4266, 2145, 2144, 1268, 2436, 2153, 2155, 1385, 2185,
	891, 890, 2496, 762, 4917, 1148, 1409, 3217, 2687, 1700,
	1268, 2965, 2966, 762, 2928, 3333, 3334, 2387, 2424, 4956,
	2645, 1847, 4241, 1381, 4981, 1792, 3232, 2733, 2733, 2747,
	3198, 2623, 1382, 2181, 2768, 2770, 2938, 2483, 2469, 1804,
	2774, 2471, 2390, 2484, 1069, 2477, 3010, 1069, 1069, 2500,
	2587, 2336, 2501, 2502, 1355, 2470, 1381, 3333, 3334, 1712,
	1712, 1768, 2186, 2381, 2638, 1382, 3477, 1583, 2579, 3738,
	2553, 2799, 4410, 2951, 3954, 2577, 2651, 4242, 3009, 4848,
	3007, 3737, 2051, 2051, 2824, 3005, 1362, 3189, 2483, 2915,
	1085, 2182, 3796, 2915, 3966, 2689, 1877, 2481, 2911, 4658,
	2690, 4633, 886, 2693, 885, 2694, 2695, 1609, 73, 4261,
	1350, 1350, 764, 4311, 2841, 2148, 4929, 798, 2583, 3983,
	3980, 3921, 764, 933, 3908, 74, 1236, 3611, 3603, 1689,
	3560, 3012, 1089, 2975, 2953, 1544, 2636, 1551, 1038, 1557,
	1747, 79, 1089, 2464, 3201, 2010, 1089, 2867, 2481, 2791,
	1038, 1038, 2431, 1409, 2889, 4938, 2391, 1039, 1038, 2429,
	1607, 3231, 4937, 2864, 182, 1999, 2790, 2836, 4019, 2897,
	2454, 2054, 4982, 2845, 2875, 1848, 4743, 2798, 2883, 2803,
	2879, 88, 2809, 2810, 2742, 2729, 2759, 3339, 2057, 2772,
	3549, 2899, 1306, 3952, 2890, 2853, 1378, 2863, 2886, 2780,
	2781, 711, 4905, 3255, 2796, 2797, 2792, 1383, 1656, 4131,
	1661, 2282, 2281, 3541, 1997, 4955, 2927, 3224, 3225, 4130,
	2813, 1952, 901, 1674, 3732, 1679, 4020, 706, 2900, 3339,
	2479, 796, 2150, 1879, 3253, 1089, 1409, 110, 3612, 3678,
	1383, 3609, 2551, 94, 107, 2554, 1278, 2482, 3550, 2898,
	3677, 2651, 1350, 3050, 2891, 4849, 3195, 2456, 3967, 2917,
	2860, 1280, 2913, 1586, 2197, 2045, 2988, 4755, 4461, 4018,
	2149, 3542, 3793, 1148, 1148, 2991, 1148, 2885, 3200, 2874,
	1944, 1945, 2098, 2877, 4237, 2878, 2243, 2201, 1275, 4238,
	1737, 3548, 3333, 3334, 3349, 2550, 1685, 2869, 2482, 4243,
	824, 2255, 1350, 95, 2980, 2892, 2914, 2884, 2209, 3197,
	1765, 3051, 2979, 1035, 3540, 3488, 4259, 2882, 4962, 2958,
	2480, 2973, 3677, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	2567, 4262, 4664, 1571, 1281, 1265, 3349, 3003, 4685, 2957,
	3577, 4240, 3122, 2192, 2198, 1609, 1571, 2895, 1571, 3095,
	4821, 1265, 4822, 3794, 3049, 3139, 4536, 3142, 4244, 2254,
	4847, 2565, 2169, 2926, 4741, 1571, 2210, 2170, 4657, 1877,
	3058, 2480, 3080, 2920, 3141, 3060, 3250, 3479, 1762, 2345,
	2982, 2930, 2933, 3152, 3153, 2967, 2969, 2970, 2971, 1350,
	3246, 1350, 2942, 761, 3159, 3160, 3161, 2359, 2361, 2189,
	2226, 2193, 1279, 3251, 2570, 1348, 2956, 3256, 4742, 2208,
	2364, 1877, 1713, 1148, 1530, 3199, 1290, 1939, 4904, 2974,
	3446, 2224, 2372, 3018, 2375, 2376, 2377, 2389, 3047, 3048,
	2846, 2986, 3173, 830, 3174, 2993, 2981, 3516, 3000, 4340,
	3596, 2243, 4127, 925, 2191, 833, 1980, 3091, 3350, 797,
	99, 1766, 3085, 2179, 2202, 2051, 2425, 2827, 4423, 3520,
	3149, 3056, 1763, 838, 3339, 830, 3154, 182, 3155, 926,
	3610, 2187, 4927, 3136, 1699, 1701, 4260, 833, 1536, 1148,
	3061, 2171, 3175, 2386, 3169, 1148, 1148, 2246, 4239, 845,
	3350, 2552, 2253, 3145, 3515, 4788, 3074, 3124, 799, 2175,
	911, 3126, 795, 2561, 1803, 3084, 190, 102, 1264, 934,
	106, 2169, 2651, 3522, 4293, 3953, 2170, 3166, 730, 4407,
	2203, 2204, 2578, 3489, 1264, 2562, 916, 4249, 4250, 2380,
	2563, 1984, 3117, 3177, 2568, 3179, 238, 3181, 3127, 3183,
	3184, 1148, 1148, 2749, 902, 2199, 1767, 1148, 3203, 153,
	3205, 1361, 3296, 2912, 2006, 1889, 2795, 3146, 2633, 1643,
	1148, 1148, 3193, 4983, 2808, 1088, 1148, 1148, 2931, 2987,
	3125, 3349, 1148, 4960, 2172, 2177, 707, 3521, 3106, 1987,
	3809, 2157, 2158, 4970, 240, 4355, 4121, 4449, 3056, 2200,
	4360, 4316, 3909, 3252, 1982, 3176, 3168, 3335, 3336, 3337,
	3338, 3340, 3341, 3254, 4537, 1296, 2247, 1294, 4132, 157,
	4361, 3178, 1985, 3180, 3752, 3182, 4535, 1148, 1148, 1148,
	1276, 4903, 4533, 1148, 194, 4032, 3215, 4705, 1718, 4793,
	2171, 3247, 239, 1148, 4698, 4030, 3344, 3342, 3343, 3335,
	3336, 3337, 3338, 3340, 3341, 232, 1877, 2099, 2175, 3223,
	1148, 4885, 4725, 4583, 233, 1983, 4315, 2173, 708, 4341,
	4406, 4886, 4314, 3214, 3206, 3213, 4078, 3208, 3665, 4532,
	3460, 4032, 2835, 1277, 1984, 2304, 2496, 2243, 3233, 3218,
	3212, 4030, 193, 4961, 1977, 1293, 1286, 4690, 698, 3397,
	4055, 1814, 4128, 927, 928, 2499, 4534, 3274, 3275, 3848,
	4691, 3279, 3278, 2054, 2054, 2190, 2179, 709, 2141, 710,
	4496, 2205, 1266, 839, 840, 3434, 1980, 4988, 4034, 4963,
	2564, 3270, 1987, 2172, 2177, 3350, 1813, 4176, 1266, 2188,
	2566, 2239, 4592, 3495, 4692, 2138, 4640, 2793, 4079, 1808,
	3245, 1813, 1148, 1148, 1148, 1148, 4003, 3986, 3939, 4033,
	912, 913, 1148, 1148, 1148, 1985, 3937, 1148, 2238, 3666,
	3483, 3657, 3491, 3096, 4034, 3090, 3078, 1148, 1270, 1409,
	2330, 2324, 2318, 1148, 2310, 1148, 1986, 3389, 3390, 2290,
	2289, 2489, 4706, 4577, 1270, 3792, 2206, 1577, 3899, 1268,
	1298, 3863, 2234, 770, 3929, 4033, 4761, 2045, 2045, 4408,
	4694, 1984, 1409, 2959, 4728, 1268, 2173, 2915, 3753, 2437,
	2136, 2134, 1089, 1813, 1270, 4081, 4378, 1409, 3075, 4133,
	1309, 2186, 4553, 4693, 3285, 4551, 4358, 2250, 3903, 1350,
	1812, 4473, 3507, 3503, 3502, 1268, 3372, 3414, 3238, 2057,
	3216, 4695, 3900, 1409, 1687, 1812, 1020, 2371, 3876, 1987,
	2235, 3526, 3391, 1350, 2137, 2179, 3427, 3394, 842, 841,
	2363, 1350, 3393, 4038, 1982, 2353, 2932, 1741, 1740, 3901,
	1082, 3898, 3441, 3343, 3335, 3336, 3337, 3338, 3340, 3341,
	2287, 1889, 1985, 1148, 1735, 2248, 2834, 4028, 3396, 2174,
	2833, 929, 930, 2832, 3849, 3401, 3456, 1148, 2831, 1814,
	2178, 2830, 1632, 3850, 4134, 1618, 3082, 1350, 4884, 3524,
	1630, 3423, 1086, 2057, 1814, 3484, 3485, 1812, 1619, 1986,
	2490, 3428, 4031, 843, 844, 1983, 4485, 4651, 2249, 4987,
	1148, 4177, 3405, 4331, 2178, 2936, 3505, 4051, 3945, 3509,
	2328, 932, 3619, 4555, 4924, 1350, 3934, 3464, 914, 915,
	3466, 3467, 3525, 272, 4459, 3470, 4458, 3471, 1378, 3472,
	3399, 3432, 1021, 3420, 3475, 3413, 3383, 1350, 4031, 1350,
	3447, 3054, 3459, 3468, 2024, 1719, 3444, 3398, 3481, 2960,
	2961, 3506, 4707, 4576, 3511, 1148, 1148, 3513, 2242, 3436,
	3437, 3438, 3439, 1409, 3930, 2242, 3367, 3368, 3369, 3150,
	3059, 3418, 3057, 3419, 1350, 2357, 2259, 1693, 1350, 3492,
	3453, 3454, 3580, 3455, 3582, 3578, 4554, 3586, 3400, 2786,
	4468, 3592, 4481, 3412, 4767, 3487, 3565, 4480, 3406, 3415,
	3416, 4652, 4774, 4486, 1571, 2419, 4758, 4183, 2174, 3865,
	2658, 4450, 2214, 4206, 3498, 3535, 1986, 1350, 1571, 3435,
	1571, 1785, 4795, 2789, 1409, 3465, 1787, 4928, 4926, 4868,
	4681, 824, 1571, 3469, 3558, 3537, 4672, 4469, 4456, 4429,
	2450, 3476, 1784, 1571, 3902, 4217, 2054, 1782, 1759, 1757,
	3404, 3411, 3629, 769, 3575, 1350, 3539, 3551, 3482, 2428,
	3613, 3553, 4696, 1729, 2788, 1727, 1725, 4175, 4697, 2787,
	3649, 4037, 1270, 3158, 1723, 1721, 2051, 3673, 2189, 1026,
	1025, 3935, 3364, 1020, 3410, 4768, 1715, 2220, 3523, 3768,
	3139, 3656, 4653, 1268, 3587, 1709, 1707, 1571, 3593, 3139,
	1265, 3531, 1628, 3726, 1080, 3725, 1020, 1082, 3567, 1571,
	3544, 1571, 3457, 3671, 3327, 1631, 1265, 3547, 1110, 3693,
	3257, 3545, 3079, 1629, 3001, 3546, 1022, 2995, 2949, 2862,
	1082, 2215, 2459, 2348, 2017, 2013, 3664, 1788, 1669, 3570,
	2045, 2395, 4539, 3365, 3682, 3748, 1265, 3730, 3576, 3747,
	2051, 2982, 2268, 3601, 931, 3589, 1808, 3191, 1409, 3595,
	3561, 1409, 3190, 3157, 2478, 3614, 1746, 3617, 2398, 2309,
	2288, 2087, 2085, 2657, 1922, 1682, 1081, 1601, 4841, 3602,
	4294, 3990, 3989, 4298, 1106, 4278, 4757, 1036, 4376, 4303,
	1524, 3407, 3408, 3409, 3667, 1148, 830, 4291, 3579, 1021,
	4371, 1148, 1148, 2957, 4230, 1148, 1148, 1148, 833, 1148,
	4229, 3723, 3621, 3674, 1786, 4206, 3721, 3653, 1148, 2057,
	3652, 3600, 1021, 2452, 182, 182, 3654, 1148, 2451, 4077,
	1783, 4068, 1148, 3740, 3606, 1781, 1758, 1756, 1409, 4898,
	4006, 3987, 2427, 3960, 3958, 3681, 3936, 1148, 3679, 1023,
	3660, 1728, 1610, 1726, 1724, 1409, 3655, 3688, 3691, 3692,
	3645, 3745, 1722, 1720, 3746, 2057, 2057, 1148, 1148, 3109,
	1148, 1148, 1148, 1264, 1714, 3101, 1024, 3734, 3094, 3735,
	3086, 3736, 3072, 1708, 1706, 3672, 3071, 3052, 1148, 1264,
	1627, 2881, 1148, 2876, 2057, 2057, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 3771, 1148, 2286, 1264,
	3724, 1089, 2284, 3754, 2394, 1148, 1148, 2057, 1027, 3821,
	2261, 3822, 1148, 2244, 2207, 2267, 2194, 2180, 2120, 2117,
	3781, 3782, 2114, 1148, 2111, 3751, 1026, 1025, 1041, 1043,
	1045, 2106, 2211, 2104, 1270, 1270, 2100, 2091, 1148, 4901,
	3789, 3670, 2224, 1245, 1817, 4360, 2029, 3236, 2169, 1026,
	1025, 4918, 2142, 2170, 3743, 1268, 1268, 3590, 4650, 2226,
	2130, 2131, 2253, 3749, 2462, 4361, 3209, 3207, 3045, 1246,
	1409, 3776, 3778, 1022, 4807, 4719, 2509, 3812, 3895, 4392,
	4310, 4221, 3140, 1350, 1350, 3788, 3795, 3797, 3798, 2161,
	2221, 3860, 1582, 3882, 3799, 2223, 1022, 3804, 1350, 1350,
	3811, 824, 1350, 2912, 2912, 2509, 3827, 4594, 2937, 4587,
	2460, 4089, 2189, 2327, 1265, 1329, 3819, 3818, 2910, 2934,
	3820, 1148, 1779, 1780, 2385, 3824, 3906, 3907, 2392, 3826,
	1330, 2422, 3852, 2218, 3867, 2417, 4806, 4270, 3856, 4305,
	1148, 3919, 3920, 3237, 1705, 3926, 2940, 4612, 4483, 1824,
	1825, 182, 1824, 1825, 4184, 1818, 2461, 1266, 3853, 4162,
	3861, 3518, 2941, 2962, 1821, 2225, 2051, 2171, 1357, 1297,
	4921, 1148, 1148, 1266, 4912, 4002, 3591, 263, 2941, 1827,
	1247, 3869, 3870, 2129, 3008, 2175, 4876, 4065, 3927, 3070,
	2311, 1368, 3928, 3006, 3015, 2997, 1023, 4001, 1330, 2943,
	1330, 4766, 4748, 1266, 4718, 2999, 4712, 1148, 1148, 4649,
	3872, 3873, 2051, 2051, 1826, 1148, 3884, 1826, 2998, 1023,
	2945, 4578, 3940, 1024, 695, 4546, 3064, 4460, 4075, 3067,
	2985, 3069, 3959, 2944, 3961, 4067, 4054, 1571, 3892, 3659,
	1571, 2051, 2051, 3116, 1079, 1350, 1024, 2222, 2773, 2126,
	3971, 2038, 2493, 3922, 3915, 4957, 4482, 4797, 1528, 1527,
	2172, 2177, 4798, 3445, 4986, 1538, 830, 3333, 3334, 4154,
	2057, 1824, 1825, 4714, 2051, 1027, 4797, 3113, 833, 4074,
	3113, 4798, 4931, 3976, 3978, 2904, 2905, 1264, 2653, 3885,
	1692, 3975, 2902, 2903, 3998, 4004, 1691, 3911, 1027, 3992,
	2904, 2902, 2688, 1761, 4579, 4005, 1760, 4521, 4307, 3963,
	4302, 4301, 1571, 4150, 3910, 3968, 3800, 3584, 1148, 3581,
	1916, 4021, 4022, 1915, 3211, 2466, 1270, 1148, 4974, 4939,
	4091, 4812, 4047, 4752, 4751, 4750, 4680, 1571, 1571, 1571,
	3122, 2957, 4024, 2173, 1571, 1571, 1571, 1268, 4098, 4679,
	4629, 4549, 4513, 4453, 4447, 4082, 4348, 3139, 4328, 4268,
	4061, 4212, 3185, 4105, 4026, 4015, 1571, 4035, 4102, 4036,
	4095, 4041, 1409, 4083, 3956, 3948, 3663, 2054, 3662, 3512,
	3463, 3196, 3188, 4086, 3165, 3164, 4017, 3163, 2167, 1110,
	1110, 1110, 2179, 4062, 3162, 3100, 1265, 1265, 2750, 1409,
	4053, 3498, 1148, 1148, 4049, 4040, 4106, 1493, 1148, 1148,
	2057, 4025, 3073, 1148, 1148, 2935, 1148, 2872, 4014, 4066,
	4085, 1148, 3597, 2866, 2855, 2854, 2843, 2582, 2453, 2423,
	2416, 2415, 1148, 2414, 2413, 2412, 2325, 2299, 2295, 2294,
	2293, 4071, 2292, 2291, 2094, 4069, 2165, 2093, 1148, 2092,
	3622, 2054, 2090, 2028, 1778, 1777, 4084, 1716, 1596, 1595,
	4087, 3650, 1594, 4117, 1593, 1592, 1591, 4093, 4097, 1590,
	1585, 2045, 1581, 4092, 4118, 4103, 4135, 1579, 1578, 1521,
	1520, 4104, 1519, 1400, 1399, 1398, 1397, 1396, 1360, 2166,
	4136, 1266, 1316, 1315, 1314, 4148, 1313, 1312, 1311, 1310,
	1308, 1303, 1302, 1301, 1300, 1299, 1228, 4144, 2132, 1270,
	900, 8, 1047, 4119, 1033, 3699, 4655, 1270, 4124, 4129,
	4247, 1409, 1409, 4246, 1409, 4245, 2449, 3722, 93, 1587,
	1268, 1270, 862, 87, 2251, 3955, 999, 2051, 1268, 4794,
	4684, 1562, 1571, 1571, 870, 2045, 4776, 4063, 3514, 3020,
	2397, 1717, 1268, 2399, 3422, 1409, 2815, 4740, 4158, 3295,
	4619, 4422, 2656, 1920, 2802, 3376, 89, 1132, 1178, 1264,
	1264, 4339, 4338, 3427, 4231, 2174, 3942, 3632, 4335, 4334,
	2042, 2044, 1096, 1412, 4820, 1270, 2143, 1270, 4222, 4223,
	1138, 2159, 4189, 2152, 4174, 1156, 2856, 2732, 1155, 1152,
	2046, 2048, 1154, 4207, 4208, 1153, 1268, 2047, 1268, 1940,
	1350, 1151, 4192, 4194, 4271, 2041, 4073, 3120, 3689, 1637,
	1409, 1635, 1350, 1001, 4257, 1350, 2147, 4254, 2576, 4254,
	2640, 3284, 1913, 4197, 4186, 4187, 4188, 1148, 182, 4210,
	1409, 270, 270, 270, 1112, 701, 702, 4181, 717, 701,
	717, 728, 4216, 4201, 768, 4219, 4191, 1134, 788, 2637,
	4272, 4198, 4306, 794, 4308, 4258, 1291, 1123, 1111, 4226,
	270, 3402, 3381, 3676, 3891, 2488, 4228, 2051, 1571, 1571,
	880, 3330, 4273, 4274, 2643, 4185, 1282, 2756, 1265, 4218,
	2748, 907, 2744, 4190, 3473, 3110, 1794, 4436, 270, 1891,
	4332, 3121, 1790, 1394, 1116, 2574, 1350, 1904, 3262, 2498,
	3683, 4205, 3425, 2849, 4800, 3808, 3194, 2303, 1409, 1244,
	4329, 4292, 1243, 1571, 4309, 1289, 1242, 4782, 4779, 4276,
	2241, 4300, 4342, 3627, 3628, 2135, 2896, 2586, 3646, 1128,
	4326, 1515, 4285, 2441, 3741, 4288, 3387, 4052, 1598, 4290,
	793, 4368, 1571, 1571, 1571, 1571, 1571, 1571, 4490, 1140,
	1876, 3041, 3040, 4287, 4644, 1379, 4379, 1377, 1409, 1376,
	1375, 4948, 3951, 1266, 1266, 3950, 4363, 4319, 3949, 237,
	1148, 1148, 1148, 4318, 4380, 4317, 4325, 2054, 3230, 1815,
	1807, 234, 236, 235, 4349, 3896, 3431, 4874, 1409, 4337,
	4333, 3973, 3618, 1148, 23, 22, 1148, 1148, 21, 4374,
	4354, 4383, 4345, 116, 42, 20, 1148, 155, 4344, 2057,
	133, 152, 151, 125, 1148, 1148, 4327, 150, 701, 701,
	149, 148, 147, 2054, 2054, 154, 270, 4381, 4388, 146,
	145, 1409, 140, 1571, 144, 143, 142, 141, 139, 4365,
	137, 138, 132, 136, 135, 4414, 4395, 134, 1350, 131,
	4402, 1264, 2054, 2054, 4394, 130, 129, 128, 4409, 4403,
	127, 1265, 126, 124, 156, 1409, 1493, 123, 122, 1265,
	121, 2045, 120, 1148, 119, 118, 117, 781, 3527, 3528,
	782, 3529, 61, 1265, 60, 2054, 1148, 115, 4419, 113,
	4397, 4455, 114, 19, 4401, 1148, 40, 14, 65, 66,
	2057, 18, 13, 35, 92, 105, 4431, 104, 103, 1148,
	36, 101, 1148, 100, 34, 17, 3220, 2045, 2045, 16,
	4463, 4425, 4464, 15, 4442, 4443, 1148, 98, 4445, 1148,
	4446, 97, 3571, 3572, 96, 3573, 1409, 1265, 33, 1265,
	4493, 31, 11, 1350, 9, 37, 2045, 2045, 2001, 12,
	5, 187, 186, 1571, 1571, 1571, 189, 4465, 185, 4462,
	188, 91, 2178, 184, 183, 4011, 4472, 90, 4012, 29,
	10, 179, 4568, 4059, 1270, 82, 181, 180, 178, 2045,
	177, 1110, 176, 83, 4504, 4505, 1902, 80, 175, 1493,
	1907, 86, 4538, 4512, 4526, 1268, 4548, 2750, 2750, 3629,
	174, 81, 85, 84, 27, 4567, 6, 1409, 64, 4552,
	1571, 4556, 7, 4404, 3727, 4515, 4254, 4522, 108, 4524,
	109, 4525, 38, 4514, 78, 77, 76, 75, 4523, 4510,
	26, 4502, 63, 25, 1264, 4575, 173, 218, 217, 216,
	215, 214, 1264, 1148, 1148, 213, 266, 4541, 212, 4540,
	4597, 4550, 4599, 4588, 4559, 1266, 1264, 211, 206, 4571,
	1148, 2057, 210, 4528, 208, 4099, 4100, 4101, 4545, 207,
	209, 4589, 2359, 4107, 4108, 205, 2051, 228, 4566, 4591,
	227, 221, 1350, 220, 4530, 1350, 226, 1350, 1350, 225,
	224, 223, 222, 4593, 219, 231, 204, 203, 4585, 4590,
	202, 4543, 4544, 200, 4383, 1148, 4596, 1148, 4595, 1148,
	1264, 196, 1264, 199, 201, 198, 197, 195, 230, 1270,
	229, 72, 4608, 4609, 171, 4628, 172, 71, 4630, 170,
	4631, 4632, 1148, 169, 1270, 1493, 168, 4639, 167, 4516,
	1268, 166, 165, 164, 4607, 70, 24, 2, 2054, 1,
	0, 0, 0, 0, 0, 1268, 0, 0, 4617, 4611,
	0, 4254, 0, 0, 0, 2888, 0, 2051, 0, 0,
	0, 4667, 0, 0, 0, 4638, 4254, 0, 4637, 2750,
	2750, 2750, 2750, 4634, 0, 0, 0, 4666, 1270, 1270,
	0, 0, 0, 0, 0, 1148, 1148, 0, 4687, 4660,
	0, 0, 4659, 0, 0, 1148, 0, 0, 0, 1268,
	1268, 0, 1270, 0, 0, 1270, 0, 0, 0, 1571,
	0, 0, 0, 0, 0, 4701, 4702, 0, 4675, 1571,
	4254, 4254, 4677, 1268, 0, 0, 1268, 0, 1266, 4676,
	0, 4682, 2045, 1148, 1148, 0, 1266, 0, 0, 4722,
	0, 0, 4724, 1148, 4254, 0, 0, 4254, 4699, 0,
	1266, 0, 4708, 0, 0, 0, 4713, 0, 0, 4716,
	4203, 4204, 4571, 4715, 4721, 0, 4709, 4710, 0, 0,
	4729, 4730, 0, 0, 4732, 0, 0, 0, 2054, 1284,
	4735, 4734, 4733, 0, 0, 0, 4745, 0, 0, 0,
	0, 1148, 1148, 0, 0, 1148, 0, 3046, 0, 1350,
	0, 4736, 1350, 4737, 1266, 4753, 1266, 4749, 0, 0,
	0, 0, 4744, 1305, 0, 4756, 0, 0, 2051, 0,
	4781, 4784, 4799, 0, 4802, 270, 1265, 270, 270, 4803,
	1334, 270, 1344, 4796, 0, 4773, 4772, 4764, 4765, 0,
	0, 0, 4791, 1358, 4754, 4792, 0, 3087, 1407, 0,
	0, 788, 4790, 0, 788, 0, 0, 0, 4825, 0,
	0, 0, 1148, 1148, 1148, 0, 0, 0, 0, 0,
	4785, 0, 2045, 4786, 4789, 0, 0, 0, 270, 0,
	270, 270, 1334, 4808, 270, 270, 0, 0, 0, 1344,
	4813, 0, 4824, 4823, 4816, 0, 2359, 0, 1148, 0,
	0, 0, 0, 270, 0, 1540, 0, 4860, 0, 4839,
	1493, 4836, 4837, 4855, 0, 4838, 0, 0, 0, 0,
	0, 1560, 0, 0, 0, 0, 4881, 0, 1575, 0,
	2178, 0, 0, 4882, 0, 4858, 0, 0, 0, 0,
	4891, 0, 0, 0, 4889, 4883, 0, 1600, 0, 0,
	1344, 0, 0, 1148, 270, 270, 0, 1334, 0, 0,
	4873, 1350, 0, 4888, 4548, 4887, 4902, 0, 4871, 4856,
	4396, 1265, 4398, 4399, 4400, 4899, 0, 0, 788, 4897,
	270, 270, 4919, 0, 0, 4895, 1265, 4908, 4909, 4896,
	0, 4915, 1663, 4870, 0, 4872, 0, 4913, 0, 1264,
	4911, 4922, 1670, 1493, 4910, 4934, 0, 907, 4935, 4923,
	0, 1270, 4942, 1270, 4781, 4925, 4802, 4784, 0, 0,
	0, 4933, 0, 4941, 4930, 4932, 0, 0, 4940, 0,
	0, 4944, 1268, 0, 1268, 0, 4950, 0, 0, 0,
	1265, 1265, 0, 0, 0, 0, 0, 0, 4943, 1350,
	4945, 0, 0, 4254, 0, 4254, 4964, 0, 4971, 4966,
	0, 4448, 4973, 0, 1265, 0, 0, 1265, 0, 4978,
	0, 0, 0, 1493, 4972, 4975, 0, 0, 1148, 1148,
	0, 4980, 4976, 0, 4070, 270, 1148, 0, 1148, 1148,
	0, 4984, 4969, 4949, 0, 0, 0, 4997, 4996, 1493,
	0, 4999, 5002, 4994, 0, 5001, 5000, 4998, 5003, 270,
	4990, 5004, 0, 0, 0, 0, 0, 3122, 0, 0,
	0, 0, 0, 5010, 5008, 0, 5009, 5015, 5007, 5012,
	0, 5013, 0, 0, 0, 0, 5019, 0, 0, 0,
	0, 1148, 5011, 5021, 1264, 0, 5022, 5015, 5024, 5026,
	5018, 4120, 0, 0, 0, 0, 0, 0, 0, 1264,
	0, 0, 73, 2750, 2750, 0, 0, 4991, 4992, 0,
	0, 0, 4993, 0, 0, 0, 0, 0, 3718, 74,
	0, 4542, 0, 0, 0, 0, 0, 2054, 0, 3718,
	0, 3716, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 3709, 3716, 1266, 0, 0, 0, 0, 0, 0,
	0, 0, 3709, 1264, 1264, 0, 0, 0, 0, 0,
	5023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2580, 88, 0, 1264, 0, 0,
	1264, 0, 0, 3259, 3260, 0, 1493, 0, 0, 0,
	1902, 0, 0, 2750, 2750, 2750, 2750, 2750, 2750, 2750,
	2750, 2750, 2750, 2750, 2750, 2750, 2750, 2750, 2750, 2750,
	2750, 2750, 2750, 0, 2750, 0, 901, 0, 2054, 0,
	0, 2045, 0, 0, 3720, 0, 0, 0, 0, 49,
	0, 110, 1339, 0, 0, 3720, 0, 94, 107, 0,
	3711, 0, 0, 0, 0, 2755, 0, 0, 0, 0,
	701, 3711, 0, 0, 0, 3710, 0, 2016, 0, 0,
	0, 0, 0, 0, 0, 0, 3710, 0, 0, 1493,
	0, 270, 0, 270, 0, 0, 0, 270, 0, 0,
	0, 0, 1502, 0, 0, 1516, 1339, 0, 1266, 0,
	1540, 1334, 2021, 270, 0, 270, 2027, 95, 0, 0,
	0, 0, 270, 1266, 717, 0, 0, 0, 0, 270,
	275, 3719, 2045, 1265, 0, 1265, 0, 0, 0, 0,
	0, 73, 3719, 0, 0, 2095, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 74, 0,
	0, 0, 0, 0, 270, 0, 3462, 3707, 0, 0,
	0, 0, 0, 0, 79, 1339, 1339, 1266, 1266, 0,
	4296, 0, 0, 0, 0, 3357, 3358, 3359, 3360, 0,
	0, 0, 0, 0, 0, 0, 0, 788, 0, 2054,
	2163, 1266, 0, 0, 1266, 823, 0, 0, 0, 0,
	0, 0, 3490, 0, 88, 0, 0, 2359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 0, 823, 0, 0, 1868, 1869, 1870, 4347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3538, 0, 4364, 1855, 0, 901, 0, 0, 3333, 3334,
	1827, 3351, 3352, 3353, 99, 0, 0, 0, 49, 1874,
	110, 0, 3552, 0, 3554, 4387, 94, 107, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 0, 3717, 3712,
	3713, 3714, 3715, 2045, 0, 1826, 0, 0, 0, 3717,
	3712, 3713, 3714, 3715, 0, 1846, 1264, 0, 1264, 3588,
	0, 0, 0, 3594, 1843, 0, 0, 0, 0, 0,
	190, 102, 0, 4248, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 3348, 0, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2279, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 4241, 902, 0,
	0, 4234, 0, 153, 0, 270, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 4232, 0,
	0, 0, 0, 0, 0, 0, 0, 4236, 0, 0,
	3658, 0, 1849, 1850, 1851, 1852, 0, 0, 240, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	3339, 0, 0, 270, 0, 0, 0, 270, 194, 1824,
	1825, 1865, 0, 270, 1875, 0, 239, 0, 0, 270,
	0, 1854, 1856, 0, 0, 0, 4235, 0, 0, 232,
	0, 0, 1855, 0, 0, 270, 0, 270, 233, 1827,
	0, 701, 0, 270, 0, 0, 1841, 1842, 0, 0,
	0, 0, 0, 99, 0, 788, 0, 0, 0, 907,
	0, 0, 0, 0, 1863, 1880, 1648, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 1847,
	1266, 0, 1266, 0, 1846, 0, 0, 0, 270, 0,
	1334, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 788, 0, 3349, 0, 190,
	102, 0, 270, 106, 0, 0, 0, 0, 0, 0,
	2396, 0, 0, 0, 0, 270, 270, 0, 270, 0,
	270, 0, 270, 0, 270, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 1516, 902, 0, 0,
	0, 0, 153, 0, 1877, 0, 0, 0, 0, 2433,
	0, 0, 2434, 2755, 2435, 0, 0, 0, 0, 0,
	0, 1849, 1850, 1851, 1852, 0, 270, 270, 270, 270,
	0, 1832, 1877, 0, 0, 0, 0, 240, 0, 4237,
	0, 0, 1493, 0, 4238, 1516, 0, 0, 0, 0,
	0, 2512, 0, 0, 4243, 768, 0, 0, 0, 788,
	1853, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1493, 0, 194, 0, 0,
	1854, 1856, 0, 1848, 0, 239, 0, 0, 0, 0,
	1493, 0, 0, 0, 2755, 2755, 4240, 0, 232, 3764,
	3765, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	1866, 3350, 0, 4244, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 4673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1646, 0, 0, 1847, 0,
	0, 1879, 0, 0, 2654, 0, 0, 0, 0, 0,
	0, 4686, 2588, 0, 0, 0, 1110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4720, 0, 0, 0, 0, 0, 3828,
	3829, 3830, 3831, 3832, 3833, 3834, 3835, 3836, 3837, 3838,
	3839, 3840, 3841, 3842, 3843, 3844, 3845, 3846, 3847, 0,
	3851, 0, 1864, 1877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 701, 0, 1867, 1844, 1840, 0, 1837,
	1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 270, 0,
	2825, 0, 0, 4239, 0, 0, 0, 701, 0, 0,
	3345, 3346, 3347, 0, 270, 0, 701, 3344, 3342, 3343,
	3335, 3336, 3337, 3338, 3340, 3341, 1493, 0, 270, 1853,
	0, 0, 0, 2750, 0, 0, 2755, 2755, 2755, 2755,
	0, 0, 4249, 4250, 0, 0, 0, 0, 270, 1344,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4809, 0, 0,
	4016, 0, 0, 4811, 2315, 0, 0, 1493, 0, 1824,
	1825, 0, 0, 0, 0, 0, 0, 270, 1344, 0,
	2750, 717, 0, 717, 0, 0, 0, 2871, 0, 0,
	1879, 0, 1855, 270, 1410, 0, 270, 0, 0, 1827,
	270, 0, 270, 0, 0, 0, 0, 1334, 0, 270,
	270, 0, 1344, 1344, 2887, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 1880, 0, 2907, 0, 0,
	0, 0, 0, 0, 1826, 2598, 2599, 2600, 2617, 2618,
	2619, 1572, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 2620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2924, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 1837, 1835,
	1836, 1828, 1829, 1830, 1831, 1833, 1834, 1572, 1880, 0,
	270, 0, 0, 0, 1572, 0, 0, 0, 0, 0,
	0, 1493, 0, 270, 1493, 0, 0, 2610, 0, 3767,
	1572, 0, 0, 0, 788, 0, 2606, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2442, 1849, 1850, 1851, 1852, 0, 0, 0, 0, 0,
	270, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2750, 1572, 0,
	0, 0, 0, 270, 3062, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 3036, 0, 1103, 0, 0, 0,
	1854, 1856, 0, 0, 2611, 2612, 2613, 2614, 1493, 0,
	1540, 0, 0, 270, 2605, 270, 0, 0, 0, 0,
	0, 0, 270, 0, 2750, 1841, 1842, 3028, 3026, 0,
	0, 0, 3105, 0, 3030, 3032, 3022, 0, 0, 0,
	0, 0, 2924, 0, 701, 0, 0, 0, 0, 2750,
	0, 0, 73, 3134, 907, 2924, 0, 0, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 74,
	0, 0, 0, 0, 0, 0, 270, 3042, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 2615, 2616,
	0, 0, 0, 0, 0, 270, 1334, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 270, 0,
	0, 1334, 0, 1334, 0, 1334, 0, 0, 0, 0,
	0, 2608, 0, 0, 0, 88, 0, 0, 0, 0,
	0, 0, 0, 1877, 0, 4277, 0, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 4286, 0, 0,
	4289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 270, 270, 270, 1334, 0, 901, 1334, 0, 270,
	0, 0, 0, 0, 270, 0, 0, 1824, 1825, 0,
	0, 110, 0, 0, 0, 0, 0, 94, 107, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1339,
	1855, 0, 0, 0, 0, 270, 0, 1827, 0, 0,
	0, 0, 1848, 270, 0, 0, 0, 0, 3024, 0,
	2755, 2755, 0, 0, 0, 0, 0, 0, 0, 3038,
	0, 4362, 0, 1880, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 95, 1339, 0,
	0, 3037, 3029, 3027, 3031, 3033, 3023, 3025, 3039, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3035, 0,
	1879, 0, 0, 1410, 0, 2609, 1824, 1825, 0, 0,
	1339, 1339, 0, 0, 0, 0, 0, 823, 0, 0,
	0, 0, 0, 0, 823, 0, 0, 0, 0, 1855,
	0, 3043, 0, 0, 0, 0, 1827, 0, 0, 0,
	2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755,
	2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755,
	0, 2755, 1880, 1879, 0, 0, 0, 0, 0, 1540,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 1844, 1840, 0, 1837, 1835,
	1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0,
	0, 0, 0, 0, 1502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 0, 1410, 0, 1854, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 2595, 2596, 2597, 2621, 2607, 2601,
	0, 2603, 2604, 2602, 2589, 2590, 2591, 2592, 2593, 2594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 1832, 0,
	190, 102, 0, 3388, 106, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 4529, 4428,
	238, 3044, 0, 270, 0, 0, 3417, 0, 902, 0,
	3034, 3333, 3334, 153, 3351, 3352, 3353, 1854, 1856, 270,
	0, 3430, 0, 0, 701, 0, 0, 0, 0, 701,
	0, 0, 701, 4141, 0, 701, 701, 0, 0, 0,
	0, 701, 0, 0, 0, 0, 0, 3451, 240, 270,
	0, 1877, 1572, 1572, 0, 0, 0, 0, 0, 0,
	0, 270, 1410, 0, 0, 0, 4475, 0, 0, 0,
	0, 0, 0, 157, 0, 1847, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 3348, 0, 194, 1339,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 270, 270, 0, 232,
	0, 0, 0, 0, 1493, 1493, 0, 1493, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 2924, 2924, 270, 0, 2021,
	0, 0, 1516, 0, 1516, 2924, 193, 2027, 1493, 0,
	1877, 0, 0, 0, 0, 0, 2924, 2027, 0, 2924,
	2027, 0, 0, 2027, 0, 0, 0, 1572, 0, 1572,
	0, 1572, 0, 0, 0, 0, 0, 270, 270, 2021,
	0, 270, 0, 3339, 0, 0, 0, 0, 1879, 1572,
	1572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2021, 1572, 270, 0, 3557, 3557, 0, 0, 0,
	1334, 0, 0, 1493, 1572, 0, 1572, 1572, 1572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 2924, 1493, 2924, 0, 3585, 2924, 2021, 0,
	823, 2924, 2021, 0, 0, 788, 0, 0, 3355, 0,
	0, 0, 0, 4616, 0, 0, 0, 0, 3430, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 0, 0, 0, 0, 0, 0, 270, 1828,
	1829, 1830, 1831, 1833, 1834, 0, 0, 1879, 0, 0,
	3349, 0, 0, 0, 0, 0, 270, 0, 3623, 0,
	4643, 3625, 2924, 0, 0, 270, 0, 0, 0, 270,
	0, 1493, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4665, 0, 270, 0, 0,
	0, 0, 3105, 0, 0, 1334, 0, 270, 0, 0,
	2924, 0, 701, 0, 0, 0, 0, 1410, 0, 2924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 0, 0, 0, 0, 0, 0,
	0, 1493, 3742, 0, 0, 1407, 0, 0, 3733, 0,
	0, 0, 0, 0, 0, 0, 3333, 3334, 0, 3351,
	3352, 3353, 0, 0, 0, 0, 0, 0, 3739, 0,
	0, 1540, 0, 0, 1334, 270, 0, 270, 4140, 0,
	0, 0, 0, 1334, 1493, 0, 0, 0, 0, 0,
	1410, 0, 0, 0, 3350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 1493, 0,
	1824, 1825, 3785, 1857, 1858, 1859, 1868, 1869, 1870, 0,
	0, 3348, 0, 0, 0, 0, 0, 0, 0, 3801,
	0, 0, 1861, 1855, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 1824, 1825, 0, 0, 0, 1874,
	1410, 0, 0, 0, 0, 1110, 0, 0, 0, 0,
	0, 0, 3806, 0, 0, 0, 1880, 1855, 0, 0,
	0, 0, 0, 0, 1827, 1826, 1410, 0, 0, 1493,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1516, 1516, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 3339, 1846,
	0, 0, 0, 3345, 3346, 3347, 0, 0, 1843, 0,
	3344, 3342, 3343, 3335, 3336, 3337, 3338, 3340, 3341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1493, 0, 1860, 0, 0, 0, 0, 0, 0, 270,
	270, 0, 0, 0, 3894, 0, 0, 0, 0, 0,
	0, 0, 1849, 1850, 1851, 1852, 0, 0, 0, 1516,
	0, 0, 1832, 3355, 701, 701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2315, 0, 1849, 1850, 1851, 1852,
	2755, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 1865, 0, 1410, 1875, 3349, 270, 0, 0, 0,
	0, 1854, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 1872,
	0, 0, 0, 0, 0, 0, 1841, 1842, 0, 0,
	0, 0, 0, 0, 0, 1854, 1856, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 2755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	1841, 1842, 0, 0, 0, 0, 0, 0, 788, 0,
	1877, 0, 0, 0, 0, 0, 1410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3333, 3334, 1847, 3351, 3352, 3353, 0, 1339, 0,
	0, 3557, 0, 0, 0, 1873, 0, 0, 1110, 1110,
	0, 0, 0, 3773, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 0, 0, 0, 0, 2021,
	823, 270, 0, 0, 0, 717, 717, 1344, 0, 3350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 3348, 0, 1877, 0,
	0, 270, 3105, 1572, 0, 3105, 2027, 0, 0, 0,
	1860, 270, 0, 0, 0, 0, 1572, 0, 1572, 0,
	1853, 270, 0, 0, 0, 0, 270, 0, 1516, 0,
	0, 270, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 1110, 0, 0, 0, 0,
	2924, 270, 0, 0, 1853, 0, 0, 0, 0, 0,
	3134, 3134, 0, 0, 2755, 0, 907, 2924, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3339, 0, 270, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2755, 0, 0, 0, 0, 0, 0, 3345, 3346,
	3347, 0, 0, 0, 0, 3344, 3342, 3343, 3335, 3336,
	3337, 3338, 3340, 3341, 0, 1879, 2755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 801, 0, 0, 3355, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	0, 4159, 1864, 0, 0, 0, 0, 0, 0, 0,
	812, 0, 1838, 1839, 1845, 1867, 1844, 1840, 0, 1837,
	1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 1860,
	3349, 0, 0, 3308, 0, 1860, 0, 3309, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 4196, 0,
	1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 0, 0, 270, 0, 0, 0, 0, 0,
	1540, 0, 270, 0, 0, 0, 0, 0, 0, 4214,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 806, 1344, 1877, 0, 0, 0, 0,
	818, 0, 0, 0, 0, 0, 0, 1344, 0, 270,
	1344, 0, 0, 0, 811, 0, 0, 0, 2924, 2924,
	0, 3557, 2924, 0, 0, 0, 0, 0, 0, 0,
	4256, 1860, 4256, 1540, 0, 0, 1860, 0, 0, 0,
	0, 0, 0, 0, 2924, 0, 2027, 0, 0, 1860,
	1540, 1540, 270, 2021, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 2021, 0, 270, 2021,
	0, 270, 0, 3557, 3350, 0, 0, 0, 0, 0,
	0, 0, 763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2924, 0, 2924, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 0, 0, 1860, 0, 1339, 0, 0,
	2924, 2924, 0, 0, 0, 0, 3105, 3105, 0, 0,
	0, 0, 0, 4351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 1410,
	0, 0, 0, 0, 270, 817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 1410, 0, 0, 0, 3333, 3334, 0, 3351,
	3352, 3353, 2315, 0, 0, 0, 0, 1410, 0, 0,
	0, 0, 4420, 3345, 3346, 3347, 0, 0, 3772, 0,
	3344, 3342, 3343, 3335, 3336, 3337, 3338, 3340, 3341, 0,
	0, 0, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4420, 0, 0, 1860, 1860,
	1860, 1860, 1860, 1860, 1860, 1860, 0, 0, 0, 0,
	0, 3348, 807, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2512,
	0, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	762, 0, 0, 0, 0, 2924, 2027, 0, 2027, 0,
	0, 4467, 0, 0, 0, 813, 0, 0, 0, 0,
	270, 805, 0, 0, 0, 0, 0, 2754, 0, 0,
	4491, 0, 4491, 0, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 1860, 0, 0, 0,
	2512, 0, 0, 0, 0, 0, 788, 0, 3339, 0,
	0, 0, 0, 0, 0, 0, 0, 3557, 802, 1334,
	0, 1095, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2021, 0, 270,
	0, 0, 0, 0, 0, 809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 764,
	0, 0, 0, 0, 1572, 0, 4467, 0, 0, 4256,
	804, 0, 1540, 3355, 0, 0, 0, 0, 1572, 2924,
	1572, 0, 0, 0, 1410, 0, 0, 0, 0, 0,
	0, 823, 1572, 815, 816, 0, 0, 0, 0, 4582,
	0, 0, 0, 1572, 0, 0, 0, 0, 0, 0,
	1339, 1540, 0, 0, 0, 3349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1572, 0, 0,
	3806, 0, 0, 0, 0, 0, 0, 0, 0, 1572,
	0, 1572, 2315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3557, 4636, 0, 0, 0,
	1877, 0, 0, 0, 4467, 0, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4256, 0, 0, 0, 1410, 0,
	0, 1410, 0, 0, 0, 0, 0, 0, 0, 4256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2725, 2726, 2727, 2728, 2721, 2722, 2723, 2724,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 3350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4256, 4256, 0, 0, 0, 0, 4351,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 0, 0, 0, 0, 0, 4256, 0, 270,
	4256, 0, 0, 0, 0, 1410, 0, 0, 0, 0,
	2027, 0, 0, 2701, 2702, 2703, 2704, 0, 0, 1540,
	0, 1540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2713, 2714, 2715, 2716,
	2709, 2710, 2711, 2712, 2717, 2718, 2719, 2720, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4491, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3345, 3346,
	3347, 0, 0, 0, 2924, 3344, 3342, 3343, 3335, 3336,
	3337, 3338, 3340, 3341, 2697, 2698, 2699, 2700, 2705, 2706,
	2707, 2708, 0, 0, 0, 0, 0, 1860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1410, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 3806, 0, 0, 0, 0, 0, 0,
	0, 823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1540, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860,
	1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860,
	1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860,
	1860, 1860, 1860, 1860, 1860, 1860, 1860, 4467, 0, 0,
	0, 0, 1860, 0, 1860, 1860, 1860, 1860, 0, 0,
	0, 0, 0, 0, 0, 1353, 2754, 2754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 1860, 0, 0, 0, 0, 2924, 0, 0, 0,
	0, 0, 1095, 1095, 1095, 0, 4256, 1572, 4256, 0,
	1572, 1540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1542, 0, 1548, 0,
	1554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 1860, 0, 0, 1860, 0,
	0, 1860, 1572, 0, 0, 0, 3134, 1860, 1860, 1860,
	1860, 1860, 1860, 1860, 0, 0, 0, 2924, 0, 0,
	0, 0, 0, 0, 1339, 0, 0, 1572, 1572, 1572,
	0, 3134, 0, 0, 1572, 1572, 1572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1654,
	0, 1659, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 1410, 0, 1672, 0, 1677, 0, 0, 0,
	0, 0, 0, 1860, 0, 0, 3354, 0, 2754, 2754,
	2754, 2754, 0, 0, 0, 1860, 0, 1860, 0, 1410,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1742, 0, 0, 1748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1861, 1855, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 1410, 1410, 0, 1410, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 1572, 1572, 1843, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 1888, 0, 0, 1410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1901, 0,
	0, 0, 0, 0, 1914, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1410, 0, 1849, 1850, 1851, 1852, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	1410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 1875, 0, 0, 0, 1572, 1572,
	0, 1854, 1856, 0, 0, 0, 0, 0, 0, 1973,
	1973, 1973, 0, 0, 0, 0, 0, 1871, 0, 1872,
	0, 0, 1860, 1860, 0, 1860, 1841, 1842, 748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 0, 1572, 1863, 0, 851, 0, 731, 0,
	0, 0, 0, 732, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 853, 0, 0, 0,
	0, 854, 1572, 1572, 1572, 1572, 1572, 1572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 734, 0, 1873, 0, 0, 0, 0,
	855, 0, 872, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 0, 1862, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 0, 0, 856, 0, 0,
	0, 0, 857, 1860, 0, 0, 754, 0, 0, 0,
	0, 0, 0, 0, 1095, 0, 0, 0, 0, 0,
	0, 1410, 0, 1572, 881, 0, 0, 736, 0, 0,
	0, 858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 879, 0, 0, 0, 0,
	1853, 0, 737, 0, 0, 1410, 0, 0, 0, 1860,
	1860, 0, 2754, 2754, 0, 0, 1860, 0, 0, 0,
	852, 0, 0, 1848, 0, 738, 3354, 3354, 739, 0,
	1860, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 859, 0, 763, 860, 0, 0, 0,
	1866, 0, 0, 0, 1860, 0, 0, 0, 883, 0,
	0, 0, 0, 763, 0, 0, 1860, 0, 0, 0,
	753, 0, 0, 0, 0, 0, 1410, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1572, 1572, 1572, 0, 0, 0, 0,
	0, 0, 2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754,
	2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754,
	2754, 2754, 0, 2754, 3354, 3354, 3354, 3354, 750, 0,
	0, 0, 0, 0, 0, 0, 882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 877, 1410, 0, 0,
	1572, 0, 1864, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 0, 1837,
	1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0,
	0, 0, 0, 2631, 0, 0, 0, 2632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 760,
	0, 741, 0, 0, 0, 0, 0, 0, 861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	761, 0, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 762, 0, 0, 0, 0, 0, 873,
	0, 743, 0, 0, 1860, 0, 758, 759, 756, 0,
	0, 762, 0, 0, 751, 0, 0, 744, 0, 0,
	0, 0, 0, 0, 850, 0, 874, 0, 0, 0,
	0, 0, 0, 0, 0, 865, 0, 0, 2420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 1860, 0, 0, 745,
	871, 752, 0, 0, 0, 0, 0, 0, 0, 746,
	0, 0, 0, 2447, 0, 0, 0, 866, 0, 1572,
	0, 867, 886, 747, 885, 0, 0, 868, 755, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 869, 764, 0, 0, 0, 878, 0, 0, 2487,
	0, 2491, 887, 749, 884, 0, 0, 0, 2505, 0,
	764, 0, 0, 0, 0, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 0, 2555, 0, 2557, 2558, 2559, 2560, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1901, 0, 0, 0, 2635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2665, 2668, 2671, 2674, 0, 0, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 1860, 0, 0,
	1860, 3354, 3354, 1860, 0, 0, 2746, 1860, 2758, 2760,
	2765, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1860, 1860, 1860, 1860, 1860, 0, 0, 0, 0, 0,
	1860, 0, 1860, 0, 0, 3354, 3354, 3354, 3354, 3354,
	3354, 3354, 3354, 3354, 3354, 3354, 3354, 3354, 3354, 3354,
	3354, 3354, 3354, 3354, 3354, 0, 0, 0, 3354, 0,
	0, 1860, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 269, 269, 269, 0,
	0, 0, 0, 0, 0, 0, 1824, 1825, 0, 1857,
	1858, 1859, 1868, 1869, 1870, 0, 0, 0, 0, 1860,
	0, 0, 0, 0, 0, 831, 0, 0, 1861, 1855,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	1860, 1860, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 831, 0, 0, 0, 0, 0, 0,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1824,
	1825, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 1855, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 3065,
	3066, 1860, 3068, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 1850,
	1851, 1852, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 1860, 1860, 0, 0, 0, 1860,
	1860, 1267, 0, 1860, 1860, 0, 0, 0, 1860, 0,
	0, 0, 1860, 0, 0, 0, 0, 1860, 0, 3762,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	1875, 0, 2754, 0, 0, 0, 0, 1854, 1856, 0,
	0, 1849, 1850, 1851, 1852, 0, 0, 0, 0, 0,
	0, 1832, 0, 1871, 0, 1872, 0, 0, 0, 0,
	0, 0, 1841, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 3186,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 2754,
	1854, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 1847, 1862,
	0, 1881, 1882, 0, 0, 0, 0, 0, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 46,
	45, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3242, 3243, 0,
	79, 0, 0, 3249, 0, 0, 1853, 0, 0, 0,
	0, 67, 0, 1877, 0, 0, 0, 0, 48, 0,
	160, 0, 3263, 3264, 0, 0, 0, 0, 2635, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 47, 0,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 1860, 1860, 0, 1866, 0, 0, 0,
	0, 0, 0, 1860, 1860, 3354, 2754, 50, 68, 1853,
	0, 0, 1860, 3273, 0, 1860, 51, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 161, 1879, 0, 3287,
	0, 0, 1848, 0, 49, 0, 110, 0, 0, 0,
	0, 0, 94, 107, 0, 0, 3299, 0, 0, 0,
	0, 0, 3354, 2754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 0, 0, 0, 0, 1860, 2754, 0,
	0, 0, 0, 0, 52, 1860, 0, 0, 0, 0,
	1879, 0, 0, 0, 1860, 0, 1860, 0, 1864, 0,
	0, 0, 95, 0, 0, 0, 0, 0, 1838, 1839,
	1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2765, 2765,
	2765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	0, 3392, 0, 0, 0, 1844, 1840, 0, 1837, 1835,
	1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0,
	0, 0, 0, 3354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1180, 0, 0, 0, 0, 0, 0, 0, 1860,
	3354, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	269, 0, 269, 269, 0, 0, 269, 0, 0, 0,
	0, 0, 3354, 0, 0, 0, 0, 0, 0, 99,
	0, 0, 0, 0, 1824, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 1095,
	0, 0, 56, 269, 1827, 269, 269, 59, 0, 269,
	269, 0, 0, 1095, 1860, 0, 0, 69, 0, 0,
	0, 0, 0, 0, 58, 190, 102, 0, 831, 106,
	1880, 0, 0, 54, 0, 0, 0, 162, 0, 1826,
	0, 0, 0, 1824, 1825, 55, 3517, 0, 0, 1846,
	0, 0, 0, 0, 0, 238, 0, 0, 1843, 0,
	0, 0, 0, 62, 0, 0, 1855, 0, 153, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 269,
	269, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1880,
	0, 3568, 3569, 240, 0, 269, 269, 0, 1826, 0,
	0, 0, 0, 0, 3761, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 157, 0,
	0, 0, 1860, 0, 0, 0, 1849, 1850, 1851, 1852,
	0, 0, 0, 194, 0, 0, 1832, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 1860, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 1271, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1856, 0, 0, 0,
	0, 193, 0, 0, 3, 1849, 1850, 1851, 1852, 0,
	269, 0, 0, 748, 0, 1832, 0, 0, 0, 0,
	1841, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 269, 0, 0, 0, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 0, 1860, 0, 0, 0, 1860, 0, 734, 1841,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 1877, 0,
	0, 754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2505, 0, 0, 0, 0, 0, 3759, 3760, 0,
	0, 3763, 736, 0, 0, 3766, 0, 0, 0, 0,
	0, 0, 0, 0, 3770, 0, 0, 0, 0, 0,
	0, 0, 0, 3777, 0, 0, 0, 737, 3392, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 3790, 0, 0, 0, 1877, 0, 0,
	738, 0, 0, 739, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 3813, 3814, 0, 3815, 3816, 3817, 0,
	763, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870,
	0, 0, 0, 0, 3823, 0, 0, 0, 3825, 0,
	0, 0, 0, 1861, 1855, 753, 0, 0, 0, 0,
	0, 1827, 0, 1853, 0, 0, 1995, 0, 1267, 0,
	1874, 0, 269, 0, 0, 1879, 0, 0, 0, 0,
	0, 3854, 3855, 0, 0, 0, 1848, 1880, 269, 1995,
	269, 0, 0, 0, 0, 0, 1826, 831, 0, 3866,
	0, 0, 0, 0, 831, 0, 1846, 0, 0, 0,
	0, 0, 0, 750, 3875, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	0, 0, 0, 1849, 1850, 1851, 1852, 3931, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 761, 3943, 742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833,
	1834, 0, 1865, 0, 0, 1875, 0, 0, 3972, 0,
	0, 0, 1854, 1856, 0, 0, 0, 0, 762, 0,
	0, 0, 0, 0, 0, 0, 743, 0, 1871, 0,
	1872, 758, 759, 756, 0, 0, 0, 1841, 1842, 751,
	0, 0, 744, 3993, 3994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 752, 0, 0, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 831, 1271, 0, 0, 747, 0,
	0, 0, 0, 755, 0, 0, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 764, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 749, 0,
	0, 0, 0, 0, 0, 1877, 0, 0, 0, 0,
	0, 0, 1271, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 4094, 0, 0, 0, 0, 269, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 0,
	269, 1853, 269, 0, 0, 1271, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4137, 4138,
	0, 0, 0, 0, 4142, 4143, 0, 0, 0, 4146,
	4147, 1866, 0, 269, 0, 0, 269, 4151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4155, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 1271,
	0, 0, 1879, 0, 4160, 0, 0, 0, 0, 0,
	831, 269, 0, 269, 0, 269, 0, 269, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 269, 269, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 0,
	1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 1271, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1267,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4415, 4416, 4417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2505,
	0, 0, 4426, 4427, 0, 0, 0, 0, 0, 1824,
	1825, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	4435, 4438, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 269, 1855, 0, 0, 269, 0, 269, 0, 1827,
	0, 0, 0, 0, 269, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 4492, 1843, 0, 0, 0, 0, 0, 0,
	0, 4500, 0, 0, 0, 0, 0, 0, 0, 1133,
	112, 269, 0, 0, 0, 4508, 0, 0, 1095, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 4517, 0, 0, 4519, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 1850, 1851, 1852, 269, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 112, 0, 1824, 1825, 831, 1857,
	1858, 1859, 1868, 1869, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 1855,
	1854, 1856, 0, 0, 0, 0, 1827, 0, 269, 0,
	831, 0, 0, 0, 0, 1874, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 1841, 1842, 0, 0, 0,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 1847, 0,
	1843, 0, 1070, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 1090, 0, 0, 0, 0, 1271, 0,
	1271, 4642, 1271, 0, 0, 4646, 0, 0, 0, 0,
	269, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	1271, 1271, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	1254, 0, 0, 0, 0, 1271, 0, 1271, 1271, 1271,
	0, 0, 0, 1877, 0, 0, 0, 0, 1849, 1850,
	1851, 1852, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 269, 269, 269, 269, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 269,
	0, 1095, 1095, 0, 0, 0, 0, 0, 0, 0,
	0, 4717, 0, 0, 0, 0, 0, 1865, 0, 1853,
	1875, 0, 0, 0, 0, 0, 0, 1854, 1856, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 1848, 1871, 0, 1872, 0, 0, 0, 0,
	2505, 0, 1841, 1842, 0, 0, 0, 0, 0, 4438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 2058, 2058, 1271, 0,
	0, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870,
	1879, 0, 0, 0, 0, 0, 0, 0, 1095, 0,
	0, 0, 0, 1861, 1855, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 1873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1880, 0, 1862,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	1877, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 4835, 4835,
	4835, 1271, 0, 0, 0, 1844, 1840, 0, 1837, 1835,
	1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4859, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 1271, 0, 1849, 1850, 1851, 1852, 0, 0, 0,
	1271, 0, 0, 1832, 0, 0, 1866, 0, 0, 4835,
	0, 0, 0, 0, 0, 0, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 1865, 0, 0, 1875, 0, 0, 1267, 0,
	0, 0, 1854, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1267, 0, 0, 0, 1871, 0,
	1872, 0, 0, 0, 0, 0, 0, 1841, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1995, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 1864, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 1838, 1839,
	1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 4835, 4985, 0, 0, 0, 0,
	0, 0, 4989, 3311, 0, 0, 0, 269, 0, 0,
	0, 269, 269, 0, 0, 0, 1873, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 269, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 1995, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 1271, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 1866, 112, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 831, 0, 0, 1271, 0, 1090, 112, 112, 0,
	269, 0, 0, 0, 269, 0, 0, 1271, 0, 1271,
	0, 0, 0, 112, 0, 112, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 1271, 0, 112, 0,
	112, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 0,
	1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 1825, 0,
	1857, 1858, 1859, 1868, 1869, 1870, 0, 0, 1260, 0,
	269, 0, 269, 0, 0, 0, 0, 0, 0, 1861,
	1855, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 1880, 265, 265, 697, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1070, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1894, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1900, 0, 0, 0, 1906, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	1850, 1851, 1852, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1267, 1267, 0, 0, 1865, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 1854, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1157, 0, 0, 1871, 0, 1872, 0, 0, 0,
	0, 0, 0, 1841, 1842, 1993, 0, 1996, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 831, 0, 0, 0, 0, 1847, 271, 271, 271,
	0, 0, 0, 0, 0, 0, 0, 1824, 1825, 0,
	1857, 1858, 1859, 1868, 1869, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 1861,
	1855, 0, 0, 0, 0, 0, 0, 1827, 0, 1271,
	1271, 0, 1873, 0, 0, 0, 1874, 0, 0, 0,
	0, 0, 0, 0, 271, 1271, 0, 0, 0, 0,
	1862, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	0, 1877, 1826, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 1271, 0, 0, 1271, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 269, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 1849,
	1850, 1851, 1852, 0, 0, 0, 269, 1866, 0, 1832,
	0, 0, 0, 0, 2058, 0, 269, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 1267, 0, 1865, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 1854, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 1872, 0, 0, 0,
	0, 0, 0, 1841, 1842, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 1838,
	1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828,
	1829, 1830, 1831, 1833, 1834, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 3307, 0, 0, 0, 0, 1271,
	0, 1271, 0, 0, 0, 1271, 0, 0, 0, 0,
	0, 0, 1873, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 1149, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 1090, 0, 1090, 0,
	0, 1877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 1267,
	0, 0, 0, 0, 0, 0, 0, 1267, 0, 0,
	1271, 0, 1271, 0, 0, 0, 0, 1853, 0, 0,
	0, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 269, 0, 0, 0, 0, 1271,
	0, 0, 1271, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 1995, 0, 1995, 1320, 0,
	1320, 1320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 269, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 1070, 0, 0, 1070,
	1070, 1404, 0, 0, 0, 0, 0, 1514, 0, 1271,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 2058, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	1839, 1845, 1867, 1844, 1840, 2573, 1837, 1835, 1836, 1828,
	1829, 1830, 1831, 1833, 1834, 2058, 2058, 0, 0, 269,
	0, 0, 0, 0, 3306, 1090, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 1900, 0, 0, 0, 1900,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 0,
	0, 0, 0, 1652, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 1254, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 271, 271, 0, 0, 271, 1996, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 0, 271, 1413, 271, 271, 0, 0,
	271, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 1413, 271, 271, 1271, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 1995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	0, 269, 269, 0, 0, 0, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 1271,
	1271, 271, 0, 0, 0, 1271, 1271, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 1271, 0, 0,
	2011, 112, 0, 1271, 112, 0, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 0, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1995,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 1995, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 112, 0, 0, 0, 0,
	1320, 112, 0, 0, 0, 0, 0, 1514, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1995, 1995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1995, 0, 269, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 1271, 0,
	0, 0, 1271, 1271, 0, 1271, 0, 0, 0, 0,
	1411, 0, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 1573, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 1271, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 271,
	271, 271, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 1271, 0, 1573, 0, 271, 0, 0, 0, 0,
	1573, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 1271, 0, 0, 2573, 0, 1573, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 1900, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1573, 0, 2301, 0, 0, 0,
	2308, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 2321, 0, 1271, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2333, 0,
	2333, 0, 0, 0, 0, 0, 2340, 0, 0, 0,
	0, 0, 0, 1271, 1271, 1271, 1271, 1271, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2308, 0, 0, 2368, 0, 0, 0, 0, 1271,
	0, 1995, 0, 1995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2388, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 2404,
	0, 2406, 0, 2408, 0, 2410, 0, 2411, 0, 0,
	0, 0, 1271, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 1413, 1413, 271, 0, 1254, 0, 0,
	0, 0, 0, 1413, 0, 0, 1271, 0, 0, 2438,
	2439, 2440, 0, 1254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 271, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 271, 1271, 1271, 1271, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	1413, 0, 1413, 0, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	1413, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 271, 0, 0, 271, 1271, 0,
	0, 1271, 0, 0, 0, 1413, 0, 1413, 1413, 1413,
	0, 0, 0, 112, 112, 0, 112, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 271, 0, 271, 0, 271, 0, 271, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 112, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 271, 271, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2822, 1411, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	1271, 1254, 0, 0, 1090, 0, 2873, 0, 0, 1320,
	0, 0, 0, 1320, 0, 1320, 0, 0, 112, 112,
	0, 0, 0, 1271, 0, 0, 1271, 0, 0, 0,
	1271, 0, 2321, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 1573, 1573,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 1413, 0, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 1573, 0, 1573, 0, 1573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1573, 1573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1573, 0,
	0, 0, 0, 271, 0, 0, 2308, 0, 0, 0,
	1573, 0, 1573, 1573, 1573, 2321, 0, 0, 0, 271,
	0, 0, 271, 0, 0, 0, 271, 0, 271, 0,
	0, 0, 0, 0, 0, 271, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3156,
	0, 0, 0, 1254, 1254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 3167, 0,
	3170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 1271, 0, 1271, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3202, 1514, 3204, 1514, 0, 0, 0,
	0, 0, 3210, 0, 0, 0, 271, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1320, 271,
	0, 0, 0, 0, 0, 0, 3239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 271, 0, 0, 0, 0, 1411, 0, 271, 0,
	0, 0, 0, 0, 0, 1824, 1825, 0, 1857, 1858,
	1859, 1868, 1869, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 1861, 1855, 0,
	0, 0, 0, 0, 0, 1827, 0, 1413, 0, 1413,
	0, 0, 1824, 1825, 1874, 1857, 1858, 1859, 1868, 1869,
	1870, 0, 271, 0, 0, 0, 1413, 0, 0, 0,
	0, 1880, 0, 0, 1861, 1855, 1411, 0, 0, 0,
	1826, 271, 1827, 271, 0, 0, 0, 0, 0, 0,
	1846, 1874, 0, 0, 271, 0, 0, 0, 0, 1843,
	0, 0, 1411, 0, 0, 0, 0, 0, 1880, 112,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 1254, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 271, 271, 271,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 1849, 1850, 1851,
	1852, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 1850, 1851, 1852, 0, 0,
	0, 0, 0, 0, 1832, 0, 1865, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 1854, 1856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 1871, 0, 1872, 0, 0, 0, 0, 0,
	0, 1841, 1842, 1865, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 1854, 1856, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 1872, 0, 0, 1847, 0, 0, 0, 1841, 1842,
	0, 0, 0, 0, 3440, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 1863, 0, 1254, 0,
	0, 0, 0, 0, 0, 0, 1254, 0, 0, 0,
	0, 1847, 1411, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 0, 1320, 0, 0, 0, 1514,
	1514, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	3486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3534, 3536, 0, 0, 2321, 1853, 0, 0, 0, 1573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1573, 0, 1573, 112, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1573, 1853, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 112, 0, 1879, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 112, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 1879, 1413, 0, 0, 0, 3647, 0,
	0, 0, 3651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 271, 271, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 1839, 1845,
	1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830,
	1831, 1833, 1834, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 3305, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840,
	0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	0, 0, 0, 271, 271, 0, 0, 271, 0, 2632,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3744, 271,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 1413,
	0, 1413, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 271, 1413, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 1413, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2573,
	1413, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 271, 1413, 271, 0, 0, 1824, 1825, 1411, 1857,
	1858, 1859, 1868, 1869, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 1861, 1855,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	271, 0, 0, 0, 0, 1874, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 112, 1413,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 1850,
	1851, 1852, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 2321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 0, 2321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4048, 0, 0, 1865, 0, 0,
	1875, 0, 0, 0, 4058, 0, 0, 1854, 1856, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 2321,
	1573, 0, 0, 1871, 4076, 1872, 0, 0, 0, 0,
	0, 0, 1841, 1842, 1573, 0, 1573, 0, 0, 0,
	1411, 0, 271, 0, 0, 0, 0, 0, 1573, 0,
	1863, 0, 112, 0, 0, 0, 0, 0, 112, 1573,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4122, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 1573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1573, 0, 1573, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 1411, 1413, 0,
	0, 1413, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 271, 0, 0, 0, 1866, 271, 0, 0,
	0, 0, 0, 1413, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 1879, 1413, 1413,
	1413, 0, 0, 0, 0, 1413, 1413, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 271, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 2321, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 1839,
	1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 0, 0, 0, 0, 0, 4763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 1413, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 271, 0, 0, 271, 0, 0,
	0, 0, 0, 1573, 0, 0, 1573, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1573, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	271, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 2321, 1573, 1573, 1573, 0, 0, 0, 0,
	1573, 1573, 1573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 1413, 1413, 1413, 1413, 1413, 0,
	0, 0, 1573, 0, 0, 0, 0, 0, 1411, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 1825, 0,
	1857, 1858, 1859, 1868, 1869, 1870, 0, 0, 0, 4606,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	1855, 0, 1413, 0, 1413, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1880, 0, 0, 1413, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 1411, 0,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1573, 1573,
	0, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 1411, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 1413, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	1850, 1851, 1852, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 1413, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 1875, 0, 0, 0, 0, 1411, 0, 1854, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 271, 1871, 0, 1872, 0, 0, 0,
	0, 0, 0, 1841, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1573, 1573, 0, 0, 0, 0,
	0, 1863, 0, 4775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 1573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 4818, 0, 0, 0, 1573, 1573,
	1573, 1573, 1573, 1573, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 1411, 0, 0, 0, 0, 271,
	0, 1877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 1853, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 1411, 0, 1573,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1573,
	1573, 1573, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828,
	1829, 1830, 1831, 1833, 1834, 0, 0, 0, 0, 0,
	4759, 0, 0, 1411, 0, 0, 1573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	1414, 286, 287, 1415, 1416, 1417, 0, 1418, 643, 1419,
	1420, 1421, 1422, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 1423,
	648, 298, 299, 300, 301, 302, 303, 1424, 1425, 0,
	304, 649, 650, 651, 1426, 305, 306, 652, 1427, 1494,
	1428, 307, 308, 309, 310, 311, 312, 313, 0, 1429,
	315, 316, 317, 314, 318, 1430, 319, 0, 320, 321,
	322, 323, 324, 325, 1431, 326, 327, 328, 1212, 329,
	330, 331, 1432, 1433, 1435, 1434, 1436, 1437, 1438, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 1439,
	342, 338, 340, 1440, 343, 341, 344, 1441, 345, 346,
	347, 1442, 1443, 348, 349, 350, 1444, 351, 352, 353,
	1445, 354, 355, 356, 1446, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 1447, 276, 1448, 1573, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 1573, 374, 1449, 375, 376,
	377, 1450, 1451, 1213, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1452, 390,
	661, 1453, 662, 391, 1454, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 1215, 397, 398, 1455, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	1456, 1214, 407, 666, 667, 1457, 668, 1458, 408, 409,
	1216, 669, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 1459, 420, 422,
	421, 1460, 423, 670, 1219, 424, 425, 1220, 1461, 426,
	427, 428, 429, 430, 431, 434, 1462, 1463, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1464, 278, 1223, 477,
	478, 1465, 671, 479, 672, 481, 482, 1466, 0, 483,
	0, 1467, 1468, 485, 486, 487, 1469, 1470, 488, 489,
	673, 1224, 490, 1225, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 1471, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 1472, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	1473, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 1474, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 1475,
	568, 569, 567, 570, 571, 572, 1476, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 1477, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 1478, 600, 601, 0, 597, 588, 1479, 602, 603,
	604, 605, 606, 607, 608, 609, 1480, 610, 684, 685,
	686, 687, 1481, 619, 1482, 611, 612, 613, 688, 614,
	689, 1483, 615, 616, 617, 618, 0, 620, 621, 1484,
	1485, 622, 623, 624, 626, 627, 625, 628, 1486, 629,
	1487, 0, 630, 631, 632, 690, 691, 692, 1488, 634,
	633, 635, 693, 636, 637, 1489, 1490, 1491, 1492, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1408, 0, 0, 0, 0,
	0, 0, 0, 2800, 0, 0, 0, 0, 0, 0,
	0, 2801, 279, 281, 280, 282, 283, 284, 285, 1414,
	286, 287, 1415, 1416, 1417, 0, 1418, 643, 1419, 1420,
	1421, 1422, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 1423, 648,
	298, 299, 300, 301, 302, 303, 1424, 1425, 0, 304,
	649, 650, 651, 1426, 305, 306, 652, 1427, 1494, 1428,
	307, 308, 309, 310, 311, 312, 313, 0, 1429, 315,
	316, 317, 314, 318, 1430, 319, 0, 320, 321, 322,
	323, 324, 325, 1431, 326, 327, 328, 1212, 329, 330,
	331, 1432, 1433, 1435, 1434, 1436, 1437, 1438, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 1439, 342,
	338, 340, 1440, 343, 341, 344, 1441, 345, 346, 347,
	1442, 1443, 348, 349, 350, 1444, 351, 352, 353, 1445,
	354, 355, 356, 1446, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 1447, 276, 1448, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 1449, 375, 376, 377,
	1450, 1451, 1213, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1452, 390, 661,
	1453, 662, 391, 1454, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 1215, 397, 398, 1455, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1456,
	1214, 407, 666, 667, 1457, 668, 1458, 408, 409, 1216,
	669, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1459, 420, 422, 421,
	1460, 423, 670, 1219, 424, 425, 1220, 1461, 426, 427,
	428, 429, 430, 431, 434, 1462, 1463, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1464, 278, 1223, 477, 478,
	1465, 671, 479, 672, 481, 482, 1466, 0, 483, 0,
	1467, 1468, 485, 486, 487, 1469, 1470, 488, 489, 673,
	1224, 490, 1225, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 1471, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 1472, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 1473,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 1474, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 1475, 568,
	569, 567, 570, 571, 572, 1476, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 1477, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	1478, 600, 601, 0, 597, 588, 1479, 602, 603, 604,
	605, 606, 607, 608, 609, 1480, 610, 684, 685, 686,
	687, 1481, 619, 1482, 611, 612, 613, 688, 614, 689,
	1483, 615, 616, 617, 618, 0, 620, 621, 1484, 1485,
	622, 623, 624, 626, 627, 625, 628, 1486, 629, 1487,
	0, 630, 631, 632, 690, 691, 692, 1488, 634, 633,
	635, 693, 636, 637, 1489, 1490, 1491, 1492, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1408, 0, 0, 0, 3784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3786, 279,
	281, 280, 282, 283, 284, 285, 1414, 286, 287, 1415,
	1416, 1417, 0, 1418, 643, 1419, 1420, 1421, 1422, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 1423, 648, 298, 299, 300,
	301, 302, 303, 1424, 1425, 0, 304, 649, 650, 651,
	1426, 305, 306, 652, 1427, 1494, 1428, 307, 308, 309,
	310, 311, 312, 313, 0, 1429, 315, 316, 317, 314,
	318, 1430, 319, 0, 320, 321, 322, 323, 324, 325,
	1431, 326, 327, 328, 1212, 329, 330, 331, 1432, 1433,
	1435, 1434, 1436, 1437, 1438, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 1439, 342, 338, 340, 1440,
	343, 341, 344, 1441, 345, 346, 347, 1442, 1443, 348,
	349, 350, 1444, 351, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 1447, 276,
	1448, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 1449, 375, 376, 377, 1450, 1451, 1213,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1452, 390, 661, 1453, 662, 391,
	1454, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	1215, 397, 398, 1455, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1456, 1214, 407, 666,
	667, 1457, 668, 1458, 408, 409, 1216, 669, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1459, 420, 422, 421, 1460, 423, 670,
	1219, 424, 425, 1220, 1461, 426, 427, 428, 429, 430,
	431, 434, 1462, 1463, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1464, 278, 1223, 477, 478, 1465, 671, 479,
	672, 481, 482, 1466, 0, 483, 0, 1467, 1468, 485,
	486, 487, 1469, 1470, 488, 489, 673, 1224, 490, 1225,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 1471, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 1472,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 1473, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	1474, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 1475, 568, 569, 567, 570,
	571, 572, 1476, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	1477, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 1478, 600, 601,
	0, 597, 588, 1479, 602, 603, 604, 605, 606, 607,
	608, 609, 1480, 610, 684, 685, 686, 687, 1481, 619,
	1482, 611, 612, 613, 688, 614, 689, 1483, 615, 616,
	617, 618, 0, 620, 621, 1484, 1485, 622, 623, 624,
	626, 627, 625, 628, 1486, 629, 1487, 0, 630, 631,
	632, 690, 691, 692, 1488, 634, 633, 635, 693, 636,
	637, 1489, 1490, 1491, 1492, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4195,
	279, 281, 280, 282, 283, 284, 285, 1414, 286, 287,
	1415, 1416, 1417, 0, 1418, 643, 1419, 1420, 1421, 1422,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 1423, 648, 298, 299,
	300, 301, 302, 303, 1424, 1425, 0, 304, 649, 650,
	651, 1426, 305, 306, 652, 1427, 1494, 1428, 307, 308,
	309, 310, 311, 312, 313, 0, 1429, 315, 316, 317,
	314, 318, 1430, 319, 0, 320, 321, 322, 323, 324,
	325, 1431, 326, 327, 328, 1212, 329, 330, 331, 1432,
	1433, 1435, 1434, 1436, 1437, 1438, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 1439, 342, 338, 340,
	1440, 343, 341, 344, 1441, 345, 346, 347, 1442, 1443,
	348, 349, 350, 1444, 351, 352, 353, 1445, 354, 355,
	356, 1446, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 1447,
	276, 1448, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 1449, 375, 376, 377, 1450, 1451,
	1213, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1452, 390, 661, 1453, 662,
	391, 1454, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 1215, 397, 398, 1455, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1456, 1214, 407,
	666, 667, 1457, 668, 1458, 408, 409, 1216, 669, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1459, 420, 422, 421, 1460, 423,
	670, 1219, 424, 425, 1220, 1461, 426, 427, 428, 429,
	430, 431, 434, 1462, 1463, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1464, 278, 1223, 477, 478, 1465, 671,
	479, 672, 481, 482, 1466, 0, 483, 0, 1467, 1468,
	485, 486, 487, 1469, 1470, 488, 489, 673, 1224, 490,
	1225, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 1471, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	1472, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 1473, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 1474, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 1475, 568, 569, 567,
	570, 571, 572, 1476, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 1477, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 1478, 600,
	601, 0, 597, 588, 1479, 602, 603, 604, 605, 606,
	607, 608, 609, 1480, 610, 684, 685, 686, 687, 1481,
	619, 1482, 611, 612, 613, 688, 614, 689, 1483, 615,
	616, 617, 618, 0, 620, 621, 1484, 1485, 622, 623,
	624, 626, 627, 625, 628, 1486, 629, 1487, 0, 630,
	631, 632, 690, 691, 692, 1488, 634, 633, 635, 693,
	636, 637, 1489, 1490, 1491, 1492, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4193, 279, 281, 280, 282, 283, 284, 285, 1414, 286,
	287, 1415, 1416, 1417, 0, 1418, 643, 1419, 1420, 1421,
	1422, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 1423, 648, 298,
	299, 300, 301, 302, 303, 1424, 1425, 0, 304, 649,
	650, 651, 1426, 305, 306, 652, 1427, 1494, 1428, 307,
	308, 309, 310, 311, 312, 313, 0, 1429, 315, 316,
	317, 314, 318, 1430, 319, 0, 320, 321, 322, 323,
	324, 325, 1431, 326, 327, 328, 1212, 329, 330, 331,
	1432, 1433, 1435, 1434, 1436, 1437, 1438, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 1439, 342, 338,
	340, 1440, 343, 341, 344, 1441, 345, 346, 347, 1442,
	1443, 348, 349, 350, 1444, 351, 352, 353, 1445, 354,
	355, 356, 1446, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	1447, 276, 1448, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 1449, 375, 376, 377, 1450,
	1451, 1213, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1452, 390, 661, 1453,
	662, 391, 1454, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 1215, 397, 398, 1455, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1456, 1214,
	407, 666, 667, 1457, 668, 1458, 408, 409, 1216, 669,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1459, 420, 422, 421, 1460,
	423, 670, 1219, 424, 425, 1220, 1461, 426, 427, 428,
	429, 430, 431, 434, 1462, 1463, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1464, 278, 1223, 477, 478, 1465,
	671, 479, 672, 481, 482, 1466, 0, 483, 0, 1467,
	1468, 485, 486, 487, 1469, 1470, 488, 489, 673, 1224,
	490, 1225, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 1471, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 1472, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 1473, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 1474, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 1475, 568, 569,
	567, 570, 571, 572, 1476, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 1477, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 1478,
	600, 601, 0, 597, 588, 1479, 602, 603, 604, 605,
	606, 607, 608, 609, 1480, 610, 684, 685, 686, 687,
	1481, 619, 1482, 611, 612, 613, 688, 614, 689, 1483,
	615, 616, 617, 618, 0, 620, 621, 1484, 1485, 622,
	623, 624, 626, 627, 625, 628, 1486, 629, 1487, 0,
	630, 631, 632, 690, 691, 692, 1488, 634, 633, 635,
	693, 636, 637, 1489, 1490, 1491, 1492, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 1408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4421, 279, 281, 280, 282,
	283, 284, 285, 1414, 286, 287, 1415, 1416, 1417, 0,
	1418, 643, 1419, 1420, 1421, 1422, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 1423, 648, 298, 299, 300, 301, 302, 303,
	1424, 1425, 0, 304, 649, 650, 651, 1426, 305, 306,
	652, 1427, 1494, 1428, 307, 308, 309, 310, 311, 312,
	313, 0, 1429, 315, 316, 317, 314, 318, 1430, 319,
	0, 320, 321, 322, 323, 324, 325, 1431, 326, 327,
	328, 1212, 329, 330, 331, 1432, 1433, 1435, 1434, 1436,
	1437, 1438, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 1439, 342, 338, 340, 1440, 343, 341, 344,
	1441, 345, 346, 347, 1442, 1443, 348, 349, 350, 1444,
	351, 352, 353, 1445, 354, 355, 356, 1446, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 1447, 276, 1448, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	1449, 375, 376, 377, 1450, 1451, 1213, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1452, 390, 661, 1453, 662, 391, 1454, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 1215, 397, 398,
	1455, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1456, 1214, 407, 666, 667, 1457, 668,
	1458, 408, 409, 1216, 669, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1459, 420, 422, 421, 1460, 423, 670, 1219, 424, 425,
	1220, 1461, 426, 427, 428, 429, 430, 431, 434, 1462,
	1463, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1464,
	278, 1223, 477, 478, 1465, 671, 479, 672, 481, 482,
	1466, 0, 483, 0, 1467, 1468, 485, 486, 487, 1469,
	1470, 488, 489, 673, 1224, 490, 1225, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	1471, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 1472, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 1473, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 1474, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 1475, 568, 569, 567, 570, 571, 572, 1476,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 1477, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 1478, 600, 601, 0, 597, 588,
	1479, 602, 603, 604, 605, 606, 607, 608, 609, 1480,
	610, 684, 685, 686, 687, 1481, 619, 1482, 611, 612,
	613, 688, 614, 689, 1483, 615, 616, 617, 618, 0,
	620, 621, 1484, 1485, 622, 623, 624, 626, 627, 625,
	628, 1486, 629, 1487, 0, 630, 631, 632, 690, 691,
	692, 1488, 634, 633, 635, 693, 636, 637, 1489, 1490,
	1491, 1492, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 1408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4284, 279, 281, 280, 282, 283, 284, 285, 1414, 286,
	287, 1415, 1416, 1417, 0, 1418, 643, 1419, 1420, 1421,
	1422, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 1423, 648, 298,
	299, 300, 301, 302, 303, 1424, 1425, 0, 304, 649,
	650, 651, 1426, 305, 306, 652, 1427, 1494, 1428, 307,
	308, 309, 310, 311, 312, 313, 0, 1429, 315, 316,
	317, 314, 318, 1430, 319, 0, 320, 321, 322, 323,
	324, 325, 1431, 326, 327, 328, 1212, 329, 330, 331,
	1432, 1433, 1435, 1434, 1436, 1437, 1438, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 1439, 342, 338,
	340, 1440, 343, 341, 344, 1441, 345, 346, 347, 1442,
	1443, 348, 349, 350, 1444, 351, 352, 353, 1445, 354,
	355, 356, 1446, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	1447, 276, 1448, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 1449, 375, 376, 377, 1450,
	1451, 1213, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1452, 390, 661, 1453,
	662, 391, 1454, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 1215, 397, 398, 1455, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1456, 1214,
	407, 666, 667, 1457, 668, 1458, 408, 409, 1216, 669,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1459, 420, 422, 421, 1460,
	423, 670, 1219, 424, 425, 1220, 1461, 426, 427, 428,
	429, 430, 431, 434, 1462, 1463, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1464, 278, 1223, 477, 478, 1465,
	671, 479, 672, 481, 482, 1466, 0, 483, 0, 1467,
	1468, 485, 486, 487, 1469, 1470, 488, 489, 673, 1224,
	490, 1225, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 1471, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 1472, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 1473, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 1474, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 1475, 568, 569,
	567, 570, 571, 572, 1476, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 1477, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 1478,
	600, 601, 0, 597, 588, 1479, 602, 603, 604, 605,
	606, 607, 608, 609, 1480, 610, 684, 685, 686, 687,
	1481, 619, 1482, 611, 612, 613, 688, 614, 689, 1483,
	615, 616, 617, 618, 0, 620, 621, 1484, 1485, 622,
	623, 624, 626, 627, 625, 628, 1486, 629, 1487, 0,
	630, 631, 632, 690, 691, 692, 1488, 634, 633, 635,
	693, 636, 637, 1489, 1490, 1491, 1492, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 1408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4123, 279, 281, 280, 282,
	283, 284, 285, 1414, 286, 287, 1415, 1416, 1417, 0,
	1418, 643, 1419, 1420, 1421, 1422, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 1423, 648, 298, 299, 300, 301, 302, 303,
	1424, 1425, 0, 304, 649, 650, 651, 1426, 305, 306,
	652, 1427, 1494, 1428, 307, 308, 309, 310, 311, 312,
	313, 0, 1429, 315, 316, 317, 314, 318, 1430, 319,
	0, 320, 321, 322, 323, 324, 325, 1431, 326, 327,
	328, 1212, 329, 330, 331, 1432, 1433, 1435, 1434, 1436,
	1437, 1438, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 1439, 342, 338, 340, 1440, 343, 341, 344,
	1441, 345, 346, 347, 1442, 1443, 348, 349, 350, 1444,
	351, 352, 353, 1445, 354, 355, 356, 1446, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 1447, 276, 1448, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	1449, 375, 376, 377, 1450, 1451, 1213, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1452, 390, 661, 1453, 662, 391, 1454, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 1215, 397, 398,
	1455, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1456, 1214, 407, 666, 667, 1457, 668,
	1458, 408, 409, 1216, 669, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1459, 420, 422, 421, 1460, 423, 670, 1219, 424, 425,
	1220, 1461, 426, 427, 428, 429, 430, 431, 434, 1462,
	1463, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1464,
	278, 1223, 477, 478, 1465, 671, 479, 672, 481, 482,
	1466, 0, 483, 0, 1467, 1468, 485, 486, 487, 1469,
	1470, 488, 489, 673, 1224, 490, 1225, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	1471, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 1472, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 1473, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 1474, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 1475, 568, 569, 567, 570, 571, 572, 1476,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 1477, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 1478, 600, 601, 0, 597, 588,
	1479, 602, 603, 604, 605, 606, 607, 608, 609, 1480,
	610, 684, 685, 686, 687, 1481, 619, 1482, 611, 612,
	613, 688, 614, 689, 1483, 615, 616, 617, 618, 0,
	620, 621, 1484, 1485, 622, 623, 624, 626, 627, 625,
	628, 1486, 629, 1487, 0, 630, 631, 632, 690, 691,
	692, 1488, 634, 633, 635, 693, 636, 637, 1489, 1490,
	1491, 1492, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 1408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3802, 279, 281, 280, 282, 283, 284, 285, 1414, 286,
	287, 1415, 1416, 1417, 0, 1418, 643, 1419, 1420, 1421,
	1422, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 1423, 648, 298,
	299, 300, 301, 302, 303, 1424, 1425, 0, 304, 649,
	650, 651, 1426, 305, 306, 652, 1427, 1494, 1428, 307,
	308, 309, 310, 311, 312, 313, 0, 1429, 315, 316,
	317, 314, 318, 1430, 319, 0, 320, 321, 322, 323,
	324, 325, 1431, 326, 327, 328, 1212, 329, 330, 331,
	1432, 1433, 1435, 1434, 1436, 1437, 1438, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 1439, 342, 338,
	340, 1440, 343, 341, 344, 1441, 345, 346, 347, 1442,
	1443, 348, 349, 350, 1444, 351, 352, 353, 1445, 354,
	355, 356, 1446, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	1447, 276, 1448, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 1449, 375, 376, 377, 1450,
	1451, 1213, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1452, 390, 661, 1453,
	662, 391, 1454, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 1215, 397, 398, 1455, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1456, 1214,
	407, 666, 667, 1457, 668, 1458, 408, 409, 1216, 669,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1459, 420, 422, 421, 1460,
	423, 670, 1219, 424, 425, 1220, 1461, 426, 427, 428,
	429, 430, 431, 434, 1462, 1463, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1464, 278, 1223, 477, 478, 1465,
	671, 479, 672, 481, 482, 1466, 0, 483, 0, 1467,
	1468, 485, 486, 487, 1469, 1470, 488, 489, 673, 1224,
	490, 1225, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 1471, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 1472, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 1473, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 1474, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 1475, 568, 569,
	567, 570, 571, 572, 1476, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 1477, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 1478,
	600, 601, 0, 597, 588, 1479, 602, 603, 604, 605,
	606, 607, 608, 609, 1480, 610, 684, 685, 686, 687,
	1481, 619, 1482, 611, 612, 613, 688, 614, 689, 1483,
	615, 616, 617, 618, 0, 620, 621, 1484, 1485, 622,
	623, 624, 626, 627, 625, 628, 1486, 629, 1487, 0,
	630, 631, 632, 690, 691, 692, 1488, 634, 633, 635,
	693, 636, 637, 1489, 1490, 1491, 1492, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 1408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3620, 279, 281, 280, 282,
	283, 284, 285, 1414, 286, 287, 1415, 1416, 1417, 0,
	1418, 643, 1419, 1420, 1421, 1422, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 1423, 648, 298, 299, 300, 301, 302, 303,
	1424, 1425, 0, 304, 649, 650, 651, 1426, 305, 306,
	652, 1427, 1494, 1428, 307, 308, 309, 310, 311, 312,
	313, 0, 1429, 315, 316, 317, 314, 318, 1430, 319,
	0, 320, 321, 322, 323, 324, 325, 1431, 326, 327,
	328, 1212, 329, 330, 331, 1432, 1433, 1435, 1434, 1436,
	1437, 1438, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 1439, 342, 338, 340, 1440, 343, 341, 344,
	1441, 345, 346, 347, 1442, 1443, 348, 349, 350, 1444,
	351, 352, 353, 1445, 354, 355, 356, 1446, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 1447, 276, 1448, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	1449, 375, 376, 377, 1450, 1451, 1213, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1452, 390, 661, 1453, 662, 391, 1454, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 1215, 397, 398,
	1455, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1456, 1214, 407, 666, 667, 1457, 668,
	1458, 408, 409, 1216, 669, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1459, 420, 422, 421, 1460, 423, 670, 1219, 424, 425,
	1220, 1461, 426, 427, 428, 429, 430, 431, 434, 1462,
	1463, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1464,
	278, 1223, 477, 478, 1465, 671, 479, 672, 481, 482,
	1466, 0, 483, 0, 1467, 1468, 485, 486, 487, 1469,
	1470, 488, 489, 673, 1224, 490, 1225, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	1471, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 1472, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 1473, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 1474, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 1475, 568, 569, 567, 570, 571, 572, 1476,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 1477, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 1478, 600, 601, 0, 597, 588,
	1479, 602, 603, 604, 605, 606, 607, 608, 609, 1480,
	610, 684, 685, 686, 687, 1481, 619, 1482, 611, 612,
	613, 688, 614, 689, 1483, 615, 616, 617, 618, 0,
	620, 621, 1484, 1485, 622, 623, 624, 626, 627, 625,
	628, 1486, 629, 1487, 0, 630, 631, 632, 690, 691,
	692, 1488, 634, 633, 635, 693, 636, 637, 1489, 1490,
	1491, 1492, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 1408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2655, 279, 281, 280, 282, 283, 284, 285, 1414, 286,
	287, 1415, 1416, 1417, 0, 1418, 643, 1419, 1420, 1421,
	1422, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 1423, 648, 298,
	299, 300, 301, 302, 303, 1424, 1425, 0, 304, 649,
	650, 651, 1426, 305, 306, 652, 1427, 1494, 1428, 307,
	308, 309, 310, 311, 312, 313, 0, 1429, 315, 316,
	317, 314, 318, 1430, 319, 0, 320, 321, 322, 323,
	324, 325, 1431, 326, 327, 328, 1212, 329, 330, 331,
	1432, 1433, 1435, 1434, 1436, 1437, 1438, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 1439, 342, 338,
	340, 1440, 343, 341, 344, 1441, 345, 346, 347, 1442,
	1443, 348, 349, 350, 1444, 351, 352, 353, 1445, 354,
	355, 356, 1446, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	1447, 276, 1448, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 1449, 375, 376, 377, 1450,
	1451, 1213, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1452, 390, 661, 1453,
	662, 391, 1454, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 1215, 397, 398, 1455, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1456, 1214,
	407, 666, 667, 1457, 668, 1458, 408, 409, 1216, 669,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1459, 420, 422, 421, 1460,
	423, 670, 1219, 424, 425, 1220, 1461, 426, 427, 428,
	429, 430, 431, 434, 1462, 1463, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1464, 278, 1223, 477, 478, 1465,
	671, 479, 672, 481, 482, 1466, 0, 483, 0, 1467,
	1468, 485, 486, 487, 1469, 1470, 488, 489, 673, 1224,
	490, 1225, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 1471, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 1472, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 1473, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 1474, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 1475, 568, 569,
	567, 570, 571, 572, 1476, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 1477, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 1478,
	600, 601, 0, 597, 588, 1479, 602, 603, 604, 605,
	606, 607, 608, 609, 1480, 610, 684, 685, 686, 687,
	1481, 619, 1482, 611, 612, 613, 688, 614, 689, 1483,
	615, 616, 617, 618, 0, 620, 621, 1484, 1485, 622,
	623, 624, 626, 627, 625, 628, 1486, 629, 1487, 0,
	630, 631, 632, 690, 691, 692, 1488, 634, 633, 635,
	693, 636, 637, 1489, 1490, 1491, 1492, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 1405, 0, 1408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2280, 279, 281, 280, 282,
	283, 284, 285, 1414, 286, 287, 1415, 1416, 1417, 0,
	1418, 643, 1419, 1420, 1421, 1422, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 1423, 648, 298, 299, 300, 301, 302, 303,
	1424, 1425, 0, 304, 649, 650, 651, 1426, 305, 306,
	652, 1427, 1494, 1428, 307, 308, 309, 310, 311, 312,
	313, 0, 1429, 315, 316, 317, 314, 318, 1430, 319,
	0, 320, 321, 322, 323, 324, 325, 1431, 326, 327,
	328, 1212, 329, 330, 331, 1432, 1433, 1435, 1434, 1436,
	1437, 1438, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 1439, 342, 338, 340, 1440, 343, 341, 344,
	1441, 345, 346, 347, 1442, 1443, 348, 349, 350, 1444,
	351, 352, 353, 1445, 354, 355, 356, 1446, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 1447, 276, 1448, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	1449, 375, 376, 377, 1450, 1451, 1213, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1452, 390, 661, 1453, 662, 391, 1454, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 1215, 397, 398,
	1455, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1456, 1214, 407, 666, 667, 1457, 668,
	1458, 408, 409, 1216, 669, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1459, 420, 422, 421, 1460, 423, 670, 1219, 424, 425,
	1220, 1461, 426, 427, 428, 429, 430, 431, 434, 1462,
	1463, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1464,
	278, 1223, 477, 478, 1465, 671, 479, 672, 481, 482,
	1466, 0, 483, 0, 1467, 1468, 485, 486, 487, 1469,
	1470, 488, 489, 673, 1224, 490, 1225, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	1471, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 1472, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 1473, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 1474, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 1475, 568, 569, 567, 570, 571, 572, 1476,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 1477, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 1478, 600, 601, 0, 597, 588,
	1479, 602, 603, 604, 605, 606, 607, 608, 609, 1480,
	610, 684, 685, 686, 687, 1481, 619, 1482, 611, 612,
	613, 688, 614, 689, 1483, 615, 616, 617, 618, 0,
	620, 621, 1484, 1485, 622, 623, 624, 626, 627, 625,
	628, 1486, 629, 1487, 0, 630, 631, 632, 690, 691,
	692, 1488, 634, 633, 635, 693, 636, 637, 1489, 1490,
	1491, 1492, 638, 639, 694, 640, 641, 642, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 1414, 286, 287, 1415, 1416, 1417, 0, 1418,
	643, 1419, 1420, 1421, 1422, 288, 289, 1211, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 1423, 648, 298, 299, 300, 301, 302, 303, 1424,
	1425, 0, 304, 649, 650, 651, 1426, 305, 306, 652,
	1427, 1494, 1428, 307, 308, 309, 310, 311, 312, 313,
	0, 1429, 315, 316, 317, 314, 318, 1430, 319, 0,
	320, 321, 322, 323, 324, 325, 1431, 326, 327, 328,
	1212, 329, 330, 331, 1432, 1433, 1435, 1434, 1436, 1437,
	1438, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 1439, 342, 338, 340, 1440, 343, 341, 344, 1441,
	345, 346, 347, 1442, 1443, 348, 349, 350, 1444, 351,
	352, 353, 1445, 354, 355, 356, 1446, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 1447, 276, 1448, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 1449,
	375, 376, 377, 1450, 1451, 1213, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1452, 390, 661, 1453, 662, 391, 1454, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 1215, 397, 398, 1455,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1456, 1214, 407, 666, 667, 1457, 668, 1458,
	408, 409, 1216, 669, 1217, 410, 411, 412, 1218, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1459,
	420, 422, 421, 1460, 423, 670, 1219, 424, 425, 1220,
	1461, 426, 427, 428, 429, 430, 431, 434, 1462, 1463,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1221,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1222, 476, 464, 1464, 278,
	1223, 477, 478, 1465, 671, 479, 672, 481, 482, 1466,
	0, 483, 0, 1467, 1468, 485, 486, 487, 1469, 1470,
	488, 489, 673, 1224, 490, 1225, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 1471,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 1472, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 1473, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 1474, 543, 544, 545,
	1226, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 1475, 568, 569, 567, 570, 571, 572, 1476, 573,
	574, 556, 557, 575, 576, 1227, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 1477, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 1478, 600, 601, 0, 597, 588, 1479,
	602, 603, 604, 605, 606, 607, 608, 609, 1480, 610,
	684, 685, 686, 687, 1481, 619, 1482, 611, 612, 613,
	688, 614, 689, 1483, 615, 616, 617, 618, 0, 620,
	621, 1484, 1485, 622, 623, 624, 626, 627, 625, 628,
	1486, 629, 1487, 0, 630, 631, 632, 690, 691, 692,
	1488, 634, 633, 635, 693, 636, 637, 1489, 1490, 1491,
	1492, 638, 639, 694, 640, 641, 642, 2630, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 2627, 286, 287, 0, 0, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 2628, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 2626, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	2629, 0, 0, 0, 0, 0, 0, 0, 1131, 2625,
	0, 1091, 1129, 1147, 1119, 1120, 1121, 1117, 1118, 1130,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1171, 1135, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	1184, 0, 296, 1191, 297, 1190, 0, 1201, 298, 299,
	300, 301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232,
	651, 0, 305, 306, 1177, 0, 1158, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1212, 329, 330, 331, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335,
	336, 1194, 337, 339, 1188, 1187, 1107, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1179, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1113, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1202, 1203, 370, 1126,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1186,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 1199, 1200, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1209, 0, 1136,
	391, 0, 392, 393, 394, 395, 396, 1172, 1173, 1176,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1214, 407,
	1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1210, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 1165, 1164, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1104, 278, 1223, 477, 478, 1127, 1175,
	479, 1189, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 1224, 490,
	1225, 1204, 491, 492, 1114, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 1205, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1185, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 1115, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 238, 568, 569, 567,
	570, 571, 572, 1168, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 1183, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1230, 591, 592, 593, 594, 1206, 598, 599, 0, 600,
	601, 1101, 597, 588, 240, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 1195, 1196, 1197, 1198, 0,
	619, 0, 611, 612, 613, 1207, 614, 1208, 1125, 615,
	616, 617, 618, 0, 620, 621, 0, 1108, 622, 623,
	624, 626, 627, 625, 628, 1169, 629, 0, 0, 630,
	631, 632, 1644, 1192, 1229, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 232, 638, 639, 694, 640,
	641, 642, 1105, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 1098, 1099, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 0, 1905, 1903, 0, 0, 1129, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 238, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 240, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 620, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 1644, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 232, 638, 639, 694,
	640, 641, 642, 1105, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 0, 1905, 3261, 0, 0, 1129, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 238, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 240, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 1644, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 232, 638, 639,
	694, 640, 641, 642, 1105, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 0, 1905, 1903, 0, 0, 1129, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 2761,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 337, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 2766, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 2762, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 278, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 2763, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1105, 0, 0, 0, 2675,
	0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 0, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	337, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 0, 0, 0, 0, 0, 0, 0, 0,
	1131, 2673, 0, 2672, 1129, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 0, 0, 0,
	0, 0, 0, 0, 1131, 2670, 0, 2669, 1129, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	0, 0, 0, 0, 0, 0, 0, 0, 1131, 2667,
	0, 2666, 1129, 1147, 1119, 1120, 1121, 1117, 1118, 1130,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1171, 1135, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	1184, 0, 296, 1191, 297, 1190, 0, 1201, 298, 299,
	300, 301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232,
	651, 0, 305, 306, 1177, 0, 1158, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1212, 329, 330, 331, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335,
	336, 1194, 337, 339, 1188, 1187, 1107, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1179, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1113, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1202, 1203, 370, 1126,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1186,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 1199, 1200, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1209, 0, 1136,
	391, 0, 392, 393, 394, 395, 396, 1172, 1173, 1176,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1214, 407,
	1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1210, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 1165, 1164, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1104, 278, 1223, 477, 478, 1127, 1175,
	479, 1189, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 1224, 490,
	1225, 1204, 491, 492, 1114, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 1205, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1185, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 1115, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1168, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 1183, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1230, 591, 592, 593, 594, 1206, 598, 599, 0, 600,
	601, 1101, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 1195, 1196, 1197, 1198, 0,
	619, 0, 611, 612, 613, 1207, 614, 1208, 1125, 615,
	616, 617, 618, 0, 620, 621, 0, 1108, 622, 623,
	624, 626, 627, 625, 628, 1169, 629, 0, 0, 630,
	631, 632, 690, 1192, 1229, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 1098, 1099, 0, 0, 0, 0, 0, 0,
	0, 0, 1131, 2664, 0, 1744, 1129, 1147, 1119, 1120,
	1121, 1117, 1118, 1130, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 1171,
	1135, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 1184, 0, 296, 1191, 297, 1190,
	0, 1201, 298, 299, 300, 301, 302, 303, 1137, 1170,
	1102, 304, 1231, 1232, 651, 0, 305, 306, 1177, 0,
	1158, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	332, 333, 334, 335, 336, 1194, 337, 339, 1188, 1187,
	1107, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1179, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1113, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1202, 1203, 370, 1126, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1186, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 1199, 1200,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1209, 0, 1136, 391, 0, 392, 393, 394, 395,
	396, 1172, 1173, 1176, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1214, 407, 1181, 1182, 0, 1142, 0, 408,
	409, 1216, 1174, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1210, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 1165, 1164, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1104, 278, 1223,
	477, 478, 1127, 1175, 479, 1189, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 1204, 491, 492, 1114, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 1205,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1185, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 1115, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1168, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 1183, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1230, 591, 592, 593, 594, 1206,
	598, 599, 0, 600, 601, 1101, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 1195,
	1196, 1197, 1198, 0, 619, 0, 611, 612, 613, 1207,
	614, 1208, 1125, 615, 616, 617, 618, 0, 620, 621,
	0, 1108, 622, 623, 624, 626, 627, 625, 628, 1169,
	629, 0, 0, 630, 631, 632, 690, 1192, 1229, 0,
	634, 633, 635, 693, 636, 637, 1743, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1105, 0, 0, 0,
	1094, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100,
	0, 0, 0, 0, 0, 0, 1098, 1099, 0, 279,
	281, 280, 282, 283, 284, 285, 1131, 286, 287, 0,
	1129, 0, 0, 0, 1171, 1135, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 1184,
	0, 296, 1191, 297, 1190, 0, 1201, 298, 299, 300,
	301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651,
	0, 305, 306, 1177, 0, 1158, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335, 336,
	1194, 337, 339, 1188, 1187, 1107, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1179, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1113, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1202, 1203, 370, 1126, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1186, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 1199, 1200, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1209, 0, 1136, 391,
	0, 392, 393, 394, 395, 396, 1172, 1173, 1176, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1214, 407, 1181,
	1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1210,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 1165, 1164, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1104, 278, 1223, 477, 478, 1127, 1175, 479,
	1189, 481, 482, 0, 0, 483, 0, 1109, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	1204, 491, 492, 1114, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 1205, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1185, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	1115, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1168, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 1183, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1230,
	591, 592, 593, 594, 1206, 598, 599, 0, 600, 601,
	1101, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 1195, 1196, 1197, 1198, 0, 619,
	0, 611, 612, 613, 1207, 614, 1208, 1125, 615, 616,
	617, 618, 0, 620, 621, 0, 1108, 622, 623, 624,
	626, 627, 625, 628, 1169, 629, 0, 0, 630, 631,
	632, 690, 1192, 1229, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1105, 0, 0, 0, 0, 0, 1147, 1119, 1120,
	1121, 1117, 1118, 1130, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 0, 279, 281, 280, 282, 283, 284,
	285, 1131, 286, 287, 0, 1129, 0, 0, 0, 1171,
	1135, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 1184, 0, 296, 1191, 297, 1190,
	0, 1201, 298, 299, 300, 301, 302, 303, 1137, 1170,
	1102, 304, 1231, 1232, 651, 0, 305, 306, 1177, 0,
	1158, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 4787, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	332, 333, 334, 335, 336, 1194, 337, 339, 1188, 1187,
	1107, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1179, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1113, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1202, 1203, 370, 1126, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1186, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 1199, 1200,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1209, 0, 1136, 391, 0, 392, 393, 394, 395,
	396, 1172, 1173, 1176, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1214, 407, 1181, 1182, 0, 1142, 0, 408,
	409, 1216, 1174, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1210, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 1165, 1164, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1104, 278, 1223,
	477, 478, 1127, 1175, 479, 1189, 481, 482, 0, 0,
	483, 0, 1109, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 1204, 491, 492, 1114, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 1205,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1185, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 1115, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1168, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 1183, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1230, 591, 592, 593, 594, 1206,
	598, 599, 0, 600, 601, 1101, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 1195,
	1196, 1197, 1198, 0, 619, 0, 611, 612, 613, 1207,
	614, 1208, 1125, 615, 616, 617, 618, 0, 620, 621,
	0, 1108, 622, 623, 624, 626, 627, 625, 628, 1169,
	629, 0, 0, 630, 631, 632, 690, 1192, 1229, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1105, 0, 0, 0,
	0, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100,
	0, 0, 0, 0, 0, 0, 1098, 1099, 0, 279,
	281, 280, 282, 283, 284, 285, 1131, 286, 287, 0,
	1129, 0, 0, 0, 1171, 1135, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 1184,
	0, 296, 1191, 297, 1190, 0, 1201, 298, 299, 300,
	301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651,
	0, 305, 306, 1177, 0, 1158, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335, 336,
	1194, 337, 339, 1188, 1187, 1107, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1179, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1113, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1202, 1203, 370, 1126, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1186, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 1199, 1200, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1209, 0, 1136, 391,
	0, 392, 393, 394, 395, 396, 1172, 1173, 1176, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 2507, 404, 405, 406, 0, 1214, 407, 1181,
	1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1210,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 1165, 1164, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1104, 278, 1223, 477, 478, 1127, 1175, 479,
	1189, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	1204, 491, 492, 1114, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 1205, 510, 678, 511, 512, 2506,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1185, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	1115, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1168, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 1183, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1230,
	591, 592, 593, 594, 1206, 598, 599, 0, 600, 601,
	1101, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 1195, 1196, 1197, 1198, 0, 619,
	0, 611, 612, 613, 1207, 614, 1208, 1125, 615, 616,
	617, 618, 0, 620, 621, 0, 1108, 622, 623, 624,
	626, 627, 625, 628, 1169, 629, 0, 0, 630, 631,
	632, 690, 1192, 1229, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1105, 0, 0, 0, 0, 0, 1147, 1119, 1120,
	1121, 1117, 1118, 1130, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 0, 279, 281, 280, 282, 283, 284,
	285, 1131, 286, 287, 0, 1129, 0, 0, 0, 1171,
	1135, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 1184, 0, 296, 1191, 297, 1190,
	0, 1201, 298, 299, 300, 301, 302, 303, 1137, 1170,
	1102, 304, 1231, 1232, 651, 0, 305, 306, 1177, 0,
	1158, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	332, 333, 334, 335, 336, 1194, 337, 339, 1188, 1187,
	1107, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1179, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1113, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1202, 1203, 370, 1126, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1186, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 1199, 1200,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1209, 0, 1136, 391, 0, 392, 393, 394, 395,
	396, 1172, 1173, 1176, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1214, 407, 1181, 1182, 0, 1142, 0, 408,
	409, 1216, 1174, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1210, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 1165, 1164, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1104, 278, 1223,
	477, 478, 1127, 1175, 479, 1189, 481, 482, 0, 0,
	483, 0, 1109, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 1204, 491, 492, 1114, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 1205,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1185, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 1115, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1168, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 1183, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1230, 591, 592, 593, 594, 1206,
	598, 599, 0, 600, 601, 1101, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 1195,
	1196, 1197, 1198, 0, 619, 0, 611, 612, 613, 1207,
	614, 1208, 1125, 615, 616, 617, 618, 0, 620, 621,
	0, 1108, 622, 623, 624, 626, 627, 625, 628, 1169,
	629, 0, 0, 630, 631, 632, 690, 1192, 1229, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1105, 0, 0, 0,
	0, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100,
	0, 0, 0, 0, 0, 0, 1098, 1099, 0, 279,
	281, 280, 282, 283, 284, 285, 1131, 286, 287, 0,
	1129, 0, 0, 0, 1171, 1135, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 1184,
	0, 296, 1191, 297, 1190, 0, 1201, 298, 299, 300,
	301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651,
	0, 305, 306, 1177, 0, 1158, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 4511, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335, 336,
	1194, 337, 339, 1188, 1187, 1107, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1179, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1113, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1202, 1203, 370, 1126, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1186, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 1199, 1200, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1209, 0, 1136, 391,
	0, 392, 393, 394, 395, 396, 1172, 1173, 1176, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1214, 407, 1181,
	1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1210,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 1165, 1164, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1104, 278, 1223, 477, 478, 1127, 1175, 479,
	1189, 481, 482, 0, 0, 483, 0, 1109, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	1204, 491, 492, 1114, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 1205, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1185, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	1115, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1168, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 1183, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1230,
	591, 592, 593, 594, 1206, 598, 599, 0, 600, 601,
	1101, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 1195, 1196, 1197, 1198, 0, 619,
	0, 611, 612, 613, 1207, 614, 1208, 1125, 615, 616,
	617, 618, 0, 620, 621, 0, 1108, 622, 623, 624,
	626, 627, 625, 628, 1169, 629, 0, 0, 630, 631,
	632, 690, 1192, 1229, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1105, 0, 0, 0, 0, 0, 1147, 1119, 1120,
	1121, 1117, 1118, 1130, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 0, 279, 281, 280, 282, 283, 284,
	285, 1131, 286, 287, 0, 1129, 0, 0, 0, 1171,
	1135, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 1184, 0, 296, 1191, 297, 1190,
	0, 1201, 298, 299, 300, 301, 302, 303, 1137, 1170,
	1102, 304, 1231, 1232, 651, 0, 305, 306, 1177, 0,
	1158, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	332, 333, 334, 335, 336, 1194, 337, 339, 1188, 1187,
	1107, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1179, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1113, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1202, 1203, 370, 1126, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1186, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 1199, 1200,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1209, 0, 1136, 391, 0, 392, 393, 394, 395,
	396, 1172, 1173, 1176, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1214, 407, 1181, 1182, 0, 1142, 0, 408,
	409, 1216, 1174, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1210, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 1165, 1164, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1104, 4088, 1223,
	477, 478, 1127, 1175, 479, 1189, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 1204, 491, 492, 1114, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 1205,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1185, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 1115, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1168, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 1183, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1230, 591, 592, 593, 594, 1206,
	598, 599, 0, 600, 601, 1101, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 1195,
	1196, 1197, 1198, 0, 619, 0, 611, 612, 613, 1207,
	614, 1208, 1125, 615, 616, 617, 618, 0, 620, 621,
	0, 1108, 622, 623, 624, 626, 627, 625, 628, 1169,
	629, 0, 0, 630, 631, 632, 690, 1192, 1229, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1105, 0, 0, 0,
	0, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100,
	0, 0, 0, 0, 0, 0, 1098, 1099, 1974, 279,
	281, 280, 282, 283, 284, 285, 1131, 286, 287, 0,
	1129, 0, 0, 0, 1171, 1135, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 1184,
	0, 296, 1191, 297, 1190, 0, 1201, 298, 299, 300,
	301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651,
	0, 305, 306, 1177, 0, 1158, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335, 336,
	1194, 337, 339, 1188, 1187, 1107, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1179, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1113, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1202, 1203, 370, 1126, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1186, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 1199, 1200, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1209, 0, 1136, 391,
	0, 392, 393, 394, 395, 396, 1172, 1173, 1176, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1214, 407, 1181,
	1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1210,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 1165, 1164, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1104, 278, 1223, 477, 478, 1127, 1175, 479,
	1189, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	1204, 491, 492, 1114, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 1205, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1185, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	1115, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1168, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 1183, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1230,
	591, 592, 593, 594, 1206, 598, 599, 0, 600, 601,
	1101, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 1195, 1196, 1197, 1198, 0, 619,
	0, 611, 612, 613, 1207, 614, 1208, 1125, 615, 616,
	617, 618, 0, 620, 621, 0, 1108, 622, 623, 624,
	626, 627, 625, 628, 1169, 629, 0, 0, 630, 631,
	632, 690, 1192, 1229, 3780, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1105, 0, 0, 0, 0, 0, 1147, 1119, 1120,
	1121, 1117, 1118, 1130, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 0, 279, 281, 280, 282, 283, 284,
	285, 1131, 286, 287, 0, 1129, 0, 0, 0, 1171,
	1135, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 1184, 0, 296, 1191, 297, 1190,
	0, 1201, 298, 299, 300, 301, 302, 303, 1137, 1170,
	1102, 304, 1231, 1232, 651, 0, 305, 306, 1177, 0,
	1158, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	332, 333, 334, 335, 336, 1194, 337, 339, 1188, 1187,
	1107, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1179, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1113, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1202, 1203, 370, 1126, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1186, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 1199, 1200,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1209, 0, 1136, 391, 0, 392, 393, 394, 395,
	396, 1172, 1173, 1176, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1214, 407, 1181, 1182, 0, 1142, 0, 408,
	409, 1216, 1174, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1210, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 1165, 1164, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1104, 278, 1223,
	477, 478, 1127, 1175, 479, 1189, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 1204, 491, 492, 1114, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 1205,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1185, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 1115, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1168, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 1183, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1230, 591, 592, 593, 594, 1206,
	598, 599, 0, 600, 601, 1101, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 1195,
	1196, 1197, 1198, 0, 619, 0, 611, 612, 613, 1207,
	614, 1208, 1125, 615, 616, 617, 618, 0, 620, 621,
	0, 1108, 622, 623, 624, 626, 627, 625, 628, 1169,
	629, 0, 0, 630, 631, 632, 690, 1192, 1229, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1105, 0, 0, 0,
	0, 0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100,
	0, 0, 0, 0, 0, 0, 1098, 1099, 1974, 279,
	281, 280, 282, 283, 284, 285, 1131, 286, 287, 0,
	1129, 0, 0, 0, 1171, 1135, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 1184,
	0, 296, 1191, 297, 1190, 0, 1201, 298, 299, 300,
	301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651,
	0, 305, 306, 1177, 0, 1158, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335, 336,
	1194, 337, 339, 1188, 1187, 1107, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1179, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1113, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1202, 1203, 370, 1126, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1186, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 2766, 1213,
	378, 379, 380, 1199, 1200, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1209, 0, 1136, 391,
	0, 392, 393, 394, 395, 396, 1172, 1173, 1176, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1214, 407, 1181,
	1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1210,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 1165, 1164, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1104, 278, 1223, 477, 478, 1127, 1175, 479,
	1189, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	1204, 491, 492, 1114, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 1205, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1185, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	1115, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1168, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 1183, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1230,
	591, 592, 593, 594, 1206, 598, 599, 0, 600, 601,
	1101, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 1195, 1196, 1197, 1198, 0, 619,
	0, 611, 612, 613, 1207, 614, 1208, 1125, 615, 616,
	617, 618, 0, 620, 621, 0, 1108, 622, 623, 624,
	626, 627, 625, 628, 1169, 629, 0, 0, 630, 631,
	632, 690, 1192, 1229, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1105, 0, 0, 0, 0, 0, 1147, 1119, 1120,
	1121, 1117, 1118, 1130, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 0, 279, 281, 280, 282, 283, 284,
	285, 1131, 286, 287, 0, 1129, 0, 0, 0, 1171,
	1135, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 1184, 0, 296, 1191, 297, 1190,
	0, 1201, 298, 299, 300, 301, 302, 303, 1137, 1170,
	1102, 304, 1231, 1232, 651, 0, 305, 306, 1177, 0,
	1158, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	332, 333, 334, 335, 336, 1194, 337, 339, 1188, 1187,
	1107, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1179, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1113, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1202, 1203, 370, 1126, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1186, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 1199, 1200,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1209, 0, 1136, 391, 0, 392, 393, 394, 395,
	396, 1172, 1173, 1176, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1214, 407, 1181, 1182, 0, 1142, 0, 408,
	409, 1216, 1174, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1210, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 1165, 1164, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1104, 278, 1223,
	477, 478, 1127, 1175, 479, 1189, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 1204, 491, 492, 1114, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 1205,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1185, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 1115, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1168, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 1183, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1230, 591, 592, 593, 594, 1206,
	598, 599, 0, 600, 601, 1101, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 1195,
	1196, 1197, 1198, 0, 619, 0, 611, 612, 613, 1207,
	614, 1208, 1125, 615, 616, 617, 618, 0, 620, 621,
	0, 1108, 622, 623, 624, 626, 627, 625, 628, 1169,
	629, 0, 0, 630, 631, 632, 690, 1192, 1229, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 1098, 1099, 0, 0,
	0, 0, 0, 0, 0, 0, 1131, 1903, 0, 2771,
	1129, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	337, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1105, 0, 0, 0, 2769, 0, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 0, 279, 281, 280, 282, 283, 284, 285,
	1131, 286, 287, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 0,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 337, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 278, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1105, 0, 0, 0, 2757,
	0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 0, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	337, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1105, 0, 0, 0, 2745, 0, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 0, 279, 281, 280, 282, 283, 284, 285,
	1131, 286, 287, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 0,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 337, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 278, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1105, 0, 0, 0, 2743,
	0, 2734, 2741, 1120, 1121, 1117, 1118, 1130, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 0, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	2737, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 2738, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 2739, 444, 2736, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 2740, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 2735, 642,
	1105, 0, 0, 0, 2731, 0, 2734, 2741, 1120, 1121,
	1117, 1118, 1130, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 0, 279, 281, 280, 282, 283, 284, 285,
	1131, 286, 287, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 0,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 2737, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 2738, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 2739,
	444, 2736, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 278, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 2740, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 2735, 642, 1105, 0, 0, 0, 0,
	0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 0, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	337, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 0, 0, 0, 0, 0, 0, 1911, 0,
	1131, 0, 0, 0, 1129, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 2486,
	286, 287, 0, 0, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 2448, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 2421, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 1749, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 1678, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 1673, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 1660, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 1655, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 1556, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1555,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 1550, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1549, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 1543, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 1505, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 1509, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 1510, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 1508, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 1354, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 0, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	4834, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 4833, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 0, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 4832, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 4834, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 4833, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 4440,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 4441, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 4439, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 0, 0,
	1147, 1119, 1120, 1121, 3228, 3229, 1130, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 0, 0, 1147, 1119, 1120, 1121, 3226,
	3227, 1130, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 0, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 1100, 0, 0, 0, 0, 0, 0, 2494,
	2495, 0, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 0, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 0, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 2753, 0, 0,
	0, 0, 0, 0, 2751, 2752, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 0, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	0, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 3221, 3222,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 0, 0, 0, 0, 0, 0, 0, 2157,
	2158, 0, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 0, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	4834, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 0,
	1174, 0, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 0, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 4833, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 1091, 0,
	1269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 0, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 1170, 0, 304, 649, 650, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 666, 667, 0,
	668, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1255, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	0, 278, 1223, 477, 478, 0, 1175, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 1261, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 680, 1263,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 238, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 0, 597,
	588, 240, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 1644,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 232, 638, 639, 694, 640, 641, 642, 1269,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 1259, 0, 1998,
	0, 1171, 0, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 1170, 0, 304, 649, 650, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 666, 667, 0, 668,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1255, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 0,
	278, 1223, 477, 478, 0, 1175, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 1261, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 680, 1263, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 238, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 0, 597, 588,
	240, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 1644, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 232, 638, 639, 694, 640, 641, 642, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3385, 0, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1259, 0, 1998, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 1171, 0, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 1170, 0, 304, 649, 650, 651,
	0, 305, 306, 1177, 0, 1158, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1202, 1203, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1209, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1172, 1173, 1176, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1214, 407, 666,
	667, 0, 668, 0, 408, 409, 1216, 1174, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1255, 420, 422, 421, 0, 423, 1210,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 1165, 1164, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 0, 278, 1223, 477, 478, 0, 1175, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 1261, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	1204, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 1205, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	680, 1263, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1168, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 1206, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 1207, 614, 1208, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 1169, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1251, 0, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1259,
	0, 1257, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1171, 0, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 1170, 0, 304,
	649, 650, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 666, 667, 0, 668, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1255, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 0, 278, 1223, 477, 478,
	0, 1175, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 1261, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 680, 1263, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 1259, 0, 1257, 0, 1171, 0, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 1170, 0, 304, 649,
	650, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 666, 667, 0, 668, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1255, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 0, 278, 1223, 477, 478, 0,
	1175, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	1261, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 680, 1263, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 1259, 0, 1257, 0, 1171, 0, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 1170, 0, 304, 649, 650,
	651, 0, 305, 306, 1177, 0, 1158, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1212, 329, 330, 331, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1202, 1203, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1209, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 1172, 1173, 1176,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1214, 407,
	666, 667, 0, 668, 0, 408, 409, 1216, 1174, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1210, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 1165, 1164, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 0, 278, 1223, 477, 478, 0, 1175,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 1224, 490,
	1225, 1204, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 1205, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1168, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 1206, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 1207, 614, 1208, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 1169, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 4255, 0, 1171, 0, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 1170, 0, 304, 649, 650, 651,
	0, 305, 306, 1177, 0, 1158, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1202, 1203, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1209, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1172, 1173, 1176, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1214, 407, 666,
	667, 0, 668, 0, 408, 409, 1216, 1174, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1210,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 1165, 1164, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 0, 278, 1223, 477, 478, 0, 1175, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	1204, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 1205, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	680, 1263, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1168, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 1206, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 1207, 614, 1208, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 1169, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 0, 273, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 2598, 2599, 2600, 2617, 2618, 2619, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 2620, 0, 643, 0, 0, 0, 0, 288,
	289, 1895, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 1880, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 2610, 0, 315, 316, 317, 314,
	318, 0, 319, 2606, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 2611, 2612, 2613, 2614, 371, 372, 373, 658, 0,
	0, 2605, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 2615, 2616, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 2608, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 2609, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	1879, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 1091, 0,
	1570, 2595, 2596, 2597, 2621, 2607, 2601, 0, 2603, 2604,
	2602, 2589, 2590, 2591, 2592, 2593, 2594, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 1494, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1214, 407, 666, 667, 0,
	668, 0, 408, 409, 1216, 669, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	0, 0, 1223, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 238, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 240, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 1644,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 232, 638, 639, 694, 640, 641, 642, 0,
	1641, 233, 1570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 193,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 1494, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1214, 407, 666,
	667, 0, 668, 0, 408, 409, 1216, 669, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 0, 0, 1223, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 238, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 240, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 1644, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 232, 638, 639, 694, 640, 641,
	642, 1570, 1569, 233, 0, 0, 0, 1567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 193, 0, 643, 0, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 1494, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1214, 407, 666, 667,
	0, 668, 0, 408, 409, 1216, 669, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 0, 0, 1223, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1570, 1569, 0, 0, 0, 0, 1567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	1668, 0, 643, 0, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 1494, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1214, 407, 666, 667, 0,
	668, 0, 408, 409, 1216, 669, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	0, 0, 1223, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1570,
	1569, 0, 0, 0, 0, 1567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 3698,
	0, 643, 0, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 1494, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1214, 407, 666, 667, 0, 668,
	0, 408, 409, 1216, 669, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 0,
	0, 1223, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	2362, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1570, 2272,
	0, 0, 0, 0, 2273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 1668, 0,
	643, 0, 0, 0, 0, 288, 289, 1211, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 1494, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1212, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1213, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 1215, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1214, 407, 666, 667, 0, 668, 0,
	408, 409, 1216, 669, 1217, 410, 411, 412, 1218, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	2271, 422, 421, 0, 423, 670, 1219, 424, 425, 1220,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1221,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1222, 476, 464, 0, 0,
	1223, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 1224, 490, 1225, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1226, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 1227, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1570, 1569, 0,
	0, 0, 0, 1567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 1668, 0, 643,
	0, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	1494, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 1214, 407, 666, 667, 0, 668, 0, 408,
	409, 1216, 669, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 0, 0, 1223,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1091, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 1650, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 238, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 240,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 1644, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 273, 0,
	232, 638, 639, 694, 640, 641, 642, 0, 0, 233,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 193, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 273, 3135,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 2012, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 4995, 0, 1171,
	0, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 1170,
	0, 304, 649, 650, 651, 0, 305, 306, 1177, 0,
	1158, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1202, 1203, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1209, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1172, 1173, 1176, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1214, 407, 666, 667, 0, 668, 0, 408,
	409, 1216, 1174, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1210, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 1165, 1164, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 0, 278, 1223,
	477, 478, 0, 1175, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 1204, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 1205,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1168, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 1206,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 1207,
	614, 1208, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 1169,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	273, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 3648, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 1638, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 273, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	3123, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 273, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	3805, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	921, 0, 822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	2349, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 829, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 919, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 827, 602, 603, 604, 605, 606, 828,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 2056, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 832, 0, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 0, 2062, 0,
	296, 2052, 297, 2068, 0, 2075, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 2078, 2079, 0, 0,
	305, 306, 0, 0, 1494, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 1194,
	337, 339, 2066, 2065, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 0, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 2064, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 2073, 2074, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 0, 0, 0, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1214, 407, 2059, 2060,
	0, 2055, 0, 408, 409, 1216, 0, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 0, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 0, 0, 1223, 477, 478, 0, 0, 479, 2067,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 0, 1224, 490, 1225, 0,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 2049, 504, 505, 506, 2050,
	507, 508, 509, 0, 510, 0, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 2063,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 0,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 2061, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 2077, 591,
	592, 593, 594, 0, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 2069, 2070, 2071, 2072, 0, 619, 0,
	611, 612, 613, 0, 614, 0, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	0, 2053, 2076, 0, 634, 633, 635, 0, 636, 637,
	0, 0, 0, 0, 638, 639, 0, 640, 641, 642,
	822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 3925, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 2043, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 829, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 3924, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 827, 602, 603, 604, 605, 606, 828, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 3923, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 822, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 279,
	281, 280, 282, 283, 284, 285, 2083, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 832, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 829, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	2082, 563, 564, 565, 566, 0, 2084, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 827, 602, 603, 604, 605, 606, 828,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	2081, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 822, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 2034, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 832, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	829, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 2033, 563, 564, 565, 566, 0, 2035, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 827, 602, 603, 604, 605,
	606, 828, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 2032, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 820, 0, 822, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 832, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 829, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 827, 602, 603, 604,
	605, 606, 828, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 822, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 832, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 829, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 827, 602,
	603, 604, 605, 606, 828, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 822,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 832, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 829, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 2400, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 2401, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	827, 602, 603, 604, 605, 606, 828, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 2402, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	832, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 1570, 1569, 0, 0,
	0, 0, 1567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 832, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 1494,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1214, 407, 666, 667, 0, 668, 0, 408, 409,
	1216, 669, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 0, 0, 1223, 477,
	478, 4013, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1570, 1569, 0, 0, 0,
	0, 1567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 1494, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1214, 407, 666, 667, 0, 668, 0, 408, 409, 1216,
	669, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 0, 0, 1223, 477, 478,
	3598, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1698, 0, 1570, 1569, 0, 0,
	0, 0, 1567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 1494,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 1697,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1214, 407, 666, 667, 0, 668, 0, 408, 409,
	1216, 669, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 0, 0, 1223, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 1696, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 1695, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1563, 0, 1570, 1569, 0,
	0, 0, 0, 1567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	1494, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1565, 664, 665, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 1214, 407, 666, 667, 0, 668, 0, 408,
	409, 1216, 669, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 0, 0, 1223,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1570, 1569, 0, 0,
	0, 0, 1567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 1494,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1214, 407, 666, 667, 0, 668, 0, 408, 409,
	1216, 669, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 0, 0, 1223, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1570, 1569, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 1494, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1214, 407, 666, 667, 0, 668, 0, 408, 409, 1216,
	669, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 0, 0, 1223, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 1570, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	1494, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 1214, 407, 666, 667, 0, 668, 0, 408,
	409, 1216, 669, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 0, 0, 1223,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 2925, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 3640, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 2929, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 3639, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 2928, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 3636,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 3638, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	3635, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 2927, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 3637, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 2925,
	305, 306, 652, 0, 0, 2919, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	2921, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	2929, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 2928, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 2918, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 2927, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 2926, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	1775, 0, 273, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 1774, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 1773, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 1776, 555,
	562, 563, 564, 565, 566, 0, 1772, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 1770, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 1771, 633, 635, 693, 636,
	637, 1498, 0, 273, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 1500, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 1261,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1495, 0, 273, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1497, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	1261, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 1401, 0, 273, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 1403,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 1261, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 727, 0, 273, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 726, 284, 285,
	715, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 718, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 724, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 720,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 714, 0, 273, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 715, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 718, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 719,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	720, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 715, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 718, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 719, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 720, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 715, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 718,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 4023, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 720, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 1261,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 273, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 3543, 476, 464, 0, 278, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 3093, 0, 273, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	3092, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 2369, 0, 273, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	2307, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 2314, 0,
	273, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 2313, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 2300,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 2302, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 2265, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 1261,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1616, 0, 273, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1615, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 1518, 0, 273, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1511, 0, 273, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1513, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1337, 0, 273, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1336, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1327, 0, 273, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 1326, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1324, 0, 273,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1323, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 1319, 0,
	273, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 1318, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 696,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	264, 0, 273, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 273, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 273, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 718, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 719, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 720,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 2409, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	273, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 2407, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 273, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 2405, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 273, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 2320, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 273, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	2108, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 2102, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 906, 0, 273,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	905, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	904, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 3639, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 4336, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	1365, 0, 273, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 1368, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 1366,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 787, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 786, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	785, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	1369, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 783, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1365, 0, 273, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 1368, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	1366, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 787, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 786, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 785, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 1369, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 783, 685, 686, 687, 0,
	619, 0, 611, 1367, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 705, 0, 273, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 704, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 703,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 273, 3135, 0, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 273, 4352, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 273, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 4635, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 273, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 4227, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 3974, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	273, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 2806, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 273,
	3135, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 3132, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 2226, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 786, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 785,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 783, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 2379, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 2367, 0, 273, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 1671, 0, 273, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1664, 0, 273, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 777, 0, 273, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 773, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 778, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 787, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	786, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 785, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 1649, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 783,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1622, 0, 273, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 1621, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1606, 0, 273,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1604, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 1599, 0,
	273, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 1576,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1574, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	1561, 0, 273, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1523, 0, 273, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1503, 0, 273, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 1371, 0, 273, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 786, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 785, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 783, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1342, 0, 273, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1341, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1333, 0, 273, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1332, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 1285, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 792, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	777, 0, 273, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 773, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 772, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	778, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 787, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 786, 547, 548, 549, 550,
	774, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	785, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	775, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 783, 685, 686, 687, 0, 619,
	0, 611, 779, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 766, 0, 273, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 767, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 729, 0, 273, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 722, 0, 273, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 700, 0, 273, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	273, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 3668, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 273, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 786, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	785, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 783, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 273, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 3583, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 273, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	3559, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 3556, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	273, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 3510, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 273, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 3508, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 273, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 3496, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 273, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	3493, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 3103, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	273, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 767, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 273, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 2338, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 0, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 273, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1304, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 273, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 1234, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 0, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 0, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 0, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 0, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1612, 0, 1349,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 0,
	297, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 0, 0, 0, 0, 305, 306,
	0, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 1351, 332, 333, 334, 335, 336, 0, 337, 339,
	0, 0, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	0, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 0, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 0, 0, 0, 391, 0, 392, 393,
	394, 395, 396, 1611, 0, 0, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 0, 0, 0, 0,
	0, 408, 409, 0, 0, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 0, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 0, 479, 0, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 0, 0, 490, 0, 0, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 0, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 0, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1352,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 0, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 0, 591, 592, 593,
	594, 0, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 0, 0, 0, 0, 0, 619, 0, 611, 612,
	613, 0, 614, 0, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 0, 1526,
	0, 1349, 634, 633, 635, 0, 636, 637, 0, 0,
	0, 0, 638, 639, 0, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 0, 297, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 0, 0, 0, 0,
	305, 306, 0, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 1351, 332, 333, 334, 335, 336, 0,
	337, 339, 0, 0, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 0, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 0, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 0, 0, 0, 391, 0,
	392, 393, 394, 395, 396, 1525, 0, 0, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 0, 0,
	0, 0, 0, 408, 409, 0, 0, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 0, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 0, 479, 0,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 0, 0, 490, 0, 0,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 0, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 0,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 0,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1352, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 0, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 0, 591,
	592, 593, 594, 0, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 0, 0, 0, 0, 0, 619, 0,
	611, 612, 613, 0, 614, 0, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	0, 1347, 0, 1349, 634, 633, 635, 0, 636, 637,
	0, 0, 0, 0, 638, 639, 0, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 0, 297, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 0, 0,
	0, 0, 305, 306, 0, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 1351, 332, 333, 334, 335,
	336, 0, 337, 339, 0, 0, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 0, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 0,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 0, 0, 0,
	391, 0, 392, 393, 394, 395, 396, 1346, 0, 0,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	0, 0, 0, 0, 0, 408, 409, 0, 0, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	0, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 0,
	479, 0, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 0, 0, 490,
	0, 0, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 0, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 0, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 0, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1352, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 0, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	0, 591, 592, 593, 594, 0, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 0, 0, 0, 0, 0,
	619, 0, 611, 612, 613, 0, 614, 0, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 0, 2122, 0, 1349, 634, 633, 635, 0,
	636, 637, 0, 0, 0, 0, 638, 639, 0, 640,
	641, 642, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 0, 297, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	0, 0, 0, 0, 305, 306, 0, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 1351, 332, 333,
	334, 335, 336, 0, 337, 339, 0, 0, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 0, 0, 0, 0, 0, 408, 409, 0,
	0, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 0, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 0, 479, 0, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 0,
	0, 490, 0, 0, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 0,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 0, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 0, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1352, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	0, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 0, 591, 592, 593, 594, 0, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 0, 0, 0,
	0, 0, 619, 0, 611, 612, 613, 0, 614, 0,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 0, 2089, 0, 1349, 634, 633,
	635, 0, 636, 637, 0, 0, 0, 0, 638, 639,
	0, 640, 641, 642, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 0, 297, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 0, 0, 0, 0, 305, 306, 0, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 1351,
	332, 333, 334, 335, 336, 0, 337, 339, 0, 0,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 0, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 0, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 0, 0, 0, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 0, 0, 0, 0, 0, 408,
	409, 0, 0, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 0, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 0, 479, 0, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 0, 0, 490, 0, 0, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 0, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 0, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 0, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1352, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 0, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 0, 591, 592, 593, 594, 0,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 0,
	0, 0, 0, 0, 619, 0, 611, 612, 613, 0,
	614, 0, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 0, 0, 0, 1349,
	634, 633, 635, 0, 636, 637, 0, 0, 0, 0,
	638, 639, 0, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 0,
	297, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 0, 0, 0, 0, 305, 306,
	0, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 1351, 332, 333, 334, 335, 336, 0, 337, 339,
	0, 0, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	0, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 0, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 0, 0, 0, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 0, 0, 0, 0,
	0, 408, 409, 0, 0, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 0, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 0, 479, 0, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 0, 0, 490, 0, 0, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 0, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 0, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 0, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1352,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 0, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 0, 591, 592, 593,
	594, 0, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 0, 0, 0, 0, 0, 619, 0, 611, 612,
	613, 0, 614, 0, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 0, 0,
	0, 0, 634, 633, 635, 0, 636, 637, 0, 0,
	0, 0, 638, 639, 0, 640, 641, 642, 1824, 1825,
	0, 1857, 1858, 1859, 1868, 1869, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 1855, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 1824, 1825, 1874, 1857, 1858,
	1859, 1868, 1869, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1880, 0, 0, 1861, 1855, 0,
	0, 0, 0, 1826, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 1846, 1874, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 1850, 1851, 1852, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 1850, 1851,
	1852, 0, 0, 0, 0, 0, 0, 1832, 0, 1865,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 1854,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 1872, 0, 0,
	0, 0, 0, 0, 1841, 1842, 1865, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 1854, 1856, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 1872, 0, 0, 1847, 0, 0,
	0, 1841, 1842, 0, 0, 0, 0, 0, 1824, 1825,
	0, 1857, 1858, 1859, 1868, 1869, 1870, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 1855, 0, 0, 1847, 0, 0, 0, 1827, 0,
	0, 0, 0, 1873, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 0, 1877, 1826, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	1849, 1850, 1851, 1852, 0, 0, 0, 0, 1866, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 1865,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 1854,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 1879, 1872, 0, 0,
	0, 0, 0, 0, 1841, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 1847, 0, 0,
	1838, 1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836,
	1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0, 0,
	0, 4661, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 1839, 1845,
	1867, 1844, 1840, 1873, 1837, 1835, 1836, 1828, 1829, 1830,
	1831, 1833, 1834, 0, 0, 0, 0, 0, 4615, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 1825, 0, 1857,
	1858, 1859, 1868, 1869, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 1855,
	0, 0, 0, 0, 0, 0, 1827, 0, 1853, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 1880, 0, 0, 0, 0, 0, 0, 1824,
	1825, 1826, 1857, 1858, 1859, 1868, 1869, 1870, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 1866, 0,
	1843, 1861, 1855, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 1850,
	1851, 1852, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836,
	1828, 1829, 1830, 1831, 1833, 1834, 0, 1865, 0, 0,
	1875, 4614, 0, 0, 0, 0, 0, 1854, 1856, 0,
	0, 1849, 1850, 1851, 1852, 0, 0, 0, 0, 0,
	0, 1832, 0, 1871, 0, 1872, 0, 0, 0, 0,
	0, 0, 1841, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870,
	1865, 0, 0, 1875, 0, 1847, 0, 0, 0, 0,
	1854, 1856, 0, 1861, 1855, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 1871, 0, 1872, 0,
	1874, 0, 0, 0, 0, 1841, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1880, 0, 0,
	0, 1873, 0, 1863, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 1847, 1862,
	0, 0, 0, 0, 0, 1843, 0, 0, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 1877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 1850, 1851, 1852, 0, 0, 1848,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 1865, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 1854, 1856, 0, 0, 0, 1879, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 1871, 0,
	1872, 0, 0, 0, 0, 0, 0, 1841, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 1839,
	1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 0, 0, 1873, 0, 0, 4424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1877, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 1839, 1845, 1867, 1844, 1840, 0, 1837, 1835,
	1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0,
	1824, 1825, 4251, 1857, 1858, 1859, 1868, 1869, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 1861, 1855, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 1824, 1825, 0, 1857, 1858,
	1859, 1868, 1869, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 1855, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1880, 1849, 1850, 1851, 1852, 0, 0, 0, 0,
	1826, 0, 1832, 1864, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 1843,
	1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0,
	0, 0, 0, 0, 4170, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 1854, 1856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 1872,
	0, 0, 0, 0, 0, 0, 1841, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 1849, 1850, 1851,
	1852, 0, 0, 0, 0, 0, 0, 1832, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1861, 1855, 0, 0, 1865, 0, 0, 1875,
	1827, 0, 0, 0, 0, 1873, 1854, 1856, 0, 1874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 1862, 1872, 0, 1880, 0, 0, 0,
	0, 1841, 1842, 0, 1877, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 1863,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 1849, 1850, 1851, 1852, 0, 0, 0, 1877,
	1866, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 1854, 1856, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 1872,
	0, 0, 0, 0, 0, 0, 1841, 1842, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 1866, 0, 0, 0, 1847,
	0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 0, 1837,
	1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0,
	0, 0, 0, 4169, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 1839, 1845,
	1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830,
	1831, 1833, 1834, 0, 0, 0, 0, 0, 4168, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 1824, 1825, 0, 1857, 1858, 1859,
	1868, 1869, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1861, 1855, 0, 0,
	1866, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 1824, 1825, 1874, 1857, 1858, 1859, 1868, 1869, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 1879, 0, 1861, 1855, 0, 0, 0, 0, 1826,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 1846,
	1874, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 0, 1837,
	1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0,
	0, 0, 0, 3810, 0, 0, 1849, 1850, 1851, 1852,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 1850, 1851, 1852, 0, 0, 0,
	0, 0, 0, 1832, 0, 1865, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 1854, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 1872, 0, 0, 0, 0, 0, 0,
	1841, 1842, 1865, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 1854, 1856, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	1872, 0, 0, 1847, 0, 0, 0, 1841, 1842, 0,
	0, 0, 0, 0, 1824, 1825, 0, 1857, 1858, 1859,
	1868, 1869, 1870, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1861, 1855, 0, 0,
	1847, 0, 0, 0, 1827, 0, 0, 0, 0, 1873,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 0, 1877, 1826,
	0, 0, 0, 0, 0, 0, 1873, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 1849, 1850, 1851, 1852,
	0, 0, 0, 0, 1866, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 1865, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 1854, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 1879, 1872, 0, 0, 0, 0, 0, 0,
	1841, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 1838, 1839, 1845, 1867,
	1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 0, 0, 0, 0, 0, 3303, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 1873,
	1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0,
	0, 0, 0, 0, 3302, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1861, 1855, 0, 0, 0, 0,
	0, 0, 1827, 0, 1853, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 1880, 0,
	0, 0, 0, 0, 0, 1824, 1825, 1826, 1857, 1858,
	1859, 1868, 1869, 1870, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 1866, 0, 1843, 1861, 1855, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 1850, 1851, 1852, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 1839, 1845, 1867,
	1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 0, 1865, 0, 0, 1875, 3301, 0, 0,
	0, 0, 0, 1854, 1856, 0, 0, 1849, 1850, 1851,
	1852, 0, 0, 0, 0, 0, 0, 1832, 0, 1871,
	0, 1872, 0, 0, 0, 0, 0, 0, 1841, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 1824, 1825, 0,
	1857, 1858, 1859, 1868, 1869, 1870, 1865, 0, 0, 1875,
	0, 1847, 0, 0, 0, 0, 1854, 1856, 0, 1861,
	1855, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 1871, 0, 1872, 0, 1874, 0, 0, 0,
	0, 1841, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1880, 0, 0, 0, 1873, 0, 1863,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 1847, 1862, 2189, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 1877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 2187, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	1850, 1851, 1852, 0, 0, 1848, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 1865, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 1854, 1856,
	0, 0, 0, 1879, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 1871, 0, 1872, 0, 0, 0,
	0, 0, 0, 1841, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840,
	0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	0, 0, 1873, 0, 0, 3300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1877, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 1839, 1845,
	1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830,
	1831, 1833, 1834, 0, 0, 0, 3265, 0, 1824, 1825,
	0, 1857, 1858, 1859, 1868, 1869, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2188, 1853, 0, 0,
	1861, 1855, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 1850, 1851, 1852, 0, 0, 0, 0, 0, 1864,
	1832, 4907, 0, 0, 0, 0, 0, 0, 0, 1838,
	1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828,
	1829, 1830, 1831, 1833, 1834, 0, 0, 0, 0, 1824,
	1825, 0, 1857, 1858, 1859, 1868, 1869, 1870, 0, 1865,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 1854,
	1856, 1861, 1855, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 1871, 0, 1872, 1874, 0,
	0, 0, 0, 0, 1841, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1863, 0, 1826, 1824, 1825, 0, 1857, 1858,
	1859, 1868, 1869, 1870, 1846, 0, 0, 1847, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 1861, 1855, 0,
	0, 0, 0, 3236, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1880, 0, 1873, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 1862, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 1850, 1851, 1852, 0, 0, 0, 0, 0,
	0, 1832, 0, 3365, 4906, 0, 0, 0, 3364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	1865, 0, 0, 1875, 0, 0, 0, 0, 0, 0,
	1854, 1856, 0, 0, 0, 0, 0, 1849, 1850, 1851,
	1852, 1848, 0, 0, 0, 0, 1871, 1832, 1872, 0,
	0, 0, 0, 0, 0, 1841, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 1847, 1875,
	0, 0, 0, 0, 0, 0, 1854, 1856, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 1872, 0, 0, 0, 0, 0,
	0, 1841, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 1877, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836,
	1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0, 0,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 2779, 0, 0, 0,
	0, 0, 0, 1824, 1825, 0, 1857, 1858, 1859, 1868,
	1869, 1870, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 1861, 1855, 0, 0, 0,
	2778, 0, 0, 1827, 0, 1853, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 1848, 1880,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 1866, 0, 1843, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 1839, 1845, 1867, 1844, 1840, 0, 1837, 1835,
	1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 1850, 1851, 1852, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 1839, 1845,
	1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830,
	1831, 1833, 1834, 0, 1865, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 1854, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 1872, 0, 0, 0, 0, 0, 0, 1841,
	1842, 0, 0, 0, 0, 0, 1824, 1825, 0, 1857,
	1858, 1859, 1868, 1869, 1870, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 1855,
	0, 0, 1847, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 1824, 1825, 1874, 1857, 1858, 1859, 1868,
	1869, 1870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1880, 0, 0, 1861, 1855, 0, 0, 0,
	0, 1826, 0, 1827, 0, 0, 0, 0, 1873, 0,
	0, 1846, 1874, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 1862, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 1877, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 1849, 1850,
	1851, 1852, 0, 0, 0, 0, 0, 0, 1832, 0,
	4518, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 1850, 1851, 1852, 0,
	0, 0, 0, 1866, 0, 1832, 0, 1865, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 1854, 1856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 1879, 1872, 0, 0, 0, 0,
	0, 0, 1841, 1842, 1865, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 1854, 1856, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 1872, 0, 0, 1847, 0, 0, 0, 1841,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 1838, 1839, 1845, 1867, 1844,
	1840, 1873, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 1824, 1825, 0,
	1857, 1858, 1859, 1868, 1869, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 1861,
	1855, 0, 0, 1866, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1880, 1879, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 1839,
	1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 1839, 1845, 1867, 1844,
	1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	1850, 1851, 1852, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1861, 1855, 0, 0, 1865, 0,
	0, 1875, 1827, 0, 0, 0, 0, 0, 1854, 1856,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 1872, 0, 1880, 0,
	0, 0, 0, 1841, 1842, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 1863, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 1849, 1850, 1851, 1852, 0, 0,
	0, 1877, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1825, 0, 1857, 1858,
	1859, 1868, 1869, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 1875, 1861, 1855, 0,
	0, 0, 0, 1854, 1856, 1827, 0, 1853, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 1871,
	0, 1872, 0, 0, 0, 0, 0, 0, 1841, 1842,
	1848, 1880, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 1866, 0, 1843,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4295, 1873, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1877, 1849, 1850, 1851,
	1852, 0, 0, 0, 0, 0, 0, 1832, 0, 3995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828,
	1829, 1830, 1831, 1833, 1834, 0, 1865, 0, 0, 1875,
	0, 0, 1853, 0, 0, 0, 1854, 1856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 1872, 1848, 0, 0, 0, 0,
	0, 1841, 1842, 0, 0, 0, 0, 0, 1824, 1825,
	0, 1857, 1858, 1859, 1868, 1869, 1870, 0, 0, 1863,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	1861, 1855, 0, 0, 1847, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 3996, 0, 1826, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840,
	0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	1849, 1850, 1851, 1852, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 1865,
	0, 0, 1875, 1861, 1855, 0, 0, 0, 0, 1854,
	1856, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 1871, 1879, 1872, 0, 0,
	0, 0, 0, 0, 1841, 1842, 0, 1880, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 1839, 1845,
	1867, 1844, 1840, 1873, 1837, 1835, 1836, 1828, 1829, 1830,
	1831, 1833, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 1849, 1850, 1851, 1852, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	3371, 0, 0, 0, 0, 0, 1824, 1825, 0, 1857,
	1858, 1859, 1868, 1869, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 1855,
	0, 0, 1865, 3366, 0, 1875, 1827, 0, 1853, 0,
	0, 0, 1854, 1856, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	1872, 1848, 1880, 0, 0, 0, 0, 1841, 1842, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 1863, 0, 0, 1866, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 1849, 1850,
	1851, 1852, 0, 0, 0, 1877, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836,
	1828, 1829, 1830, 1831, 1833, 1834, 0, 1865, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 1854, 1856, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 1872, 0, 0, 0, 0,
	0, 0, 1841, 1842, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870,
	0, 1866, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 1861, 1855, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1880, 0, 0,
	0, 1873, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 1862,
	0, 0, 0, 0, 0, 1843, 0, 0, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 0,
	1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 1850, 1851, 1852, 0, 0, 1848,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 1825, 0, 1857,
	1858, 1859, 1868, 1869, 1870, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 1855,
	0, 0, 1865, 3304, 0, 1875, 1827, 0, 0, 0,
	0, 0, 1854, 1856, 0, 1874, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	1872, 0, 1880, 0, 0, 0, 0, 1841, 1842, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 1863, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 1839,
	1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 0, 0, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 1849, 1850,
	1851, 1852, 0, 0, 0, 1877, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 3331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	1825, 0, 1857, 1858, 1859, 1868, 1869, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	1875, 1861, 1855, 0, 0, 0, 0, 1854, 1856, 1827,
	0, 1853, 0, 0, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 1871, 0, 1872, 0, 0, 0, 0,
	0, 0, 1841, 1842, 1848, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 1866, 0, 1843, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 1849, 1850, 1851, 1852, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 0,
	1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0,
	1865, 0, 0, 1875, 0, 0, 1853, 0, 0, 0,
	1854, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 1872, 1848,
	0, 0, 0, 0, 0, 1841, 1842, 0, 0, 0,
	0, 0, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869,
	1870, 0, 0, 1863, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 1861, 1855, 0, 0, 1847, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 1839,
	1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 1849, 1850, 1851, 1852, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1825, 0, 1857, 1858,
	1859, 1868, 1869, 1870, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 1865, 0, 0, 1875, 1861, 1855, 0,
	0, 0, 0, 1854, 1856, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 1871,
	1879, 1872, 0, 0, 0, 0, 0, 0, 1841, 1842,
	0, 1880, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2351, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 1839, 1845, 1867, 1844, 1840, 1873, 1837, 1835,
	1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1877, 1849, 1850, 1851,
	1852, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 1865, 0, 0, 1875,
	1827, 0, 1853, 0, 0, 0, 1854, 1856, 0, 1874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 1872, 1848, 1880, 0, 0, 0,
	0, 1841, 1842, 0, 0, 1826, 1824, 1825, 0, 1857,
	1858, 1859, 1868, 1869, 1870, 1846, 0, 0, 0, 1863,
	0, 0, 1866, 0, 1843, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 1847, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 1850, 1851, 1852, 0, 0, 0, 1877,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840,
	0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	0, 1865, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 1854, 1856, 0, 0, 1853, 0, 0, 1849, 1850,
	1851, 1852, 0, 0, 0, 0, 0, 1871, 1832, 1872,
	0, 0, 0, 0, 0, 0, 1841, 1842, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 1865, 0, 1847,
	1875, 0, 0, 0, 0, 0, 0, 1854, 1856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 1841, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 1839, 1845,
	1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830,
	1831, 1833, 1834, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 971, 0,
	1020, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	994, 0, 977, 976, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 996, 0, 0, 0, 0, 0,
	978, 0, 0, 0, 0, 981, 0, 1879, 0, 0,
	1031, 0, 1864, 0, 0, 0, 0, 0, 0, 991,
	992, 0, 1838, 1839, 1845, 1867, 1844, 1840, 1009, 1837,
	1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 1021, 983, 0, 0,
	0, 0, 0, 984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 985, 0, 1864, 0,
	0, 0, 0, 0, 0, 1018, 0, 0, 1838, 1839,
	1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1019, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 987, 0, 0, 0, 0, 0, 0,
	0, 975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	988, 989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 997, 995,
	0, 0, 0, 0, 0, 0, 990, 0, 0, 0,
	1006, 0, 0, 1026, 1025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1028, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1022, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 982, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 980, 0, 0, 0, 1013, 1014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1023, 1011, 0, 0, 0, 0, 0,
	0, 0, 1029, 1007, 0, 0, 1000, 998, 0, 1003,
	0, 0, 0, 0, 0, 1004, 0, 0, 973, 0,
	1024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 974, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1015, 0, 1005, 0, 0, 0,
	0, 0, 1002, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1027, 0, 0, 0, 0, 0, 0, 0,
	1008, 0, 0, 0, 0, 0, 0, 0, 0, 986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1010, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1012,
}

var sqlPact = [...]int{
	10548, -1000, -1000, -1000, -1000, 187, -1000, -1000, 186, 185,
	184, 183, 178, 177, 176, 172, 167, 166, 165, -1000,
	-1000, -1000, -1000, -1000, -1000, 163, -1000, -1000, 162, -1000,
	161, 160, 159, -1000, -1000, 158, -1000, 157, -1000, -1000,
	-1000, -1000, 154, 149, 147, 91998, 91437, 92550, 2349, 115962,
	99210, 2209, 81393, 115401, 80832, 114840, 2165, 9316, 114279, 2801,
	146, -1000, 113718, 139, 138, 136, -1000, 113157, -1000, 2007,
	-1000, 134, -1000, 7743, 71301, 131, 129, 128, 125, 2471,
	124, -1000, 123, 122, -1000, -1000, 120, -1000, 9334, 1468,
	-1000, 119, 117, -1000, 305, 96975, 110, 109, 108, 2508,
	107, 106, 68508, 105, 104, 103, 2451, 2949, -1000, -1000,
	2065, -1000, -1000, 102, 100, 97, 95, 94, 93, 92,
	91, 90, 89, 86, 84, 82, -1000, 81, 80, 79,
	77, 75, -1000, 74, 68, 65, -1000, 63, -1000, 59,
	55, 54, 52, 51, 49, 45, 44, 40, 39, 33,
	32, 27, 23, 136186, -1000, -1000, 20, 1818, 1644, 1643,
	1637, 1636, 1624, 965, 19, 18, 14, 13, 12, 11,
	10, 9, 7, 4, -4, -5, -6, -7, -9, -11,
	-23, -24, 151, -26, -27, -28, -29, -30, -31, -32,
	3142, -1000, 1563, 920, 31828, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 124242, 116514, -33, -94, -34, -1000, 3401, 1030,
	56621, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 280,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 466, 2178, 710,
	-1000, -1000, -1000, 112605, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2347, -55, -1000, 2033, -1000, -1000, -1000, -1000,
	-1000, 708, -1000, 2346, 2265, 311, 2263, -1000, -1000, -1000,
	3469, 2504, 3863, 3862, 3861, 3860, 3859, 123690, 1697, 3858,
	2567, 3857, 3856, 3855, 3854, 3852, 3851, 3850, -1000, 90876,
	1020, 90315, 89754, 3473, 112053, 89193, 111492, 126459, 48561, 897,
	3468, -1000, -1000, -1000, -1000, -1000, -1000, 116514, -1000, 1018,
	-1000, -1000, 3846, 2094, 707, 98649, -1000, -1000, 110931, 1674,
	-1000, -1000, -1000, 915, 1165, 33553, 33553, 33553, 276, -1000,
	-1000, -1000, -1000, -1000, -1000, 3845, 3844, 3843, 3842, 3841,
	-1000, -1000, 80271, 24745, 79710, 79149, 110370, 47986, 88632, 88071,
	3840, 3838, 3837, 109809, 125907, 3591, 3590, 1017, 2031, 1410,
	-1000, -1000, -1000, -1000, -1000, -1000, -51, 72957, 3617, 116514,
	-1000, 270, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47411,
	687, 46836, 620, 46261, 619, 109248, -1000, -1000, -1000, -1000,
	75243, -1000, 108687, 2501, 3836, 3835, 1098, 3830, 3354, 1572,
	3828, 1849, 1182, 3827, 3824, 3823, 3822, 3820, 3817, 3816,
	1412, 108126, 3032, 1464, 107565, 1712, 125355, 1016, 87510, 92550,
	2681, 107004, 1299, 1291, -1000, -1000, -1000, -1000, 3140, 2918,
	2910, 1310, -1000, -1000, -1000, -1000, 60038, 5232, 5013, -1000,
	-1000, 11161, 106443, 62883, 92550, 92550, -1000, -1000, -1000, -1000,
	-1000, -1000, 45686, 542, 45111, 876, 105882, -1000, -1000, 60607,
	2988, -1000, -1000, -1000, -1000, -1000, 105321, 44536, 382, 43961,
	832, 116514, -1000, 3030, 1801, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2852, 1591, 3648, 2792, 74672, 2017, 1396,
	3430, 3134, 3133, 1504, 2029, 3124, 3815, 2636, 3113, 3112,
	3104, 3103, 3101, 1277, 2641, 320, 2625, 31253, 3021, 1699,
	43386, 1477, 1503, 3087, 3086, 3661, 1990, 1985, 2069, 78588,
	3813, 3812, 3394, 3085, 3080, 2856, 3064, -1000, 2987, 1411,
	269, -1000, -1000, -1000, -1000, -1000, -1000, 1463, -1000, -1000,
	-1000, -1000, -1000, 83049, -1000, -1000, 1325, -1000, -1000, 1325,
	-1000, -1000, -1000, -1000, -1000, 1258, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1563, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3119,
	-1000, 2047, -1000, -1000, 2564, 3376, 3376, 3376, 3464, 437,
	427, -1000, 151, -1000, -1000, 135321, -1000, -1000, 49136, 49136,
	49136, 49136, 49136, 49136, 49136, 49136, 2204, -1000, 706, -1000,
	-1000, 744, -1000, 705, 643, 571, -1000, -1000, -1000, -1000,
	-1000, -1000, 704, -1000, -1000, -1000, -1000, -1000, -1000, 3617,
	-1000, 27671, -1000, -1000, -1000, 434, 703, 49136, -1000, -1000,
	3678, 3675, 909, -1000, 261, 930, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3029, 702,
	700, -1000, 698, 692, 689, 688, 680, -1000, 679, -1000,
	678, 677, 675, 672, 671, 669, 668, 667, -1000, 2039,
	-1000, -1000, -1000, -1000, -1000, -1000, 617, 615, 615, 615,
	-1000, 1012, -1000, -1000, -1000, 323, 614, 321, 613, 600,
	599, -1000, 666, 664, 663, 661, 660, 657, 656, 651,
	649, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1010, -1000,
	-1000, -1000, -1000, -53, 116514, -1000, 466, -53, -1000, -1000,
	647, -1000, 35853, 35853, 35853, -1000, -1000, 2345, 49136, -1000,
	2620, -1000, -45, -45, 870, 58328, -1000, 55455, 870, 304,
	754, 64014, -1000, 2985, -1000, -1000, 644, 260, -1000, -1000,
	-1000, -1000, 25314, 2984, 116514, 116514, 116514, 92550, 92550, 92550,
	116514, 3811, 3268, 49136, -1000, -1000, 70740, 128115, 93102, -1000,
	-1000, 3573, 69067, 70188, 3027, 128115, 3026, 127563, 3810, -1000,
	-1000, -1000, -1000, -1000, 3242, 3807, 3805, 3802, -1000, 116514,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 238, 3241, -1000,
	-1000, 96414, 238, 3238, -1000, 238, 3236, -1000, 95862, -1000,
	-1000, 2228, 3229, -1000, -1000, 244, 3227, -1000, -1000, -1000,
	241, 3224, -1000, -1000, 250, -93, 3223, -1000, -1000, -1000,
	-1000, -1000, -1000, 135321, -1000, -1000, -1000, 127011, -1000, 3403,
	-1000, 116514, -1000, 49136, -1000, -1000, 3571, 1641, 3416, 3508,
	-1000, -1000, -66, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2547, 2531, 1132, 2375, -1000, 3281, 1998, 33553, 3340, -1000,
	-1000, -1000, -1000, -1000, 228, 25314, -1000, -1000, -1000, -1000,
	-1000, -1000, 3384, 3222, 1560, -1000, 2372, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1989, 3221, -1000, 2236,
	3219, 1954, -1000, -1000, 3028, -1000, 131656, 1352, -1000, -1000,
	-1000, -1000, 2319, 3218, -44, -1000, -1000, 2473, -1000, -1000,
	-1000, -1000, 1947, -1000, 1314, 3215, -1000, 2791, 2791, 86949,
	3190, 62314, 60607, 72957, -57, -1000, -1000, -1000, -1000, -95,
	-1000, 24170, 135321, -1000, -1000, -1000, -1000, 1771, 135321, 881,
	-1000, -1000, 3207, -1000, 135321, 864, -1000, -1000, 3203, -1000,
	2637, -1000, 3025, -1000, -1000, 2456, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2455, -1000, -1000, 3801, -1000, -1000,
	3800, -1000, 3798, 3797, 3796, -1000, 1604, 2009, 3795, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 86397, 2336, -1000,
	-1000, 85275, 3024, -1000, 2450, 3507, -1000, 85836, 1015, -1000,
	951, 2448, -1000, 95310, 887, 2447, -1000, 3794, 3471, 2716,
	951, 2446, -1000, -1000, -1000, -1000, -1000, 982, -1000, 66256,
	-1000, 66256, -1000, 1596, -1000, 123138, -45, 92550, 3617, -1000,
	-100, -1000, -1000, -1000, 1030, -1000, 59466, -1000, 59466, 98088,
	75812, 935, 2983, 67937, 135068, -1000, 987, -1000, -1000, 135321,
	-1000, -1000, -1000, 2622, -1000, -179, 2790, -1000, 75812, 61745,
	2617, -1000, 135321, -1000, -1000, -1000, -1000, 135321, -1000, -1000,
	-1000, 75812, 85275, -1000, 104760, 84723, -1000, -1000, 1403, 2602,
	-1000, -1000, -1000, 75812, 1336, 75812, 75812, 75812, -1000, 104199,
	-1000, -1000, 2071, 1243, 3395, 2025, 92550, -1000, 1932, -1000,
	-1000, -1000, 3408, 3179, 116514, -1000, -1000, 3023, -1000, 72405,
	94758, -1000, 94206, -1000, 93654, -1000, 92550, -1000, 92550, -1000,
	3793, 3792, 3791, -1000, -1000, 3789, -1000, 3788, 3410, -1000,
	682, 42811, 135321, 3406, -1000, 3787, 1982, 3021, 135321, -1000,
	3097, 1646, 1639, 116514, -1000, -1000, 116514, -1000, 116514, -1000,
	-1000, -1000, 1519, -1000, -1000, 2545, -1000, -1000, -1000, -1000,
	92550, 92550, 92550, 92550, 1181, -1000, 42236, -1000, -1000, 3078,
	3786, 1675, -1000, 1762, -1000, 2982, 3396, -1000, 1318, 1705,
	227, 3681, -1000, -1000, 246, -1000, -1000, -66, -1000, 122586,
	-1000, 2564, -1000, 116514, -1000, 2579, 3011, 3019, 1839, 2356,
	2651, -1000, 41661, 2612, 52586, 2362, 151, -1000, -1000, 151,
	151, 32978, -1000, -1000, 69067, 69067, 25314, 1274, 49136, 49136,
	49136, 49136, 49136, 49136, 49136, 49136, 49136, 49136, 49136, 49136,
	49136, 49136, 49136, 49136, 49136, 49136, 49136, 49136, 49136, 49136,
	49136, 49136, 49136, 49136, 49136, 49136, 49136, 49136, 49136, 49136,
	49136, 49136, 49136, 49136, 2030, 49136, 1251, 49136, 49136, 49136,
	49136, 2201, -1000, -1000, 1915, 509, 2050, 643, -1000, -1000,
	-1000, 3620, 3620, 3620, 631, 631, 631, 135699, 135699, 544,
	3785, 744, -1000, 49136, -1000, 88, 58888, 49136, 25885, -1000,
	427, 9059, 2530, -1000, 425, 26489, -1000, -1000, -1000, 27671,
	571, 41057, 49136, 994, 135321, -1000, -1000, 1459, 3640, 23595,
	3035, 2841, 639, 845, 843, 30649, 30045, 29441, 28837, 827,
	811, 49136, 49136, 49136, 49136, 49136, 49136, 49136, 49136, -1000,
	-1000, 3654, -1000, 3640, -1000, -1000, -1000, -1000, 3640, 1271,
	1267, 3640, -1000, 3640, 3640, 8276, 8276, 40482, 39907, 39332,
	53161, 38757, 49136, 28262, 38182, 37607, -1000, 116514, -53, 3570,
	49136, 310, -1000, 132692, -1000, 310, 310, 638, -110, 135321,
	2816, 2816, 57190, 2493, 2207, 2207, 2207, -1000, 870, 18382,
	870, 102536, 2218, 870, 870, 223, 252, 424, 54886, 2620,
	102536, 725, 630, -35, -36, -37, -1000, -1000, -38, -42,
	-1000, -1000, 92550, 629, 25885, 25314, 217, 1979, -111, 2663,
	2660, -1000, 2655, 2652, -1000, 2648, 2333, -1000, -1000, 1734,
	-112, 1247, 92550, 116514, 1308, 3784, -90, -1000, 2089, -118,
	-1000, 1027, 212, 3640, -1000, -1000, -1000, -1000, -1000, 3783,
	3782, -1000, 1008, 628, 627, 380, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 617, 615, 615, 615, -1000, 323,
	614, 321, 613, 600, 599, -1000, -1000, -1000, -1000, -1000,
	2979, 92550, 116514, 1286, 3781, 81945, -93, 93102, -68, -1000,
	-1000, 116514, -1000, -1000, -1000, 3775, -1000, 92550, -1000, -1000,
	92550, 238, 3178, -1000, 92550, -1000, 92550, 235, 3176, -1000,
	-1000, 116514, -1000, 92550, 92550, -1000, 116514, 116514, 116514, 128115,
	128115, 233, -1000, 92550, 831, -119, 1093, -66, -1000, -1000,
	-1000, -1000, 1325, -1000, 1778, -1000, -1000, -1000, -1000, -1000,
	-1000, 1380, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	909, -1000, -1000, -1000, -1000, -1000, -1000, 3644, 3637, -54,
	-1000, -1000, 25314, -1000, -67, 1588, 1820, 1246, -1000, 78027,
	2485, 3386, 3773, 2709, 3375, 1581, -1000, 1508, -1000, 3478,
	83049, 3518, 3552, 1322, -1000, 2978, -1000, -1000, -1000, 905,
	1578, 1692, 1245, 1241, 83049, 2236, -1000, 69067, -1000, 2695,
	3463, 1392, 1428, 1392, 1392, 1376, -1000, 83049, 1691, 1240,
	1239, 1235, -1000, -1000, 1911, 1903, -1000, -1000, 103647, -1000,
	1234, 1229, 3562, 3119, 2149, 777, 1874, -1000, 1329, 1228,
	2977, -1000, -1000, -70, 3514, 3537, 1322, -1000, 2974, 1223,
	-1000, -1000, -1000, 3462, 92550, 25314, 1543, 1538, 1536, 1689,
	1221, -56, -1000, 3512, 1218, 1217, -1000, 990, 6181, 3308,
	-1000, 128115, 990, 990, 1899, 3172, 2756, 1586, -1000, 2787,
	854, 2785, -1000, -1000, -1000, 854, -57, 72957, 116514, 207,
	-1000, 88, 49136, 49136, 88, 49136, 88, -1000, 3503, 3171,
	3167, -1000, -1000, -1000, -1000, -1000, 3770, 1950, 2565, -1000,
	-1000, 595, 2442, 2972, 116514, 2671, -59, 92550, -1000, 71853,
	3165, 128115, 2236, 2441, -1000, -1000, 84162, -1000, 3163, 466,
	2439, -1000, 662, 3753, 3160, -1000, 122034, -1000, 3403, 1236,
	3154, 1052, 794, 3565, -1000, 794, 66817, -1000, 116514, -1000,
	-45, 1159, 76923, -120, -121, 421, -1000, 103095, 116514, 116514,
	3323, 1981, 1964, -1000, 949, 60607, -1000, 60607, -127, -1000,
	-179, 2784, 1442, -1000, 935, 935, 854, -1000, 854, -1000,
	92550, 3018, -1000, -1000, 75812, 935, 935, 935, -1000, -1000,
	-1000, -1000, 3752, 3745, 3743, 3742, -1000, -1000, 950, 92550,
	116514, 92550, -1000, -1000, 1576, -1000, 202, -1000, 128115, -1000,
	128115, 116514, 92550, -1000, 950, 116514, 950, 116514, 950, 116514,
	950, 950, -1000, -1000, -1000, -1000, -1000, 88, -1000, -1000,
	135321, -1000, 49136, -1000, -1000, 1486, 3740, 1635, -1000, 3017,
	-1000, 3012, -1000, -1, -1000, -1000, 1834, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3739, 135321, -1000, 1920,
	-1000, -1000, -1000, -1000, 92550, 92550, 92550, 92550, 116514, 3307,
	-1000, 116514, 3305, 92550, -1000, 3680, -1000, -1000, 83049, -1000,
	2579, 3011, -1000, -1000, -1000, -1000, -1000, -1000, 1788, 2286,
	-1000, 2591, -1000, 1548, -1000, -1000, -1000, 135321, 53736, -1000,
	-1000, 135321, 1785, -1000, 52011, 51436, -1000, -1000, 1698, 92550,
	2679, -1000, 2679, -92, -1000, 132314, 2589, 92550, -1000, -1000,
	-1000, -1000, -1000, 904, 641, 641, 1378, 1378, 1378, 1378,
	3498, 1741, 6416, 415, 5339, 5339, 5548, 5548, 5548, 5548,
	5548, 5339, 6515, 631, 631, 6515, 6515, 6515, 6515, 6515,
	631, 631, 631, 5339, 5339, 5339, 631, 135699, 135514, 12218,
	49136, 49136, 1216, 1901, 509, 10982, 49136, 7223, 7223, 7223,
	7223, -1000, 2074, -1000, -1000, -1000, -1000, 2970, 594, 53161,
	53161, -1000, -1000, -1000, -1000, 27080, 49136, -1000, -1000, -1000,
	-1000, 37003, -1000, -1000, 131454, -316, 419, -1000, 197, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 417, -91, 3, -1000, 49136, 49136, 49136, 416,
	-1000, 196, 49136, 116514, -1000, 15921, 724, -161, -1000, -129,
	1419, -1000, 49136, -1000, -1000, 1213, -1000, 1210, 1209, 1208,
	-1000, 593, 414, -1000, 195, -1000, 2202, 590, 587, 49136,
	-1000, -1000, -1000, -1000, -1000, 131391, -1000, -1000, 131013, -1000,
	-1000, 130760, -1000, -1000, 130723, -1000, -1000, -1000, -1000, -1000,
	134875, 15884, 13616, 13326, 7189, 12700, 12415, -130, 412, -137,
	411, 903, 902, 410, 400, 399, -142, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -144,
	398, -1000, 2964, -91, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 396, -1000, 393, -1000, 134690, -91, 391, 495,
	-1000, 53161, 53161, 53161, 53161, -1000, 388, -1000, 132248, -1000,
	134425, 36428, 36428, 36428, 387, 134240, 49136, -91, -149, -1000,
	-150, -1000, -1000, 527, -151, 991, 35853, 56038, 25314, -1000,
	991, 991, 49136, -1000, 49136, 2618, -1000, -1000, -1000, -1000,
	2613, 2350, 2816, 57190, -1000, -1000, -1000, -1000, 102536, -1000,
	3617, 2903, -1000, 102536, -1000, -1000, 116514, 466, -1000, 102536,
	102536, 25314, 870, -1000, 870, 102536, 795, -1000, -1000, -1000,
	-1000, -1000, 386, 65143, 3, 192, 25314, 951, -1000, -1000,
	2720, 2720, 2720, 2720, 2720, 92550, -1000, -1000, 128115, 1207,
	-60, -69, 2761, -1000, 3598, -1000, 2054, -1000, 69067, -1000,
	743, 1090, 25314, -1000, -1000, -1000, 586, -1000, 3640, 3640,
	-1000, 3640, 128115, 2962, 254, 2757, -1000, 2331, -58, 208,
	128115, 3738, -1000, -1000, 238, -1000, 92550, 238, 238, -1000,
	92550, 92550, 2228, -1000, 244, -1000, 241, -1000, -1000, -93,
	-1000, 986, 33553, -1000, 1325, -1000, -1000, 1540, -1000, 1986,
	-1000, 1136, -1000, -1000, -1000, -1000, 33553, -1000, 2348, 116514,
	116514, 92550, -1000, 116514, -1000, 2121, 128115, -1000, 2438, 121482,
	2409, 120930, 69067, -1000, -1000, 581, 928, 2585, 2584, 1049,
	116514, 116514, 2583, 120378, 119826, -1000, 3737, 116514, 2103, 49136,
	3461, 2188, 2497, 88, 88, -1000, 88, -1000, -1000, 580,
	1215, 92550, 92550, 116514, 128115, 92550, 1859, -1000, -1000, -1000,
	-1000, -1000, 83601, -1000, -1000, 3653, 3652, -1000, 1392, -1000,
	-1000, -1000, 1392, 2236, 1836, 116514, 128115, 92550, 128115, 119274,
	118722, -1000, -1000, 1688, 116514, -1000, -1000, -1000, -1000, 1417,
	-1000, 777, 1201, 2958, 49136, 49136, 2083, 88, 88, -1000,
	88, 579, 25314, 1928, -1000, 3020, 116514, 3674, 118170, 3672,
	116514, 116514, 116514, 128115, 3393, 116514, 116514, 128115, -1000, 117618,
	6181, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2080, 74101, 1058, 116514, 1314, -1000, -1000, 1686,
	1198, 1190, 83049, 2045, 1685, 1810, 128115, 60607, 945, 60607,
	2723, -1000, -1000, 23020, -1000, 135321, 135321, -1000, 135321, -1000,
	71853, 75812, 116514, -1000, 1014, 116514, 77475, 926, 3145, 65695,
	-95, 935, 75812, 92550, -59, 2671, 116514, -1000, -1000, 2236,
	3141, 466, 2437, -1000, 128115, 3561, 3135, 577, 3736, 3734,
	-1000, 92550, 2329, 2435, -1000, -1000, 117066, 3256, 777, 116514,
	991, 57190, 1900, -1000, 63454, 1031, 116514, 1828, 173, -1000,
	-1000, -1000, -19, 116514, -1000, 751, -1000, -1000, 1159, 1159,
	935, -109, 576, -1000, 853, 852, 61176, -158, -1000, 191,
	575, 848, 842, -1000, 4934, -1000, -179, -1000, 75812, 949,
	60607, 2955, 2953, -1000, -1000, 979, -1000, 1316, 935, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-46, 1796, 116514, -93, -93, -76, -60, -1000, 950, -1000,
	950, -1000, 950, -1000, -1000, -1000, 135321, -1000, -1000, -1000,
	1629, 1617, 116514, -1000, -1000, 116514, -1000, 25314, 116514, 92550,
	25314, 92550, 3004, 3000, -1000, -1000, -1000, 116514, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1068, -1000, 1785, 2274,
	-1000, 571, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2532, -1000, -65, 32978, 874, -1000, -1000, 92550, -47,
	49136, 49136, 10913, 10258, 49136, 53161, 53161, -1000, 49136, 6018,
	-1000, -1000, -1000, -1000, -1000, 2939, 559, 49136, 69067, 8055,
	7500, -1000, 385, 11360, 6515, -1000, 49136, -1000, 6081, -1000,
	384, 35278, -1000, 132982, -14, -165, -1000, 18971, -91, -166,
	-1000, -1000, 742, -1000, 3252, -1000, 49136, 134047, 2496, 2066,
	1805, 1630, 3640, 3671, 22445, -1000, 67377, 992, 2235, 130289,
	-1000, -1000, -1000, -1000, 69067, 69067, 49136, 49136, -1000, 49136,
	49136, 49136, -1000, -1000, -1000, 3640, 885, -1000, -1000, -1000,
	885, -1000, -1000, 1392, -1000, 1392, -1000, 49136, -1000, -1000,
	2932, 49136, -1000, 69067, 69067, 53161, 53161, 53161, 53161, 53161,
	53161, 53161, 53161, 53161, 53161, 53161, 53161, 53161, 53161, 53161,
	53161, 53161, 53161, 53161, 53161, 2570, 53161, 3616, 3616, 3616,
	953, -1000, 2998, 2932, 49136, 49136, 69067, 383, 375, 373,
	-1000, 49136, -91, -1000, -1000, 6273, 552, -1000, 2509, -1000,
	2840, -1000, 49136, -1000, -163, -1000, 2620, -1000, -1000, 2840,
	2840, -171, 135321, 57190, 57190, -1000, 551, 49136, 2604, -1000,
	-1000, 723, -317, -1000, 841, -1000, -1000, -1000, -1000, -1000,
	-1000, 839, -1000, 466, -1000, -1000, -1000, 189, 102536, 102536,
	720, -1000, -172, -1000, -1000, -173, -1000, 3560, 372, 25314,
	-1000, 991, 2745, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2590, -262, 128115, 128115, 1682, 2250, 3669, -1000, 3649, 741,
	719, 174, 3640, 371, 358, 357, -93, 128115, 128115, 1679,
	69636, 128115, -1000, -1000, -1000, 238, -1000, -1000, -1000, 235,
	-1000, -1000, -1000, -1000, 2685, -1000, -66, -1000, -1000, -1000,
	49136, -1000, -1000, 3385, 1189, 1187, -1000, -1000, -1000, 2896,
	-1000, 3131, -1000, 2432, -1000, 1038, 2424, 1835, -1000, 49136,
	550, 2714, 549, 548, 3733, 2060, 3732, 1050, 3129, 2228,
	3128, 2228, -1000, -1000, -1000, 911, -1000, 135321, 2188, -1000,
	546, 545, -1000, -67, 1584, 1816, 1185, 959, -1000, -1000,
	49136, 49136, 101984, -1000, 456, 3382, -49, -1000, -1000, -1000,
	1678, 1175, 1170, -1000, -1000, -1000, -1000, 2236, 1677, 1168,
	1166, -1000, -1000, -1000, -1000, -1000, 2423, -1000, -1000, 3126,
	958, -1000, 3053, 3052, 889, 116514, 49136, 49136, 133794, 133601,
	-1000, 956, -1000, -1000, 49136, -1000, -70, 1153, 3509, 2422,
	92550, -1000, 2228, 3125, 1152, -1000, 1148, -1000, -1000, -1000,
	3511, 3502, 1171, -1000, -1000, -1000, 75812, -1000, -1000, 73532,
	-1000, -1000, 990, 116514, 128115, 92550, 1814, -1000, -1000, 81945,
	82497, 116514, 2756, -93, 854, -1000, 2544, 854, 945, 2921,
	-1000, 2628, -1000, 955, 92550, 3729, 356, -174, -72, 69067,
	-1000, -1000, -1000, -1000, 2409, 92550, 116514, 1306, 2713, 116514,
	116514, 3558, -1000, 2353, 612, 92550, 892, -1000, 3617, -1000,
	-1000, -1000, 952, -1000, 3504, 92550, 3557, 3116, 951, 88,
	92550, 3634, -1000, -1000, 3550, 92550, 3114, 2327, 2414, 2557,
	777, 76371, 951, 2220, -82, -1000, 1828, 34703, 3380, -180,
	-1000, -1000, -1000, 991, 66817, 57190, 49136, 3728, -185, -1000,
	-1000, -1000, -1000, -1000, 99769, 99769, 75812, 75812, 75812, 935,
	116514, 116514, 3721, 75812, 75812, 75812, -74, 539, -1000, 837,
	836, 835, -1000, -1000, -1000, -1000, -1000, -1000, 826, 825,
	824, 949, -1000, -1000, -179, 60607, 88, -1000, 2243, 92550,
	-1000, 21870, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 950,
	-95, -1000, -1000, -1000, 2084, 2359, 2084, 1787, 1777, -1000,
	-1000, 2268, -1000, -1000, -1000, -1000, 2650, 3368, 25314, 3501,
	7223, 49136, 49136, 461, 7125, 6730, 7223, 49136, 49136, 69067,
	135765, -190, 49136, 49136, -1000, 49136, 718, 135321, -1000, 3668,
	49136, 352, 351, -1000, -1000, -1000, 3621, -1000, -1000, -1000,
	135321, 49136, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 348,
	-1000, 152, -1000, -1000, -1000, 124794, -1000, 49136, 345, 3459,
	-1000, 343, 342, 10195, 573, 130104, 129999, 129610, 341, -1000,
	-1000, 340, 333, 135321, 2998, 135321, -1000, -1000, 931, 931,
	1381, 1381, 1381, 1381, 3616, 2291, 2014, 376, 1354, 1354,
	1354, 2056, 953, 953, 1354, 1354, 1354, 953, 2917, 2598,
	537, 616, -1000, -1000, 135321, 135321, 332, -1000, -1000, -1000,
	-91, 330, 6273, -1000, 2835, 3454, 135321, -1000, 57190, 2835,
	2835, -1000, -1000, 2350, 116514, 135321, 57190, -1000, 2903, -1000,
	20139, 19558, -1000, 25314, -1000, -1000, -1000, -1000, 3617, -1000,
	65143, -1000, 534, -1000, 0, -1000, 2745, -1000, 821, -1000,
	-1000, 75812, 75812, 2720, -1000, 2847, -262, -186, 116514, -1000,
	-1000, 717, 3719, 737, 25314, 328, -1000, -1000, -1000, -93,
	-93, 116514, 2895, 92550, 116514, 1278, -93, -1000, -1000, -1000,
	3322, 135321, 116514, 116514, 1382, 101432, 116514, 3095, -1000, 3089,
	-1000, 1049, 5405, 129408, 57759, -1000, 57759, 116514, -1000, -1000,
	-1000, -1000, 1992, 1440, 3717, 1080, -1000, 3418, 116514, -1000,
	116514, -1000, -1000, -1000, 116514, 116514, 92550, 116514, -1000, 128115,
	3062, -192, 135321, -75, -1000, 809, -1000, 1348, -1000, 21295,
	116514, 128115, 92550, 116514, 128115, 92550, 3082, 116514, 2158, -1000,
	-1000, 3051, -1000, 135321, 133416, 88, 49136, 3060, -193, 25314,
	-1000, 3666, 3665, 3074, 3423, -1000, 116514, 3663, 116514, 92550,
	3321, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1671, 1147,
	1145, 2323, 2317, 2249, -76, 2045, 945, -77, 532, -1000,
	806, -1000, -1000, 791, 790, 945, -1000, 75812, 60607, 3716,
	466, -1000, 2707, -1000, 97527, 77475, 2278, -1000, -1000, 531,
	116514, 116514, 530, -1000, 88, -1000, 3714, 100328, 528, -1000,
	2242, -1000, 714, -1000, 2483, 128115, 2236, 88, 92550, -1000,
	943, 466, 327, -78, -1000, 3091, 1046, 25314, 92550, 3073,
	2559, 777, 76371, -1000, 1236, 2651, -1000, -81, -1000, 469,
	88, 2220, -1000, -82, 135321, -1000, 787, -1000, -198, -1000,
	-1000, 325, -1000, 3320, -1000, -1000, -199, -1000, -1000, 4945,
	4945, 75812, 60607, 75812, 75812, 75812, 60607, -1000, 949, 854,
	-1000, 2436, -1000, -1000, -1000, -1000, -1000, 25314, 1577, -1000,
	526, 525, -1000, -1000, -1000, -1000, 3368, 7223, 7223, 49136,
	49136, 49136, 7223, 135765, -204, -1000, 7223, 7223, -91, -1000,
	-1000, 132982, -1000, -1000, -1000, 135321, -1000, 20720, 2100, -1000,
	129345, -1000, 32978, -1000, -1000, 49136, 49136, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 53161, 2889, 524, 69067, -1000,
	-1000, 312, 954, 49136, 50861, 2620, 954, 954, -1000, -205,
	-1000, -1000, -1000, 3617, -1000, 3617, 0, -1000, -1000, 3712,
	25314, -1000, 75812, -1000, -1000, -1000, 2245, -1000, -1000, 3049,
	-187, 735, -1000, 3711, -1000, -1000, 142, 128115, 2888, 116,
	2741, -1000, -1000, -1000, 2739, 3549, -1000, 1867, -1000, 116514,
	116514, -1000, 116514, -1000, 25314, 116514, 2859, 1225, -1000, 928,
	2582, 523, 53161, 1067, 92550, 910, 2820, 2815, -1000, 3586,
	3448, 2805, -212, -1000, 116514, 49136, 116514, -213, -214, 2381,
	-1000, -1000, 1066, 1219, 49136, 1065, -1000, -1000, -1000, 69067,
	519, 2228, 2228, -215, -222, -1000, -1000, -1000, 49136, 1143,
	116514, 34128, -1000, 3710, 3382, -1000, -1000, -1000, -1000, -1000,
	-1000, 116514, -1000, 116514, -1000, 49136, -1000, 132945, 49136, 1133,
	-1000, -1000, -1000, 3662, 2228, 25314, 2228, -1000, 2228, 3423,
	1079, 116514, 128115, 92550, 2173, 2173, 2997, -1000, -1000, -1000,
	2498, 2498, 75812, 60607, 60607, -1000, -83, 945, -1000, 3547,
	2095, 3709, -1000, -1000, -1000, -1000, 2576, -1000, -1000, -1000,
	116514, 2573, 2799, 57759, 518, 517, 116514, 936, -1000, -223,
	-1000, 786, 785, 77475, 926, 923, -1000, -84, 516, -1000,
	783, -1000, -1000, -1000, -1000, 466, -1000, 2674, 3543, -1000,
	3659, 515, 513, 116514, 2314, 512, 25314, 3377, 777, 76371,
	-1000, 3256, 1828, -1000, 2407, 116514, 3374, -1000, 2651, 509,
	-1000, 935, 508, 935, -1000, -225, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -85, -1000, 882, 875, -1000, -1000,
	92550, 92550, 49136, 49136, -1000, 7223, 7223, 7223, -1000, 297,
	-1000, -1000, 2220, 3447, -1000, -86, 128967, 128714, 5367, 53161,
	69067, -230, -1000, -1000, 116514, 135321, -87, -1000, 135321, 506,
	504, 436, -1000, -1000, -1000, 712, 574, -1000, -1000, -1000,
	-1000, 128115, 3708, -1000, 128115, -93, 128115, 128115, 1659, 100880,
	116514, -1000, -1000, 1835, 1960, -1000, -1000, -1000, 116514, 2412,
	-1000, -1000, -1000, 1048, 49136, 616, 53161, 493, 49136, -1000,
	491, 481, 3531, 3291, -1000, 2699, 2909, 1883, 57759, -1000,
	3368, -1000, 128677, -1000, 1043, 1934, -1000, -1000, -1000, -1000,
	135321, 53161, 3423, 57759, -1000, -1000, 480, 479, 135321, 478,
	782, 2886, -1000, -1000, -1000, -1000, -1000, 135321, 88, 135321,
	471, 3509, -1000, -1000, -1000, -1000, 2228, 92550, -1000, -1000,
	-1000, 1115, -1000, -1000, -1000, -1000, 3707, 3694, 2880, 81945,
	-1000, -231, -1000, -1000, -1000, 1942, 88, 926, -1000, -1000,
	2278, 470, -1000, -1000, 2616, 2616, -232, 57759, 57759, -233,
	2288, 2673, -1000, 100328, 33553, 33553, 296, 3528, 923, -1000,
	3624, -1000, 3288, 3288, 49136, 3526, 3316, -1000, 88, -1000,
	3634, 57759, -1000, 92550, 57759, 2313, 2019, 2538, 76371, -1000,
	2557, -1000, -1000, -238, 116514, 1828, -1000, -1000, 75812, -1000,
	-1000, 2436, -1000, 116514, -1000, 116514, -1000, -1000, -239, -240,
	-1000, 1975, 49136, 32978, -1000, -1000, 5367, -247, -1000, -88,
	-1000, 3524, 50861, 3693, 3692, 3691, -1000, -1000, -262, -1000,
	-93, -93, -93, 116514, -1000, 1866, -1000, 2409, -1000, -1000,
	3071, 2833, 17736, 616, 2515, 116514, 16765, 2236, 2236, -1000,
	3523, 2902, -1000, -1000, 2083, 468, -1000, -1000, -1000, -1000,
	874, 116514, -1000, 2829, 92550, 616, 1047, -248, 2084, 2084,
	49136, 32403, 2139, -1000, 49136, -1000, -1000, 3423, 128115, -1000,
	-1000, 128115, 2290, -1000, 2871, 3631, -1000, 2288, 116514, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1043, -249, -254, -1000, -1000, 3414, -1000, 3315, -1000, -1000,
	-1000, 2707, 88, -1000, -1000, -1000, -255, 135321, 88, 3689,
	943, 290, -256, 1046, -261, 92550, 1949, -1000, 777, -1000,
	2559, 991, -1000, -1000, -264, -1000, -266, -269, -1000, -1000,
	289, 50286, 50286, 50286, -91, -92, -1000, 116514, 467, -1000,
	-1000, -1000, -1000, -1000, 113, -1000, -1000, 3047, 942, -1000,
	797, 1898, 288, 1071, 286, 118, -1000, -1000, -1000, 2805,
	-1000, 116514, -1000, -1000, 941, 466, -1000, 49136, 1043, -277,
	-1000, 1028, -278, -1000, 1026, -279, -1000, 2879, -1000, -280,
	2228, -262, 233, 2173, 937, 3500, -1000, -1000, -1000, 2534,
	-285, -1000, -1000, 1883, 1043, 2083, 2528, -1000, 2095, 936,
	-1000, -1000, -1000, -1000, -1000, 1043, 462, 1883, 459, 1426,
	777, -1000, -1000, 1392, 3377, 3139, 935, -1000, -1000, -1000,
	3246, -1000, 54311, 2244, 1770, 132047, 3246, 3246, -1000, -1000,
	128115, 116514, 3479, -1000, 846, 798, 1472, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 991, -287, 3475, 2515, 135321,
	-1000, -1000, 2084, 2729, -1000, 2084, 2878, -1000, 2116, -1000,
	-1000, -1000, -1000, 2877, -1000, 1676, 3612, -1000, -1000, -1000,
	116514, 2083, 1883, 932, 1729, 1722, 3687, 926, 2288, 1883,
	57759, 2083, 57759, 2057, -1000, 116514, -1000, 2019, 1268, -1000,
	-1000, 1710, 3582, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-93, -1000, 776, -1000, 3278, -1000, 1064, 2264, 2264, -1000,
	-1000, 774, 797, -1000, 447, -1000, 443, -1000, 128115, 2240,
	-1000, -1000, -1000, 932, 2083, 991, 440, -1000, 3686, -1000,
	2288, -1000, 2083, -288, 932, -290, -1000, -1000, -1000, -95,
	1949, -1000, 1569, 1740, -1000, -1000, 2216, 49711, 49136, -1000,
	3601, -1000, -1000, 2600, -1000, 49136, 2805, 49136, 49136, 233,
	64574, 991, 932, -1000, -1000, 2534, 932, 1043, 991, 1883,
	1426, 66817, -1000, -1000, -1000, 135321, -1000, -1000, -1000, 135321,
	-1000, -293, -295, -1000, -109, 99769, -1000, 991, -1000, 991,
	1883, -1000, 2083, 2057, -263, 2083, 1110, -308, -1000, -1000,
	2083, 932, -1000, -1000, -1000, -1000, 439, -1000, 932, 991,
	49136, 991, -1000, -310, -1000, 2083, -1000,
}

var sqlPgo = [...]int{
	0, 4519, 4517, 4516, 4515, 4513, 4512, 4511, 4508, 4506,
	4503, 4499, 4497, 175, 4496, 4494, 4491, 4490, 4488, 4487,
	4486, 4485, 4484, 4483, 4481, 4473, 4470, 4467, 4466, 4465,
	4464, 4462, 4461, 4460, 4459, 4456, 4453, 4451, 4450, 4447,
	4445, 4440, 4439, 4434, 4432, 4428, 4427, 4418, 4415, 4411,
	4410, 4409, 4408, 4407, 4406, 4403, 4402, 4400, 4397, 4396,
	4395, 4394, 4392, 4390, 4388, 4384, 4383, 58, 4382, 4378,
	4376, 4374, 4373, 4372, 4371, 4370, 4361, 4358, 4357, 4353,
	4352, 4350, 4348, 4347, 4346, 4345, 4343, 4342, 67, 4341,
	284, 4340, 4339, 4337, 4334, 4333, 4331, 4330, 4328, 4326,
	4322, 4321, 4320, 283, 4319, 144, 169, 4318, 4315, 3870,
	4314, 4312, 281, 4311, 4308, 4304, 4301, 4297, 290, 4293,
	4289, 4285, 4284, 4283, 4281, 4280, 4278, 4277, 4275, 4274,
	4273, 147, 209, 4272, 4271, 1304, 4269, 4268, 4267, 4266,
	4263, 4262, 4259, 4257, 4254, 4252, 4250, 254, 171, 4247,
	276, 4246, 4245, 4244, 4242, 4240, 4238, 4237, 4234, 4233,
	4232, 4230, 4227, 4226, 4225, 4219, 4217, 4214, 4213, 4212,
	4211, 4210, 4208, 4207, 4206, 4205, 4204, 4202, 4200, 4199,
	4195, 4192, 4191, 4190, 4187, 4183, 4182, 4181, 4180, 4177,
	250, 217, 167, 4175, 4174, 275, 271, 4173, 4168, 4165,
	4164, 4162, 133, 12, 28, 4161, 4157, 110, 98, 95,
	101, 114, 105, 4156, 116, 4155, 134, 68, 4154, 20,
	4, 246, 242, 12329, 237, 4153, 4152, 4151, 263, 201,
	4150, 247, 4149, 4148, 4139, 4138, 4135, 4132, 78, 55,
	189, 185, 182, 184, 82, 57, 112, 87, 60, 41,
	10, 93, 227, 18, 5, 265, 4131, 264, 7, 149,
	11, 34, 4130, 4129, 4127, 4125, 3955, 120, 4124, 273,
	248, 178, 4122, 4121, 4120, 739, 4119, 4118, 54, 4110,
	215, 91, 127, 15, 139, 4108, 160, 172, 38, 4107,
	168, 59, 4106, 4104, 100, 92, 10150, 13348, 4103, 4101,
	123, 74, 140, 4416, 177, 165, 202, 121, 170, 179,
	90, 212, 210, 187, 21, 4099, 251, 4098, 3537, 102,
	191, 163, 6246, 4097, 4096, 4095, 94, 4094, 111, 4093,
	4092, 72, 14, 3, 1, 150, 36, 35, 19, 4090,
	31, 132, 51, 26, 4088, 29, 4087, 4086, 4085, 4082,
	49, 4079, 39, 173, 4077, 4076, 287, 4075, 106, 52,
	37, 4074, 77, 219, 4073, 233, 141, 4072, 4070, 260,
	207, 188, 4069, 79, 234, 4068, 4067, 4065, 4064, 4063,
	4062, 142, 9, 148, 4061, 4059, 151, 4057, 64, 249,
	204, 4056, 66, 4055, 4054, 183, 69, 153, 286, 138,
	228, 122, 232, 194, 235, 4052, 4050, 4047, 244, 4046,
	4044, 214, 156, 4041, 4040, 259, 288, 96, 50, 85,
	243, 89, 200, 166, 4035, 206, 4034, 4033, 289, 186,
	224, 8, 2, 99, 113, 4032, 6, 236, 164, 239,
	137, 4031, 8056, 2553, 1797, 4028, 4027, 154, 129, 86,
	124, 162, 270, 97, 4026, 4019, 3224, 4017, 4004, 3992,
	3991, 193, 3990, 3988, 3986, 157, 229, 198, 3983, 128,
	83, 53, 24, 176, 258, 282, 130, 225, 221, 261,
	3981, 3979, 3978, 199, 3977, 73, 109, 174, 205, 256,
	63, 3976, 131, 3975, 155, 982, 76, 159, 3971, 223,
	3969, 3967, 3965, 3962, 3961, 3960, 3959, 888, 238, 3958,
	3957, 3956, 45, 197, 3953, 269, 161, 192, 104, 81,
	3951, 118, 3924, 3950, 267, 226, 61, 2415, 43, 3946,
	738, 62, 3944, 0, 13966, 10881, 13571, 5250, 3943, 2963,
	3942, 3941, 3940, 213, 84, 3939, 3938, 3937, 115, 3936,
	88, 3934, 3932, 80, 3931, 22, 16, 17, 32, 25,
	535, 362, 3928, 3927, 42, 143, 135, 3926, 285, 231,
	3925, 3923, 3922, 3921, 107, 3920, 47, 3919, 40, 3918,
	3917, 48, 13, 30, 3916, 3914, 152, 3913, 125, 257,
	3911, 181, 3910, 71, 146, 3909, 3908, 3907, 70, 65,
	266, 211, 216, 108, 3906, 278, 3904, 203, 3901, 3900,
	27, 3899, 3896, 245, 119, 117, 56, 253, 158, 46,
	190, 220, 3895, 3894, 180, 3893, 3892, 3889, 279, 3888,
	3886, 33, 3885, 3883, 3880, 23, 3876, 3874, 208, 3227,
	3872, 3868, 44, 3866, 196,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 51, 51, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 39, 38, 32,
	32, 33, 33, 34, 35, 35, 10, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 19, 19, 40,
	40, 20, 20, 42, 42, 21, 21, 43, 43, 600,
	600, 600, 601, 601, 602, 602, 602, 24, 45, 17,
	18, 18, 18, 18, 603, 603, 603, 603, 36, 25,
	46, 29, 29, 29, 29, 29, 205, 205, 205, 205,
	23, 23, 41, 41, 241, 241, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 596, 596, 243, 243, 242, 235,
	235, 236, 236, 237, 237, 604, 604, 244, 244, 244,
	245, 245, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 496, 496, 496, 527, 527, 527, 527, 528,
	528, 623, 623, 624, 624, 624, 624, 624, 134, 134,
	394, 394, 394, 55, 55, 55, 55, 55, 591, 591,
	207, 207, 207, 209, 209, 208, 208, 208, 208, 208,
	79, 79, 610, 610, 609, 608, 608, 608, 611, 611,
	611, 206, 206, 206, 130, 130, 130, 130, 130, 130,
	131, 131, 132, 132, 210, 210, 210, 212, 212, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 216, 16, 16, 16, 113, 113, 113, 113, 113,
	113, 113, 108, 108, 530, 530, 531, 531, 201, 201,
	202, 202, 202, 202, 203, 203, 204, 204, 204, 70,
	70, 213, 213, 215, 215, 214, 214, 214, 214, 214,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 59,
	60, 60, 60, 60, 60, 60, 61, 61, 68, 68,
	68, 68, 68, 68, 68, 192, 192, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	76, 76, 76, 76, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 626, 626, 627, 627, 628, 628, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 85, 85, 354, 354, 317,
	317, 86, 86, 86, 87, 87, 88, 88, 72, 72,
	589, 589, 370, 370, 487, 487, 73, 597, 597, 597,
	599, 599, 598, 598, 90, 90, 393, 393, 91, 91,
	91, 91, 91, 91, 92, 92, 92, 92, 92, 92,
	92, 93, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 100, 100, 100, 100, 100,
	101, 101, 101, 98, 98, 98, 95, 95, 95, 94,
	94, 94, 99, 99, 99, 588, 306, 306, 97, 97,
	97, 96, 96, 96, 371, 371, 102, 102, 102, 102,
	318, 103, 103, 103, 103, 103, 103, 103, 103, 106,
	106, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 489, 489, 104, 104, 104, 454,
	454, 109, 109, 109, 409, 409, 110, 110, 110, 110,
	110, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 593, 593, 363, 363, 269, 269, 269, 269,
	122, 122, 122, 122, 123, 123, 123, 124, 124, 197,
	197, 140, 140, 140, 140, 139, 139, 139, 139, 139,
	139, 139, 139, 62, 62, 62, 63, 63, 64, 64,
	65, 65, 66, 66, 67, 67, 67, 67, 67, 143,
	143, 620, 620, 145, 142, 142, 142, 142, 142, 141,
	141, 144, 144, 144, 144, 146, 148, 148, 148, 148,
	148, 147, 147, 147, 147, 147, 149, 149, 521, 521,
	379, 379, 519, 519, 540, 540, 520, 520, 324, 324,
	324, 324, 324, 325, 325, 325, 529, 529, 529, 529,
	529, 529, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 198, 198, 199, 200, 200,
	200, 200, 200, 175, 175, 175, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 380, 380, 178,
	178, 178, 162, 162, 151, 151, 151, 151, 151, 151,
	151, 156, 156, 156, 156, 156, 156, 156, 156, 152,
	152, 164, 164, 164, 164, 164, 157, 157, 158, 158,
	158, 159, 159, 159, 159, 185, 185, 161, 161, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 153, 153,
	153, 153, 166, 166, 166, 166, 416, 416, 416, 190,
	190, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 188, 188, 188,
	188, 188, 188, 612, 612, 613, 613, 613, 182, 182,
	182, 182, 182, 182, 468, 468, 176, 176, 176, 176,
	181, 181, 181, 181, 184, 184, 184, 184, 399, 399,
	173, 173, 173, 174, 174, 174, 179, 179, 180, 355,
	355, 177, 177, 183, 183, 183, 183, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 155, 155, 155, 155,
	186, 186, 172, 172, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 630, 630, 168, 168, 168,
	167, 167, 167, 167, 170, 170, 171, 171, 171, 171,
	171, 171, 169, 160, 189, 590, 590, 586, 586, 586,
	586, 586, 586, 586, 586, 587, 587, 587, 587, 592,
	592, 114, 114, 114, 114, 114, 114, 114, 125, 125,
	125, 125, 125, 125, 125, 128, 128, 115, 115, 115,
	115, 115, 115, 115, 118, 118, 116, 116, 116, 116,
	117, 117, 80, 80, 80, 80, 80, 15, 15, 15,
	81, 81, 260, 260, 219, 219, 219, 342, 342, 220,
	220, 332, 332, 332, 332, 217, 217, 218, 218, 82,
	82, 631, 631, 631, 605, 605, 605, 606, 606, 606,
	606, 606, 606, 326, 326, 327, 327, 434, 434, 434,
	434, 434, 330, 330, 330, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 340, 341, 341, 333, 333, 339,
	338, 338, 337, 337, 336, 336, 334, 335, 335, 335,
	344, 344, 343, 346, 346, 345, 433, 549, 549, 551,
	551, 551, 551, 551, 551, 551, 553, 553, 553, 553,
	553, 553, 553, 553, 553, 553, 553, 553, 553, 553,
	553, 553, 553, 417, 417, 632, 632, 633, 634, 547,
	547, 547, 548, 543, 543, 544, 544, 544, 544, 544,
	328, 328, 329, 329, 329, 329, 545, 546, 361, 361,
	472, 550, 550, 552, 552, 554, 635, 635, 635, 635,
	635, 635, 636, 636, 636, 432, 432, 431, 431, 352,
	352, 555, 555, 555, 555, 556, 556, 556, 556, 556,
	559, 558, 557, 557, 557, 557, 557, 84, 84, 84,
	396, 396, 395, 395, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 194,
	194, 272, 272, 272, 78, 78, 78, 12, 12, 12,
	12, 12, 12, 12, 287, 287, 13, 13, 13, 607,
	607, 607, 83, 83, 83, 83, 83, 83, 350, 350,
	350, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 595, 595, 594, 594, 273, 273, 638, 638, 89,
	89, 89, 89, 89, 89, 89, 89, 490, 490, 491,
	491, 77, 77, 77, 77, 77, 418, 418, 415, 415,
	414, 414, 360, 360, 470, 470, 470, 471, 277, 277,
	278, 278, 238, 238, 238, 31, 30, 22, 22, 26,
	26, 27, 27, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 28, 28, 48, 48, 48, 48, 49, 49,
	49, 49, 52, 52, 53, 53, 47, 47, 47, 47,
	50, 50, 44, 44, 54, 54, 54, 54, 54, 614,
	616, 616, 615, 615, 619, 619, 619, 619, 619, 619,
	617, 617, 618, 618, 621, 621, 622, 622, 121, 121,
	126, 126, 126, 126, 126, 127, 127, 127, 127, 129,
	129, 129, 129, 138, 138, 193, 193, 193, 193, 193,
	193, 193, 56, 56, 56, 56, 69, 69, 69, 69,
	136, 640, 640, 640, 137, 137, 137, 639, 639, 270,
	270, 428, 428, 429, 429, 641, 641, 430, 430, 430,
	430, 430, 263, 262, 264, 264, 265, 265, 75, 75,
	75, 253, 253, 252, 254, 254, 255, 255, 250, 250,
	532, 532, 257, 257, 257, 258, 258, 246, 246, 247,
	247, 248, 248, 249, 249, 261, 261, 642, 642, 112,
	112, 112, 196, 196, 316, 316, 316, 425, 425, 425,
	353, 353, 284, 284, 427, 427, 427, 427, 392, 392,
	392, 195, 195, 368, 368, 382, 382, 383, 383, 484,
	484, 384, 119, 119, 120, 120, 135, 135, 223, 223,
	221, 221, 221, 221, 221, 221, 221, 221, 228, 228,
	229, 229, 230, 230, 231, 232, 232, 232, 232, 372,
	372, 233, 233, 233, 222, 222, 222, 224, 224, 224,
	224, 224, 224, 224, 227, 227, 227, 227, 234, 234,
	234, 226, 226, 566, 566, 566, 568, 568, 570, 570,
	569, 569, 565, 565, 567, 567, 637, 637, 398, 398,
	398, 349, 351, 347, 347, 348, 348, 358, 358, 356,
	357, 357, 359, 359, 469, 469, 469, 239, 239, 239,
	389, 389, 389, 389, 390, 390, 421, 421, 419, 419,
	419, 419, 420, 420, 422, 422, 422, 423, 423, 424,
	424, 386, 386, 387, 387, 388, 388, 388, 388, 450,
	450, 225, 225, 225, 365, 365, 365, 366, 366, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	441, 441, 439, 439, 439, 439, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 474, 475, 475, 367, 367,
	476, 426, 426, 584, 584, 584, 585, 585, 467, 467,
	477, 477, 477, 477, 477, 477, 465, 465, 466, 466,
	485, 486, 486, 402, 402, 402, 402, 400, 400, 403,
	403, 403, 403, 403, 401, 401, 478, 478, 478, 478,
	391, 391, 479, 479, 479, 479, 480, 481, 481, 482,
	482, 435, 436, 436, 492, 492, 492, 492, 494, 364,
	364, 364, 364, 364, 542, 541, 541, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 509, 509,
	509, 509, 509, 509, 509, 495, 495, 495, 495, 495,
	499, 499, 499, 498, 498, 498, 498, 498, 498, 498,
	498, 498, 498, 498, 500, 500, 505, 505, 506, 506,
	506, 501, 502, 507, 507, 507, 507, 643, 643, 511,
	511, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	497, 497, 497, 504, 504, 504, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 410,
	410, 412, 412, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 444, 444, 444, 444, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 560, 560, 560, 560, 560, 560, 560,
	560, 446, 446, 563, 563, 564, 564, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 571, 571,
	572, 572, 574, 574, 575, 575, 576, 577, 577, 577,
	578, 579, 579, 573, 573, 580, 580, 580, 580, 581,
	581, 582, 582, 582, 582, 582, 583, 583, 583, 583,
	583, 456, 456, 457, 457, 463, 463, 463, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 323, 323, 322, 274, 274, 274, 274,
	274, 274, 377, 377, 375, 375, 375, 378, 378, 376,
	376, 374, 374, 373, 373, 453, 453, 451, 451, 455,
	455, 404, 404, 510, 510, 510, 510, 510, 510, 510,
	510, 405, 405, 405, 413, 406, 406, 407, 407, 407,
	407, 407, 447, 448, 408, 408, 408, 449, 449, 458,
	462, 462, 461, 460, 460, 459, 459, 437, 437, 438,
	438, 385, 385, 644, 644, 381, 381, 483, 483, 483,
	483, 320, 320, 369, 369, 319, 319, 311, 311, 312,
	312, 312, 312, 362, 362, 464, 464, 512, 512, 513,
	513, 514, 514, 515, 515, 516, 517, 518, 452, 452,
	295, 294, 281, 282, 293, 292, 291, 280, 283, 288,
	289, 290, 285, 286, 302, 301, 300, 251, 256, 307,
	308, 308, 310, 310, 309, 309, 297, 298, 299, 488,
	279, 313, 313, 314, 314, 314, 315, 315, 315, 315,
	275, 275, 276, 276, 303, 303, 304, 305, 305, 296,
	296, 296, 266, 266, 266, 267, 267, 268, 268, 526,
	526, 523, 523, 523, 524, 524, 524, 525, 525, 525,
	525, 522, 522, 522, 522, 522, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 534, 534, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 536, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 539, 539,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 9, 3, 6,
	4, 3, 1, 3, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 1, 3, 3, 3, 6, 4, 9, 7, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 4, 3, 6, 6,
	6, 6, 6, 8, 4, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	6, 3, 8, 3, 4, 3, 3, 4, 3, 4,
	4, 4, 3, 5, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 5,
	1, 2, 1, 3, 2, 0, 7, 2, 5, 0,
	1, 3, 3, 1, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 7, 4, 7, 8, 8, 9, 11, 5, 2,
	6, 9, 4, 7, 7, 10, 7, 10, 10, 13,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 3, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 4, 6,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 3, 2, 5, 4, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 7, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	12, 15, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	2, 8, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 10,
	11, 9, 5, 3, 1, 5, 9, 6, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 3, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 1,
	1, 1, 8, 10, 11, 8, 11, 5, 4, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 16, 19, 15, 18, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 5, 2,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 6, 8, 8, 4, 7,
	3, 0, 7, 10, 1, 1, 1, 1, 2, 2,
	3, 0, 3, 0, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 13, 16,
	3, 1, 0, 4, 1, 0, 2, 2, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 5, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 4, 3, 4, 3, 5, 0,
	5, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 3, 3, 3, 0, 1,
	4, 2, 2, 2, 2, 2, 3, 2, 2, 3,
	0, 4, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 606, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -133, -138, -119, -120, -121, -134, -140,
	-193, -198, -199, -200, -3, -55, -57, -71, -90, -92,
	-103, -113, -112, -114, -122, -130, -125, -108, -62, -135,
	-139, -150, -194, -195, -196, 32, 31, 100, 80, 156,
	129, 138, 206, 389, 435, 447, 404, 143, 426, 409,
	-144, -145, 465, -56, -69, -137, -136, 73, 130, 419,
	-4, -12, -16, 29, 46, -58, -59, -60, -61, 62,
	-78, -74, -85, -79, -72, -73, -76, -625, 102, -567,
	-93, -96, -129, -629, 164, 224, -115, -116, -117, 371,
	-123, -124, 428, -126, -127, -128, 431, 165, -64, -63,
	158, -221, -223, -142, -141, -143, -197, -151, -152, -153,
	-154, -155, -156, -157, -159, -185, -160, -161, -162, -163,
	-164, -165, -169, -188, -166, -167, -168, -171, -170, -172,
	-177, -173, -174, -175, -176, -178, -179, -181, -182, -183,
	-184, -186, -187, 470, -180, -189, -158, 530, 49, 485,
	82, 148, 439, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -54, -75, -77, -80, -81, -82, -89,
	-83, -84, -566, -94, -95, -98, -100, -101, -97, -99,
	427, -224, -222, 603, 545, -19, -24, -20, -21, -23,
	-25, -22, -26, -27, -28, -40, -45, -42, -43, -41,
	-44, -46, -47, -48, -49, -50, -51, -52, -53, -30,
	-36, -37, -31, -32, -33, -34, -35, -38, -39, -17,
	-18, -29, 566, 575, -227, -225, -226, -234, 457, 553,
	505, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, -318, 2, -297, -303, -304, -305, -296,
	-266, -536, -539, 4, -533, -537, 171, 234, 335, 21,
	23, 22, 24, 25, 26, 27, 29, 30, 41, 42,
	44, 45, 46, 47, 48, 49, 53, 55, 59, 60,
	61, 62, 63, 64, 68, 73, 74, 79, 80, 81,
	82, 83, 84, 85, 91, 88, 89, 90, 92, 94,
	96, 97, 98, 99, 100, 101, 103, 104, 105, 107,
	108, 109, 117, 118, 119, 120, 121, 123, 129, 124,
	130, 133, 128, 132, 134, 136, 137, 138, 141, 142,
	143, 145, 146, 147, 149, 150, 151, 153, 154, 156,
	157, 158, 161, 159, 162, 160, 163, 164, 165, 166,
	169, 177, 178, 179, 184, 186, 187, 188, 192, 193,
	194, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	207, 211, 213, 214, 215, 216, 217, 223, 224, 226,
	227, 228, 229, 230, 235, 236, 237, 240, 246, 247,
	251, 252, 253, 255, 259, 260, 261, 262, 263, 264,
	266, 268, 267, 270, 273, 274, 277, 278, 279, 280,
	281, 282, 286, 287, 283, 288, 289, 291, 292, 295,
	293, 296, 297, 294, 298, 300, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 299, 314, 312,
	316, 317, 318, 319, 333, 328, 329, 330, 323, 324,
	320, 325, 321, 322, 326, 327, 332, 337, 338, 341,
	221, 343, 344, 347, 365, 351, 352, 353, 356, 357,
	360, 363, 364, 366, 367, 368, 369, 370, 371, 372,
	373, 374, 376, 377, 379, 380, 381, 383, 384, 385,
	387, 389, 390, 392, 393, 395, 396, 397, 398, 399,
	400, 401, 403, 404, 406, 405, 407, 409, 411, 412,
	413, 419, 426, 420, 422, 423, 424, 425, 427, 428,
	429, 430, 431, 433, 434, 435, 437, 438, 439, 440,
	441, 443, 445, 446, 450, 451, 467, 468, 487, 447,
	448, 449, 452, 453, 454, 455, 456, 460, 458, 459,
	461, 462, 463, 465, 466, 469, 470, 472, 473, 474,
	475, 476, 477, 478, 481, 483, 484, 485, 504, 486,
	488, 492, 493, 494, 495, 489, 490, 503, 497, 498,
	500, 501, 506, 507, 508, 509, 510, 511, 512, 513,
	515, 523, 524, 525, 527, 530, 531, 532, 533, 521,
	535, 536, 539, 540, 541, 544, 542, 543, 545, 547,
	550, 551, 552, 558, 557, 559, 561, 562, 567, 568,
	570, 571, 572, 36, 50, 51, 54, 56, 58, 69,
	70, 71, 75, 125, 126, 155, 167, 168, 180, 195,
	196, 208, 210, 218, 219, 220, 241, 242, 244, 249,
	271, 340, 342, 358, 362, 378, 382, 386, 388, 402,
	442, 479, 491, 496, 516, 517, 518, 519, 526, 528,
	553, 554, 555, 560, 569, -318, 2, -297, 349, -290,
	2, -266, -266, 389, 28, 2, 28, 377, 459, 508,
	510, 2, -593, -363, 2, 28, -269, -266, 102, 206,
	457, -290, 2, -593, 206, -363, 25, 2, -266, 2,
	363, 22, 27, 66, 77, 98, 141, 166, 189, 192,
	-628, 365, 396, 445, 461, 503, 513, 527, 2, 557,
	292, 458, 505, 234, 120, 532, 452, -607, 450, 451,
	363, 394, 437, 209, 546, -270, 2, 447, -266, 292,
	2, 606, 94, 74, 442, 462, -147, 2, 282, 524,
	-148, -149, -146, 516, -521, 452, 437, 314, -266, 606,
	606, 606, 28, -279, -266, 505, 234, 452, 120, 501,
	606, 2, 505, 368, 557, 458, 120, 399, 234, 532,
	192, 141, 27, 452, -607, 580, 581, 292, 127, -591,
	2, -586, 4, -537, -533, -312, -311, 505, 511, 120,
	-305, -296, 595, -304, 606, 606, 606, 606, 2, 252,
	253, 398, 397, 462, 463, 28, 606, 606, 606, 606,
	450, 2, 166, 22, 27, 66, 93, 98, 127, 189,
	192, 354, -626, 365, 396, 461, 503, 507, 513, 527,
	-606, 486, 68, 425, 452, -605, -607, 292, 532, 141,
	-414, 120, 282, 204, 540, 510, 508, 538, 133, 240,
	543, 542, 606, 606, -106, 2, 603, 32, 31, -105,
	-109, 143, 465, -216, 505, 245, 2, -266, 606, 606,
	606, 2, 252, 253, 450, 451, 28, 606, 606, 190,
	-586, 2, 606, 606, 606, 2, 28, 252, 253, 450,
	451, 245, 2, 68, 454, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 2, -191, 462, 486, 215, 47, 46, 74, 28,
	395, 79, 369, 121, 127, 150, 533, 207, 234, 235,
	260, 93, 94, -416, 44, 253, 68, 252, 451, -612,
	450, -468, 506, 453, 459, 500, 264, 447, 524, 102,
	547, 438, 572, 399, 400, 498, 413, 283, 159, 191,
	4, 120, 314, 437, 464, 268, 267, 516, 282, 446,
	372, 84, 606, -637, 2, 505, -639, 2, 524, 524,
	2, -639, 2, -639, 2, -639, 2, -640, 524, 569,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, -222, -224,
	-223, 606, 606, 606, 606, 606, 606, 606, -191, 462,
	2, 74, 28, -356, -358, 537, 243, 152, 355, -221,
	-223, 2, -566, -519, 2, -442, -540, -444, 593, 594,
	586, 502, 67, -322, 334, 573, -456, 127, 538, 349,
	-539, -445, -458, 155, 365, 442, -378, 8, 9, 5,
	6, 7, -275, -446, -452, 529, 170, 339, -315, 607,
	10, 603, -563, -223, -457, 37, 210, 65, -523, -314,
	-276, -495, 244, -313, -296, -560, -561, 4, -533, -534,
	-524, -498, -506, -502, -503, -509, -266, -536, 77, 111,
	112, 110, 115, 114, 285, 284, 116, 113, 464, 546,
	66, 36, 218, 219, 249, 340, 220, 75, -562, 142,
	-535, 241, 242, 479, 51, 402, 180, 126, 125, 342,
	56, 54, 554, -507, 122, 516, 517, 518, 519, 195,
	196, 58, 167, 168, 362, 386, 496, 526, 528, 208,
	271, 43, 106, 191, 239, 222, 248, 250, 254, 272,
	275, 315, 331, 336, 359, 361, 436, 471, -643, 555,
	491, 69, 70, -568, 405, -569, -290, -568, 606, 606,
	608, 606, -347, -349, -351, 2, 28, 139, 603, 2,
	-473, 2, -474, -478, -223, 265, -477, 603, -475, 601,
	-297, 350, -564, 443, -560, -561, -275, -296, -314, 4,
	-533, -535, 605, -352, 603, 120, 452, 505, 78, 234,
	93, 166, -409, 603, -266, 28, 349, 520, 608, -348,
	393, -454, 603, 349, 352, 190, 352, 60, 296, 2,
	2, 2, 2, 2, 218, -266, 505, 119, 2, 263,
	2, 2, 2, 2, 2, 2, 2, -371, 218, 2,
	-297, 557, -371, 218, 2, -371, 218, 2, -415, 2,
	87, -280, 218, 2, -266, -306, 218, 2, -301, -303,
	-310, 218, 2, -308, -266, -528, 218, 2, -527, 4,
	-533, 116, 464, -442, 2, -135, 2, 60, -266, 557,
	2, 467, 2, 603, -147, 2, 71, 524, 43, 462,
	-148, 2, -429, 2, -430, -262, -263, -264, -485, -265,
	251, 392, 401, 576, 131, 334, 572, -620, 190, 585,
	520, -519, -519, -519, -379, 605, 2, 2, 2, 2,
	2, 2, -478, 218, -297, 2, -294, -522, 4, -533,
	-537, -534, -538, -536, 28, 31, 32, 33, 35, 37,
	38, 39, 40, 57, 65, 66, 72, 76, 78, 87,
	93, 102, 110, 111, 113, 112, 114, 115, 116, 127,
	131, 135, 139, 140, 144, 148, 152, 170, 172, 185,
	189, 190, 206, 209, 212, 225, 238, 243, 245, 265,
	269, 276, 284, 285, 334, 339, 345, 349, 350, 354,
	355, 375, 391, 408, 432, 457, 464, 482, 499, 505,
	514, 520, 522, 529, 537, 538, 546, 548, 556, 563,
	564, 565, 566, -539, 77, 2, -478, 218, 2, -300,
	218, -478, -303, 2, -280, 2, -442, -600, 512, 162,
	420, 2, -319, 218, -297, -299, -303, -301, 2, 2,
	2, 2, -308, 2, -527, 218, 2, 28, 28, 557,
	393, 245, 520, 608, -369, -311, -312, -518, 8, -362,
	-266, 605, -442, 2, -135, -118, 2, 185, -442, 218,
	2, -135, 218, 2, -442, 218, 2, -135, 218, 2,
	-266, 2, -608, 2, -530, 218, -526, 10, -525, 5,
	4, -533, -537, -534, 218, -266, 2, 296, 2, 2,
	527, 2, 98, 505, 119, 2, 424, -627, 445, 531,
	2, 2, 2, 2, 2, 2, 2, 505, -285, 2,
	-266, 185, 489, -308, 218, -309, 2, 458, -638, 405,
	-527, 218, 2, 557, -301, 218, 2, -301, 234, 247,
	-280, 218, 2, 510, 508, 510, 508, 190, 2, 245,
	2, 245, 2, -479, 2, -480, -474, -481, 601, 350,
	-489, 2, -488, -525, 553, -106, 603, -106, 603, 462,
	603, -530, -297, -297, -442, 2, -135, -118, 2, -442,
	2, -135, 2, -266, 2, -132, -530, -131, 603, 190,
	-266, 2, -442, 2, -135, -118, 2, -442, 2, -135,
	2, -216, 185, 2, 120, 505, -191, 2, 185, 548,
	2, 8, 2, 225, -530, 453, 400, 177, 2, 467,
	2, 468, 74, -416, 572, 74, 190, 2, 190, 2,
	-399, 2, 566, 393, 190, 2, 2, -590, 2, 349,
	190, 2, 190, 2, 190, 2, 190, 2, 190, 2,
	-190, 463, 525, 504, 397, 253, 2, -135, 563, -118,
	253, 252, -442, 563, 2, -613, 185, 451, -442, 2,
	523, 262, 160, 190, -399, 2, 190, 2, 190, 2,
	5, 2, 398, 487, 2, 251, 392, 487, 2, -297,
	505, 557, 458, 120, 28, 2, 450, 2, 2, 88,
	89, 190, 2, 190, 2, 205, 190, 2, 190, 505,
	-380, 605, 572, 2, -391, -478, -428, -429, -428, 520,
	-356, -358, -191, 467, 2, -228, -389, -230, 185, -419,
	-420, -231, 276, 172, 345, -232, -398, 28, 139, -398,
	-398, 60, 604, 604, 11, 12, 76, 41, 593, 594,
	595, 596, 183, 597, 598, 591, 592, 590, 583, 584,
	588, 257, 258, 95, 587, 585, 86, 290, 444, 173,
	174, 175, 176, 421, 232, 34, 233, 14, 15, 16,
	-322, 33, 354, 275, 573, 222, 471, 586, 17, 18,
	19, 248, 250, 336, 50, 225, -274, 365, -321, 502,
	67, -442, -442, -442, -442, -442, -442, -442, -442, 361,
	603, -385, -437, 601, -223, 603, 603, 603, 603, -518,
	-223, -442, -456, 604, -376, 603, -223, -456, -451, 603,
	442, 601, 603, -459, -442, 5, 5, 5, 603, 605,
	-571, 567, 185, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 388,
	-500, 603, -499, 603, -499, -499, 558, -497, 603, 575,
	568, 603, -497, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 558, 608, -568, -352,
	603, -381, -483, -442, 595, -381, -381, 349, -373, -442,
	106, -402, 254, 315, 191, 272, 436, 239, -439, 607,
	-439, -467, 575, -223, -475, -296, -223, -477, 603, -473,
	-467, -107, -518, -90, -103, -112, -135, -150, -195, -196,
	595, -297, 603, 190, 603, 605, -522, 190, -362, -280,
	-307, -266, -297, -313, -314, -319, -291, -266, 2, 138,
	-373, -586, 532, 452, 28, 458, -528, -269, 38, -453,
	-492, -493, -542, 607, -541, -495, -505, -501, -504, 378,
	382, -524, 54, 554, -507, 244, 4, -533, -535, 241,
	242, 479, 51, 402, 180, 126, 125, 342, 56, 516,
	517, 518, 519, 195, 196, 58, 555, 491, 69, 70,
	-586, 532, 452, 28, 458, 185, -528, 185, -528, 2,
	2, 155, 2, 2, 2, -266, -244, 608, 64, 429,
	155, -371, 218, -244, 155, -244, 155, -320, 218, -319,
	-244, 155, -244, 608, 155, -244, 608, 155, 605, 608,
	155, -528, 2, -415, -521, -373, 38, -429, 2, 127,
	4, 5, -641, 608, 274, -325, 289, 333, 214, 350,
	570, 343, 131, -529, 5, 4, -452, -464, 127, 282,
	244, -512, -514, 8, -513, 9, -515, 593, 594, -520,
	-519, 109, 605, -522, -241, 422, 465, 364, -240, 24,
	29, 143, 236, 319, 551, 161, -337, 237, -334, 368,
	155, 483, 541, -600, -603, 449, 512, 162, 420, 90,
	343, 465, 364, 422, 155, -395, -397, 38, 118, 319,
	363, 61, 228, 294, 295, 485, 560, 155, 465, 364,
	422, 364, -13, -255, 24, 143, -257, -252, 465, -603,
	99, 422, 579, 427, 374, 497, 391, -603, -600, 270,
	-602, 562, 332, -243, 483, 541, -600, -603, 449, 422,
	-242, -339, -334, 368, 155, 607, 24, 143, 422, 465,
	364, -623, -624, 29, 422, 364, -594, -287, -565, 225,
	566, 155, -287, -287, -478, 218, -617, 185, 2, -610,
	-131, 266, 5, 10, -530, -131, -369, 608, 608, -522,
	595, 451, 450, 155, 155, 155, 155, 253, 185, 334,
	334, 2, 2, 2, 2, 2, 192, -605, -628, 2,
	2, -297, 218, -354, 349, -589, -370, 505, -297, 185,
	334, 43, -300, 218, 2, -303, 557, -594, 334, -302,
	218, -297, 38, 603, 334, 2, -415, 2, 234, -565,
	334, -479, -316, -297, -474, -316, 465, -290, 38, -439,
	-297, 604, 608, -489, -489, -530, -204, 566, 190, 603,
	-216, 566, 566, 253, -486, 608, -485, 225, -531, -530,
	-132, -530, 425, 253, -530, -589, -280, 2, -297, 2,
	505, 255, -530, -204, 225, -530, -530, -530, -521, 28,
	468, 2, -190, 463, 525, 89, 468, 2, -297, 505,
	120, 234, 80, -617, 185, 2, -266, -592, 185, -587,
	437, 452, 532, -586, -297, 120, -297, 120, -297, 120,
	-297, -297, 2, 2, 2, 2, 2, 85, 2, -135,
	-442, 2, 85, 2, 46, 484, -613, 185, 2, 523,
	2, 523, 2, -266, -266, -266, 486, 274, -297, -297,
	-297, -298, -303, 453, 506, 533, 451, -442, 2, -630,
	2, 190, 185, 2, 505, 234, 505, 234, 120, 190,
	74, 120, 28, 505, 448, 605, 4, -244, 608, -270,
	-228, -389, -521, -390, -389, -229, -228, -231, 185, 401,
	542, 319, 469, 259, -420, -419, 28, -442, -424, 179,
	318, -442, -422, -444, 593, 594, -513, -515, -372, 343,
	-222, -222, -222, -359, -469, -442, 391, 234, -494, -492,
	-492, -295, -522, 516, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	275, 222, 471, 50, 225, -442, 520, -442, -442, -442,
	-442, 312, 334, 339, 529, 170, 539, 139, 343, -644,
	499, 40, -449, -223, -377, 603, -463, 35, 482, 28,
	-456, 603, 2, -437, -442, -438, -323, -321, -266, 593,
	594, 595, 596, 597, 598, 583, 584, 585, 14, 15,
	16, 588, 592, 590, 591, 183, 95, 587, 290, 444,
	86, 173, 174, 175, 176, 257, 258, 17, 18, 19,
	34, 586, -374, -373, -373, 604, 556, 28, 139, 595,
	2, 604, 608, 38, 604, -442, -374, -455, -451, -373,
	-462, -461, 563, -410, -411, 571, 299, 123, 216, 297,
	-412, 456, -516, 8, -522, 595, -572, 178, 209, 603,
	604, 2, 604, 2, 604, -442, 2, 604, -442, 2,
	604, -442, 2, 604, -442, 2, 604, 2, 604, 2,
	-442, -442, -442, -442, -442, -442, -442, -373, 8, -516,
	-516, 516, 516, -516, -516, -516, -508, 378, 379, 380,
	381, 277, 278, 279, 280, 382, 383, 384, 385, 304,
	305, 306, 307, 300, 301, 302, 303, 308, 309, 310,
	311, 200, 201, 202, 203, 196, 197, 198, 199, -508,
	-404, 2, -510, -373, 4, 571, 299, 123, 216, 297,
	456, 5, -404, 2, -405, 2, -442, -373, -406, -443,
	-444, 593, 594, 586, -322, -456, -407, 2, -442, -374,
	-442, 57, 269, 522, -408, -442, 190, -373, -373, 2,
	-373, 2, -569, 38, -373, -365, 608, 190, 38, 4,
	-365, -365, 603, 604, 608, -403, 213, 293, 288, 247,
	-403, -473, -402, 254, -400, 359, -400, -400, -467, -281,
	601, 609, -522, -467, -466, -465, 38, -290, 356, -467,
	-467, 605, 604, -466, 602, -584, 603, 606, 606, 606,
	606, 606, -297, 603, -373, -522, 605, 488, 2, 604,
	248, 248, 248, 248, 248, 349, 443, 604, 520, -588,
	-306, -310, 506, 2, 566, -105, 351, 604, 608, -364,
	37, 601, 605, -516, 2, 2, -511, 558, 603, 603,
	-411, 603, 190, -588, -310, 506, 2, -593, -363, -363,
	520, -266, 2, -297, -371, -244, 155, -371, -371, -244,
	608, 155, -280, -301, -306, -308, -310, -266, -527, -528,
	-244, -302, -620, 604, 524, -430, -324, 401, 481, 423,
	460, 501, 8, 9, 8, 9, 608, -522, 608, -621,
	93, 520, 78, 452, -259, 283, 520, -433, 218, 78,
	-543, 93, -283, -544, -266, 72, 538, 391, 189, 153,
	-621, 93, 391, -621, 93, 2, 236, 93, 465, 486,
	28, 60, -478, 41, 41, 28, -601, -602, 270, 190,
	572, 505, 234, 452, 520, 520, -478, -397, -492, 118,
	294, 295, 60, -517, -512, 593, 594, -517, 60, -517,
	-517, -517, 566, -300, -478, 452, 520, 520, 520, 411,
	411, -252, -148, 520, 520, 28, -191, 430, 127, -642,
	585, 411, 270, -602, 520, 190, 608, 41, 41, 28,
	-601, 190, 520, -319, -281, 552, 42, 552, 42, 552,
	520, 42, 452, 520, 608, 42, 520, 520, -13, 465,
	-595, -271, 105, 325, 287, 326, 97, 322, 96, 321,
	103, 323, 104, 324, 559, 337, 63, 320, 298, 327,
	-272, -273, 146, 370, 550, 120, -527, -13, -13, 465,
	364, 422, 155, -618, 225, 28, -607, 225, -486, 225,
	-486, -311, -266, 605, -135, -442, -442, -135, -442, -135,
	46, 155, 155, 2, -638, 263, 603, -328, 334, 190,
	-362, -487, 245, 608, -370, -586, 155, -527, -396, -395,
	334, -302, 218, 2, 155, -352, 334, 149, 603, 399,
	2, 155, -282, 218, -267, -266, -415, -246, 509, 155,
	-393, 548, -425, -135, 603, 127, 38, -425, -382, -383,
	-484, -384, -283, 603, -290, -439, -106, -488, 604, 604,
	604, -203, 353, -202, -266, 5, -216, -353, -284, -283,
	119, 403, 403, -210, 566, -131, -132, 604, 608, -486,
	225, 489, -204, -204, -486, -486, -297, 185, -530, -204,
	-204, -204, 2, 2, 2, 2, -399, -297, -280, -319,
	-297, 28, 605, -528, -528, -310, -306, -399, -280, -399,
	-280, -399, -280, -399, -399, -135, -442, 486, 2, 462,
	185, 185, 605, -399, -355, 432, 2, 399, 120, 505,
	368, 234, -297, -319, -297, -319, -280, 120, -280, 121,
	-297, 4, -478, -390, -229, 350, 259, 469, -422, -423,
	-444, 442, 443, -423, 442, 443, 8, 9, 8, 9,
	-233, 473, 338, -371, 608, -238, 39, 135, 259, -297,
	572, 151, -442, -442, 520, -644, 499, -449, 151, -442,
	312, 339, 529, 170, 539, 139, 343, 190, 603, -443,
	-443, 604, -375, -442, -442, 602, 611, 604, 605, 604,
	-358, 608, -356, -442, -373, -373, 604, 605, -373, -362,
	602, 602, 608, 604, -460, -461, 144, -442, 520, 520,
	520, 520, 603, 604, 605, -577, 360, 603, 603, -442,
	604, 604, 604, 604, 38, 608, 608, 608, 604, 608,
	608, 608, 604, 604, 604, 608, 604, 572, 572, 604,
	604, 604, 604, 608, 604, 608, 604, 190, 604, 604,
	-413, 375, 604, 11, 12, 593, 594, 595, 596, 183,
	597, 598, 591, 592, 590, 583, 584, 585, 86, 290,
	444, 14, 15, 16, -322, 248, 225, -443, -443, -443,
	-443, 604, -447, -448, 190, 185, 38, -408, -408, -408,
	604, 190, -373, 604, 604, 603, -570, 292, 334, 604,
	-436, -435, 564, -483, -366, 2, -473, -292, -522, -436,
	-436, -373, -442, 254, 254, -401, 548, 349, -403, -473,
	-466, -518, -441, -440, 187, 39, 135, 328, 329, 330,
	221, 188, -466, -290, -352, -466, -466, -522, -467, -467,
	-465, 604, -585, -518, 604, -367, -476, -564, -358, 605,
	-522, -213, -565, -192, 5, 339, -192, -192, -192, -192,
	-297, -528, 520, 520, 225, 25, 376, -492, 601, 602,
	8, -522, 603, -516, -516, -516, -528, 190, 190, 225,
	349, 190, -527, 2, -244, -371, -244, -244, -319, -320,
	-244, -244, -244, -394, 566, -519, -429, 536, 83, 401,
	516, -519, -240, 422, -283, -283, -297, -307, 204, 412,
	-527, 334, -433, 218, -245, 334, 218, -291, -492, 603,
	-417, 568, 259, 259, 548, -283, -291, 259, 218, -283,
	218, -291, 2, -291, -596, 401, 344, -442, 60, -335,
	281, 399, 335, -241, 422, 465, 364, -135, -135, -135,
	603, -620, 548, 138, -297, -319, -297, -307, -527, -302,
	465, 364, 422, 331, -313, -517, -517, -395, 465, 364,
	422, -307, -527, -300, -527, -251, 218, -266, -251, 218,
	452, -280, 411, 572, 45, -642, 520, 190, -442, -442,
	-242, -135, -135, -135, 603, -281, -243, 422, 5, 218,
	-283, 5, -283, 218, 5, -266, -283, -307, -527, -624,
	24, 143, -283, -307, -527, -271, 370, -530, 339, 544,
	-280, -594, -287, 452, 520, 520, -478, -614, -615, 206,
	435, 452, 438, -528, -131, -207, 566, -131, -201, 229,
	595, -591, -530, -266, 557, -266, -326, -329, -327, -283,
	-434, -433, -547, -548, -543, 275, 234, 538, 247, 171,
	93, -219, -220, 568, 566, 155, -317, -297, 601, -204,
	-530, -297, -487, -308, -309, 155, -352, 334, -527, 38,
	155, 603, 2, 2, -301, 349, 334, -282, 218, -247,
	145, -642, -280, -436, -366, -392, -427, 432, 349, -353,
	553, -290, -392, -368, 608, 190, 585, 605, -353, -482,
	595, -106, -106, -204, 608, 603, 585, 585, 603, -530,
	604, 608, 605, 603, 585, 585, -212, 353, -211, 147,
	261, 246, 475, 476, 477, 478, 137, 474, 124, 317,
	230, -486, -530, -210, -132, 190, 190, -65, 566, 505,
	-204, 607, 438, -266, -399, -399, -399, 462, 462, -266,
	-362, -293, -522, -280, -297, -294, -319, 185, 185, -280,
	542, -423, 350, 286, -469, -239, 574, -297, 607, -442,
	-442, 151, 151, -442, -443, -443, -442, 151, 190, 603,
	-442, -453, 33, 33, 604, 608, -438, -442, -321, 604,
	556, -358, -358, 604, 595, -522, 607, 604, -451, 148,
	-442, 514, 299, 216, 297, -412, 297, -412, -412, -516,
	5, -522, 595, -578, -286, 603, -266, 564, -357, 355,
	604, -494, -492, -442, -442, -442, -442, -442, -516, -497,
	-497, -512, -512, -442, -447, -442, -494, -492, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, 139, 334,
	343, -443, -448, -447, -442, -442, -492, 604, 604, 604,
	-373, -105, 603, 292, -386, 209, -442, -486, 608, -386,
	-386, 604, -473, -473, 603, -442, 254, 602, 608, 610,
	585, 585, -352, 605, -465, -466, 602, 604, 608, 604,
	608, -426, 38, 604, -522, -436, -215, -214, 136, 53,
	107, 134, 339, 248, -616, 566, -528, -528, 452, 352,
	5, 8, 601, 602, 605, -516, 604, 604, 604, -528,
	-528, 452, -586, 532, 452, 28, -528, -244, -244, 119,
	319, -442, 520, 520, 60, 225, 155, 334, 550, 334,
	-544, 153, -549, -442, 603, 234, 603, 603, 2, -235,
	-236, -237, 143, 465, 24, -622, 2, 548, 155, -244,
	155, -244, 570, -335, 603, 603, 520, 452, -259, 520,
	566, -373, -442, -205, 127, -521, -603, 607, -603, 607,
	452, 520, 520, 452, 520, 520, 334, 155, 566, 169,
	169, 572, -251, -442, -442, 185, 520, 566, -373, 520,
	-496, 48, 26, 334, -301, -244, 155, 520, 520, 532,
	465, -530, -530, 339, -13, -307, -527, -302, 465, 364,
	422, -593, -593, 206, -310, -618, -486, -209, 353, -208,
	147, 434, 137, 261, 230, -486, -207, 190, 245, 566,
	-302, 2, 604, 604, 608, 608, -550, -245, -297, -282,
	234, 234, -289, -267, 38, 347, 347, 603, -297, -86,
	566, -485, -518, -597, 566, 43, -300, 38, 155, -594,
	-135, -302, -490, -491, 5, 38, -297, 155, 349, 334,
	-248, 268, -642, -526, -565, -358, -392, -381, 335, 91,
	604, -436, -383, -366, -442, 2, 604, -202, -203, -530,
	-530, -530, -204, -216, -284, 2, -531, -530, -530, 608,
	603, 585, 585, 585, 585, 585, 585, -210, -486, -131,
	-135, 353, -297, 595, -399, -341, -340, 368, 343, -341,
	442, 442, 350, 179, 264, -238, -281, -442, -442, 151,
	33, 33, -442, -442, -453, 604, -442, -442, -373, 602,
	5, -442, 604, 604, 8, -442, 604, 605, -579, -266,
	-442, 604, 60, 604, 604, 608, 608, 604, 604, 604,
	604, 604, 604, 604, -448, 190, 139, 343, 603, 604,
	604, -105, -450, 212, 60, -473, -450, -450, -401, -362,
	-473, -440, -281, 601, -281, 601, -522, -518, -476, 603,
	605, -214, 585, -530, -530, -192, 206, -616, -616, 566,
	-310, 602, 2, 601, -522, 604, -310, 190, -588, -310,
	506, 119, -283, -283, 505, 442, -251, 391, -433, 155,
	155, -551, 93, -553, 76, 171, 102, 334, 339, 538,
	391, 72, 127, 349, 408, -632, -633, -634, 38, 577,
	578, 604, -360, -470, -564, 603, -266, -360, -362, 334,
	494, 127, 349, 334, 127, 349, 561, 119, 2, 532,
	79, -283, -291, -362, -362, -297, -307, -527, 163, 604,
	608, 585, 2, 595, 595, -307, -527, -302, -307, -527,
	-300, 155, -251, 366, 169, 520, -135, -442, 163, 604,
	-281, 5, 5, 155, -278, 76, -283, 5, -283, -301,
	119, 452, 520, 520, 349, 349, 352, -614, -615, -207,
	608, 603, 585, 585, 585, -207, -531, -131, 2, -352,
	-342, 236, -283, -548, -545, -546, 391, -434, -552, -554,
	171, 391, -330, 603, -282, -267, 603, -135, 2, -218,
	-217, -266, 5, 603, -328, 353, 602, -599, 353, -598,
	117, 137, -527, -396, -135, -302, -350, 566, -352, 604,
	608, 149, -418, 548, -281, -297, 155, -249, 267, -642,
	-526, -246, -421, -419, 140, 603, 349, -135, -358, 585,
	604, 604, 119, 604, -211, -212, -530, -131, -530, -530,
	-530, -131, -210, -486, -66, -67, 234, 93, 373, -294,
	505, 234, 603, 603, -238, -442, -442, -442, 604, -358,
	-522, 595, -573, 368, 604, -469, -442, -442, -443, 190,
	603, -453, 604, -574, 565, -442, -387, -388, -442, 440,
	108, 210, -574, -574, 604, -518, -518, 2, -530, 352,
	2, 520, 601, 2, 190, -528, 190, 190, 225, 225,
	38, 411, -433, -291, -291, -295, -288, -266, 171, 218,
	339, 561, -417, 259, 603, -443, 542, -297, 603, 2,
	217, 217, 30, 60, -635, 131, 238, 604, 608, -471,
	-277, -266, -442, -471, 604, 604, 339, 542, 339, 561,
	-442, 542, -492, 603, -244, -244, 604, 604, -442, 520,
	-521, 100, -519, 2, -603, -251, -280, -442, 185, -442,
	520, 5, -244, -295, -244, -244, -278, 532, -307, -527,
	-302, -619, 506, 459, 533, 453, 193, 441, -619, 185,
	-208, -209, -530, -131, -131, -207, 38, -336, -337, 2,
	-550, 259, -288, 259, 227, 154, -360, 603, 603, -362,
	-631, 566, 604, 608, 585, 585, -326, -219, -87, -88,
	521, -485, 608, 603, 585, -352, 319, 119, 38, 5,
	603, 603, -266, 349, 603, -281, -261, 92, -642, -526,
	-247, -392, 335, -362, 93, -421, -449, -204, 603, -204,
	604, 608, 28, 603, 28, 603, -297, -319, -373, -373,
	604, -358, 60, 608, 604, 604, -443, -453, 604, -575,
	-576, -286, 608, 603, 603, 466, 602, 602, -528, 2,
	-528, -528, -528, 452, -251, 391, -266, -544, -553, -288,
	334, 548, -442, -443, -268, 603, -442, 603, 603, 38,
	127, 238, 132, 223, -432, -636, 101, 495, 226, -470,
	-238, 604, -431, 548, 408, -443, -278, -360, 603, 603,
	603, 585, 190, -135, 603, -496, -244, -301, 520, 2,
	2, 190, -593, 604, -609, 406, -135, -219, 603, -331,
	81, 94, 128, 217, 194, 235, 486, 492, 28, -331,
	604, -360, -360, 604, -332, 349, 119, 319, -217, -519,
	-519, 604, 38, -88, 9, -598, -599, -442, 38, 119,
	-135, -490, -360, -297, -360, 349, -253, -252, 276, -526,
	-248, 604, -291, -392, -531, -67, -362, -362, 604, 604,
	-580, 399, 443, 211, -373, -359, 604, 608, 38, -388,
	2, 2, 2, -616, -310, 411, -245, 155, 213, 604,
	-555, 291, -266, 604, -396, -396, 38, 132, 223, -338,
	-334, 603, -239, -471, 213, -297, -604, 548, 604, -344,
	-343, -340, -346, -345, -340, -373, -519, 100, 366, -373,
	-278, -528, -528, 349, -611, 191, -610, 5, 10, -332,
	-361, -472, -283, -431, 604, 604, 82, 119, -342, -135,
	604, -135, 2, -350, 604, 604, -418, 604, -297, -250,
	-532, 411, 413, -642, -249, -436, 604, 604, 604, 604,
	-581, -582, 50, 535, 109, -442, -581, -581, -576, -578,
	190, 171, 566, -556, -559, -558, 582, 472, 191, 367,
	604, 494, 560, 604, 604, -635, -362, 566, -352, -442,
	-431, 604, 608, 553, 604, 608, 553, 604, 190, 604,
	-244, -616, -244, -619, -206, 566, 46, -260, -259, 604,
	608, -432, -431, -338, 390, 133, 143, -336, -631, -431,
	603, -432, 603, -258, -257, -642, -512, -261, 140, -204,
	-583, 153, -582, 387, 184, 442, 387, 184, -583, -583,
	-528, -288, 55, -558, 582, -559, 582, 542, 133, -436,
	604, 55, -555, -343, 225, -345, 190, 366, 190, 450,
	-610, 30, -472, -338, -432, -220, 566, 443, 443, 2,
	-219, -332, -432, -360, -338, -360, -254, -255, -256, -362,
	-253, 335, 542, 109, 209, 515, 319, 33, 585, -557,
	319, 429, 64, 465, -557, 585, -556, 603, 603, -528,
	353, -220, -338, -436, 2, -332, -338, 604, -220, 604,
	-250, 465, 442, 357, -582, -442, 23, 339, 127, -442,
	-635, -373, -373, -244, -203, 603, -436, -220, -260, -220,
	-431, -436, -432, -258, -382, 604, 604, -203, -436, -436,
	-432, -338, -254, -436, -333, -334, 520, 604, -338, -220,
	603, -220, -436, -373, -436, 604, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 561, 562, 564, 565, 566, 568,
	569, 571, 573, 575, 576, 577, 579, 580, 582, 583,
	584, 585, 586, 588, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	661, 663, 0, 1435, 1437, 1439, 1441, 0, 817, 0,
	36, 37, 39, 0, -2, 340, 342, 344, 346, 0,
	377, 379, 380, 382, 384, 385, 386, 388, -2, 0,
	494, 495, 497, 499, -2, 0, 1031, 1033, 1035, 0,
	650, 652, 0, 1038, 1040, 1042, 0, 0, 673, 674,
	0, 1546, -2, 665, 667, 669, 671, 742, 744, 746,
	748, 750, 752, 754, 756, 758, 760, 761, 763, 765,
	767, 769, 771, 772, 774, 776, 778, 779, 781, 782,
	784, 786, 788, 790, 792, 794, 796, 798, 800, 802,
	804, 806, 808, -2, 811, 812, 813, -2, -2, 0,
	-2, -2, -2, 1453, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 438, 440, 442, 444, 446, 449,
	451, 453, 1604, 501, 503, 505, 507, 509, 511, 513,
	0, -2, 1618, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 109, 110, 111, 112, 113,
	114, 115, 74, 75, 76, 78, 79, 80, 81, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 94, 106,
	107, 72, 0, 0, 1577, 1579, 1581, 1583, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 27, 29, 563, 567, 570, 572, 574, 578, 581,
	587, 589, 591, 546, 547, 550, 2316, 2334, 2335, 2336,
	2339, 2340, 2341, 2342, 2343, 2344, 2802, 2883, 2884, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676,
	2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686,
	2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696,
	2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706,
	2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716,
	2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726,
	2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736,
	2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746,
	2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756,
	2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766,
	2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776,
	2777, 2778, 2779, 2780, 2781, 548, 549, 1220, 0, 615,
	613, 2301, 616, 2598, 618, 620, 488, 489, 490, 491,
	492, 493, 0, 643, 629, 1616, 644, 646, 647, 648,
	649, 610, 608, 0, 648, 643, 2370, 641, 1433, 1434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 417, 1279, 1280, 1281, 1418, 1419, 2646, 1460, 0,
	239, 662, -2, -2, 2767, -2, 696, 697, -2, -2,
	711, 715, 706, 2771, 0, 2649, 2633, -2, 718, 1436,
	1438, 1440, 815, 816, 2320, 0, 0, 0, 0, 0,
	38, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 249, -2, -2, -2, -2, 0, 0, 2694, 2422,
	2269, 2336, 2272, 2267, 341, 343, 345, 347, 348, 0,
	0, 0, 0, 0, 0, 0, 378, 381, 383, 387,
	-2, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 1102, 1094, 1095, 1340, 0, 0,
	0, -2, 496, 498, 551, 552, 0, 1605, 1605, 559,
	560, -2, 0, 0, 0, 0, 311, 301, 1032, 1034,
	1036, 1037, 0, 0, 0, 0, 0, 651, 653, 0,
	0, 279, 1039, 1041, 1043, 1044, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 666, 668, 670, 672, 743,
	745, 747, 749, 751, 753, 755, 757, 759, 762, 764,
	766, 768, 770, 773, 775, 777, 780, 783, 785, 787,
	789, 791, 793, 795, 797, 799, 801, 803, 805, 807,
	809, 810, 823, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 925, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, -2, 1012, 0, 0,
	826, 829, 830, 831, 832, 833, 834, 0, 898, 923,
	924, 934, 814, 0, 1260, 1606, 1462, 1443, 1457, 1462,
	1445, 1446, 1447, 1448, 1449, 1454, 1456, 1450, 1451, 1452,
	42, 44, 46, 48, 50, 52, 54, 56, 58, 60,
	439, 441, 443, 445, 447, 450, 452, 454, -2, 1575,
	1576, 502, 504, 506, 508, 510, 512, 514, 654, 0,
	656, 0, 828, -2, 0, 1610, 1610, 1610, 0, 0,
	1576, 1574, 0, 659, 660, 722, 723, 1883, 0, 0,
	0, 0, 0, 0, 0, 0, 2143, 1971, 0, 724,
	-2, 2004, 2006, 2742, 2571, 2767, 2142, 2008, 2009, 2010,
	2011, 2012, 0, 2014, 2015, 2016, 2017, 2018, 2019, 0,
	2021, 0, 2026, 2027, 2028, 0, 2749, 2246, 2330, -2,
	0, 0, 2755, 2326, 0, 2109, 2044, -2, -2, 2353,
	2332, 1815, 1816, 1817, 1818, 1819, -2, -2, 2785, 2048,
	2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	0, 2730, 2750, 2751, 2756, 2758, 2752, 2739, 2069, 2436,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1842, 1851, -2, -2, -2, -2, -2,
	-2, -2, 2743, 2744, 2761, 2764, 2770, 2775, 2776, 2748,
	2757, 2784, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793,
	2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 1843, -2,
	-2, -2, -2, 1593, 2612, 1596, 1220, 1594, 1578, 1580,
	0, 1582, 0, 0, 0, 1587, 1613, 1611, 0, 1662,
	1591, 1592, 1685, 1685, 1709, 0, 1690, 0, 1709, 1605,
	1736, 0, 1696, 2638, 2045, 2046, 0, 2336, 2331, -2,
	-2, 2782, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 611, 0, 617, 619, 0, 0, 0, 642,
	1615, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 423, 424, 2750, 0, 0, 0, 429, 0,
	431, 432, 433, 434, 435, 436, 437, 209, 2750, 519,
	544, 0, 209, 2750, 522, 209, 2750, 525, 0, 528,
	1338, 209, 2750, 531, 2297, 209, 2750, 534, 536, 2305,
	209, 2750, 540, 2312, 2310, 541, 0, 543, 229, 225,
	226, 227, 228, 1429, 1430, 1431, 1432, 0, 1459, 1339,
	664, 0, 690, 0, 694, 695, 2738, -2, 0, 2658,
	699, 700, -2, 702, 1463, 1467, 1468, 1469, 1470, 1471,
	0, 0, 0, 0, 1476, 0, 0, 0, 0, 691,
	692, 709, 710, 716, 719, 0, 818, 819, 820, 821,
	822, 71, 0, 2750, 1736, 73, 0, 2291, 2361, 2362,
	2363, 2364, 2365, 2783, 2803, 2804, 2805, 2806, 2807, 2808,
	2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818,
	2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828,
	2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838,
	2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848,
	2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858,
	2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868,
	2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878,
	2879, 2880, 2881, 2882, 2785, 77, 0, 2750, 82, 0,
	2750, 0, -2, 95, 0, 108, 0, 135, -2, -2,
	-2, 116, 0, 2750, 0, 2266, -2, 0, 221, 302,
	303, 304, 0, 1069, -2, 0, 1273, 1275, 1275, 0,
	-2, 0, 0, 0, 1022, 2263, 2268, 1023, 2287, 1024,
	2273, 0, 349, 350, 351, 352, 353, 0, 354, 2750,
	356, 357, 0, 359, 360, 2750, 362, 363, 0, 365,
	0, 367, 0, 261, 265, 2750, 314, 315, 2349, 2350,
	2357, 2358, 2359, 2360, 2750, 391, 393, 0, 395, 396,
	0, 398, 0, 0, 0, 402, -2, 418, 0, 415,
	405, 406, 408, 409, 410, 411, 412, 0, 458, 456,
	2302, 0, 0, -2, 2750, 0, 1066, 0, 0, 1318,
	-2, 0, 1266, 0, 1325, 2750, 1321, 0, -2, 0,
	1603, 2750, 1480, 1098, 1099, 1100, 1101, 1748, 485, 0,
	1511, 0, 1513, 0, 1532, 1742, 1685, 0, 0, 1747,
	0, -2, 604, 2319, -2, 554, 0, 555, 0, -2,
	0, 328, 0, 0, 1047, 1049, 1050, 1052, 1053, 1056,
	1057, 1058, 1059, 0, 1061, 1722, 280, 282, 0, 0,
	0, 1046, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 0, 0, 675, 0, 0, 824, 825, 0, 0,
	841, 842, 843, 0, 328, 2650, 2607, 2458, 850, 0,
	853, 856, -2, 0, 0, 0, 0, 860, 0, 865,
	866, 867, 0, -2, 0, 874, 876, 1030, 878, 0,
	0, 880, 0, 884, 0, 887, 0, 889, 0, 891,
	-2, -2, -2, 899, 900, -2, 905, -2, 0, 909,
	-2, 0, 912, 0, 915, -2, 0, 925, 921, 922,
	0, 0, 0, 0, 942, 943, 0, 952, 0, 955,
	956, 957, 0, 961, 962, 0, 964, 965, 966, 967,
	0, 2721, 2655, 2422, 0, 975, -2, 981, 983, 0,
	-2, 0, 999, 0, 1003, 0, 0, 1011, 0, 0,
	827, 0, 835, 836, 209, 1740, 1442, -2, 1444, 0,
	-2, 0, 655, 0, 658, 1635, 1561, 1558, 0, 1632,
	1633, 1562, 0, 0, 0, 1569, 0, 1608, 1609, 0,
	0, 0, 1548, 1549, 0, 0, 0, 0, 2148, 2149,
	2150, 2151, 2164, 2152, 2153, 2163, 2161, 2162, 2154, 2155,
	2160, 2174, 2175, 2165, 2166, 2156, 2169, 2167, 2168, 2170,
	2171, 2172, 2173, 0, 0, 2179, 0, 2157, 2158, 2159,
	2187, 0, 0, 2188, 0, 2190, 0, 2180, 2176, 2177,
	2178, 0, 1950, 1952, 2254, 0, 0, 0, 2186, 2181,
	2182, 1888, 1889, 1890, 1891, 1892, 1925, 1929, 1930, 0,
	0, 2005, 2251, 2250, 2007, 0, 0, 2202, 0, 2020,
	-2, 0, 2143, 2197, 0, 0, 2029, 2030, 2031, 0,
	0, 2202, 0, 0, 2245, 2041, 2042, 1880, 0, 0,
	2111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	1828, 0, 1830, 0, 1831, 1832, 1839, 1852, 0, 0,
	0, 0, 1856, 0, 0, 0, 0, 0, 0, 0,
	2226, -2, 0, 0, 0, 0, 1844, 0, 1595, 0,
	0, 1666, 2255, 2259, 2260, 1666, 1666, 0, 0, 2203,
	1733, 1733, 0, 0, 1728, 1728, 1728, 1726, 1709, 0,
	1709, 1719, 0, 1709, 1709, 0, -2, 1690, 0, 0,
	1719, 0, 1703, 592, 594, 596, 598, 599, 600, 602,
	1737, 1738, 0, 0, 0, 0, 2337, 0, 0, 0,
	0, 2309, 0, 0, 2322, 0, 0, 2296, 374, 0,
	0, 0, 2704, 2649, 0, -2, 622, 645, 1605, 0,
	2205, 1763, 1767, 0, 1769, 1770, 1771, 1772, 1773, 0,
	0, 1764, -2, 1840, 1842, 1863, 2354, 2355, 2356, 1823,
	1824, 1825, 1826, 1827, 1835, 1822, 1822, 1822, 1833, 1862,
	1854, 1862, 1858, 1808, 1809, 1810, 1845, 1846, 1847, 1848,
	0, 2704, 2649, 0, -2, 0, 632, 0, 0, 1543,
	419, 0, 426, 427, 428, 0, 515, 0, 207, 208,
	0, 209, 2750, 520, 0, 523, 0, 209, 2750, 2261,
	529, 0, 532, 0, 0, 538, 0, 0, 0, 0,
	0, 209, 1545, 0, 0, 0, 0, -2, 704, 712,
	713, 714, 0, 1465, 0, 1472, 733, 734, 735, 1474,
	1475, 0, 1477, 707, 736, 737, 738, 739, 740, 741,
	0, 2275, 2276, 2277, 2278, 2281, 2282, 0, 0, 705,
	726, 708, 0, 720, 117, 1415, 0, 0, 164, 0,
	1415, 1415, 0, 0, 0, 0, 192, 0, 1132, 0,
	0, 0, 0, 135, 149, 160, 129, 130, 131, 0,
	0, 0, 0, 0, 0, 83, 1242, 0, 1245, 0,
	0, 0, 0, 0, 0, 0, 1258, 0, 0, 0,
	0, 0, 97, 98, 0, 0, 103, 104, 0, 148,
	0, 0, 0, 0, 0, 1508, 0, 139, 135, 0,
	0, 134, 136, 119, 0, 0, 135, 150, 162, 0,
	196, 198, 1129, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 231, 0, 0, 0, 1267, 0, 0, 0,
	1602, 0, 0, 0, 0, 2750, 1413, 0, 1398, 0,
	1722, 2507, -2, -2, 280, 1722, 1021, 0, 0, 2337,
	2271, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	0, 394, 397, 399, 400, 401, 0, 1317, 0, 407,
	448, 1191, 2750, 0, 0, 475, 470, 0, 472, 0,
	0, 0, 1241, 2750, 1239, 2306, 0, 1264, 0, 1220,
	2750, 2304, 0, 0, 0, 1326, 2346, 1335, 1339, 1498,
	0, 487, 0, 1514, 1516, 0, 0, 1743, 0, 1745,
	1685, 1605, 0, 0, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 1060, 286, 0, 1721, 0, 0, 316,
	1722, 280, 2624, 1045, 328, 328, 1722, 677, 1722, 679,
	0, 0, 844, 845, 0, 328, 328, 328, 851, 852,
	854, 855, -2, -2, -2, -2, 857, 858, 949, 0,
	0, 0, 948, 868, 0, 870, 873, 877, 0, 1015,
	2633, 2649, 2704, 1028, 949, 2422, 949, 2422, 949, 2422,
	949, 949, 893, 937, 945, 904, 911, 0, 906, 910,
	913, 916, 0, 918, 926, 0, -2, 0, 929, 0,
	931, 0, 933, 949, 950, 953, 960, 963, 968, 969,
	970, 971, 2317, 972, 973, 974, -2, 978, 979, 0,
	990, 995, 996, 992, 0, 0, 0, 0, 0, 0,
	1006, 1007, 0, 0, 1014, 0, 837, 1259, 0, 1455,
	1635, 1561, 657, 1552, 1634, 1553, 1560, 1563, 0, 0,
	1565, 0, 1567, 0, 1630, 1631, 1638, 1639, 0, 1649,
	1650, 1642, 0, -2, 0, 0, 1645, 1646, 1571, 0,
	1588, 1589, 1590, 1619, 1622, 1354, 0, 2883, 1884, 1758,
	1885, 1886, 2290, 0, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, -2, -2, -2, -2, -2, -2,
	-2, -2, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, -2, -2, -2, 1926, 1927, 1928, -2,
	2189, 2191, 0, 2254, 0, -2, 0, -2, -2, -2,
	-2, 1947, 0, 1949, 1954, 1956, 1958, 0, 0, 0,
	0, 2253, 1968, 2237, 2238, 0, 0, 2145, 2146, 2147,
	1953, 0, 1972, 2252, 2249, 0, 0, 2183, 0, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178,
	2179, 2180, 0, 2201, 1618, 2033, 0, 0, 0, 0,
	2040, 2025, 2199, 0, 2198, 0, 0, 0, 2209, 0,
	2244, 2240, 0, 2288, 1879, 1866, 1867, 1868, 1869, 1870,
	1871, 1881, 0, 2285, 2323, 2329, 2119, 0, 0, 0,
	2070, 2071, 2072, 2073, 2074, 0, 2076, 2077, 0, 2079,
	2080, 0, 2082, 2083, 0, 2085, 2086, 2087, 2088, 2089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 0,
	0, 2091, 0, 2212, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 2093, 0, 2095, 2203, 2223, 0, 0,
	1973, 0, 0, 0, 0, 2143, 0, 2098, 2203, 2231,
	0, 0, 0, 0, 0, 2203, 0, 2236, 0, 2105,
	0, 2107, 1597, 0, 0, 1753, 0, 0, 0, 2258,
	1753, 1753, 0, 1661, 0, 0, 1729, 1730, 1731, 1732,
	0, 0, 1733, 0, 1723, 1727, 1724, 1725, 1719, 1682,
	0, 0, 2292, 1719, 1688, 1718, 0, 1220, 1708, 1719,
	1719, 0, -2, 1692, 1709, 0, 0, 593, 595, 597,
	601, 603, 0, 0, 1618, -2, 0, -2, 330, 1219,
	0, 0, 0, 0, 0, 0, 612, 614, 0, 0,
	535, 0, 0, 628, 0, 606, 0, 609, 0, 1754,
	1757, 0, 0, 1768, 1774, 1775, 0, -2, 0, 0,
	1864, 0, 0, 0, 0, 0, 640, 0, 643, 0,
	0, 0, 430, 545, 209, 517, 0, 209, 209, 526,
	0, 0, 209, 537, 209, 2313, 209, 2311, 230, 542,
	1544, 242, 0, 693, 0, 1464, 1473, 0, 730, 0,
	732, 0, 2279, 2283, 2280, 2284, 0, 721, 0, 0,
	0, 0, 1414, 0, 1361, 0, 0, 168, 2750, 0,
	211, 0, 0, 1184, 2298, 0, 1174, 0, 0, 2444,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 132, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 1243, 1244, 1246,
	1253, 1255, 0, 1249, 2286, 0, 0, 1250, 0, 1252,
	1254, 1256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 1276, 0, 0, 1277, 1278, 1486, 1487, 0,
	1507, 1508, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 2265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1269, 0,
	1313, 1311, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 0, 0, 0, 0, -2, 1271, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	319, 2264, 2274, 0, 1054, 1055, 355, 358, 361, 364,
	248, 0, 0, 403, 0, 0, 1104, 1079, 0, 0,
	457, 328, 0, 0, 471, 475, 2315, 1064, 1237, 1240,
	0, 1220, 2750, 1287, 0, 0, 0, 0, 0, 0,
	1324, 0, 0, 2750, 2293, 2345, 2346, 1500, 1508, 0,
	1753, 0, 1530, 1517, 0, 0, 0, 1530, 1534, 1535,
	1537, 1538, 0, 0, 1744, 1750, 553, 605, 1605, 1605,
	328, 326, 2574, 324, 321, 323, 0, 0, 1520, 1522,
	0, 0, 0, 274, 0, 283, 1722, 281, 0, 286,
	0, 0, 0, 469, 676, 681, 839, 0, 328, 847,
	848, 849, 895, 939, 947, 994, 859, 861, 862, 863,
	0, 0, 0, 1029, 1025, 1026, 1027, 879, 949, 882,
	949, 885, 949, 888, 890, 908, 914, 927, 920, 928,
	0, 0, 0, 941, 958, 0, 977, 0, 0, 0,
	0, 0, 0, 0, 1000, 1001, 1002, 1004, 1009, 1008,
	1013, 838, 1741, 1556, 1557, 1559, 0, 1568, 0, 0,
	1644, -2, -2, 1643, 1647, 1648, -2, -2, -2, -2,
	1564, 0, 1573, 1570, 0, 1629, 1352, 1353, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1969, 0, -2,
	1948, 1951, 1955, 1957, 1959, 0, 0, 0, 0, 0,
	0, 2192, 0, 2194, 1970, 2247, 2250, 2185, 0, 2141,
	0, 0, 1617, 1618, 1618, 0, 2039, 0, 2200, 0,
	2207, 2208, 0, 2032, 0, 2241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 0, 0, 0, 0,
	2075, 2078, 2081, 2084, 0, 0, 0, 0, 2064, 0,
	0, 0, 2068, 1834, 1820, 0, 1862, 1860, 1861, 1855,
	1862, 1859, 1812, 0, 1811, 0, 2090, 0, 2092, 2094,
	0, 0, 2096, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1976, 1977, 1978,
	1998, 2097, 2229, 2230, 0, 0, 0, 0, 0, 0,
	2103, 0, 2235, 2104, 2106, 1605, 0, 1598, 0, 1663,
	1652, 1752, 0, 2256, 1722, 1665, 1667, 2257, 2295, 1652,
	1652, 0, 2204, 0, 0, 1713, 0, 0, 0, 1715,
	1686, 0, 0, 1680, 0, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1687, 1220, 1717, 1689, 1693, 2323, 0, 1719,
	0, 1704, 0, 1706, 1739, 0, 1698, 1701, 0, 0,
	2338, 1753, 0, 368, 375, 376, 369, 370, 371, 372,
	0, 1401, 0, 0, 0, 0, 0, 2206, 0, 1759,
	0, 1765, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 0, 1542, 425, 516, 209, 521, 524, 2262, 209,
	530, 533, 539, 238, 0, 689, -2, 728, 729, 731,
	0, 727, 165, 1415, 0, 0, 1357, 1359, 1363, 1369,
	1372, 0, 170, 2750, 182, 0, 2750, 0, 1148, 0,
	0, 0, 0, 0, 0, 1417, 0, 0, 2750, 209,
	2750, 209, 186, 188, 191, 0, 195, 193, 0, 1136,
	0, 0, 1139, 118, 1415, 0, 0, 121, 125, 137,
	0, 0, 0, 147, 0, 0, 0, 1374, 1378, 1386,
	0, 0, 0, 1247, 1248, 1251, 1257, 84, 0, 0,
	0, 1382, 1384, 1390, 96, 99, 2750, 2307, 101, 2750,
	0, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 123, 127, 138, 0, 1392, 120, 0, 224, 0,
	0, 214, 209, 2750, 0, 216, 0, 217, 218, 232,
	0, 0, 0, 1067, 1068, 1312, 0, 1262, 1263, 0,
	1274, 1268, 0, 0, 0, 0, 0, 1394, 1395, 0,
	0, 0, 1413, 1410, 1722, 244, 0, 1722, 252, 0,
	2270, 0, 266, 390, 0, 0, 0, 0, 1103, 1202,
	1105, 1107, 1108, 1109, 211, 0, 2346, 1174, 2496, 2346,
	0, 0, 1074, 0, 0, 0, 463, 459, 0, 468,
	474, 473, 479, -2, 0, 0, 0, 0, -2, 0,
	0, 1328, 1322, 1323, 0, 0, 0, 0, 2750, 1502,
	1508, 0, 1603, 1618, 486, 1509, 1530, 0, 0, 0,
	1519, 1515, 1512, 1753, 0, 0, 0, 0, 0, 1746,
	1749, 556, 557, 305, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 0, 284, 0, 287, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 286, 317, 276, 1722, 0, 0, 678, 0, 0,
	846, 0, 869, 872, 881, 883, 886, 930, 932, 949,
	959, 984, 2294, 985, 1126, 0, 1126, 0, 0, 1005,
	1566, 0, 1641, 1572, 1623, 1624, 0, 1354, 0, 1887,
	1932, 0, 0, -2, 0, 0, 1936, 0, 0, 0,
	-2, 0, 0, 0, 2193, 2195, 0, 2249, 2184, 2034,
	0, 0, 0, 2038, 2022, 2023, 0, 2144, 2210, 2239,
	2243, 0, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 0,
	2289, 2324, 2328, 2117, 2118, 2122, 2303, 0, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	1857, 0, 0, 2211, 2222, 2224, 1974, 1975, 1979, 1980,
	1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, -2, -2,
	-2, 1992, 1993, 1994, -2, -2, -2, 1999, 0, 0,
	0, 2225, 2227, 2228, 2232, 2233, 0, 2100, 2101, 2102,
	2234, 0, 1605, 1599, 1660, 0, 1751, 1664, 0, 1660,
	1660, 1612, 1711, 0, 0, 1735, 0, 1683, 0, 1684,
	0, 0, 1716, 0, 1691, 1694, 1695, 1705, 0, 1697,
	0, 1700, 0, 2034, -2, 329, 331, 333, 0, 336,
	337, 0, 0, 0, 621, 0, 1401, 1401, 0, 623,
	607, 0, 0, 1761, 0, 0, 1837, 1841, 1865, 634,
	636, 0, 0, 2704, 2649, 0, 633, 518, 527, 240,
	0, 1720, 0, 0, 0, 0, 0, 0, 210, 0,
	1183, 0, 1146, 0, 0, 1173, 0, 0, 1189, 172,
	173, 174, 0, 0, 0, 0, 184, 0, 0, 180,
	0, 190, 194, 1133, 0, 0, 0, 0, 1362, 0,
	0, 0, 144, 145, 146, 0, 151, 0, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	1493, 0, 1483, 141, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 1351, 234, 0, 0, 0, 0,
	0, 1261, 1315, 1316, 1270, 1375, 1379, 1387, 0, 0,
	0, 0, 0, 648, 1412, 0, 252, 250, 0, 253,
	0, 256, 257, 0, 0, 252, 246, 0, 0, 0,
	1220, 404, 1077, 1190, 0, 0, 1192, 1110, 1114, 0,
	2346, 2346, 0, 2300, 0, 1075, 0, 0, 1191, 455,
	0, 462, 0, 476, 0, 0, 1241, 0, 0, 1265,
	1290, 1220, 0, 1327, 1329, 0, 1337, 0, 0, 0,
	1504, 1508, 0, 1497, 1498, 1637, 1510, 1528, -2, 0,
	0, 1618, 1536, 1533, 1539, 1540, 0, 325, 0, 320,
	322, 0, 308, 0, 1521, 1523, 0, 1048, 1051, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 286, 1722,
	312, 0, 840, 864, 940, 986, 1125, 0, 0, 988,
	0, 0, 1640, 1627, 1628, 1625, 1354, 1934, 1938, 0,
	0, 0, 1940, -2, 0, 1962, -2, -2, 2196, 2248,
	2013, 1618, 2035, 2037, 2024, 2242, 1882, 0, 2124, 2121,
	0, 2108, 0, 2059, 2060, 0, 0, 2063, 2065, 2066,
	2067, 1821, 1814, 1813, 2221, 0, 0, 0, 0, 2099,
	1600, 0, 2113, 0, 0, 1668, 2113, 2113, 1712, 0,
	1714, 1681, 1669, 0, 1678, 0, 2324, 1707, 1699, 0,
	0, 334, 0, 338, 339, 373, 0, 624, 625, 0,
	0, 1755, 1760, 0, 1766, 1836, 0, 0, 0, 0,
	0, 241, 166, 167, 1366, 1370, 1367, 0, 169, 0,
	0, 1147, 0, 1150, 0, 0, 0, 0, 1157, 1174,
	0, 0, 0, 0, 0, 0, 1176, 0, 1175, 0,
	0, 1206, 0, 1342, 1349, 0, -2, 0, 0, 0,
	176, 200, 0, 0, 0, 0, 203, 1416, 178, 0,
	0, 209, 209, 0, 0, 1358, 1360, 1373, 0, 0,
	0, 0, 154, 0, 0, 1376, 1380, 1388, 1383, 1385,
	1391, 0, 102, 0, 1494, 0, 140, 0, 0, 0,
	1393, 222, 223, 0, 209, 0, 209, 215, 209, 1351,
	0, 0, 0, 0, 0, 0, 0, 1396, 1397, 243,
	0, 0, 0, 0, 0, 245, 318, 252, 392, 0,
	1135, 0, 1202, 1194, 1195, 1196, 0, 1106, 1201, 1203,
	0, 0, 1111, 0, 0, 0, 0, 1091, 1076, 0,
	1087, 0, 0, 1104, 1079, 0, 460, 477, 0, 480,
	0, 483, 1065, 1238, 1282, 1220, 1285, 0, 0, 1319,
	0, 0, 0, 0, 0, 0, 0, 1506, 1508, 0,
	1499, 1500, 1530, 1636, 0, 0, 0, 1518, 1637, 0,
	327, 328, 0, 328, 288, 0, 289, 290, 291, 298,
	299, 300, 277, 278, 680, 682, 0, 0, 688, 1124,
	0, 0, 0, 0, 1626, 1942, -2, -2, 1963, 0,
	2325, 2327, 1618, 0, 2110, 1620, 0, 0, -2, 0,
	0, 0, 1601, 1584, 0, 1659, 1651, 1653, 1655, 2636,
	2417, 2749, 1585, 1586, 1734, 0, 0, 1702, 335, 1400,
	626, 0, 0, 1762, 0, 631, 0, 0, 0, 0,
	0, 1368, 171, 0, 0, 1151, 1152, 2299, 1154, 0,
	1156, 1158, 1159, 1160, 0, 1163, 0, 2348, 0, 1168,
	1171, 1172, 0, 0, 1185, 1207, 0, 1216, 0, 1344,
	1354, 1348, 0, 1346, 1218, 0, 175, 202, 177, 204,
	199, 0, 1351, 0, 179, 189, 0, 0, 122, 0,
	0, 2411, 157, 155, 153, 100, 1355, 143, 0, 124,
	0, 224, 233, 1350, 235, 219, 209, 0, 1377, 1381,
	1389, 0, 1404, 1405, 1406, 1407, 0, 0, 0, 0,
	254, 0, 255, 258, 259, 0, 0, 1079, 1134, 1078,
	1193, 0, 1204, 1205, 0, 0, 0, 0, 0, 0,
	1081, 0, 1080, 0, 0, 0, 0, 0, 461, 464,
	0, 467, 0, 0, 0, 0, 0, 1289, 0, 1330,
	1328, 0, 1336, 0, 0, 0, 1482, 0, 0, 1501,
	1502, 484, 1524, 0, 0, 1530, 1541, 307, 0, 310,
	285, 0, 684, 0, 686, 0, 987, 989, 0, 0,
	2036, 2128, 0, 0, 2061, 2062, -2, 0, 2002, 2112,
	2114, 0, 0, 0, 0, 0, 1670, 1679, 1401, 1756,
	638, 635, 637, 0, 1364, 0, 1371, 211, 1149, 1153,
	0, 0, 0, 1164, 1224, 0, 0, 1241, 1241, 1177,
	0, 0, 1210, 1211, 1131, 0, 1212, 1213, 1214, 1343,
	1629, 1349, 1187, 0, 0, 201, 206, 0, 0, 0,
	0, 0, 0, 142, 0, 213, 236, 1351, 0, 1408,
	1409, 0, 0, 251, 270, 0, 1283, 1081, 0, 1112,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1113,
	1218, 0, 0, 1182, 1089, 0, 1092, 0, 1088, 1085,
	1086, 1077, 0, 465, 466, 481, 0, 482, 0, 0,
	1290, 0, 0, 1337, 0, 0, 1489, 1481, 1508, 1503,
	1504, 1753, 1527, 1531, 0, 683, 0, 0, 997, 998,
	0, 0, 0, 0, 2123, 1621, 2003, 0, 0, 1654,
	1656, 1657, 1658, 627, 0, 1365, 183, 0, 0, 1162,
	1229, 0, 0, 0, 0, 0, 1178, 1208, 1209, 1206,
	1130, 0, 1347, 1345, 0, 1220, 181, 0, 1218, 0,
	1140, 0, 0, 1143, 0, 0, 158, 2411, 156, 0,
	209, 1401, 209, 0, 273, 0, 264, 262, 263, 1073,
	0, 1198, 1200, 1216, 1218, 1131, 0, 1093, 1135, 1091,
	478, 1284, 1288, 1286, 1320, 1218, 0, 1216, 0, 1496,
	1508, 1490, 1491, 0, 1506, 0, 328, 685, 687, 2120,
	2140, 2129, -2, 2707, 2418, 0, 2140, 2140, 2115, 2116,
	0, 0, 0, 1165, 1225, 1226, 0, 1221, 1222, 1223,
	2347, 1166, 1167, 1169, 1170, 1753, 0, 0, 1224, 205,
	187, 1137, 0, 0, 1138, 0, 0, 161, 0, 163,
	237, 1399, 1402, 0, 260, 0, 0, 1070, 1072, 1197,
	0, 1131, 1216, 1079, 0, 0, 0, 1079, 1081, 1216,
	0, 1131, 0, 1485, 1495, 0, 1505, 1482, 0, 309,
	2125, 0, 0, 2131, 2132, 2133, 2134, 2135, 2126, 2127,
	639, 1155, 0, 1227, 0, 1228, 0, 0, 0, 1186,
	1215, 0, 1229, 1141, 0, 1144, 0, 159, 0, 0,
	268, 269, 1199, 1079, 1131, 1753, 0, 1082, 0, 1084,
	1081, 1090, 1131, 0, 1079, 0, 1478, 1484, 1488, 2308,
	1489, 1525, 0, 0, 2137, 2138, 0, 0, 0, 1230,
	0, 1233, 1234, 0, 1231, 0, 1206, 0, 0, 209,
	0, 1753, 1079, 1181, 1083, 1073, 1079, 1218, 1753, 1216,
	1496, 0, 2136, 2139, 2130, 1161, 1232, 1235, 1236, 1217,
	1188, 0, 0, 1403, 271, 0, 1179, 1753, 1071, 1753,
	1216, 1333, 1131, 1485, 1753, 1128, 0, 0, 1180, 1331,
	1131, 1079, 1479, 1526, 1142, 1127, 0, 272, 1079, 1753,
	0, 1753, 1334, 0, 1332, 1128, 1145,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 591, 3, 597, 592, 3,
	603, 604, 595, 593, 608, 594, 605, 596, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 611, 3,
	583, 585, 584, 588, 607, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 601, 3, 602, 598, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 609, 590, 610, 586,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 587, 57926, 589, 57927, 599, 57928, 600, 57929, 606,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1510
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1533
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1633
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1652
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1656
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1660
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1690
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1701
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1713
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1757
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1802
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1834
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1858
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1867
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1878
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1888
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1896
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1932
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1943
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1976
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1996
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2038
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2047
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2058
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2066
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2077
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2087
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2097
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2106
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2117
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 155:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2123
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2149
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2154
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2221
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2231
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2245
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2281
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2289
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2302
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2308
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2359
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = nil
		}
	case 201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = true
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = false
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2435
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2542
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2546
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2721
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2730
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2738
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2765
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2883
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2892
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3059
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3070
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplemented(sqllex, "alter function")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3138
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3179
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3188
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3194
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3199
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3204
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3208
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3228
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3232
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3236
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3248
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = nil
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3312
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3326
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3346
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3400
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3489
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3508
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3526
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3529
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3533
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3538
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3557
		{
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "CREATE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3571
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3575
		{
			return unimplemented(sqllex, "create access method")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3576
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			return unimplemented(sqllex, "create cast")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3578
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3580
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3581
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3582
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3584
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			return unimplemented(sqllex, "create publication")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3588
		{
			return unimplemented(sqllex, "create rule")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			return unimplemented(sqllex, "create server")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3596
		{
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3597
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3600
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3601
		{
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3604
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3605
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3608
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3609
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3610
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3612
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3614
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3615
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3616
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3617
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3619
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplemented(sqllex, "drop server")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3630
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3632
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3633
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3635
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3702
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3729
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3752
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3762
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3787
		{

			sqlVAL.union.val = nil
		}
	case 476:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3804
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "DELETE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3873
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3874
		{
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3885
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3886
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3900
		{
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "DROP")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3943
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3958
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3998
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4006
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4014
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4047
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4100
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4105
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4164
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4166
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4174
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4182
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4190
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4198
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "DELETE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "INSERT")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "DELETE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "INSERT")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4252
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4253
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4257
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4279
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4287
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4291
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4312
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4320
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4353
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4403
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4419
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			return helpWith(sqllex, "GRANT")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4515
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4518
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4528
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4556
		{
			return helpWith(sqllex, "RESET")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "RESET")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "USE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4602
		{
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4603
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4607
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "USE")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4644
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4670
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4724
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4753
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4755
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4775
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4809
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4828
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{
			return unimplemented(sqllex, "set from current")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4836
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4855
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4871
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4876
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = tree.Low
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = tree.Normal
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = tree.High
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5008
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5009
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5013
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5031
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5033
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5037
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5052
		{
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5053
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5056
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5060
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5065
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5070
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.str = "client_encoding"
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5113
		{
			sqlVAL.str = "timezone"
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5142
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5205
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5214
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5222
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5253
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5264
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5287
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5298
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5314
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5367
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5386
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5408
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5419
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5424
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5435
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5440
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = true
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = true
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = false
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5476
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5477
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5478
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5495
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5521
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5522
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5538
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5546
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5554
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5590
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5595
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5597
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5601
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5604
		{
			sqlVAL.union.val = true
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = false
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5616
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5621
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5652
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5662
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5667
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = true
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = false
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5685
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5699
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5706
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5710
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5714
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5725
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5747
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5752
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5757
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5777
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5782
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5787
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5792
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5808
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5821
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5826
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5837
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5848
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5866
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5874
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5895
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5900
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5905
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5909
		{
		}
	case 997:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5918
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5932
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5941
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5946
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5953
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6022
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6035
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6168
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6211
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6220
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6296
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6324
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6337
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6369
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6377
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6388
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6424
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6452
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6488
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6503
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6531
		{

			sqlVAL.union.val = nil
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6537
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.str = ""
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6547
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = nil
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6570
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6574
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6600
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6613
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6627
		{
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6628
		{
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6629
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6684
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6710
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6721
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6724
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6727
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6728
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.str = ""
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6866
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6970
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7015
		{

			sqlVAL.union.val = true
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = false
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7025
		{
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7032
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7128
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7139
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7156
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7166
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7181
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7246
		{
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7247
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7248
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7249
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7250
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7408
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7417
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7425
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7436
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7449
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7459
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7461
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7463
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7465
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7468
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7471
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7473
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7486
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7490
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7517
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7551
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.str = ""
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = true
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{

			sqlVAL.union.val = true
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = false
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7600
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7614
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7626
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7638
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7648
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7658
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7662
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = true
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = true
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7762
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = nil
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7781
		{
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7782
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7807
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7809
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7811
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7813
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7815
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7817
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7852
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7869
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7887
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7903
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7919
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7923
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = false
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = true
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = false
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = true
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = false
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7977
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7983
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7989
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7997
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.str = ""
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.str = ""
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8056
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8062
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8287
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8293
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8305
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8311
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8325
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8331
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8390
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = true
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = false
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = tree.Types
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8450
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8454
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8478
		{
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8479
		{
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8482
		{
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8483
		{
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8512
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8521
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8542
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8550
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8571
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8579
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8590
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8594
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8595
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8596
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8615
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8620
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8633
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8638
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8647
		{
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8649
		{
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8666
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8669
		{
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8670
		{
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8698
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8711
		{
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8713
		{
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8717
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8806
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.str = ""
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8829
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8834
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8851
		{

		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8866
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.str = ""
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.str = ""
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.str = ""
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.str = ""
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8921
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8934
		{
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8935
		{
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8964
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8982
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8986
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8995
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9044
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9071
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9075
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9113
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9145
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9166
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9181
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9325
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9360
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9361
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9362
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9467
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9483
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = true
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = false
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9536
		{
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9537
		{
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = nil
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9550
		{
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9551
		{
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = true
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = false
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = false
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = true
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9580
		{
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9581
		{
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9584
		{
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9585
		{
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9626
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9638
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9643
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9669
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9702
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9757
		{
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9762
		{
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9796
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9797
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9798
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9828
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9830
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9845
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9867
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9872
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9877
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9898
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9914
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9926
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9945
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9987
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9997
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10032
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10043
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10073
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10106
		{
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10108
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = nil
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = true
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = false
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.str = tree.AstFull
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.str = tree.AstRight
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.str = tree.AstInner
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10225
		{
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10226
		{
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.str = tree.AstHash
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.str = ""
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10295
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10300
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10318
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10330
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10340
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = true
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = false
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = true
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = false
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10389
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10402
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10410
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10411
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10429
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10431
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10439
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10452
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10459
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10508
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10520
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10521
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = types.Geography
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10570
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10578
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10604
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10612
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = nil
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = types.Int2
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = types.Int
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = types.Float4
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = types.Float
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10655
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10663
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10671
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = types.Bool
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10685
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = types.Float
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10704
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10710
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10732
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = types.String
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = true
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = false
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = types.Date
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10781
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10789
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10803
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10812
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10820
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10837
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = true
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = false
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = false
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = types.Interval
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10861
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10945
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10960
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = nil
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10990
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11050
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11199
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11207
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11328
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11394
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11416
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11524
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11532
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11628
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11633
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11651
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11659
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11668
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11683
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11717
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11728
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11729
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11744
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11753
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11819
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11944
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11949
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11958
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11967
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11976
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11985
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11990
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11995
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12000
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12005
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12010
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12019
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12020
		{
			return unimplemented(sqllex, "treat")
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12041
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12046
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12093
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.str = ""
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12182
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12195
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12259
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12263
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12292
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12352
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12368
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12394
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12548
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12594
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12604
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12630
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12642
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12682
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12686
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12708
		{
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12709
		{
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12713
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12723
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12732
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12736
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12758
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12781
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12789
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12812
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12821
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12829
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12833
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12839
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12858
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12862
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12874
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12878
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12887
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12898
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12907
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12915
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12932
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13017
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13029
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13035
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13039
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13047
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13103
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13107
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13124
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13151
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13164
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13171
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.str = ""
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13202
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13206
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
